{"sha": "5a03532ea94890c9c4fd77819edaab4fa9d7376c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMDM1MzJlYTk0ODkwYzljNGZkNzc4MTllZGFhYjRmYTlkNzM3NmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-11-29T06:44:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-11-29T06:44:12Z"}, "message": "Auto merge of #56245 - mark-i-m:stabilize_ques_kleene, r=alexcrichton\n\nStabilize feature `macro_at_most_once_rep`\n\na.k.a. `?` Kleene operator :tada:\n\ncc #48075\n\nr? @Centril", "tree": {"sha": "23a05f94f9a17ef6da7854a31054f21bdf9a3147", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23a05f94f9a17ef6da7854a31054f21bdf9a3147"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a03532ea94890c9c4fd77819edaab4fa9d7376c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a03532ea94890c9c4fd77819edaab4fa9d7376c", "html_url": "https://github.com/rust-lang/rust/commit/5a03532ea94890c9c4fd77819edaab4fa9d7376c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a03532ea94890c9c4fd77819edaab4fa9d7376c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a49316ddc99d9d595193557fc899f6c52e4d9af9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a49316ddc99d9d595193557fc899f6c52e4d9af9", "html_url": "https://github.com/rust-lang/rust/commit/a49316ddc99d9d595193557fc899f6c52e4d9af9"}, {"sha": "5d7717360c8f343f70a33455029355f00e39dea2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d7717360c8f343f70a33455029355f00e39dea2", "html_url": "https://github.com/rust-lang/rust/commit/5d7717360c8f343f70a33455029355f00e39dea2"}], "stats": {"total": 311, "additions": 32, "deletions": 279}, "files": [{"sha": "251fc7209122c8e0d3df4c36c2219a61c713a8a5", "filename": "src/doc/unstable-book/src/language-features/macro-at-most-once-rep.md", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a49316ddc99d9d595193557fc899f6c52e4d9af9/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fmacro-at-most-once-rep.md", "raw_url": "https://github.com/rust-lang/rust/raw/a49316ddc99d9d595193557fc899f6c52e4d9af9/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fmacro-at-most-once-rep.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fmacro-at-most-once-rep.md?ref=a49316ddc99d9d595193557fc899f6c52e4d9af9", "patch": "@@ -1,22 +0,0 @@\n-# `macro_at_most_once_rep`\n-\n-NOTE: This feature is only available in the 2018 Edition.\n-\n-The tracking issue for this feature is: #48075\n-\n-With this feature gate enabled, one can use `?` as a Kleene operator meaning \"0\n-or 1 repetitions\" in a macro definition. Previously only `+` and `*` were allowed.\n-\n-For example:\n-\n-```rust,ignore\n-#![feature(macro_at_most_once_rep)]\n-\n-macro_rules! foo {\n-    (something $(,)?) // `?` indicates `,` is \"optional\"...\n-        => {}\n-}\n-```\n-\n-------------------------\n-"}, {"sha": "03ea392c863073cd53633ebd6400b051ebeedcc9", "filename": "src/doc/unstable-book/src/language-features/plugin.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -181,7 +181,6 @@ that warns about any item named `lintme`.\n ```rust,ignore\n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n-#![feature(macro_at_most_once_rep)]\n \n extern crate syntax;\n "}, {"sha": "726e891df0ccf2f4e4c63d4dee08121594785f5d", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -93,7 +93,6 @@\n #![feature(never_type)]\n #![feature(nll)]\n #![feature(exhaustive_patterns)]\n-#![feature(macro_at_most_once_rep)]\n #![feature(no_core)]\n #![feature(on_unimplemented)]\n #![feature(optin_builtin_traits)]"}, {"sha": "9ae59242fbfa5732f6dc3fc0200c3a43114b3b1a", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -67,7 +67,6 @@\n #![feature(integer_atomics)]\n #![feature(test)]\n #![feature(in_band_lifetimes)]\n-#![feature(macro_at_most_once_rep)]\n #![feature(crate_visibility_modifier)]\n #![feature(transpose_result)]\n "}, {"sha": "71efc5654eff3063499e9fa9a5be126e866193d6", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -29,7 +29,6 @@\n #![feature(nll)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n-#![feature(macro_at_most_once_rep)]\n \n #[macro_use]\n extern crate syntax;"}, {"sha": "ee99f7465b905bf3d7b3cdbc9de6663698aff23b", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -14,7 +14,6 @@\n \n #![feature(box_patterns)]\n #![feature(libc)]\n-#![feature(macro_at_most_once_rep)]\n #![feature(nll)]\n #![feature(proc_macro_internals)]\n #![feature(proc_macro_quote)]"}, {"sha": "edc431be3694ba020f9365b6aea8480dd3ba3e3b", "filename": "src/libsyntax/ext/tt/quoted.rs", "status": "modified", "additions": 13, "deletions": 45, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -11,13 +11,13 @@\n use ast::NodeId;\n use early_buffered_lints::BufferedEarlyLintId;\n use ext::tt::macro_parser;\n-use feature_gate::{self, emit_feature_err, Features, GateIssue};\n+use feature_gate::Features;\n use parse::{token, ParseSess};\n use print::pprust;\n use symbol::keywords;\n use syntax_pos::{edition::Edition, BytePos, Span};\n use tokenstream::{self, DelimSpan};\n-use {ast, attr};\n+use ast;\n \n use rustc_data_structures::sync::Lrc;\n use std::iter::Peekable;\n@@ -566,32 +566,17 @@ fn parse_sep_and_kleene_op_2018<I>(\n     input: &mut Peekable<I>,\n     span: Span,\n     sess: &ParseSess,\n-    features: &Features,\n-    attrs: &[ast::Attribute],\n+    _features: &Features,\n+    _attrs: &[ast::Attribute],\n ) -> (Option<token::Token>, KleeneOp)\n where\n     I: Iterator<Item = tokenstream::TokenTree>,\n {\n     // We basically look at two token trees here, denoted as #1 and #2 below\n     let span = match parse_kleene_op(input, span) {\n         // #1 is a `?` (needs feature gate)\n-        Ok(Ok((op, op1_span))) if op == KleeneOp::ZeroOrOne => {\n-            if !features.macro_at_most_once_rep\n-                && !attr::contains_name(attrs, \"allow_internal_unstable\")\n-            {\n-                let explain = feature_gate::EXPLAIN_MACRO_AT_MOST_ONCE_REP;\n-                emit_feature_err(\n-                    sess,\n-                    \"macro_at_most_once_rep\",\n-                    op1_span,\n-                    GateIssue::Language,\n-                    explain,\n-                );\n-\n-                op1_span\n-            } else {\n-                return (None, op);\n-            }\n+        Ok(Ok((op, _op1_span))) if op == KleeneOp::ZeroOrOne => {\n+            return (None, op);\n         }\n \n         // #1 is a `+` or `*` KleeneOp\n@@ -600,24 +585,12 @@ where\n         // #1 is a separator followed by #2, a KleeneOp\n         Ok(Err((tok, span))) => match parse_kleene_op(input, span) {\n             // #2 is the `?` Kleene op, which does not take a separator (error)\n-            Ok(Ok((op, op2_span))) if op == KleeneOp::ZeroOrOne => {\n+            Ok(Ok((op, _op2_span))) if op == KleeneOp::ZeroOrOne => {\n                 // Error!\n-\n-                if !features.macro_at_most_once_rep\n-                    && !attr::contains_name(attrs, \"allow_internal_unstable\")\n-                {\n-                    // FIXME: when `?` as a Kleene op is stabilized, we only need the \"does not\n-                    // take a macro separator\" error (i.e. the `else` case).\n-                    sess.span_diagnostic\n-                        .struct_span_err(op2_span, \"expected `*` or `+`\")\n-                        .note(\"`?` is not a macro repetition operator\")\n-                        .emit();\n-                } else {\n-                    sess.span_diagnostic.span_err(\n-                        span,\n-                        \"the `?` macro repetition operator does not take a separator\",\n-                    );\n-                }\n+                sess.span_diagnostic.span_err(\n+                    span,\n+                    \"the `?` macro repetition operator does not take a separator\",\n+                );\n \n                 // Return a dummy\n                 return (None, KleeneOp::ZeroOrMore);\n@@ -638,13 +611,8 @@ where\n     };\n \n     // If we ever get to this point, we have experienced an \"unexpected token\" error\n-\n-    if !features.macro_at_most_once_rep && !attr::contains_name(attrs, \"allow_internal_unstable\") {\n-        sess.span_diagnostic.span_err(span, \"expected `*` or `+`\");\n-    } else {\n-        sess.span_diagnostic\n-            .span_err(span, \"expected one of: `*`, `+`, or `?`\");\n-    }\n+    sess.span_diagnostic\n+        .span_err(span, \"expected one of: `*`, `+`, or `?`\");\n \n     // Return a dummy\n     (None, KleeneOp::ZeroOrMore)"}, {"sha": "3bc349170514cbc8f2146695b1d74a8fc0a180a8", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -393,9 +393,6 @@ declare_features! (\n     // `extern` in paths\n     (active, extern_in_paths, \"1.23.0\", Some(55600), None),\n \n-    // Use `?` as the Kleene \"at most one\" operator\n-    (active, macro_at_most_once_rep, \"1.25.0\", Some(48075), None),\n-\n     // Infer static outlives requirements; RFC 2093\n     (active, infer_static_outlives_requirements, \"1.26.0\", Some(54185), None),\n \n@@ -689,6 +686,8 @@ declare_features! (\n     (accepted, extern_crate_item_prelude, \"1.31.0\", Some(55599), None),\n     // Allows use of the :literal macro fragment specifier (RFC 1576)\n     (accepted, macro_literal_matcher, \"1.31.0\", Some(35625), None),\n+    // Use `?` as the Kleene \"at most one\" operator\n+    (accepted, macro_at_most_once_rep, \"1.32.0\", Some(48075), None),\n );\n \n // If you change this, please modify src/doc/unstable-book as well. You must\n@@ -1427,9 +1426,6 @@ pub const EXPLAIN_DERIVE_UNDERSCORE: &'static str =\n pub const EXPLAIN_UNSIZED_TUPLE_COERCION: &'static str =\n     \"unsized tuple coercion is not stable enough for use and is subject to change\";\n \n-pub const EXPLAIN_MACRO_AT_MOST_ONCE_REP: &'static str =\n-    \"using the `?` macro Kleene operator for \\\"at most one\\\" repetition is unstable\";\n-\n struct PostExpansionVisitor<'a> {\n     context: &'a Context<'a>,\n }"}, {"sha": "ca9c5ad7b600eea926abe93e460db50eb867ef25", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -20,7 +20,6 @@\n        test(attr(deny(warnings))))]\n \n #![feature(crate_visibility_modifier)]\n-#![feature(macro_at_most_once_rep)]\n #![feature(nll)]\n #![feature(rustc_attrs)]\n #![feature(rustc_diagnostic_macros)]"}, {"sha": "fc53031e7f22662f8e442cd8bcccb9bc86e9d6ea", "filename": "src/test/compile-fail-fulldeps/auxiliary/lint_for_crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_for_crate.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -12,7 +12,6 @@\n \n #![feature(plugin_registrar, rustc_private)]\n #![feature(box_syntax)]\n-#![feature(macro_at_most_once_rep)]\n \n #[macro_use] extern crate rustc;\n extern crate rustc_plugin;"}, {"sha": "f697642f8431dadcd3033aaaa41cc2623c8ffb26", "filename": "src/test/compile-fail-fulldeps/auxiliary/lint_group_plugin_test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -12,7 +12,6 @@\n \n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n-#![feature(macro_at_most_once_rep)]\n \n // Load rustc as a plugin to get macros\n #[macro_use]"}, {"sha": "8647797270f9a841f5092b974faf0ec745509cbb", "filename": "src/test/compile-fail-fulldeps/auxiliary/lint_plugin_test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_plugin_test.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -12,7 +12,6 @@\n \n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n-#![feature(macro_at_most_once_rep)]\n \n extern crate syntax;\n "}, {"sha": "9f6927d21640e3a45177dc5bcea8bb4107b713e6", "filename": "src/test/run-pass-fulldeps/auxiliary/lint_for_crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flint_for_crate.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -12,7 +12,6 @@\n \n #![feature(plugin_registrar, rustc_private)]\n #![feature(box_syntax)]\n-#![feature(macro_at_most_once_rep)]\n \n #[macro_use] extern crate rustc;\n extern crate rustc_plugin;"}, {"sha": "f4d3f2c94caf1a2091c62aea06b0331517fe8e21", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/issue-40001-plugin.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue-40001-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue-40001-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue-40001-plugin.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![feature(box_syntax, plugin, plugin_registrar, rustc_private)]\n-#![feature(macro_at_most_once_rep)]\n #![crate_type = \"dylib\"]\n \n #[macro_use]"}, {"sha": "563fd01c111477e92122ac231e81b5ff7c053794", "filename": "src/test/run-pass/macros/macro-at-most-once-rep.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-at-most-once-rep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-at-most-once-rep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-at-most-once-rep.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -22,8 +22,6 @@\n \n // edition:2018\n \n-#![feature(macro_at_most_once_rep)]\n-\n macro_rules! foo {\n     ($($a:ident)? ; $num:expr) => { {\n         let mut x = 0;"}, {"sha": "f697642f8431dadcd3033aaaa41cc2623c8ffb26", "filename": "src/test/ui-fulldeps/auxiliary/lint_group_plugin_test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -12,7 +12,6 @@\n \n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n-#![feature(macro_at_most_once_rep)]\n \n // Load rustc as a plugin to get macros\n #[macro_use]"}, {"sha": "8647797270f9a841f5092b974faf0ec745509cbb", "filename": "src/test/ui-fulldeps/auxiliary/lint_plugin_test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_plugin_test.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -12,7 +12,6 @@\n \n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n-#![feature(macro_at_most_once_rep)]\n \n extern crate syntax;\n "}, {"sha": "0a449e338bd06b697040b00f570593d4213fde69", "filename": "src/test/ui-fulldeps/auxiliary/lint_tool_test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_tool_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_tool_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_tool_test.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -10,7 +10,6 @@\n \n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n-#![feature(macro_at_most_once_rep)]\n \n extern crate syntax;\n "}, {"sha": "63a4ef16a2581cef6a2a03fdc27dff2ad29402b4", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015-ques-rep-feature-flag.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a49316ddc99d9d595193557fc899f6c52e4d9af9/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep-feature-flag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a49316ddc99d9d595193557fc899f6c52e4d9af9/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep-feature-flag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep-feature-flag.rs?ref=a49316ddc99d9d595193557fc899f6c52e4d9af9", "patch": "@@ -1,28 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test behavior of `?` macro _kleene op_ under the 2015 edition. Namely, it doesn't exist, even\n-// with the feature flag.\n-\n-// gate-test-macro_at_most_once_rep\n-// edition:2015\n-\n-#![feature(macro_at_most_once_rep)]\n-\n-macro_rules! bar {\n-    ($(a)?) => {} //~ERROR expected `*` or `+`\n-}\n-\n-macro_rules! baz {\n-    ($(a),?) => {} //~ERROR expected `*` or `+`\n-}\n-\n-fn main() {}\n-"}, {"sha": "5f687900421bf4823aaedb95b0f663f82429eb2f", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015-ques-rep-feature-flag.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a49316ddc99d9d595193557fc899f6c52e4d9af9/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep-feature-flag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a49316ddc99d9d595193557fc899f6c52e4d9af9/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep-feature-flag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep-feature-flag.stderr?ref=a49316ddc99d9d595193557fc899f6c52e4d9af9", "patch": "@@ -1,18 +0,0 @@\n-error: expected `*` or `+`\n-  --> $DIR/macro-at-most-once-rep-2015-ques-rep-feature-flag.rs:20:10\n-   |\n-LL |     ($(a)?) => {} //~ERROR expected `*` or `+`\n-   |          ^\n-   |\n-   = note: `?` is not a macro repetition operator\n-\n-error: expected `*` or `+`\n-  --> $DIR/macro-at-most-once-rep-2015-ques-rep-feature-flag.rs:24:11\n-   |\n-LL |     ($(a),?) => {} //~ERROR expected `*` or `+`\n-   |           ^\n-   |\n-   = note: `?` is not a macro repetition operator\n-\n-error: aborting due to 2 previous errors\n-"}, {"sha": "ffabf9bcdf68557dad795f6135ed646380c87d74", "filename": "src/test/ui/macros/macro-at-most-once-rep-2018-feature-gate.rs", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/a49316ddc99d9d595193557fc899f6c52e4d9af9/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a49316ddc99d9d595193557fc899f6c52e4d9af9/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.rs?ref=a49316ddc99d9d595193557fc899f6c52e4d9af9", "patch": "@@ -1,45 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Feature gate test for macro_at_most_once_rep under 2018 edition.\n-\n-// gate-test-macro_at_most_once_rep\n-// edition:2018\n-\n-macro_rules! foo {\n-    ($(a)?) => {}\n-    //~^ERROR using the `?` macro Kleene operator for\n-    //~|ERROR expected `*` or `+`\n-}\n-\n-macro_rules! baz {\n-    ($(a),?) => {} //~ERROR expected `*` or `+`\n-}\n-\n-macro_rules! barplus {\n-    ($(a)?+) => {}\n-    //~^ERROR using the `?` macro Kleene operator for\n-    //~|ERROR expected `*` or `+`\n-}\n-\n-macro_rules! barstar {\n-    ($(a)?*) => {}\n-    //~^ERROR using the `?` macro Kleene operator for\n-    //~|ERROR expected `*` or `+`\n-}\n-\n-pub fn main() {\n-    foo!();\n-    foo!(a);\n-    foo!(a?); //~ ERROR no rules expected the token `?`\n-    foo!(a?a); //~ ERROR no rules expected the token `?`\n-    foo!(a?a?a); //~ ERROR no rules expected the token `?`\n-}\n-"}, {"sha": "27dc03e1c3981f04ef3d64dd6d8ae79c70520366", "filename": "src/test/ui/macros/macro-at-most-once-rep-2018-feature-gate.stderr", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/a49316ddc99d9d595193557fc899f6c52e4d9af9/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a49316ddc99d9d595193557fc899f6c52e4d9af9/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.stderr?ref=a49316ddc99d9d595193557fc899f6c52e4d9af9", "patch": "@@ -1,80 +0,0 @@\n-error[E0658]: using the `?` macro Kleene operator for \"at most one\" repetition is unstable (see issue #48075)\n-  --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:17:10\n-   |\n-LL |     ($(a)?) => {}\n-   |          ^\n-   |\n-   = help: add #![feature(macro_at_most_once_rep)] to the crate attributes to enable\n-\n-error: expected `*` or `+`\n-  --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:17:10\n-   |\n-LL |     ($(a)?) => {}\n-   |          ^\n-\n-error: expected `*` or `+`\n-  --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:23:11\n-   |\n-LL |     ($(a),?) => {} //~ERROR expected `*` or `+`\n-   |           ^\n-   |\n-   = note: `?` is not a macro repetition operator\n-\n-error[E0658]: using the `?` macro Kleene operator for \"at most one\" repetition is unstable (see issue #48075)\n-  --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:27:10\n-   |\n-LL |     ($(a)?+) => {}\n-   |          ^\n-   |\n-   = help: add #![feature(macro_at_most_once_rep)] to the crate attributes to enable\n-\n-error: expected `*` or `+`\n-  --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:27:10\n-   |\n-LL |     ($(a)?+) => {}\n-   |          ^\n-\n-error[E0658]: using the `?` macro Kleene operator for \"at most one\" repetition is unstable (see issue #48075)\n-  --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:33:10\n-   |\n-LL |     ($(a)?*) => {}\n-   |          ^\n-   |\n-   = help: add #![feature(macro_at_most_once_rep)] to the crate attributes to enable\n-\n-error: expected `*` or `+`\n-  --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:33:10\n-   |\n-LL |     ($(a)?*) => {}\n-   |          ^\n-\n-error: no rules expected the token `?`\n-  --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:41:11\n-   |\n-LL | macro_rules! foo {\n-   | ---------------- when calling this macro\n-...\n-LL |     foo!(a?); //~ ERROR no rules expected the token `?`\n-   |           ^ no rules expected this token in macro call\n-\n-error: no rules expected the token `?`\n-  --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:42:11\n-   |\n-LL | macro_rules! foo {\n-   | ---------------- when calling this macro\n-...\n-LL |     foo!(a?a); //~ ERROR no rules expected the token `?`\n-   |           ^ no rules expected this token in macro call\n-\n-error: no rules expected the token `?`\n-  --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:43:11\n-   |\n-LL | macro_rules! foo {\n-   | ---------------- when calling this macro\n-...\n-LL |     foo!(a?a?a); //~ ERROR no rules expected the token `?`\n-   |           ^ no rules expected this token in macro call\n-\n-error: aborting due to 10 previous errors\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "78bdf8ff71b885da35dabf2cc99f8ffbb59ac9a1", "filename": "src/test/ui/macros/macro-at-most-once-rep-2018.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.rs?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -12,22 +12,20 @@\n \n // edition:2018\n \n-#![feature(macro_at_most_once_rep)]\n-\n macro_rules! foo {\n-    ($(a)?) => {}\n+    ($(a)?) => {};\n }\n \n macro_rules! baz {\n-    ($(a),?) => {} //~ERROR the `?` macro repetition operator\n+    ($(a),?) => {}; //~ERROR the `?` macro repetition operator\n }\n \n macro_rules! barplus {\n-    ($(a)?+) => {} // ok. matches \"a+\" and \"+\"\n+    ($(a)?+) => {}; // ok. matches \"a+\" and \"+\"\n }\n \n macro_rules! barstar {\n-    ($(a)?*) => {} // ok. matches \"a*\" and \"*\"\n+    ($(a)?*) => {}; // ok. matches \"a*\" and \"*\"\n }\n \n pub fn main() {"}, {"sha": "da76d1ff1a7212ed2e864053ef06d299197a22fe", "filename": "src/test/ui/macros/macro-at-most-once-rep-2018.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5a03532ea94890c9c4fd77819edaab4fa9d7376c/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr?ref=5a03532ea94890c9c4fd77819edaab4fa9d7376c", "patch": "@@ -1,11 +1,11 @@\n error: the `?` macro repetition operator does not take a separator\n-  --> $DIR/macro-at-most-once-rep-2018.rs:22:10\n+  --> $DIR/macro-at-most-once-rep-2018.rs:20:10\n    |\n-LL |     ($(a),?) => {} //~ERROR the `?` macro repetition operator\n+LL |     ($(a),?) => {}; //~ERROR the `?` macro repetition operator\n    |          ^\n \n error: no rules expected the token `?`\n-  --> $DIR/macro-at-most-once-rep-2018.rs:36:11\n+  --> $DIR/macro-at-most-once-rep-2018.rs:34:11\n    |\n LL | macro_rules! foo {\n    | ---------------- when calling this macro\n@@ -14,7 +14,7 @@ LL |     foo!(a?); //~ ERROR no rules expected the token `?`\n    |           ^ no rules expected this token in macro call\n \n error: no rules expected the token `?`\n-  --> $DIR/macro-at-most-once-rep-2018.rs:37:11\n+  --> $DIR/macro-at-most-once-rep-2018.rs:35:11\n    |\n LL | macro_rules! foo {\n    | ---------------- when calling this macro\n@@ -23,7 +23,7 @@ LL |     foo!(a?a); //~ ERROR no rules expected the token `?`\n    |           ^ no rules expected this token in macro call\n \n error: no rules expected the token `?`\n-  --> $DIR/macro-at-most-once-rep-2018.rs:38:11\n+  --> $DIR/macro-at-most-once-rep-2018.rs:36:11\n    |\n LL | macro_rules! foo {\n    | ---------------- when calling this macro\n@@ -32,7 +32,7 @@ LL |     foo!(a?a?a); //~ ERROR no rules expected the token `?`\n    |           ^ no rules expected this token in macro call\n \n error: unexpected end of macro invocation\n-  --> $DIR/macro-at-most-once-rep-2018.rs:40:5\n+  --> $DIR/macro-at-most-once-rep-2018.rs:38:5\n    |\n LL | macro_rules! barplus {\n    | -------------------- when calling this macro\n@@ -41,7 +41,7 @@ LL |     barplus!(); //~ERROR unexpected end of macro invocation\n    |     ^^^^^^^^^^^ missing tokens in macro arguments\n \n error: unexpected end of macro invocation\n-  --> $DIR/macro-at-most-once-rep-2018.rs:41:15\n+  --> $DIR/macro-at-most-once-rep-2018.rs:39:15\n    |\n LL | macro_rules! barplus {\n    | -------------------- when calling this macro\n@@ -50,7 +50,7 @@ LL |     barplus!(a); //~ERROR unexpected end of macro invocation\n    |               ^ missing tokens in macro arguments\n \n error: no rules expected the token `?`\n-  --> $DIR/macro-at-most-once-rep-2018.rs:42:15\n+  --> $DIR/macro-at-most-once-rep-2018.rs:40:15\n    |\n LL | macro_rules! barplus {\n    | -------------------- when calling this macro\n@@ -59,7 +59,7 @@ LL |     barplus!(a?); //~ ERROR no rules expected the token `?`\n    |               ^ no rules expected this token in macro call\n \n error: no rules expected the token `?`\n-  --> $DIR/macro-at-most-once-rep-2018.rs:43:15\n+  --> $DIR/macro-at-most-once-rep-2018.rs:41:15\n    |\n LL | macro_rules! barplus {\n    | -------------------- when calling this macro\n@@ -68,7 +68,7 @@ LL |     barplus!(a?a); //~ ERROR no rules expected the token `?`\n    |               ^ no rules expected this token in macro call\n \n error: unexpected end of macro invocation\n-  --> $DIR/macro-at-most-once-rep-2018.rs:47:5\n+  --> $DIR/macro-at-most-once-rep-2018.rs:45:5\n    |\n LL | macro_rules! barstar {\n    | -------------------- when calling this macro\n@@ -77,7 +77,7 @@ LL |     barstar!(); //~ERROR unexpected end of macro invocation\n    |     ^^^^^^^^^^^ missing tokens in macro arguments\n \n error: unexpected end of macro invocation\n-  --> $DIR/macro-at-most-once-rep-2018.rs:48:15\n+  --> $DIR/macro-at-most-once-rep-2018.rs:46:15\n    |\n LL | macro_rules! barstar {\n    | -------------------- when calling this macro\n@@ -86,7 +86,7 @@ LL |     barstar!(a); //~ERROR unexpected end of macro invocation\n    |               ^ missing tokens in macro arguments\n \n error: no rules expected the token `?`\n-  --> $DIR/macro-at-most-once-rep-2018.rs:49:15\n+  --> $DIR/macro-at-most-once-rep-2018.rs:47:15\n    |\n LL | macro_rules! barstar {\n    | -------------------- when calling this macro\n@@ -95,7 +95,7 @@ LL |     barstar!(a?); //~ ERROR no rules expected the token `?`\n    |               ^ no rules expected this token in macro call\n \n error: no rules expected the token `?`\n-  --> $DIR/macro-at-most-once-rep-2018.rs:50:15\n+  --> $DIR/macro-at-most-once-rep-2018.rs:48:15\n    |\n LL | macro_rules! barstar {\n    | -------------------- when calling this macro"}]}