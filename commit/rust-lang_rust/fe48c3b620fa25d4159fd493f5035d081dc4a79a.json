{"sha": "fe48c3b620fa25d4159fd493f5035d081dc4a79a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNDhjM2I2MjBmYTI1ZDQxNTlmZDQ5M2Y1MDM1ZDA4MWRjNGE3OWE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-10T02:13:28Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-10T14:51:50Z"}, "message": "rustc: Forbid plugin_registrar in only rlib form\n\nIf a plugin registrar is available, the library must be found in dylib form, not\njust in rlib form.\n\nCloses #15475", "tree": {"sha": "8c1dc1c9ef993fc3bd80fd2cd3edf93c679d638f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c1dc1c9ef993fc3bd80fd2cd3edf93c679d638f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe48c3b620fa25d4159fd493f5035d081dc4a79a", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe48c3b620fa25d4159fd493f5035d081dc4a79a", "html_url": "https://github.com/rust-lang/rust/commit/fe48c3b620fa25d4159fd493f5035d081dc4a79a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe48c3b620fa25d4159fd493f5035d081dc4a79a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f3291e0c7d9d189553b16c52dda3851423534a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f3291e0c7d9d189553b16c52dda3851423534a5", "html_url": "https://github.com/rust-lang/rust/commit/3f3291e0c7d9d189553b16c52dda3851423534a5"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "2314b3f74e3c4e07048f103de06b76c0226f33e5", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fe48c3b620fa25d4159fd493f5035d081dc4a79a/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe48c3b620fa25d4159fd493f5035d081dc4a79a/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=fe48c3b620fa25d4159fd493f5035d081dc4a79a", "patch": "@@ -446,7 +446,7 @@ impl<'a> PluginMetadataReader<'a> {\n             should_match_name: true,\n         };\n         let library = match load_ctxt.maybe_load_library_crate() {\n-            Some (l) => l,\n+            Some(l) => l,\n             None if is_cross => {\n                 // try loading from target crates (only valid if there are\n                 // no syntax extensions)\n@@ -473,6 +473,14 @@ impl<'a> PluginMetadataReader<'a> {\n         let registrar = decoder::get_plugin_registrar_fn(library.metadata.as_slice()).map(|id| {\n             decoder::get_symbol(library.metadata.as_slice(), id)\n         });\n+        if library.dylib.is_none() && registrar.is_some() {\n+            let message = format!(\"plugin crate `{}` only found in rlib format, \\\n+                                   but must be available in dylib format\",\n+                                  info.ident);\n+            self.env.sess.span_err(krate.span, message.as_slice());\n+            // No need to abort because the loading code will just ignore this\n+            // empty dylib.\n+        }\n         let pc = PluginMetadata {\n             lib: library.dylib.clone(),\n             macros: macros,"}, {"sha": "be03a36393e24053b4f27194cb79d464392433ef", "filename": "src/test/auxiliary/rlib_crate_test.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fe48c3b620fa25d4159fd493f5035d081dc4a79a/src%2Ftest%2Fauxiliary%2Frlib_crate_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe48c3b620fa25d4159fd493f5035d081dc4a79a/src%2Ftest%2Fauxiliary%2Frlib_crate_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Frlib_crate_test.rs?ref=fe48c3b620fa25d4159fd493f5035d081dc4a79a", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]\n+#![feature(plugin_registrar)]\n+\n+extern crate rustc;\n+\n+use rustc::plugin::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(_: &mut Registry) {}"}, {"sha": "625245d9f2d2bb75ccad6c84a53239fee88f4b15", "filename": "src/test/compile-fail-fulldeps/macro-crate-rlib.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fe48c3b620fa25d4159fd493f5035d081dc4a79a/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-rlib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe48c3b620fa25d4159fd493f5035d081dc4a79a/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-rlib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-rlib.rs?ref=fe48c3b620fa25d4159fd493f5035d081dc4a79a", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:rlib_crate_test.rs\n+// ignore-stage1\n+// ignore-tidy-linelength\n+// ignore-android\n+\n+#![feature(phase)]\n+#[phase(plugin)] extern crate rlib_crate_test;\n+//~^ ERROR: plugin crate `rlib_crate_test` only found in rlib format, but must be available in dylib format\n+\n+fn main() {}"}]}