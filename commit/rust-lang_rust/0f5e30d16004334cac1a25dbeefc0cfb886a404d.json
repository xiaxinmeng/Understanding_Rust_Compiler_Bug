{"sha": "0f5e30d16004334cac1a25dbeefc0cfb886a404d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNWUzMGQxNjAwNDMzNGNhYzFhMjVkYmVlZmMwY2ZiODg2YTQwNGQ=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-11-07T17:09:20Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-11-07T17:09:20Z"}, "message": "sort: Guard the fast path by length check\n\nThe right part must not be empty.", "tree": {"sha": "3809175f39543f1fb6000fb9f4418323c160941f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3809175f39543f1fb6000fb9f4418323c160941f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f5e30d16004334cac1a25dbeefc0cfb886a404d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f5e30d16004334cac1a25dbeefc0cfb886a404d", "html_url": "https://github.com/rust-lang/rust/commit/0f5e30d16004334cac1a25dbeefc0cfb886a404d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f5e30d16004334cac1a25dbeefc0cfb886a404d/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35fd1bab5e727061248c7810ca1fbe81e336d019", "url": "https://api.github.com/repos/rust-lang/rust/commits/35fd1bab5e727061248c7810ca1fbe81e336d019", "html_url": "https://github.com/rust-lang/rust/commit/35fd1bab5e727061248c7810ca1fbe81e336d019"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "9ea3389e81cc461478635479c93b6e6198b6adab", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f5e30d16004334cac1a25dbeefc0cfb886a404d/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5e30d16004334cac1a25dbeefc0cfb886a404d/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=0f5e30d16004334cac1a25dbeefc0cfb886a404d", "patch": "@@ -1066,10 +1066,12 @@ fn merge_sort<T, F>(v: &mut [T], mut compare: F) where F: FnMut(&T, &T) -> Order\n                 let mut out = buf_tmp.offset(start as isize);\n                 let out_end = buf_tmp.offset(right_end_idx as isize);\n \n-                // if left[last] <= right[0], they are already in order:\n+                // If left[last] <= right[0], they are already in order:\n                 // fast-forward the left side (the right side is handled\n                 // in the loop).\n-                if compare(&*right.offset(-1), &*right) != Greater {\n+                // If `right` is not empty then left is not empty, and\n+                // the offsets are in bounds.\n+                if right != right_end && compare(&*right.offset(-1), &*right) != Greater {\n                     let elems = (right_start as usize - left as usize) / mem::size_of::<T>();\n                     ptr::copy_nonoverlapping(&*left, out, elems);\n                     out = out.offset(elems as isize);"}]}