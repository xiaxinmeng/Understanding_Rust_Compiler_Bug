{"sha": "ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMjVjZjhkNzU2NzE0MTVlNzRmZjNmZTFhM2MwYmE0MmUzNTM5NmE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-14T03:43:05Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-16T00:50:28Z"}, "message": "std: test-fixes, remove warnings, syntax highlighting for code examples.", "tree": {"sha": "c7111c209e9b7dde736277b385ea950052e521af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7111c209e9b7dde736277b385ea950052e521af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "html_url": "https://github.com/rust-lang/rust/commit/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4686ed1a1d6e85d2c17fd67fdf4be597c701d141", "url": "https://api.github.com/repos/rust-lang/rust/commits/4686ed1a1d6e85d2c17fd67fdf4be597c701d141", "html_url": "https://github.com/rust-lang/rust/commit/4686ed1a1d6e85d2c17fd67fdf4be597c701d141"}], "stats": {"total": 40, "additions": 12, "deletions": 28}, "files": [{"sha": "e0ceb79a37dfc31de5520d57dc465d387a40b83e", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "patch": "@@ -24,7 +24,6 @@ use util::logv;\n \n use core::io;\n use core::os;\n-use core::str;\n use core::uint;\n use core::vec;\n "}, {"sha": "3775aafb56969539cddb3e9e19cb545393decb07", "filename": "src/librustdoc/astsrv.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fastsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fastsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fastsrv.rs?ref=ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "patch": "@@ -32,8 +32,6 @@ use syntax::ast;\n use syntax::ast_map;\n use syntax;\n \n-#[cfg(test)] use core::vec;\n-\n pub struct Ctxt {\n     ast: @ast::crate,\n     ast_map: ast_map::map"}, {"sha": "dc7621f98a09f1e5cd88ecab5852b11dbc06100e", "filename": "src/librustdoc/desc_to_brief_pass.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs?ref=ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "patch": "@@ -129,14 +129,12 @@ fn first_sentence_(s: &str) -> ~str {\n         }\n     });\n     match idx {\n-        Some(idx) if idx > 2u => {\n-            str::to_owned(s.slice(0, idx - 1))\n-        }\n+        Some(idx) if idx > 2u => s.slice(0, idx - 1).to_owned(),\n         _ => {\n             if s.ends_with(\".\") {\n-                str::to_owned(s)\n+                s.to_owned()\n             } else {\n-                str::to_owned(s)\n+                s.to_owned()\n             }\n         }\n     }"}, {"sha": "f8c49f544bc2efb25e327680bb632ba7f210b183", "filename": "src/librustdoc/extract.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fextract.rs?ref=ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "patch": "@@ -285,8 +285,6 @@ mod test {\n     use extract::{extract, from_srv};\n     use parse;\n \n-    use core::vec;\n-\n     fn mk_doc(source: @str) -> doc::Doc {\n         let ast = parse::from_str(source);\n         extract(ast, ~\"\")"}, {"sha": "36df3a5267d46ddcfc6451fe6662bb1118d1f660", "filename": "src/librustdoc/markdown_pass.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown_pass.rs?ref=ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "patch": "@@ -537,8 +537,6 @@ mod test {\n     use tystr_pass;\n     use unindent_pass;\n \n-    use core::str;\n-\n     fn render(source: ~str) -> ~str {\n         let (srv, doc) = create_doc_srv(source);\n         let markdown = write_markdown_str_srv(srv, doc);"}, {"sha": "584e6ccc887301a3e2176cfbd0817ed170182965", "filename": "src/librustdoc/page_pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fpage_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fpage_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpage_pass.rs?ref=ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "patch": "@@ -157,7 +157,6 @@ mod test {\n     use doc;\n     use extract;\n     use page_pass::run;\n-    use core::vec;\n \n     fn mk_doc_(\n         output_style: config::OutputStyle,"}, {"sha": "484eb8c7980dc06bbff5b052edafa0295f523e80", "filename": "src/librustdoc/prune_hidden_pass.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fprune_hidden_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fprune_hidden_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fprune_hidden_pass.rs?ref=ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "patch": "@@ -77,8 +77,6 @@ mod test {\n \n     #[test]\n     fn should_prune_hidden_items() {\n-        use core::vec;\n-\n         let doc = mk_doc(~\"#[doc(hidden)] mod a { }\");\n         assert!(doc.cratemod().mods().is_empty())\n     }"}, {"sha": "741da3e265eebb91e1c998317fb36d285cfba291", "filename": "src/librustdoc/prune_private_pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fprune_private_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fprune_private_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fprune_private_pass.rs?ref=ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "patch": "@@ -162,7 +162,6 @@ mod test {\n     use extract;\n     use tystr_pass;\n     use prune_private_pass::run;\n-    use core::vec;\n \n     fn mk_doc(source: ~str) -> doc::Doc {\n         do astsrv::from_str(copy source) |srv| {"}, {"sha": "ba433bf479d2cebe5b5d0dde6c5dcffc838b65f6", "filename": "src/librustdoc/sectionalize_pass.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fsectionalize_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibrustdoc%2Fsectionalize_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fsectionalize_pass.rs?ref=ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "patch": "@@ -170,9 +170,6 @@ mod test {\n     use extract;\n     use sectionalize_pass::run;\n \n-    use core::str;\n-    use core::vec;\n-\n     fn mk_doc(source: ~str) -> doc::Doc {\n         do astsrv::from_str(copy source) |srv| {\n             let doc = extract::from_srv(srv.clone(), ~\"\");"}, {"sha": "99a7a461ab24f3b43fd1ed336174bf91e3d60ce4", "filename": "src/libstd/path.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "patch": "@@ -515,7 +515,7 @@ impl GenericPath for PosixPath {\n     fn with_filestem(&self, s: &str) -> PosixPath {\n         match self.filetype() {\n             None => self.with_filename(s),\n-            Some(ref t) => self.with_filename(str::to_owned(s) + *t),\n+            Some(ref t) => self.with_filename(s.to_owned() + *t),\n         }\n     }\n \n@@ -657,7 +657,7 @@ impl GenericPath for WindowsPath {\n             (None, None) => {\n                 host = None;\n                 device = None;\n-                rest = str::to_owned(s);\n+                rest = s.to_owned();\n             }\n         }\n \n@@ -729,7 +729,7 @@ impl GenericPath for WindowsPath {\n     fn with_filestem(&self, s: &str) -> WindowsPath {\n         match self.filetype() {\n             None => self.with_filename(s),\n-            Some(ref t) => self.with_filename(str::to_owned(s) + *t),\n+            Some(ref t) => self.with_filename(s.to_owned() + *t),\n         }\n     }\n \n@@ -984,7 +984,7 @@ mod tests {\n     fn test_posix_paths() {\n         fn t(wp: &PosixPath, s: &str) {\n             let ss = wp.to_str();\n-            let sss = str::to_owned(s);\n+            let sss = s.to_owned();\n             if (ss != sss) {\n                 debug!(\"got %s\", ss);\n                 debug!(\"expected %s\", sss);\n@@ -1042,7 +1042,7 @@ mod tests {\n     fn test_normalize() {\n         fn t(wp: &PosixPath, s: &str) {\n             let ss = wp.to_str();\n-            let sss = str::to_owned(s);\n+            let sss = s.to_owned();\n             if (ss != sss) {\n                 debug!(\"got %s\", ss);\n                 debug!(\"expected %s\", sss);\n@@ -1105,7 +1105,7 @@ mod tests {\n     fn test_windows_paths() {\n         fn t(wp: &WindowsPath, s: &str) {\n             let ss = wp.to_str();\n-            let sss = str::to_owned(s);\n+            let sss = s.to_owned();\n             if (ss != sss) {\n                 debug!(\"got %s\", ss);\n                 debug!(\"expected %s\", sss);"}, {"sha": "1ab07003b6ea440df37a0c63f0997b450d0a904b", "filename": "src/libstd/str.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25cf8d75671415e74ff3fe1a3c0ba42e35396a/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=ee25cf8d75671415e74ff3fe1a3c0ba42e35396a", "patch": "@@ -1432,7 +1432,7 @@ impl<'self> StrSlice<'self> for &'self str {\n      *\n      * # Example\n      *\n-     * ~~~\n+     * ~~~ {.rust}\n      * assert_eq!(\"11foo1bar11\".trim_chars(&'1'), \"foo1bar\")\n      * assert_eq!(\"12foo1bar12\".trim_chars(& &['1', '2']), \"foo1bar\")\n      * assert_eq!(\"123foo1bar123\".trim_chars(&|c: char| c.is_digit()), \"foo1bar\")\n@@ -1451,7 +1451,7 @@ impl<'self> StrSlice<'self> for &'self str {\n      *\n      * # Example\n      *\n-     * ~~~\n+     * ~~~ {.rust}\n      * assert_eq!(\"11foo1bar11\".trim_left_chars(&'1'), \"foo1bar11\")\n      * assert_eq!(\"12foo1bar12\".trim_left_chars(& &['1', '2']), \"foo1bar12\")\n      * assert_eq!(\"123foo1bar123\".trim_left_chars(&|c: char| c.is_digit()), \"foo1bar123\")\n@@ -1473,7 +1473,7 @@ impl<'self> StrSlice<'self> for &'self str {\n      *\n      * # Example\n      *\n-     * ~~~\n+     * ~~~ {.rust}\n      * assert_eq!(\"11foo1bar11\".trim_right_chars(&'1'), \"11foo1bar\")\n      * assert_eq!(\"12foo1bar12\".trim_right_chars(& &['1', '2']), \"12foo1bar\")\n      * assert_eq!(\"123foo1bar123\".trim_right_chars(&|c: char| c.is_digit()), \"123foo1bar\")"}]}