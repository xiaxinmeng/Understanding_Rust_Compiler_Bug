{"sha": "e0ff4befdacf187621bebba84f824d2e41ab0607", "node_id": "C_kwDOAAsO6NoAKGUwZmY0YmVmZGFjZjE4NzYyMWJlYmJhODRmODI0ZDJlNDFhYjA2MDc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-30T07:53:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-30T07:53:48Z"}, "message": "Auto merge of #12913 - Veykril:attr-merge, r=Veykril\n\nfix: Fix ast-id up when merging raw attributes\n\nFixes https://github.com/rust-lang/rust-analyzer/issues/12912", "tree": {"sha": "c23f3b9fa6f2ccc79e34876584ec8be5ee7e9dd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c23f3b9fa6f2ccc79e34876584ec8be5ee7e9dd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0ff4befdacf187621bebba84f824d2e41ab0607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0ff4befdacf187621bebba84f824d2e41ab0607", "html_url": "https://github.com/rust-lang/rust/commit/e0ff4befdacf187621bebba84f824d2e41ab0607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0ff4befdacf187621bebba84f824d2e41ab0607/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb5e49631bac0584348c052e939bd3fcf1cc967c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb5e49631bac0584348c052e939bd3fcf1cc967c", "html_url": "https://github.com/rust-lang/rust/commit/fb5e49631bac0584348c052e939bd3fcf1cc967c"}, {"sha": "618cfd792ca2b3da5cd027bad20a7769f5d9f973", "url": "https://api.github.com/repos/rust-lang/rust/commits/618cfd792ca2b3da5cd027bad20a7769f5d9f973", "html_url": "https://github.com/rust-lang/rust/commit/618cfd792ca2b3da5cd027bad20a7769f5d9f973"}], "stats": {"total": 177, "additions": 167, "deletions": 10}, "files": [{"sha": "2b39c6f8da86bee737371f8fd86547d5ed281d11", "filename": "crates/hir-def/src/attr.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fhir-def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fhir-def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fattr.rs?ref=e0ff4befdacf187621bebba84f824d2e41ab0607", "patch": "@@ -124,13 +124,24 @@ impl RawAttrs {\n \n     pub(crate) fn merge(&self, other: Self) -> Self {\n         // FIXME: This needs to fixup `AttrId`s\n-        match (&self.entries, &other.entries) {\n+        match (&self.entries, other.entries) {\n             (None, None) => Self::EMPTY,\n-            (Some(entries), None) | (None, Some(entries)) => {\n-                Self { entries: Some(entries.clone()) }\n-            }\n+            (None, entries @ Some(_)) => Self { entries },\n+            (Some(entries), None) => Self { entries: Some(entries.clone()) },\n             (Some(a), Some(b)) => {\n-                Self { entries: Some(a.iter().chain(b.iter()).cloned().collect()) }\n+                let last_ast_index = a.last().map_or(0, |it| it.id.ast_index + 1);\n+                Self {\n+                    entries: Some(\n+                        a.iter()\n+                            .cloned()\n+                            .chain(b.iter().map(|it| {\n+                                let mut it = it.clone();\n+                                it.id.ast_index += last_ast_index;\n+                                it\n+                            }))\n+                            .collect(),\n+                    ),\n+                }\n             }\n         }\n     }"}, {"sha": "3fb49b45d9888ebb7fcac3d4e4431b3f9f596e75", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=e0ff4befdacf187621bebba84f824d2e41ab0607", "patch": "@@ -13,7 +13,7 @@ mod html;\n #[cfg(test)]\n mod tests;\n \n-use hir::{InFile, Name, Semantics};\n+use hir::{Name, Semantics};\n use ide_db::{FxHashMap, RootDatabase};\n use syntax::{\n     ast, AstNode, AstToken, NodeOrToken, SyntaxKind::*, SyntaxNode, TextRange, WalkEvent, T,\n@@ -325,7 +325,7 @@ fn traverse(\n             Leave(NodeOrToken::Node(node)) => {\n                 // Doc comment highlighting injection, we do this when leaving the node\n                 // so that we overwrite the highlighting of the doc comment itself.\n-                inject::doc_comment(hl, sema, InFile::new(file_id.into(), &node));\n+                inject::doc_comment(hl, sema, file_id, &node);\n                 continue;\n             }\n         };"}, {"sha": "f376f9fda7a57799c0be9b774a81508a065d2893", "filename": "crates/ide/src/syntax_highlighting/inject.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs?ref=e0ff4befdacf187621bebba84f824d2e41ab0607", "patch": "@@ -5,7 +5,8 @@ use std::mem;\n use either::Either;\n use hir::{InFile, Semantics};\n use ide_db::{\n-    active_parameter::ActiveParameter, defs::Definition, rust_doc::is_rust_fence, SymbolKind,\n+    active_parameter::ActiveParameter, base_db::FileId, defs::Definition, rust_doc::is_rust_fence,\n+    SymbolKind,\n };\n use syntax::{\n     ast::{self, AstNode, IsString, QuoteOffsets},\n@@ -81,16 +82,18 @@ pub(super) fn ra_fixture(\n const RUSTDOC_FENCE_LENGTH: usize = 3;\n const RUSTDOC_FENCES: [&str; 2] = [\"```\", \"~~~\"];\n \n-/// Injection of syntax highlighting of doctests.\n+/// Injection of syntax highlighting of doctests and intra doc links.\n pub(super) fn doc_comment(\n     hl: &mut Highlights,\n     sema: &Semantics<'_, RootDatabase>,\n-    InFile { file_id: src_file_id, value: node }: InFile<&SyntaxNode>,\n+    src_file_id: FileId,\n+    node: &SyntaxNode,\n ) {\n     let (attributes, def) = match doc_attributes(sema, node) {\n         Some(it) => it,\n         None => return,\n     };\n+    let src_file_id = src_file_id.into();\n \n     // Extract intra-doc links and emit highlights for them.\n     if let Some((docs, doc_mapping)) = attributes.docs_with_rangemap(sema.db) {"}, {"sha": "8a1d69816e6882aa738d0adbd23ff062c413c454", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_module_docs_inline.html", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_module_docs_inline.html", "raw_url": "https://github.com/rust-lang/rust/raw/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_module_docs_inline.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_module_docs_inline.html?ref=e0ff4befdacf187621bebba84f824d2e41ab0607", "patch": "@@ -0,0 +1,51 @@\n+\n+<style>\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+\n+.lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n+.comment            { color: #7F9F7F; }\n+.documentation      { color: #629755; }\n+.intra_doc_link     { font-style: italic; }\n+.injected           { opacity: 0.65 ; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n+.field              { color: #94BFF3; }\n+.function           { color: #93E0E3; }\n+.function.unsafe    { color: #BC8383; }\n+.trait.unsafe       { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n+.mutable.unsafe     { color: #BC8383; text-decoration: underline; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.macro.unsafe       { color: #BC8383; }\n+.parameter          { color: #94BFF3; }\n+.text               { color: #DCDCCC; }\n+.type               { color: #7CB8BB; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n+.attribute          { color: #94BFF3; }\n+.numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n+.macro              { color: #94BFF3; }\n+.derive             { color: #94BFF3; font-style: italic; }\n+.module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n+.variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n+.mutable            { text-decoration: underline; }\n+.escape_sequence    { color: #94BFF3; }\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n+</style>\n+<pre><code><span class=\"comment documentation\">//! </span><span class=\"struct documentation injected intra_doc_link\">[Struct]</span>\n+<span class=\"comment documentation\">//! This is an intra doc injection test for modules</span>\n+<span class=\"comment documentation\">//! </span><span class=\"struct documentation injected intra_doc_link\">[Struct]</span>\n+<span class=\"comment documentation\">//! This is an intra doc injection test for modules</span>\n+\n+<span class=\"keyword\">pub</span> <span class=\"keyword\">struct</span> <span class=\"struct declaration public\">Struct</span><span class=\"semicolon\">;</span>\n+</code></pre>\n\\ No newline at end of file"}, {"sha": "c4c3e3dc2606e5852b5813c76ba9c2bfb31f9b04", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_module_docs_outline.html", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_module_docs_outline.html", "raw_url": "https://github.com/rust-lang/rust/raw/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_module_docs_outline.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_module_docs_outline.html?ref=e0ff4befdacf187621bebba84f824d2e41ab0607", "patch": "@@ -0,0 +1,50 @@\n+\n+<style>\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+\n+.lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n+.comment            { color: #7F9F7F; }\n+.documentation      { color: #629755; }\n+.intra_doc_link     { font-style: italic; }\n+.injected           { opacity: 0.65 ; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n+.field              { color: #94BFF3; }\n+.function           { color: #93E0E3; }\n+.function.unsafe    { color: #BC8383; }\n+.trait.unsafe       { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n+.mutable.unsafe     { color: #BC8383; text-decoration: underline; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.macro.unsafe       { color: #BC8383; }\n+.parameter          { color: #94BFF3; }\n+.text               { color: #DCDCCC; }\n+.type               { color: #7CB8BB; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n+.attribute          { color: #94BFF3; }\n+.numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n+.macro              { color: #94BFF3; }\n+.derive             { color: #94BFF3; font-style: italic; }\n+.module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n+.variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n+.mutable            { text-decoration: underline; }\n+.escape_sequence    { color: #94BFF3; }\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n+</style>\n+<pre><code><span class=\"comment documentation\">/// </span><span class=\"struct documentation injected intra_doc_link\">[crate::foo::Struct]</span>\n+<span class=\"comment documentation\">/// This is an intra doc injection test for modules</span>\n+<span class=\"comment documentation\">/// </span><span class=\"struct documentation injected intra_doc_link\">[crate::foo::Struct]</span>\n+<span class=\"comment documentation\">/// This is an intra doc injection test for modules</span>\n+<span class=\"keyword\">mod</span> <span class=\"module declaration\">foo</span><span class=\"semicolon\">;</span>\n+</code></pre>\n\\ No newline at end of file"}, {"sha": "99be7c6648687c7bffd7640d7a1c4736b3d8a2d6", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0ff4befdacf187621bebba84f824d2e41ab0607/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=e0ff4befdacf187621bebba84f824d2e41ab0607", "patch": "@@ -914,6 +914,48 @@ fn main() {\n     );\n }\n \n+#[test]\n+fn test_mod_hl_injection() {\n+    check_highlighting(\n+        r##\"\n+//- /foo.rs\n+//! [Struct]\n+//! This is an intra doc injection test for modules\n+//! [Struct]\n+//! This is an intra doc injection test for modules\n+\n+pub struct Struct;\n+//- /lib.rs crate:foo\n+/// [crate::foo::Struct]\n+/// This is an intra doc injection test for modules\n+/// [crate::foo::Struct]\n+/// This is an intra doc injection test for modules\n+mod foo;\n+\"##,\n+        expect_file![\"./test_data/highlight_module_docs_inline.html\"],\n+        false,\n+    );\n+    check_highlighting(\n+        r##\"\n+//- /lib.rs crate:foo\n+/// [crate::foo::Struct]\n+/// This is an intra doc injection test for modules\n+/// [crate::foo::Struct]\n+/// This is an intra doc injection test for modules\n+mod foo;\n+//- /foo.rs\n+//! [Struct]\n+//! This is an intra doc injection test for modules\n+//! [Struct]\n+//! This is an intra doc injection test for modules\n+\n+pub struct Struct;\n+\"##,\n+        expect_file![\"./test_data/highlight_module_docs_outline.html\"],\n+        false,\n+    );\n+}\n+\n #[test]\n #[cfg_attr(\n     all(unix, not(target_pointer_width = \"64\")),"}]}