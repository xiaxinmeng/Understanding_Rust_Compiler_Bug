{"sha": "b97d4383a4e82b084e9044ea47bad39fbfb91649", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5N2Q0MzgzYTRlODJiMDg0ZTkwNDRlYTQ3YmFkMzlmYmZiOTE2NDk=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-08T04:30:45Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-14T21:52:30Z"}, "message": "Remove `Hir` and `HirBody` dep nodes", "tree": {"sha": "209c1e32c3453516bbf7ae1b4ad9d3b1b1647239", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/209c1e32c3453516bbf7ae1b4ad9d3b1b1647239"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b97d4383a4e82b084e9044ea47bad39fbfb91649", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b97d4383a4e82b084e9044ea47bad39fbfb91649", "html_url": "https://github.com/rust-lang/rust/commit/b97d4383a4e82b084e9044ea47bad39fbfb91649", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b97d4383a4e82b084e9044ea47bad39fbfb91649/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9d166fac54dc3944e293121c732ff709acfd9e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9d166fac54dc3944e293121c732ff709acfd9e3", "html_url": "https://github.com/rust-lang/rust/commit/e9d166fac54dc3944e293121c732ff709acfd9e3"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "e3df9d5d04be106727dd783d97e5a3103931a1aa", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=b97d4383a4e82b084e9044ea47bad39fbfb91649", "patch": "@@ -341,13 +341,6 @@ rustc_dep_node_append!([define_dep_nodes!][ <'tcx>\n     // We use this for most things when incr. comp. is turned off.\n     [] Null,\n \n-    // Represents the body of a function or method. The def-id is that of the\n-    // function/method.\n-    [eval_always] HirBody(DefId),\n-\n-    // Represents the HIR node with the given node-id\n-    [eval_always] Hir(DefId),\n-\n     // Represents metadata from an extern crate.\n     [eval_always] CrateMetadata(CrateNum),\n "}, {"sha": "f5d68e8074dfaf53bc949cca08af9ea787327e8d", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=b97d4383a4e82b084e9044ea47bad39fbfb91649", "patch": "@@ -677,7 +677,7 @@ impl DepGraph {\n                         }\n                     } else {\n                         match dep_dep_node.kind {\n-                            DepKind::Hir | DepKind::HirBody | DepKind::CrateMetadata => {\n+                            DepKind::CrateMetadata => {\n                                 if let Some(def_id) = dep_dep_node.extract_def_id(tcx) {\n                                     if def_id_corresponds_to_hir_dep_node(tcx, def_id) {\n                                         // The `DefPath` has corresponding node,"}, {"sha": "ee5192f58c2bd909b876e682ca3083e4a995929d", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=b97d4383a4e82b084e9044ea47bad39fbfb91649", "patch": "@@ -44,7 +44,7 @@ pub(super) struct NodeCollector<'a, 'hir> {\n \n     hcx: StableHashingContext<'a>,\n \n-    // We are collecting `DepNode::HirBody` hashes here so we can compute the\n+    // We are collecting HIR hashes here so we can compute the\n     // crate hash from them later on.\n     hir_body_nodes: Vec<(DefPathHash, Fingerprint)>,\n }"}, {"sha": "6792c00e763e1e667206189ed1d78a48f4af54e1", "filename": "src/librustc/hir/map/hir_id_validator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs?ref=b97d4383a4e82b084e9044ea47bad39fbfb91649", "patch": "@@ -7,7 +7,7 @@ use rustc_hir::intravisit;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{HirId, ItemLocalId};*/\n \n-pub fn check_crate(hir_map: &EarlyMap<'_>, sess: &rustc_session::Session) {\n+pub fn check_crate(_: &EarlyMap<'_>, sess: &rustc_session::Session) {\n     /*hir_map.dep_graph.assert_ignored();\n \n     let errors = Lock::new(Vec::new());"}, {"sha": "3d17883fec3bd3e8090a519e96db207f3c0ffa6a", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=b97d4383a4e82b084e9044ea47bad39fbfb91649", "patch": "@@ -180,8 +180,6 @@ pub fn force_from_dep_node<'tcx>(tcx: TyCtxt<'tcx>, dep_node: &DepNode) -> bool\n         // These are inputs that are expected to be pre-allocated and that\n         // should therefore always be red or green already.\n         DepKind::CrateMetadata |\n-        DepKind::HirBody |\n-        DepKind::Hir |\n \n         // These are anonymous nodes.\n         DepKind::TraitSelect |"}, {"sha": "7ddb29c3cb621cf2379d5309f6c9387a63630d8f", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=b97d4383a4e82b084e9044ea47bad39fbfb91649", "patch": "@@ -120,7 +120,7 @@ impl IfThisChanged<'tcx> {\n             if attr.check_name(sym::rustc_if_this_changed) {\n                 let dep_node_interned = self.argument(attr);\n                 let dep_node = match dep_node_interned {\n-                    None => DepNode::from_def_path_hash(def_path_hash, DepKind::Hir),\n+                    None => DepNode::from_def_path_hash(def_path_hash, DepKind::hir_owner),\n                     Some(n) => match DepNode::from_label_string(&n.as_str(), def_path_hash) {\n                         Ok(n) => n,\n                         Err(()) => {"}, {"sha": "bb77309d32bb0b9820d91f556d8c70ce09517523", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97d4383a4e82b084e9044ea47bad39fbfb91649/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=b97d4383a4e82b084e9044ea47bad39fbfb91649", "patch": "@@ -54,8 +54,7 @@ const BASE_FN: &[&str] = &[\n /// DepNodes for Hir, which is pretty much everything\n const BASE_HIR: &[&str] = &[\n     // Hir and HirBody should be computed for all nodes\n-    label_strs::Hir,\n-    label_strs::HirBody,\n+    \"Hir\", \"HirBody\",\n ];\n \n /// `impl` implementation of struct/trait"}]}