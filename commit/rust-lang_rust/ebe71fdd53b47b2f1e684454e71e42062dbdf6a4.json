{"sha": "ebe71fdd53b47b2f1e684454e71e42062dbdf6a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZTcxZmRkNTNiNDdiMmYxZTY4NDQ1NGU3MWU0MjA2MmRiZGY2YTQ=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-06-23T16:23:23Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-06-23T16:23:23Z"}, "message": "change binding name of for loop lowering to appease clippy\n\nWith the latest change to for loop lowering, a `_next` binding was introduced.\nUnfortunately, this disturbs clippy's `used_underscore_binding` lint. This\ncommit just renames the binding to `__next` so clippy will be happy. It should\nhave no other effect.", "tree": {"sha": "823f3c81d72aec7a069c071f238a50b670fcfa2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/823f3c81d72aec7a069c071f238a50b670fcfa2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebe71fdd53b47b2f1e684454e71e42062dbdf6a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe71fdd53b47b2f1e684454e71e42062dbdf6a4", "html_url": "https://github.com/rust-lang/rust/commit/ebe71fdd53b47b2f1e684454e71e42062dbdf6a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebe71fdd53b47b2f1e684454e71e42062dbdf6a4/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd32b1ba0d2d51a7e8505c1d3e37d17d3ba12843", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd32b1ba0d2d51a7e8505c1d3e37d17d3ba12843", "html_url": "https://github.com/rust-lang/rust/commit/bd32b1ba0d2d51a7e8505c1d3e37d17d3ba12843"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "873d39ec9e9fb0fb6cd7d16a198d27390b146958", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ebe71fdd53b47b2f1e684454e71e42062dbdf6a4/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe71fdd53b47b2f1e684454e71e42062dbdf6a4/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=ebe71fdd53b47b2f1e684454e71e42062dbdf6a4", "patch": "@@ -2170,12 +2170,12 @@ impl<'a> LoweringContext<'a> {\n                 //     let result = match ::std::iter::IntoIterator::into_iter(<head>) {\n                 //       mut iter => {\n                 //         [opt_ident]: loop {\n-                //           let mut _next;\n+                //           let mut __next;\n                 //           match ::std::iter::Iterator::next(&mut iter) {\n-                //             ::std::option::Option::Some(val) => _next = val,\n+                //             ::std::option::Option::Some(val) => __next = val,\n                 //             ::std::option::Option::None => break\n                 //           };\n-                //           let <pat> = _next;\n+                //           let <pat> = __next;\n                 //           StmtExpr(<body>);\n                 //         }\n                 //       }\n@@ -2188,7 +2188,7 @@ impl<'a> LoweringContext<'a> {\n \n                 let iter = self.str_to_ident(\"iter\");\n \n-                let next_ident = self.str_to_ident(\"_next\");\n+                let next_ident = self.str_to_ident(\"__next\");\n                 let next_pat = self.pat_ident_binding_mode(e.span,\n                                                            next_ident,\n                                                            hir::BindByValue(hir::MutMutable));\n@@ -2237,13 +2237,13 @@ impl<'a> LoweringContext<'a> {\n \n                 let next_expr = P(self.expr_ident(e.span, next_ident, next_pat.id));\n \n-                // `let mut _next`\n+                // `let mut __next`\n                 let next_let = self.stmt_let_pat(e.span,\n                     None,\n                     next_pat,\n                     hir::LocalSource::ForLoopDesugar);\n \n-                // `let <pat> = _next`\n+                // `let <pat> = __next`\n                 let pat = self.lower_pat(pat);\n                 let pat_let = self.stmt_let_pat(e.span,\n                     Some(next_expr),"}]}