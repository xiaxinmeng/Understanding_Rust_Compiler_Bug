{"sha": "7b13ef7d501daea5f56605659ae1f1e38371ab32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMTNlZjdkNTAxZGFlYTVmNTY2MDU2NTlhZTFmMWUzODM3MWFiMzI=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-11-15T05:33:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-25T20:41:11Z"}, "message": "Test insert_with_key...", "tree": {"sha": "414ebd00a898c682dd149863859154cc256d37d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/414ebd00a898c682dd149863859154cc256d37d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b13ef7d501daea5f56605659ae1f1e38371ab32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b13ef7d501daea5f56605659ae1f1e38371ab32", "html_url": "https://github.com/rust-lang/rust/commit/7b13ef7d501daea5f56605659ae1f1e38371ab32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b13ef7d501daea5f56605659ae1f1e38371ab32/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a343e435d59e21188f6fc5918324c751a7eff6a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a343e435d59e21188f6fc5918324c751a7eff6a9", "html_url": "https://github.com/rust-lang/rust/commit/a343e435d59e21188f6fc5918324c751a7eff6a9"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "041346c9cd9ce978eb36a477495815224dd372e2", "filename": "src/libstd/map.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7b13ef7d501daea5f56605659ae1f1e38371ab32/src%2Flibstd%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b13ef7d501daea5f56605659ae1f1e38371ab32/src%2Flibstd%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmap.rs?ref=7b13ef7d501daea5f56605659ae1f1e38371ab32", "patch": "@@ -773,4 +773,25 @@ mod tests {\n         assert map.get(~\"b\") == 2;\n         assert map.get(~\"c\") == 3;\n     }\n+\n+    #[test]\n+    fn test_insert_with_key() {\n+        let map = map::HashMap::<~str, uint>();\n+\n+        fn inc(k: ~str, v0: uint, v1: uint) -> uint {\n+            v0 + v1\n+        }\n+\n+        map.insert_with_key(inc, ~\"cat\", 1);\n+        map.insert_with_key(inc, ~\"mongoose\", 1);\n+        map.insert_with_key(inc, ~\"cat\", 7);\n+        map.insert_with_key(inc, ~\"ferret\", 3);\n+        map.insert_with_key(inc, ~\"cat\", 2);\n+\n+        assert 10 == option::get(map.find(~\"cat\"));\n+        assert  3 == option::get(map.find(~\"ferret\"));\n+        assert  1 == option::get(map.find(~\"mongoose\"));\n+\n+        assert None == map.find(~\"unicorn\");\n+    }\n }"}, {"sha": "42198a6d78968733d60fde37460f8b4bf03dea38", "filename": "src/test/bench/shootout-k-nucleotide-pipes.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7b13ef7d501daea5f56605659ae1f1e38371ab32/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b13ef7d501daea5f56605659ae1f1e38371ab32/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs?ref=7b13ef7d501daea5f56605659ae1f1e38371ab32", "patch": "@@ -69,10 +69,7 @@ fn find(mm: HashMap<~[u8], uint>, key: ~str) -> uint {\n // given a map, increment the counter for a key\n fn update_freq(mm: HashMap<~[u8], uint>, key: &[u8]) {\n     let key = vec::slice(key, 0, key.len());\n-    match mm.find(key) {\n-      option::None      => { mm.insert(key, 1u      ); }\n-      option::Some(val) => { mm.insert(key, 1u + val); }\n-    }\n+    mm.insert_with_key(|k,v,v1| {v + v1}, key, 1);\n }\n \n // given a ~[u8], for each window call a function"}, {"sha": "f582ac6737df8c90bc4f63dc37ea4280550700ff", "filename": "src/test/bench/shootout-k-nucleotide.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7b13ef7d501daea5f56605659ae1f1e38371ab32/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b13ef7d501daea5f56605659ae1f1e38371ab32/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs?ref=7b13ef7d501daea5f56605659ae1f1e38371ab32", "patch": "@@ -66,10 +66,7 @@ fn find(mm: HashMap<~[u8], uint>, key: ~str) -> uint {\n // given a map, increment the counter for a key\n fn update_freq(mm: HashMap<~[u8], uint>, key: &[u8]) {\n     let key = vec::slice(key, 0, key.len());\n-    match mm.find(key) {\n-      option::None      => { mm.insert(key, 1u      ); }\n-      option::Some(val) => { mm.insert(key, 1u + val); }\n-    }\n+    mm.insert_with_key(|k,v,v1| {v + v1}, key, 1);\n }\n \n // given a ~[u8], for each window call a function"}]}