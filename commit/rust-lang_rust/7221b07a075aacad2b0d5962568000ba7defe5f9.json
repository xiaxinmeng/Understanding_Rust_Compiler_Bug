{"sha": "7221b07a075aacad2b0d5962568000ba7defe5f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMjFiMDdhMDc1YWFjYWQyYjBkNTk2MjU2ODAwMGJhN2RlZmU1Zjk=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-11-08T02:16:14Z"}, "committer": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-11-12T13:42:40Z"}, "message": "Remove unused argument from nameize.\n\nAlso makes nameize non-public since it's only locally used.", "tree": {"sha": "cf8ae7c20c19c89e3e78ac6eb25cab756973697a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf8ae7c20c19c89e3e78ac6eb25cab756973697a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7221b07a075aacad2b0d5962568000ba7defe5f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7221b07a075aacad2b0d5962568000ba7defe5f9", "html_url": "https://github.com/rust-lang/rust/commit/7221b07a075aacad2b0d5962568000ba7defe5f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7221b07a075aacad2b0d5962568000ba7defe5f9/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "568874bc1007162276243e613324c710c72ec932", "url": "https://api.github.com/repos/rust-lang/rust/commits/568874bc1007162276243e613324c710c72ec932", "html_url": "https://github.com/rust-lang/rust/commit/568874bc1007162276243e613324c710c72ec932"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "42c71d93a2849685b04ba710424924661785284d", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7221b07a075aacad2b0d5962568000ba7defe5f9/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7221b07a075aacad2b0d5962568000ba7defe5f9/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=7221b07a075aacad2b0d5962568000ba7defe5f9", "patch": "@@ -200,20 +200,20 @@ pub enum NamedMatch {\n     MatchedNonterminal(Rc<Nonterminal>)\n }\n \n-pub fn nameize(p_s: &ParseSess, ms: &[TokenTree], res: &[Rc<NamedMatch>])\n+fn nameize(ms: &[TokenTree], res: &[Rc<NamedMatch>])\n             -> ParseResult<HashMap<Ident, Rc<NamedMatch>>> {\n-    fn n_rec(p_s: &ParseSess, m: &TokenTree, res: &[Rc<NamedMatch>],\n+    fn n_rec(m: &TokenTree, res: &[Rc<NamedMatch>],\n              ret_val: &mut HashMap<Ident, Rc<NamedMatch>>, idx: &mut usize)\n              -> Result<(), (syntax_pos::Span, String)> {\n         match *m {\n             TokenTree::Sequence(_, ref seq) => {\n                 for next_m in &seq.tts {\n-                    n_rec(p_s, next_m, res, ret_val, idx)?\n+                    n_rec(next_m, res, ret_val, idx)?\n                 }\n             }\n             TokenTree::Delimited(_, ref delim) => {\n                 for next_m in &delim.tts {\n-                    n_rec(p_s, next_m, res, ret_val, idx)?;\n+                    n_rec(next_m, res, ret_val, idx)?;\n                 }\n             }\n             TokenTree::Token(sp, MatchNt(bind_name, _)) => {\n@@ -239,7 +239,7 @@ pub fn nameize(p_s: &ParseSess, ms: &[TokenTree], res: &[Rc<NamedMatch>])\n     let mut ret_val = HashMap::new();\n     let mut idx = 0;\n     for m in ms {\n-        match n_rec(p_s, m, res, &mut ret_val, &mut idx) {\n+        match n_rec(m, res, &mut ret_val, &mut idx) {\n             Ok(_) => {},\n             Err((sp, msg)) => return Error(sp, msg),\n         }\n@@ -425,7 +425,7 @@ pub fn parse(sess: &ParseSess, rdr: TtReader, ms: &[TokenTree]) -> NamedParseRes\n             if eof_eis.len() == 1 {\n                 let v = eof_eis[0].matches.iter_mut()\n                     .map(|dv| dv.pop().unwrap()).collect::<Vec<_>>();\n-                return nameize(sess, ms, &v[..]);\n+                return nameize(ms, &v[..]);\n             } else if eof_eis.len() > 1 {\n                 return Error(parser.span, \"ambiguity: multiple successful parses\".to_string());\n             } else {"}]}