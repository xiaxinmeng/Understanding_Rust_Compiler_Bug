{"sha": "ab30b6a6edac27b618240f05c0bdbcb39a999f8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMzBiNmE2ZWRhYzI3YjYxODI0MGYwNWMwYmRiY2IzOWE5OTlmOGE=", "commit": {"author": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2017-09-13T15:00:40Z"}, "committer": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2017-09-13T15:00:40Z"}, "message": "Refactor how to get a lang item's name\n\nSmall refactorings", "tree": {"sha": "b20d8ec4b5ffc9af3d6b577f9c782968e897e265", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b20d8ec4b5ffc9af3d6b577f9c782968e897e265"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab30b6a6edac27b618240f05c0bdbcb39a999f8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab30b6a6edac27b618240f05c0bdbcb39a999f8a", "html_url": "https://github.com/rust-lang/rust/commit/ab30b6a6edac27b618240f05c0bdbcb39a999f8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab30b6a6edac27b618240f05c0bdbcb39a999f8a/comments", "author": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74107f987b35e401969ca3b596cddb1897646d06", "url": "https://api.github.com/repos/rust-lang/rust/commits/74107f987b35e401969ca3b596cddb1897646d06", "html_url": "https://github.com/rust-lang/rust/commit/74107f987b35e401969ca3b596cddb1897646d06"}], "stats": {"total": 26, "additions": 10, "deletions": 16}, "files": [{"sha": "9a70d7b9e3f8901175b678f3f6beb8a0db65d18a", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ab30b6a6edac27b618240f05c0bdbcb39a999f8a/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab30b6a6edac27b618240f05c0bdbcb39a999f8a/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=ab30b6a6edac27b618240f05c0bdbcb39a999f8a", "patch": "@@ -46,6 +46,14 @@ enum_from_u32! {\n     }\n }\n \n+impl LangItem {\n+    fn name(self) -> &'static str {\n+        match self {\n+            $( $variant => $name, )*\n+        }\n+    }\n+}\n+\n pub struct LanguageItems {\n     pub items: Vec<Option<DefId>>,\n     pub missing: Vec<LangItem>,\n@@ -65,22 +73,8 @@ impl LanguageItems {\n         &*self.items\n     }\n \n-    pub fn item_name(index: usize) -> &'static str {\n-        let item: Option<LangItem> = LangItem::from_u32(index as u32);\n-        match item {\n-            $( Some($variant) => $name, )*\n-            None => \"???\"\n-        }\n-    }\n-\n     pub fn require(&self, it: LangItem) -> Result<DefId, String> {\n-        match self.items[it as usize] {\n-            Some(id) => Ok(id),\n-            None => {\n-                Err(format!(\"requires `{}` lang_item\",\n-                            LanguageItems::item_name(it as usize)))\n-            }\n-        }\n+        self.items[it as usize].ok_or(format!(\"requires `{}` lang_item\", it.name()))\n     }\n \n     pub fn fn_trait_kind(&self, id: DefId) -> Option<ty::ClosureKind> {\n@@ -158,7 +152,7 @@ impl<'a, 'tcx> LanguageItemCollector<'a, 'tcx> {\n         // Check for duplicates.\n         match self.items.items[item_index] {\n             Some(original_def_id) if original_def_id != item_def_id => {\n-                let name = LanguageItems::item_name(item_index);\n+                let name = LangItem::from_u32(item_index as u32).unwrap().name();\n                 let mut err = match self.tcx.hir.span_if_local(item_def_id) {\n                     Some(span) => struct_span_err!(\n                         self.tcx.sess,"}]}