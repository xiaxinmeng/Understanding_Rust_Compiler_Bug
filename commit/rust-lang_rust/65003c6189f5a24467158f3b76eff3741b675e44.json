{"sha": "65003c6189f5a24467158f3b76eff3741b675e44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MDAzYzYxODlmNWEyNDQ2NzE1OGYzYjc2ZWZmMzc0MWI2NzVlNDQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-07-28T21:11:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-28T21:11:49Z"}, "message": "Rollup merge of #87550 - pietroalbini:ci-only-when-channel, r=Mark-Simulacrum\n\nAdd `CI_ONLY_WHEN_CHANNEL` and run `x86_64-gnu-stable` only on nightly\n\nBackporting a commit made on #87508. cc ``@Mark-Simulacrum``", "tree": {"sha": "c12b9c43a13c190a221e5e1eb4fd9f63e0eb24f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c12b9c43a13c190a221e5e1eb4fd9f63e0eb24f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65003c6189f5a24467158f3b76eff3741b675e44", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhAcgWCRBK7hj4Ov3rIwAA7wkIABqg4+p216PbkCRap1xuuJUr\nooZbSS0iX4ak71r9220Z42sbEB+/9P1wzWzvDu5Nr48vP+ocIJ2mqDISoxFK+3St\n0Unrp85LHErIFYmh52TkTGkkE8UprNbZVTQiDNf474Eg75EfLKKrB1A13XwIpkJg\n7xuHbwtQ4GKA6FJTzZePVdIbW8lbspEjyoXoXGWemeEcJ1ZkN5WJGYHWft5hiNVI\nzWpjOiBmPIVUXGJmCMvjUR06Bi4RIqCap9VHE/0qB1kQOGcztv5NfruGcJUjGZA4\nhittxfFamQfjvGADCy27shYtBC0VrTZTTkR9c4wZkJQrg81KvR2rcfy/IcugqXE=\n=efSO\n-----END PGP SIGNATURE-----\n", "payload": "tree c12b9c43a13c190a221e5e1eb4fd9f63e0eb24f0\nparent 9e94d7bbe64679ec6815d23b484b3efbedf2d90a\nparent 4b5ac09e326907c26aa3988044dbc7ef420e39e2\nauthor Yuki Okushi <jtitor@2k36.org> 1627506709 +0900\ncommitter GitHub <noreply@github.com> 1627506709 +0900\n\nRollup merge of #87550 - pietroalbini:ci-only-when-channel, r=Mark-Simulacrum\n\nAdd `CI_ONLY_WHEN_CHANNEL` and run `x86_64-gnu-stable` only on nightly\n\nBackporting a commit made on #87508. cc ``@Mark-Simulacrum``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65003c6189f5a24467158f3b76eff3741b675e44", "html_url": "https://github.com/rust-lang/rust/commit/65003c6189f5a24467158f3b76eff3741b675e44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65003c6189f5a24467158f3b76eff3741b675e44/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e94d7bbe64679ec6815d23b484b3efbedf2d90a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e94d7bbe64679ec6815d23b484b3efbedf2d90a", "html_url": "https://github.com/rust-lang/rust/commit/9e94d7bbe64679ec6815d23b484b3efbedf2d90a"}, {"sha": "4b5ac09e326907c26aa3988044dbc7ef420e39e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b5ac09e326907c26aa3988044dbc7ef420e39e2", "html_url": "https://github.com/rust-lang/rust/commit/4b5ac09e326907c26aa3988044dbc7ef420e39e2"}], "stats": {"total": 67, "additions": 42, "deletions": 25}, "files": [{"sha": "fe67a14c0fe456fc761a0a5de8869239e833c94c", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/65003c6189f5a24467158f3b76eff3741b675e44/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/65003c6189f5a24467158f3b76eff3741b675e44/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=65003c6189f5a24467158f3b76eff3741b675e44", "patch": "@@ -263,6 +263,7 @@ jobs:\n             env:\n               IMAGE: x86_64-gnu\n               RUST_CI_OVERRIDE_RELEASE_CHANNEL: stable\n+              CI_ONLY_WHEN_CHANNEL: nightly\n             os: ubuntu-latest-xl\n           - name: x86_64-gnu-aux\n             os: ubuntu-latest-xl"}, {"sha": "128897e580b68603dfe63be00b8d69ba8ce6b7bc", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65003c6189f5a24467158f3b76eff3741b675e44/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/65003c6189f5a24467158f3b76eff3741b675e44/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=65003c6189f5a24467158f3b76eff3741b675e44", "patch": "@@ -416,6 +416,10 @@ jobs:\n             env:\n               IMAGE: x86_64-gnu\n               RUST_CI_OVERRIDE_RELEASE_CHANNEL: stable\n+              # Only run this job on the nightly channel. Running this on beta\n+              # could cause failures when `dev: 1` in `stage0.txt`, and running\n+              # this on stable is useless.\n+              CI_ONLY_WHEN_CHANNEL: nightly\n             <<: *job-linux-xl\n \n           - name: x86_64-gnu-aux"}, {"sha": "bb48fcb5a216eaaef3da799ed4865186a2b3f6d1", "filename": "src/ci/scripts/should-skip-this.sh", "status": "modified", "additions": 37, "deletions": 25, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/65003c6189f5a24467158f3b76eff3741b675e44/src%2Fci%2Fscripts%2Fshould-skip-this.sh", "raw_url": "https://github.com/rust-lang/rust/raw/65003c6189f5a24467158f3b76eff3741b675e44/src%2Fci%2Fscripts%2Fshould-skip-this.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fshould-skip-this.sh?ref=65003c6189f5a24467158f3b76eff3741b675e44", "patch": "@@ -8,31 +8,43 @@ IFS=$'\\n\\t'\n \n source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n \n-if [[ -z \"${CI_ONLY_WHEN_SUBMODULES_CHANGED+x}\" ]]; then\n-    echo \"Executing the job since there is no skip rule in effect\"\n-    exit 0\n+if [[ -n \"${CI_ONLY_WHEN_SUBMODULES_CHANGED-}\" ]]; then\n+    git fetch \"https://github.com/$GITHUB_REPOSITORY\" \"$GITHUB_BASE_REF\"\n+    BASE_COMMIT=\"$(git merge-base FETCH_HEAD HEAD)\"\n+\n+    echo \"Searching for toolstate changes between $BASE_COMMIT and $(git rev-parse HEAD)\"\n+\n+    if git diff \"$BASE_COMMIT\" | grep --quiet \"^index .* 160000\"; then\n+        # Submodules pseudo-files inside git have the 160000 permissions, so when\n+        # those files are present in the diff a submodule was updated.\n+        echo \"Submodules were updated\"\n+    elif ! git diff --quiet \"$BASE_COMMIT\" -- src/tools/clippy src/tools/rustfmt; then\n+        # There is not an easy blanket search for subtrees. For now, manually list\n+        # the subtrees.\n+        echo \"Clippy or rustfmt subtrees were updated\"\n+    elif ! (git diff --quiet \"$BASE_COMMIT\" -- \\\n+             src/test/rustdoc-gui \\\n+             src/librustdoc \\\n+             src/tools/rustdoc-gui); then\n+        # There was a change in either rustdoc or in its GUI tests.\n+        echo \"Rustdoc was updated\"\n+    else\n+        echo \"Not executing this job since no submodules nor subtrees were updated\"\n+        ciCommandSetEnv SKIP_JOB 1\n+        exit 0\n+    fi\n fi\n \n-git fetch \"https://github.com/$GITHUB_REPOSITORY\" \"$GITHUB_BASE_REF\"\n-BASE_COMMIT=\"$(git merge-base FETCH_HEAD HEAD)\"\n-\n-echo \"Searching for toolstate changes between $BASE_COMMIT and $(git rev-parse HEAD)\"\n-\n-if git diff \"$BASE_COMMIT\" | grep --quiet \"^index .* 160000\"; then\n-    # Submodules pseudo-files inside git have the 160000 permissions, so when\n-    # those files are present in the diff a submodule was updated.\n-    echo \"Executing the job since submodules are updated\"\n-elif ! git diff --quiet \"$BASE_COMMIT\" -- src/tools/clippy src/tools/rustfmt; then\n-    # There is not an easy blanket search for subtrees. For now, manually list\n-    # the subtrees.\n-    echo \"Executing the job since clippy or rustfmt subtree was updated\"\n-elif ! (git diff --quiet \"$BASE_COMMIT\" -- \\\n-         src/test/rustdoc-gui \\\n-         src/librustdoc \\\n-         src/tools/rustdoc-gui); then\n-    # There was a change in either rustdoc or in its GUI tests.\n-    echo \"Executing the job since rustdoc was updated\"\n-else\n-    echo \"Not executing this job since no submodules nor subtrees were updated\"\n-    ciCommandSetEnv SKIP_JOB 1\n+if [[ -n \"${CI_ONLY_WHEN_CHANNEL-}\" ]]; then\n+    if [[ \"${CI_ONLY_WHEN_CHANNEL}\" = \"$(cat src/ci/channel)\" ]]; then\n+        echo \"The channel is the expected one\"\n+    else\n+        echo \"Not executing this job as the channel is not the expected one\"\n+        ciCommandSetEnv SKIP_JOB 1\n+        exit 0\n+    fi\n fi\n+\n+\n+echo \"Executing the job since there is no skip rule preventing the execution\"\n+exit 0"}]}