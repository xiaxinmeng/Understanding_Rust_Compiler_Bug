{"sha": "f45aba9ced97ff2dae47ecceb2bd03950a71a07d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NWFiYTljZWQ5N2ZmMmRhZTQ3ZWNjZWIyYmQwMzk1MGE3MWEwN2Q=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-12T23:02:23Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-12T23:02:23Z"}, "message": "Cargo clippy", "tree": {"sha": "ff5cf3986cac12fbb15a4c490d42d9b92f78b2ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff5cf3986cac12fbb15a4c490d42d9b92f78b2ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f45aba9ced97ff2dae47ecceb2bd03950a71a07d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f45aba9ced97ff2dae47ecceb2bd03950a71a07d", "html_url": "https://github.com/rust-lang/rust/commit/f45aba9ced97ff2dae47ecceb2bd03950a71a07d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f45aba9ced97ff2dae47ecceb2bd03950a71a07d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c485202907e568d7b61d3958f0b58ff16d8c16d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c485202907e568d7b61d3958f0b58ff16d8c16d7", "html_url": "https://github.com/rust-lang/rust/commit/c485202907e568d7b61d3958f0b58ff16d8c16d7"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "9bfeff8420e90a07345b3054ab5889fb13d3882d", "filename": "src/bin/git-fmt.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f45aba9ced97ff2dae47ecceb2bd03950a71a07d/src%2Fbin%2Fgit-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45aba9ced97ff2dae47ecceb2bd03950a71a07d/src%2Fbin%2Fgit-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fgit-fmt.rs?ref=f45aba9ced97ff2dae47ecceb2bd03950a71a07d", "patch": "@@ -15,18 +15,18 @@ use rustfmt::{run, Input};\n use rustfmt::config;\n \n \n-fn prune_files<'a>(files: Vec<&'a str>) -> Vec<&'a str> {\n+fn prune_files(files: Vec<&str>) -> Vec<&str> {\n     let prefixes: Vec<_> = files\n         .iter()\n         .filter(|f| f.ends_with(\"mod.rs\") || f.ends_with(\"lib.rs\"))\n         .map(|f| &f[..f.len() - 6])\n         .collect();\n \n     let mut pruned_prefixes = vec![];\n-    for p1 in prefixes.into_iter() {\n+    for p1 in prefixes {\n         let mut include = true;\n         if !p1.starts_with(\"src/bin/\") {\n-            for p2 in pruned_prefixes.iter() {\n+            for p2 in &pruned_prefixes {\n                 if p1.starts_with(p2) {\n                     include = false;\n                     break;\n@@ -46,7 +46,7 @@ fn prune_files<'a>(files: Vec<&'a str>) -> Vec<&'a str> {\n             if f.ends_with(\"mod.rs\") || f.ends_with(\"lib.rs\") || f.starts_with(\"src/bin/\") {\n                 return true;\n             }\n-            for pp in pruned_prefixes.iter() {\n+            for pp in &pruned_prefixes {\n                 if f.starts_with(pp) {\n                     include = false;\n                     break;\n@@ -57,7 +57,7 @@ fn prune_files<'a>(files: Vec<&'a str>) -> Vec<&'a str> {\n         .collect()\n }\n \n-fn git_diff(commits: String) -> String {\n+fn git_diff(commits: &str) -> String {\n     let mut cmd = Command::new(\"git\");\n     cmd.arg(\"diff\");\n     if commits != \"0\" {\n@@ -109,7 +109,7 @@ fn check_uncommitted() {\n     debug!(\"uncommitted files: {:?}\", uncommitted);\n     if !uncommitted.is_empty() {\n         println!(\"Found untracked changes:\");\n-        for f in uncommitted.iter() {\n+        for f in &uncommitted {\n             println!(\"  {}\", f);\n         }\n         println!(\"Commit your work, or run with `-u`.\");\n@@ -165,7 +165,7 @@ impl Config {\n         }\n         if matches.free.len() == 1 {\n             let commits = matches.free[0].trim();\n-            if let Err(_) = u32::from_str(&commits) {\n+            if u32::from_str(commits).is_err() {\n                 panic!(\"Couldn't parse number of commits\");\n             }\n             config.commits = commits.to_owned();\n@@ -187,7 +187,7 @@ fn main() {\n         check_uncommitted();\n     }\n \n-    let stdout = git_diff(config.commits);\n+    let stdout = git_diff(&config.commits);\n     let files = get_files(&stdout);\n     debug!(\"files: {:?}\", files);\n     let files = prune_files(files);"}]}