{"sha": "4434e8cefbec96e6928ea23769eb1a83d0f198b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MzRlOGNlZmJlYzk2ZTY5MjhlYTIzNzY5ZWIxYTgzZDBmMTk4YjU=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-09-08T21:59:43Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-09-08T21:59:56Z"}, "message": "Adjust Clippy for CONST_ITEM_MUTATION lint\n\nWe no longer lint assignments to const item fields in the\n`temporary_assignment` lint, since this is now covered by the\n`CONST_ITEM_MUTATION` lint.\n\nAdditionally, we `#![allow(const_item_mutation)]` in the\n`borrow_interior_mutable_const.rs` test. Clippy UI tests are run with\n`-D warnings`, which seems to cause builtin lints to prevent Clippy\nlints from running.", "tree": {"sha": "c05ed5ed0c90c88594e689b508bbddacbe3d835e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c05ed5ed0c90c88594e689b508bbddacbe3d835e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4434e8cefbec96e6928ea23769eb1a83d0f198b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl9X/zUACgkQtAh+UQ6Y\nsWQ8Cg/8DfKmGcHltuINcn3FiyAAnd5ldLNGmen7gbPAD24bn7+ro+Gaygnx/VmL\n52e4xhA0hX0o8jJAMUyCSq9SdIb9X0pbGfmEjEX/1vPY2zILic5jqtuPbk2+I43S\nttwZ+g9r+kBQE1YRENZtAh2wKSJn9DIWjd85OuITvFUPfzD4NlceSKSgHvCcW9Hq\ndRcdsallSjdZNAISgy1VnyZ4GB7fz1NYRphhUnjxdzKbYRQbDr2I5QLMG1NRHIqy\n2tumTfhiTBIo6YVh0lbd5v3CM74v/5q24da6IcWmbRH8QiFUsWS6GpbO6MMHUEY6\n/Qru0ESB7j7XYQGhQRKSRrWjMqwg/CtwmyNF7F7rrVAjCrfZ85uE4J//DI5UsM/d\n9WWnBxHXQbFirO28Vd40rAENmrrZSB5+/dgLXOLTIxQ9FHQk/M7oAFIBaFHZVpZq\nJicJXSEckM1tRMGNCxoywG4oPaT7trypDXU1jxzC2+T+XinnwUC1pGoGehDx7SG3\nrK+Yx4io/8GkxqcirytwdLWhsHQPjNcMybgZ0bzFCS4evHG73hKtiej5s5Yt64xk\n+tI0FtSVp33qXuXnGGIwguz+gpl0hJGcOPPxitIk/VdXvrXk0NZtQt3L9HZbDdqn\nuCiC5JpyI1OoL3FtMd2nnIjLnFFvR2vSBcc8K06bGAkmgNSHklM=\n=qW3Z\n-----END PGP SIGNATURE-----", "payload": "tree c05ed5ed0c90c88594e689b508bbddacbe3d835e\nparent f422ef141a1185f721093205fabc6f5a57e3dcc0\nauthor Aaron Hill <aa1ronham@gmail.com> 1599602383 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1599602396 -0400\n\nAdjust Clippy for CONST_ITEM_MUTATION lint\n\nWe no longer lint assignments to const item fields in the\n`temporary_assignment` lint, since this is now covered by the\n`CONST_ITEM_MUTATION` lint.\n\nAdditionally, we `#![allow(const_item_mutation)]` in the\n`borrow_interior_mutable_const.rs` test. Clippy UI tests are run with\n`-D warnings`, which seems to cause builtin lints to prevent Clippy\nlints from running.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4434e8cefbec96e6928ea23769eb1a83d0f198b5", "html_url": "https://github.com/rust-lang/rust/commit/4434e8cefbec96e6928ea23769eb1a83d0f198b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4434e8cefbec96e6928ea23769eb1a83d0f198b5/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f422ef141a1185f721093205fabc6f5a57e3dcc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f422ef141a1185f721093205fabc6f5a57e3dcc0", "html_url": "https://github.com/rust-lang/rust/commit/f422ef141a1185f721093205fabc6f5a57e3dcc0"}], "stats": {"total": 72, "additions": 24, "deletions": 48}, "files": [{"sha": "2b6ddadd4c112aca2f5cfc49183c2c2d30079821", "filename": "src/tools/clippy/clippy_lints/src/temporary_assignment.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4434e8cefbec96e6928ea23769eb1a83d0f198b5/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4434e8cefbec96e6928ea23769eb1a83d0f198b5/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftemporary_assignment.rs?ref=4434e8cefbec96e6928ea23769eb1a83d0f198b5", "patch": "@@ -1,5 +1,4 @@\n use crate::utils::{is_adjusted, span_lint};\n-use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -22,10 +21,9 @@ declare_clippy_lint! {\n     \"assignments to temporaries\"\n }\n \n-fn is_temporary(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n+fn is_temporary(_cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n     match &expr.kind {\n         ExprKind::Struct(..) | ExprKind::Tup(..) => true,\n-        ExprKind::Path(qpath) => matches!(cx.qpath_res(qpath, expr.hir_id), Res::Def(DefKind::Const, ..)),\n         _ => false,\n     }\n }"}, {"sha": "39f87510548503654c7a610837fed55c9ebc64de", "filename": "src/tools/clippy/tests/ui/borrow_interior_mutable_const.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4434e8cefbec96e6928ea23769eb1a83d0f198b5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_interior_mutable_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4434e8cefbec96e6928ea23769eb1a83d0f198b5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_interior_mutable_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_interior_mutable_const.rs?ref=4434e8cefbec96e6928ea23769eb1a83d0f198b5", "patch": "@@ -1,5 +1,6 @@\n #![warn(clippy::borrow_interior_mutable_const)]\n #![allow(clippy::declare_interior_mutable_const, clippy::ref_in_deref)]\n+#![allow(const_item_mutation)]\n \n use std::borrow::Cow;\n use std::cell::{Cell, UnsafeCell};"}, {"sha": "5800af7e960f4da7247f652d0685bcaf3af32093", "filename": "src/tools/clippy/tests/ui/borrow_interior_mutable_const.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4434e8cefbec96e6928ea23769eb1a83d0f198b5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_interior_mutable_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4434e8cefbec96e6928ea23769eb1a83d0f198b5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_interior_mutable_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fborrow_interior_mutable_const.stderr?ref=4434e8cefbec96e6928ea23769eb1a83d0f198b5", "patch": "@@ -1,5 +1,5 @@\n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:65:5\n+  --> $DIR/borrow_interior_mutable_const.rs:66:5\n    |\n LL |     ATOMIC.store(1, Ordering::SeqCst); //~ ERROR interior mutability\n    |     ^^^^^^\n@@ -8,119 +8,119 @@ LL |     ATOMIC.store(1, Ordering::SeqCst); //~ ERROR interior mutability\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:66:16\n+  --> $DIR/borrow_interior_mutable_const.rs:67:16\n    |\n LL |     assert_eq!(ATOMIC.load(Ordering::SeqCst), 5); //~ ERROR interior mutability\n    |                ^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:69:22\n+  --> $DIR/borrow_interior_mutable_const.rs:70:22\n    |\n LL |     let _once_ref = &ONCE_INIT; //~ ERROR interior mutability\n    |                      ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:70:25\n+  --> $DIR/borrow_interior_mutable_const.rs:71:25\n    |\n LL |     let _once_ref_2 = &&ONCE_INIT; //~ ERROR interior mutability\n    |                         ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:71:27\n+  --> $DIR/borrow_interior_mutable_const.rs:72:27\n    |\n LL |     let _once_ref_4 = &&&&ONCE_INIT; //~ ERROR interior mutability\n    |                           ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:72:26\n+  --> $DIR/borrow_interior_mutable_const.rs:73:26\n    |\n LL |     let _once_mut = &mut ONCE_INIT; //~ ERROR interior mutability\n    |                          ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:83:14\n+  --> $DIR/borrow_interior_mutable_const.rs:84:14\n    |\n LL |     let _ = &ATOMIC_TUPLE; //~ ERROR interior mutability\n    |              ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:84:14\n+  --> $DIR/borrow_interior_mutable_const.rs:85:14\n    |\n LL |     let _ = &ATOMIC_TUPLE.0; //~ ERROR interior mutability\n    |              ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:85:19\n+  --> $DIR/borrow_interior_mutable_const.rs:86:19\n    |\n LL |     let _ = &(&&&&ATOMIC_TUPLE).0; //~ ERROR interior mutability\n    |                   ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:86:14\n+  --> $DIR/borrow_interior_mutable_const.rs:87:14\n    |\n LL |     let _ = &ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n    |              ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:87:13\n+  --> $DIR/borrow_interior_mutable_const.rs:88:13\n    |\n LL |     let _ = ATOMIC_TUPLE.0[0].load(Ordering::SeqCst); //~ ERROR interior mutability\n    |             ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:93:13\n+  --> $DIR/borrow_interior_mutable_const.rs:94:13\n    |\n LL |     let _ = ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n    |             ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:98:5\n+  --> $DIR/borrow_interior_mutable_const.rs:99:5\n    |\n LL |     CELL.set(2); //~ ERROR interior mutability\n    |     ^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:99:16\n+  --> $DIR/borrow_interior_mutable_const.rs:100:16\n    |\n LL |     assert_eq!(CELL.get(), 6); //~ ERROR interior mutability\n    |                ^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:112:5\n+  --> $DIR/borrow_interior_mutable_const.rs:113:5\n    |\n LL |     u64::ATOMIC.store(5, Ordering::SeqCst); //~ ERROR interior mutability\n    |     ^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/borrow_interior_mutable_const.rs:113:16\n+  --> $DIR/borrow_interior_mutable_const.rs:114:16\n    |\n LL |     assert_eq!(u64::ATOMIC.load(Ordering::SeqCst), 9); //~ ERROR interior mutability\n    |                ^^^^^^^^^^^"}, {"sha": "d6f56d40c5d4eb8d9664dc2c233f4fe04204c2d7", "filename": "src/tools/clippy/tests/ui/temporary_assignment.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4434e8cefbec96e6928ea23769eb1a83d0f198b5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4434e8cefbec96e6928ea23769eb1a83d0f198b5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftemporary_assignment.rs?ref=4434e8cefbec96e6928ea23769eb1a83d0f198b5", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::temporary_assignment)]\n+#![allow(const_item_mutation)]\n \n use std::ops::{Deref, DerefMut};\n "}, {"sha": "4cc32c79f05ce3389f36da19d98258e919a34f9f", "filename": "src/tools/clippy/tests/ui/temporary_assignment.stderr", "status": "modified", "additions": 5, "deletions": 29, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4434e8cefbec96e6928ea23769eb1a83d0f198b5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftemporary_assignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4434e8cefbec96e6928ea23769eb1a83d0f198b5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftemporary_assignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftemporary_assignment.stderr?ref=4434e8cefbec96e6928ea23769eb1a83d0f198b5", "patch": "@@ -1,13 +1,13 @@\n error: assignment to temporary\n-  --> $DIR/temporary_assignment.rs:47:5\n+  --> $DIR/temporary_assignment.rs:48:5\n    |\n LL |     Struct { field: 0 }.field = 1;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::temporary-assignment` implied by `-D warnings`\n \n error: assignment to temporary\n-  --> $DIR/temporary_assignment.rs:48:5\n+  --> $DIR/temporary_assignment.rs:49:5\n    |\n LL | /     MultiStruct {\n LL | |         structure: Struct { field: 0 },\n@@ -17,40 +17,16 @@ LL | |     .field = 1;\n    | |______________^\n \n error: assignment to temporary\n-  --> $DIR/temporary_assignment.rs:53:5\n+  --> $DIR/temporary_assignment.rs:54:5\n    |\n LL |     ArrayStruct { array: [0] }.array[0] = 1;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: assignment to temporary\n-  --> $DIR/temporary_assignment.rs:54:5\n+  --> $DIR/temporary_assignment.rs:55:5\n    |\n LL |     (0, 0).0 = 1;\n    |     ^^^^^^^^^^^^\n \n-error: assignment to temporary\n-  --> $DIR/temporary_assignment.rs:56:5\n-   |\n-LL |     A.0 = 2;\n-   |     ^^^^^^^\n-\n-error: assignment to temporary\n-  --> $DIR/temporary_assignment.rs:57:5\n-   |\n-LL |     B.field = 2;\n-   |     ^^^^^^^^^^^\n-\n-error: assignment to temporary\n-  --> $DIR/temporary_assignment.rs:58:5\n-   |\n-LL |     C.structure.field = 2;\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n-\n-error: assignment to temporary\n-  --> $DIR/temporary_assignment.rs:59:5\n-   |\n-LL |     D.array[0] = 2;\n-   |     ^^^^^^^^^^^^^^\n-\n-error: aborting due to 8 previous errors\n+error: aborting due to 4 previous errors\n "}]}