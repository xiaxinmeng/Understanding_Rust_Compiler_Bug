{"sha": "4ca0259b20bfc2f33f23e8b82864908fbb3b8133", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYTAyNTliMjBiZmMyZjMzZjIzZThiODI4NjQ5MDhmYmIzYjgxMzM=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-10T22:34:58Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-10T22:36:41Z"}, "message": "Update the current id when we create sub parsers.", "tree": {"sha": "1d215874467c4be9db02da596a73d0dea08667a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d215874467c4be9db02da596a73d0dea08667a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ca0259b20bfc2f33f23e8b82864908fbb3b8133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ca0259b20bfc2f33f23e8b82864908fbb3b8133", "html_url": "https://github.com/rust-lang/rust/commit/4ca0259b20bfc2f33f23e8b82864908fbb3b8133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ca0259b20bfc2f33f23e8b82864908fbb3b8133/comments", "author": null, "committer": null, "parents": [{"sha": "ab7b9b847acfd1151543fb6ad99967e71fddd870", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab7b9b847acfd1151543fb6ad99967e71fddd870", "html_url": "https://github.com/rust-lang/rust/commit/ab7b9b847acfd1151543fb6ad99967e71fddd870"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "f26dd02e4b37e5de418203047ba8fc42d744c338", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4ca0259b20bfc2f33f23e8b82864908fbb3b8133/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ca0259b20bfc2f33f23e8b82864908fbb3b8133/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=4ca0259b20bfc2f33f23e8b82864908fbb3b8133", "patch": "@@ -54,7 +54,8 @@ impure fn compile_input(session.session sess,\n                         eval.env env,\n                         str input, str output,\n                         bool shared) {\n-    auto p = parser.new_parser(sess, env, 0, input);\n+    auto def = tup(0, 0);\n+    auto p = parser.new_parser(sess, env, def, input);\n     auto crate = parse_input(sess, p, input);\n     crate = resolve.resolve_crate(sess, crate);\n     crate = typeck.check_crate(sess, crate);\n@@ -64,7 +65,8 @@ impure fn compile_input(session.session sess,\n impure fn pretty_print_input(session.session sess,\n                              eval.env env,\n                              str input) {\n-    auto p = front.parser.new_parser(sess, env, 0, input);\n+    auto def = tup(0, 0);\n+    auto p = front.parser.new_parser(sess, env, def, input);\n     auto crate = front.parser.parse_crate_from_source_file(p);\n     pretty.pprust.print_ast(crate.node.module, std.io.stdout_writer());\n }"}, {"sha": "efa9aa0d92802035f938918f4ffa0cd959d4a0b3", "filename": "src/comp/front/eval.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4ca0259b20bfc2f33f23e8b82864908fbb3b8133/src%2Fcomp%2Ffront%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ca0259b20bfc2f33f23e8b82864908fbb3b8133/src%2Fcomp%2Ffront%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Feval.rs?ref=4ca0259b20bfc2f33f23e8b82864908fbb3b8133", "patch": "@@ -393,9 +393,12 @@ impure fn eval_crate_directive(parser p,\n \n             auto full_path = prefix + std.os.path_sep() + file_path;\n \n-            auto p0 = new_parser(p.get_session(), e, 0, full_path);\n+            auto start_id = p.next_def_id();\n+            auto p0 = new_parser(p.get_session(), e, start_id, full_path);\n             auto m0 = parse_mod_items(p0, token.EOF);\n-            auto im = ast.item_mod(id, m0, p.next_def_id());\n+            auto next_id = p0.next_def_id();\n+            p.set_def(next_id._1);\n+            auto im = ast.item_mod(id, m0, next_id);\n             auto i = @spanned(cdir.span, cdir.span, im);\n             ast.index_item(index, i);\n             append[@ast.item](items, i);"}, {"sha": "2836b12054c93c73978994f79cd147b8d150633e", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4ca0259b20bfc2f33f23e8b82864908fbb3b8133/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ca0259b20bfc2f33f23e8b82864908fbb3b8133/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=4ca0259b20bfc2f33f23e8b82864908fbb3b8133", "patch": "@@ -35,12 +35,13 @@ state type parser =\n           fn get_session() -> session.session;\n           fn get_span() -> common.span;\n           fn next_def_id() -> ast.def_id;\n+          fn set_def(ast.def_num);\n           fn get_prec_table() -> vec[op_spec];\n     };\n \n impure fn new_parser(session.session sess,\n                      eval.env env,\n-                     ast.crate_num crate,\n+                     ast.def_id initial_def,\n                      str path) -> parser {\n     state obj stdio_parser(session.session sess,\n                            eval.env env,\n@@ -94,6 +95,10 @@ impure fn new_parser(session.session sess,\n                 ret tup(crate, def);\n             }\n \n+            fn set_def(ast.def_num d) {\n+                def = d;\n+            }\n+\n             fn get_file_type() -> file_type {\n                 ret ftype;\n             }\n@@ -114,8 +119,8 @@ impure fn new_parser(session.session sess,\n     auto rdr = lexer.new_reader(srdr, path);\n     auto npos = rdr.get_curr_pos();\n     ret stdio_parser(sess, env, ftype, lexer.next_token(rdr),\n-                     npos, npos, 0, UNRESTRICTED, crate, rdr,\n-                     prec_table());\n+                     npos, npos, initial_def._1, UNRESTRICTED, initial_def._0,\n+                     rdr, prec_table());\n }\n \n impure fn unexpected(parser p, token.token t) {"}]}