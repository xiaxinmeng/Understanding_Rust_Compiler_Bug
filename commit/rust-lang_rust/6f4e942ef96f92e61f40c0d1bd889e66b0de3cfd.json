{"sha": "6f4e942ef96f92e61f40c0d1bd889e66b0de3cfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmNGU5NDJlZjk2ZjkyZTYxZjQwYzBkMWJkODg5ZTY2YjBkZTNjZmQ=", "commit": {"author": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-10-08T03:51:43Z"}, "committer": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-10-08T03:56:13Z"}, "message": "update comments referring to old check_method_self_type\n- function has been renamed to check_method_receiver", "tree": {"sha": "c7a8a5c0189383611e111ef1b50c3b25db766de5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7a8a5c0189383611e111ef1b50c3b25db766de5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f4e942ef96f92e61f40c0d1bd889e66b0de3cfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f4e942ef96f92e61f40c0d1bd889e66b0de3cfd", "html_url": "https://github.com/rust-lang/rust/commit/6f4e942ef96f92e61f40c0d1bd889e66b0de3cfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f4e942ef96f92e61f40c0d1bd889e66b0de3cfd/comments", "author": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05f8ddc46a3fc09762a19f6c168550ce1ae66593", "url": "https://api.github.com/repos/rust-lang/rust/commits/05f8ddc46a3fc09762a19f6c168550ce1ae66593", "html_url": "https://github.com/rust-lang/rust/commit/05f8ddc46a3fc09762a19f6c168550ce1ae66593"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6b7a5b3af9669935ee6e27d9b029f0e842941d9c", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f4e942ef96f92e61f40c0d1bd889e66b0de3cfd/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f4e942ef96f92e61f40c0d1bd889e66b0de3cfd/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=6f4e942ef96f92e61f40c0d1bd889e66b0de3cfd", "patch": "@@ -1464,7 +1464,7 @@ impl<'tcx> ExplicitSelf<'tcx> {\n     /// declaration like `self: SomeType` into either `self`,\n     /// `&self`, `&mut self`, or `Box<self>`. We do this here\n     /// by some simple pattern matching. A more precise check\n-    /// is done later in `check_method_self_type()`.\n+    /// is done later in `check_method_receiver()`.\n     ///\n     /// Examples:\n     ///\n@@ -1475,7 +1475,7 @@ impl<'tcx> ExplicitSelf<'tcx> {\n     ///     fn method2(self: &T); // ExplicitSelf::ByValue\n     ///     fn method3(self: Box<&T>); // ExplicitSelf::ByBox\n     ///\n-    ///     // Invalid cases will be caught later by `check_method_self_type`:\n+    ///     // Invalid cases will be caught later by `check_method_receiver`:\n     ///     fn method_err1(self: &mut T); // ExplicitSelf::ByReference\n     /// }\n     /// ```"}]}