{"sha": "4069792d732288d030f5485614e2c58297ce5564", "node_id": "C_kwDOAAsO6NoAKDQwNjk3OTJkNzMyMjg4ZDAzMGY1NDg1NjE0ZTJjNTgyOTdjZTU1NjQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-13T00:17:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-13T00:17:10Z"}, "message": "Rollup merge of #105620 - TaKO8Ki:remove-unnecessary-uses-of-clone, r=compiler-errors\n\nRemove unnecessary uses of `clone`", "tree": {"sha": "171069ee9d01195d551762109234b2dd6f128a14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/171069ee9d01195d551762109234b2dd6f128a14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4069792d732288d030f5485614e2c58297ce5564", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjl8SGCRBK7hj4Ov3rIwAABooIAEs10YwYjmiwXIksJRf8u0X/\nPR9S7eOLMNEz4ngl1QA4BIj7MHDIZX2HXpSx7F8RlCjRiuMJbQhCn/Lk4We+cnMx\nhAQUYz57md0vg7uDvo3arTjG1H5J9vv76T+mmfGPEDXzXNY06DkuPmpcxgtkJL00\nLU5THUtLuNP3Z/97EInYoeihs+tcyhyw9Bq0BrQXN8JVZbT74dcNujPaK0jLsNS9\n66zNBJY0edJuKyvgspo7j8FgjYiqCkiX9M389U7SMJLDyALEN3FHqdddUF3J3cFG\n/WYwCpwmoN4Oj2/uHPSIpmIjXICeLBUECEkUGk1bmXQE2iv4Wksj+GyrrZcVfyM=\n=iVYO\n-----END PGP SIGNATURE-----\n", "payload": "tree 171069ee9d01195d551762109234b2dd6f128a14\nparent 8917cc0f23f97e42e652f9130b7daa6a48193cef\nparent ee40a67cd9283a9e8b0de87926581456252c6c9f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670890630 +0100\ncommitter GitHub <noreply@github.com> 1670890630 +0100\n\nRollup merge of #105620 - TaKO8Ki:remove-unnecessary-uses-of-clone, r=compiler-errors\n\nRemove unnecessary uses of `clone`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4069792d732288d030f5485614e2c58297ce5564", "html_url": "https://github.com/rust-lang/rust/commit/4069792d732288d030f5485614e2c58297ce5564", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4069792d732288d030f5485614e2c58297ce5564/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8917cc0f23f97e42e652f9130b7daa6a48193cef", "url": "https://api.github.com/repos/rust-lang/rust/commits/8917cc0f23f97e42e652f9130b7daa6a48193cef", "html_url": "https://github.com/rust-lang/rust/commit/8917cc0f23f97e42e652f9130b7daa6a48193cef"}, {"sha": "ee40a67cd9283a9e8b0de87926581456252c6c9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee40a67cd9283a9e8b0de87926581456252c6c9f", "html_url": "https://github.com/rust-lang/rust/commit/ee40a67cd9283a9e8b0de87926581456252c6c9f"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "7b8c0d79a17e8519f3fc79a3f65149db2f2537dc", "filename": "compiler/rustc_ast/src/token.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs?ref=4069792d732288d030f5485614e2c58297ce5564", "patch": "@@ -114,7 +114,7 @@ impl Lit {\n                 if let NtExpr(expr) | NtLiteral(expr) = &**nt\n                 && let ast::ExprKind::Lit(token_lit) = expr.kind =>\n             {\n-                Some(token_lit.clone())\n+                Some(token_lit)\n             }\n             _ => None,\n         }"}, {"sha": "039338f543cc591b19b88055b80f6888d47a9310", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=4069792d732288d030f5485614e2c58297ce5564", "patch": "@@ -630,7 +630,7 @@ fn check_incompatible_features(sess: &Session) {\n             {\n                 let spans = vec![f1_span, f2_span];\n                 sess.struct_span_err(\n-                    spans.clone(),\n+                    spans,\n                     &format!(\n                         \"features `{}` and `{}` are incompatible, using them at the same time \\\n                         is not allowed\","}, {"sha": "5fb4dcf09f5df920d9ed096e8dd9a8b517d42056", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=4069792d732288d030f5485614e2c58297ce5564", "patch": "@@ -745,7 +745,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             err.span_suggestion_verbose(\n                 span.shrink_to_hi(),\n                 \"consider cloning the value if the performance cost is acceptable\",\n-                \".clone()\".to_string(),\n+                \".clone()\",\n                 Applicability::MachineApplicable,\n             );\n         }"}, {"sha": "dcf500ddbd3c8d9fc576d6eb8de1261a05f129b8", "filename": "compiler/rustc_builtin_macros/src/alloc_error_handler.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_builtin_macros%2Fsrc%2Falloc_error_handler.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_builtin_macros%2Fsrc%2Falloc_error_handler.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Falloc_error_handler.rs?ref=4069792d732288d030f5485614e2c58297ce5564", "patch": "@@ -32,7 +32,7 @@ pub fn expand(\n             (item, true, ecx.with_def_site_ctxt(fn_kind.sig.span))\n         } else {\n             ecx.sess.parse_sess.span_diagnostic.span_err(item.span(), \"alloc_error_handler must be a function\");\n-            return vec![orig_item.clone()];\n+            return vec![orig_item];\n         };\n \n     // Generate a bunch of new items using the AllocFnFactory"}, {"sha": "4f1a7d709ff8c276900c255977d478fa9a3bec81", "filename": "compiler/rustc_builtin_macros/src/concat_bytes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_builtin_macros%2Fsrc%2Fconcat_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_builtin_macros%2Fsrc%2Fconcat_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fconcat_bytes.rs?ref=4069792d732288d030f5485614e2c58297ce5564", "patch": "@@ -196,7 +196,7 @@ pub fn expand_concat_bytes(\n         }\n     }\n     if !missing_literals.is_empty() {\n-        let mut err = cx.struct_span_err(missing_literals.clone(), \"expected a byte literal\");\n+        let mut err = cx.struct_span_err(missing_literals, \"expected a byte literal\");\n         err.note(\"only byte literals (like `b\\\"foo\\\"`, `b's'`, and `[3, 4, 5]`) can be passed to `concat_bytes!()`\");\n         err.emit();\n         return base::MacEager::expr(DummyResult::raw_expr(sp, true));"}, {"sha": "e20dc906bce9a42bb3c639c27f33d7bfb8db56b2", "filename": "compiler/rustc_codegen_llvm/src/back/lto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs?ref=4069792d732288d030f5485614e2c58297ce5564", "patch": "@@ -210,7 +210,7 @@ pub(crate) fn run_thin(\n }\n \n pub(crate) fn prepare_thin(module: ModuleCodegen<ModuleLlvm>) -> (String, ThinBuffer) {\n-    let name = module.name.clone();\n+    let name = module.name;\n     let buffer = ThinBuffer::new(module.module_llvm.llmod(), true);\n     (name, buffer)\n }"}, {"sha": "9bd2202d2601e6f54dcb7a7bac0a5c001e2eb325", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4069792d732288d030f5485614e2c58297ce5564/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=4069792d732288d030f5485614e2c58297ce5564", "patch": "@@ -330,7 +330,7 @@ pub fn suggest_new_region_bound(\n                             Applicability::MaybeIncorrect,\n                         );\n                     }\n-                    if let Some((param_span, param_ty)) = param.clone() {\n+                    if let Some((param_span, ref param_ty)) = param {\n                         err.span_suggestion_verbose(\n                             param_span,\n                             add_static_bound,"}]}