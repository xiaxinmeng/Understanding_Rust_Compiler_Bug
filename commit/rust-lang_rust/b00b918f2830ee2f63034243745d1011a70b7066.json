{"sha": "b00b918f2830ee2f63034243745d1011a70b7066", "node_id": "C_kwDOAAsO6NoAKGIwMGI5MThmMjgzMGVlMmY2MzAzNDI0Mzc0NWQxMDExYTcwYjcwNjY", "commit": {"author": {"name": "fee1-dead", "email": "ent3rm4n@gmail.com", "date": "2022-09-25T14:06:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-25T14:06:40Z"}, "message": "Rollup merge of #102245 - ink-feather-org:const_cmp_by, r=fee1-dead\n\nConstify cmp_min_max_by.\n\nConstifies `core::cmp::{min, max}_by[_key]` behind the `const_cmp` #92391 feature gate, using `const_closure`.", "tree": {"sha": "bd2f418917f588c532df96a5a78a4b97c398f374", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd2f418917f588c532df96a5a78a4b97c398f374"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b00b918f2830ee2f63034243745d1011a70b7066", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjMGBwCRBK7hj4Ov3rIwAAVEAIAIY1Nr3BlGWD8xb+sJAFw5SE\nvNO96whGjbS1ZSJryr2TBFdSG5CDqWhYe+IEsad5A3KHOOftaAfoNq1fR7htztkK\nGJQhlc9TSzcnAivirfDWmnSviZu3Dhq1oBKQyRO5wbIaF8NCcJdAHe9151KpTaY0\nO5pXEh9Uqc55tm++JtSAP/HGiqJ4+G4QaOLLOF65f4QTIJzvRWBdXaU20lVifLrq\nnbr1GCPje7k63kVbJdzekJJziLdHU5FBagSnS8NRjE1QtdVni9w1BbT34IcKnGRD\nyGBTbRa2Nj7krOmiK64NGvW0kENULigPx5FfD5wehH4FWfnd2i16EHTdDR8jH4w=\n=sziA\n-----END PGP SIGNATURE-----\n", "payload": "tree bd2f418917f588c532df96a5a78a4b97c398f374\nparent 69aa41b000dacbc4f73a2cfdcbc7e1a8a14e03ca\nparent 2e7a201d2e9e73477f1e69240711bfe09aefdc18\nauthor fee1-dead <ent3rm4n@gmail.com> 1664114800 +0800\ncommitter GitHub <noreply@github.com> 1664114800 +0800\n\nRollup merge of #102245 - ink-feather-org:const_cmp_by, r=fee1-dead\n\nConstify cmp_min_max_by.\n\nConstifies `core::cmp::{min, max}_by[_key]` behind the `const_cmp` #92391 feature gate, using `const_closure`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b00b918f2830ee2f63034243745d1011a70b7066", "html_url": "https://github.com/rust-lang/rust/commit/b00b918f2830ee2f63034243745d1011a70b7066", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b00b918f2830ee2f63034243745d1011a70b7066/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69aa41b000dacbc4f73a2cfdcbc7e1a8a14e03ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/69aa41b000dacbc4f73a2cfdcbc7e1a8a14e03ca", "html_url": "https://github.com/rust-lang/rust/commit/69aa41b000dacbc4f73a2cfdcbc7e1a8a14e03ca"}, {"sha": "2e7a201d2e9e73477f1e69240711bfe09aefdc18", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7a201d2e9e73477f1e69240711bfe09aefdc18", "html_url": "https://github.com/rust-lang/rust/commit/2e7a201d2e9e73477f1e69240711bfe09aefdc18"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "f0fa2e1d2c190a629def5e5185408d8419ff3e71", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 49, "deletions": 6, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/b00b918f2830ee2f63034243745d1011a70b7066/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b00b918f2830ee2f63034243745d1011a70b7066/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=b00b918f2830ee2f63034243745d1011a70b7066", "patch": "@@ -22,6 +22,7 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n+use crate::const_closure::ConstFnMutClosure;\n use crate::marker::Destruct;\n use crate::marker::StructuralPartialEq;\n \n@@ -1222,7 +1223,12 @@ pub const fn min<T: ~const Ord + ~const Destruct>(v1: T, v2: T) -> T {\n #[inline]\n #[must_use]\n #[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n-pub fn min_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n+#[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+pub const fn min_by<T, F: ~const FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T\n+where\n+    T: ~const Destruct,\n+    F: ~const Destruct,\n+{\n     match compare(&v1, &v2) {\n         Ordering::Less | Ordering::Equal => v1,\n         Ordering::Greater => v2,\n@@ -1244,8 +1250,24 @@ pub fn min_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n #[inline]\n #[must_use]\n #[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n-pub fn min_by_key<T, F: FnMut(&T) -> K, K: Ord>(v1: T, v2: T, mut f: F) -> T {\n-    min_by(v1, v2, |v1, v2| f(v1).cmp(&f(v2)))\n+#[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+pub const fn min_by_key<T, F: ~const FnMut(&T) -> K, K: ~const Ord>(v1: T, v2: T, mut f: F) -> T\n+where\n+    T: ~const Destruct,\n+    F: ~const Destruct,\n+    K: ~const Destruct,\n+{\n+    const fn imp<T, F: ~const FnMut(&T) -> K, K: ~const Ord>(\n+        f: &mut F,\n+        (v1, v2): (&T, &T),\n+    ) -> Ordering\n+    where\n+        T: ~const Destruct,\n+        K: ~const Destruct,\n+    {\n+        f(v1).cmp(&f(v2))\n+    }\n+    min_by(v1, v2, ConstFnMutClosure::new(&mut f, imp))\n }\n \n /// Compares and returns the maximum of two values.\n@@ -1286,7 +1308,12 @@ pub const fn max<T: ~const Ord + ~const Destruct>(v1: T, v2: T) -> T {\n #[inline]\n #[must_use]\n #[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n-pub fn max_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n+#[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+pub const fn max_by<T, F: ~const FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T\n+where\n+    T: ~const Destruct,\n+    F: ~const Destruct,\n+{\n     match compare(&v1, &v2) {\n         Ordering::Less | Ordering::Equal => v2,\n         Ordering::Greater => v1,\n@@ -1308,8 +1335,24 @@ pub fn max_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n #[inline]\n #[must_use]\n #[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n-pub fn max_by_key<T, F: FnMut(&T) -> K, K: Ord>(v1: T, v2: T, mut f: F) -> T {\n-    max_by(v1, v2, |v1, v2| f(v1).cmp(&f(v2)))\n+#[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+pub const fn max_by_key<T, F: ~const FnMut(&T) -> K, K: ~const Ord>(v1: T, v2: T, mut f: F) -> T\n+where\n+    T: ~const Destruct,\n+    F: ~const Destruct,\n+    K: ~const Destruct,\n+{\n+    const fn imp<T, F: ~const FnMut(&T) -> K, K: ~const Ord>(\n+        f: &mut F,\n+        (v1, v2): (&T, &T),\n+    ) -> Ordering\n+    where\n+        T: ~const Destruct,\n+        K: ~const Destruct,\n+    {\n+        f(v1).cmp(&f(v2))\n+    }\n+    max_by(v1, v2, ConstFnMutClosure::new(&mut f, imp))\n }\n \n // Implementation of PartialEq, Eq, PartialOrd and Ord for primitive types"}]}