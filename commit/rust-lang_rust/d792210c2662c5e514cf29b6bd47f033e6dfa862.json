{"sha": "d792210c2662c5e514cf29b6bd47f033e6dfa862", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3OTIyMTBjMjY2MmM1ZTUxNGNmMjliNmJkNDdmMDMzZTZkZmE4NjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-07T08:13:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-07T08:13:42Z"}, "message": "Auto merge of #6682 - camsteffen:let-underscore-ref, r=llogiq\n\nFix let_underscore_drop FP\n\nchangelog: Fix let_underscore_drop false positives and negatives\n\nFixes #6633", "tree": {"sha": "18fdec509e1264fd3f5f1cf60af1a19d8a3a82db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18fdec509e1264fd3f5f1cf60af1a19d8a3a82db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d792210c2662c5e514cf29b6bd47f033e6dfa862", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d792210c2662c5e514cf29b6bd47f033e6dfa862", "html_url": "https://github.com/rust-lang/rust/commit/d792210c2662c5e514cf29b6bd47f033e6dfa862", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d792210c2662c5e514cf29b6bd47f033e6dfa862/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfb34c085ff5421ececed8e42b8a8a6fea18c0b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfb34c085ff5421ececed8e42b8a8a6fea18c0b7", "html_url": "https://github.com/rust-lang/rust/commit/dfb34c085ff5421ececed8e42b8a8a6fea18c0b7"}, {"sha": "40ce05654be9f4f6fb80e295f3eb05bee211cfc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/40ce05654be9f4f6fb80e295f3eb05bee211cfc7", "html_url": "https://github.com/rust-lang/rust/commit/40ce05654be9f4f6fb80e295f3eb05bee211cfc7"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "d13c27a1957d60170f48f866120e17d070376fd1", "filename": "clippy_dev/src/serve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d792210c2662c5e514cf29b6bd47f033e6dfa862/clippy_dev%2Fsrc%2Fserve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d792210c2662c5e514cf29b6bd47f033e6dfa862/clippy_dev%2Fsrc%2Fserve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fserve.rs?ref=d792210c2662c5e514cf29b6bd47f033e6dfa862", "patch": "@@ -34,7 +34,7 @@ pub fn run(port: u16, lint: Option<&str>) -> ! {\n                 // Give some time for python to start\n                 thread::sleep(Duration::from_millis(500));\n                 // Launch browser after first export.py has completed and http.server is up\n-                let _ = opener::open(url);\n+                let _result = opener::open(url);\n             });\n         }\n         thread::sleep(Duration::from_millis(1000));"}, {"sha": "7e96dfcc7da0fef32a8e6f681b620b42649ad2c6", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d792210c2662c5e514cf29b6bd47f033e6dfa862/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d792210c2662c5e514cf29b6bd47f033e6dfa862/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=d792210c2662c5e514cf29b6bd47f033e6dfa862", "patch": "@@ -5,7 +5,7 @@ use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::subst::GenericArgKind;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n-use crate::utils::{implements_trait, is_must_use_func_call, is_must_use_ty, match_type, paths, span_lint_and_help};\n+use crate::utils::{is_must_use_func_call, is_must_use_ty, match_type, paths, span_lint_and_help};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for `let _ = <expr>`\n@@ -125,15 +125,6 @@ impl<'tcx> LateLintPass<'tcx> for LetUnderscore {\n \n                     GenericArgKind::Lifetime(_) | GenericArgKind::Const(_) => false,\n                 });\n-                let implements_drop = cx.tcx.lang_items().drop_trait().map_or(false, |drop_trait|\n-                    init_ty.walk().any(|inner| match inner.unpack() {\n-                        GenericArgKind::Type(inner_ty) => {\n-                            implements_trait(cx, inner_ty, drop_trait, &[])\n-                        },\n-\n-                        GenericArgKind::Lifetime(_) | GenericArgKind::Const(_) => false,\n-                    })\n-                );\n                 if contains_sync_guard {\n                     span_lint_and_help(\n                         cx,\n@@ -144,7 +135,7 @@ impl<'tcx> LateLintPass<'tcx> for LetUnderscore {\n                         \"consider using an underscore-prefixed named \\\n                             binding or dropping explicitly with `std::mem::drop`\"\n                     )\n-                } else if implements_drop {\n+                } else if init_ty.needs_drop(cx.tcx, cx.param_env) {\n                     span_lint_and_help(\n                         cx,\n                         LET_UNDERSCORE_DROP,"}, {"sha": "40f04bd677d52e89287e2b4bb4e56d7d0c575c16", "filename": "clippy_lints/src/macro_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d792210c2662c5e514cf29b6bd47f033e6dfa862/clippy_lints%2Fsrc%2Fmacro_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d792210c2662c5e514cf29b6bd47f033e6dfa862/clippy_lints%2Fsrc%2Fmacro_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmacro_use.rs?ref=d792210c2662c5e514cf29b6bd47f033e6dfa862", "patch": "@@ -160,7 +160,7 @@ impl<'tcx> LateLintPass<'tcx> for MacroUseImports {\n             let found_idx = self.mac_refs.iter().position(|mac| import.ends_with(&mac.name));\n \n             if let Some(idx) = found_idx {\n-                let _ = self.mac_refs.remove(idx);\n+                self.mac_refs.remove(idx);\n                 let seg = import.split(\"::\").collect::<Vec<_>>();\n \n                 match seg.as_slice() {"}, {"sha": "b4423ce9ec7dce6f595effcc748ba998790f7dd6", "filename": "src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d792210c2662c5e514cf29b6bd47f033e6dfa862/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d792210c2662c5e514cf29b6bd47f033e6dfa862/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=d792210c2662c5e514cf29b6bd47f033e6dfa862", "patch": "@@ -195,7 +195,7 @@ mod tests {\n     #[should_panic]\n     fn fix_without_unstable() {\n         let args = \"cargo clippy --fix\".split_whitespace().map(ToString::to_string);\n-        let _ = ClippyCmd::new(args);\n+        ClippyCmd::new(args);\n     }\n \n     #[test]"}, {"sha": "50744f81c3cf84893697292fc190bb496b7a8f60", "filename": "tests/ui/let_underscore_drop.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d792210c2662c5e514cf29b6bd47f033e6dfa862/tests%2Fui%2Flet_underscore_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d792210c2662c5e514cf29b6bd47f033e6dfa862/tests%2Fui%2Flet_underscore_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_drop.rs?ref=d792210c2662c5e514cf29b6bd47f033e6dfa862", "patch": "@@ -16,4 +16,12 @@ fn main() {\n     let _ = Box::new(());\n     let _ = Droppable;\n     let _ = Some(Droppable);\n+\n+    // no lint for reference\n+    let _ = droppable_ref();\n+}\n+\n+#[must_use]\n+fn droppable_ref() -> &'static mut Droppable {\n+    unimplemented!()\n }"}]}