{"sha": "bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiMzVlMjNmMWNhNjNlYmE0YTNlYTI1ZWNkZjY4YTM5Mzg3MWVkMTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-31T04:40:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-31T04:40:32Z"}, "message": "auto merge of #8896 : lightcatcher/rust/default_eq_fix, r=thestinger\n\nSummary:\r\n-removed \"ne\" methods in libstd and librustpkg\r\n-made default \"ne\" be inlined\r\n-made one of the \"eq\" methods in librustpkg follow more standard parameter naming convention", "tree": {"sha": "46ae78240122b0324b698c6e6c57024c74376ef8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46ae78240122b0324b698c6e6c57024c74376ef8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "html_url": "https://github.com/rust-lang/rust/commit/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fe553d30f6e3ef7c021092533f1d7c74f6e8fb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fe553d30f6e3ef7c021092533f1d7c74f6e8fb6", "html_url": "https://github.com/rust-lang/rust/commit/5fe553d30f6e3ef7c021092533f1d7c74f6e8fb6"}, {"sha": "1ab0ddae5ccc465f64d1a2644c27d32b3e56df54", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ab0ddae5ccc465f64d1a2644c27d32b3e56df54", "html_url": "https://github.com/rust-lang/rust/commit/1ab0ddae5ccc465f64d1a2644c27d32b3e56df54"}], "stats": {"total": 30, "additions": 4, "deletions": 26}, "files": [{"sha": "2b56bb3885cdaf80f94bcf8b67a51aa9c75347f2", "filename": "src/librustpkg/package_id.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibrustpkg%2Fpackage_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibrustpkg%2Fpackage_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fpackage_id.rs?ref=bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "patch": "@@ -37,11 +37,8 @@ pub struct PkgId {\n }\n \n impl Eq for PkgId {\n-    fn eq(&self, p: &PkgId) -> bool {\n-        p.path == self.path && p.version == self.version\n-    }\n-    fn ne(&self, p: &PkgId) -> bool {\n-        !(self.eq(p))\n+    fn eq(&self, other: &PkgId) -> bool {\n+        self.path == other.path && self.version == other.version\n     }\n }\n "}, {"sha": "827bb415d407870be6810dec238edf1480e8dd0f", "filename": "src/librustpkg/version.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibrustpkg%2Fversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibrustpkg%2Fversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fversion.rs?ref=bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "patch": "@@ -40,9 +40,6 @@ impl Eq for Version {\n             _ => false\n         }\n     }\n-    fn ne(&self, other: &Version) -> bool {\n-        !self.eq(other)\n-    }\n }\n \n impl Ord for Version {"}, {"sha": "926e6e1f6b6e350212aef66d1bc01c5291da742f", "filename": "src/libstd/bool.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fbool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fbool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbool.rs?ref=bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "patch": "@@ -321,8 +321,6 @@ impl TotalOrd for bool {\n impl Eq for bool {\n     #[inline]\n     fn eq(&self, other: &bool) -> bool { (*self) == (*other) }\n-    #[inline]\n-    fn ne(&self, other: &bool) -> bool { (*self) != (*other) }\n }\n \n #[cfg(not(test))]"}, {"sha": "fcfd54e814bb8a29a49788c95113cbf40a7ba38a", "filename": "src/libstd/char.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fchar.rs?ref=bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "patch": "@@ -397,8 +397,6 @@ impl Char for char {\n impl Eq for char {\n     #[inline]\n     fn eq(&self, other: &char) -> bool { (*self) == (*other) }\n-    #[inline]\n-    fn ne(&self, other: &char) -> bool { (*self) != (*other) }\n }\n \n #[cfg(not(test))]"}, {"sha": "4bfcf2ce92dec7a8a77936278291a4eafa466840", "filename": "src/libstd/cmp.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcmp.rs?ref=bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "patch": "@@ -36,6 +36,8 @@ and `Eq` to overload the `==` and `!=` operators.\n #[lang=\"eq\"]\n pub trait Eq {\n     fn eq(&self, other: &Self) -> bool;\n+\n+    #[inline]\n     fn ne(&self, other: &Self) -> bool { !self.eq(other) }\n }\n "}, {"sha": "899d6236aaaaa109dc335c0f339a74c6c3ce4b7a", "filename": "src/libstd/num/f32.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff32.rs?ref=bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "patch": "@@ -171,8 +171,6 @@ impl Num for f32 {}\n impl Eq for f32 {\n     #[inline]\n     fn eq(&self, other: &f32) -> bool { (*self) == (*other) }\n-    #[inline]\n-    fn ne(&self, other: &f32) -> bool { (*self) != (*other) }\n }\n \n #[cfg(not(test))]"}, {"sha": "6ab8350a11544e9ea2299f3820015372c5571e75", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "patch": "@@ -194,8 +194,6 @@ impl Num for f64 {}\n impl Eq for f64 {\n     #[inline]\n     fn eq(&self, other: &f64) -> bool { (*self) == (*other) }\n-    #[inline]\n-    fn ne(&self, other: &f64) -> bool { (*self) != (*other) }\n }\n \n #[cfg(not(test))]"}, {"sha": "4dd6fd253333effafc654849e1ae0cb95d80c7bd", "filename": "src/libstd/num/float.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fnum%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fnum%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ffloat.rs?ref=bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "patch": "@@ -331,8 +331,6 @@ impl Num for float {}\n impl Eq for float {\n     #[inline]\n     fn eq(&self, other: &float) -> bool { (*self) == (*other) }\n-    #[inline]\n-    fn ne(&self, other: &float) -> bool { (*self) != (*other) }\n }\n \n #[cfg(not(test))]"}, {"sha": "0131feda830628e698acfa36f57449079de9a1ce", "filename": "src/libstd/num/int_macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fint_macros.rs?ref=bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "patch": "@@ -147,8 +147,6 @@ impl Ord for $T {\n impl Eq for $T {\n     #[inline]\n     fn eq(&self, other: &$T) -> bool { return (*self) == (*other); }\n-    #[inline]\n-    fn ne(&self, other: &$T) -> bool { return (*self) != (*other); }\n }\n \n impl Orderable for $T {"}, {"sha": "1426142d46569d4f3542a6c150f9621e315ce9af", "filename": "src/libstd/num/uint_macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fuint_macros.rs?ref=bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "patch": "@@ -148,8 +148,6 @@ impl Ord for $T {\n impl Eq for $T {\n     #[inline]\n     fn eq(&self, other: &$T) -> bool { return (*self) == (*other); }\n-    #[inline]\n-    fn ne(&self, other: &$T) -> bool { return (*self) != (*other); }\n }\n \n impl Orderable for $T {"}, {"sha": "4a7ab6d6732ee6dc7df14594f8eee6a6ec4b7bc7", "filename": "src/libstd/str.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb35e23f1ca63eba4a3ea25ecdf68a393871ed18/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=bb35e23f1ca63eba4a3ea25ecdf68a393871ed18", "patch": "@@ -1180,17 +1180,13 @@ pub mod traits {\n         fn eq(&self, other: &~str) -> bool {\n             eq_slice((*self), (*other))\n         }\n-        #[inline]\n-        fn ne(&self, other: &~str) -> bool { !(*self).eq(other) }\n     }\n \n     impl Eq for @str {\n         #[inline]\n         fn eq(&self, other: &@str) -> bool {\n             eq_slice((*self), (*other))\n         }\n-        #[inline]\n-        fn ne(&self, other: &@str) -> bool { !(*self).eq(other) }\n     }\n \n     impl<'self> TotalEq for &'self str {"}]}