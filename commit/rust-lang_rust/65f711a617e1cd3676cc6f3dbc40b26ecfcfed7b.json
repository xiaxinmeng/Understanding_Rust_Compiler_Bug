{"sha": "65f711a617e1cd3676cc6f3dbc40b26ecfcfed7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZjcxMWE2MTdlMWNkMzY3NmNjNmYzZGJjNDBiMjZlY2ZjZmVkN2I=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-01T23:51:58Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-02T05:22:49Z"}, "message": "rustdoc: Fix some search-and-replace fallout", "tree": {"sha": "c74db7271aeb81ba627cfc7d155f5abe92925657", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c74db7271aeb81ba627cfc7d155f5abe92925657"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65f711a617e1cd3676cc6f3dbc40b26ecfcfed7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65f711a617e1cd3676cc6f3dbc40b26ecfcfed7b", "html_url": "https://github.com/rust-lang/rust/commit/65f711a617e1cd3676cc6f3dbc40b26ecfcfed7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65f711a617e1cd3676cc6f3dbc40b26ecfcfed7b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6e8af446fa7fcd6b2362489293f2e6c5b98ffc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6e8af446fa7fcd6b2362489293f2e6c5b98ffc3", "html_url": "https://github.com/rust-lang/rust/commit/c6e8af446fa7fcd6b2362489293f2e6c5b98ffc3"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "32b7ded78ddd19b8a0140e7cce1fb1eec3234e34", "filename": "src/librustdoc/markdown_pass.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/65f711a617e1cd3676cc6f3dbc40b26ecfcfed7b/src%2Flibrustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65f711a617e1cd3676cc6f3dbc40b26ecfcfed7b/src%2Flibrustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown_pass.rs?ref=65f711a617e1cd3676cc6f3dbc40b26ecfcfed7b", "patch": "@@ -331,7 +331,7 @@ fn should_write_full_path_to_mod() {\n     assert str::contains(markdown, ~\"# Module `a::b::c`\");\n }\n \n-fn write_oldcommon(\n+fn write_common(\n     ctxt: &Ctxt,\n     desc: Option<~str>,\n     sections: &[doc::Section]\n@@ -380,7 +380,7 @@ fn write_mod_contents(\n     ctxt: &Ctxt,\n     doc: doc::ModDoc\n ) {\n-    write_oldcommon(ctxt, doc.desc(), doc.sections());\n+    write_common(ctxt, doc.desc(), doc.sections());\n     if doc.index.is_some() {\n         write_index(ctxt, (&doc.index).get());\n     }\n@@ -483,7 +483,7 @@ fn should_write_index_for_foreign_mods() {\n }\n \n fn write_nmod(ctxt: &Ctxt, doc: doc::NmodDoc) {\n-    write_oldcommon(ctxt, doc.desc(), doc.sections());\n+    write_common(ctxt, doc.desc(), doc.sections());\n     if doc.index.is_some() {\n         write_index(ctxt, (&doc.index).get());\n     }\n@@ -534,7 +534,7 @@ fn write_fnlike(\n     sections: &[doc::Section]\n ) {\n     write_sig(ctxt, sig);\n-    write_oldcommon(ctxt, desc, sections);\n+    write_common(ctxt, desc, sections);\n }\n \n fn write_sig(ctxt: &Ctxt, sig: Option<~str>) {\n@@ -603,7 +603,7 @@ fn write_const(\n     doc: doc::ConstDoc\n ) {\n     write_sig(ctxt, copy doc.sig);\n-    write_oldcommon(ctxt, doc.desc(), doc.sections());\n+    write_common(ctxt, doc.desc(), doc.sections());\n }\n \n #[test]\n@@ -624,7 +624,7 @@ fn write_enum(\n     ctxt: &Ctxt,\n     doc: doc::EnumDoc\n ) {\n-    write_oldcommon(ctxt, doc.desc(), doc.sections());\n+    write_common(ctxt, doc.desc(), doc.sections());\n     write_variants(ctxt, doc.variants);\n }\n \n@@ -705,7 +705,7 @@ fn should_write_variant_list_with_signatures() {\n }\n \n fn write_trait(ctxt: &Ctxt, doc: doc::TraitDoc) {\n-    write_oldcommon(ctxt, doc.desc(), doc.sections());\n+    write_common(ctxt, doc.desc(), doc.sections());\n     write_methods(ctxt, doc.methods);\n }\n \n@@ -753,7 +753,7 @@ fn should_write_trait_method_signature() {\n }\n \n fn write_impl(ctxt: &Ctxt, doc: doc::ImplDoc) {\n-    write_oldcommon(ctxt, doc.desc(), doc.sections());\n+    write_common(ctxt, doc.desc(), doc.sections());\n     write_methods(ctxt, doc.methods);\n }\n \n@@ -795,7 +795,7 @@ fn write_type(\n     doc: doc::TyDoc\n ) {\n     write_sig(ctxt, copy doc.sig);\n-    write_oldcommon(ctxt, doc.desc(), doc.sections());\n+    write_common(ctxt, doc.desc(), doc.sections());\n }\n \n #[test]\n@@ -822,7 +822,7 @@ fn write_struct(\n     doc: doc::StructDoc\n ) {\n     write_sig(ctxt, copy doc.sig);\n-    write_oldcommon(ctxt, doc.desc(), doc.sections());\n+    write_common(ctxt, doc.desc(), doc.sections());\n }\n \n #[test]"}]}