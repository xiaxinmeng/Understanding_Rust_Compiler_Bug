{"sha": "893f16389ec6e5bf117bed796738799a2c636519", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5M2YxNjM4OWVjNmU1YmYxMTdiZWQ3OTY3Mzg3OTlhMmM2MzY1MTk=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-04T16:34:33Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-04T16:34:33Z"}, "message": "run drop on array elements", "tree": {"sha": "fa9ca5fd3f44a7533f17ccbadd12e8f0cc910da1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa9ca5fd3f44a7533f17ccbadd12e8f0cc910da1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/893f16389ec6e5bf117bed796738799a2c636519", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYHLiZAAoJEFbW7qD8Z6xGcp4P/3vLKhla+MW8H3nPHHyZJgJ+\nci6/xAa9r9vZGJ1nD1Jw35RL97laNR35/Pv8wp917XpWQf1bhf+G/RZ5sQ2eVoKI\nusyr+YXVEUrRO+W4P+hcB3Y4B2j3IcwL7nyUvKjlOzWYKvzJrgx2zmU89fa3lDia\n2JyfUHcm5RlPXbqVyK/m5nl28+W3VI/MMDQxx45LfdUMF3pbIls4n7WZYBbLsAJa\nqP33bgNx0RTjUm+8zCf26/B4IzRek5b1YGncqAlYlXXK5M1TKp1yJnA5f7+4RF+9\nuDE7UBDuStdOZ0EqjSmYVRBZjdi7xyVCaJaNLRtB7UOwa46b9jlZg4eT7/Z27FMY\n+7kiVGltblyz5D0jg0MYo2lFDktZ515tpgKhq3hGmg23cn3tTExleHk1BjH31mPV\nsCDBoiKQA1utEkQBf1eu5gdUG7INtntxcXpEXtcKcFqhsFceJSIllRwn9ynFTju0\nl/h9gvnHO3L4VvCejSakA+bAwNTsPVMs5eDO8FPhoR8Wc0DBZa16hjzRNRbvubMq\nl4GemVaAcmA2/8pggX5ZqHSJ5Uu7HQFaNEv6ZWWiIJXdfs00CO2QlWvAY6r8S8ea\nkBOq+GZQnVHjgkNsdSIKapjSEmoOwgbZ4DKqpvG3SGIN7uGtC78UyJJwRtObJ779\nMw5akBMWvkst1/wbR+wb\n=2RGm\n-----END PGP SIGNATURE-----", "payload": "tree fa9ca5fd3f44a7533f17ccbadd12e8f0cc910da1\nparent 5ef7924aa96fe5aef3662b68e7b100847d6f3f5a\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478277273 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478277273 +0100\n\nrun drop on array elements"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/893f16389ec6e5bf117bed796738799a2c636519", "html_url": "https://github.com/rust-lang/rust/commit/893f16389ec6e5bf117bed796738799a2c636519", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/893f16389ec6e5bf117bed796738799a2c636519/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ef7924aa96fe5aef3662b68e7b100847d6f3f5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ef7924aa96fe5aef3662b68e7b100847d6f3f5a", "html_url": "https://github.com/rust-lang/rust/commit/5ef7924aa96fe5aef3662b68e7b100847d6f3f5a"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "dab0aed4acbe34257fe33a2755da07c83134d64b", "filename": "src/interpreter/terminator/mod.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/893f16389ec6e5bf117bed796738799a2c636519/src%2Finterpreter%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/893f16389ec6e5bf117bed796738799a2c636519/src%2Finterpreter%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fterminator%2Fmod.rs?ref=893f16389ec6e5bf117bed796738799a2c636519", "patch": "@@ -659,7 +659,21 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 for i in 0..len {\n                     self.drop(Lvalue::from_ptr(ptr.offset(i * size)), elem_ty, drop)?;\n                 }\n-            }\n+            },\n+            ty::TyArray(elem_ty, len) => {\n+                let lval = self.force_allocation(lval)?;\n+                let (ptr, extra) = match lval {\n+                    Lvalue::Ptr { ptr, extra } => (ptr, extra),\n+                    _ => bug!(\"expected an lvalue with a length\"),\n+                };\n+                let size = self.type_size(elem_ty) as isize;\n+                // FIXME: this creates a lot of stack frames if the element type has\n+                // a drop impl\n+                for i in 0..len {\n+                    self.drop(Lvalue::Ptr { ptr: ptr.offset(i as isize * size), extra: extra }, elem_ty, drop)?;\n+                }\n+            },\n+            // FIXME: what about TyClosure and TyAnon?\n             // other types do not need to process drop\n             _ => {},\n         }"}, {"sha": "80dd63de5e9a5aa35e96789bdb293443c4ba5017", "filename": "tests/run-pass/call_drop_on_array_elements.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/893f16389ec6e5bf117bed796738799a2c636519/tests%2Frun-pass%2Fcall_drop_on_array_elements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/893f16389ec6e5bf117bed796738799a2c636519/tests%2Frun-pass%2Fcall_drop_on_array_elements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fcall_drop_on_array_elements.rs?ref=893f16389ec6e5bf117bed796738799a2c636519", "patch": "@@ -0,0 +1,16 @@\n+struct Bar;\n+\n+static mut DROP_COUNT: usize = 0;\n+\n+impl Drop for Bar {\n+    fn drop(&mut self) {\n+        unsafe { DROP_COUNT += 1; }\n+    }\n+}\n+\n+fn main() {\n+    let b = [Bar, Bar, Bar, Bar];\n+    assert_eq!(unsafe { DROP_COUNT }, 0);\n+    drop(b);\n+    assert_eq!(unsafe { DROP_COUNT }, 4);\n+}"}, {"sha": "a1ab5c45e358c84b60cdf043f3b8f151cc9b2e69", "filename": "tests/run-pass/call_drop_on_fat_ptr_array_elements.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/893f16389ec6e5bf117bed796738799a2c636519/tests%2Frun-pass%2Fcall_drop_on_fat_ptr_array_elements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/893f16389ec6e5bf117bed796738799a2c636519/tests%2Frun-pass%2Fcall_drop_on_fat_ptr_array_elements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fcall_drop_on_fat_ptr_array_elements.rs?ref=893f16389ec6e5bf117bed796738799a2c636519", "patch": "@@ -0,0 +1,20 @@\n+trait Foo {}\n+\n+struct Bar;\n+\n+impl Foo for Bar {}\n+\n+static mut DROP_COUNT: usize = 0;\n+\n+impl Drop for Bar {\n+    fn drop(&mut self) {\n+        unsafe { DROP_COUNT += 1; }\n+    }\n+}\n+\n+fn main() {\n+    let b: [Box<Foo>; 4] = [Box::new(Bar), Box::new(Bar), Box::new(Bar), Box::new(Bar)];\n+    assert_eq!(unsafe { DROP_COUNT }, 0);\n+    drop(b);\n+    assert_eq!(unsafe { DROP_COUNT }, 4);\n+}"}]}