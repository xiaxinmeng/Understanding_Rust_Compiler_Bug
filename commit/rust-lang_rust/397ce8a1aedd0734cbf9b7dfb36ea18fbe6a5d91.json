{"sha": "397ce8a1aedd0734cbf9b7dfb36ea18fbe6a5d91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5N2NlOGExYWVkZDA3MzRjYmY5YjdkZmIzNmVhMThmYmU2YTVkOTE=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2018-02-25T03:43:30Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2018-02-25T14:39:21Z"}, "message": "fixed links", "tree": {"sha": "9491cb91eef5ea513fd688e859c2ccce29b68e0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9491cb91eef5ea513fd688e859c2ccce29b68e0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/397ce8a1aedd0734cbf9b7dfb36ea18fbe6a5d91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/397ce8a1aedd0734cbf9b7dfb36ea18fbe6a5d91", "html_url": "https://github.com/rust-lang/rust/commit/397ce8a1aedd0734cbf9b7dfb36ea18fbe6a5d91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/397ce8a1aedd0734cbf9b7dfb36ea18fbe6a5d91/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ded7f764c2d590d0c3ad71b9ffbbcfaec2174fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ded7f764c2d590d0c3ad71b9ffbbcfaec2174fb", "html_url": "https://github.com/rust-lang/rust/commit/7ded7f764c2d590d0c3ad71b9ffbbcfaec2174fb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "a946aca68d1b2b196c721027eaebdab19e1621f5", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/397ce8a1aedd0734cbf9b7dfb36ea18fbe6a5d91/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/397ce8a1aedd0734cbf9b7dfb36ea18fbe6a5d91/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=397ce8a1aedd0734cbf9b7dfb36ea18fbe6a5d91", "patch": "@@ -24,8 +24,8 @@\n //! controlled manner. Both `Cell<T>` and `RefCell<T>` allows to do this in a single threaded\n //! way. However, neither `Cell<T>` nor `RefCell<T>` are thread safe (they do not implement\n //! `Sync`), if you need to do Aliasing and Mutation between multiple threads is possible to use\n-//! [`Mutex`](../sync/struct.Mutex.html), [`RwLock`](../sync/struct.RwLock.html) or\n-//! [`atomic`](../sync/atomic/index.html) types.\n+//! [`Mutex`](../../std/sync/struct.Mutex.html), [`RwLock`](../../std/sync/struct.RwLock.html) or\n+//! [`atomic`](../../core/sync/atomic/index.html) types.\n //!\n //! Values of the `Cell<T>` and `RefCell<T>` types may be mutated through shared references (i.e.\n //! the common `&T` type), whereas most Rust types can only be mutated through unique (`&mut T`)"}]}