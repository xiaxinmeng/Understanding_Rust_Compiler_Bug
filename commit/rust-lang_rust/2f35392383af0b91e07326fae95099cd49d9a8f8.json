{"sha": "2f35392383af0b91e07326fae95099cd49d9a8f8", "node_id": "C_kwDOAAsO6NoAKDJmMzUzOTIzODNhZjBiOTFlMDczMjZmYWU5NTA5OWNkNDlkOWE4Zjg", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-05-17T18:41:58Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-01T15:45:13Z"}, "message": "Ignore test with panic=abort.", "tree": {"sha": "48c69d2d073d74fbe55842e06c9e1af7ba46ddd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48c69d2d073d74fbe55842e06c9e1af7ba46ddd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f35392383af0b91e07326fae95099cd49d9a8f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f35392383af0b91e07326fae95099cd49d9a8f8", "html_url": "https://github.com/rust-lang/rust/commit/2f35392383af0b91e07326fae95099cd49d9a8f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f35392383af0b91e07326fae95099cd49d9a8f8/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a9946143d403aecdff348e8498474eeb25eb2d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a9946143d403aecdff348e8498474eeb25eb2d4", "html_url": "https://github.com/rust-lang/rust/commit/6a9946143d403aecdff348e8498474eeb25eb2d4"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "8545db89414a70161e3df5ab12506091cc092c54", "filename": "src/test/mir-opt/inline/caller-with-trivial-bound.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f35392383af0b91e07326fae95099cd49d9a8f8/src%2Ftest%2Fmir-opt%2Finline%2Fcaller-with-trivial-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f35392383af0b91e07326fae95099cd49d9a8f8/src%2Ftest%2Fmir-opt%2Finline%2Fcaller-with-trivial-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fcaller-with-trivial-bound.rs?ref=2f35392383af0b91e07326fae95099cd49d9a8f8", "patch": "@@ -1,5 +1,7 @@\n-#![crate_type = \"lib\"]\n+// ignore-wasm32 compiled with panic=abort by default\n+// needs-unwind\n \n+#![crate_type = \"lib\"]\n pub trait Factory<T> {\n     type Item;\n }"}, {"sha": "5d236373a4ce0d0abda91b3877eedd606cec0130", "filename": "src/test/mir-opt/inline/caller_with_trivial_bound.foo.Inline.diff", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2f35392383af0b91e07326fae95099cd49d9a8f8/src%2Ftest%2Fmir-opt%2Finline%2Fcaller_with_trivial_bound.foo.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/2f35392383af0b91e07326fae95099cd49d9a8f8/src%2Ftest%2Fmir-opt%2Finline%2Fcaller_with_trivial_bound.foo.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fcaller_with_trivial_bound.foo.Inline.diff?ref=2f35392383af0b91e07326fae95099cd49d9a8f8", "patch": "@@ -2,32 +2,32 @@\n + // MIR for `foo` after Inline\n   \n   fn foo() -> () {\n-      let mut _0: ();                      // return place in scope 0 at $DIR/caller-with-trivial-bound.rs:15:1: 15:1\n-      let mut _1: <IntFactory as Factory<T>>::Item; // in scope 0 at $DIR/caller-with-trivial-bound.rs:18:9: 18:14\n+      let mut _0: ();                      // return place in scope 0 at $DIR/caller-with-trivial-bound.rs:17:1: 17:1\n+      let mut _1: <IntFactory as Factory<T>>::Item; // in scope 0 at $DIR/caller-with-trivial-bound.rs:20:9: 20:14\n       scope 1 {\n-          debug x => _1;                   // in scope 1 at $DIR/caller-with-trivial-bound.rs:18:9: 18:14\n+          debug x => _1;                   // in scope 1 at $DIR/caller-with-trivial-bound.rs:20:9: 20:14\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/caller-with-trivial-bound.rs:18:9: 18:14\n-          _1 = bar::<T>() -> bb1;          // scope 0 at $DIR/caller-with-trivial-bound.rs:18:51: 18:61\n+          StorageLive(_1);                 // scope 0 at $DIR/caller-with-trivial-bound.rs:20:9: 20:14\n+          _1 = bar::<T>() -> bb1;          // scope 0 at $DIR/caller-with-trivial-bound.rs:20:51: 20:61\n                                            // mir::Constant\n-                                           // + span: $DIR/caller-with-trivial-bound.rs:18:51: 18:59\n+                                           // + span: $DIR/caller-with-trivial-bound.rs:20:51: 20:59\n                                            // + literal: Const { ty: fn() -> <IntFactory as Factory<T>>::Item {bar::<T>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb1: {\n-          _0 = const ();                   // scope 0 at $DIR/caller-with-trivial-bound.rs:17:1: 19:2\n-          drop(_1) -> [return: bb2, unwind: bb3]; // scope 0 at $DIR/caller-with-trivial-bound.rs:19:1: 19:2\n+          _0 = const ();                   // scope 0 at $DIR/caller-with-trivial-bound.rs:19:1: 21:2\n+          drop(_1) -> [return: bb2, unwind: bb3]; // scope 0 at $DIR/caller-with-trivial-bound.rs:21:1: 21:2\n       }\n   \n       bb2: {\n-          StorageDead(_1);                 // scope 0 at $DIR/caller-with-trivial-bound.rs:19:1: 19:2\n-          return;                          // scope 0 at $DIR/caller-with-trivial-bound.rs:19:2: 19:2\n+          StorageDead(_1);                 // scope 0 at $DIR/caller-with-trivial-bound.rs:21:1: 21:2\n+          return;                          // scope 0 at $DIR/caller-with-trivial-bound.rs:21:2: 21:2\n       }\n   \n       bb3 (cleanup): {\n-          resume;                          // scope 0 at $DIR/caller-with-trivial-bound.rs:14:1: 19:2\n+          resume;                          // scope 0 at $DIR/caller-with-trivial-bound.rs:16:1: 21:2\n       }\n   }\n   "}]}