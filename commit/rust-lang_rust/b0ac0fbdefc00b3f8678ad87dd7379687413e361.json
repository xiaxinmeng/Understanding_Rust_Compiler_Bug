{"sha": "b0ac0fbdefc00b3f8678ad87dd7379687413e361", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwYWMwZmJkZWZjMDBiM2Y4Njc4YWQ4N2RkNzM3OTY4NzQxM2UzNjE=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-01-12T20:22:09Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-01-12T20:24:07Z"}, "message": "Bless profiler run make tests", "tree": {"sha": "7658c1d4c19a50eb1966b59ccfe6475c14504fe4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7658c1d4c19a50eb1966b59ccfe6475c14504fe4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0ac0fbdefc00b3f8678ad87dd7379687413e361", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0ac0fbdefc00b3f8678ad87dd7379687413e361", "html_url": "https://github.com/rust-lang/rust/commit/b0ac0fbdefc00b3f8678ad87dd7379687413e361", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0ac0fbdefc00b3f8678ad87dd7379687413e361/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ee1a9caea86be1c0543fa745f5fc9de49ab8de3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ee1a9caea86be1c0543fa745f5fc9de49ab8de3", "html_url": "https://github.com/rust-lang/rust/commit/3ee1a9caea86be1c0543fa745f5fc9de49ab8de3"}], "stats": {"total": 4363, "additions": 2077, "deletions": 2286}, "files": [{"sha": "176587af25be05aac85a7236beffa5d8595020c7", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -77,27 +77,24 @@\n 16:11-16:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n 16:11-16:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:12-17:21: @5[3]: _8 = _1\n-17:12-17:25: @5[4]: _7 = Lt(move _8, const 5_i32)\n-17:12-17:25: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb22]\n-17:26-19:10: @9[1]: _6 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb22]\n-17:26-19:10: @9[1]: _6 = const ()\">            might_abort(false);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb22]\n-17:26-19:10: @9[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:10-19:10: @7[0]: _6 = const ()\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+17:12-17:25: @5[4]: _7 = Lt(move _8, const 5_i32)\"><span class=\"annotation\">@3,5\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @6.Call: _9 = might_abort(const false) -&gt; [return: bb8, unwind: bb19]\n+17:26-19:10: @8[1]: _6 = const ()\"><span class=\"annotation\">@6,8\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @6.Call: _9 = might_abort(const false) -&gt; [return: bb8, unwind: bb19]\n+17:26-19:10: @8[1]: _6 = const ()\">            might_abort(false);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @6.Call: _9 = might_abort(const false) -&gt; [return: bb8, unwind: bb19]\n+17:26-19:10: @8[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:10-19:10: @7[0]: _6 = const ()\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // See discussion (below the `Notes` section) on coverage results for the closing brace.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:12-21:21: @10[5]: _12 = _1\n-21:12-21:25: @10[6]: _11 = Lt(move _12, const 5_i32)\n-21:12-21:25: @10[8]: FakeRead(ForMatchedPlace, _11)\"><span class=\"annotation\">@10\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:28-21:46: @13.Call: _13 = might_abort(const false) -&gt; [return: bb14, unwind: bb22]\n-21:26-21:49: @14[1]: _10 = const ()\"><span class=\"annotation\">@11,13,14\u298a</span>{ might_abort(false); }<span class=\"annotation\">\u2989@11,13,14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:49-21:49: @12[0]: _10 = const ()\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\"> // Counts for different regions on one line.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:12-21:21: @9[5]: _12 = _1\n+21:12-21:25: @9[6]: _11 = Lt(move _12, const 5_i32)\"><span class=\"annotation\">@9\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:28-21:46: @10.Call: _13 = might_abort(const false) -&gt; [return: bb12, unwind: bb19]\n+21:26-21:49: @12[1]: _10 = const ()\"><span class=\"annotation\">@10,12\u298a</span>{ might_abort(false); }<span class=\"annotation\">\u2989@10,12</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:49-21:49: @11[0]: _10 = const ()\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"> // Counts for different regions on one line.</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // For the following example, the closing brace is the last character on the line.</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // This shows the character after the closing brace is highlighted, even if that next</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // character is a newline.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:12-25:21: @15[5]: _16 = _1\n-25:12-25:25: @15[6]: _15 = Lt(move _16, const 5_i32)\n-25:12-25:25: @15[8]: FakeRead(ForMatchedPlace, _15)\"><span class=\"annotation\">@15\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:28-25:46: @18.Call: _17 = might_abort(const false) -&gt; [return: bb19, unwind: bb22]\n-25:26-25:49: @19[1]: _14 = const ()\"><span class=\"annotation\">@16,18,19\u298a</span>{ might_abort(false); }<span class=\"annotation\">\u2989@16,18,19</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:49-25:49: @17[0]: _14 = const ()\"><span class=\"annotation\">@17\u298a</span>\u2038<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:23: @20[2]: _18 = CheckedSub(_1, const 1_i32)\n-26:9-26:23: @21[0]: _1 = move (_18.0: i32)\"><span class=\"annotation\">@20,21\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@20,21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:12-25:21: @13[5]: _16 = _1\n+25:12-25:25: @13[6]: _15 = Lt(move _16, const 5_i32)\"><span class=\"annotation\">@13\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:28-25:46: @14.Call: _17 = might_abort(const false) -&gt; [return: bb16, unwind: bb19]\n+25:26-25:49: @16[1]: _14 = const ()\"><span class=\"annotation\">@14,16\u298a</span>{ might_abort(false); }<span class=\"annotation\">\u2989@14,16</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:49-25:49: @15[0]: _14 = const ()\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:23: @17[2]: _18 = CheckedSub(_1, const 1_i32)\n+26:9-26:23: @18[0]: _1 = move (_18.0: i32)\"><span class=\"annotation\">@17,18\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@17,18</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:8-28:10: @4[4]: _20 = ()\n 28:5-28:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _20)"}, {"sha": "b058dce298342feead8083861e4221a1e7ee4d2d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.might_abort.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 49, "deletions": 50, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -70,36 +70,35 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>fn might_abort(should_abort: bool) <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:20: @0[1]: _2 = _1\n-6:8-6:20: @0[2]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>should_abort<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @3[6]: _33 = const might_abort::promoted[3]\n-7:18-7:31: @3[7]: _9 = &amp;(*_33)\n-7:18-7:31: @3[8]: _8 = &amp;(*_9)\n-7:18-7:31: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n-7:9-7:33: @3[15]: _15 = ()\n-7:9-7:33: @3[16]: FakeRead(ForMatchedPlace, _15)\n-7:9-7:33: @3[17]: _32 = const might_abort::promoted[2]\n-7:9-7:33: @3[18]: _13 = &amp;(*_32)\n-7:9-7:33: @3[19]: _12 = &amp;(*_13)\n-7:9-7:33: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-7:9-7:33: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n-7:9-7:33: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n-7:9-7:33: @5[5]: _4 = const ()\n-8:9-8:37: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb8\"><span class=\"annotation\">@1,3,4,5\u298a</span>println!(\"aborting...\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @3[6]: _33 = const might_abort::promoted[3]\n-7:18-7:31: @3[7]: _9 = &amp;(*_33)\n-7:18-7:31: @3[8]: _8 = &amp;(*_9)\n-7:18-7:31: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n-7:9-7:33: @3[15]: _15 = ()\n-7:9-7:33: @3[16]: FakeRead(ForMatchedPlace, _15)\n-7:9-7:33: @3[17]: _32 = const might_abort::promoted[2]\n-7:9-7:33: @3[18]: _13 = &amp;(*_32)\n-7:9-7:33: @3[19]: _12 = &amp;(*_13)\n-7:9-7:33: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-7:9-7:33: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n-7:9-7:33: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n-7:9-7:33: @5[5]: _4 = const ()\n-8:9-8:37: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb8\">        panic!(\"panics and aborts\");<span class=\"annotation\">\u2989@1,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:20: @0[1]: _2 = _1\"><span class=\"annotation\">@0\u298a</span>should_abort<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @1[6]: _33 = const might_abort::promoted[3]\n+7:18-7:31: @1[7]: _9 = &amp;(*_33)\n+7:18-7:31: @1[8]: _8 = &amp;(*_9)\n+7:18-7:31: @1[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+7:9-7:33: @1[15]: _15 = ()\n+7:9-7:33: @1[16]: FakeRead(ForMatchedPlace, _15)\n+7:9-7:33: @1[17]: _32 = const might_abort::promoted[2]\n+7:9-7:33: @1[18]: _13 = &amp;(*_32)\n+7:9-7:33: @1[19]: _12 = &amp;(*_13)\n+7:9-7:33: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+7:9-7:33: @1.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n+7:9-7:33: @3.Call: _5 = _print(move _6) -&gt; [return: bb4, unwind: bb7]\n+7:9-7:33: @4[5]: _4 = const ()\n+8:9-8:37: @4.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb7\"><span class=\"annotation\">@1,3,4\u298a</span>println!(\"aborting...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @1[6]: _33 = const might_abort::promoted[3]\n+7:18-7:31: @1[7]: _9 = &amp;(*_33)\n+7:18-7:31: @1[8]: _8 = &amp;(*_9)\n+7:18-7:31: @1[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+7:9-7:33: @1[15]: _15 = ()\n+7:9-7:33: @1[16]: FakeRead(ForMatchedPlace, _15)\n+7:9-7:33: @1[17]: _32 = const might_abort::promoted[2]\n+7:9-7:33: @1[18]: _13 = &amp;(*_32)\n+7:9-7:33: @1[19]: _12 = &amp;(*_13)\n+7:9-7:33: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+7:9-7:33: @1.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n+7:9-7:33: @3.Call: _5 = _print(move _6) -&gt; [return: bb4, unwind: bb7]\n+7:9-7:33: @4[5]: _4 = const ()\n+8:9-8:37: @4.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb7\">        panic!(\"panics and aborts\");<span class=\"annotation\">\u2989@1,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n 10:18-10:31: @2[7]: _23 = &amp;(*_31)\n 10:18-10:31: @2[8]: _22 = &amp;(*_23)\n@@ -110,11 +109,11 @@\n 10:9-10:33: @2[18]: _27 = &amp;(*_30)\n 10:9-10:33: @2[19]: _26 = &amp;(*_27)\n 10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n-10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n-10:9-10:33: @7[5]: _18 = const ()\n-9:12-11:6: @7[7]: _0 = const ()\n-12:2-12:2: @7.Return: return\"><span class=\"annotation\">@2,6,7\u298a</span>{</span></span>\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+10:9-10:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+10:9-10:33: @6[5]: _18 = const ()\n+9:12-11:6: @6[7]: _0 = const ()\n+12:2-12:2: @6.Return: return\"><span class=\"annotation\">@2,5,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n 10:18-10:31: @2[7]: _23 = &amp;(*_31)\n 10:18-10:31: @2[8]: _22 = &amp;(*_23)\n@@ -125,11 +124,11 @@\n 10:9-10:33: @2[18]: _27 = &amp;(*_30)\n 10:9-10:33: @2[19]: _26 = &amp;(*_27)\n 10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n-10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n-10:9-10:33: @7[5]: _18 = const ()\n-9:12-11:6: @7[7]: _0 = const ()\n-12:2-12:2: @7.Return: return\">        println!(\"Don't Panic\");</span></span>\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+10:9-10:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+10:9-10:33: @6[5]: _18 = const ()\n+9:12-11:6: @6[7]: _0 = const ()\n+12:2-12:2: @6.Return: return\">        println!(\"Don't Panic\");</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n 10:18-10:31: @2[7]: _23 = &amp;(*_31)\n 10:18-10:31: @2[8]: _22 = &amp;(*_23)\n@@ -140,11 +139,11 @@\n 10:9-10:33: @2[18]: _27 = &amp;(*_30)\n 10:9-10:33: @2[19]: _26 = &amp;(*_27)\n 10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n-10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n-10:9-10:33: @7[5]: _18 = const ()\n-9:12-11:6: @7[7]: _0 = const ()\n-12:2-12:2: @7.Return: return\">    }</span></span>\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+10:9-10:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+10:9-10:33: @6[5]: _18 = const ()\n+9:12-11:6: @6[7]: _0 = const ()\n+12:2-12:2: @6.Return: return\">    }</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n 10:18-10:31: @2[7]: _23 = &amp;(*_31)\n 10:18-10:31: @2[8]: _22 = &amp;(*_23)\n@@ -155,10 +154,10 @@\n 10:9-10:33: @2[18]: _27 = &amp;(*_30)\n 10:9-10:33: @2[19]: _26 = &amp;(*_27)\n 10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n-10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n-10:9-10:33: @7[5]: _18 = const ()\n-9:12-11:6: @7[7]: _0 = const ()\n-12:2-12:2: @7.Return: return\">}<span class=\"annotation\">\u2989@2,6,7</span></span></span></span></div>\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+10:9-10:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+10:9-10:33: @6[5]: _18 = const ()\n+9:12-11:6: @6[7]: _0 = const ()\n+12:2-12:2: @6.Return: return\">}<span class=\"annotation\">\u2989@2,5,6</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "365e94cd31e50f6951608e54b2721ce55b0ec3f8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -77,22 +77,20 @@\n 11:11-11:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n 11:11-11:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:12-12:21: @5[3]: _8 = _1\n-12:12-12:26: @5[4]: _7 = Eq(move _8, const 1_i32)\n-12:12-12:26: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n-12:27-14:10: @9[1]: _6 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n-12:27-14:10: @9[1]: _6 = const ()\">            might_fail_assert(3);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n-12:27-14:10: @9[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:19-14:28: @7[2]: _11 = _1\n-14:19-14:32: @7[3]: _10 = Lt(move _11, const 5_i32)\n-14:19-14:32: @7[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n-14:33-16:10: @13[1]: _6 = const ()\"><span class=\"annotation\">@10,12,13\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n-14:33-16:10: @13[1]: _6 = const ()\">            might_fail_assert(2);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n-14:33-16:10: @13[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@10,12,13</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:10-16:10: @11[0]: _6 = const ()\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:23: @15[2]: _13 = CheckedSub(_1, const 1_i32)\n-17:9-17:23: @16[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@15,16\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@15,16</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+12:12-12:26: @5[4]: _7 = Eq(move _8, const 1_i32)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @6.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb8, unwind: bb15]\n+12:27-14:10: @8[1]: _6 = const ()\"><span class=\"annotation\">@6,8\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @6.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb8, unwind: bb15]\n+12:27-14:10: @8[1]: _6 = const ()\">            might_fail_assert(3);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @6.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb8, unwind: bb15]\n+12:27-14:10: @8[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:19-14:28: @7[2]: _11 = _1\n+14:19-14:32: @7[3]: _10 = Lt(move _11, const 5_i32)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @9.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb11, unwind: bb15]\n+14:33-16:10: @11[1]: _6 = const ()\"><span class=\"annotation\">@9,11\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @9.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb11, unwind: bb15]\n+14:33-16:10: @11[1]: _6 = const ()\">            might_fail_assert(2);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @9.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb11, unwind: bb15]\n+14:33-16:10: @11[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@9,11</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:10-16:10: @10[0]: _6 = const ()\"><span class=\"annotation\">@10\u298a</span>\u2038<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:23: @13[2]: _13 = CheckedSub(_1, const 1_i32)\n+17:9-17:23: @14[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@13,14\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@13,14</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:8-19:10: @4[4]: _15 = ()\n 19:5-19:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)"}, {"sha": "823bb0cfd840454882195375464f4d64a2c01bfd", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.might_fail_assert.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -80,18 +80,18 @@\n 5:5-5:48: @0[22]: _15 = (_13.0: &amp;u32)\n 5:5-5:48: @0[25]: _17 = &amp;(*_15)\n 5:5-5:48: @0[27]: _18 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-5:5-5:48: @0.Call: _16 = ArgumentV1::new::&lt;u32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb13]\n+5:5-5:48: @0.Call: _16 = ArgumentV1::new::&lt;u32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb12]\n 5:5-5:48: @1[2]: _12 = [move _16]\n 5:5-5:48: @1[5]: _11 = &amp;_12\n 5:5-5:48: @1[6]: _10 = &amp;(*_11)\n 5:5-5:48: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-5:5-5:48: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb13]\n-5:5-5:48: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb13]\n+5:5-5:48: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb12]\n+5:5-5:48: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb12]\n 5:5-5:48: @3[6]: _2 = const ()\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>println!(\"does 1 + 1 = {}?\", one_plus_one);<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    assert_eq!(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:16-6:21: @3[11]: _23 = CheckedAdd(const 1_u32, const 1_u32)\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>1 + 1<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">, one_plus_one, </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:37-6:61: @7[28]: _70 = const might_fail_assert::promoted[1]\n-6:37-6:61: @7[29]: _50 = &amp;(*_70)\n-6:37-6:61: @7[30]: _49 = &amp;(*_50)\n-6:37-6:61: @7[31]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\"><span class=\"annotation\">@5,7,8,9,10,11,12\u298a</span>\"the argument was wrong\"<span class=\"annotation\">\u2989@5,7,8,9,10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\">);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    assert_eq!(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:16-6:21: @3[11]: _23 = CheckedAdd(const 1_u32, const 1_u32)\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>1 + 1<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">, one_plus_one, </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:37-6:61: @5[28]: _70 = const might_fail_assert::promoted[1]\n+6:37-6:61: @5[29]: _50 = &amp;(*_70)\n+6:37-6:61: @5[30]: _49 = &amp;(*_50)\n+6:37-6:61: @5[31]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\"><span class=\"annotation\">@5,7,8,9,10,11\u298a</span>\"the argument was wrong\"<span class=\"annotation\">\u2989@5,7,8,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\">);</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:2-7:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "21bfce701fe6e5f6e4b175847bdac5d68525f8f6", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.c-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -70,15 +70,13 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\">                        <span><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:9: @0[5]: _5 = _3\n-6:8-6:14: @0[6]: _4 = Eq(move _5, const 8_u8)\n-6:8-6:14: @0[8]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+6:8-6:14: @0[6]: _4 = Eq(move _5, const 8_u8)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:9: @0[5]: _5 = _3\n-6:8-6:14: @0[6]: _4 = Eq(move _5, const 8_u8)\n-6:8-6:14: @0[8]: FakeRead(ForMatchedPlace, _4)\">    if x == 8<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:10: @3[0]: _0 = const 1_u8\"><span class=\"annotation\">@1,3\u298a</span>1<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+6:8-6:14: @0[6]: _4 = Eq(move _5, const 8_u8)\">    if x == 8<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:10: @1[0]: _0 = const 1_u8\"><span class=\"annotation\">@1\u298a</span>1<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:9-9:10: @2[0]: _0 = const 0_u8\"><span class=\"annotation\">@2\u298a</span>0<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:2-11:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:2-11:2: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "e6384b7598fc28f7a4943c0554ece1d949fb5fd1", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-c.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-c.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-c.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-c.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -70,12 +70,10 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 50\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"52:12-52:13: @0[2]: _3 = _1\n-52:12-52:18: @0[3]: _2 = Eq(move _3, const 8_u8)\n-52:12-52:18: @0[5]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>fn c(x: u8) -&gt; u8 {</span></span>\n+52:12-52:18: @0[3]: _2 = Eq(move _3, const 8_u8)\"><span class=\"annotation\">@0\u298a</span>fn c(x: u8) -&gt; u8 {</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:12-52:13: @0[2]: _3 = _1\n-52:12-52:18: @0[3]: _2 = Eq(move _3, const 8_u8)\n-52:12-52:18: @0[5]: FakeRead(ForMatchedPlace, _2)\">        if x == 8<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"53:13-53:14: @3[0]: _0 = const 1_u8\"><span class=\"annotation\">@1,3\u298a</span>1<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> // This line appears covered, but the 1-character expression span covering the `1`</span></span>\n+52:12-52:18: @0[3]: _2 = Eq(move _3, const 8_u8)\">        if x == 8<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"53:13-53:14: @1[0]: _0 = const 1_u8\"><span class=\"annotation\">@1\u298a</span>1<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\"> // This line appears covered, but the 1-character expression span covering the `1`</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // is not executed. (`llvm-cov show` displays a `^0` below the `1` ). This is because</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // `fn j()` executes the open brace for the funciton body, followed by the function's</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // first executable statement, `match x`. Inner function declarations are not</span></span>\n@@ -87,6 +85,6 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:13-63:14: @2[0]: _0 = const 0_u8\"><span class=\"annotation\">@2\u298a</span>0<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:6-65:6: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:6-65:6: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "b4b171dc955cb5933c7fb63fa742866f1ec33fb9", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -72,28 +72,25 @@\n <div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n 35:13-35:26: @0[2]: FakeRead(ForLet, _2)\n-36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n-36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n 35:13-35:26: @0[2]: FakeRead(ForLet, _2)\n-36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n-36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\">        let mut countdown = 0;</span></span>\n+36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\">        let mut countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n 35:13-35:26: @0[2]: FakeRead(ForLet, _2)\n-36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n-36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:10-38:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n-39:9-39:23: @4[5]: _5 = &amp;(*_6)\n-39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-40:6-40:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 2\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n-39:9-39:23: @4[5]: _5 = &amp;(*_6)\n-39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-40:6-40:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @1[0]: _2 = const 10_i32\n+36:21-38:10: @1[1]: _3 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @1[0]: _2 = const 10_i32\n+36:21-38:10: @1[1]: _3 = const ()\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @1[0]: _2 = const 10_i32\n+36:21-38:10: @1[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:10-38:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @3[4]: _6 = const &quot;alt string 2&quot;\n+39:9-39:23: @3[5]: _5 = &amp;(*_6)\n+39:9-39:34: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+40:6-40:6: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 2\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @3[4]: _6 = const &quot;alt string 2&quot;\n+39:9-39:23: @3[5]: _5 = &amp;(*_6)\n+39:9-39:34: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+40:6-40:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "c1edc3eb929b0711c1f01cf7872cc027a559fb04", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#10}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -72,28 +72,25 @@\n <div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n 20:21-20:34: @0[2]: FakeRead(ForLet, _2)\n-21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n-21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n 20:21-20:34: @0[2]: FakeRead(ForLet, _2)\n-21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n-21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\">                let mut countdown = 0;</span></span>\n+21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\">                let mut countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n 20:21-20:34: @0[2]: FakeRead(ForLet, _2)\n-21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n-21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\">                if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:18-23:18: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n-24:17-24:31: @4[5]: _5 = &amp;(*_6)\n-24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-25:14-25:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 1\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n-24:17-24:31: @4[5]: _5 = &amp;(*_6)\n-24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-25:14-25:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\">                if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @1[0]: _2 = const 10_i32\n+21:29-23:18: @1[1]: _3 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @1[0]: _2 = const 10_i32\n+21:29-23:18: @1[1]: _3 = const ()\">                    countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @1[0]: _2 = const 10_i32\n+21:29-23:18: @1[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:18-23:18: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @3[4]: _6 = const &quot;alt string 1&quot;\n+24:17-24:31: @3[5]: _5 = &amp;(*_6)\n+24:17-24:42: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+25:14-25:14: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 1\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @3[4]: _6 = const &quot;alt string 1&quot;\n+24:17-24:31: @3[5]: _5 = &amp;(*_6)\n+24:17-24:42: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+25:14-25:14: @4.Return: return\">            }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "24c1cadacac4abba8e08d046b3a6f25082861b60", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#11}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -72,28 +72,25 @@\n <div class=\"code\" style=\"counter-reset: line 59\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n 62:21-62:34: @0[2]: FakeRead(ForLet, _2)\n-63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n-63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n 62:21-62:34: @0[2]: FakeRead(ForLet, _2)\n-63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n-63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\">                let mut countdown = 0;</span></span>\n+63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\">                let mut countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n 62:21-62:34: @0[2]: FakeRead(ForLet, _2)\n-63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n-63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\">                if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:18-65:18: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n-66:17-66:31: @4[5]: _5 = &amp;(*_6)\n-66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-67:14-67:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 3\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n-66:17-66:31: @4[5]: _5 = &amp;(*_6)\n-66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-67:14-67:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\">                if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @1[0]: _2 = const 10_i32\n+63:29-65:18: @1[1]: _3 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @1[0]: _2 = const 10_i32\n+63:29-65:18: @1[1]: _3 = const ()\">                    countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @1[0]: _2 = const 10_i32\n+63:29-65:18: @1[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:18-65:18: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @3[4]: _6 = const &quot;alt string 3&quot;\n+66:17-66:31: @3[5]: _5 = &amp;(*_6)\n+66:17-66:42: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+67:14-67:14: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 3\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @3[4]: _6 = const &quot;alt string 3&quot;\n+66:17-66:31: @3[5]: _5 = &amp;(*_6)\n+66:17-66:42: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+67:14-67:14: @4.Return: return\">            }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "7a3921c5aec761764ca91795ea07b93e99a4bc4a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -72,28 +72,25 @@\n <div class=\"code\" style=\"counter-reset: line 74\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n 77:13-77:26: @0[2]: FakeRead(ForLet, _2)\n-78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n-78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n 77:13-77:26: @0[2]: FakeRead(ForLet, _2)\n-78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n-78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\">        let mut countdown = 0;</span></span>\n+78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\">        let mut countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n 77:13-77:26: @0[2]: FakeRead(ForLet, _2)\n-78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n-78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:10-80:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n-81:9-81:23: @4[5]: _5 = &amp;(*_6)\n-81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-82:6-82:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 4\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n-81:9-81:23: @4[5]: _5 = &amp;(*_6)\n-81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-82:6-82:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @1[0]: _2 = const 10_i32\n+78:21-80:10: @1[1]: _3 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @1[0]: _2 = const 10_i32\n+78:21-80:10: @1[1]: _3 = const ()\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @1[0]: _2 = const 10_i32\n+78:21-80:10: @1[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:10-80:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @3[4]: _6 = const &quot;alt string 4&quot;\n+81:9-81:23: @3[5]: _5 = &amp;(*_6)\n+81:9-81:34: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+82:6-82:6: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 4\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @3[4]: _6 = const &quot;alt string 4&quot;\n+81:9-81:23: @3[5]: _5 = &amp;(*_6)\n+81:9-81:34: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+82:6-82:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "06b817e4318e8f6bab67758aa2ba8bb185b5dbee", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#2}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 48, "deletions": 51, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -72,60 +72,57 @@\n <div class=\"code\" style=\"counter-reset: line 96\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">|val|</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"99:29-99:30: @0[1]: _3 = const 0_i32\n 99:13-99:26: @0[2]: FakeRead(ForLet, _3)\n-100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\n-100:12-100:20: @0[6]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"99:29-99:30: @0[1]: _3 = const 0_i32\n 99:13-99:26: @0[2]: FakeRead(ForLet, _3)\n-100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\n-100:12-100:20: @0[6]: FakeRead(ForMatchedPlace, _5)\">        let mut countdown = 0;</span></span>\n+100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\">        let mut countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"99:29-99:30: @0[1]: _3 = const 0_i32\n 99:13-99:26: @0[2]: FakeRead(ForLet, _3)\n-100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\n-100:12-100:20: @0[6]: FakeRead(ForMatchedPlace, _5)\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n-100:21-102:10: @3[1]: _4 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n-100:21-102:10: @3[1]: _4 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n-100:21-102:10: @3[1]: _4 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"102:10-102:10: @2[0]: _4 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @4[7]: _22 = const main::{closure#2}::promoted[0]\n-103:17-103:23: @4[8]: _10 = &amp;(*_22)\n-103:17-103:23: @4[9]: _9 = &amp;(*_10)\n-103:17-103:23: @4[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-103:25-103:28: @4[18]: _17 = &amp;_2\n-103:9-103:29: @4[19]: _16 = (move _17,)\n-103:9-103:29: @4[21]: FakeRead(ForMatchedPlace, _16)\n-103:9-103:29: @4[23]: _18 = (_16.0: &amp;&amp;str)\n-103:9-103:29: @4[26]: _20 = &amp;(*_18)\n-103:9-103:29: @4[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @4.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb5, unwind: bb10]\n-103:9-103:29: @5[2]: _15 = [move _19]\n-103:9-103:29: @5[5]: _14 = &amp;_15\n-103:9-103:29: @5[6]: _13 = &amp;(*_14)\n-103:9-103:29: @5[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @5.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb6, unwind: bb10]\n-103:9-103:29: @6.Call: _6 = format(move _7) -&gt; [return: bb7, unwind: bb10]\n-103:9-103:29: @7[1]: FakeRead(ForLet, _6)\n-103:9-103:29: @7[6]: _0 = move _6\n-104:6-104:6: @8.Return: return\"><span class=\"annotation\">@4,5,6,7,8\u298a</span>format!(\"'{}'\", val)</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @4[7]: _22 = const main::{closure#2}::promoted[0]\n-103:17-103:23: @4[8]: _10 = &amp;(*_22)\n-103:17-103:23: @4[9]: _9 = &amp;(*_10)\n-103:17-103:23: @4[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-103:25-103:28: @4[18]: _17 = &amp;_2\n-103:9-103:29: @4[19]: _16 = (move _17,)\n-103:9-103:29: @4[21]: FakeRead(ForMatchedPlace, _16)\n-103:9-103:29: @4[23]: _18 = (_16.0: &amp;&amp;str)\n-103:9-103:29: @4[26]: _20 = &amp;(*_18)\n-103:9-103:29: @4[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @4.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb5, unwind: bb10]\n-103:9-103:29: @5[2]: _15 = [move _19]\n-103:9-103:29: @5[5]: _14 = &amp;_15\n-103:9-103:29: @5[6]: _13 = &amp;(*_14)\n-103:9-103:29: @5[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @5.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb6, unwind: bb10]\n-103:9-103:29: @6.Call: _6 = format(move _7) -&gt; [return: bb7, unwind: bb10]\n-103:9-103:29: @7[1]: FakeRead(ForLet, _6)\n-103:9-103:29: @7[6]: _0 = move _6\n-104:6-104:6: @8.Return: return\">    }<span class=\"annotation\">\u2989@4,5,6,7,8</span></span></span></span></div>\n+100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @1[0]: _3 = const 10_i32\n+100:21-102:10: @1[1]: _4 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @1[0]: _3 = const 10_i32\n+100:21-102:10: @1[1]: _4 = const ()\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @1[0]: _3 = const 10_i32\n+100:21-102:10: @1[1]: _4 = const ()\">        }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"102:10-102:10: @2[0]: _4 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @3[7]: _22 = const main::{closure#2}::promoted[0]\n+103:17-103:23: @3[8]: _10 = &amp;(*_22)\n+103:17-103:23: @3[9]: _9 = &amp;(*_10)\n+103:17-103:23: @3[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+103:25-103:28: @3[18]: _17 = &amp;_2\n+103:9-103:29: @3[19]: _16 = (move _17,)\n+103:9-103:29: @3[21]: FakeRead(ForMatchedPlace, _16)\n+103:9-103:29: @3[23]: _18 = (_16.0: &amp;&amp;str)\n+103:9-103:29: @3[26]: _20 = &amp;(*_18)\n+103:9-103:29: @3[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+103:9-103:29: @3.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb9]\n+103:9-103:29: @4[2]: _15 = [move _19]\n+103:9-103:29: @4[5]: _14 = &amp;_15\n+103:9-103:29: @4[6]: _13 = &amp;(*_14)\n+103:9-103:29: @4[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+103:9-103:29: @4.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb9]\n+103:9-103:29: @5.Call: _6 = format(move _7) -&gt; [return: bb6, unwind: bb9]\n+103:9-103:29: @6[1]: FakeRead(ForLet, _6)\n+103:9-103:29: @6[6]: _0 = move _6\n+104:6-104:6: @7.Return: return\"><span class=\"annotation\">@3,4,5,6,7\u298a</span>format!(\"'{}'\", val)</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @3[7]: _22 = const main::{closure#2}::promoted[0]\n+103:17-103:23: @3[8]: _10 = &amp;(*_22)\n+103:17-103:23: @3[9]: _9 = &amp;(*_10)\n+103:17-103:23: @3[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+103:25-103:28: @3[18]: _17 = &amp;_2\n+103:9-103:29: @3[19]: _16 = (move _17,)\n+103:9-103:29: @3[21]: FakeRead(ForMatchedPlace, _16)\n+103:9-103:29: @3[23]: _18 = (_16.0: &amp;&amp;str)\n+103:9-103:29: @3[26]: _20 = &amp;(*_18)\n+103:9-103:29: @3[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+103:9-103:29: @3.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb9]\n+103:9-103:29: @4[2]: _15 = [move _19]\n+103:9-103:29: @4[5]: _14 = &amp;_15\n+103:9-103:29: @4[6]: _13 = &amp;(*_14)\n+103:9-103:29: @4[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+103:9-103:29: @4.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb9]\n+103:9-103:29: @5.Call: _6 = format(move _7) -&gt; [return: bb6, unwind: bb9]\n+103:9-103:29: @6[1]: FakeRead(ForLet, _6)\n+103:9-103:29: @6[6]: _0 = move _6\n+104:6-104:6: @7.Return: return\">    }<span class=\"annotation\">\u2989@3,4,5,6,7</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "0940775840093cbcd592634290489c6409e217e6", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#3}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -72,22 +72,20 @@\n <div class=\"code\" style=\"counter-reset: line 119\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">|</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            mut countdown</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        |</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"124:12-124:20: @0[2]: _4 = (*((*_1).0: &amp;bool))\n-124:12-124:20: @0[3]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"124:12-124:20: @0[2]: _4 = (*((*_1).0: &amp;bool))\n-124:12-124:20: @0[3]: FakeRead(ForMatchedPlace, _4)\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @3[0]: _2 = const 10_i32\n-124:21-126:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @3[0]: _2 = const 10_i32\n-124:21-126:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @3[0]: _2 = const 10_i32\n-124:21-126:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"126:10-126:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"127:9-127:35: @4[4]: _6 = const &quot;closure should be unused&quot;\n-127:9-127:35: @4[5]: _5 = &amp;(*_6)\n-127:9-127:46: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-128:6-128:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"closure should be unused\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"127:9-127:35: @4[4]: _6 = const &quot;closure should be unused&quot;\n-127:9-127:35: @4[5]: _5 = &amp;(*_6)\n-127:9-127:46: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n-128:6-128:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"124:12-124:20: @0[2]: _4 = (*((*_1).0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"124:12-124:20: @0[2]: _4 = (*((*_1).0: &amp;bool))\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @1[0]: _2 = const 10_i32\n+124:21-126:10: @1[1]: _3 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @1[0]: _2 = const 10_i32\n+124:21-126:10: @1[1]: _3 = const ()\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @1[0]: _2 = const 10_i32\n+124:21-126:10: @1[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"126:10-126:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"127:9-127:35: @3[4]: _6 = const &quot;closure should be unused&quot;\n+127:9-127:35: @3[5]: _5 = &amp;(*_6)\n+127:9-127:46: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+128:6-128:6: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"closure should be unused\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"127:9-127:35: @3[4]: _6 = const &quot;closure should be unused&quot;\n+127:9-127:35: @3[5]: _5 = &amp;(*_6)\n+127:9-127:46: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+128:6-128:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "184dba6abd17f7b153298118081d915f4116cd60", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.conditions/conditions.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 209, "deletions": 228, "changes": 437, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -72,255 +72,236 @@\n <div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>fn main() <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:25-4:26: @0[1]: _1 = const 0_u32\n 4:9-4:22: @0[2]: FakeRead(ForLet, _1)\n-5:8-5:12: @0[5]: _3 = const true\n-5:8-5:12: @0[6]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0;</span></span>\n+5:8-5:12: @0[5]: _3 = const true\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"4:25-4:26: @0[1]: _1 = const 0_u32\n 4:9-4:22: @0[2]: FakeRead(ForLet, _1)\n-5:8-5:12: @0[5]: _3 = const true\n-5:8-5:12: @0[6]: FakeRead(ForMatchedPlace, _3)\">    if true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2[0]: _2 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+5:8-5:12: @0[5]: _3 = const true\">    if true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @1[0]: _1 = const 10_u32\n+5:13-7:6: @1[1]: _2 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @1[0]: _1 = const 10_u32\n+5:13-7:6: @1[1]: _2 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @1[0]: _1 = const 10_u32\n+5:13-7:6: @1[1]: _2 = const ()\">    }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2[0]: _2 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const B: u32 = 100;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:9-10:10: @25[0]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@25\u298a</span>x<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:16-10:25: @4[5]: _6 = _1\n-10:16-10:29: @4[6]: _5 = Gt(move _6, const 7_u32)\n-10:16-10:29: @4[8]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@4\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @7[0]: _7 = CheckedSub(_1, const 4_u32)\n-11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@5,7,8\u298a</span>countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @7[0]: _7 = CheckedSub(_1, const 4_u32)\n-11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @8[1]: _4 = const B\">        B<span class=\"annotation\">\u2989@5,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @6[2]: _9 = _1\n-13:15-13:28: @6[3]: _8 = Gt(move _9, const 2_u32)\n-13:15-13:28: @6[5]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:12-14:21: @11[5]: _14 = _1\n-14:12-14:25: @11[6]: _13 = Lt(move _14, const 1_u32)\"><span class=\"annotation\">@9,11\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:29-14:38: @18[2]: _16 = _1\n-14:29-14:42: @18[3]: _15 = Gt(move _16, const 5_u32)\"><span class=\"annotation\">@18\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:46-14:55: @14[2]: _18 = _1\n-14:46-14:60: @14[3]: _17 = Ne(move _18, const 9_u32)\"><span class=\"annotation\">@14\u298a</span>countdown != 9<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\"><span class=\"annotation\">@20,22\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\">        }<span class=\"annotation\">\u2989@20,22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:10-16:10: @21[0]: _10 = const ()\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @23[2]: _19 = CheckedSub(_1, const 5_u32)\n-17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@23,24\u298a</span>countdown -= 5;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @23[2]: _19 = CheckedSub(_1, const 5_u32)\n-17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @24[1]: _4 = _1\">        countdown<span class=\"annotation\">\u2989@23,24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:9-10:10: @21[1]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@21\u298a</span>x<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:16-10:25: @3[5]: _6 = _1\n+10:16-10:29: @3[6]: _5 = Gt(move _6, const 7_u32)\"><span class=\"annotation\">@3\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _7 = CheckedSub(_1, const 4_u32)\n+11:9-11:23: @6[0]: _1 = move (_7.0: u32)\n+12:9-12:10: @6[1]: _4 = const B\"><span class=\"annotation\">@4,6\u298a</span>countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _7 = CheckedSub(_1, const 4_u32)\n+11:9-11:23: @6[0]: _1 = move (_7.0: u32)\n+12:9-12:10: @6[1]: _4 = const B\">        B<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @5[2]: _9 = _1\n+13:15-13:28: @5[3]: _8 = Gt(move _9, const 2_u32)\"><span class=\"annotation\">@5\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:12-14:21: @7[5]: _14 = _1\n+14:12-14:25: @7[6]: _13 = Lt(move _14, const 1_u32)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:29-14:38: @15[2]: _16 = _1\n+14:29-14:42: @15[3]: _15 = Gt(move _16, const 5_u32)\"><span class=\"annotation\">@15\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:46-14:55: @11[2]: _18 = _1\n+14:46-14:60: @11[3]: _17 = Ne(move _18, const 9_u32)\"><span class=\"annotation\">@11\u298a</span>countdown != 9<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @17[0]: _1 = const 0_u32\n+14:61-16:10: @17[1]: _10 = const ()\"><span class=\"annotation\">@17\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @17[0]: _1 = const 0_u32\n+14:61-16:10: @17[1]: _10 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @17[0]: _1 = const 0_u32\n+14:61-16:10: @17[1]: _10 = const ()\">        }<span class=\"annotation\">\u2989@17</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:10-16:10: @18[0]: _10 = const ()\"><span class=\"annotation\">@18\u298a</span>\u2038<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @19[2]: _19 = CheckedSub(_1, const 5_u32)\n+17:9-17:23: @20[0]: _1 = move (_19.0: u32)\n+18:9-18:18: @20[1]: _4 = _1\"><span class=\"annotation\">@19,20\u298a</span>countdown -= 5;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @19[2]: _19 = CheckedSub(_1, const 5_u32)\n+17:9-17:23: @20[0]: _1 = move (_19.0: u32)\n+18:9-18:18: @20[1]: _4 = _1\">        countdown<span class=\"annotation\">\u2989@19,20</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:15: @10[0]: _0 = const ()\"><span class=\"annotation\">@10\u298a</span>return<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:15: @8[0]: _0 = const ()\"><span class=\"annotation\">@8\u298a</span>return<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:25-23:26: @25[3]: _21 = const 0_i32\n-23:9-23:22: @25[4]: FakeRead(ForLet, _21)\n-24:8-24:12: @25[7]: _23 = const true\n-24:8-24:12: @25[8]: FakeRead(ForMatchedPlace, _23)\"><span class=\"annotation\">@25\u298a</span>mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:25-23:26: @25[3]: _21 = const 0_i32\n-23:9-23:22: @25[4]: FakeRead(ForLet, _21)\n-24:8-24:12: @25[7]: _23 = const true\n-24:8-24:12: @25[8]: FakeRead(ForMatchedPlace, _23)\">    if true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\"><span class=\"annotation\">@26,28\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\">    }<span class=\"annotation\">\u2989@26,28</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:6-26:6: @27[0]: _22 = const ()\"><span class=\"annotation\">@27\u298a</span>\u2038<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:25-23:26: @21[3]: _21 = const 0_i32\n+23:9-23:22: @21[4]: FakeRead(ForLet, _21)\n+24:8-24:12: @21[7]: _23 = const true\"><span class=\"annotation\">@21\u298a</span>mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:25-23:26: @21[3]: _21 = const 0_i32\n+23:9-23:22: @21[4]: FakeRead(ForLet, _21)\n+24:8-24:12: @21[7]: _23 = const true\">    if true<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @22[0]: _21 = const 10_i32\n+24:13-26:6: @22[1]: _22 = const ()\"><span class=\"annotation\">@22\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @22[0]: _21 = const 10_i32\n+24:13-26:6: @22[1]: _22 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @22[0]: _21 = const 10_i32\n+24:13-26:6: @22[1]: _22 = const ()\">    }<span class=\"annotation\">\u2989@22</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:6-26:6: @23[0]: _22 = const ()\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:8-28:17: @29[5]: _26 = _21\n-28:8-28:21: @29[6]: _25 = Gt(move _26, const 7_i32)\n-28:8-28:21: @29[8]: FakeRead(ForMatchedPlace, _25)\"><span class=\"annotation\">@29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\n-29:9-29:23: @33[0]: _21 = move (_27.0: i32)\n-28:22-30:6: @33[1]: _24 = const ()\"><span class=\"annotation\">@30,32,33\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\n-29:9-29:23: @33[0]: _21 = move (_27.0: i32)\n-28:22-30:6: @33[1]: _24 = const ()\">        countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\n-29:9-29:23: @33[0]: _21 = move (_27.0: i32)\n-28:22-30:6: @33[1]: _24 = const ()\">    }<span class=\"annotation\">\u2989@30,32,33</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n-30:15-30:28: @31[3]: _28 = Gt(move _29, const 2_i32)\n-30:15-30:28: @31[5]: FakeRead(ForMatchedPlace, _28)\"><span class=\"annotation\">@31\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:12-31:21: @36[5]: _34 = _21\n-31:12-31:25: @36[6]: _33 = Lt(move _34, const 1_i32)\"><span class=\"annotation\">@34,36\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@34,36</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:29-31:38: @43[2]: _36 = _21\n-31:29-31:42: @43[3]: _35 = Gt(move _36, const 5_i32)\"><span class=\"annotation\">@43\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@43</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:46-31:55: @39[2]: _38 = _21\n-31:46-31:60: @39[3]: _37 = Ne(move _38, const 9_i32)\"><span class=\"annotation\">@39\u298a</span>countdown != 9<span class=\"annotation\">\u2989@39</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\"><span class=\"annotation\">@45,47\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\">        }<span class=\"annotation\">\u2989@45,47</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:10-33:10: @46[0]: _30 = const ()\"><span class=\"annotation\">@46\u298a</span>\u2038<span class=\"annotation\">\u2989@46</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @48[2]: _39 = CheckedSub(_21, const 5_i32)\n-34:9-34:23: @49[0]: _21 = move (_39.0: i32)\"><span class=\"annotation\">@48,49\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@48,49</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:8-28:17: @24[5]: _26 = _21\n+28:8-28:21: @24[6]: _25 = Gt(move _26, const 7_i32)\"><span class=\"annotation\">@24\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @25[0]: _27 = CheckedSub(_21, const 4_i32)\n+29:9-29:23: @27[0]: _21 = move (_27.0: i32)\n+28:22-30:6: @27[1]: _24 = const ()\"><span class=\"annotation\">@25,27\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @25[0]: _27 = CheckedSub(_21, const 4_i32)\n+29:9-29:23: @27[0]: _21 = move (_27.0: i32)\n+28:22-30:6: @27[1]: _24 = const ()\">        countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @25[0]: _27 = CheckedSub(_21, const 4_i32)\n+29:9-29:23: @27[0]: _21 = move (_27.0: i32)\n+28:22-30:6: @27[1]: _24 = const ()\">    }<span class=\"annotation\">\u2989@25,27</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:15-30:24: @26[2]: _29 = _21\n+30:15-30:28: @26[3]: _28 = Gt(move _29, const 2_i32)\"><span class=\"annotation\">@26\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@26</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:12-31:21: @28[5]: _34 = _21\n+31:12-31:25: @28[6]: _33 = Lt(move _34, const 1_i32)\"><span class=\"annotation\">@28\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@28</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:29-31:38: @36[2]: _36 = _21\n+31:29-31:42: @36[3]: _35 = Gt(move _36, const 5_i32)\"><span class=\"annotation\">@36\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@36</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:46-31:55: @32[2]: _38 = _21\n+31:46-31:60: @32[3]: _37 = Ne(move _38, const 9_i32)\"><span class=\"annotation\">@32\u298a</span>countdown != 9<span class=\"annotation\">\u2989@32</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @38[0]: _21 = const 0_i32\n+31:61-33:10: @38[1]: _30 = const ()\"><span class=\"annotation\">@38\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @38[0]: _21 = const 0_i32\n+31:61-33:10: @38[1]: _30 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @38[0]: _21 = const 0_i32\n+31:61-33:10: @38[1]: _30 = const ()\">        }<span class=\"annotation\">\u2989@38</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:10-33:10: @39[0]: _30 = const ()\"><span class=\"annotation\">@39\u298a</span>\u2038<span class=\"annotation\">\u2989@39</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @40[2]: _39 = CheckedSub(_21, const 5_i32)\n+34:9-34:23: @41[0]: _21 = move (_39.0: i32)\"><span class=\"annotation\">@40,41\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@40,41</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:15: @35[0]: _0 = const ()\"><span class=\"annotation\">@35\u298a</span>return<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:15: @29[0]: _0 = const ()\"><span class=\"annotation\">@29\u298a</span>return<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:8-39:12: @50[4]: _42 = const true\n-39:8-39:12: @50[5]: FakeRead(ForMatchedPlace, _42)\"><span class=\"annotation\">@50\u298a</span>true<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:29-40:30: @53[1]: _43 = const 0_i32\n-40:13-40:26: @53[2]: FakeRead(ForLet, _43)\n-41:12-41:16: @53[5]: _45 = const true\n-41:12-41:16: @53[6]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@51,53\u298a</span>mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"40:29-40:30: @53[1]: _43 = const 0_i32\n-40:13-40:26: @53[2]: FakeRead(ForLet, _43)\n-41:12-41:16: @53[5]: _45 = const true\n-41:12-41:16: @53[6]: FakeRead(ForMatchedPlace, _45)\">        if true<span class=\"annotation\">\u2989@51,53</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:13-42:27: @56[0]: _43 = const 10_i32\n-41:17-43:10: @56[1]: _44 = const ()\"><span class=\"annotation\">@54,56\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:13-42:27: @56[0]: _43 = const 10_i32\n-41:17-43:10: @56[1]: _44 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:13-42:27: @56[0]: _43 = const 10_i32\n-41:17-43:10: @56[1]: _44 = const ()\">        }<span class=\"annotation\">\u2989@54,56</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:10-43:10: @55[0]: _44 = const ()\"><span class=\"annotation\">@55\u298a</span>\u2038<span class=\"annotation\">\u2989@55</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:8-39:12: @42[4]: _42 = const true\"><span class=\"annotation\">@42\u298a</span>true<span class=\"annotation\">\u2989@42</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:29-40:30: @43[1]: _43 = const 0_i32\n+40:13-40:26: @43[2]: FakeRead(ForLet, _43)\n+41:12-41:16: @43[5]: _45 = const true\"><span class=\"annotation\">@43\u298a</span>mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"40:29-40:30: @43[1]: _43 = const 0_i32\n+40:13-40:26: @43[2]: FakeRead(ForLet, _43)\n+41:12-41:16: @43[5]: _45 = const true\">        if true<span class=\"annotation\">\u2989@43</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:13-42:27: @45[0]: _43 = const 10_i32\n+41:17-43:10: @45[1]: _44 = const ()\"><span class=\"annotation\">@45\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:13-42:27: @45[0]: _43 = const 10_i32\n+41:17-43:10: @45[1]: _44 = const ()\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:13-42:27: @45[0]: _43 = const 10_i32\n+41:17-43:10: @45[1]: _44 = const ()\">        }<span class=\"annotation\">\u2989@45</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:10-43:10: @46[0]: _44 = const ()\"><span class=\"annotation\">@46\u298a</span>\u2038<span class=\"annotation\">\u2989@46</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"45:12-45:21: @57[4]: _47 = _43\n-45:12-45:25: @57[5]: _46 = Gt(move _47, const 7_i32)\n-45:12-45:25: @57[7]: FakeRead(ForMatchedPlace, _46)\"><span class=\"annotation\">@57\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@57</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:13-46:27: @60[0]: _48 = CheckedSub(_43, const 4_i32)\n-46:13-46:27: @61[0]: _43 = move (_48.0: i32)\n-45:26-47:10: @61[1]: _41 = const ()\"><span class=\"annotation\">@58,60,61\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:13-46:27: @60[0]: _48 = CheckedSub(_43, const 4_i32)\n-46:13-46:27: @61[0]: _43 = move (_48.0: i32)\n-45:26-47:10: @61[1]: _41 = const ()\">            countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:13-46:27: @60[0]: _48 = CheckedSub(_43, const 4_i32)\n-46:13-46:27: @61[0]: _43 = move (_48.0: i32)\n-45:26-47:10: @61[1]: _41 = const ()\">        }<span class=\"annotation\">\u2989@58,60,61</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:17-48:26: @59[2]: _50 = _43\n-48:17-48:30: @59[3]: _49 = Gt(move _50, const 2_i32)\n-48:17-48:30: @59[5]: FakeRead(ForMatchedPlace, _49)\"><span class=\"annotation\">@59\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@59</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:16-49:25: @64[5]: _55 = _43\n-49:16-49:29: @64[6]: _54 = Lt(move _55, const 1_i32)\"><span class=\"annotation\">@62,64\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@62,64</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"49:33-49:42: @71[2]: _57 = _43\n-49:33-49:46: @71[3]: _56 = Gt(move _57, const 5_i32)\"><span class=\"annotation\">@71\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@71</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:50-49:59: @67[2]: _59 = _43\n-49:50-49:64: @67[3]: _58 = Ne(move _59, const 9_i32)\"><span class=\"annotation\">@67\u298a</span>countdown != 9<span class=\"annotation\">\u2989@67</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:17-50:30: @75[0]: _43 = const 0_i32\n-49:65-51:14: @75[1]: _51 = const ()\"><span class=\"annotation\">@73,75\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"50:17-50:30: @75[0]: _43 = const 0_i32\n-49:65-51:14: @75[1]: _51 = const ()\">                countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"50:17-50:30: @75[0]: _43 = const 0_i32\n-49:65-51:14: @75[1]: _51 = const ()\">            }<span class=\"annotation\">\u2989@73,75</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"51:14-51:14: @74[0]: _51 = const ()\"><span class=\"annotation\">@74\u298a</span>\u2038<span class=\"annotation\">\u2989@74</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"52:13-52:27: @76[2]: _60 = CheckedSub(_43, const 5_i32)\n-52:13-52:27: @77[0]: _43 = move (_60.0: i32)\"><span class=\"annotation\">@76,77\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@76,77</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"45:12-45:21: @47[4]: _47 = _43\n+45:12-45:25: @47[5]: _46 = Gt(move _47, const 7_i32)\"><span class=\"annotation\">@47\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@47</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:13-46:27: @48[0]: _48 = CheckedSub(_43, const 4_i32)\n+46:13-46:27: @50[0]: _43 = move (_48.0: i32)\n+45:26-47:10: @50[1]: _41 = const ()\"><span class=\"annotation\">@48,50\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:13-46:27: @48[0]: _48 = CheckedSub(_43, const 4_i32)\n+46:13-46:27: @50[0]: _43 = move (_48.0: i32)\n+45:26-47:10: @50[1]: _41 = const ()\">            countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:13-46:27: @48[0]: _48 = CheckedSub(_43, const 4_i32)\n+46:13-46:27: @50[0]: _43 = move (_48.0: i32)\n+45:26-47:10: @50[1]: _41 = const ()\">        }<span class=\"annotation\">\u2989@48,50</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:17-48:26: @49[2]: _50 = _43\n+48:17-48:30: @49[3]: _49 = Gt(move _50, const 2_i32)\"><span class=\"annotation\">@49\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@49</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:16-49:25: @51[5]: _55 = _43\n+49:16-49:29: @51[6]: _54 = Lt(move _55, const 1_i32)\"><span class=\"annotation\">@51\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@51</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"49:33-49:42: @59[2]: _57 = _43\n+49:33-49:46: @59[3]: _56 = Gt(move _57, const 5_i32)\"><span class=\"annotation\">@59\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@59</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:50-49:59: @55[2]: _59 = _43\n+49:50-49:64: @55[3]: _58 = Ne(move _59, const 9_i32)\"><span class=\"annotation\">@55\u298a</span>countdown != 9<span class=\"annotation\">\u2989@55</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:17-50:30: @61[0]: _43 = const 0_i32\n+49:65-51:14: @61[1]: _51 = const ()\"><span class=\"annotation\">@61\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"50:17-50:30: @61[0]: _43 = const 0_i32\n+49:65-51:14: @61[1]: _51 = const ()\">                countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"50:17-50:30: @61[0]: _43 = const 0_i32\n+49:65-51:14: @61[1]: _51 = const ()\">            }<span class=\"annotation\">\u2989@61</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"51:14-51:14: @62[0]: _51 = const ()\"><span class=\"annotation\">@62\u298a</span>\u2038<span class=\"annotation\">\u2989@62</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"52:13-52:27: @63[2]: _60 = CheckedSub(_43, const 5_i32)\n+52:13-52:27: @64[0]: _43 = move (_60.0: i32)\"><span class=\"annotation\">@63,64\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@63,64</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"54:13-54:19: @63[0]: _0 = const ()\"><span class=\"annotation\">@63\u298a</span>return<span class=\"annotation\">\u2989@63</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"54:13-54:19: @52[0]: _0 = const ()\"><span class=\"annotation\">@52\u298a</span>return<span class=\"annotation\">\u2989@52</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"56:6-56:6: @52[0]: _41 = const ()\"><span class=\"annotation\">@52\u298a</span>\u2038<span class=\"annotation\">\u2989@52</span></span></span><span class=\"code\" style=\"--layer: 0\"> // Note: closing brace shows uncovered (vs. `0` for implicit else) because condition literal</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"56:6-56:6: @44[0]: _41 = const ()\"><span class=\"annotation\">@44\u298a</span>\u2038<span class=\"annotation\">\u2989@44</span></span></span><span class=\"code\" style=\"--layer: 0\"> // Note: closing brace shows uncovered (vs. `0` for implicit else) because condition literal</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">      // `true` was const-evaluated. The compiler knows the `if` block will be executed.</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:25-59:26: @79[3]: _62 = const 0_i32\n-59:9-59:22: @79[4]: FakeRead(ForLet, _62)\n-60:8-60:12: @79[7]: _64 = const true\n-60:8-60:12: @79[8]: FakeRead(ForMatchedPlace, _64)\"><span class=\"annotation\">@79\u298a</span>mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"59:25-59:26: @79[3]: _62 = const 0_i32\n-59:9-59:22: @79[4]: FakeRead(ForLet, _62)\n-60:8-60:12: @79[7]: _64 = const true\n-60:8-60:12: @79[8]: FakeRead(ForMatchedPlace, _64)\">    if true<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"61:9-61:22: @82[0]: _62 = const 1_i32\n-60:13-62:6: @82[1]: _63 = const ()\"><span class=\"annotation\">@80,82\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"61:9-61:22: @82[0]: _62 = const 1_i32\n-60:13-62:6: @82[1]: _63 = const ()\">        countdown = 1;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"61:9-61:22: @82[0]: _62 = const 1_i32\n-60:13-62:6: @82[1]: _63 = const ()\">    }<span class=\"annotation\">\u2989@80,82</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:6-62:6: @81[0]: _63 = const ()\"><span class=\"annotation\">@81\u298a</span>\u2038<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:25-59:26: @66[3]: _62 = const 0_i32\n+59:9-59:22: @66[4]: FakeRead(ForLet, _62)\n+60:8-60:12: @66[7]: _64 = const true\"><span class=\"annotation\">@66\u298a</span>mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"59:25-59:26: @66[3]: _62 = const 0_i32\n+59:9-59:22: @66[4]: FakeRead(ForLet, _62)\n+60:8-60:12: @66[7]: _64 = const true\">    if true<span class=\"annotation\">\u2989@66</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"61:9-61:22: @67[0]: _62 = const 1_i32\n+60:13-62:6: @67[1]: _63 = const ()\"><span class=\"annotation\">@67\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"61:9-61:22: @67[0]: _62 = const 1_i32\n+60:13-62:6: @67[1]: _63 = const ()\">        countdown = 1;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"61:9-61:22: @67[0]: _62 = const 1_i32\n+60:13-62:6: @67[1]: _63 = const ()\">    }<span class=\"annotation\">\u2989@67</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:6-62:6: @68[0]: _63 = const ()\"><span class=\"annotation\">@68\u298a</span>\u2038<span class=\"annotation\">\u2989@68</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:9-64:10: @106[0]: FakeRead(ForLet, _65)\"><span class=\"annotation\">@106\u298a</span>z<span class=\"annotation\">\u2989@106</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"64:16-64:25: @83[5]: _67 = _62\n-64:16-64:29: @83[6]: _66 = Gt(move _67, const 7_i32)\n-64:16-64:29: @83[8]: FakeRead(ForMatchedPlace, _66)\"><span class=\"annotation\">@83\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:23: @86[0]: _68 = CheckedSub(_62, const 4_i32)\n-65:9-65:23: @87[0]: _62 = move (_68.0: i32)\n-64:30-66:6: @87[1]: _65 = const ()\"><span class=\"annotation\">@84,86,87\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:23: @86[0]: _68 = CheckedSub(_62, const 4_i32)\n-65:9-65:23: @87[0]: _62 = move (_68.0: i32)\n-64:30-66:6: @87[1]: _65 = const ()\">        countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:23: @86[0]: _68 = CheckedSub(_62, const 4_i32)\n-65:9-65:23: @87[0]: _62 = move (_68.0: i32)\n-64:30-66:6: @87[1]: _65 = const ()\">    }<span class=\"annotation\">\u2989@84,86,87</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:15-66:24: @85[2]: _70 = _62\n-66:15-66:28: @85[3]: _69 = Gt(move _70, const 2_i32)\n-66:15-66:28: @85[5]: FakeRead(ForMatchedPlace, _69)\"><span class=\"annotation\">@85\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@85</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:12-67:21: @90[5]: _75 = _62\n-67:12-67:25: @90[6]: _74 = Lt(move _75, const 1_i32)\"><span class=\"annotation\">@88,90\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@88,90</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"67:29-67:38: @97[2]: _77 = _62\n-67:29-67:42: @97[3]: _76 = Gt(move _77, const 5_i32)\"><span class=\"annotation\">@97\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@97</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:46-67:55: @93[2]: _79 = _62\n-67:46-67:60: @93[3]: _78 = Ne(move _79, const 9_i32)\"><span class=\"annotation\">@93\u298a</span>countdown != 9<span class=\"annotation\">\u2989@93</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"68:13-68:26: @101[0]: _62 = const 0_i32\n-67:61-69:10: @101[1]: _71 = const ()\"><span class=\"annotation\">@99,101\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:13-68:26: @101[0]: _62 = const 0_i32\n-67:61-69:10: @101[1]: _71 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:13-68:26: @101[0]: _62 = const 0_i32\n-67:61-69:10: @101[1]: _71 = const ()\">        }<span class=\"annotation\">\u2989@99,101</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"69:10-69:10: @100[0]: _71 = const ()\"><span class=\"annotation\">@100\u298a</span>\u2038<span class=\"annotation\">\u2989@100</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"70:9-70:23: @102[2]: _80 = CheckedSub(_62, const 5_i32)\n-70:9-70:23: @103[0]: _62 = move (_80.0: i32)\"><span class=\"annotation\">@102,103\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@102,103</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:9-64:10: @89[1]: FakeRead(ForLet, _65)\"><span class=\"annotation\">@89\u298a</span>z<span class=\"annotation\">\u2989@89</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"64:16-64:25: @69[5]: _67 = _62\n+64:16-64:29: @69[6]: _66 = Gt(move _67, const 7_i32)\"><span class=\"annotation\">@69\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@69</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:23: @70[0]: _68 = CheckedSub(_62, const 4_i32)\n+65:9-65:23: @72[0]: _62 = move (_68.0: i32)\n+64:30-66:6: @72[1]: _65 = const ()\"><span class=\"annotation\">@70,72\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:23: @70[0]: _68 = CheckedSub(_62, const 4_i32)\n+65:9-65:23: @72[0]: _62 = move (_68.0: i32)\n+64:30-66:6: @72[1]: _65 = const ()\">        countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:23: @70[0]: _68 = CheckedSub(_62, const 4_i32)\n+65:9-65:23: @72[0]: _62 = move (_68.0: i32)\n+64:30-66:6: @72[1]: _65 = const ()\">    }<span class=\"annotation\">\u2989@70,72</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:15-66:24: @71[2]: _70 = _62\n+66:15-66:28: @71[3]: _69 = Gt(move _70, const 2_i32)\"><span class=\"annotation\">@71\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@71</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:12-67:21: @73[5]: _75 = _62\n+67:12-67:25: @73[6]: _74 = Lt(move _75, const 1_i32)\"><span class=\"annotation\">@73\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@73</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"67:29-67:38: @81[2]: _77 = _62\n+67:29-67:42: @81[3]: _76 = Gt(move _77, const 5_i32)\"><span class=\"annotation\">@81\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:46-67:55: @77[2]: _79 = _62\n+67:46-67:60: @77[3]: _78 = Ne(move _79, const 9_i32)\"><span class=\"annotation\">@77\u298a</span>countdown != 9<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"68:13-68:26: @83[0]: _62 = const 0_i32\n+67:61-69:10: @83[1]: _71 = const ()\"><span class=\"annotation\">@83\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:13-68:26: @83[0]: _62 = const 0_i32\n+67:61-69:10: @83[1]: _71 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:13-68:26: @83[0]: _62 = const 0_i32\n+67:61-69:10: @83[1]: _71 = const ()\">        }<span class=\"annotation\">\u2989@83</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"69:10-69:10: @84[0]: _71 = const ()\"><span class=\"annotation\">@84\u298a</span>\u2038<span class=\"annotation\">\u2989@84</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"70:9-70:23: @85[2]: _80 = CheckedSub(_62, const 5_i32)\n+70:9-70:23: @86[0]: _62 = move (_80.0: i32)\"><span class=\"annotation\">@85,86\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@85,86</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"72:35-72:44: @89[1]: _82 = _62\n-72:13-72:32: @89[2]: FakeRead(ForLet, _82)\n-73:18-73:27: @89[9]: _113 = const main::promoted[1]\n-73:18-73:27: @89[10]: _88 = &amp;(*_113)\n-73:18-73:27: @89[11]: _87 = &amp;(*_88)\n-73:18-73:27: @89[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n-73:9-73:29: @89[18]: _94 = ()\n-73:9-73:29: @89[19]: FakeRead(ForMatchedPlace, _94)\n-73:9-73:29: @89[20]: _112 = const main::promoted[0]\n-73:9-73:29: @89[21]: _92 = &amp;(*_112)\n-73:9-73:29: @89[22]: _91 = &amp;(*_92)\n-73:9-73:29: @89[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-73:9-73:29: @89.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb104, unwind: bb132]\n-73:9-73:29: @104.Call: _84 = _print(move _85) -&gt; [return: bb105, unwind: bb132]\n-73:9-73:29: @105[5]: _83 = const ()\n-74:9-74:15: @105[7]: _0 = const ()\"><span class=\"annotation\">@89,104,105\u298a</span>should_be_reachable = countdown;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"72:35-72:44: @89[1]: _82 = _62\n-72:13-72:32: @89[2]: FakeRead(ForLet, _82)\n-73:18-73:27: @89[9]: _113 = const main::promoted[1]\n-73:18-73:27: @89[10]: _88 = &amp;(*_113)\n-73:18-73:27: @89[11]: _87 = &amp;(*_88)\n-73:18-73:27: @89[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n-73:9-73:29: @89[18]: _94 = ()\n-73:9-73:29: @89[19]: FakeRead(ForMatchedPlace, _94)\n-73:9-73:29: @89[20]: _112 = const main::promoted[0]\n-73:9-73:29: @89[21]: _92 = &amp;(*_112)\n-73:9-73:29: @89[22]: _91 = &amp;(*_92)\n-73:9-73:29: @89[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-73:9-73:29: @89.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb104, unwind: bb132]\n-73:9-73:29: @104.Call: _84 = _print(move _85) -&gt; [return: bb105, unwind: bb132]\n-73:9-73:29: @105[5]: _83 = const ()\n-74:9-74:15: @105[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"72:35-72:44: @89[1]: _82 = _62\n-72:13-72:32: @89[2]: FakeRead(ForLet, _82)\n-73:18-73:27: @89[9]: _113 = const main::promoted[1]\n-73:18-73:27: @89[10]: _88 = &amp;(*_113)\n-73:18-73:27: @89[11]: _87 = &amp;(*_88)\n-73:18-73:27: @89[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n-73:9-73:29: @89[18]: _94 = ()\n-73:9-73:29: @89[19]: FakeRead(ForMatchedPlace, _94)\n-73:9-73:29: @89[20]: _112 = const main::promoted[0]\n-73:9-73:29: @89[21]: _92 = &amp;(*_112)\n-73:9-73:29: @89[22]: _91 = &amp;(*_92)\n-73:9-73:29: @89[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-73:9-73:29: @89.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb104, unwind: bb132]\n-73:9-73:29: @104.Call: _84 = _print(move _85) -&gt; [return: bb105, unwind: bb132]\n-73:9-73:29: @105[5]: _83 = const ()\n-74:9-74:15: @105[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@89,104,105</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"72:35-72:44: @74[1]: _82 = _62\n+72:13-72:32: @74[2]: FakeRead(ForLet, _82)\n+73:18-73:27: @74[9]: _113 = const main::promoted[1]\n+73:18-73:27: @74[10]: _88 = &amp;(*_113)\n+73:18-73:27: @74[11]: _87 = &amp;(*_88)\n+73:18-73:27: @74[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n+73:9-73:29: @74[18]: _94 = ()\n+73:9-73:29: @74[19]: FakeRead(ForMatchedPlace, _94)\n+73:9-73:29: @74[20]: _112 = const main::promoted[0]\n+73:9-73:29: @74[21]: _92 = &amp;(*_112)\n+73:9-73:29: @74[22]: _91 = &amp;(*_92)\n+73:9-73:29: @74[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+73:9-73:29: @74.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb87, unwind: bb112]\n+73:9-73:29: @87.Call: _84 = _print(move _85) -&gt; [return: bb88, unwind: bb112]\n+73:9-73:29: @88[5]: _83 = const ()\n+74:9-74:15: @88[7]: _0 = const ()\"><span class=\"annotation\">@74,87,88\u298a</span>should_be_reachable = countdown;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"72:35-72:44: @74[1]: _82 = _62\n+72:13-72:32: @74[2]: FakeRead(ForLet, _82)\n+73:18-73:27: @74[9]: _113 = const main::promoted[1]\n+73:18-73:27: @74[10]: _88 = &amp;(*_113)\n+73:18-73:27: @74[11]: _87 = &amp;(*_88)\n+73:18-73:27: @74[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n+73:9-73:29: @74[18]: _94 = ()\n+73:9-73:29: @74[19]: FakeRead(ForMatchedPlace, _94)\n+73:9-73:29: @74[20]: _112 = const main::promoted[0]\n+73:9-73:29: @74[21]: _92 = &amp;(*_112)\n+73:9-73:29: @74[22]: _91 = &amp;(*_92)\n+73:9-73:29: @74[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+73:9-73:29: @74.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb87, unwind: bb112]\n+73:9-73:29: @87.Call: _84 = _print(move _85) -&gt; [return: bb88, unwind: bb112]\n+73:9-73:29: @88[5]: _83 = const ()\n+74:9-74:15: @88[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"72:35-72:44: @74[1]: _82 = _62\n+72:13-72:32: @74[2]: FakeRead(ForLet, _82)\n+73:18-73:27: @74[9]: _113 = const main::promoted[1]\n+73:18-73:27: @74[10]: _88 = &amp;(*_113)\n+73:18-73:27: @74[11]: _87 = &amp;(*_88)\n+73:18-73:27: @74[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n+73:9-73:29: @74[18]: _94 = ()\n+73:9-73:29: @74[19]: FakeRead(ForMatchedPlace, _94)\n+73:9-73:29: @74[20]: _112 = const main::promoted[0]\n+73:9-73:29: @74[21]: _92 = &amp;(*_112)\n+73:9-73:29: @74[22]: _91 = &amp;(*_92)\n+73:9-73:29: @74[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+73:9-73:29: @74.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb87, unwind: bb112]\n+73:9-73:29: @87.Call: _84 = _print(move _85) -&gt; [return: bb88, unwind: bb112]\n+73:9-73:29: @88[5]: _83 = const ()\n+74:9-74:15: @88[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@74,87,88</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:10: @127[0]: FakeRead(ForLet, _95)\"><span class=\"annotation\">@127\u298a</span>w<span class=\"annotation\">\u2989@127</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"77:16-77:25: @106[5]: _97 = _62\n-77:16-77:29: @106[6]: _96 = Gt(move _97, const 7_i32)\n-77:16-77:29: @106[8]: FakeRead(ForMatchedPlace, _96)\"><span class=\"annotation\">@106\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@106</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"78:9-78:23: @109[0]: _98 = CheckedSub(_62, const 4_i32)\n-78:9-78:23: @110[0]: _62 = move (_98.0: i32)\n-77:30-79:6: @110[1]: _95 = const ()\"><span class=\"annotation\">@107,109,110\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"78:9-78:23: @109[0]: _98 = CheckedSub(_62, const 4_i32)\n-78:9-78:23: @110[0]: _62 = move (_98.0: i32)\n-77:30-79:6: @110[1]: _95 = const ()\">        countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"78:9-78:23: @109[0]: _98 = CheckedSub(_62, const 4_i32)\n-78:9-78:23: @110[0]: _62 = move (_98.0: i32)\n-77:30-79:6: @110[1]: _95 = const ()\">    }<span class=\"annotation\">\u2989@107,109,110</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:15-79:24: @108[2]: _100 = _62\n-79:15-79:28: @108[3]: _99 = Gt(move _100, const 2_i32)\n-79:15-79:28: @108[5]: FakeRead(ForMatchedPlace, _99)\"><span class=\"annotation\">@108\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@108</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:12-80:21: @113[5]: _105 = _62\n-80:12-80:25: @113[6]: _104 = Lt(move _105, const 1_i32)\"><span class=\"annotation\">@111,113\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@111,113</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"80:29-80:38: @120[2]: _107 = _62\n-80:29-80:42: @120[3]: _106 = Gt(move _107, const 5_i32)\"><span class=\"annotation\">@120\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@120</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:46-80:55: @116[2]: _109 = _62\n-80:46-80:60: @116[3]: _108 = Ne(move _109, const 9_i32)\"><span class=\"annotation\">@116\u298a</span>countdown != 9<span class=\"annotation\">\u2989@116</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"81:13-81:26: @124[0]: _62 = const 0_i32\n-80:61-82:10: @124[1]: _101 = const ()\"><span class=\"annotation\">@122,124\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:13-81:26: @124[0]: _62 = const 0_i32\n-80:61-82:10: @124[1]: _101 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:13-81:26: @124[0]: _62 = const 0_i32\n-80:61-82:10: @124[1]: _101 = const ()\">        }<span class=\"annotation\">\u2989@122,124</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"82:10-82:10: @123[0]: _101 = const ()\"><span class=\"annotation\">@123\u298a</span>\u2038<span class=\"annotation\">\u2989@123</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"83:9-83:23: @125[2]: _110 = CheckedSub(_62, const 5_i32)\n-83:9-83:23: @126[0]: _62 = move (_110.0: i32)\"><span class=\"annotation\">@125,126\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@125,126</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:10: @107[1]: FakeRead(ForLet, _95)\"><span class=\"annotation\">@107\u298a</span>w<span class=\"annotation\">\u2989@107</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"77:16-77:25: @89[5]: _97 = _62\n+77:16-77:29: @89[6]: _96 = Gt(move _97, const 7_i32)\"><span class=\"annotation\">@89\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@89</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"78:9-78:23: @90[0]: _98 = CheckedSub(_62, const 4_i32)\n+78:9-78:23: @92[0]: _62 = move (_98.0: i32)\n+77:30-79:6: @92[1]: _95 = const ()\"><span class=\"annotation\">@90,92\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"78:9-78:23: @90[0]: _98 = CheckedSub(_62, const 4_i32)\n+78:9-78:23: @92[0]: _62 = move (_98.0: i32)\n+77:30-79:6: @92[1]: _95 = const ()\">        countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"78:9-78:23: @90[0]: _98 = CheckedSub(_62, const 4_i32)\n+78:9-78:23: @92[0]: _62 = move (_98.0: i32)\n+77:30-79:6: @92[1]: _95 = const ()\">    }<span class=\"annotation\">\u2989@90,92</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:15-79:24: @91[2]: _100 = _62\n+79:15-79:28: @91[3]: _99 = Gt(move _100, const 2_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@91</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:12-80:21: @93[5]: _105 = _62\n+80:12-80:25: @93[6]: _104 = Lt(move _105, const 1_i32)\"><span class=\"annotation\">@93\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@93</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"80:29-80:38: @101[2]: _107 = _62\n+80:29-80:42: @101[3]: _106 = Gt(move _107, const 5_i32)\"><span class=\"annotation\">@101\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@101</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:46-80:55: @97[2]: _109 = _62\n+80:46-80:60: @97[3]: _108 = Ne(move _109, const 9_i32)\"><span class=\"annotation\">@97\u298a</span>countdown != 9<span class=\"annotation\">\u2989@97</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"81:13-81:26: @103[0]: _62 = const 0_i32\n+80:61-82:10: @103[1]: _101 = const ()\"><span class=\"annotation\">@103\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:13-81:26: @103[0]: _62 = const 0_i32\n+80:61-82:10: @103[1]: _101 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:13-81:26: @103[0]: _62 = const 0_i32\n+80:61-82:10: @103[1]: _101 = const ()\">        }<span class=\"annotation\">\u2989@103</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"82:10-82:10: @104[0]: _101 = const ()\"><span class=\"annotation\">@104\u298a</span>\u2038<span class=\"annotation\">\u2989@104</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"83:9-83:23: @105[2]: _110 = CheckedSub(_62, const 5_i32)\n+83:9-83:23: @106[0]: _62 = move (_110.0: i32)\"><span class=\"annotation\">@105,106\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@105,106</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"85:9-85:15: @112[0]: _0 = const ()\"><span class=\"annotation\">@112\u298a</span>return<span class=\"annotation\">\u2989@112</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"85:9-85:15: @94[0]: _0 = const ()\"><span class=\"annotation\">@94\u298a</span>return<span class=\"annotation\">\u2989@94</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"87:2-87:2: @131.Return: return\"><span class=\"annotation\">@131\u298a</span>\u2038<span class=\"annotation\">\u2989@131</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"87:2-87:2: @111.Return: return\"><span class=\"annotation\">@111\u298a</span>\u2038<span class=\"annotation\">\u2989@111</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "421fe27825c3f06bc33e62ad6ebf0f74639ed2ae", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 30, "deletions": 38, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,83 +69,75 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 26\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+<div class=\"code\" style=\"counter-reset: line 26\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\n-34:8-34:15: @3[6]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+34:8-34:15: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\n-34:8-34:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+34:8-34:15: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\n-34:8-34:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+34:8-34:15: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\n-34:8-34:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+34:8-34:15: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\n-34:8-34:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+34:8-34:15: @3[5]: _6 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\n-34:8-34:15: @3[6]: FakeRead(ForMatchedPlace, _6)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+34:8-34:15: @3[5]: _6 = _1\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\n-34:8-34:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+34:8-34:15: @3[5]: _6 = _1\">    let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\n-34:8-34:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-35:23: @6[0]: _5 = const 10_i32\n-34:16-36:6: @6[1]: _0 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-35:23: @6[0]: _5 = const 10_i32\n-34:16-36:6: @6[1]: _0 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-35:23: @6[0]: _5 = const 10_i32\n-34:16-36:6: @6[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:6-36:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:2-37:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n+34:8-34:15: @3[5]: _6 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-35:23: @4[0]: _5 = const 10_i32\n+34:16-36:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-35:23: @4[0]: _5 = const 10_i32\n+34:16-36:6: @4[1]: _0 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-35:23: @4[0]: _5 = const 10_i32\n+34:16-36:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:6-36:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:2-37:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "ff3493c9f623b80ae4a456f80cf0f644dbebb94a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.unused_fn.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 30, "deletions": 38, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,83 +69,75 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\n-22:8-22:15: @3[6]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn unused_fn() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+22:8-22:15: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn unused_fn() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\n-22:8-22:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+22:8-22:15: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\n-22:8-22:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+22:8-22:15: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\n-22:8-22:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+22:8-22:15: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\n-22:8-22:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+22:8-22:15: @3[5]: _6 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\n-22:8-22:15: @3[6]: FakeRead(ForMatchedPlace, _6)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+22:8-22:15: @3[5]: _6 = _1\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\n-22:8-22:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+22:8-22:15: @3[5]: _6 = _1\">    let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\n-22:8-22:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @6[0]: _5 = const 10_i32\n-22:16-24:6: @6[1]: _0 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @6[0]: _5 = const 10_i32\n-22:16-24:6: @6[1]: _0 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @6[0]: _5 = const 10_i32\n-22:16-24:6: @6[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:6-24:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:2-25:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n+22:8-22:15: @3[5]: _6 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @4[0]: _5 = const 10_i32\n+22:16-24:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @4[0]: _5 = const 10_i32\n+22:16-24:6: @4[1]: _0 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @4[0]: _5 = const 10_i32\n+22:16-24:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:6-24:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:2-25:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "829113e8a71d58a4aad43d1655bd6df5f8eefde0", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 30, "deletions": 38, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,83 +69,75 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\n-10:8-10:15: @3[6]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn unused_pub_fn_not_in_library() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:8-10:15: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn unused_pub_fn_not_in_library() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\n-10:8-10:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:8-10:15: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\n-10:8-10:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:8-10:15: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\n-10:8-10:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:8-10:15: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\n-10:8-10:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:8-10:15: @3[5]: _6 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\n-10:8-10:15: @3[6]: FakeRead(ForMatchedPlace, _6)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:8-10:15: @3[5]: _6 = _1\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\n-10:8-10:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:8-10:15: @3[5]: _6 = _1\">    let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\n-10:8-10:15: @3[6]: FakeRead(ForMatchedPlace, _6)\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_i32\n-10:16-12:6: @6[1]: _0 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_i32\n-10:16-12:6: @6[1]: _0 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_i32\n-10:16-12:6: @6[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:2-13:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n+10:8-10:15: @3[5]: _6 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_i32\n+10:16-12:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_i32\n+10:16-12:6: @4[1]: _0 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_i32\n+10:16-12:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:2-13:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "3566912628a9e0a5b40f5e795fc76601c7be6be2", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.doctest/doctest.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 50, "deletions": 51, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -70,58 +70,57 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 72\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>fn main() <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"74:8-74:12: @0[1]: _1 = const true\n-74:8-74:12: @0[2]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:9-75:26: @5[0]: _2 = const ()\"><span class=\"annotation\">@5\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"75:9-75:26: @6[5]: _75 = const main::promoted[3]\n-75:9-75:26: @6[6]: _18 = &amp;(*_75)\n-75:9-75:26: @6[7]: _17 = &amp;(*_18)\n-75:9-75:26: @6[8]: _16 = move _17 as &amp;[&amp;str] (Pointer(Unsize))\n-75:9-75:26: @6[17]: _26 = &amp;(*_8)\n-75:9-75:26: @6[18]: _25 = &amp;_26\n-75:9-75:26: @6[21]: _28 = &amp;(*_9)\n-75:9-75:26: @6[22]: _27 = &amp;_28\n-75:9-75:26: @6[23]: _24 = (move _25, move _27)\n-75:9-75:26: @6[26]: FakeRead(ForMatchedPlace, _24)\n-75:9-75:26: @6[28]: _29 = (_24.0: &amp;&amp;i32)\n-75:9-75:26: @6[30]: _30 = (_24.1: &amp;&amp;i32)\n-75:9-75:26: @6[33]: _32 = &amp;(*_29)\n-75:9-75:26: @6[35]: _33 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-75:9-75:26: @6.Call: _31 = ArgumentV1::new::&lt;&amp;i32&gt;(move _32, move _33) -&gt; [return: bb7, unwind: bb17]\n-75:9-75:26: @7[4]: _35 = &amp;(*_30)\n-75:9-75:26: @7[6]: _36 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-75:9-75:26: @7.Call: _34 = ArgumentV1::new::&lt;&amp;i32&gt;(move _35, move _36) -&gt; [return: bb8, unwind: bb17]\n-75:9-75:26: @8[2]: _23 = [move _31, move _34]\n-75:9-75:26: @8[7]: _22 = &amp;_23\n-75:9-75:26: @8[8]: _21 = &amp;(*_22)\n-75:9-75:26: @8[9]: _20 = move _21 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-75:9-75:26: @8.Call: _15 = Arguments::new_v1(move _16, move _20) -&gt; [return: bb9, unwind: bb17]\n-75:9-75:26: @9.Call: core::panicking::panic_fmt(move _15) -&gt; bb17\"><span class=\"annotation\">@4,6,7,8,9\u298a</span>assert_eq!(1, 1);<span class=\"annotation\">\u2989@4,6,7,8,9</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:9-75:26: @5[0]: _2 = const ()\"><span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"74:8-74:12: @0[1]: _1 = const true\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:9-75:26: @4[0]: _2 = const ()\"><span class=\"annotation\">@4\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"75:9-75:26: @3[5]: _75 = const main::promoted[3]\n+75:9-75:26: @3[6]: _18 = &amp;(*_75)\n+75:9-75:26: @3[7]: _17 = &amp;(*_18)\n+75:9-75:26: @3[8]: _16 = move _17 as &amp;[&amp;str] (Pointer(Unsize))\n+75:9-75:26: @3[17]: _26 = &amp;(*_8)\n+75:9-75:26: @3[18]: _25 = &amp;_26\n+75:9-75:26: @3[21]: _28 = &amp;(*_9)\n+75:9-75:26: @3[22]: _27 = &amp;_28\n+75:9-75:26: @3[23]: _24 = (move _25, move _27)\n+75:9-75:26: @3[26]: FakeRead(ForMatchedPlace, _24)\n+75:9-75:26: @3[28]: _29 = (_24.0: &amp;&amp;i32)\n+75:9-75:26: @3[30]: _30 = (_24.1: &amp;&amp;i32)\n+75:9-75:26: @3[33]: _32 = &amp;(*_29)\n+75:9-75:26: @3[35]: _33 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+75:9-75:26: @3.Call: _31 = ArgumentV1::new::&lt;&amp;i32&gt;(move _32, move _33) -&gt; [return: bb5, unwind: bb14]\n+75:9-75:26: @5[4]: _35 = &amp;(*_30)\n+75:9-75:26: @5[6]: _36 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+75:9-75:26: @5.Call: _34 = ArgumentV1::new::&lt;&amp;i32&gt;(move _35, move _36) -&gt; [return: bb6, unwind: bb14]\n+75:9-75:26: @6[2]: _23 = [move _31, move _34]\n+75:9-75:26: @6[7]: _22 = &amp;_23\n+75:9-75:26: @6[8]: _21 = &amp;(*_22)\n+75:9-75:26: @6[9]: _20 = move _21 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+75:9-75:26: @6.Call: _15 = Arguments::new_v1(move _16, move _20) -&gt; [return: bb7, unwind: bb14]\n+75:9-75:26: @7.Call: core::panicking::panic_fmt(move _15) -&gt; bb14\"><span class=\"annotation\">@3,5,6,7\u298a</span>assert_eq!(1, 1);<span class=\"annotation\">\u2989@3,5,6,7</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:9-75:26: @4[0]: _2 = const ()\"><span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @11[0]: _37 = const ()\"><span class=\"annotation\">@11\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"77:9-77:26: @12[5]: _72 = const main::promoted[0]\n-77:9-77:26: @12[6]: _53 = &amp;(*_72)\n-77:9-77:26: @12[7]: _52 = &amp;(*_53)\n-77:9-77:26: @12[8]: _51 = move _52 as &amp;[&amp;str] (Pointer(Unsize))\n-77:9-77:26: @12[17]: _61 = &amp;(*_43)\n-77:9-77:26: @12[18]: _60 = &amp;_61\n-77:9-77:26: @12[21]: _63 = &amp;(*_44)\n-77:9-77:26: @12[22]: _62 = &amp;_63\n-77:9-77:26: @12[23]: _59 = (move _60, move _62)\n-77:9-77:26: @12[26]: FakeRead(ForMatchedPlace, _59)\n-77:9-77:26: @12[28]: _64 = (_59.0: &amp;&amp;i32)\n-77:9-77:26: @12[30]: _65 = (_59.1: &amp;&amp;i32)\n-77:9-77:26: @12[33]: _67 = &amp;(*_64)\n-77:9-77:26: @12[35]: _68 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-77:9-77:26: @12.Call: _66 = ArgumentV1::new::&lt;&amp;i32&gt;(move _67, move _68) -&gt; [return: bb13, unwind: bb17]\n-77:9-77:26: @13[4]: _70 = &amp;(*_65)\n-77:9-77:26: @13[6]: _71 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-77:9-77:26: @13.Call: _69 = ArgumentV1::new::&lt;&amp;i32&gt;(move _70, move _71) -&gt; [return: bb14, unwind: bb17]\n-77:9-77:26: @14[2]: _58 = [move _66, move _69]\n-77:9-77:26: @14[7]: _57 = &amp;_58\n-77:9-77:26: @14[8]: _56 = &amp;(*_57)\n-77:9-77:26: @14[9]: _55 = move _56 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-77:9-77:26: @14.Call: _50 = Arguments::new_v1(move _51, move _55) -&gt; [return: bb15, unwind: bb17]\n-77:9-77:26: @15.Call: core::panicking::panic_fmt(move _50) -&gt; bb17\"><span class=\"annotation\">@10,12,13,14,15\u298a</span>assert_eq!(1, 2);<span class=\"annotation\">\u2989@10,12,13,14,15</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @11[0]: _37 = const ()\"><span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @9[0]: _37 = const ()\"><span class=\"annotation\">@9\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"77:9-77:26: @8[5]: _72 = const main::promoted[0]\n+77:9-77:26: @8[6]: _53 = &amp;(*_72)\n+77:9-77:26: @8[7]: _52 = &amp;(*_53)\n+77:9-77:26: @8[8]: _51 = move _52 as &amp;[&amp;str] (Pointer(Unsize))\n+77:9-77:26: @8[17]: _61 = &amp;(*_43)\n+77:9-77:26: @8[18]: _60 = &amp;_61\n+77:9-77:26: @8[21]: _63 = &amp;(*_44)\n+77:9-77:26: @8[22]: _62 = &amp;_63\n+77:9-77:26: @8[23]: _59 = (move _60, move _62)\n+77:9-77:26: @8[26]: FakeRead(ForMatchedPlace, _59)\n+77:9-77:26: @8[28]: _64 = (_59.0: &amp;&amp;i32)\n+77:9-77:26: @8[30]: _65 = (_59.1: &amp;&amp;i32)\n+77:9-77:26: @8[33]: _67 = &amp;(*_64)\n+77:9-77:26: @8[35]: _68 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+77:9-77:26: @8.Call: _66 = ArgumentV1::new::&lt;&amp;i32&gt;(move _67, move _68) -&gt; [return: bb10, unwind: bb14]\n+77:9-77:26: @10[4]: _70 = &amp;(*_65)\n+77:9-77:26: @10[6]: _71 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+77:9-77:26: @10.Call: _69 = ArgumentV1::new::&lt;&amp;i32&gt;(move _70, move _71) -&gt; [return: bb11, unwind: bb14]\n+77:9-77:26: @11[2]: _58 = [move _66, move _69]\n+77:9-77:26: @11[7]: _57 = &amp;_58\n+77:9-77:26: @11[8]: _56 = &amp;(*_57)\n+77:9-77:26: @11[9]: _55 = move _56 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+77:9-77:26: @11.Call: _50 = Arguments::new_v1(move _51, move _55) -&gt; [return: bb12, unwind: bb14]\n+77:9-77:26: @12.Call: core::panicking::panic_fmt(move _50) -&gt; bb14\"><span class=\"annotation\">@8,10,11,12\u298a</span>assert_eq!(1, 2);<span class=\"annotation\">\u2989@8,10,11,12</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @9[0]: _37 = const ()\"><span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:2-79:2: @16.Return: return\"><span class=\"annotation\">@16\u298a</span>\u2038<span class=\"annotation\">\u2989@16</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:2-79:2: @13.Return: return\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "02c25cc904c4a2db4ac75fc60bd98b7f6f2c5890", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.doctest_crate/doctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 97, "deletions": 97, "changes": 194, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -71,103 +71,103 @@\n <body>\n <div class=\"code\" style=\"counter-reset: line 1\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>pub fn fn_run_in_doctests(conditional: usize) <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"3:11-3:22: @0[0]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>conditional<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        1 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:14-4:30: @7[0]: _0 = const ()\"><span class=\"annotation\">@7\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:14-4:30: @8[5]: _138 = const fn_run_in_doctests::promoted[0]\n-4:14-4:30: @8[6]: _17 = &amp;(*_138)\n-4:14-4:30: @8[7]: _16 = &amp;(*_17)\n-4:14-4:30: @8[8]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n-4:14-4:30: @8[17]: _25 = &amp;(*_7)\n-4:14-4:30: @8[18]: _24 = &amp;_25\n-4:14-4:30: @8[21]: _27 = &amp;(*_8)\n-4:14-4:30: @8[22]: _26 = &amp;_27\n-4:14-4:30: @8[23]: _23 = (move _24, move _26)\n-4:14-4:30: @8[26]: FakeRead(ForMatchedPlace, _23)\n-4:14-4:30: @8[28]: _28 = (_23.0: &amp;&amp;i32)\n-4:14-4:30: @8[30]: _29 = (_23.1: &amp;&amp;i32)\n-4:14-4:30: @8[33]: _31 = &amp;(*_28)\n-4:14-4:30: @8[35]: _32 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-4:14-4:30: @8.Call: _30 = ArgumentV1::new::&lt;&amp;i32&gt;(move _31, move _32) -&gt; [return: bb9, unwind: bb33]\n-4:14-4:30: @9[4]: _34 = &amp;(*_29)\n-4:14-4:30: @9[6]: _35 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-4:14-4:30: @9.Call: _33 = ArgumentV1::new::&lt;&amp;i32&gt;(move _34, move _35) -&gt; [return: bb10, unwind: bb33]\n-4:14-4:30: @10[2]: _22 = [move _30, move _33]\n-4:14-4:30: @10[7]: _21 = &amp;_22\n-4:14-4:30: @10[8]: _20 = &amp;(*_21)\n-4:14-4:30: @10[9]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-4:14-4:30: @10.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb11, unwind: bb33]\n-4:14-4:30: @11.Call: core::panicking::panic_fmt(move _14) -&gt; bb33\"><span class=\"annotation\">@6,8,9,10,11\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@6,8,9,10,11</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:14-4:30: @7[0]: _0 = const ()\"><span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this is run,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        2 =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @14[0]: _0 = const ()\"><span class=\"annotation\">@14\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"5:14-5:30: @15[5]: _141 = const fn_run_in_doctests::promoted[3]\n-5:14-5:30: @15[6]: _51 = &amp;(*_141)\n-5:14-5:30: @15[7]: _50 = &amp;(*_51)\n-5:14-5:30: @15[8]: _49 = move _50 as &amp;[&amp;str] (Pointer(Unsize))\n-5:14-5:30: @15[17]: _59 = &amp;(*_41)\n-5:14-5:30: @15[18]: _58 = &amp;_59\n-5:14-5:30: @15[21]: _61 = &amp;(*_42)\n-5:14-5:30: @15[22]: _60 = &amp;_61\n-5:14-5:30: @15[23]: _57 = (move _58, move _60)\n-5:14-5:30: @15[26]: FakeRead(ForMatchedPlace, _57)\n-5:14-5:30: @15[28]: _62 = (_57.0: &amp;&amp;i32)\n-5:14-5:30: @15[30]: _63 = (_57.1: &amp;&amp;i32)\n-5:14-5:30: @15[33]: _65 = &amp;(*_62)\n-5:14-5:30: @15[35]: _66 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-5:14-5:30: @15.Call: _64 = ArgumentV1::new::&lt;&amp;i32&gt;(move _65, move _66) -&gt; [return: bb16, unwind: bb33]\n-5:14-5:30: @16[4]: _68 = &amp;(*_63)\n-5:14-5:30: @16[6]: _69 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-5:14-5:30: @16.Call: _67 = ArgumentV1::new::&lt;&amp;i32&gt;(move _68, move _69) -&gt; [return: bb17, unwind: bb33]\n-5:14-5:30: @17[2]: _56 = [move _64, move _67]\n-5:14-5:30: @17[7]: _55 = &amp;_56\n-5:14-5:30: @17[8]: _54 = &amp;(*_55)\n-5:14-5:30: @17[9]: _53 = move _54 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-5:14-5:30: @17.Call: _48 = Arguments::new_v1(move _49, move _53) -&gt; [return: bb18, unwind: bb33]\n-5:14-5:30: @18.Call: core::panicking::panic_fmt(move _48) -&gt; bb33\"><span class=\"annotation\">@13,15,16,17,18\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@13,15,16,17,18</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @14[0]: _0 = const ()\"><span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        3 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @21[0]: _0 = const ()\"><span class=\"annotation\">@21\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"6:14-6:30: @22[5]: _144 = const fn_run_in_doctests::promoted[6]\n-6:14-6:30: @22[6]: _85 = &amp;(*_144)\n-6:14-6:30: @22[7]: _84 = &amp;(*_85)\n-6:14-6:30: @22[8]: _83 = move _84 as &amp;[&amp;str] (Pointer(Unsize))\n-6:14-6:30: @22[17]: _93 = &amp;(*_75)\n-6:14-6:30: @22[18]: _92 = &amp;_93\n-6:14-6:30: @22[21]: _95 = &amp;(*_76)\n-6:14-6:30: @22[22]: _94 = &amp;_95\n-6:14-6:30: @22[23]: _91 = (move _92, move _94)\n-6:14-6:30: @22[26]: FakeRead(ForMatchedPlace, _91)\n-6:14-6:30: @22[28]: _96 = (_91.0: &amp;&amp;i32)\n-6:14-6:30: @22[30]: _97 = (_91.1: &amp;&amp;i32)\n-6:14-6:30: @22[33]: _99 = &amp;(*_96)\n-6:14-6:30: @22[35]: _100 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-6:14-6:30: @22.Call: _98 = ArgumentV1::new::&lt;&amp;i32&gt;(move _99, move _100) -&gt; [return: bb23, unwind: bb33]\n-6:14-6:30: @23[4]: _102 = &amp;(*_97)\n-6:14-6:30: @23[6]: _103 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-6:14-6:30: @23.Call: _101 = ArgumentV1::new::&lt;&amp;i32&gt;(move _102, move _103) -&gt; [return: bb24, unwind: bb33]\n-6:14-6:30: @24[2]: _90 = [move _98, move _101]\n-6:14-6:30: @24[7]: _89 = &amp;_90\n-6:14-6:30: @24[8]: _88 = &amp;(*_89)\n-6:14-6:30: @24[9]: _87 = move _88 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:14-6:30: @24.Call: _82 = Arguments::new_v1(move _83, move _87) -&gt; [return: bb25, unwind: bb33]\n-6:14-6:30: @25.Call: core::panicking::panic_fmt(move _82) -&gt; bb33\"><span class=\"annotation\">@20,22,23,24,25\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@20,22,23,24,25</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @21[0]: _0 = const ()\"><span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\">, // and this too</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @27[0]: _0 = const ()\"><span class=\"annotation\">@27\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"7:14-7:30: @28[5]: _147 = const fn_run_in_doctests::promoted[9]\n-7:14-7:30: @28[6]: _119 = &amp;(*_147)\n-7:14-7:30: @28[7]: _118 = &amp;(*_119)\n-7:14-7:30: @28[8]: _117 = move _118 as &amp;[&amp;str] (Pointer(Unsize))\n-7:14-7:30: @28[17]: _127 = &amp;(*_109)\n-7:14-7:30: @28[18]: _126 = &amp;_127\n-7:14-7:30: @28[21]: _129 = &amp;(*_110)\n-7:14-7:30: @28[22]: _128 = &amp;_129\n-7:14-7:30: @28[23]: _125 = (move _126, move _128)\n-7:14-7:30: @28[26]: FakeRead(ForMatchedPlace, _125)\n-7:14-7:30: @28[28]: _130 = (_125.0: &amp;&amp;i32)\n-7:14-7:30: @28[30]: _131 = (_125.1: &amp;&amp;i32)\n-7:14-7:30: @28[33]: _133 = &amp;(*_130)\n-7:14-7:30: @28[35]: _134 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-7:14-7:30: @28.Call: _132 = ArgumentV1::new::&lt;&amp;i32&gt;(move _133, move _134) -&gt; [return: bb29, unwind: bb33]\n-7:14-7:30: @29[4]: _136 = &amp;(*_131)\n-7:14-7:30: @29[6]: _137 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-7:14-7:30: @29.Call: _135 = ArgumentV1::new::&lt;&amp;i32&gt;(move _136, move _137) -&gt; [return: bb30, unwind: bb33]\n-7:14-7:30: @30[2]: _124 = [move _132, move _135]\n-7:14-7:30: @30[7]: _123 = &amp;_124\n-7:14-7:30: @30[8]: _122 = &amp;(*_123)\n-7:14-7:30: @30[9]: _121 = move _122 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-7:14-7:30: @30.Call: _116 = Arguments::new_v1(move _117, move _121) -&gt; [return: bb31, unwind: bb33]\n-7:14-7:30: @31.Call: core::panicking::panic_fmt(move _116) -&gt; bb33\"><span class=\"annotation\">@26,28,29,30,31\u298a</span>assert_eq!(1, 2)<span class=\"annotation\">\u2989@26,28,29,30,31</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @27[0]: _0 = const ()\"><span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\">, // however this is not</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        1 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:14-4:30: @7[0]: _0 = const ()\"><span class=\"annotation\">@7\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:14-4:30: @6[5]: _138 = const fn_run_in_doctests::promoted[0]\n+4:14-4:30: @6[6]: _17 = &amp;(*_138)\n+4:14-4:30: @6[7]: _16 = &amp;(*_17)\n+4:14-4:30: @6[8]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n+4:14-4:30: @6[17]: _25 = &amp;(*_7)\n+4:14-4:30: @6[18]: _24 = &amp;_25\n+4:14-4:30: @6[21]: _27 = &amp;(*_8)\n+4:14-4:30: @6[22]: _26 = &amp;_27\n+4:14-4:30: @6[23]: _23 = (move _24, move _26)\n+4:14-4:30: @6[26]: FakeRead(ForMatchedPlace, _23)\n+4:14-4:30: @6[28]: _28 = (_23.0: &amp;&amp;i32)\n+4:14-4:30: @6[30]: _29 = (_23.1: &amp;&amp;i32)\n+4:14-4:30: @6[33]: _31 = &amp;(*_28)\n+4:14-4:30: @6[35]: _32 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+4:14-4:30: @6.Call: _30 = ArgumentV1::new::&lt;&amp;i32&gt;(move _31, move _32) -&gt; [return: bb8, unwind: bb29]\n+4:14-4:30: @8[4]: _34 = &amp;(*_29)\n+4:14-4:30: @8[6]: _35 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+4:14-4:30: @8.Call: _33 = ArgumentV1::new::&lt;&amp;i32&gt;(move _34, move _35) -&gt; [return: bb9, unwind: bb29]\n+4:14-4:30: @9[2]: _22 = [move _30, move _33]\n+4:14-4:30: @9[7]: _21 = &amp;_22\n+4:14-4:30: @9[8]: _20 = &amp;(*_21)\n+4:14-4:30: @9[9]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+4:14-4:30: @9.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb10, unwind: bb29]\n+4:14-4:30: @10.Call: core::panicking::panic_fmt(move _14) -&gt; bb29\"><span class=\"annotation\">@6,8,9,10\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@6,8,9,10</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:14-4:30: @7[0]: _0 = const ()\"><span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this is run,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        2 =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @13[0]: _0 = const ()\"><span class=\"annotation\">@13\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"5:14-5:30: @12[5]: _141 = const fn_run_in_doctests::promoted[3]\n+5:14-5:30: @12[6]: _51 = &amp;(*_141)\n+5:14-5:30: @12[7]: _50 = &amp;(*_51)\n+5:14-5:30: @12[8]: _49 = move _50 as &amp;[&amp;str] (Pointer(Unsize))\n+5:14-5:30: @12[17]: _59 = &amp;(*_41)\n+5:14-5:30: @12[18]: _58 = &amp;_59\n+5:14-5:30: @12[21]: _61 = &amp;(*_42)\n+5:14-5:30: @12[22]: _60 = &amp;_61\n+5:14-5:30: @12[23]: _57 = (move _58, move _60)\n+5:14-5:30: @12[26]: FakeRead(ForMatchedPlace, _57)\n+5:14-5:30: @12[28]: _62 = (_57.0: &amp;&amp;i32)\n+5:14-5:30: @12[30]: _63 = (_57.1: &amp;&amp;i32)\n+5:14-5:30: @12[33]: _65 = &amp;(*_62)\n+5:14-5:30: @12[35]: _66 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+5:14-5:30: @12.Call: _64 = ArgumentV1::new::&lt;&amp;i32&gt;(move _65, move _66) -&gt; [return: bb14, unwind: bb29]\n+5:14-5:30: @14[4]: _68 = &amp;(*_63)\n+5:14-5:30: @14[6]: _69 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+5:14-5:30: @14.Call: _67 = ArgumentV1::new::&lt;&amp;i32&gt;(move _68, move _69) -&gt; [return: bb15, unwind: bb29]\n+5:14-5:30: @15[2]: _56 = [move _64, move _67]\n+5:14-5:30: @15[7]: _55 = &amp;_56\n+5:14-5:30: @15[8]: _54 = &amp;(*_55)\n+5:14-5:30: @15[9]: _53 = move _54 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+5:14-5:30: @15.Call: _48 = Arguments::new_v1(move _49, move _53) -&gt; [return: bb16, unwind: bb29]\n+5:14-5:30: @16.Call: core::panicking::panic_fmt(move _48) -&gt; bb29\"><span class=\"annotation\">@12,14,15,16\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@12,14,15,16</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @13[0]: _0 = const ()\"><span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        3 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @19[0]: _0 = const ()\"><span class=\"annotation\">@19\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"6:14-6:30: @18[5]: _144 = const fn_run_in_doctests::promoted[6]\n+6:14-6:30: @18[6]: _85 = &amp;(*_144)\n+6:14-6:30: @18[7]: _84 = &amp;(*_85)\n+6:14-6:30: @18[8]: _83 = move _84 as &amp;[&amp;str] (Pointer(Unsize))\n+6:14-6:30: @18[17]: _93 = &amp;(*_75)\n+6:14-6:30: @18[18]: _92 = &amp;_93\n+6:14-6:30: @18[21]: _95 = &amp;(*_76)\n+6:14-6:30: @18[22]: _94 = &amp;_95\n+6:14-6:30: @18[23]: _91 = (move _92, move _94)\n+6:14-6:30: @18[26]: FakeRead(ForMatchedPlace, _91)\n+6:14-6:30: @18[28]: _96 = (_91.0: &amp;&amp;i32)\n+6:14-6:30: @18[30]: _97 = (_91.1: &amp;&amp;i32)\n+6:14-6:30: @18[33]: _99 = &amp;(*_96)\n+6:14-6:30: @18[35]: _100 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+6:14-6:30: @18.Call: _98 = ArgumentV1::new::&lt;&amp;i32&gt;(move _99, move _100) -&gt; [return: bb20, unwind: bb29]\n+6:14-6:30: @20[4]: _102 = &amp;(*_97)\n+6:14-6:30: @20[6]: _103 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+6:14-6:30: @20.Call: _101 = ArgumentV1::new::&lt;&amp;i32&gt;(move _102, move _103) -&gt; [return: bb21, unwind: bb29]\n+6:14-6:30: @21[2]: _90 = [move _98, move _101]\n+6:14-6:30: @21[7]: _89 = &amp;_90\n+6:14-6:30: @21[8]: _88 = &amp;(*_89)\n+6:14-6:30: @21[9]: _87 = move _88 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:14-6:30: @21.Call: _82 = Arguments::new_v1(move _83, move _87) -&gt; [return: bb22, unwind: bb29]\n+6:14-6:30: @22.Call: core::panicking::panic_fmt(move _82) -&gt; bb29\"><span class=\"annotation\">@18,20,21,22\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@18,20,21,22</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @19[0]: _0 = const ()\"><span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\">, // and this too</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @24[0]: _0 = const ()\"><span class=\"annotation\">@24\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"7:14-7:30: @23[5]: _147 = const fn_run_in_doctests::promoted[9]\n+7:14-7:30: @23[6]: _119 = &amp;(*_147)\n+7:14-7:30: @23[7]: _118 = &amp;(*_119)\n+7:14-7:30: @23[8]: _117 = move _118 as &amp;[&amp;str] (Pointer(Unsize))\n+7:14-7:30: @23[17]: _127 = &amp;(*_109)\n+7:14-7:30: @23[18]: _126 = &amp;_127\n+7:14-7:30: @23[21]: _129 = &amp;(*_110)\n+7:14-7:30: @23[22]: _128 = &amp;_129\n+7:14-7:30: @23[23]: _125 = (move _126, move _128)\n+7:14-7:30: @23[26]: FakeRead(ForMatchedPlace, _125)\n+7:14-7:30: @23[28]: _130 = (_125.0: &amp;&amp;i32)\n+7:14-7:30: @23[30]: _131 = (_125.1: &amp;&amp;i32)\n+7:14-7:30: @23[33]: _133 = &amp;(*_130)\n+7:14-7:30: @23[35]: _134 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+7:14-7:30: @23.Call: _132 = ArgumentV1::new::&lt;&amp;i32&gt;(move _133, move _134) -&gt; [return: bb25, unwind: bb29]\n+7:14-7:30: @25[4]: _136 = &amp;(*_131)\n+7:14-7:30: @25[6]: _137 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+7:14-7:30: @25.Call: _135 = ArgumentV1::new::&lt;&amp;i32&gt;(move _136, move _137) -&gt; [return: bb26, unwind: bb29]\n+7:14-7:30: @26[2]: _124 = [move _132, move _135]\n+7:14-7:30: @26[7]: _123 = &amp;_124\n+7:14-7:30: @26[8]: _122 = &amp;(*_123)\n+7:14-7:30: @26[9]: _121 = move _122 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+7:14-7:30: @26.Call: _116 = Arguments::new_v1(move _117, move _121) -&gt; [return: bb27, unwind: bb29]\n+7:14-7:30: @27.Call: core::panicking::panic_fmt(move _116) -&gt; bb29\"><span class=\"annotation\">@23,25,26,27\u298a</span>assert_eq!(1, 2)<span class=\"annotation\">\u2989@23,25,26,27</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @24[0]: _0 = const ()\"><span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\">, // however this is not</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:2-9:2: @32.Return: return\"><span class=\"annotation\">@32\u298a</span>\u2038<span class=\"annotation\">\u2989@32</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:2-9:2: @28.Return: return\"><span class=\"annotation\">@28\u298a</span>\u2038<span class=\"annotation\">\u2989@28</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "3b5d1e2cdac281f696d7064be7e57ff031d14d20", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 45, "deletions": 51, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -73,86 +73,80 @@\n 15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n 17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n 17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\n-19:8-19:12: @0[9]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+19:8-19:12: @0[8]: _4 = const true\"><span class=\"annotation\">@0\u298a</span>fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n 15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n 17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n 17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\n-19:8-19:12: @0[9]: FakeRead(ForMatchedPlace, _4)\">    let _firecracker = Firework { strength: 1 };</span></span>\n+19:8-19:12: @0[8]: _4 = const true\">    let _firecracker = Firework { strength: 1 };</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n 15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n 17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n 17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\n-19:8-19:12: @0[9]: FakeRead(ForMatchedPlace, _4)\"></span></span>\n+19:8-19:12: @0[8]: _4 = const true\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n 15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n 17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n 17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\n-19:8-19:12: @0[9]: FakeRead(ForMatchedPlace, _4)\">    let _tnt = Firework { strength: 100 };</span></span>\n+19:8-19:12: @0[8]: _4 = const true\">    let _tnt = Firework { strength: 100 };</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n 15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n 17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n 17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\n-19:8-19:12: @0[9]: FakeRead(ForMatchedPlace, _4)\"></span></span>\n+19:8-19:12: @0[8]: _4 = const true\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n 15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n 17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n 17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\n-19:8-19:12: @0[9]: FakeRead(ForMatchedPlace, _4)\">    if true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @3[6]: _21 = const main::promoted[1]\n-20:18-20:41: @3[7]: _11 = &amp;(*_21)\n-20:18-20:41: @3[8]: _10 = &amp;(*_11)\n-20:18-20:41: @3[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-20:9-20:43: @3[15]: _17 = ()\n-20:9-20:43: @3[16]: FakeRead(ForMatchedPlace, _17)\n-20:9-20:43: @3[17]: _20 = const main::promoted[0]\n-20:9-20:43: @3[18]: _15 = &amp;(*_20)\n-20:9-20:43: @3[19]: _14 = &amp;(*_15)\n-20:9-20:43: @3[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:9-20:43: @3.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb4, unwind: bb12]\n-20:9-20:43: @4.Call: _7 = _print(move _8) -&gt; [return: bb5, unwind: bb12]\n-20:9-20:43: @5[5]: _6 = const ()\n-21:16-21:22: @5[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@1,3,4,5,9,10\u298a</span>println!(\"Exiting with error...\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @3[6]: _21 = const main::promoted[1]\n-20:18-20:41: @3[7]: _11 = &amp;(*_21)\n-20:18-20:41: @3[8]: _10 = &amp;(*_11)\n-20:18-20:41: @3[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-20:9-20:43: @3[15]: _17 = ()\n-20:9-20:43: @3[16]: FakeRead(ForMatchedPlace, _17)\n-20:9-20:43: @3[17]: _20 = const main::promoted[0]\n-20:9-20:43: @3[18]: _15 = &amp;(*_20)\n-20:9-20:43: @3[19]: _14 = &amp;(*_15)\n-20:9-20:43: @3[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:9-20:43: @3.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb4, unwind: bb12]\n-20:9-20:43: @4.Call: _7 = _print(move _8) -&gt; [return: bb5, unwind: bb12]\n-20:9-20:43: @5[5]: _6 = const ()\n-21:16-21:22: @5[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@1,3,4,5,9,10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+19:8-19:12: @0[8]: _4 = const true\">    if true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @1[6]: _21 = const main::promoted[1]\n+20:18-20:41: @1[7]: _11 = &amp;(*_21)\n+20:18-20:41: @1[8]: _10 = &amp;(*_11)\n+20:18-20:41: @1[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+20:9-20:43: @1[15]: _17 = ()\n+20:9-20:43: @1[16]: FakeRead(ForMatchedPlace, _17)\n+20:9-20:43: @1[17]: _20 = const main::promoted[0]\n+20:9-20:43: @1[18]: _15 = &amp;(*_20)\n+20:9-20:43: @1[19]: _14 = &amp;(*_15)\n+20:9-20:43: @1[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:9-20:43: @1.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb11]\n+20:9-20:43: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb11]\n+20:9-20:43: @4[5]: _6 = const ()\n+21:16-21:22: @4[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@1,3,4,8,9\u298a</span>println!(\"Exiting with error...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @1[6]: _21 = const main::promoted[1]\n+20:18-20:41: @1[7]: _11 = &amp;(*_21)\n+20:18-20:41: @1[8]: _10 = &amp;(*_11)\n+20:18-20:41: @1[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+20:9-20:43: @1[15]: _17 = ()\n+20:9-20:43: @1[16]: FakeRead(ForMatchedPlace, _17)\n+20:9-20:43: @1[17]: _20 = const main::promoted[0]\n+20:9-20:43: @1[18]: _15 = &amp;(*_20)\n+20:9-20:43: @1[19]: _14 = &amp;(*_15)\n+20:9-20:43: @1[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:9-20:43: @1.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb11]\n+20:9-20:43: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb11]\n+20:9-20:43: @4[5]: _6 = const ()\n+21:16-21:22: @4[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@1,3,4,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n 24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @6[2]: _19 = ()\n-26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"><span class=\"annotation\">@2,6,7,8\u298a</span></span></span>\n+26:8-26:10: @5[2]: _19 = ()\n+26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"><span class=\"annotation\">@2,5,6,7\u298a</span></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n 24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @6[2]: _19 = ()\n-26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n+26:8-26:10: @5[2]: _19 = ()\n+26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n 24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @6[2]: _19 = ()\n-26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    let _ = Firework { strength: 1000 };</span></span>\n+26:8-26:10: @5[2]: _19 = ()\n+26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    let _ = Firework { strength: 1000 };</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n 24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @6[2]: _19 = ()\n-26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n+26:8-26:10: @5[2]: _19 = ()\n+26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n 24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @6[2]: _19 = ()\n-26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    Ok(())<span class=\"annotation\">\u2989@2,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n+26:8-26:10: @5[2]: _19 = ()\n+26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    Ok(())<span class=\"annotation\">\u2989@2,5,6,7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @10.Return: return\"><span class=\"annotation\">@10\u298a</span>\u2038<span class=\"annotation\">\u2989@10</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "0373b38e1b11fa429d10980fa51a7f985ef38336", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 83, "deletions": 92, "changes": 175, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -72,175 +72,166 @@\n <div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n 23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n 24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n 26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n 26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n 27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n 28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\n-30:8-30:12: @3[4]: _10 = const true\n-30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n+30:8-30:12: @3[4]: _10 = const true\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n 23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n 24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n 26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n 26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n 27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n 28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\n-30:8-30:12: @3[4]: _10 = const true\n-30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\">    let mut firecracker = Firework { strength: 1 };</span></span>\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n+30:8-30:12: @3[4]: _10 = const true\">    let mut firecracker = Firework { strength: 1 };</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n 23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n 24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n 26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n 26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n 27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n 28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\n-30:8-30:12: @3[4]: _10 = const true\n-30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\">    firecracker.set_strength(2);</span></span>\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n+30:8-30:12: @3[4]: _10 = const true\">    firecracker.set_strength(2);</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n 23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n 24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n 26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n 26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n 27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n 28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\n-30:8-30:12: @3[4]: _10 = const true\n-30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\"></span></span>\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n+30:8-30:12: @3[4]: _10 = const true\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n 23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n 24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n 26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n 26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n 27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n 28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\n-30:8-30:12: @3[4]: _10 = const true\n-30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\">    let mut tnt = Firework { strength: 100.1 };</span></span>\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n+30:8-30:12: @3[4]: _10 = const true\">    let mut tnt = Firework { strength: 100.1 };</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n 23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n 24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n 26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n 26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n 27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n 28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\n-30:8-30:12: @3[4]: _10 = const true\n-30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\">    tnt.set_strength(200.1);</span></span>\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n+30:8-30:12: @3[4]: _10 = const true\">    tnt.set_strength(200.1);</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n 23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n 24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n 26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n 26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n 27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n 28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\n-30:8-30:12: @3[4]: _10 = const true\n-30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\">    tnt.set_strength(300.3);</span></span>\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n+30:8-30:12: @3[4]: _10 = const true\">    tnt.set_strength(300.3);</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n 23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n 24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n 26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n 26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n 27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n 28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\n-30:8-30:12: @3[4]: _10 = const true\n-30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\"></span></span>\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n+30:8-30:12: @3[4]: _10 = const true\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n 23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n 24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n 26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n 26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n 27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n 28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\n-30:8-30:12: @3[4]: _10 = const true\n-30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\">    if true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @6[6]: _27 = const main::promoted[1]\n-31:18-31:41: @6[7]: _17 = &amp;(*_27)\n-31:18-31:41: @6[8]: _16 = &amp;(*_17)\n-31:18-31:41: @6[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n-31:9-31:43: @6[15]: _23 = ()\n-31:9-31:43: @6[16]: FakeRead(ForMatchedPlace, _23)\n-31:9-31:43: @6[17]: _26 = const main::promoted[0]\n-31:9-31:43: @6[18]: _21 = &amp;(*_26)\n-31:9-31:43: @6[19]: _20 = &amp;(*_21)\n-31:9-31:43: @6[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-31:9-31:43: @6.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb7, unwind: bb15]\n-31:9-31:43: @7.Call: _13 = _print(move _14) -&gt; [return: bb8, unwind: bb15]\n-31:9-31:43: @8[5]: _12 = const ()\n-32:16-32:22: @8[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@4,6,7,8,12,13\u298a</span>println!(\"Exiting with error...\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @6[6]: _27 = const main::promoted[1]\n-31:18-31:41: @6[7]: _17 = &amp;(*_27)\n-31:18-31:41: @6[8]: _16 = &amp;(*_17)\n-31:18-31:41: @6[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n-31:9-31:43: @6[15]: _23 = ()\n-31:9-31:43: @6[16]: FakeRead(ForMatchedPlace, _23)\n-31:9-31:43: @6[17]: _26 = const main::promoted[0]\n-31:9-31:43: @6[18]: _21 = &amp;(*_26)\n-31:9-31:43: @6[19]: _20 = &amp;(*_21)\n-31:9-31:43: @6[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-31:9-31:43: @6.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb7, unwind: bb15]\n-31:9-31:43: @7.Call: _13 = _print(move _14) -&gt; [return: bb8, unwind: bb15]\n-31:9-31:43: @8[5]: _12 = const ()\n-32:16-32:22: @8[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@4,6,7,8,12,13</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n+30:8-30:12: @3[4]: _10 = const true\">    if true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @4[6]: _27 = const main::promoted[1]\n+31:18-31:41: @4[7]: _17 = &amp;(*_27)\n+31:18-31:41: @4[8]: _16 = &amp;(*_17)\n+31:18-31:41: @4[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n+31:9-31:43: @4[15]: _23 = ()\n+31:9-31:43: @4[16]: FakeRead(ForMatchedPlace, _23)\n+31:9-31:43: @4[17]: _26 = const main::promoted[0]\n+31:9-31:43: @4[18]: _21 = &amp;(*_26)\n+31:9-31:43: @4[19]: _20 = &amp;(*_21)\n+31:9-31:43: @4[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+31:9-31:43: @4.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb6, unwind: bb14]\n+31:9-31:43: @6.Call: _13 = _print(move _14) -&gt; [return: bb7, unwind: bb14]\n+31:9-31:43: @7[5]: _12 = const ()\n+32:16-32:22: @7[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@4,6,7,11,12\u298a</span>println!(\"Exiting with error...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @4[6]: _27 = const main::promoted[1]\n+31:18-31:41: @4[7]: _17 = &amp;(*_27)\n+31:18-31:41: @4[8]: _16 = &amp;(*_17)\n+31:18-31:41: @4[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n+31:9-31:43: @4[15]: _23 = ()\n+31:9-31:43: @4[16]: FakeRead(ForMatchedPlace, _23)\n+31:9-31:43: @4[17]: _26 = const main::promoted[0]\n+31:9-31:43: @4[18]: _21 = &amp;(*_26)\n+31:9-31:43: @4[19]: _20 = &amp;(*_21)\n+31:9-31:43: @4[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+31:9-31:43: @4.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb6, unwind: bb14]\n+31:9-31:43: @6.Call: _13 = _print(move _14) -&gt; [return: bb7, unwind: bb14]\n+31:9-31:43: @7[5]: _12 = const ()\n+32:16-32:22: @7[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@4,6,7,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @9[2]: _25 = ()\n-41:5-41:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"><span class=\"annotation\">@5,9,10,11\u298a</span> // The remaining lines below have no coverage because `if true` (with the constant literal</span></span>\n+41:8-41:10: @8[2]: _25 = ()\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"><span class=\"annotation\">@5,8,9,10\u298a</span> // The remaining lines below have no coverage because `if true` (with the constant literal</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @9[2]: _25 = ()\n-41:5-41:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // `true`) is guaranteed to execute the `then` block, which is also guaranteed to `return`.</span></span>\n+41:8-41:10: @8[2]: _25 = ()\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // `true`) is guaranteed to execute the `then` block, which is also guaranteed to `return`.</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @9[2]: _25 = ()\n-41:5-41:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // Thankfully, in the normal case, conditions are not guaranteed ahead of time, and as shown</span></span>\n+41:8-41:10: @8[2]: _25 = ()\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // Thankfully, in the normal case, conditions are not guaranteed ahead of time, and as shown</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @9[2]: _25 = ()\n-41:5-41:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // in other tests, the lines below would have coverage (which would show they had `0`</span></span>\n+41:8-41:10: @8[2]: _25 = ()\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // in other tests, the lines below would have coverage (which would show they had `0`</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @9[2]: _25 = ()\n-41:5-41:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // executions, assuming the condition still evaluated to `true`).</span></span>\n+41:8-41:10: @8[2]: _25 = ()\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // executions, assuming the condition still evaluated to `true`).</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @9[2]: _25 = ()\n-41:5-41:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n+41:8-41:10: @8[2]: _25 = ()\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @9[2]: _25 = ()\n-41:5-41:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    let _ = Firework { strength: 1000 };</span></span>\n+41:8-41:10: @8[2]: _25 = ()\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    let _ = Firework { strength: 1000 };</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @9[2]: _25 = ()\n-41:5-41:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n+41:8-41:10: @8[2]: _25 = ()\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @9[2]: _25 = ()\n-41:5-41:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    Ok(())<span class=\"annotation\">\u2989@5,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:2-42:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n+41:8-41:10: @8[2]: _25 = ()\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    Ok(())<span class=\"annotation\">\u2989@5,8,9,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:2-42:2: @13.Return: return\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "dd9ba4a190cd8129f9f4d007e81c8793bee25158", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 70, "deletions": 89, "changes": 159, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,189 +69,170 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    let</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    let</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    is_true</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    is_true</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">        std::env::args().len()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">        std::env::args().len()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    ==</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    ==</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">        1</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">        1</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    let</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    let</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">        mut</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">        mut</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">        0</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">        0</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">    if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+21:9-21:16: @3[5]: _6 = _1\">    if</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\n-21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:6-27:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:2-28:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n+21:9-21:16: @3[5]: _6 = _1\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n+22:5-27:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n+22:5-27:6: @4[1]: _0 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n+22:5-27:6: @4[1]: _0 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n+22:5-27:6: @4[1]: _0 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n+22:5-27:6: @4[1]: _0 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n+22:5-27:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:6-27:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:2-28:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "b642be382cbc484eeb0f1bb964b2e77a6c6148ec", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 65, "deletions": 75, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,99 +69,90 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+11:9-11:16: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+11:9-11:16: @3[6]: _7 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+11:9-11:16: @3[6]: _7 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+11:9-11:16: @3[6]: _7 = _1\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+11:9-11:16: @3[6]: _7 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+11:9-11:16: @3[6]: _7 = _1\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+11:9-11:16: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+11:9-11:16: @3[6]: _7 = _1\">    if</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\n-11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n-12:5-17:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+11:9-11:16: @3[6]: _7 = _1\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n+12:5-17:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n+12:5-17:6: @4[1]: _6 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n+12:5-17:6: @4[1]: _6 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n+12:5-17:6: @4[1]: _6 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n+12:5-17:6: @4[1]: _6 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n+12:5-17:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else // Note coverage region difference without semicolon</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n@@ -173,33 +164,32 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:16: @7[3]: _8 = _1\n-26:9-26:16: @7[4]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\"><span class=\"annotation\">@8,10\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n-27:5-32:6: @10[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:16: @6[3]: _8 = _1\"><span class=\"annotation\">@6\u298a</span>is_true<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n+27:5-32:6: @7[1]: _0 = const ()\"><span class=\"annotation\">@7\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n+27:5-32:6: @7[1]: _0 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n+27:5-32:6: @7[1]: _0 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n+27:5-32:6: @7[1]: _0 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n+27:5-32:6: @7[1]: _0 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n+27:5-32:6: @7[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\"><span class=\"annotation\">@9\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">            100</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:2-40:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n+34:5-39:6: @8[1]: _0 = const ()\"><span class=\"annotation\">@8\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n+34:5-39:6: @8[1]: _0 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n+34:5-39:6: @8[1]: _0 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n+34:5-39:6: @8[1]: _0 = const ()\">            100</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n+34:5-39:6: @8[1]: _0 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n+34:5-39:6: @8[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:2-40:2: @9.Return: return\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "d21710b7240d3af7bce3c0e2a153bb743ec0476a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 56, "deletions": 61, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -73,47 +73,43 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_u32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+10:8-10:15: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_u32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+10:8-10:15: @3[6]: _7 = _1\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_u32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+10:8-10:15: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_u32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+10:8-10:15: @3[6]: _7 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_u32\n+10:16-12:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_u32\n+10:16-12:6: @4[1]: _6 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_u32\n+10:16-12:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    mod in_mod {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        const IN_MOD_CONST: u32 = 1000;</span></span>\n@@ -149,46 +145,45 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    type InType = String;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:8-48:15: @7[4]: _9 = _1\n-48:8-48:15: @7[5]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n-49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\"><span class=\"annotation\">@8,10,11\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n-49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\">        in_func(countdown);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n-49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\">    }<span class=\"annotation\">\u2989@8,10,11</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:6-50:6: @9[0]: _8 = const ()\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:8-48:15: @6[4]: _9 = _1\"><span class=\"annotation\">@6\u298a</span>is_true<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @7[2]: _11 = _5\n+49:9-49:27: @7.Call: _10 = in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n+48:16-50:6: @9[2]: _8 = const ()\"><span class=\"annotation\">@7,9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @7[2]: _11 = _5\n+49:9-49:27: @7.Call: _10 = in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n+48:16-50:6: @9[2]: _8 = const ()\">        in_func(countdown);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @7[2]: _11 = _5\n+49:9-49:27: @7.Call: _10 = in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n+48:16-50:6: @9[2]: _8 = const ()\">    }<span class=\"annotation\">\u2989@7,9</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:6-50:6: @8[0]: _8 = const ()\"><span class=\"annotation\">@8\u298a</span>\u2038<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\"><span class=\"annotation\">@12,13\u298a</span>mut val = InStruct {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\">        in_struct_field: 101,</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\">    };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\">    val.default_trait_func();</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @12[7]: _14 = &amp;mut _12\n-56:5-56:29: @12.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n-57:2-57:2: @13.Return: return\">}<span class=\"annotation\">\u2989@12,13</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @10[7]: _14 = &amp;mut _12\n+56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+57:2-57:2: @11.Return: return\"><span class=\"annotation\">@10,11\u298a</span>mut val = InStruct {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @10[7]: _14 = &amp;mut _12\n+56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+57:2-57:2: @11.Return: return\">        in_struct_field: 101,</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @10[7]: _14 = &amp;mut _12\n+56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+57:2-57:2: @11.Return: return\">    };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @10[7]: _14 = &amp;mut _12\n+56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+57:2-57:2: @11.Return: return\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @10[7]: _14 = &amp;mut _12\n+56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+57:2-57:2: @11.Return: return\">    val.default_trait_func();</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @10[7]: _14 = &amp;mut _12\n+56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+57:2-57:2: @11.Return: return\">}<span class=\"annotation\">\u2989@10,11</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "0cfe2119fbc8abaa290acccd00a843804866e52a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 115, "deletions": 128, "changes": 243, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,204 +69,191 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\n-10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+10:8-10:15: @3[12]: _10 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\n-10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+10:8-10:15: @3[12]: _10 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\n-10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+10:8-10:15: @3[12]: _10 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\n-10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+10:8-10:15: @3[12]: _10 = _1\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\n-10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+10:8-10:15: @3[12]: _10 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\n-10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+10:8-10:15: @3[12]: _10 = _1\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\n-10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\">    let (mut a, mut b, mut c) = (0, 0, 0);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+10:8-10:15: @3[12]: _10 = _1\">    let (mut a, mut b, mut c) = (0, 0, 0);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\n-10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n-12:9-12:15: @6[1]: _6 = const 10_i32\n-13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n-12:9-12:15: @6[1]: _6 = const 10_i32\n-13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">        a = 1;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n-12:9-12:15: @6[1]: _6 = const 10_i32\n-13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">        b = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n-12:9-12:15: @6[1]: _6 = const 10_i32\n-13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">        c = 100;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n-12:9-12:15: @6[1]: _6 = const 10_i32\n-13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:6-14:6: @5[0]: _9 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+10:8-10:15: @3[12]: _10 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @4[0]: _5 = const 1_i32\n+12:9-12:15: @4[1]: _6 = const 10_i32\n+13:9-13:16: @4[2]: _7 = const 100_i32\n+10:16-14:6: @4[3]: _9 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @4[0]: _5 = const 1_i32\n+12:9-12:15: @4[1]: _6 = const 10_i32\n+13:9-13:16: @4[2]: _7 = const 100_i32\n+10:16-14:6: @4[3]: _9 = const ()\">        a = 1;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @4[0]: _5 = const 1_i32\n+12:9-12:15: @4[1]: _6 = const 10_i32\n+13:9-13:16: @4[2]: _7 = const 100_i32\n+10:16-14:6: @4[3]: _9 = const ()\">        b = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @4[0]: _5 = const 1_i32\n+12:9-12:15: @4[1]: _6 = const 10_i32\n+13:9-13:16: @4[2]: _7 = const 100_i32\n+10:16-14:6: @4[3]: _9 = const ()\">        c = 100;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @4[0]: _5 = const 1_i32\n+12:9-12:15: @4[1]: _6 = const 10_i32\n+13:9-13:16: @4[2]: _7 = const 100_i32\n+10:16-14:6: @4[3]: _9 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:6-14:6: @5[0]: _9 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:9-16:17: @11[2]: FakeRead(ForLet, _11)\"><span class=\"annotation\">@11\u298a</span>somebool<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:9-16:17: @10[2]: FakeRead(ForLet, _11)\"><span class=\"annotation\">@10\u298a</span>somebool<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:13-18:14: @7[5]: _13 = _5\n-18:17-18:18: @7[7]: _14 = _6\n-18:13-18:18: @7[8]: _12 = Lt(move _13, move _14)\"><span class=\"annotation\">@7\u298a</span>a &lt; b<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:13-18:14: @6[5]: _13 = _5\n+18:17-18:18: @6[7]: _14 = _6\n+18:13-18:18: @6[8]: _12 = Lt(move _13, move _14)\"><span class=\"annotation\">@6\u298a</span>a &lt; b<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @10[2]: _16 = _6\n-20:17-20:18: @10[4]: _17 = _7\n-20:13-20:18: @10[5]: _15 = Lt(move _16, move _17)\"><span class=\"annotation\">@10\u298a</span>b &lt; c<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @9[2]: _16 = _6\n+20:17-20:18: @9[4]: _17 = _7\n+20:13-20:18: @9[5]: _15 = Lt(move _16, move _17)\"><span class=\"annotation\">@9\u298a</span>b &lt; c<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:17: @15[2]: FakeRead(ForLet, _18)\"><span class=\"annotation\">@15\u298a</span>somebool<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:17: @14[2]: FakeRead(ForLet, _18)\"><span class=\"annotation\">@14\u298a</span>somebool<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:13-25:14: @11[6]: _20 = _6\n-25:17-25:18: @11[8]: _21 = _5\n-25:13-25:18: @11[9]: _19 = Lt(move _20, move _21)\"><span class=\"annotation\">@11\u298a</span>b &lt; a<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:13-25:14: @10[6]: _20 = _6\n+25:17-25:18: @10[8]: _21 = _5\n+25:13-25:18: @10[9]: _19 = Lt(move _20, move _21)\"><span class=\"annotation\">@10\u298a</span>b &lt; a<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:14: @14[2]: _23 = _6\n-27:17-27:18: @14[4]: _24 = _7\n-27:13-27:18: @14[5]: _22 = Lt(move _23, move _24)\"><span class=\"annotation\">@14\u298a</span>b &lt; c<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:14: @13[2]: _23 = _6\n+27:17-27:18: @13[4]: _24 = _7\n+27:13-27:18: @13[5]: _22 = Lt(move _23, move _24)\"><span class=\"annotation\">@13\u298a</span>b &lt; c<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:9-29:17: @19[2]: FakeRead(ForLet, _25)\"><span class=\"annotation\">@19\u298a</span>somebool<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:20-29:21: @15[6]: _27 = _5\n-29:24-29:25: @15[8]: _28 = _6\n-29:20-29:25: @15[9]: _26 = Lt(move _27, move _28)\"><span class=\"annotation\">@15\u298a</span>a &lt; b<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:29-29:30: @18[2]: _30 = _6\n-29:33-29:34: @18[4]: _31 = _7\n-29:29-29:34: @18[5]: _29 = Lt(move _30, move _31)\"><span class=\"annotation\">@18\u298a</span>b &lt; c<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-30:17: @23[2]: FakeRead(ForLet, _32)\"><span class=\"annotation\">@23\u298a</span>somebool<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:20-30:21: @19[6]: _34 = _6\n-30:24-30:25: @19[8]: _35 = _5\n-30:20-30:25: @19[9]: _33 = Lt(move _34, move _35)\"><span class=\"annotation\">@19\u298a</span>b &lt; a<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:29-30:30: @22[2]: _37 = _6\n-30:33-30:34: @22[4]: _38 = _7\n-30:29-30:34: @22[5]: _36 = Lt(move _37, move _38)\"><span class=\"annotation\">@22\u298a</span>b &lt; c<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:9-29:17: @18[2]: FakeRead(ForLet, _25)\"><span class=\"annotation\">@18\u298a</span>somebool<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:20-29:21: @14[6]: _27 = _5\n+29:24-29:25: @14[8]: _28 = _6\n+29:20-29:25: @14[9]: _26 = Lt(move _27, move _28)\"><span class=\"annotation\">@14\u298a</span>a &lt; b<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:29-29:30: @17[2]: _30 = _6\n+29:33-29:34: @17[4]: _31 = _7\n+29:29-29:34: @17[5]: _29 = Lt(move _30, move _31)\"><span class=\"annotation\">@17\u298a</span>b &lt; c<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-30:17: @22[2]: FakeRead(ForLet, _32)\"><span class=\"annotation\">@22\u298a</span>somebool<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:20-30:21: @18[6]: _34 = _6\n+30:24-30:25: @18[8]: _35 = _5\n+30:20-30:25: @18[9]: _33 = Lt(move _34, move _35)\"><span class=\"annotation\">@18\u298a</span>b &lt; a<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:29-30:30: @21[2]: _37 = _6\n+30:33-30:34: @21[4]: _38 = _7\n+30:29-30:34: @21[5]: _36 = Lt(move _37, move _38)\"><span class=\"annotation\">@21\u298a</span>b &lt; c<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @23[6]: _41 = _1\n-33:9-34:16: @23[7]: _40 = Not(move _41)\n-33:9-34:16: @23[9]: FakeRead(ForMatchedPlace, _40)\"><span class=\"annotation\">@23\u298a</span>!</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @23[6]: _41 = _1\n-33:9-34:16: @23[7]: _40 = Not(move _41)\n-33:9-34:16: @23[9]: FakeRead(ForMatchedPlace, _40)\">        is_true<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n-35:5-38:6: @26[1]: _39 = const ()\"><span class=\"annotation\">@24,26\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n-35:5-38:6: @26[1]: _39 = const ()\">        a = 2</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n-35:5-38:6: @26[1]: _39 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n-35:5-38:6: @26[1]: _39 = const ()\">    }<span class=\"annotation\">\u2989@24,26</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:6-38:6: @25[0]: _39 = const ()\"><span class=\"annotation\">@25\u298a</span>\u2038<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @22[6]: _41 = _1\n+33:9-34:16: @22[7]: _40 = Not(move _41)\"><span class=\"annotation\">@22\u298a</span>!</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @22[6]: _41 = _1\n+33:9-34:16: @22[7]: _40 = Not(move _41)\">        is_true<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @23[0]: _5 = const 2_i32\n+35:5-38:6: @23[1]: _39 = const ()\"><span class=\"annotation\">@23\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @23[0]: _5 = const 2_i32\n+35:5-38:6: @23[1]: _39 = const ()\">        a = 2</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @23[0]: _5 = const 2_i32\n+35:5-38:6: @23[1]: _39 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @23[0]: _5 = const 2_i32\n+35:5-38:6: @23[1]: _39 = const ()\">    }<span class=\"annotation\">\u2989@23</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:6-38:6: @24[0]: _39 = const ()\"><span class=\"annotation\">@24\u298a</span>\u2038<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:16: @27[4]: _43 = _1\n-41:9-41:16: @27[5]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@27\u298a</span>is_true<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n-42:5-45:6: @30[1]: _42 = const ()\"><span class=\"annotation\">@28,30\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n-42:5-45:6: @30[1]: _42 = const ()\">        b = 30</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n-42:5-45:6: @30[1]: _42 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n-42:5-45:6: @30[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@28,30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:16: @25[4]: _43 = _1\"><span class=\"annotation\">@25\u298a</span>is_true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @26[0]: _6 = const 30_i32\n+42:5-45:6: @26[1]: _42 = const ()\"><span class=\"annotation\">@26\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @26[0]: _6 = const 30_i32\n+42:5-45:6: @26[1]: _42 = const ()\">        b = 30</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @26[0]: _6 = const 30_i32\n+42:5-45:6: @26[1]: _42 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @26[0]: _6 = const 30_i32\n+42:5-45:6: @26[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@26</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n-47:5-50:6: @29[1]: _42 = const ()\"><span class=\"annotation\">@29\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n-47:5-50:6: @29[1]: _42 = const ()\">        c = 400</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n-47:5-50:6: @29[1]: _42 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n-47:5-50:6: @29[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @27[0]: _7 = const 400_i32\n+47:5-50:6: @27[1]: _42 = const ()\"><span class=\"annotation\">@27\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @27[0]: _7 = const 400_i32\n+47:5-50:6: @27[1]: _42 = const ()\">        c = 400</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @27[0]: _7 = const 400_i32\n+47:5-50:6: @27[1]: _42 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @27[0]: _7 = const 400_i32\n+47:5-50:6: @27[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"52:9-52:16: @31[5]: _46 = _1\n-52:8-52:16: @31[6]: _45 = Not(move _46)\n-52:8-52:16: @31[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@31\u298a</span>!is_true<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n-52:17-54:6: @34[1]: _44 = const ()\"><span class=\"annotation\">@32,34\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n-52:17-54:6: @34[1]: _44 = const ()\">        a = 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n-52:17-54:6: @34[1]: _44 = const ()\">    }<span class=\"annotation\">\u2989@32,34</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"54:6-54:6: @33[0]: _44 = const ()\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"52:9-52:16: @28[5]: _46 = _1\n+52:8-52:16: @28[6]: _45 = Not(move _46)\"><span class=\"annotation\">@28\u298a</span>!is_true<span class=\"annotation\">\u2989@28</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @29[0]: _5 = const 2_i32\n+52:17-54:6: @29[1]: _44 = const ()\"><span class=\"annotation\">@29\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @29[0]: _5 = const 2_i32\n+52:17-54:6: @29[1]: _44 = const ()\">        a = 2;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @29[0]: _5 = const 2_i32\n+52:17-54:6: @29[1]: _44 = const ()\">    }<span class=\"annotation\">\u2989@29</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"54:6-54:6: @30[0]: _44 = const ()\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"56:8-56:15: @35[3]: _47 = _1\n-56:8-56:15: @35[4]: FakeRead(ForMatchedPlace, _47)\"><span class=\"annotation\">@35\u298a</span>is_true<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n-56:16-58:6: @38[1]: _0 = const ()\"><span class=\"annotation\">@36,38\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n-56:16-58:6: @38[1]: _0 = const ()\">        b = 30;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n-56:16-58:6: @38[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@36,38</span></span></span><span class=\"code\" style=\"--layer: 0\"> else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n-58:12-60:6: @37[1]: _0 = const ()\"><span class=\"annotation\">@37\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n-58:12-60:6: @37[1]: _0 = const ()\">        c = 400;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n-58:12-60:6: @37[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@37</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"61:2-61:2: @39.Return: return\"><span class=\"annotation\">@39\u298a</span>\u2038<span class=\"annotation\">\u2989@39</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"56:8-56:15: @31[3]: _47 = _1\"><span class=\"annotation\">@31\u298a</span>is_true<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @32[0]: _6 = const 30_i32\n+56:16-58:6: @32[1]: _0 = const ()\"><span class=\"annotation\">@32\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @32[0]: _6 = const 30_i32\n+56:16-58:6: @32[1]: _0 = const ()\">        b = 30;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @32[0]: _6 = const 30_i32\n+56:16-58:6: @32[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@32</span></span></span><span class=\"code\" style=\"--layer: 0\"> else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @33[0]: _7 = const 400_i32\n+58:12-60:6: @33[1]: _0 = const ()\"><span class=\"annotation\">@33\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @33[0]: _7 = const 400_i32\n+58:12-60:6: @33[1]: _0 = const ()\">        c = 400;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @33[0]: _7 = const 400_i32\n+58:12-60:6: @33[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"61:2-61:2: @34.Return: return\"><span class=\"annotation\">@34\u298a</span>\u2038<span class=\"annotation\">\u2989@34</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "b3f344f7fc0b87802e756be996e7ddbe90959afa", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loops_branches/loops_branches.{impl#0}-fmt.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 25, "deletions": 28, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,35 +69,32 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"10:12-10:16: @0[2]: _4 = const true\n-10:12-10:16: @0[3]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; std::fmt::Result {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:12-10:16: @0[2]: _4 = const true\n-10:12-10:16: @0[3]: FakeRead(ForMatchedPlace, _4)\">        if true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:16-11:21: @3[2]: _6 = const false\n-11:16-11:21: @3[3]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@1,3\u298a</span>false<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                while </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:23-12:27: @7[1]: _8 = const true\n-12:23-12:27: @7[2]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6,7\u298a</span>true<span class=\"annotation\">\u2989@6,7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @10[0]: _7 = const ()\"><span class=\"annotation\">@8,10\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @10[0]: _7 = const ()\">                }<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:14-14:14: @5[0]: _5 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:20-15:21: @11[6]: _13 = &amp;mut (*_2)\n-15:23-15:30: @11[11]: _32 = const &lt;DebugTest as Debug&gt;::fmt::promoted[1]\n-15:23-15:30: @11[12]: _17 = &amp;(*_32)\n-15:23-15:30: @11[13]: _16 = &amp;(*_17)\n-15:23-15:30: @11[14]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n-15:13-15:31: @11[20]: _23 = ()\n-15:13-15:31: @11[21]: FakeRead(ForMatchedPlace, _23)\n-15:13-15:31: @11[22]: _31 = const &lt;DebugTest as Debug&gt;::fmt::promoted[0]\n-15:13-15:31: @11[23]: _21 = &amp;(*_31)\n-15:13-15:31: @11[24]: _20 = &amp;(*_21)\n-15:13-15:31: @11[25]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-15:13-15:31: @11.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb12, unwind: bb23]\n-15:13-15:31: @12.Call: _12 = Formatter::write_fmt(move _13, move _14) -&gt; [return: bb13, unwind: bb23]\"><span class=\"annotation\">@11,12,13,14\u298a</span>write!(f, \"error\")<span class=\"annotation\">\u2989@11,12,13,14</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:31-15:32: @18[1]: _25 = ((_11 as Err).0: std::fmt::Error)\n-15:31-15:32: @18[4]: _28 = _25\n-15:31-15:32: @18.Call: _27 = &lt;std::fmt::Error as From&lt;std::fmt::Error&gt;&gt;::from(move _28) -&gt; [return: bb19, unwind: bb23]\"><span class=\"annotation\">@16,18,19,20\u298a</span>?<span class=\"annotation\">\u2989@16,18,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"10:12-10:16: @0[2]: _4 = const true\"><span class=\"annotation\">@0\u298a</span>fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; std::fmt::Result {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:12-10:16: @0[2]: _4 = const true\">        if true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:16-11:21: @1[2]: _6 = const false\"><span class=\"annotation\">@1\u298a</span>false<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                while </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:23-12:27: @5[1]: _8 = const true\n+12:23-12:27: @5[2]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@4,5\u298a</span>true<span class=\"annotation\">\u2989@4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @8[0]: _7 = const ()\"><span class=\"annotation\">@6,8\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @8[0]: _7 = const ()\">                }<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:14-14:14: @3[0]: _5 = const ()\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:20-15:21: @9[6]: _13 = &amp;mut (*_2)\n+15:23-15:30: @9[11]: _32 = const &lt;DebugTest as Debug&gt;::fmt::promoted[1]\n+15:23-15:30: @9[12]: _17 = &amp;(*_32)\n+15:23-15:30: @9[13]: _16 = &amp;(*_17)\n+15:23-15:30: @9[14]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n+15:13-15:31: @9[20]: _23 = ()\n+15:13-15:31: @9[21]: FakeRead(ForMatchedPlace, _23)\n+15:13-15:31: @9[22]: _31 = const &lt;DebugTest as Debug&gt;::fmt::promoted[0]\n+15:13-15:31: @9[23]: _21 = &amp;(*_31)\n+15:13-15:31: @9[24]: _20 = &amp;(*_21)\n+15:13-15:31: @9[25]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+15:13-15:31: @9.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb10, unwind: bb21]\n+15:13-15:31: @10.Call: _12 = Formatter::write_fmt(move _13, move _14) -&gt; [return: bb11, unwind: bb21]\"><span class=\"annotation\">@9,10,11,12\u298a</span>write!(f, \"error\")<span class=\"annotation\">\u2989@9,10,11,12</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:31-15:32: @16[1]: _25 = ((_11 as Err).0: std::fmt::Error)\n+15:31-15:32: @16[4]: _28 = _25\n+15:31-15:32: @16.Call: _27 = &lt;std::fmt::Error as From&lt;std::fmt::Error&gt;&gt;::from(move _28) -&gt; [return: bb17, unwind: bb21]\"><span class=\"annotation\">@14,16,17,18\u298a</span>?<span class=\"annotation\">\u2989@14,16,17,18</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\">        }<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:12-18:14: @21[3]: _30 = ()\n-18:9-18:15: @21[4]: _0 = std::result::Result::&lt;(), std::fmt::Error&gt;::Ok(move _30)\"><span class=\"annotation\">@21\u298a</span>Ok(())<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:6-19:6: @22.Return: return\"><span class=\"annotation\">@22\u298a</span>\u2038<span class=\"annotation\">\u2989@22</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:12-18:14: @19[3]: _30 = ()\n+18:9-18:15: @19[4]: _0 = std::result::Result::&lt;(), std::fmt::Error&gt;::Ok(move _30)\"><span class=\"annotation\">@19\u298a</span>Ok(())<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:6-19:6: @20.Return: return\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "c7992614b5b6f1a547e20d52337c8dcaf4936d25", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.match_or_pattern/match_or_pattern.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 99, "deletions": 111, "changes": 210, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.match_or_pattern%2Fmatch_or_pattern.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.match_or_pattern%2Fmatch_or_pattern.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.match_or_pattern%2Fmatch_or_pattern.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,9 +69,9 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -80,11 +80,10 @@\n 10:21-10:22: @3[6]: _6 = const 0_u8\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\n-11:8-11:15: @3[12]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+11:8-11:15: @3[11]: _8 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -93,11 +92,10 @@\n 10:21-10:22: @3[6]: _6 = const 0_u8\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\n-11:8-11:15: @3[12]: FakeRead(ForMatchedPlace, _8)\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+11:8-11:15: @3[11]: _8 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -106,11 +104,10 @@\n 10:21-10:22: @3[6]: _6 = const 0_u8\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\n-11:8-11:15: @3[12]: FakeRead(ForMatchedPlace, _8)\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+11:8-11:15: @3[11]: _8 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -119,11 +116,10 @@\n 10:21-10:22: @3[6]: _6 = const 0_u8\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\n-11:8-11:15: @3[12]: FakeRead(ForMatchedPlace, _8)\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+11:8-11:15: @3[11]: _8 = _1\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -132,11 +128,10 @@\n 10:21-10:22: @3[6]: _6 = const 0_u8\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\n-11:8-11:15: @3[12]: FakeRead(ForMatchedPlace, _8)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+11:8-11:15: @3[11]: _8 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -145,11 +140,10 @@\n 10:21-10:22: @3[6]: _6 = const 0_u8\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\n-11:8-11:15: @3[12]: FakeRead(ForMatchedPlace, _8)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+11:8-11:15: @3[11]: _8 = _1\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -158,11 +152,10 @@\n 10:21-10:22: @3[6]: _6 = const 0_u8\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\n-11:8-11:15: @3[12]: FakeRead(ForMatchedPlace, _8)\">    let mut a: u8 = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+11:8-11:15: @3[11]: _8 = _1\">    let mut a: u8 = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -171,11 +164,10 @@\n 10:21-10:22: @3[6]: _6 = const 0_u8\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\n-11:8-11:15: @3[12]: FakeRead(ForMatchedPlace, _8)\">    let mut b: u8 = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n+11:8-11:15: @3[11]: _8 = _1\">    let mut b: u8 = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -184,88 +176,84 @@\n 10:21-10:22: @3[6]: _6 = const 0_u8\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\n-11:8-11:15: @3[12]: FakeRead(ForMatchedPlace, _8)\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @6[0]: _5 = const 2_u8\n-13:9-13:14: @6[1]: _6 = const 0_u8\n-11:16-14:6: @6[2]: _7 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @6[0]: _5 = const 2_u8\n-13:9-13:14: @6[1]: _6 = const 0_u8\n-11:16-14:6: @6[2]: _7 = const ()\">        a = 2;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @6[0]: _5 = const 2_u8\n-13:9-13:14: @6[1]: _6 = const 0_u8\n-11:16-14:6: @6[2]: _7 = const ()\">        b = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @6[0]: _5 = const 2_u8\n-13:9-13:14: @6[1]: _6 = const 0_u8\n-11:16-14:6: @6[2]: _7 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:6-14:6: @5[0]: _7 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:12-15:13: @7[5]: _11 = _5\n-15:15-15:16: @7[7]: _12 = _6\n-15:11-15:17: @7[8]: _10 = (move _11, move _12)\n-15:11-15:17: @7[11]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@7\u298a</span>(a, b)<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+11:8-11:15: @3[11]: _8 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @4[0]: _5 = const 2_u8\n+13:9-13:14: @4[1]: _6 = const 0_u8\n+11:16-14:6: @4[2]: _7 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @4[0]: _5 = const 2_u8\n+13:9-13:14: @4[1]: _6 = const 0_u8\n+11:16-14:6: @4[2]: _7 = const ()\">        a = 2;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @4[0]: _5 = const 2_u8\n+13:9-13:14: @4[1]: _6 = const 0_u8\n+11:16-14:6: @4[2]: _7 = const ()\">        b = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @4[0]: _5 = const 2_u8\n+13:9-13:14: @4[1]: _6 = const 0_u8\n+11:16-14:6: @4[2]: _7 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:6-14:6: @5[0]: _7 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:12-15:13: @6[5]: _11 = _5\n+15:15-15:16: @6[7]: _12 = _6\n+15:11-15:17: @6[8]: _10 = (move _11, move _12)\n+15:11-15:17: @6[11]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@6\u298a</span>(a, b)<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // Or patterns generate MIR `SwitchInt` with multiple targets to the same `BasicBlock`.</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // This test confirms a fix for Issue #79569.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:27-18:29: @11[0]: _9 = const ()\"><span class=\"annotation\">@10,11\u298a</span>{}<span class=\"annotation\">\u2989@10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:14-19:16: @8[0]: _9 = const ()\"><span class=\"annotation\">@8\u298a</span>{}<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:27-18:29: @10[0]: _9 = const ()\"><span class=\"annotation\">@9,10\u298a</span>{}<span class=\"annotation\">\u2989@9,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:14-19:16: @7[0]: _9 = const ()\"><span class=\"annotation\">@7\u298a</span>{}<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:8-21:15: @12[4]: _14 = _1\n-21:8-21:15: @12[5]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@12\u298a</span>is_true<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @15[0]: _5 = const 0_u8\n-23:9-23:14: @15[1]: _6 = const 0_u8\n-21:16-24:6: @15[2]: _13 = const ()\"><span class=\"annotation\">@13,15\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @15[0]: _5 = const 0_u8\n-23:9-23:14: @15[1]: _6 = const 0_u8\n-21:16-24:6: @15[2]: _13 = const ()\">        a = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @15[0]: _5 = const 0_u8\n-23:9-23:14: @15[1]: _6 = const 0_u8\n-21:16-24:6: @15[2]: _13 = const ()\">        b = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @15[0]: _5 = const 0_u8\n-23:9-23:14: @15[1]: _6 = const 0_u8\n-21:16-24:6: @15[2]: _13 = const ()\">    }<span class=\"annotation\">\u2989@13,15</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:6-24:6: @14[0]: _13 = const ()\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:12-25:13: @16[5]: _17 = _5\n-25:15-25:16: @16[7]: _18 = _6\n-25:11-25:17: @16[8]: _16 = (move _17, move _18)\n-25:11-25:17: @16[11]: FakeRead(ForMatchedPlace, _16)\"><span class=\"annotation\">@16\u298a</span>(a, b)<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:27-26:29: @20[0]: _15 = const ()\"><span class=\"annotation\">@19,20\u298a</span>{}<span class=\"annotation\">\u2989@19,20</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:14-27:16: @17[0]: _15 = const ()\"><span class=\"annotation\">@17\u298a</span>{}<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:8-21:15: @11[4]: _14 = _1\"><span class=\"annotation\">@11\u298a</span>is_true<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @12[0]: _5 = const 0_u8\n+23:9-23:14: @12[1]: _6 = const 0_u8\n+21:16-24:6: @12[2]: _13 = const ()\"><span class=\"annotation\">@12\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @12[0]: _5 = const 0_u8\n+23:9-23:14: @12[1]: _6 = const 0_u8\n+21:16-24:6: @12[2]: _13 = const ()\">        a = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @12[0]: _5 = const 0_u8\n+23:9-23:14: @12[1]: _6 = const 0_u8\n+21:16-24:6: @12[2]: _13 = const ()\">        b = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @12[0]: _5 = const 0_u8\n+23:9-23:14: @12[1]: _6 = const 0_u8\n+21:16-24:6: @12[2]: _13 = const ()\">    }<span class=\"annotation\">\u2989@12</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:6-24:6: @13[0]: _13 = const ()\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:12-25:13: @14[5]: _17 = _5\n+25:15-25:16: @14[7]: _18 = _6\n+25:11-25:17: @14[8]: _16 = (move _17, move _18)\n+25:11-25:17: @14[11]: FakeRead(ForMatchedPlace, _16)\"><span class=\"annotation\">@14\u298a</span>(a, b)<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:27-26:29: @18[0]: _15 = const ()\"><span class=\"annotation\">@17,18\u298a</span>{}<span class=\"annotation\">\u2989@17,18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:14-27:16: @15[0]: _15 = const ()\"><span class=\"annotation\">@15\u298a</span>{}<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:8-29:15: @21[4]: _20 = _1\n-29:8-29:15: @21[5]: FakeRead(ForMatchedPlace, _20)\"><span class=\"annotation\">@21\u298a</span>is_true<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @24[0]: _5 = const 2_u8\n-31:9-31:14: @24[1]: _6 = const 2_u8\n-29:16-32:6: @24[2]: _19 = const ()\"><span class=\"annotation\">@22,24\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @24[0]: _5 = const 2_u8\n-31:9-31:14: @24[1]: _6 = const 2_u8\n-29:16-32:6: @24[2]: _19 = const ()\">        a = 2;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @24[0]: _5 = const 2_u8\n-31:9-31:14: @24[1]: _6 = const 2_u8\n-29:16-32:6: @24[2]: _19 = const ()\">        b = 2;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @24[0]: _5 = const 2_u8\n-31:9-31:14: @24[1]: _6 = const 2_u8\n-29:16-32:6: @24[2]: _19 = const ()\">    }<span class=\"annotation\">\u2989@22,24</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:6-32:6: @23[0]: _19 = const ()\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"33:12-33:13: @25[5]: _23 = _5\n-33:15-33:16: @25[7]: _24 = _6\n-33:11-33:17: @25[8]: _22 = (move _23, move _24)\n-33:11-33:17: @25[11]: FakeRead(ForMatchedPlace, _22)\"><span class=\"annotation\">@25\u298a</span>(a, b)<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:27-34:29: @29[0]: _21 = const ()\"><span class=\"annotation\">@28,29\u298a</span>{}<span class=\"annotation\">\u2989@28,29</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:14-35:16: @26[0]: _21 = const ()\"><span class=\"annotation\">@26\u298a</span>{}<span class=\"annotation\">\u2989@26</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:8-29:15: @19[4]: _20 = _1\"><span class=\"annotation\">@19\u298a</span>is_true<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @20[0]: _5 = const 2_u8\n+31:9-31:14: @20[1]: _6 = const 2_u8\n+29:16-32:6: @20[2]: _19 = const ()\"><span class=\"annotation\">@20\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @20[0]: _5 = const 2_u8\n+31:9-31:14: @20[1]: _6 = const 2_u8\n+29:16-32:6: @20[2]: _19 = const ()\">        a = 2;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @20[0]: _5 = const 2_u8\n+31:9-31:14: @20[1]: _6 = const 2_u8\n+29:16-32:6: @20[2]: _19 = const ()\">        b = 2;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @20[0]: _5 = const 2_u8\n+31:9-31:14: @20[1]: _6 = const 2_u8\n+29:16-32:6: @20[2]: _19 = const ()\">    }<span class=\"annotation\">\u2989@20</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:6-32:6: @21[0]: _19 = const ()\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"33:12-33:13: @22[5]: _23 = _5\n+33:15-33:16: @22[7]: _24 = _6\n+33:11-33:17: @22[8]: _22 = (move _23, move _24)\n+33:11-33:17: @22[11]: FakeRead(ForMatchedPlace, _22)\"><span class=\"annotation\">@22\u298a</span>(a, b)<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:27-34:29: @26[0]: _21 = const ()\"><span class=\"annotation\">@25,26\u298a</span>{}<span class=\"annotation\">\u2989@25,26</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:14-35:16: @23[0]: _21 = const ()\"><span class=\"annotation\">@23\u298a</span>{}<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"37:8-37:15: @30[4]: _26 = _1\n-37:8-37:15: @30[5]: FakeRead(ForMatchedPlace, _26)\"><span class=\"annotation\">@30\u298a</span>is_true<span class=\"annotation\">\u2989@30</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @33[0]: _5 = const 0_u8\n-39:9-39:14: @33[1]: _6 = const 2_u8\n-37:16-40:6: @33[2]: _25 = const ()\"><span class=\"annotation\">@31,33\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @33[0]: _5 = const 0_u8\n-39:9-39:14: @33[1]: _6 = const 2_u8\n-37:16-40:6: @33[2]: _25 = const ()\">        a = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @33[0]: _5 = const 0_u8\n-39:9-39:14: @33[1]: _6 = const 2_u8\n-37:16-40:6: @33[2]: _25 = const ()\">        b = 2;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @33[0]: _5 = const 0_u8\n-39:9-39:14: @33[1]: _6 = const 2_u8\n-37:16-40:6: @33[2]: _25 = const ()\">    }<span class=\"annotation\">\u2989@31,33</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:6-40:6: @32[0]: _25 = const ()\"><span class=\"annotation\">@32\u298a</span>\u2038<span class=\"annotation\">\u2989@32</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"41:12-41:13: @34[4]: _28 = _5\n-41:15-41:16: @34[6]: _29 = _6\n-41:11-41:17: @34[7]: _27 = (move _28, move _29)\n-41:11-41:17: @34[10]: FakeRead(ForMatchedPlace, _27)\"><span class=\"annotation\">@34\u298a</span>(a, b)<span class=\"annotation\">\u2989@34</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"42:27-42:29: @38[0]: _0 = const ()\"><span class=\"annotation\">@37,38\u298a</span>{}<span class=\"annotation\">\u2989@37,38</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:14-43:16: @35[0]: _0 = const ()\"><span class=\"annotation\">@35\u298a</span>{}<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"37:8-37:15: @27[4]: _26 = _1\"><span class=\"annotation\">@27\u298a</span>is_true<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @28[0]: _5 = const 0_u8\n+39:9-39:14: @28[1]: _6 = const 2_u8\n+37:16-40:6: @28[2]: _25 = const ()\"><span class=\"annotation\">@28\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @28[0]: _5 = const 0_u8\n+39:9-39:14: @28[1]: _6 = const 2_u8\n+37:16-40:6: @28[2]: _25 = const ()\">        a = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @28[0]: _5 = const 0_u8\n+39:9-39:14: @28[1]: _6 = const 2_u8\n+37:16-40:6: @28[2]: _25 = const ()\">        b = 2;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @28[0]: _5 = const 0_u8\n+39:9-39:14: @28[1]: _6 = const 2_u8\n+37:16-40:6: @28[2]: _25 = const ()\">    }<span class=\"annotation\">\u2989@28</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:6-40:6: @29[0]: _25 = const ()\"><span class=\"annotation\">@29\u298a</span>\u2038<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"41:12-41:13: @30[4]: _28 = _5\n+41:15-41:16: @30[6]: _29 = _6\n+41:11-41:17: @30[7]: _27 = (move _28, move _29)\n+41:11-41:17: @30[10]: FakeRead(ForMatchedPlace, _27)\"><span class=\"annotation\">@30\u298a</span>(a, b)<span class=\"annotation\">\u2989@30</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"42:27-42:29: @34[0]: _0 = const ()\"><span class=\"annotation\">@33,34\u298a</span>{}<span class=\"annotation\">\u2989@33,34</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:14-43:16: @31[0]: _0 = const ()\"><span class=\"annotation\">@31\u298a</span>{}<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"45:2-45:2: @39.Return: return\"><span class=\"annotation\">@39\u298a</span>\u2038<span class=\"annotation\">\u2989@39</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"45:2-45:2: @35.Return: return\"><span class=\"annotation\">@35\u298a</span>\u2038<span class=\"annotation\">\u2989@35</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "4dcf6c741dc735fce077e0c13f8b4719a06f9318", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 49, "deletions": 56, "changes": 105, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,23 +69,23 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb35]\n+<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb32]\n 2:19-2:35: @1[0]: _3 = &amp;_4\n-2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb34]\n+2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n 2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n 3:25-3:27: @3[2]: _5 = const 10_i32\n 3:9-3:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb35]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb32]\n 2:19-2:35: @1[0]: _3 = &amp;_4\n-2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb34]\n+2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n 2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n 3:25-3:27: @3[2]: _5 = const 10_i32\n 3:9-3:22: @3[3]: FakeRead(ForLet, _5)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb35]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb32]\n 2:19-2:35: @1[0]: _3 = &amp;_4\n-2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb34]\n+2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n 2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n 3:25-3:27: @3[2]: _5 = const 10_i32\n@@ -107,67 +107,60 @@\n 8:13-8:14: @16[4]: _15 = move _22\n 8:13-8:14: @16[5]: _16 = const ()\"><span class=\"annotation\">@14,16\u298a</span>_<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> in </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:18-8:23: @11[5]: _19 = &amp;mut _14\n 8:18-8:23: @11[6]: _18 = &amp;mut (*_19)\n-8:18-8:23: @11.Call: _17 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _18) -&gt; [return: bb12, unwind: bb35]\n+8:18-8:23: @11.Call: _17 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _18) -&gt; [return: bb12, unwind: bb32]\n 8:18-8:23: @12[1]: FakeRead(ForMatchedPlace, _17)\"><span class=\"annotation\">@10,11,12\u298a</span>0..50<span class=\"annotation\">\u2989@10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:16-9:17: @16[15]: _27 = _9\n-9:16-9:22: @16[16]: _26 = Lt(move _27, const 30_i32)\n-9:16-9:22: @16[18]: FakeRead(ForMatchedPlace, _26)\"><span class=\"annotation\">@14,16\u298a</span>a &lt; 30<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:17-10:22: @19[0]: _11 = const ()\"><span class=\"annotation\">@17,19\u298a</span>break<span class=\"annotation\">\u2989@17,19</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+9:16-9:22: @16[16]: _26 = Lt(move _27, const 30_i32)\"><span class=\"annotation\">@14,16\u298a</span>a &lt; 30<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:17-10:22: @17[0]: _11 = const ()\"><span class=\"annotation\">@17\u298a</span>break<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:14-11:14: @18[0]: _25 = const ()\n 12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n-12:13-12:19: @20[0]: _9 = move (_29.0: i32)\n-13:13-13:19: @20[1]: _30 = CheckedSub(_10, const 5_i32)\n-13:13-13:19: @21[0]: _10 = move (_30.0: i32)\n-14:16-14:17: @21[3]: _32 = _10\n-14:16-14:22: @21[4]: _31 = Lt(move _32, const 90_i32)\n-14:16-14:22: @21[6]: FakeRead(ForMatchedPlace, _31)\"><span class=\"annotation\">@18,20,21\u298a</span></span></span>\n+12:13-12:19: @19[0]: _9 = move (_29.0: i32)\n+13:13-13:19: @19[1]: _30 = CheckedSub(_10, const 5_i32)\n+13:13-13:19: @20[0]: _10 = move (_30.0: i32)\n+14:16-14:17: @20[3]: _32 = _10\n+14:16-14:22: @20[4]: _31 = Lt(move _32, const 90_i32)\"><span class=\"annotation\">@18,19,20\u298a</span></span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:14-11:14: @18[0]: _25 = const ()\n 12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n-12:13-12:19: @20[0]: _9 = move (_29.0: i32)\n-13:13-13:19: @20[1]: _30 = CheckedSub(_10, const 5_i32)\n-13:13-13:19: @21[0]: _10 = move (_30.0: i32)\n-14:16-14:17: @21[3]: _32 = _10\n-14:16-14:22: @21[4]: _31 = Lt(move _32, const 90_i32)\n-14:16-14:22: @21[6]: FakeRead(ForMatchedPlace, _31)\">            a -= 5;</span></span>\n+12:13-12:19: @19[0]: _9 = move (_29.0: i32)\n+13:13-13:19: @19[1]: _30 = CheckedSub(_10, const 5_i32)\n+13:13-13:19: @20[0]: _10 = move (_30.0: i32)\n+14:16-14:17: @20[3]: _32 = _10\n+14:16-14:22: @20[4]: _31 = Lt(move _32, const 90_i32)\">            a -= 5;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:14-11:14: @18[0]: _25 = const ()\n 12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n-12:13-12:19: @20[0]: _9 = move (_29.0: i32)\n-13:13-13:19: @20[1]: _30 = CheckedSub(_10, const 5_i32)\n-13:13-13:19: @21[0]: _10 = move (_30.0: i32)\n-14:16-14:17: @21[3]: _32 = _10\n-14:16-14:22: @21[4]: _31 = Lt(move _32, const 90_i32)\n-14:16-14:22: @21[6]: FakeRead(ForMatchedPlace, _31)\">            b -= 5;</span></span>\n+12:13-12:19: @19[0]: _9 = move (_29.0: i32)\n+13:13-13:19: @19[1]: _30 = CheckedSub(_10, const 5_i32)\n+13:13-13:19: @20[0]: _10 = move (_30.0: i32)\n+14:16-14:17: @20[3]: _32 = _10\n+14:16-14:22: @20[4]: _31 = Lt(move _32, const 90_i32)\">            b -= 5;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:14-11:14: @18[0]: _25 = const ()\n 12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n-12:13-12:19: @20[0]: _9 = move (_29.0: i32)\n-13:13-13:19: @20[1]: _30 = CheckedSub(_10, const 5_i32)\n-13:13-13:19: @21[0]: _10 = move (_30.0: i32)\n-14:16-14:17: @21[3]: _32 = _10\n-14:16-14:22: @21[4]: _31 = Lt(move _32, const 90_i32)\n-14:16-14:22: @21[6]: FakeRead(ForMatchedPlace, _31)\">            if b &lt; 90<span class=\"annotation\">\u2989@18,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:17-15:24: @24[0]: _33 = CheckedSub(_9, const 10_i32)\n-15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n-16:20-16:27: @25[2]: _34 = _1\n-16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\"><span class=\"annotation\">@22,24,25\u298a</span>a -= 10;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:17-15:24: @24[0]: _33 = CheckedSub(_9, const 10_i32)\n-15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n-16:20-16:27: @25[2]: _34 = _1\n-16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\">                if is_true<span class=\"annotation\">\u2989@22,24,25</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:21-17:33: @28[0]: _0 = const ()\"><span class=\"annotation\">@26,28\u298a</span>break 'outer<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @27[0]: _36 = CheckedSub(_9, const 2_i32)\n-19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n-18:24-20:18: @29[1]: _24 = const ()\"><span class=\"annotation\">@27,29\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @27[0]: _36 = CheckedSub(_9, const 2_i32)\n-19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n-18:24-20:18: @29[1]: _24 = const ()\">                    a -= 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @27[0]: _36 = CheckedSub(_9, const 2_i32)\n-19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n-18:24-20:18: @29[1]: _24 = const ()\">                }<span class=\"annotation\">\u2989@27,29</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:14-21:14: @23[0]: _24 = const ()\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+12:13-12:19: @19[0]: _9 = move (_29.0: i32)\n+13:13-13:19: @19[1]: _30 = CheckedSub(_10, const 5_i32)\n+13:13-13:19: @20[0]: _10 = move (_30.0: i32)\n+14:16-14:17: @20[3]: _32 = _10\n+14:16-14:22: @20[4]: _31 = Lt(move _32, const 90_i32)\">            if b &lt; 90<span class=\"annotation\">\u2989@18,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:17-15:24: @21[0]: _33 = CheckedSub(_9, const 10_i32)\n+15:17-15:24: @23[0]: _9 = move (_33.0: i32)\n+16:20-16:27: @23[2]: _34 = _1\"><span class=\"annotation\">@21,23\u298a</span>a -= 10;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:17-15:24: @21[0]: _33 = CheckedSub(_9, const 10_i32)\n+15:17-15:24: @23[0]: _9 = move (_33.0: i32)\n+16:20-16:27: @23[2]: _34 = _1\">                if is_true<span class=\"annotation\">\u2989@21,23</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:21-17:33: @24[0]: _0 = const ()\"><span class=\"annotation\">@24\u298a</span>break 'outer<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @25[0]: _36 = CheckedSub(_9, const 2_i32)\n+19:21-19:27: @26[0]: _9 = move (_36.0: i32)\n+18:24-20:18: @26[1]: _24 = const ()\"><span class=\"annotation\">@25,26\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @25[0]: _36 = CheckedSub(_9, const 2_i32)\n+19:21-19:27: @26[0]: _9 = move (_36.0: i32)\n+18:24-20:18: @26[1]: _24 = const ()\">                    a -= 2;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @25[0]: _36 = CheckedSub(_9, const 2_i32)\n+19:21-19:27: @26[0]: _9 = move (_36.0: i32)\n+18:24-20:18: @26[1]: _24 = const ()\">                }<span class=\"annotation\">\u2989@25,26</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:14-21:14: @22[0]: _24 = const ()\"><span class=\"annotation\">@22\u298a</span>\u2038<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:23: @31[4]: _37 = CheckedSub(_5, const 1_i32)\n-23:9-23:23: @32[0]: _5 = move (_37.0: i32)\"><span class=\"annotation\">@31,32\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@31,32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:23: @28[4]: _37 = CheckedSub(_5, const 1_i32)\n+23:9-23:23: @29[0]: _5 = move (_37.0: i32)\"><span class=\"annotation\">@28,29\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@28,29</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:2-25:2: @33.Return: return\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:2-25:2: @30.Return: return\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "ca3515689d337368f7e56f0cf6ee1a31f06897cb", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.overflow/overflow.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 170, "deletions": 172, "changes": 342, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -77,178 +77,176 @@\n 17:11-17:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n 17:11-17:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:12-18:21: @5[3]: _8 = _1\n-18:12-18:26: @5[4]: _7 = Eq(move _8, const 1_i32)\n-18:12-18:26: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n-19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n-20:22-20:34: @9[7]: _51 = const main::promoted[1]\n-20:22-20:34: @9[8]: _15 = &amp;(*_51)\n-20:22-20:34: @9[9]: _14 = &amp;(*_15)\n-20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n-20:36-20:42: @9[18]: _22 = &amp;_9\n-20:13-20:44: @9[19]: _21 = (move _22,)\n-20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n-20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n-20:13-20:44: @9[26]: _25 = &amp;(*_23)\n-20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n-20:13-20:44: @10[2]: _20 = [move _24]\n-20:13-20:44: @10[5]: _19 = &amp;_20\n-20:13-20:44: @10[6]: _18 = &amp;(*_19)\n-20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n-20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n-20:13-20:44: @12[6]: _10 = const ()\n-18:27-21:10: @12[8]: _6 = const ()\"><span class=\"annotation\">@6,8,9,10,11,12\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n-19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n-20:22-20:34: @9[7]: _51 = const main::promoted[1]\n-20:22-20:34: @9[8]: _15 = &amp;(*_51)\n-20:22-20:34: @9[9]: _14 = &amp;(*_15)\n-20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n-20:36-20:42: @9[18]: _22 = &amp;_9\n-20:13-20:44: @9[19]: _21 = (move _22,)\n-20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n-20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n-20:13-20:44: @9[26]: _25 = &amp;(*_23)\n-20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n-20:13-20:44: @10[2]: _20 = [move _24]\n-20:13-20:44: @10[5]: _19 = &amp;_20\n-20:13-20:44: @10[6]: _18 = &amp;(*_19)\n-20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n-20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n-20:13-20:44: @12[6]: _10 = const ()\n-18:27-21:10: @12[8]: _6 = const ()\">            let result = might_overflow(10);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n-19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n-20:22-20:34: @9[7]: _51 = const main::promoted[1]\n-20:22-20:34: @9[8]: _15 = &amp;(*_51)\n-20:22-20:34: @9[9]: _14 = &amp;(*_15)\n-20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n-20:36-20:42: @9[18]: _22 = &amp;_9\n-20:13-20:44: @9[19]: _21 = (move _22,)\n-20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n-20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n-20:13-20:44: @9[26]: _25 = &amp;(*_23)\n-20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n-20:13-20:44: @10[2]: _20 = [move _24]\n-20:13-20:44: @10[5]: _19 = &amp;_20\n-20:13-20:44: @10[6]: _18 = &amp;(*_19)\n-20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n-20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n-20:13-20:44: @12[6]: _10 = const ()\n-18:27-21:10: @12[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n-19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n-20:22-20:34: @9[7]: _51 = const main::promoted[1]\n-20:22-20:34: @9[8]: _15 = &amp;(*_51)\n-20:22-20:34: @9[9]: _14 = &amp;(*_15)\n-20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n-20:36-20:42: @9[18]: _22 = &amp;_9\n-20:13-20:44: @9[19]: _21 = (move _22,)\n-20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n-20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n-20:13-20:44: @9[26]: _25 = &amp;(*_23)\n-20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n-20:13-20:44: @10[2]: _20 = [move _24]\n-20:13-20:44: @10[5]: _19 = &amp;_20\n-20:13-20:44: @10[6]: _18 = &amp;(*_19)\n-20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n-20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n-20:13-20:44: @12[6]: _10 = const ()\n-18:27-21:10: @12[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9,10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:19-21:28: @7[2]: _28 = _1\n-21:19-21:32: @7[3]: _27 = Lt(move _28, const 5_i32)\n-21:19-21:32: @7[5]: FakeRead(ForMatchedPlace, _27)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n-22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n-23:22-23:34: @16[7]: _50 = const main::promoted[0]\n-23:22-23:34: @16[8]: _35 = &amp;(*_50)\n-23:22-23:34: @16[9]: _34 = &amp;(*_35)\n-23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n-23:36-23:42: @16[18]: _42 = &amp;_29\n-23:13-23:44: @16[19]: _41 = (move _42,)\n-23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n-23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n-23:13-23:44: @16[26]: _45 = &amp;(*_43)\n-23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n-23:13-23:44: @17[2]: _40 = [move _44]\n-23:13-23:44: @17[5]: _39 = &amp;_40\n-23:13-23:44: @17[6]: _38 = &amp;(*_39)\n-23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n-23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n-23:13-23:44: @19[6]: _30 = const ()\n-21:33-24:10: @19[8]: _6 = const ()\"><span class=\"annotation\">@13,15,16,17,18,19\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n-22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n-23:22-23:34: @16[7]: _50 = const main::promoted[0]\n-23:22-23:34: @16[8]: _35 = &amp;(*_50)\n-23:22-23:34: @16[9]: _34 = &amp;(*_35)\n-23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n-23:36-23:42: @16[18]: _42 = &amp;_29\n-23:13-23:44: @16[19]: _41 = (move _42,)\n-23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n-23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n-23:13-23:44: @16[26]: _45 = &amp;(*_43)\n-23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n-23:13-23:44: @17[2]: _40 = [move _44]\n-23:13-23:44: @17[5]: _39 = &amp;_40\n-23:13-23:44: @17[6]: _38 = &amp;(*_39)\n-23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n-23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n-23:13-23:44: @19[6]: _30 = const ()\n-21:33-24:10: @19[8]: _6 = const ()\">            let result = might_overflow(1);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n-22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n-23:22-23:34: @16[7]: _50 = const main::promoted[0]\n-23:22-23:34: @16[8]: _35 = &amp;(*_50)\n-23:22-23:34: @16[9]: _34 = &amp;(*_35)\n-23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n-23:36-23:42: @16[18]: _42 = &amp;_29\n-23:13-23:44: @16[19]: _41 = (move _42,)\n-23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n-23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n-23:13-23:44: @16[26]: _45 = &amp;(*_43)\n-23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n-23:13-23:44: @17[2]: _40 = [move _44]\n-23:13-23:44: @17[5]: _39 = &amp;_40\n-23:13-23:44: @17[6]: _38 = &amp;(*_39)\n-23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n-23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n-23:13-23:44: @19[6]: _30 = const ()\n-21:33-24:10: @19[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n-22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n-23:22-23:34: @16[7]: _50 = const main::promoted[0]\n-23:22-23:34: @16[8]: _35 = &amp;(*_50)\n-23:22-23:34: @16[9]: _34 = &amp;(*_35)\n-23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n-23:36-23:42: @16[18]: _42 = &amp;_29\n-23:13-23:44: @16[19]: _41 = (move _42,)\n-23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n-23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n-23:13-23:44: @16[26]: _45 = &amp;(*_43)\n-23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n-23:13-23:44: @17[2]: _40 = [move _44]\n-23:13-23:44: @17[5]: _39 = &amp;_40\n-23:13-23:44: @17[6]: _38 = &amp;(*_39)\n-23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n-23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n-23:13-23:44: @19[6]: _30 = const ()\n-21:33-24:10: @19[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@13,15,16,17,18,19</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:10-24:10: @14[0]: _6 = const ()\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @21[2]: _47 = CheckedSub(_1, const 1_i32)\n-25:9-25:23: @22[0]: _1 = move (_47.0: i32)\"><span class=\"annotation\">@21,22\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@21,22</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+18:12-18:26: @5[4]: _7 = Eq(move _8, const 1_i32)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @6.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb8, unwind: bb21]\n+19:17-19:23: @8[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @8[7]: _51 = const main::promoted[1]\n+20:22-20:34: @8[8]: _15 = &amp;(*_51)\n+20:22-20:34: @8[9]: _14 = &amp;(*_15)\n+20:22-20:34: @8[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @8[18]: _22 = &amp;_9\n+20:13-20:44: @8[19]: _21 = (move _22,)\n+20:13-20:44: @8[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @8[26]: _25 = &amp;(*_23)\n+20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @8.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n+20:13-20:44: @9[2]: _20 = [move _24]\n+20:13-20:44: @9[5]: _19 = &amp;_20\n+20:13-20:44: @9[6]: _18 = &amp;(*_19)\n+20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @9.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n+20:13-20:44: @10.Call: _11 = _print(move _12) -&gt; [return: bb11, unwind: bb21]\n+20:13-20:44: @11[6]: _10 = const ()\n+18:27-21:10: @11[8]: _6 = const ()\"><span class=\"annotation\">@6,8,9,10,11\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @6.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb8, unwind: bb21]\n+19:17-19:23: @8[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @8[7]: _51 = const main::promoted[1]\n+20:22-20:34: @8[8]: _15 = &amp;(*_51)\n+20:22-20:34: @8[9]: _14 = &amp;(*_15)\n+20:22-20:34: @8[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @8[18]: _22 = &amp;_9\n+20:13-20:44: @8[19]: _21 = (move _22,)\n+20:13-20:44: @8[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @8[26]: _25 = &amp;(*_23)\n+20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @8.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n+20:13-20:44: @9[2]: _20 = [move _24]\n+20:13-20:44: @9[5]: _19 = &amp;_20\n+20:13-20:44: @9[6]: _18 = &amp;(*_19)\n+20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @9.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n+20:13-20:44: @10.Call: _11 = _print(move _12) -&gt; [return: bb11, unwind: bb21]\n+20:13-20:44: @11[6]: _10 = const ()\n+18:27-21:10: @11[8]: _6 = const ()\">            let result = might_overflow(10);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @6.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb8, unwind: bb21]\n+19:17-19:23: @8[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @8[7]: _51 = const main::promoted[1]\n+20:22-20:34: @8[8]: _15 = &amp;(*_51)\n+20:22-20:34: @8[9]: _14 = &amp;(*_15)\n+20:22-20:34: @8[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @8[18]: _22 = &amp;_9\n+20:13-20:44: @8[19]: _21 = (move _22,)\n+20:13-20:44: @8[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @8[26]: _25 = &amp;(*_23)\n+20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @8.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n+20:13-20:44: @9[2]: _20 = [move _24]\n+20:13-20:44: @9[5]: _19 = &amp;_20\n+20:13-20:44: @9[6]: _18 = &amp;(*_19)\n+20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @9.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n+20:13-20:44: @10.Call: _11 = _print(move _12) -&gt; [return: bb11, unwind: bb21]\n+20:13-20:44: @11[6]: _10 = const ()\n+18:27-21:10: @11[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @6.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb8, unwind: bb21]\n+19:17-19:23: @8[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @8[7]: _51 = const main::promoted[1]\n+20:22-20:34: @8[8]: _15 = &amp;(*_51)\n+20:22-20:34: @8[9]: _14 = &amp;(*_15)\n+20:22-20:34: @8[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @8[18]: _22 = &amp;_9\n+20:13-20:44: @8[19]: _21 = (move _22,)\n+20:13-20:44: @8[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @8[26]: _25 = &amp;(*_23)\n+20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @8.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n+20:13-20:44: @9[2]: _20 = [move _24]\n+20:13-20:44: @9[5]: _19 = &amp;_20\n+20:13-20:44: @9[6]: _18 = &amp;(*_19)\n+20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @9.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n+20:13-20:44: @10.Call: _11 = _print(move _12) -&gt; [return: bb11, unwind: bb21]\n+20:13-20:44: @11[6]: _10 = const ()\n+18:27-21:10: @11[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:19-21:28: @7[2]: _28 = _1\n+21:19-21:32: @7[3]: _27 = Lt(move _28, const 5_i32)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n+22:17-22:23: @14[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @14[7]: _50 = const main::promoted[0]\n+23:22-23:34: @14[8]: _35 = &amp;(*_50)\n+23:22-23:34: @14[9]: _34 = &amp;(*_35)\n+23:22-23:34: @14[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @14[18]: _42 = &amp;_29\n+23:13-23:44: @14[19]: _41 = (move _42,)\n+23:13-23:44: @14[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @14[26]: _45 = &amp;(*_43)\n+23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @14.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n+23:13-23:44: @15[2]: _40 = [move _44]\n+23:13-23:44: @15[5]: _39 = &amp;_40\n+23:13-23:44: @15[6]: _38 = &amp;(*_39)\n+23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @15.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n+23:13-23:44: @16.Call: _31 = _print(move _32) -&gt; [return: bb17, unwind: bb21]\n+23:13-23:44: @17[6]: _30 = const ()\n+21:33-24:10: @17[8]: _6 = const ()\"><span class=\"annotation\">@12,14,15,16,17\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n+22:17-22:23: @14[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @14[7]: _50 = const main::promoted[0]\n+23:22-23:34: @14[8]: _35 = &amp;(*_50)\n+23:22-23:34: @14[9]: _34 = &amp;(*_35)\n+23:22-23:34: @14[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @14[18]: _42 = &amp;_29\n+23:13-23:44: @14[19]: _41 = (move _42,)\n+23:13-23:44: @14[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @14[26]: _45 = &amp;(*_43)\n+23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @14.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n+23:13-23:44: @15[2]: _40 = [move _44]\n+23:13-23:44: @15[5]: _39 = &amp;_40\n+23:13-23:44: @15[6]: _38 = &amp;(*_39)\n+23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @15.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n+23:13-23:44: @16.Call: _31 = _print(move _32) -&gt; [return: bb17, unwind: bb21]\n+23:13-23:44: @17[6]: _30 = const ()\n+21:33-24:10: @17[8]: _6 = const ()\">            let result = might_overflow(1);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n+22:17-22:23: @14[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @14[7]: _50 = const main::promoted[0]\n+23:22-23:34: @14[8]: _35 = &amp;(*_50)\n+23:22-23:34: @14[9]: _34 = &amp;(*_35)\n+23:22-23:34: @14[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @14[18]: _42 = &amp;_29\n+23:13-23:44: @14[19]: _41 = (move _42,)\n+23:13-23:44: @14[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @14[26]: _45 = &amp;(*_43)\n+23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @14.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n+23:13-23:44: @15[2]: _40 = [move _44]\n+23:13-23:44: @15[5]: _39 = &amp;_40\n+23:13-23:44: @15[6]: _38 = &amp;(*_39)\n+23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @15.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n+23:13-23:44: @16.Call: _31 = _print(move _32) -&gt; [return: bb17, unwind: bb21]\n+23:13-23:44: @17[6]: _30 = const ()\n+21:33-24:10: @17[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n+22:17-22:23: @14[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @14[7]: _50 = const main::promoted[0]\n+23:22-23:34: @14[8]: _35 = &amp;(*_50)\n+23:22-23:34: @14[9]: _34 = &amp;(*_35)\n+23:22-23:34: @14[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @14[18]: _42 = &amp;_29\n+23:13-23:44: @14[19]: _41 = (move _42,)\n+23:13-23:44: @14[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @14[26]: _45 = &amp;(*_43)\n+23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @14.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n+23:13-23:44: @15[2]: _40 = [move _44]\n+23:13-23:44: @15[5]: _39 = &amp;_40\n+23:13-23:44: @15[6]: _38 = &amp;(*_39)\n+23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @15.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n+23:13-23:44: @16.Call: _31 = _print(move _32) -&gt; [return: bb17, unwind: bb21]\n+23:13-23:44: @17[6]: _30 = const ()\n+21:33-24:10: @17[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@12,14,15,16,17</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:10-24:10: @13[0]: _6 = const ()\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @19[2]: _47 = CheckedSub(_1, const 1_i32)\n+25:9-25:23: @20[0]: _1 = move (_47.0: i32)\"><span class=\"annotation\">@19,20\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:8-27:10: @4[4]: _49 = ()\n 27:5-27:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _49)"}, {"sha": "f86cc4b2d2a0624ccfa4cdda7f1aa8c0bb07827f", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.overflow/overflow.might_overflow.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 319, "deletions": 321, "changes": 640, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -70,327 +70,325 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:14: @0[3]: _4 = _1\n-5:8-5:18: @0[4]: _3 = Gt(move _4, const 5_u32)\n-5:8-5:18: @0[6]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0\u298a</span>fn might_overflow(to_add: u32) -&gt; u32 {</span></span>\n+5:8-5:18: @0[4]: _3 = Gt(move _4, const 5_u32)\"><span class=\"annotation\">@0\u298a</span>fn might_overflow(to_add: u32) -&gt; u32 {</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:14: @0[3]: _4 = _1\n-5:8-5:18: @0[4]: _3 = Gt(move _4, const 5_u32)\n-5:8-5:18: @0[6]: FakeRead(ForMatchedPlace, _3)\">    if to_add &gt; 5<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @3[6]: _61 = const might_overflow::promoted[4]\n-6:18-6:47: @3[7]: _10 = &amp;(*_61)\n-6:18-6:47: @3[8]: _9 = &amp;(*_10)\n-6:18-6:47: @3[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-6:9-6:49: @3[15]: _16 = ()\n-6:9-6:49: @3[16]: FakeRead(ForMatchedPlace, _16)\n-6:9-6:49: @3[17]: _60 = const might_overflow::promoted[3]\n-6:9-6:49: @3[18]: _14 = &amp;(*_60)\n-6:9-6:49: @3[19]: _13 = &amp;(*_14)\n-6:9-6:49: @3[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:49: @3.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb4, unwind: bb15]\n-6:9-6:49: @4.Call: _6 = _print(move _7) -&gt; [return: bb5, unwind: bb15]\n-6:9-6:49: @5[5]: _5 = const ()\n-5:19-7:6: @5[7]: _2 = const ()\"><span class=\"annotation\">@1,3,4,5\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @3[6]: _61 = const might_overflow::promoted[4]\n-6:18-6:47: @3[7]: _10 = &amp;(*_61)\n-6:18-6:47: @3[8]: _9 = &amp;(*_10)\n-6:18-6:47: @3[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-6:9-6:49: @3[15]: _16 = ()\n-6:9-6:49: @3[16]: FakeRead(ForMatchedPlace, _16)\n-6:9-6:49: @3[17]: _60 = const might_overflow::promoted[3]\n-6:9-6:49: @3[18]: _14 = &amp;(*_60)\n-6:9-6:49: @3[19]: _13 = &amp;(*_14)\n-6:9-6:49: @3[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:49: @3.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb4, unwind: bb15]\n-6:9-6:49: @4.Call: _6 = _print(move _7) -&gt; [return: bb5, unwind: bb15]\n-6:9-6:49: @5[5]: _5 = const ()\n-5:19-7:6: @5[7]: _2 = const ()\">        println!(\"this will probably overflow\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @3[6]: _61 = const might_overflow::promoted[4]\n-6:18-6:47: @3[7]: _10 = &amp;(*_61)\n-6:18-6:47: @3[8]: _9 = &amp;(*_10)\n-6:18-6:47: @3[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-6:9-6:49: @3[15]: _16 = ()\n-6:9-6:49: @3[16]: FakeRead(ForMatchedPlace, _16)\n-6:9-6:49: @3[17]: _60 = const might_overflow::promoted[3]\n-6:9-6:49: @3[18]: _14 = &amp;(*_60)\n-6:9-6:49: @3[19]: _13 = &amp;(*_14)\n-6:9-6:49: @3[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:49: @3.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb4, unwind: bb15]\n-6:9-6:49: @4.Call: _6 = _print(move _7) -&gt; [return: bb5, unwind: bb15]\n-6:9-6:49: @5[5]: _5 = const ()\n-5:19-7:6: @5[7]: _2 = const ()\">    }<span class=\"annotation\">\u2989@1,3,4,5</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2[0]: _2 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @7[9]: _24 = &amp;(*_59)\n-9:14-9:38: @7[10]: _23 = &amp;(*_24)\n-9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @7[19]: _31 = &amp;_17\n-9:48-9:54: @7[21]: _32 = &amp;_1\n-9:5-9:56: @7[22]: _30 = (move _31, move _32)\n-9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @7[32]: _36 = &amp;(*_33)\n-9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n-9:5-9:56: @8[4]: _39 = &amp;(*_34)\n-9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n-9:5-9:56: @9[2]: _29 = [move _35, move _38]\n-9:5-9:56: @9[7]: _28 = &amp;_29\n-9:5-9:56: @9[8]: _27 = &amp;(*_28)\n-9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n-9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n-9:5-9:56: @11[6]: _19 = const ()\n-10:18-10:24: @11[10]: _42 = _1\n-10:27-10:33: @11[12]: _43 = _17\n-10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @12[11]: _50 = &amp;(*_58)\n-11:14-11:47: @12[12]: _49 = &amp;(*_50)\n-11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @12[19]: _56 = ()\n-11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @12[22]: _54 = &amp;(*_57)\n-11:5-11:49: @12[23]: _53 = &amp;(*_54)\n-11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n-11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n-11:5-11:49: @14[5]: _45 = const ()\n-12:5-12:11: @14[7]: _0 = _41\n-13:2-13:2: @14.Return: return\"><span class=\"annotation\">@6,7,8,9,10,11,12,13,14\u298a</span>add_to = u32::MAX - 5;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @7[9]: _24 = &amp;(*_59)\n-9:14-9:38: @7[10]: _23 = &amp;(*_24)\n-9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @7[19]: _31 = &amp;_17\n-9:48-9:54: @7[21]: _32 = &amp;_1\n-9:5-9:56: @7[22]: _30 = (move _31, move _32)\n-9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @7[32]: _36 = &amp;(*_33)\n-9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n-9:5-9:56: @8[4]: _39 = &amp;(*_34)\n-9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n-9:5-9:56: @9[2]: _29 = [move _35, move _38]\n-9:5-9:56: @9[7]: _28 = &amp;_29\n-9:5-9:56: @9[8]: _27 = &amp;(*_28)\n-9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n-9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n-9:5-9:56: @11[6]: _19 = const ()\n-10:18-10:24: @11[10]: _42 = _1\n-10:27-10:33: @11[12]: _43 = _17\n-10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @12[11]: _50 = &amp;(*_58)\n-11:14-11:47: @12[12]: _49 = &amp;(*_50)\n-11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @12[19]: _56 = ()\n-11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @12[22]: _54 = &amp;(*_57)\n-11:5-11:49: @12[23]: _53 = &amp;(*_54)\n-11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n-11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n-11:5-11:49: @14[5]: _45 = const ()\n-12:5-12:11: @14[7]: _0 = _41\n-13:2-13:2: @14.Return: return\">    println!(\"does {} + {} overflow?\", add_to, to_add);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @7[9]: _24 = &amp;(*_59)\n-9:14-9:38: @7[10]: _23 = &amp;(*_24)\n-9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @7[19]: _31 = &amp;_17\n-9:48-9:54: @7[21]: _32 = &amp;_1\n-9:5-9:56: @7[22]: _30 = (move _31, move _32)\n-9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @7[32]: _36 = &amp;(*_33)\n-9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n-9:5-9:56: @8[4]: _39 = &amp;(*_34)\n-9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n-9:5-9:56: @9[2]: _29 = [move _35, move _38]\n-9:5-9:56: @9[7]: _28 = &amp;_29\n-9:5-9:56: @9[8]: _27 = &amp;(*_28)\n-9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n-9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n-9:5-9:56: @11[6]: _19 = const ()\n-10:18-10:24: @11[10]: _42 = _1\n-10:27-10:33: @11[12]: _43 = _17\n-10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @12[11]: _50 = &amp;(*_58)\n-11:14-11:47: @12[12]: _49 = &amp;(*_50)\n-11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @12[19]: _56 = ()\n-11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @12[22]: _54 = &amp;(*_57)\n-11:5-11:49: @12[23]: _53 = &amp;(*_54)\n-11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n-11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n-11:5-11:49: @14[5]: _45 = const ()\n-12:5-12:11: @14[7]: _0 = _41\n-13:2-13:2: @14.Return: return\">    let result = to_add + add_to;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @7[9]: _24 = &amp;(*_59)\n-9:14-9:38: @7[10]: _23 = &amp;(*_24)\n-9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @7[19]: _31 = &amp;_17\n-9:48-9:54: @7[21]: _32 = &amp;_1\n-9:5-9:56: @7[22]: _30 = (move _31, move _32)\n-9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @7[32]: _36 = &amp;(*_33)\n-9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n-9:5-9:56: @8[4]: _39 = &amp;(*_34)\n-9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n-9:5-9:56: @9[2]: _29 = [move _35, move _38]\n-9:5-9:56: @9[7]: _28 = &amp;_29\n-9:5-9:56: @9[8]: _27 = &amp;(*_28)\n-9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n-9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n-9:5-9:56: @11[6]: _19 = const ()\n-10:18-10:24: @11[10]: _42 = _1\n-10:27-10:33: @11[12]: _43 = _17\n-10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @12[11]: _50 = &amp;(*_58)\n-11:14-11:47: @12[12]: _49 = &amp;(*_50)\n-11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @12[19]: _56 = ()\n-11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @12[22]: _54 = &amp;(*_57)\n-11:5-11:49: @12[23]: _53 = &amp;(*_54)\n-11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n-11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n-11:5-11:49: @14[5]: _45 = const ()\n-12:5-12:11: @14[7]: _0 = _41\n-13:2-13:2: @14.Return: return\">    println!(\"continuing after overflow check\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @7[9]: _24 = &amp;(*_59)\n-9:14-9:38: @7[10]: _23 = &amp;(*_24)\n-9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @7[19]: _31 = &amp;_17\n-9:48-9:54: @7[21]: _32 = &amp;_1\n-9:5-9:56: @7[22]: _30 = (move _31, move _32)\n-9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @7[32]: _36 = &amp;(*_33)\n-9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n-9:5-9:56: @8[4]: _39 = &amp;(*_34)\n-9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n-9:5-9:56: @9[2]: _29 = [move _35, move _38]\n-9:5-9:56: @9[7]: _28 = &amp;_29\n-9:5-9:56: @9[8]: _27 = &amp;(*_28)\n-9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n-9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n-9:5-9:56: @11[6]: _19 = const ()\n-10:18-10:24: @11[10]: _42 = _1\n-10:27-10:33: @11[12]: _43 = _17\n-10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @12[11]: _50 = &amp;(*_58)\n-11:14-11:47: @12[12]: _49 = &amp;(*_50)\n-11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @12[19]: _56 = ()\n-11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @12[22]: _54 = &amp;(*_57)\n-11:5-11:49: @12[23]: _53 = &amp;(*_54)\n-11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n-11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n-11:5-11:49: @14[5]: _45 = const ()\n-12:5-12:11: @14[7]: _0 = _41\n-13:2-13:2: @14.Return: return\">    result</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @7[9]: _24 = &amp;(*_59)\n-9:14-9:38: @7[10]: _23 = &amp;(*_24)\n-9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @7[19]: _31 = &amp;_17\n-9:48-9:54: @7[21]: _32 = &amp;_1\n-9:5-9:56: @7[22]: _30 = (move _31, move _32)\n-9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @7[32]: _36 = &amp;(*_33)\n-9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n-9:5-9:56: @8[4]: _39 = &amp;(*_34)\n-9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n-9:5-9:56: @9[2]: _29 = [move _35, move _38]\n-9:5-9:56: @9[7]: _28 = &amp;_29\n-9:5-9:56: @9[8]: _27 = &amp;(*_28)\n-9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n-9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n-9:5-9:56: @11[6]: _19 = const ()\n-10:18-10:24: @11[10]: _42 = _1\n-10:27-10:33: @11[12]: _43 = _17\n-10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @12[11]: _50 = &amp;(*_58)\n-11:14-11:47: @12[12]: _49 = &amp;(*_50)\n-11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @12[19]: _56 = ()\n-11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @12[22]: _54 = &amp;(*_57)\n-11:5-11:49: @12[23]: _53 = &amp;(*_54)\n-11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n-11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n-11:5-11:49: @14[5]: _45 = const ()\n-12:5-12:11: @14[7]: _0 = _41\n-13:2-13:2: @14.Return: return\">}<span class=\"annotation\">\u2989@6,7,8,9,10,11,12,13,14</span></span></span></span></div>\n+5:8-5:18: @0[4]: _3 = Gt(move _4, const 5_u32)\">    if to_add &gt; 5<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @1[6]: _61 = const might_overflow::promoted[4]\n+6:18-6:47: @1[7]: _10 = &amp;(*_61)\n+6:18-6:47: @1[8]: _9 = &amp;(*_10)\n+6:18-6:47: @1[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:49: @1[15]: _16 = ()\n+6:9-6:49: @1[16]: FakeRead(ForMatchedPlace, _16)\n+6:9-6:49: @1[17]: _60 = const might_overflow::promoted[3]\n+6:9-6:49: @1[18]: _14 = &amp;(*_60)\n+6:9-6:49: @1[19]: _13 = &amp;(*_14)\n+6:9-6:49: @1[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:49: @1.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n+6:9-6:49: @3.Call: _6 = _print(move _7) -&gt; [return: bb4, unwind: bb14]\n+6:9-6:49: @4[5]: _5 = const ()\n+5:19-7:6: @4[7]: _2 = const ()\"><span class=\"annotation\">@1,3,4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @1[6]: _61 = const might_overflow::promoted[4]\n+6:18-6:47: @1[7]: _10 = &amp;(*_61)\n+6:18-6:47: @1[8]: _9 = &amp;(*_10)\n+6:18-6:47: @1[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:49: @1[15]: _16 = ()\n+6:9-6:49: @1[16]: FakeRead(ForMatchedPlace, _16)\n+6:9-6:49: @1[17]: _60 = const might_overflow::promoted[3]\n+6:9-6:49: @1[18]: _14 = &amp;(*_60)\n+6:9-6:49: @1[19]: _13 = &amp;(*_14)\n+6:9-6:49: @1[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:49: @1.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n+6:9-6:49: @3.Call: _6 = _print(move _7) -&gt; [return: bb4, unwind: bb14]\n+6:9-6:49: @4[5]: _5 = const ()\n+5:19-7:6: @4[7]: _2 = const ()\">        println!(\"this will probably overflow\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @1[6]: _61 = const might_overflow::promoted[4]\n+6:18-6:47: @1[7]: _10 = &amp;(*_61)\n+6:18-6:47: @1[8]: _9 = &amp;(*_10)\n+6:18-6:47: @1[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:49: @1[15]: _16 = ()\n+6:9-6:49: @1[16]: FakeRead(ForMatchedPlace, _16)\n+6:9-6:49: @1[17]: _60 = const might_overflow::promoted[3]\n+6:9-6:49: @1[18]: _14 = &amp;(*_60)\n+6:9-6:49: @1[19]: _13 = &amp;(*_14)\n+6:9-6:49: @1[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:49: @1.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n+6:9-6:49: @3.Call: _6 = _print(move _7) -&gt; [return: bb4, unwind: bb14]\n+6:9-6:49: @4[5]: _5 = const ()\n+5:19-7:6: @4[7]: _2 = const ()\">    }<span class=\"annotation\">\u2989@1,3,4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2[0]: _2 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @6[9]: _24 = &amp;(*_59)\n+9:14-9:38: @6[10]: _23 = &amp;(*_24)\n+9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @6[19]: _31 = &amp;_17\n+9:48-9:54: @6[21]: _32 = &amp;_1\n+9:5-9:56: @6[22]: _30 = (move _31, move _32)\n+9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @6[32]: _36 = &amp;(*_33)\n+9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @7[4]: _39 = &amp;(*_34)\n+9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @8[2]: _29 = [move _35, move _38]\n+9:5-9:56: @8[7]: _28 = &amp;_29\n+9:5-9:56: @8[8]: _27 = &amp;(*_28)\n+9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @10[6]: _19 = const ()\n+10:18-10:24: @10[10]: _42 = _1\n+10:27-10:33: @10[12]: _43 = _17\n+10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @11[11]: _50 = &amp;(*_58)\n+11:14-11:47: @11[12]: _49 = &amp;(*_50)\n+11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @11[19]: _56 = ()\n+11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @11[22]: _54 = &amp;(*_57)\n+11:5-11:49: @11[23]: _53 = &amp;(*_54)\n+11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @13[5]: _45 = const ()\n+12:5-12:11: @13[7]: _0 = _41\n+13:2-13:2: @13.Return: return\"><span class=\"annotation\">@5,6,7,8,9,10,11,12,13\u298a</span>add_to = u32::MAX - 5;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @6[9]: _24 = &amp;(*_59)\n+9:14-9:38: @6[10]: _23 = &amp;(*_24)\n+9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @6[19]: _31 = &amp;_17\n+9:48-9:54: @6[21]: _32 = &amp;_1\n+9:5-9:56: @6[22]: _30 = (move _31, move _32)\n+9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @6[32]: _36 = &amp;(*_33)\n+9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @7[4]: _39 = &amp;(*_34)\n+9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @8[2]: _29 = [move _35, move _38]\n+9:5-9:56: @8[7]: _28 = &amp;_29\n+9:5-9:56: @8[8]: _27 = &amp;(*_28)\n+9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @10[6]: _19 = const ()\n+10:18-10:24: @10[10]: _42 = _1\n+10:27-10:33: @10[12]: _43 = _17\n+10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @11[11]: _50 = &amp;(*_58)\n+11:14-11:47: @11[12]: _49 = &amp;(*_50)\n+11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @11[19]: _56 = ()\n+11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @11[22]: _54 = &amp;(*_57)\n+11:5-11:49: @11[23]: _53 = &amp;(*_54)\n+11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @13[5]: _45 = const ()\n+12:5-12:11: @13[7]: _0 = _41\n+13:2-13:2: @13.Return: return\">    println!(\"does {} + {} overflow?\", add_to, to_add);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @6[9]: _24 = &amp;(*_59)\n+9:14-9:38: @6[10]: _23 = &amp;(*_24)\n+9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @6[19]: _31 = &amp;_17\n+9:48-9:54: @6[21]: _32 = &amp;_1\n+9:5-9:56: @6[22]: _30 = (move _31, move _32)\n+9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @6[32]: _36 = &amp;(*_33)\n+9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @7[4]: _39 = &amp;(*_34)\n+9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @8[2]: _29 = [move _35, move _38]\n+9:5-9:56: @8[7]: _28 = &amp;_29\n+9:5-9:56: @8[8]: _27 = &amp;(*_28)\n+9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @10[6]: _19 = const ()\n+10:18-10:24: @10[10]: _42 = _1\n+10:27-10:33: @10[12]: _43 = _17\n+10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @11[11]: _50 = &amp;(*_58)\n+11:14-11:47: @11[12]: _49 = &amp;(*_50)\n+11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @11[19]: _56 = ()\n+11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @11[22]: _54 = &amp;(*_57)\n+11:5-11:49: @11[23]: _53 = &amp;(*_54)\n+11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @13[5]: _45 = const ()\n+12:5-12:11: @13[7]: _0 = _41\n+13:2-13:2: @13.Return: return\">    let result = to_add + add_to;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @6[9]: _24 = &amp;(*_59)\n+9:14-9:38: @6[10]: _23 = &amp;(*_24)\n+9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @6[19]: _31 = &amp;_17\n+9:48-9:54: @6[21]: _32 = &amp;_1\n+9:5-9:56: @6[22]: _30 = (move _31, move _32)\n+9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @6[32]: _36 = &amp;(*_33)\n+9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @7[4]: _39 = &amp;(*_34)\n+9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @8[2]: _29 = [move _35, move _38]\n+9:5-9:56: @8[7]: _28 = &amp;_29\n+9:5-9:56: @8[8]: _27 = &amp;(*_28)\n+9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @10[6]: _19 = const ()\n+10:18-10:24: @10[10]: _42 = _1\n+10:27-10:33: @10[12]: _43 = _17\n+10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @11[11]: _50 = &amp;(*_58)\n+11:14-11:47: @11[12]: _49 = &amp;(*_50)\n+11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @11[19]: _56 = ()\n+11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @11[22]: _54 = &amp;(*_57)\n+11:5-11:49: @11[23]: _53 = &amp;(*_54)\n+11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @13[5]: _45 = const ()\n+12:5-12:11: @13[7]: _0 = _41\n+13:2-13:2: @13.Return: return\">    println!(\"continuing after overflow check\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @6[9]: _24 = &amp;(*_59)\n+9:14-9:38: @6[10]: _23 = &amp;(*_24)\n+9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @6[19]: _31 = &amp;_17\n+9:48-9:54: @6[21]: _32 = &amp;_1\n+9:5-9:56: @6[22]: _30 = (move _31, move _32)\n+9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @6[32]: _36 = &amp;(*_33)\n+9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @7[4]: _39 = &amp;(*_34)\n+9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @8[2]: _29 = [move _35, move _38]\n+9:5-9:56: @8[7]: _28 = &amp;_29\n+9:5-9:56: @8[8]: _27 = &amp;(*_28)\n+9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @10[6]: _19 = const ()\n+10:18-10:24: @10[10]: _42 = _1\n+10:27-10:33: @10[12]: _43 = _17\n+10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @11[11]: _50 = &amp;(*_58)\n+11:14-11:47: @11[12]: _49 = &amp;(*_50)\n+11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @11[19]: _56 = ()\n+11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @11[22]: _54 = &amp;(*_57)\n+11:5-11:49: @11[23]: _53 = &amp;(*_54)\n+11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @13[5]: _45 = const ()\n+12:5-12:11: @13[7]: _0 = _41\n+13:2-13:2: @13.Return: return\">    result</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @6[9]: _24 = &amp;(*_59)\n+9:14-9:38: @6[10]: _23 = &amp;(*_24)\n+9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @6[19]: _31 = &amp;_17\n+9:48-9:54: @6[21]: _32 = &amp;_1\n+9:5-9:56: @6[22]: _30 = (move _31, move _32)\n+9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @6[32]: _36 = &amp;(*_33)\n+9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @7[4]: _39 = &amp;(*_34)\n+9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @8[2]: _29 = [move _35, move _38]\n+9:5-9:56: @8[7]: _28 = &amp;_29\n+9:5-9:56: @8[8]: _27 = &amp;(*_28)\n+9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @10[6]: _19 = const ()\n+10:18-10:24: @10[10]: _42 = _1\n+10:27-10:33: @10[12]: _43 = _17\n+10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @11[11]: _50 = &amp;(*_58)\n+11:14-11:47: @11[12]: _49 = &amp;(*_50)\n+11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @11[19]: _56 = ()\n+11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @11[22]: _54 = &amp;(*_57)\n+11:5-11:49: @11[23]: _53 = &amp;(*_54)\n+11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @13[5]: _45 = const ()\n+12:5-12:11: @13[7]: _0 = _41\n+13:2-13:2: @13.Return: return\">}<span class=\"annotation\">\u2989@5,6,7,8,9,10,11,12,13</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "5b097f118e3a8779afc97e20ed722dc0c93115c5", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.panic_unwind/panic_unwind.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -77,22 +77,20 @@\n 15:11-15:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n 15:11-15:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:12-16:21: @5[3]: _8 = _1\n-16:12-16:26: @5[4]: _7 = Eq(move _8, const 1_i32)\n-16:12-16:26: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @8.Call: _9 = might_panic(const true) -&gt; [return: bb9, unwind: bb17]\n-16:27-18:10: @9[1]: _6 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @8.Call: _9 = might_panic(const true) -&gt; [return: bb9, unwind: bb17]\n-16:27-18:10: @9[1]: _6 = const ()\">            might_panic(true);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @8.Call: _9 = might_panic(const true) -&gt; [return: bb9, unwind: bb17]\n-16:27-18:10: @9[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:19-18:28: @7[2]: _11 = _1\n-18:19-18:32: @7[3]: _10 = Lt(move _11, const 5_i32)\n-18:19-18:32: @7[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @12.Call: _12 = might_panic(const false) -&gt; [return: bb13, unwind: bb17]\n-18:33-20:10: @13[1]: _6 = const ()\"><span class=\"annotation\">@10,12,13\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @12.Call: _12 = might_panic(const false) -&gt; [return: bb13, unwind: bb17]\n-18:33-20:10: @13[1]: _6 = const ()\">            might_panic(false);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @12.Call: _12 = might_panic(const false) -&gt; [return: bb13, unwind: bb17]\n-18:33-20:10: @13[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@10,12,13</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:10-20:10: @11[0]: _6 = const ()\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-21:23: @15[2]: _13 = CheckedSub(_1, const 1_i32)\n-21:9-21:23: @16[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@15,16\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@15,16</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+16:12-16:26: @5[4]: _7 = Eq(move _8, const 1_i32)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @6.Call: _9 = might_panic(const true) -&gt; [return: bb8, unwind: bb15]\n+16:27-18:10: @8[1]: _6 = const ()\"><span class=\"annotation\">@6,8\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @6.Call: _9 = might_panic(const true) -&gt; [return: bb8, unwind: bb15]\n+16:27-18:10: @8[1]: _6 = const ()\">            might_panic(true);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @6.Call: _9 = might_panic(const true) -&gt; [return: bb8, unwind: bb15]\n+16:27-18:10: @8[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:19-18:28: @7[2]: _11 = _1\n+18:19-18:32: @7[3]: _10 = Lt(move _11, const 5_i32)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @9.Call: _12 = might_panic(const false) -&gt; [return: bb11, unwind: bb15]\n+18:33-20:10: @11[1]: _6 = const ()\"><span class=\"annotation\">@9,11\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @9.Call: _12 = might_panic(const false) -&gt; [return: bb11, unwind: bb15]\n+18:33-20:10: @11[1]: _6 = const ()\">            might_panic(false);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @9.Call: _12 = might_panic(const false) -&gt; [return: bb11, unwind: bb15]\n+18:33-20:10: @11[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@9,11</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:10-20:10: @10[0]: _6 = const ()\"><span class=\"annotation\">@10\u298a</span>\u2038<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-21:23: @13[2]: _13 = CheckedSub(_1, const 1_i32)\n+21:9-21:23: @14[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@13,14\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@13,14</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:8-23:10: @4[4]: _15 = ()\n 23:5-23:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)"}, {"sha": "86d9875b47cb574d690dee3acb680a779fe46cc5", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.panic_unwind/panic_unwind.might_panic.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 49, "deletions": 50, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -70,36 +70,35 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>fn might_panic(should_panic: bool) <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\n-5:8-5:20: @0[2]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>should_panic<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:32: @3[6]: _33 = const might_panic::promoted[3]\n-6:18-6:32: @3[7]: _9 = &amp;(*_33)\n-6:18-6:32: @3[8]: _8 = &amp;(*_9)\n-6:18-6:32: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n-6:9-6:34: @3[15]: _15 = ()\n-6:9-6:34: @3[16]: FakeRead(ForMatchedPlace, _15)\n-6:9-6:34: @3[17]: _32 = const might_panic::promoted[2]\n-6:9-6:34: @3[18]: _13 = &amp;(*_32)\n-6:9-6:34: @3[19]: _12 = &amp;(*_13)\n-6:9-6:34: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:34: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n-6:9-6:34: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n-6:9-6:34: @5[5]: _4 = const ()\n-7:9-7:26: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb8\"><span class=\"annotation\">@1,3,4,5\u298a</span>println!(\"panicking...\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:32: @3[6]: _33 = const might_panic::promoted[3]\n-6:18-6:32: @3[7]: _9 = &amp;(*_33)\n-6:18-6:32: @3[8]: _8 = &amp;(*_9)\n-6:18-6:32: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n-6:9-6:34: @3[15]: _15 = ()\n-6:9-6:34: @3[16]: FakeRead(ForMatchedPlace, _15)\n-6:9-6:34: @3[17]: _32 = const might_panic::promoted[2]\n-6:9-6:34: @3[18]: _13 = &amp;(*_32)\n-6:9-6:34: @3[19]: _12 = &amp;(*_13)\n-6:9-6:34: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:34: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n-6:9-6:34: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n-6:9-6:34: @5[5]: _4 = const ()\n-7:9-7:26: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb8\">        panic!(\"panics\");<span class=\"annotation\">\u2989@1,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\"><span class=\"annotation\">@0\u298a</span>should_panic<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:32: @1[6]: _33 = const might_panic::promoted[3]\n+6:18-6:32: @1[7]: _9 = &amp;(*_33)\n+6:18-6:32: @1[8]: _8 = &amp;(*_9)\n+6:18-6:32: @1[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:34: @1[15]: _15 = ()\n+6:9-6:34: @1[16]: FakeRead(ForMatchedPlace, _15)\n+6:9-6:34: @1[17]: _32 = const might_panic::promoted[2]\n+6:9-6:34: @1[18]: _13 = &amp;(*_32)\n+6:9-6:34: @1[19]: _12 = &amp;(*_13)\n+6:9-6:34: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:34: @1.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n+6:9-6:34: @3.Call: _5 = _print(move _6) -&gt; [return: bb4, unwind: bb7]\n+6:9-6:34: @4[5]: _4 = const ()\n+7:9-7:26: @4.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb7\"><span class=\"annotation\">@1,3,4\u298a</span>println!(\"panicking...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:32: @1[6]: _33 = const might_panic::promoted[3]\n+6:18-6:32: @1[7]: _9 = &amp;(*_33)\n+6:18-6:32: @1[8]: _8 = &amp;(*_9)\n+6:18-6:32: @1[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:34: @1[15]: _15 = ()\n+6:9-6:34: @1[16]: FakeRead(ForMatchedPlace, _15)\n+6:9-6:34: @1[17]: _32 = const might_panic::promoted[2]\n+6:9-6:34: @1[18]: _13 = &amp;(*_32)\n+6:9-6:34: @1[19]: _12 = &amp;(*_13)\n+6:9-6:34: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:34: @1.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n+6:9-6:34: @3.Call: _5 = _print(move _6) -&gt; [return: bb4, unwind: bb7]\n+6:9-6:34: @4[5]: _4 = const ()\n+7:9-7:26: @4.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb7\">        panic!(\"panics\");<span class=\"annotation\">\u2989@1,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n 9:18-9:31: @2[7]: _23 = &amp;(*_31)\n 9:18-9:31: @2[8]: _22 = &amp;(*_23)\n@@ -110,11 +109,11 @@\n 9:9-9:33: @2[18]: _27 = &amp;(*_30)\n 9:9-9:33: @2[19]: _26 = &amp;(*_27)\n 9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n-9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n-9:9-9:33: @7[5]: _18 = const ()\n-8:12-10:6: @7[7]: _0 = const ()\n-11:2-11:2: @7.Return: return\"><span class=\"annotation\">@2,6,7\u298a</span>{</span></span>\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+9:9-9:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+9:9-9:33: @6[5]: _18 = const ()\n+8:12-10:6: @6[7]: _0 = const ()\n+11:2-11:2: @6.Return: return\"><span class=\"annotation\">@2,5,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n 9:18-9:31: @2[7]: _23 = &amp;(*_31)\n 9:18-9:31: @2[8]: _22 = &amp;(*_23)\n@@ -125,11 +124,11 @@\n 9:9-9:33: @2[18]: _27 = &amp;(*_30)\n 9:9-9:33: @2[19]: _26 = &amp;(*_27)\n 9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n-9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n-9:9-9:33: @7[5]: _18 = const ()\n-8:12-10:6: @7[7]: _0 = const ()\n-11:2-11:2: @7.Return: return\">        println!(\"Don't Panic\");</span></span>\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+9:9-9:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+9:9-9:33: @6[5]: _18 = const ()\n+8:12-10:6: @6[7]: _0 = const ()\n+11:2-11:2: @6.Return: return\">        println!(\"Don't Panic\");</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n 9:18-9:31: @2[7]: _23 = &amp;(*_31)\n 9:18-9:31: @2[8]: _22 = &amp;(*_23)\n@@ -140,11 +139,11 @@\n 9:9-9:33: @2[18]: _27 = &amp;(*_30)\n 9:9-9:33: @2[19]: _26 = &amp;(*_27)\n 9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n-9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n-9:9-9:33: @7[5]: _18 = const ()\n-8:12-10:6: @7[7]: _0 = const ()\n-11:2-11:2: @7.Return: return\">    }</span></span>\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+9:9-9:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+9:9-9:33: @6[5]: _18 = const ()\n+8:12-10:6: @6[7]: _0 = const ()\n+11:2-11:2: @6.Return: return\">    }</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n 9:18-9:31: @2[7]: _23 = &amp;(*_31)\n 9:18-9:31: @2[8]: _22 = &amp;(*_23)\n@@ -155,10 +154,10 @@\n 9:9-9:33: @2[18]: _27 = &amp;(*_30)\n 9:9-9:33: @2[19]: _26 = &amp;(*_27)\n 9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n-9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n-9:9-9:33: @7[5]: _18 = const ()\n-8:12-10:6: @7[7]: _0 = const ()\n-11:2-11:2: @7.Return: return\">}<span class=\"annotation\">\u2989@2,6,7</span></span></span></span></div>\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+9:9-9:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+9:9-9:33: @6[5]: _18 = const ()\n+8:12-10:6: @6[7]: _0 = const ()\n+11:2-11:2: @6.Return: return\">}<span class=\"annotation\">\u2989@2,5,6</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "f528b698d440fc0fa08c900626fd0b7f61abc126", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 62, "deletions": 75, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,138 +69,125 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+12:9-12:16: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+12:9-12:16: @3[6]: _7 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+12:9-12:16: @3[6]: _7 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+12:9-12:16: @3[6]: _7 = _1\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+12:9-12:16: @3[6]: _7 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+12:9-12:16: @3[6]: _7 = _1\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+12:9-12:16: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+12:9-12:16: @3[6]: _7 = _1\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+12:9-12:16: @3[6]: _7 = _1\">    if</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\n-12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:6-18:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+12:9-12:16: @3[6]: _7 = _1\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n+13:5-18:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n+13:5-18:6: @4[1]: _6 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n+13:5-18:6: @4[1]: _6 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n+13:5-18:6: @4[1]: _6 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n+13:5-18:6: @4[1]: _6 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n+13:5-18:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:6-18:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    loop</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n-23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n-23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@8,9\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n-23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n-23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">                ==</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n-23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n-23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">            0<span class=\"annotation\">\u2989@8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @8[3]: _11 = _5\n+23:13-25:14: @8[4]: _10 = Eq(move _11, const 0_i32)\"><span class=\"annotation\">@7,8\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @8[3]: _11 = _5\n+23:13-25:14: @8[4]: _10 = Eq(move _11, const 0_i32)\">                ==</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @8[3]: _11 = _5\n+23:13-25:14: @8[4]: _10 = Eq(move _11, const 0_i32)\">            0<span class=\"annotation\">\u2989@7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:18: @12[0]: _0 = const ()\"><span class=\"annotation\">@10,12\u298a</span>break<span class=\"annotation\">\u2989@10,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:18: @9[0]: _0 = const ()\"><span class=\"annotation\">@9\u298a</span>break<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @11[0]: _9 = const ()\n-30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\n-30:9-32:10: @13[0]: _5 = move (_13.0: i32)\"><span class=\"annotation\">@11,13\u298a</span></span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @11[0]: _9 = const ()\n-30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\n-30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @11[0]: _9 = const ()\n-30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\n-30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        -=</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @11[0]: _9 = const ()\n-30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\n-30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@11,13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @10[0]: _9 = const ()\n+30:9-32:10: @10[3]: _13 = CheckedSub(_5, const 1_i32)\n+30:9-32:10: @11[0]: _5 = move (_13.0: i32)\"><span class=\"annotation\">@10,11\u298a</span></span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @10[0]: _9 = const ()\n+30:9-32:10: @10[3]: _13 = CheckedSub(_5, const 1_i32)\n+30:9-32:10: @11[0]: _5 = move (_13.0: i32)\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @10[0]: _9 = const ()\n+30:9-32:10: @10[3]: _13 = CheckedSub(_5, const 1_i32)\n+30:9-32:10: @11[0]: _5 = move (_13.0: i32)\">        -=</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @10[0]: _9 = const ()\n+30:9-32:10: @10[3]: _13 = CheckedSub(_5, const 1_i32)\n+30:9-32:10: @11[0]: _5 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:2-35:2: @12.Return: return\"><span class=\"annotation\">@10,12\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:2-35:2: @9.Return: return\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "8e49e45b86e11c1a92669ce0f7aec832e1ca1e09", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.simple_match/simple_match.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 95, "deletions": 103, "changes": 198, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,162 +69,154 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+10:8-10:15: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+10:8-10:15: @3[6]: _7 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+10:8-10:15: @3[6]: _7 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+10:8-10:15: @3[6]: _7 = _1\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+10:8-10:15: @3[6]: _7 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+10:8-10:15: @3[6]: _7 = _1\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\">    let mut countdown = 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+10:8-10:15: @3[6]: _7 = _1\">    let mut countdown = 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\n-10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\">        countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+10:8-10:15: @3[6]: _7 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @4[0]: _5 = const 0_i32\n+10:16-12:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @4[0]: _5 = const 0_i32\n+10:16-12:6: @4[1]: _6 = const ()\">        countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @4[0]: _5 = const 0_i32\n+10:16-12:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    for</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:9-15:10: @15[1]: _18 = ((_14 as Some).0: i32)\n-15:9-15:10: @15[3]: _19 = _18\n-15:9-15:10: @15[4]: _12 = move _19\n-15:9-15:10: @15[5]: _13 = const ()\"><span class=\"annotation\">@13,15,17\u298a</span>_<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:9-15:10: @14[1]: _18 = ((_14 as Some).0: i32)\n+15:9-15:10: @14[3]: _19 = _18\n+15:9-15:10: @14[4]: _12 = move _19\n+15:9-15:10: @14[5]: _13 = const ()\"><span class=\"annotation\">@12,14,16\u298a</span>_<span class=\"annotation\">\u2989@12,14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:13: @10[5]: _16 = &amp;mut _10\n-17:9-17:13: @10[6]: _15 = &amp;mut (*_16)\n-17:9-17:13: @10.Call: _14 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _15) -&gt; [return: bb11, unwind: bb22]\n-17:9-17:13: @11[1]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@9,10,11\u298a</span>0..2<span class=\"annotation\">\u2989@9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:13: @9[5]: _16 = &amp;mut _10\n+17:9-17:13: @9[6]: _15 = &amp;mut (*_16)\n+17:9-17:13: @9.Call: _14 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _15) -&gt; [return: bb10, unwind: bb21]\n+17:9-17:13: @10[1]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@8,9,10\u298a</span>0..2<span class=\"annotation\">\u2989@8,9,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let z</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        match</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@13,15,17\u298a</span>countdown<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:13-22:22: @14[13]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@12,14,16\u298a</span>countdown<span class=\"annotation\">\u2989@12,14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:14: @18[3]: _23 = _5\"><span class=\"annotation\">@18\u298a</span>x<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:14: @17[3]: _23 = _5\"><span class=\"annotation\">@17\u298a</span>x<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\"><span class=\"annotation\">@13,15,17\u298a</span>x</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                    &lt;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                1<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @16[4]: _26 = (*_24)\n+26:17-28:18: @16[5]: _25 = Lt(move _26, const 1_i32)\"><span class=\"annotation\">@12,14,16\u298a</span>x</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @16[4]: _26 = (*_24)\n+26:17-28:18: @16[5]: _25 = Lt(move _26, const 1_i32)\">                    &lt;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @16[4]: _26 = (*_24)\n+26:17-28:18: @16[5]: _25 = Lt(move _26, const 1_i32)\">                1<span class=\"annotation\">\u2989@12,14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\"><span class=\"annotation\">@18\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                z = countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                let y = countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                countdown = 10</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n-31:17-31:30: @18[6]: _22 = move _27\n-33:25-33:34: @18[9]: _28 = _5\n-33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @18[11]: _5 = const 10_i32\n-30:13-37:14: @18[12]: _21 = const ()\">            }<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n+31:17-31:30: @17[6]: _22 = move _27\n+33:25-33:34: @17[9]: _28 = _5\n+33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @17[11]: _5 = const 10_i32\n+30:13-37:14: @17[12]: _21 = const ()\"><span class=\"annotation\">@17\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n+31:17-31:30: @17[6]: _22 = move _27\n+33:25-33:34: @17[9]: _28 = _5\n+33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @17[11]: _5 = const 10_i32\n+30:13-37:14: @17[12]: _21 = const ()\">                z = countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n+31:17-31:30: @17[6]: _22 = move _27\n+33:25-33:34: @17[9]: _28 = _5\n+33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @17[11]: _5 = const 10_i32\n+30:13-37:14: @17[12]: _21 = const ()\">                ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n+31:17-31:30: @17[6]: _22 = move _27\n+33:25-33:34: @17[9]: _28 = _5\n+33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @17[11]: _5 = const 10_i32\n+30:13-37:14: @17[12]: _21 = const ()\">                let y = countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n+31:17-31:30: @17[6]: _22 = move _27\n+33:25-33:34: @17[9]: _28 = _5\n+33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @17[11]: _5 = const 10_i32\n+30:13-37:14: @17[12]: _21 = const ()\">                ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n+31:17-31:30: @17[6]: _22 = move _27\n+33:25-33:34: @17[9]: _28 = _5\n+33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @17[11]: _5 = const 10_i32\n+30:13-37:14: @17[12]: _21 = const ()\">                countdown = 10</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n+31:17-31:30: @17[6]: _22 = move _27\n+33:25-33:34: @17[9]: _28 = _5\n+33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @17[11]: _5 = const 10_i32\n+30:13-37:14: @17[12]: _21 = const ()\">                ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n+31:17-31:30: @17[6]: _22 = move _27\n+33:25-33:34: @17[9]: _28 = _5\n+33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @17[11]: _5 = const 10_i32\n+30:13-37:14: @17[12]: _21 = const ()\">            }<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            _</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"40:13-40:15: @16[0]: _21 = const ()\"><span class=\"annotation\">@16\u298a</span>{}<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"40:13-40:15: @15[0]: _21 = const ()\"><span class=\"annotation\">@15\u298a</span>{}<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:2-43:2: @12.Return: return\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:2-43:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "8cbd265c6a01c88e17cb0c131ab2243d15d735b2", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.tight_inf_loop/tight_inf_loop.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.tight_inf_loop%2Ftight_inf_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.tight_inf_loop%2Ftight_inf_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.tight_inf_loop%2Ftight_inf_loop.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,12 +69,10 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:8-2:13: @0[1]: _1 = const false\n-2:8-2:13: @0[2]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:8-2:13: @0[1]: _1 = const false\n-2:8-2:13: @0[2]: FakeRead(ForMatchedPlace, _1)\">    if false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:9-3:16: @4.FalseUnwind: falseUnwind -&gt; [real: bb5, cleanup: bb6]\n-3:14-3:16: @5[0]: _3 = const ()\"><span class=\"annotation\">@4,5\u298a</span>loop {}<span class=\"annotation\">\u2989@4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:8-2:13: @0[1]: _1 = const false\"><span class=\"annotation\">@0\u298a</span>fn main() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:8-2:13: @0[1]: _1 = const false\">    if false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:9-3:16: @3.FalseUnwind: falseUnwind -&gt; [real: bb4, cleanup: bb5]\n+3:14-3:16: @4[0]: _3 = const ()\"><span class=\"annotation\">@3,4\u298a</span>loop {}<span class=\"annotation\">\u2989@3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:6-4:6: @2[0]: _0 = const ()\n 5:2-5:2: @2.Return: return\"><span class=\"annotation\">@2\u298a</span></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"4:6-4:6: @2[0]: _0 = const ()"}, {"sha": "a8a3139334c962a34423e86c0f9923c9e9370843", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.try_error_result/try_error_result.call.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,16 +69,14 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\n-5:8-5:20: @0[2]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>fn call(return_error: bool) -&gt; Result&lt;(),()&gt; {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\n-5:8-5:20: @0[2]: FakeRead(ForMatchedPlace, _2)\">    if return_error<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:13-6:15: @3[1]: _3 = ()\n-6:9-6:16: @3[2]: _0 = std::result::Result::&lt;(), ()&gt;::Err(move _3)\"><span class=\"annotation\">@1,3\u298a</span>Err(())<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\"><span class=\"annotation\">@0\u298a</span>fn call(return_error: bool) -&gt; Result&lt;(),()&gt; {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\">    if return_error<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:13-6:15: @1[1]: _3 = ()\n+6:9-6:16: @1[2]: _0 = std::result::Result::&lt;(), ()&gt;::Err(move _3)\"><span class=\"annotation\">@1\u298a</span>Err(())<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:12-8:14: @2[1]: _4 = ()\n 8:9-8:15: @2[2]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _4)\"><span class=\"annotation\">@2\u298a</span>Ok(())<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:2-10:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:2-10:2: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "41404759c3da7775ba9300f99b538dab4574d661", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.try_error_result/try_error_result.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 21, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -84,51 +84,46 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @3[5]: _11 = &amp;mut _5\n 19:9-19:14: @3[6]: _10 = &amp;mut (*_11)\n-19:9-19:14: @3.Call: _9 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _10) -&gt; [return: bb4, unwind: bb40]\n+19:9-19:14: @3.Call: _9 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _10) -&gt; [return: bb4, unwind: bb39]\n 19:9-19:14: @4[1]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@2,3,4\u298a</span>0..10<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n 21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@6,8,9\u298a</span>countdown</span></span>\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\"><span class=\"annotation\">@6,8,9\u298a</span>countdown</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n 21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            -= 1</span></span>\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\">            -= 1</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n 21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        ;</span></span>\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\">        ;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n 21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        if</span></span>\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\">        if</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n 21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            countdown &lt; 5<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\">            countdown &lt; 5<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:41: @12.Call: _22 = call(const true) -&gt; [return: bb13, unwind: bb40]\"><span class=\"annotation\">@10,12,13,14\u298a</span>call(/*return_error=*/ true)<span class=\"annotation\">\u2989@10,12,13,14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:41-27:42: @18[1]: _24 = ((_21 as Err).0: ())\n-27:41-27:42: @18[4]: _27 = _24\n-27:41-27:42: @18.Call: _26 = &lt;() as From&lt;()&gt;&gt;::from(move _27) -&gt; [return: bb19, unwind: bb40]\"><span class=\"annotation\">@16,18,19,20\u298a</span>?<span class=\"annotation\">\u2989@16,18,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:13-28:42: @15.Call: _31 = call(const false) -&gt; [return: bb21, unwind: bb40]\"><span class=\"annotation\">@15,21,22\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@15,21,22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:42-28:43: @26[1]: _33 = ((_30 as Err).0: ())\n-28:42-28:43: @26[4]: _36 = _33\n-28:42-28:43: @26.Call: _35 = &lt;() as From&lt;()&gt;&gt;::from(move _36) -&gt; [return: bb27, unwind: bb40]\"><span class=\"annotation\">@24,26,27,28\u298a</span>?<span class=\"annotation\">\u2989@24,26,27,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:41: @10.Call: _22 = call(const true) -&gt; [return: bb12, unwind: bb39]\"><span class=\"annotation\">@10,12,13\u298a</span>call(/*return_error=*/ true)<span class=\"annotation\">\u2989@10,12,13</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:41-27:42: @17[1]: _24 = ((_21 as Err).0: ())\n+27:41-27:42: @17[4]: _27 = _24\n+27:41-27:42: @17.Call: _26 = &lt;() as From&lt;()&gt;&gt;::from(move _27) -&gt; [return: bb18, unwind: bb39]\"><span class=\"annotation\">@15,17,18,19\u298a</span>?<span class=\"annotation\">\u2989@15,17,18,19</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:13-28:42: @14.Call: _31 = call(const false) -&gt; [return: bb20, unwind: bb39]\"><span class=\"annotation\">@14,20,21\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@14,20,21</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:42-28:43: @25[1]: _33 = ((_30 as Err).0: ())\n+28:42-28:43: @25[4]: _36 = _33\n+28:42-28:43: @25.Call: _35 = &lt;() as From&lt;()&gt;&gt;::from(move _36) -&gt; [return: bb26, unwind: bb39]\"><span class=\"annotation\">@23,25,26,27\u298a</span>?<span class=\"annotation\">\u2989@23,25,26,27</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:42: @11.Call: _40 = call(const false) -&gt; [return: bb29, unwind: bb40]\"><span class=\"annotation\">@11,29,30\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@11,29,30</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:42-32:43: @34[1]: _42 = ((_39 as Err).0: ())\n-32:42-32:43: @34[4]: _45 = _42\n-32:42-32:43: @34.Call: _44 = &lt;() as From&lt;()&gt;&gt;::from(move _45) -&gt; [return: bb35, unwind: bb40]\"><span class=\"annotation\">@32,34,35,36\u298a</span>?<span class=\"annotation\">\u2989@32,34,35,36</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:42: @11.Call: _40 = call(const false) -&gt; [return: bb28, unwind: bb39]\"><span class=\"annotation\">@11,28,29\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@11,28,29</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:42-32:43: @33[1]: _42 = ((_39 as Err).0: ())\n+32:42-32:43: @33[4]: _45 = _42\n+32:42-32:43: @33.Call: _44 = &lt;() as From&lt;()&gt;&gt;::from(move _45) -&gt; [return: bb34, unwind: bb39]\"><span class=\"annotation\">@31,33,34,35\u298a</span>?<span class=\"annotation\">\u2989@31,33,34,35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:8-35:10: @5[9]: _47 = ()\n 35:5-35:11: @5[10]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _47)\"><span class=\"annotation\">@5\u298a</span>Ok(())<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"36:2-36:2: @39.Return: return\"><span class=\"annotation\">@39\u298a</span>\u2038<span class=\"annotation\">\u2989@39</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"36:2-36:2: @38.Return: return\"><span class=\"annotation\">@38\u298a</span>\u2038<span class=\"annotation\">\u2989@38</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "4af7b17986622977c3dc2064b9288ea3a0b6a84e", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.unused_function.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 18, "deletions": 22, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_function.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,51 +69,47 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 36\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+<div class=\"code\" style=\"counter-reset: line 36\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n 39:25-39:26: @3[2]: _5 = const 2_i32\n 39:9-39:22: @3[3]: FakeRead(ForLet, _5)\n 40:9-40:16: @3[6]: _7 = _1\n-40:8-40:16: @3[7]: _6 = Not(move _7)\n-40:8-40:16: @3[9]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn unused_function() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+40:8-40:16: @3[7]: _6 = Not(move _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn unused_function() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n 39:25-39:26: @3[2]: _5 = const 2_i32\n 39:9-39:22: @3[3]: FakeRead(ForLet, _5)\n 40:9-40:16: @3[6]: _7 = _1\n-40:8-40:16: @3[7]: _6 = Not(move _7)\n-40:8-40:16: @3[9]: FakeRead(ForMatchedPlace, _6)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+40:8-40:16: @3[7]: _6 = Not(move _7)\">    let is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n 39:25-39:26: @3[2]: _5 = const 2_i32\n 39:9-39:22: @3[3]: FakeRead(ForLet, _5)\n 40:9-40:16: @3[6]: _7 = _1\n-40:8-40:16: @3[7]: _6 = Not(move _7)\n-40:8-40:16: @3[9]: FakeRead(ForMatchedPlace, _6)\">    let mut countdown = 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+40:8-40:16: @3[7]: _6 = Not(move _7)\">    let mut countdown = 2;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n 39:25-39:26: @3[2]: _5 = const 2_i32\n 39:9-39:22: @3[3]: FakeRead(ForLet, _5)\n 40:9-40:16: @3[6]: _7 = _1\n-40:8-40:16: @3[7]: _6 = Not(move _7)\n-40:8-40:16: @3[9]: FakeRead(ForMatchedPlace, _6)\">    if !is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"41:9-41:23: @6[0]: _5 = const 20_i32\n-40:17-42:6: @6[1]: _0 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"41:9-41:23: @6[0]: _5 = const 20_i32\n-40:17-42:6: @6[1]: _0 = const ()\">        countdown = 20;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"41:9-41:23: @6[0]: _5 = const 20_i32\n-40:17-42:6: @6[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"42:6-42:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:2-43:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n+40:8-40:16: @3[7]: _6 = Not(move _7)\">    if !is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"41:9-41:23: @4[0]: _5 = const 20_i32\n+40:17-42:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"41:9-41:23: @4[0]: _5 = const 20_i32\n+40:17-42:6: @4[1]: _0 = const ()\">        countdown = 20;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"41:9-41:23: @4[0]: _5 = const 20_i32\n+40:17-42:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"42:6-42:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:2-43:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "6424e03fc71139e8b3a1e8f0092bfca249da6610", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.unused_private_function.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 18, "deletions": 22, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_private_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_private_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_private_function.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -69,51 +69,47 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 44\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+<div class=\"code\" style=\"counter-reset: line 44\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n 47:25-47:26: @3[2]: _5 = const 2_i32\n 47:9-47:22: @3[3]: FakeRead(ForLet, _5)\n 48:9-48:16: @3[6]: _7 = _1\n-48:8-48:16: @3[7]: _6 = Not(move _7)\n-48:8-48:16: @3[9]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn unused_private_function() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+48:8-48:16: @3[7]: _6 = Not(move _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn unused_private_function() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n 47:25-47:26: @3[2]: _5 = const 2_i32\n 47:9-47:22: @3[3]: FakeRead(ForLet, _5)\n 48:9-48:16: @3[6]: _7 = _1\n-48:8-48:16: @3[7]: _6 = Not(move _7)\n-48:8-48:16: @3[9]: FakeRead(ForMatchedPlace, _6)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+48:8-48:16: @3[7]: _6 = Not(move _7)\">    let is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n 47:25-47:26: @3[2]: _5 = const 2_i32\n 47:9-47:22: @3[3]: FakeRead(ForLet, _5)\n 48:9-48:16: @3[6]: _7 = _1\n-48:8-48:16: @3[7]: _6 = Not(move _7)\n-48:8-48:16: @3[9]: FakeRead(ForMatchedPlace, _6)\">    let mut countdown = 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+48:8-48:16: @3[7]: _6 = Not(move _7)\">    let mut countdown = 2;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n 46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n 47:25-47:26: @3[2]: _5 = const 2_i32\n 47:9-47:22: @3[3]: FakeRead(ForLet, _5)\n 48:9-48:16: @3[6]: _7 = _1\n-48:8-48:16: @3[7]: _6 = Not(move _7)\n-48:8-48:16: @3[9]: FakeRead(ForMatchedPlace, _6)\">    if !is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"49:9-49:23: @6[0]: _5 = const 20_i32\n-48:17-50:6: @6[1]: _0 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:9-49:23: @6[0]: _5 = const 20_i32\n-48:17-50:6: @6[1]: _0 = const ()\">        countdown = 20;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:9-49:23: @6[0]: _5 = const 20_i32\n-48:17-50:6: @6[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"50:6-50:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"51:2-51:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n+48:8-48:16: @3[7]: _6 = Not(move _7)\">    if !is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"49:9-49:23: @4[0]: _5 = const 20_i32\n+48:17-50:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:9-49:23: @4[0]: _5 = const 20_i32\n+48:17-50:6: @4[1]: _0 = const ()\">        countdown = 20;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:9-49:23: @4[0]: _5 = const 20_i32\n+48:17-50:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"50:6-50:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"51:2-51:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "d35f191b64e8550be126cebae3a09ca68e61f668", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_function.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_function.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -73,41 +73,38 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb10]\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n 9:19-9:35: @1[0]: _3 = &amp;_4\n-9:19-9:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb9]\n+9:19-9:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n 9:19-9:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 9:9-9:16: @2[3]: FakeRead(ForLet, _1)\n 10:25-10:26: @3[2]: _5 = const 0_i32\n 10:9-10:22: @3[3]: FakeRead(ForLet, _5)\n-11:8-11:15: @3[6]: _7 = _1\n-11:8-11:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb10]\n+11:8-11:15: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n 9:19-9:35: @1[0]: _3 = &amp;_4\n-9:19-9:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb9]\n+9:19-9:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n 9:19-9:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 9:9-9:16: @2[3]: FakeRead(ForLet, _1)\n 10:25-10:26: @3[2]: _5 = const 0_i32\n 10:9-10:22: @3[3]: FakeRead(ForLet, _5)\n-11:8-11:15: @3[6]: _7 = _1\n-11:8-11:15: @3[7]: FakeRead(ForMatchedPlace, _7)\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb10]\n+11:8-11:15: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n 9:19-9:35: @1[0]: _3 = &amp;_4\n-9:19-9:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb9]\n+9:19-9:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n 9:19-9:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 9:9-9:16: @2[3]: FakeRead(ForLet, _1)\n 10:25-10:26: @3[2]: _5 = const 0_i32\n 10:9-10:22: @3[3]: FakeRead(ForLet, _5)\n-11:8-11:15: @3[6]: _7 = _1\n-11:8-11:15: @3[7]: FakeRead(ForMatchedPlace, _7)\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:23: @6[0]: _5 = const 10_i32\n-11:16-13:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:23: @6[0]: _5 = const 10_i32\n-11:16-13:6: @6[1]: _6 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:23: @6[0]: _5 = const 10_i32\n-11:16-13:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:6-13:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:5-14:25: @7.Call: _8 = use_this_lib_crate() -&gt; [return: bb8, unwind: bb10]\n-15:2-15:2: @8.Return: return\"><span class=\"annotation\">@7,8\u298a</span>use_this_lib_crate();</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:5-14:25: @7.Call: _8 = use_this_lib_crate() -&gt; [return: bb8, unwind: bb10]\n-15:2-15:2: @8.Return: return\">}<span class=\"annotation\">\u2989@7,8</span></span></span></span></div>\n+11:8-11:15: @3[6]: _7 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:23: @4[0]: _5 = const 10_i32\n+11:16-13:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:23: @4[0]: _5 = const 10_i32\n+11:16-13:6: @4[1]: _6 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:23: @4[0]: _5 = const 10_i32\n+11:16-13:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:6-13:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:5-14:25: @6.Call: _8 = use_this_lib_crate() -&gt; [return: bb7, unwind: bb9]\n+15:2-15:2: @7.Return: return\"><span class=\"annotation\">@6,7\u298a</span>use_this_lib_crate();</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:5-14:25: @6.Call: _8 = use_this_lib_crate() -&gt; [return: bb7, unwind: bb9]\n+15:2-15:2: @7.Return: return\">}<span class=\"annotation\">\u2989@6,7</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "fcb5418e1d0cfee7c62cfd57442482778ec59cbb", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.while_early_ret/while_early_ret.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 17, "deletions": 23, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/b0ac0fbdefc00b3f8678ad87dd7379687413e361/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html?ref=b0ac0fbdefc00b3f8678ad87dd7379687413e361", "patch": "@@ -86,51 +86,45 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n-12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n-12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown</span></span>\n+12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\"><span class=\"annotation\">@3,5\u298a</span>countdown</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n-12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n-12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\">                &lt;</span></span>\n+12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\">                &lt;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n-12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n-12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\">            5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\">            5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            return</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n-18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n-18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@6,8\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n-18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n-18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\">                        &gt;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n-18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n-18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\">                    8<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @6[2]: _11 = _1\n+18:21-20:22: @6[3]: _10 = Gt(move _11, const 8_i32)\"><span class=\"annotation\">@6\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @6[2]: _11 = _1\n+18:21-20:22: @6[3]: _10 = Gt(move _11, const 8_i32)\">                        &gt;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @6[2]: _11 = _1\n+18:21-20:22: @6[3]: _10 = Gt(move _11, const 8_i32)\">                    8<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:24-22:26: @11[1]: _12 = ()\n-22:21-22:27: @11[2]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _12)\"><span class=\"annotation\">@9,11\u298a</span>Ok(())<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:24-22:26: @8[1]: _12 = ()\n+22:21-22:27: @8[2]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _12)\"><span class=\"annotation\">@8\u298a</span>Ok(())<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                else</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:21-26:27: @10[0]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@10\u298a</span>Err(1)<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:21-26:27: @9[0]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@9\u298a</span>Err(1)<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:10-29:10: @7[0]: _6 = const ()\n 30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n-30:9-32:10: @12[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@7,12\u298a</span></span></span>\n+30:9-32:10: @11[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@7,11\u298a</span></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:10-29:10: @7[0]: _6 = const ()\n 30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n-30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">        countdown</span></span>\n+30:9-32:10: @11[0]: _1 = move (_13.0: i32)\">        countdown</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:10-29:10: @7[0]: _6 = const ()\n 30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n-30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">            -=</span></span>\n+30:9-32:10: @11[0]: _1 = move (_13.0: i32)\">            -=</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:10-29:10: @7[0]: _6 = const ()\n 30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n-30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@7,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+30:9-32:10: @11[0]: _1 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@7,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()\n 35:5-35:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\"><span class=\"annotation\">@4\u298a</span>Ok(())<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @12.Return: return\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span></span></div>\n </body>\n </html>"}]}