{"sha": "0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f", "node_id": "C_kwDOAAsO6NoAKDBmZTg2YWE5NzdmOGU4ZjJlYmQyZTZhNmJkOWIxYTUxYzk1OWNkNGY", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-13T10:37:19Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-14T15:36:39Z"}, "message": "Let `mk_fn_def` take an iterator instead to simplify some call sites", "tree": {"sha": "50af45bb6ae9cda6d08c56370b4d48e83a759798", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50af45bb6ae9cda6d08c56370b4d48e83a759798"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f", "html_url": "https://github.com/rust-lang/rust/commit/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fd9beedc230d0b0fc0b98e1db7855f88122df30", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fd9beedc230d0b0fc0b98e1db7855f88122df30", "html_url": "https://github.com/rust-lang/rust/commit/7fd9beedc230d0b0fc0b98e1db7855f88122df30"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "8ce06404de0811d64a177271ba6d4679278e007f", "filename": "compiler/rustc_middle/src/ty/adjustment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadjustment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadjustment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadjustment.rs?ref=0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f", "patch": "@@ -131,7 +131,7 @@ impl<'tcx> OverloadedDeref<'tcx> {\n             .find(|m| m.kind == ty::AssocKind::Fn)\n             .unwrap()\n             .def_id;\n-        tcx.mk_fn_def(method_def_id, tcx.mk_substs_trait(source, []))\n+        tcx.mk_fn_def(method_def_id, [source])\n     }\n }\n "}, {"sha": "fc7bdb5535257df03fe9fea7b317ba97eb7aa939", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f", "patch": "@@ -2565,12 +2565,20 @@ impl<'tcx> TyCtxt<'tcx> {\n     }\n \n     #[inline]\n-    pub fn mk_fn_def(self, def_id: DefId, substs: SubstsRef<'tcx>) -> Ty<'tcx> {\n+    pub fn mk_fn_def(\n+        self,\n+        def_id: DefId,\n+        substs: impl IntoIterator<Item = impl Into<GenericArg<'tcx>>>,\n+    ) -> Ty<'tcx> {\n+        let substs = substs.into_iter().map(Into::into);\n+        let n = self.generics_of(def_id).count();\n         debug_assert_eq!(\n-            self.generics_of(def_id).count(),\n-            substs.len(),\n-            \"wrong number of generic parameters for {def_id:?}: {substs:?}\",\n+            (n, Some(n)),\n+            substs.size_hint(),\n+            \"wrong number of generic parameters for {def_id:?}: {:?} \\nDid you accidentally include the self-type in the params list?\",\n+            substs.collect::<Vec<_>>(),\n         );\n+        let substs = self.mk_substs(substs);\n         self.mk_ty(FnDef(def_id, substs))\n     }\n "}, {"sha": "de6a48f7cc411c4c7afb830f729c5bcb95227dfe", "filename": "compiler/rustc_mir_build/src/build/matches/test.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs?ref=0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f", "patch": "@@ -838,8 +838,6 @@ fn trait_method<'tcx>(\n     method_name: Symbol,\n     substs: impl IntoIterator<Item = impl Into<GenericArg<'tcx>>>,\n ) -> ConstantKind<'tcx> {\n-    let substs = tcx.mk_substs(substs.into_iter().map(Into::into));\n-\n     // The unhygienic comparison here is acceptable because this is only\n     // used on known traits.\n     let item = tcx"}, {"sha": "ec84243fbeb8e2f67aa76570dec0e3602e131d39", "filename": "compiler/rustc_mir_transform/src/shim.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs?ref=0fe86aa977f8e8f2ebd2e6a6bd9b1a51c959cd4f", "patch": "@@ -417,10 +417,8 @@ impl<'tcx> CloneShimBuilder<'tcx> {\n     ) {\n         let tcx = self.tcx;\n \n-        let substs = tcx.mk_substs_trait(ty, []);\n-\n         // `func == Clone::clone(&ty) -> ty`\n-        let func_ty = tcx.mk_fn_def(self.def_id, substs);\n+        let func_ty = tcx.mk_fn_def(self.def_id, [ty]);\n         let func = Operand::Constant(Box::new(Constant {\n             span: self.span,\n             user_ty: None,"}]}