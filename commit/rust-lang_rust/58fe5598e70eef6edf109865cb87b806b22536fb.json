{"sha": "58fe5598e70eef6edf109865cb87b806b22536fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZmU1NTk4ZTcwZWVmNmVkZjEwOTg2NWNiODdiODA2YjIyNTM2ZmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-12T22:32:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-12T22:32:43Z"}, "message": "simplify", "tree": {"sha": "786feda8eb12fa0fd24f0ed073b588122b827fcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/786feda8eb12fa0fd24f0ed073b588122b827fcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58fe5598e70eef6edf109865cb87b806b22536fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58fe5598e70eef6edf109865cb87b806b22536fb", "html_url": "https://github.com/rust-lang/rust/commit/58fe5598e70eef6edf109865cb87b806b22536fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58fe5598e70eef6edf109865cb87b806b22536fb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0d8f9ff5d2a64f93189543385485c5b48fb8d76", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0d8f9ff5d2a64f93189543385485c5b48fb8d76", "html_url": "https://github.com/rust-lang/rust/commit/b0d8f9ff5d2a64f93189543385485c5b48fb8d76"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "0d2746ac0f9d271070e8dac6cc537ca95598ff9f", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/58fe5598e70eef6edf109865cb87b806b22536fb/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fe5598e70eef6edf109865cb87b806b22536fb/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=58fe5598e70eef6edf109865cb87b806b22536fb", "patch": "@@ -89,12 +89,6 @@ fn module_from_source(\n     )\n }\n \n-pub fn function_from_position(db: &impl HirDatabase, position: FilePosition) -> Option<Function> {\n-    let file = db.parse(position.file_id);\n-    let fn_def = find_node_at_offset::<ast::FnDef>(file.syntax(), position.offset)?;\n-    function_from_source(db, position.file_id, fn_def)\n-}\n-\n fn function_from_source(\n     db: &impl HirDatabase,\n     file_id: FileId,"}, {"sha": "d7c2ca132db929ec8f03ec0810dd4edea607aeb9", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/58fe5598e70eef6edf109865cb87b806b22536fb/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fe5598e70eef6edf109865cb87b806b22536fb/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=58fe5598e70eef6edf109865cb87b806b22536fb", "patch": "@@ -8,7 +8,6 @@ use ra_syntax::{algo, ast::{self, AstNode}, SyntaxKind::*};\n use test_utils::covers;\n \n use crate::{\n-    source_binder,\n     mock::MockDatabase,\n     ty::display::HirDisplay,\n     ty::InferenceResult,\n@@ -2303,13 +2302,10 @@ fn test() -> u64 {\n }\n \n fn type_at_pos(db: &MockDatabase, pos: FilePosition) -> String {\n-    let func = source_binder::function_from_position(db, pos).unwrap();\n-    let body_source_map = func.body_source_map(db);\n-    let inference_result = func.infer(db);\n-    let (_, syntax) = func.source(db);\n-    let node = algo::find_node_at_offset::<ast::Expr>(syntax.syntax(), pos.offset).unwrap();\n-    let expr = body_source_map.node_expr(node).unwrap();\n-    let ty = &inference_result[expr];\n+    let file = db.parse(pos.file_id);\n+    let expr = algo::find_node_at_offset::<ast::Expr>(file.syntax(), pos.offset).unwrap();\n+    let analyzer = SourceAnalyzer::new(db, pos.file_id, expr.syntax(), Some(pos.offset));\n+    let ty = analyzer.type_of(db, expr).unwrap();\n     ty.display(db).to_string()\n }\n \n@@ -2390,10 +2386,12 @@ fn typing_whitespace_inside_a_function_should_not_invalidate_types() {\n         }\n     \",\n     );\n-    let func = source_binder::function_from_position(&db, pos).unwrap();\n     {\n+        let file = db.parse(pos.file_id);\n+        let node =\n+            algo::find_token_at_offset(file.syntax(), pos.offset).right_biased().unwrap().parent();\n         let events = db.log_executed(|| {\n-            func.infer(&db);\n+            SourceAnalyzer::new(&db, pos.file_id, node, None);\n         });\n         assert!(format!(\"{:?}\", events).contains(\"infer\"))\n     }\n@@ -2410,8 +2408,11 @@ fn typing_whitespace_inside_a_function_should_not_invalidate_types() {\n     db.query_mut(ra_db::FileTextQuery).set(pos.file_id, Arc::new(new_text));\n \n     {\n+        let file = db.parse(pos.file_id);\n+        let node =\n+            algo::find_token_at_offset(file.syntax(), pos.offset).right_biased().unwrap().parent();\n         let events = db.log_executed(|| {\n-            func.infer(&db);\n+            SourceAnalyzer::new(&db, pos.file_id, node, None);\n         });\n         assert!(!format!(\"{:?}\", events).contains(\"infer\"), \"{:#?}\", events)\n     }"}]}