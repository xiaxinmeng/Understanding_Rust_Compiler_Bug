{"sha": "7c369ee7337cee50f8ef05b9d2833e2aa30d802e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjMzY5ZWU3MzM3Y2VlNTBmOGVmMDViOWQyODMzZTJhYTMwZDgwMmU=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-09-01T16:20:24Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-09-01T16:20:24Z"}, "message": "std/extra: Add ExactSize for Bitv, DList, RingBuf, Option iterators", "tree": {"sha": "f23d4238ab36002ed0274f775a9c27af2e15b68d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f23d4238ab36002ed0274f775a9c27af2e15b68d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c369ee7337cee50f8ef05b9d2833e2aa30d802e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c369ee7337cee50f8ef05b9d2833e2aa30d802e", "html_url": "https://github.com/rust-lang/rust/commit/7c369ee7337cee50f8ef05b9d2833e2aa30d802e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c369ee7337cee50f8ef05b9d2833e2aa30d802e/comments", "author": null, "committer": null, "parents": [{"sha": "35040dfccc6674e8eda71b34a8cd1b4cc1b45842", "url": "https://api.github.com/repos/rust-lang/rust/commits/35040dfccc6674e8eda71b34a8cd1b4cc1b45842", "html_url": "https://github.com/rust-lang/rust/commit/35040dfccc6674e8eda71b34a8cd1b4cc1b45842"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "03588d984d916f57031e6eb3b7a0c78cfe998632", "filename": "src/libextra/bitv.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c369ee7337cee50f8ef05b9d2833e2aa30d802e/src%2Flibextra%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c369ee7337cee50f8ef05b9d2833e2aa30d802e/src%2Flibextra%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fbitv.rs?ref=7c369ee7337cee50f8ef05b9d2833e2aa30d802e", "patch": "@@ -608,6 +608,8 @@ impl<'self> DoubleEndedIterator<bool> for BitvIterator<'self> {\n     }\n }\n \n+impl<'self> ExactSize<bool> for BitvIterator<'self> {}\n+\n impl<'self> RandomAccessIterator<bool> for BitvIterator<'self> {\n     #[inline]\n     fn indexable(&self) -> uint {"}, {"sha": "075a0fa7777040489758a1d0acb20ac282882469", "filename": "src/libextra/dlist.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c369ee7337cee50f8ef05b9d2833e2aa30d802e/src%2Flibextra%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c369ee7337cee50f8ef05b9d2833e2aa30d802e/src%2Flibextra%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdlist.rs?ref=7c369ee7337cee50f8ef05b9d2833e2aa30d802e", "patch": "@@ -472,6 +472,8 @@ impl<'self, A> DoubleEndedIterator<&'self A> for DListIterator<'self, A> {\n     }\n }\n \n+impl<'self, A> ExactSize<&'self A> for DListIterator<'self, A> {}\n+\n impl<'self, A> Iterator<&'self mut A> for MutDListIterator<'self, A> {\n     #[inline]\n     fn next(&mut self) -> Option<&'self mut A> {\n@@ -508,6 +510,7 @@ impl<'self, A> DoubleEndedIterator<&'self mut A> for MutDListIterator<'self, A>\n     }\n }\n \n+impl<'self, A> ExactSize<&'self mut A> for MutDListIterator<'self, A> {}\n \n /// Allow mutating the DList while iterating\n pub trait ListInsertion<A> {"}, {"sha": "9ae9b47e2076e98f1954bd0009ff9dad71624bde", "filename": "src/libextra/ringbuf.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7c369ee7337cee50f8ef05b9d2833e2aa30d802e/src%2Flibextra%2Fringbuf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c369ee7337cee50f8ef05b9d2833e2aa30d802e/src%2Flibextra%2Fringbuf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fringbuf.rs?ref=7c369ee7337cee50f8ef05b9d2833e2aa30d802e", "patch": "@@ -243,6 +243,8 @@ pub struct RingBufIterator<'self, T> {\n iterator!{impl RingBufIterator -> &'self T, get_ref}\n iterator_rev!{impl RingBufIterator -> &'self T, get_ref}\n \n+impl<'self, T> ExactSize<&'self T> for RingBufIterator<'self, T> {}\n+\n impl<'self, T> RandomAccessIterator<&'self T> for RingBufIterator<'self, T> {\n     #[inline]\n     fn indexable(&self) -> uint { self.rindex - self.index }\n@@ -268,6 +270,8 @@ pub struct RingBufMutIterator<'self, T> {\n iterator!{impl RingBufMutIterator -> &'self mut T, get_mut_ref}\n iterator_rev!{impl RingBufMutIterator -> &'self mut T, get_mut_ref}\n \n+impl<'self, T> ExactSize<&'self mut T> for RingBufMutIterator<'self, T> {}\n+\n /// Grow is only called on full elts, so nelts is also len(elts), unlike\n /// elsewhere.\n fn grow<T>(nelts: uint, loptr: &mut uint, elts: &mut ~[Option<T>]) {"}, {"sha": "dd66630187db934b5d3616d065d348cc2f8b01d2", "filename": "src/libstd/option.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7c369ee7337cee50f8ef05b9d2833e2aa30d802e/src%2Flibstd%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c369ee7337cee50f8ef05b9d2833e2aa30d802e/src%2Flibstd%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Foption.rs?ref=7c369ee7337cee50f8ef05b9d2833e2aa30d802e", "patch": "@@ -46,7 +46,7 @@ use cmp::{Eq,Ord};\n use util;\n use num::Zero;\n use iterator;\n-use iterator::{Iterator, DoubleEndedIterator};\n+use iterator::{Iterator, DoubleEndedIterator, ExactSize};\n use str::{StrSlice, OwnedStr};\n use to_str::ToStr;\n use clone::DeepClone;\n@@ -402,6 +402,8 @@ impl<A> DoubleEndedIterator<A> for OptionIterator<A> {\n     }\n }\n \n+impl<A> ExactSize<A> for OptionIterator<A> {}\n+\n #[cfg(test)]\n mod tests {\n     use super::*;"}]}