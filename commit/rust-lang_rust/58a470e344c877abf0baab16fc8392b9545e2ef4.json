{"sha": "58a470e344c877abf0baab16fc8392b9545e2ef4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4YTQ3MGUzNDRjODc3YWJmMGJhYWIxNmZjODM5MmI5NTQ1ZTJlZjQ=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-01-13T04:10:38Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-01-13T04:10:38Z"}, "message": "Minor improvements to docs in std::env structures/functions.\n\n* Call functions \"functions\" instead of \"methods\".\n* Link structures to their constructor functions\n* Add other misc. documentation links", "tree": {"sha": "1b6cb1b3be925cc960346750d2999f81a44e23b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b6cb1b3be925cc960346750d2999f81a44e23b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58a470e344c877abf0baab16fc8392b9545e2ef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58a470e344c877abf0baab16fc8392b9545e2ef4", "html_url": "https://github.com/rust-lang/rust/commit/58a470e344c877abf0baab16fc8392b9545e2ef4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58a470e344c877abf0baab16fc8392b9545e2ef4/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a2ed98d344b6cbddc57db8841b42f935877e08d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a2ed98d344b6cbddc57db8841b42f935877e08d", "html_url": "https://github.com/rust-lang/rust/commit/1a2ed98d344b6cbddc57db8841b42f935877e08d"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "ae83312ec94925bcd4b1ae05eba9cdd4ab44c896", "filename": "src/libstd/env.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/58a470e344c877abf0baab16fc8392b9545e2ef4/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a470e344c877abf0baab16fc8392b9545e2ef4/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=58a470e344c877abf0baab16fc8392b9545e2ef4", "patch": "@@ -10,7 +10,7 @@\n \n //! Inspection and manipulation of the process's environment.\n //!\n-//! This module contains methods to inspect various aspects such as\n+//! This module contains functions to inspect various aspects such as\n //! environment variables, process arguments, the current directory, and various\n //! other important directories.\n \n@@ -68,15 +68,17 @@ pub fn set_current_dir<P: AsRef<Path>>(p: P) -> io::Result<()> {\n \n /// An iterator over a snapshot of the environment variables of this process.\n ///\n-/// This iterator is created through `std::env::vars()` and yields `(String,\n-/// String)` pairs.\n+/// This structure is created through the [`std::env::vars`] function.\n+///\n+/// [`std::env::vars`]: fn.vars.html\n #[stable(feature = \"env\", since = \"1.0.0\")]\n pub struct Vars { inner: VarsOs }\n \n /// An iterator over a snapshot of the environment variables of this process.\n ///\n-/// This iterator is created through `std::env::vars_os()` and yields\n-/// `(OsString, OsString)` pairs.\n+/// This structure is created through the [`std::env::vars_os`] function.\n+///\n+/// [`std::env::vars_os`]: fn.vars_os.html\n #[stable(feature = \"env\", since = \"1.0.0\")]\n pub struct VarsOs { inner: os_imp::Env }\n \n@@ -218,7 +220,9 @@ fn _var_os(key: &OsStr) -> Option<OsString> {\n     })\n }\n \n-/// Possible errors from the `env::var` method.\n+/// Possible errors from the [`env::var`] function.\n+///\n+/// [env::var]: fn.var.html\n #[derive(Debug, PartialEq, Eq, Clone)]\n #[stable(feature = \"env\", since = \"1.0.0\")]\n pub enum VarError {\n@@ -570,7 +574,7 @@ pub fn current_exe() -> io::Result<PathBuf> {\n /// An iterator over the arguments of a process, yielding a [`String`] value\n /// for each argument.\n ///\n-/// This structure is created through the [`std::env::args`] method.\n+/// This structure is created through the [`std::env::args`] function.\n ///\n /// [`String`]: ../string/struct.String.html\n /// [`std::env::args`]: ./fn.args.html\n@@ -580,7 +584,7 @@ pub struct Args { inner: ArgsOs }\n /// An iterator over the arguments of a process, yielding an [`OsString`] value\n /// for each argument.\n ///\n-/// This structure is created through the [`std::env::args_os`] method.\n+/// This structure is created through the [`std::env::args_os`] function.\n ///\n /// [`OsString`]: ../ffi/struct.OsString.html\n /// [`std::env::args_os`]: ./fn.args_os.html"}]}