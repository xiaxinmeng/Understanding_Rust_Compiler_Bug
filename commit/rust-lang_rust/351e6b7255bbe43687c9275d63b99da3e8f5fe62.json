{"sha": "351e6b7255bbe43687c9275d63b99da3e8f5fe62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MWU2YjcyNTViYmU0MzY4N2M5Mjc1ZDYzYjk5ZGEzZThmNWZlNjI=", "commit": {"author": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2015-01-06T05:54:09Z"}, "committer": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2015-01-06T05:54:09Z"}, "message": "Implement TTY::get_winsize for Windows\n\nSigned-off-by: Peter Atashian <retep998@gmail.com>", "tree": {"sha": "fec18afd340ba448e287d9f97fd98ea67b485109", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fec18afd340ba448e287d9f97fd98ea67b485109"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/351e6b7255bbe43687c9275d63b99da3e8f5fe62", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/351e6b7255bbe43687c9275d63b99da3e8f5fe62", "html_url": "https://github.com/rust-lang/rust/commit/351e6b7255bbe43687c9275d63b99da3e8f5fe62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/351e6b7255bbe43687c9275d63b99da3e8f5fe62/comments", "author": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "committer": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7dd3c4d69aee1c4ad8cc220c194b176bba2ab62", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7dd3c4d69aee1c4ad8cc220c194b176bba2ab62", "html_url": "https://github.com/rust-lang/rust/commit/c7dd3c4d69aee1c4ad8cc220c194b176bba2ab62"}], "stats": {"total": 46, "additions": 39, "deletions": 7}, "files": [{"sha": "8ee3806d7f5dc9ef70cf2f7cc34b4690974f8291", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/351e6b7255bbe43687c9275d63b99da3e8f5fe62/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351e6b7255bbe43687c9275d63b99da3e8f5fe62/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=351e6b7255bbe43687c9275d63b99da3e8f5fe62", "patch": "@@ -84,6 +84,32 @@ pub fn fd_set(set: &mut fd_set, s: libc::SOCKET) {\n     set.fd_count += 1;\n }\n \n+pub type SHORT = libc::c_short;\n+\n+#[repr(C)]\n+pub struct COORD {\n+    pub X: SHORT,\n+    pub Y: SHORT,\n+}\n+\n+#[repr(C)]\n+pub struct SMALL_RECT {\n+    pub Left: SHORT,\n+    pub Top: SHORT,\n+    pub Right: SHORT,\n+    pub Bottom: SHORT,\n+}\n+\n+#[repr(C)]\n+pub struct CONSOLE_SCREEN_BUFFER_INFO {\n+    pub dwSize: COORD,\n+    pub dwCursorPosition: COORD,\n+    pub wAttributes: libc::WORD,\n+    pub srWindow: SMALL_RECT,\n+    pub dwMaximumWindowSize: COORD,\n+}\n+pub type PCONSOLE_SCREEN_BUFFER_INFO = *mut CONSOLE_SCREEN_BUFFER_INFO;\n+\n #[link(name = \"ws2_32\")]\n extern \"system\" {\n     pub fn WSAStartup(wVersionRequested: libc::WORD,\n@@ -247,4 +273,8 @@ extern \"system\" {\n \n     pub fn SetConsoleMode(hConsoleHandle: libc::HANDLE,\n                           lpMode: libc::DWORD) -> libc::BOOL;\n+    pub fn GetConsoleScreenBufferInfo(\n+        hConsoleOutput: libc::HANDLE,\n+        lpConsoleScreenBufferInfo: PCONSOLE_SCREEN_BUFFER_INFO,\n+    ) -> libc::BOOL;\n }"}, {"sha": "f9e1f0d3ed0aa42d9e934c8d94842318d54dadab", "filename": "src/libstd/sys/windows/tty.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/351e6b7255bbe43687c9275d63b99da3e8f5fe62/src%2Flibstd%2Fsys%2Fwindows%2Ftty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351e6b7255bbe43687c9275d63b99da3e8f5fe62/src%2Flibstd%2Fsys%2Fwindows%2Ftty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ftty.rs?ref=351e6b7255bbe43687c9275d63b99da3e8f5fe62", "patch": "@@ -32,13 +32,15 @@ use iter::repeat;\n use libc::types::os::arch::extra::LPCVOID;\n use libc::{c_int, HANDLE, LPDWORD, DWORD, LPVOID};\n use libc::{get_osfhandle, CloseHandle};\n+use mem;\n use ptr;\n use str::from_utf8;\n use super::c::{ENABLE_ECHO_INPUT, ENABLE_EXTENDED_FLAGS};\n use super::c::{ENABLE_INSERT_MODE, ENABLE_LINE_INPUT};\n use super::c::{ENABLE_PROCESSED_INPUT, ENABLE_QUICK_EDIT_MODE};\n-use super::c::{ERROR_ILLEGAL_CHARACTER};\n+use super::c::{ERROR_ILLEGAL_CHARACTER, CONSOLE_SCREEN_BUFFER_INFO};\n use super::c::{ReadConsoleW, WriteConsoleW, GetConsoleMode, SetConsoleMode};\n+use super::c::{GetConsoleScreenBufferInfo};\n \n fn invalid_encoding() -> IoError {\n     IoError {\n@@ -146,12 +148,12 @@ impl TTY {\n     }\n \n     pub fn get_winsize(&mut self) -> IoResult<(int, int)> {\n-        // FIXME\n-        // Get console buffer via CreateFile with CONOUT$\n-        // Make a CONSOLE_SCREEN_BUFFER_INFO\n-        // Call GetConsoleScreenBufferInfo\n-        // Maybe call GetLargestConsoleWindowSize instead?\n-        Err(super::unimpl())\n+        let mut info: CONSOLE_SCREEN_BUFFER_INFO = unsafe { mem::zeroed() };\n+        match unsafe { GetConsoleScreenBufferInfo(self.handle, &mut info as *mut _) } {\n+            0 => Err(super::last_error()),\n+            _ => Ok(((info.srWindow.Right + 1 - info.srWindow.Left) as int,\n+                     (info.srWindow.Bottom + 1 - info.srWindow.Top) as int)),\n+        }\n     }\n \n     // Let us magically declare this as a TTY"}]}