{"sha": "25dda42f3773b1d002a5809c0182c2adc6c47027", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZGRhNDJmMzc3M2IxZDAwMmE1ODA5YzAxODJjMmFkYzZjNDcwMjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T22:27:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T22:42:26Z"}, "message": "introduce ComletionItemKind", "tree": {"sha": "cbfed6abbbd620a52443ddb6c8fecf4e80abd654", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbfed6abbbd620a52443ddb6c8fecf4e80abd654"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25dda42f3773b1d002a5809c0182c2adc6c47027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25dda42f3773b1d002a5809c0182c2adc6c47027", "html_url": "https://github.com/rust-lang/rust/commit/25dda42f3773b1d002a5809c0182c2adc6c47027", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25dda42f3773b1d002a5809c0182c2adc6c47027/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebb584ce669d04f109d5b21a08aca9d4e9acecc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebb584ce669d04f109d5b21a08aca9d4e9acecc8", "html_url": "https://github.com/rust-lang/rust/commit/ebb584ce669d04f109d5b21a08aca9d4e9acecc8"}], "stats": {"total": 62, "additions": 28, "deletions": 34}, "files": [{"sha": "bb5fdfda0418ac61f29366d5f161b2679f2cd138", "filename": "crates/ra_analysis/src/completion/complete_fn_param.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=25dda42f3773b1d002a5809c0182c2adc6c47027", "patch": "@@ -34,9 +34,8 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n             }\n         })\n         .for_each(|(label, lookup)| {\n-            CompletionItem::new(label)\n+            CompletionItem::new(CompletionKind::Magic, label)\n                 .lookup_by(lookup)\n-                .kind(CompletionKind::Magic)\n                 .add_to(acc)\n         });\n "}, {"sha": "1e6d7008d046ba85b2f91dc426510d07587920b7", "filename": "crates/ra_analysis/src/completion/complete_keyword.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=25dda42f3773b1d002a5809c0182c2adc6c47027", "patch": "@@ -61,10 +61,7 @@ fn complete_return(fn_def: ast::FnDef, is_stmt: bool) -> Option<CompletionItem>\n }\n \n fn keyword(kw: &str, snippet: &str) -> CompletionItem {\n-    CompletionItem::new(kw)\n-        .kind(Keyword)\n-        .snippet(snippet)\n-        .build()\n+    CompletionItem::new(Keyword, kw).snippet(snippet).build()\n }\n \n #[cfg(test)]"}, {"sha": "692502bb21d3774f1c9d95744af04120151e646d", "filename": "crates/ra_analysis/src/completion/complete_path.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=25dda42f3773b1d002a5809c0182c2adc6c47027", "patch": "@@ -17,11 +17,9 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) -> C\n         _ => return Ok(()),\n     };\n     let module_scope = target_module.scope(ctx.db)?;\n-    module_scope.entries().for_each(|(name, _res)| {\n-        CompletionItem::new(name.to_string())\n-            .kind(Reference)\n-            .add_to(acc)\n-    });\n+    module_scope\n+        .entries()\n+        .for_each(|(name, _res)| CompletionItem::new(Reference, name.to_string()).add_to(acc));\n     Ok(())\n }\n "}, {"sha": "f39b98d62ff6fd77704bbc37f33007e283fc263f", "filename": "crates/ra_analysis/src/completion/complete_scope.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=25dda42f3773b1d002a5809c0182c2adc6c47027", "patch": "@@ -29,11 +29,7 @@ pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) ->\n                     }\n                 }\n             })\n-            .for_each(|(name, _res)| {\n-                CompletionItem::new(name.to_string())\n-                    .kind(Reference)\n-                    .add_to(acc)\n-            });\n+            .for_each(|(name, _res)| CompletionItem::new(Reference, name.to_string()).add_to(acc));\n     }\n \n     Ok(())\n@@ -45,13 +41,9 @@ fn complete_fn(acc: &mut Completions, scopes: &hir::FnScopes, offset: TextUnit)\n         .scope_chain_for_offset(offset)\n         .flat_map(|scope| scopes.entries(scope).iter())\n         .filter(|entry| shadowed.insert(entry.name()))\n-        .for_each(|entry| {\n-            CompletionItem::new(entry.name().to_string())\n-                .kind(Reference)\n-                .add_to(acc)\n-        });\n+        .for_each(|entry| CompletionItem::new(Reference, entry.name().to_string()).add_to(acc));\n     if scopes.self_param.is_some() {\n-        CompletionItem::new(\"self\").kind(Reference).add_to(acc);\n+        CompletionItem::new(Reference, \"self\").add_to(acc);\n     }\n }\n "}, {"sha": "f0ad45feced8594b9dc8a48451bea33a3414b97b", "filename": "crates/ra_analysis/src/completion/complete_snippet.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs?ref=25dda42f3773b1d002a5809c0182c2adc6c47027", "patch": "@@ -4,21 +4,19 @@ pub(super) fn complete_expr_snippet(acc: &mut Completions, ctx: &CompletionConte\n     if !(ctx.is_trivial_path && ctx.enclosing_fn.is_some()) {\n         return;\n     }\n-    CompletionItem::new(\"pd\")\n+    CompletionItem::new(Snippet, \"pd\")\n         .snippet(\"eprintln!(\\\"$0 = {:?}\\\", $0);\")\n-        .kind(Snippet)\n         .add_to(acc);\n-    CompletionItem::new(\"ppd\")\n+    CompletionItem::new(Snippet, \"ppd\")\n         .snippet(\"eprintln!(\\\"$0 = {:#?}\\\", $0);\")\n-        .kind(Snippet)\n         .add_to(acc);\n }\n \n pub(super) fn complete_item_snippet(acc: &mut Completions, ctx: &CompletionContext) {\n     if !ctx.is_new_item {\n         return;\n     }\n-    CompletionItem::new(\"Test function\")\n+    CompletionItem::new(Snippet, \"Test function\")\n         .lookup_by(\"tfn\")\n         .snippet(\n             \"\\\n@@ -27,11 +25,9 @@ fn ${1:feature}() {\n     $0\n }\",\n         )\n-        .kind(Snippet)\n         .add_to(acc);\n-    CompletionItem::new(\"pub(crate)\")\n+    CompletionItem::new(Snippet, \"pub(crate)\")\n         .snippet(\"pub(crate) $0\")\n-        .kind(Snippet)\n         .add_to(acc);\n }\n "}, {"sha": "423d5a48b90824e9b64f03a97dcb10b08b28313a", "filename": "crates/ra_analysis/src/completion/completion_item.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25dda42f3773b1d002a5809c0182c2adc6c47027/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=25dda42f3773b1d002a5809c0182c2adc6c47027", "patch": "@@ -6,7 +6,9 @@ pub struct CompletionItem {\n     label: String,\n     lookup: Option<String>,\n     snippet: Option<String>,\n-    /// Used only internally in test, to check only specific kind of completion.\n+    kind: Option<CompletionItemKind>,\n+    /// Used only internally in tests, to check only specific kind of\n+    /// completion.\n     completion_kind: CompletionKind,\n }\n \n@@ -15,6 +17,12 @@ pub enum InsertText {\n     Snippet { text: String },\n }\n \n+#[derive(Debug, Clone, Copy, PartialEq, Eq)]\n+pub enum CompletionItemKind {\n+    Snippet,\n+    Keyword,\n+}\n+\n #[derive(Debug, PartialEq, Eq)]\n pub(crate) enum CompletionKind {\n     /// Parser-based keyword completion.\n@@ -24,17 +32,16 @@ pub(crate) enum CompletionKind {\n     /// \"Secret sauce\" completions.\n     Magic,\n     Snippet,\n-    Unspecified,\n }\n \n impl CompletionItem {\n-    pub(crate) fn new(label: impl Into<String>) -> Builder {\n+    pub(crate) fn new(completion_kind: CompletionKind, label: impl Into<String>) -> Builder {\n         let label = label.into();\n         Builder {\n             label,\n             lookup: None,\n             snippet: None,\n-            completion_kind: CompletionKind::Unspecified,\n+            completion_kind,\n         }\n     }\n     /// What user sees in pop-up in the UI.\n@@ -57,6 +64,10 @@ impl CompletionItem {\n             Some(it) => InsertText::Snippet { text: it.clone() },\n         }\n     }\n+\n+    pub fn kind(&self) -> Option<CompletionItemKind> {\n+        self.kind\n+    }\n }\n \n /// A helper to make `CompletionItem`s.\n@@ -78,6 +89,7 @@ impl Builder {\n             label: self.label,\n             lookup: self.lookup,\n             snippet: self.snippet,\n+            kind: None,\n             completion_kind: self.completion_kind,\n         }\n     }"}]}