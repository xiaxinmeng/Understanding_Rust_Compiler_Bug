{"sha": "8f303daf458ae798b678d7e908ce5b2f27504111", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMzAzZGFmNDU4YWU3OThiNjc4ZDdlOTA4Y2U1YjJmMjc1MDQxMTE=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-17T07:56:00Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-17T07:56:00Z"}, "message": "Add test for new pattern functions", "tree": {"sha": "3b9c9e5c42145b72209aec396b07070f87010c1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b9c9e5c42145b72209aec396b07070f87010c1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f303daf458ae798b678d7e908ce5b2f27504111", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f303daf458ae798b678d7e908ce5b2f27504111", "html_url": "https://github.com/rust-lang/rust/commit/8f303daf458ae798b678d7e908ce5b2f27504111", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f303daf458ae798b678d7e908ce5b2f27504111/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ae4c70a0aecea4c7c0c5a43fe443baa170ff1d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ae4c70a0aecea4c7c0c5a43fe443baa170ff1d4", "html_url": "https://github.com/rust-lang/rust/commit/6ae4c70a0aecea4c7c0c5a43fe443baa170ff1d4"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "f00ddeed7ed0c7bedb3375916c95bdc5fd5b7761", "filename": "crates/ide/src/completion/patterns.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f303daf458ae798b678d7e908ce5b2f27504111/crates%2Fide%2Fsrc%2Fcompletion%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f303daf458ae798b678d7e908ce5b2f27504111/crates%2Fide%2Fsrc%2Fcompletion%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fpatterns.rs?ref=8f303daf458ae798b678d7e908ce5b2f27504111", "patch": "@@ -123,6 +123,10 @@ pub(crate) fn fn_is_prev(element: SyntaxElement) -> bool {\n         .filter(|it| it.kind() == FN_KW)\n         .is_some()\n }\n+#[test]\n+fn test_fn_is_prev() {\n+    check_pattern_is_applicable(r\"fn l<|>\", fn_is_prev);\n+}\n \n /// Check if the token previous to the previous one is `for`.\n /// For example, `for _ i<|>` => true.\n@@ -134,6 +138,10 @@ pub(crate) fn for_is_prev2(element: SyntaxElement) -> bool {\n         .filter(|it| it.kind() == FOR_KW)\n         .is_some()\n }\n+#[test]\n+fn test_for_is_prev2() {\n+    check_pattern_is_applicable(r\"for i i<|>\", for_is_prev2);\n+}\n \n #[test]\n fn test_if_is_prev() {"}]}