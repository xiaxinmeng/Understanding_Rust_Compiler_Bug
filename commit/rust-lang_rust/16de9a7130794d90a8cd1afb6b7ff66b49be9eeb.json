{"sha": "16de9a7130794d90a8cd1afb6b7ff66b49be9eeb", "node_id": "C_kwDOAAsO6NoAKDE2ZGU5YTcxMzA3OTRkOTBhOGNkMWFmYjZiN2ZmNjZiNDliZTllZWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-14T14:27:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-14T14:27:32Z"}, "message": "Auto merge of #13774 - lowr:fix/no-infer-vars-in-inference-result, r=Veykril\n\nfix: resolve all inference vars in `InferenceResult::assoc_resolutions`\n\nI think this fixes '#13773, ~but still haven't found repro. I'll try finding one so we can have a regression test~.\n\nWe should resolve every inference variable in `InferenceResult` after inference is done. We started recording `Substitution`s for each resolved associated items in #13725, but failed to do so which causes crash when analyzing source in IDE layer.", "tree": {"sha": "b31a10957168c3b46b424754435142f6c76e039d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b31a10957168c3b46b424754435142f6c76e039d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16de9a7130794d90a8cd1afb6b7ff66b49be9eeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16de9a7130794d90a8cd1afb6b7ff66b49be9eeb", "html_url": "https://github.com/rust-lang/rust/commit/16de9a7130794d90a8cd1afb6b7ff66b49be9eeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16de9a7130794d90a8cd1afb6b7ff66b49be9eeb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb4e9359d136fcc83dd865497b0dcd05ee0819d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb4e9359d136fcc83dd865497b0dcd05ee0819d9", "html_url": "https://github.com/rust-lang/rust/commit/fb4e9359d136fcc83dd865497b0dcd05ee0819d9"}, {"sha": "bb99d2a6fbcbd5db75a004fa4135413b24ebe3dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb99d2a6fbcbd5db75a004fa4135413b24ebe3dc", "html_url": "https://github.com/rust-lang/rust/commit/bb99d2a6fbcbd5db75a004fa4135413b24ebe3dc"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "7cf4fb10506ffb47f27a615620b562efec1ea5b6", "filename": "crates/hir-ty/src/infer.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/16de9a7130794d90a8cd1afb6b7ff66b49be9eeb/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16de9a7130794d90a8cd1afb6b7ff66b49be9eeb/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer.rs?ref=16de9a7130794d90a8cd1afb6b7ff66b49be9eeb", "patch": "@@ -535,6 +535,9 @@ impl<'a> InferenceContext<'a> {\n         for (_, subst) in result.method_resolutions.values_mut() {\n             *subst = table.resolve_completely(subst.clone());\n         }\n+        for (_, subst) in result.assoc_resolutions.values_mut() {\n+            *subst = table.resolve_completely(subst.clone());\n+        }\n         for adjustment in result.expr_adjustments.values_mut().flatten() {\n             adjustment.target = table.resolve_completely(adjustment.target.clone());\n         }"}, {"sha": "3580c457026321d21c40e164809d095e6da5e036", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/16de9a7130794d90a8cd1afb6b7ff66b49be9eeb/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16de9a7130794d90a8cd1afb6b7ff66b49be9eeb/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=16de9a7130794d90a8cd1afb6b7ff66b49be9eeb", "patch": "@@ -4079,6 +4079,37 @@ const FOO$0: f64 = 1.0f64;\n     );\n }\n \n+#[test]\n+fn hover_const_eval_in_generic_trait() {\n+    // Doesn't compile, but we shouldn't crash.\n+    check(\n+        r#\"\n+trait Trait<T> {\n+    const FOO: bool = false;\n+}\n+struct S<T>(T);\n+impl<T> Trait<T> for S<T> {\n+    const FOO: bool = true;\n+}\n+\n+fn test() {\n+    S::FOO$0;\n+}\n+\"#,\n+        expect![[r#\"\n+            *FOO*\n+\n+            ```rust\n+            test\n+            ```\n+\n+            ```rust\n+            const FOO: bool = true\n+            ```\n+        \"#]],\n+    );\n+}\n+\n #[test]\n fn hover_const_pat() {\n     check("}]}