{"sha": "298c9a0e14944872d1b919a21c7d84d0c6d6a713", "node_id": "C_kwDOAAsO6NoAKDI5OGM5YTBlMTQ5NDQ4NzJkMWI5MTlhMjFjN2Q4NGQwYzZkNmE3MTM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-11T19:29:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-11T19:29:47Z"}, "message": "Rollup merge of #94839 - TaKO8Ki:suggest-using-double-colon-for-struct-field-type, r=cjgillot\n\nSuggest using double colon when a struct field type include single colon\n\n#92685", "tree": {"sha": "17357576727cc608c4f19370567ce3c5e4e007bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17357576727cc608c4f19370567ce3c5e4e007bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/298c9a0e14944872d1b919a21c7d84d0c6d6a713", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiK6MsCRBK7hj4Ov3rIwAA4doIACOe+g1b2rFJlaWC/9FyI6IU\n2Jl1SGZ3ApaqHDC7FknlKDM75zXwjKLQU4OjQ33zA/c3HyAR9mC6IdT+45vfXKM/\nvMyM7aJVP8ECghwGpp0qZdFdNMKudu2YemxdDLfplyMsBfCMdNxAH6meKzS74EC2\n0YuD2/G8lM6SWVnR9YtAVVyCn6Qn6DNuFoo0ywCEsQq/K/+7Osed795YjkwMS2tI\njU4yPLJFB5FwOmUFxNWscWwWAGL0rqDlX8l7rqbPOwC+PH3gH447QyUwGO5N5wYO\ndB31VPcyy4e6HEDatIZkIM8UUMKFL2qXdKvzulKg3+SNAeZsz22IX2Og3M6lkW0=\n=OU8S\n-----END PGP SIGNATURE-----\n", "payload": "tree 17357576727cc608c4f19370567ce3c5e4e007bc\nparent ad513548cee729571a5d28050555681fd8562130\nparent 813f00dd4fa52eda78bf6b96a3f7bdd82e0d82ae\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1647026987 +0100\ncommitter GitHub <noreply@github.com> 1647026987 +0100\n\nRollup merge of #94839 - TaKO8Ki:suggest-using-double-colon-for-struct-field-type, r=cjgillot\n\nSuggest using double colon when a struct field type include single colon\n\n#92685\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/298c9a0e14944872d1b919a21c7d84d0c6d6a713", "html_url": "https://github.com/rust-lang/rust/commit/298c9a0e14944872d1b919a21c7d84d0c6d6a713", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/298c9a0e14944872d1b919a21c7d84d0c6d6a713/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad513548cee729571a5d28050555681fd8562130", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad513548cee729571a5d28050555681fd8562130", "html_url": "https://github.com/rust-lang/rust/commit/ad513548cee729571a5d28050555681fd8562130"}, {"sha": "813f00dd4fa52eda78bf6b96a3f7bdd82e0d82ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/813f00dd4fa52eda78bf6b96a3f7bdd82e0d82ae", "html_url": "https://github.com/rust-lang/rust/commit/813f00dd4fa52eda78bf6b96a3f7bdd82e0d82ae"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "122fe10e80f8fb331ce3aab4cae7a15c923ec420", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/298c9a0e14944872d1b919a21c7d84d0c6d6a713/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/298c9a0e14944872d1b919a21c7d84d0c6d6a713/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=298c9a0e14944872d1b919a21c7d84d0c6d6a713", "patch": "@@ -1534,6 +1534,16 @@ impl<'a> Parser<'a> {\n         let name = self.parse_field_ident(adt_ty, lo)?;\n         self.expect_field_ty_separator()?;\n         let ty = self.parse_ty()?;\n+        if self.token.kind == token::Colon && self.look_ahead(1, |tok| tok.kind != token::Colon) {\n+            self.struct_span_err(self.token.span, \"found single colon in a struct field type path\")\n+                .span_suggestion_verbose(\n+                    self.token.span,\n+                    \"write a path separator here\",\n+                    \"::\".to_string(),\n+                    Applicability::MaybeIncorrect,\n+                )\n+                .emit();\n+        }\n         if self.token.kind == token::Eq {\n             self.bump();\n             let const_expr = self.parse_anon_const_expr()?;"}, {"sha": "b7ad6d996f1aba2129b7902d71305e814b675a56", "filename": "src/test/ui/suggestions/struct-field-type-including-single-colon.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/298c9a0e14944872d1b919a21c7d84d0c6d6a713/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-field-type-including-single-colon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/298c9a0e14944872d1b919a21c7d84d0c6d6a713/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-field-type-including-single-colon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-field-type-including-single-colon.rs?ref=298c9a0e14944872d1b919a21c7d84d0c6d6a713", "patch": "@@ -0,0 +1,20 @@\n+mod foo {\n+    struct A;\n+    mod bar {\n+        struct B;\n+    }\n+}\n+\n+struct Foo {\n+    a: foo:A,\n+    //~^ ERROR found single colon in a struct field type path\n+    //~| expected `,`, or `}`, found `:`\n+}\n+\n+struct Bar {\n+    b: foo::bar:B,\n+    //~^ ERROR found single colon in a struct field type path\n+    //~| expected `,`, or `}`, found `:`\n+}\n+\n+fn main() {}"}, {"sha": "189759d64fc4ee59d24e8e21d0121bd81e1ffc9c", "filename": "src/test/ui/suggestions/struct-field-type-including-single-colon.stderr", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/298c9a0e14944872d1b919a21c7d84d0c6d6a713/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-field-type-including-single-colon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/298c9a0e14944872d1b919a21c7d84d0c6d6a713/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-field-type-including-single-colon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fstruct-field-type-including-single-colon.stderr?ref=298c9a0e14944872d1b919a21c7d84d0c6d6a713", "patch": "@@ -0,0 +1,36 @@\n+error: found single colon in a struct field type path\n+  --> $DIR/struct-field-type-including-single-colon.rs:9:11\n+   |\n+LL |     a: foo:A,\n+   |           ^\n+   |\n+help: write a path separator here\n+   |\n+LL |     a: foo::A,\n+   |           ~~\n+\n+error: expected `,`, or `}`, found `:`\n+  --> $DIR/struct-field-type-including-single-colon.rs:9:11\n+   |\n+LL |     a: foo:A,\n+   |           ^\n+\n+error: found single colon in a struct field type path\n+  --> $DIR/struct-field-type-including-single-colon.rs:15:16\n+   |\n+LL |     b: foo::bar:B,\n+   |                ^\n+   |\n+help: write a path separator here\n+   |\n+LL |     b: foo::bar::B,\n+   |                ~~\n+\n+error: expected `,`, or `}`, found `:`\n+  --> $DIR/struct-field-type-including-single-colon.rs:15:16\n+   |\n+LL |     b: foo::bar:B,\n+   |                ^\n+\n+error: aborting due to 4 previous errors\n+"}]}