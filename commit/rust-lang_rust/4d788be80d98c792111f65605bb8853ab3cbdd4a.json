{"sha": "4d788be80d98c792111f65605bb8853ab3cbdd4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNzg4YmU4MGQ5OGM3OTIxMTFmNjU2MDViYjg4NTNhYjNjYmRkNGE=", "commit": {"author": {"name": "Tomoki Aonuma", "email": "uasi@99cm.org", "date": "2012-02-12T19:43:47Z"}, "committer": {"name": "Tomoki Aonuma", "email": "uasi@99cm.org", "date": "2012-02-13T03:44:14Z"}, "message": "from_cstr and from_cstr_len are not unsafe, I think", "tree": {"sha": "af0825f22efbbecad934aa396dd39b2edaa44682", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af0825f22efbbecad934aa396dd39b2edaa44682"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d788be80d98c792111f65605bb8853ab3cbdd4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d788be80d98c792111f65605bb8853ab3cbdd4a", "html_url": "https://github.com/rust-lang/rust/commit/4d788be80d98c792111f65605bb8853ab3cbdd4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d788be80d98c792111f65605bb8853ab3cbdd4a/comments", "author": {"login": "uasi", "id": 22321, "node_id": "MDQ6VXNlcjIyMzIx", "avatar_url": "https://avatars.githubusercontent.com/u/22321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uasi", "html_url": "https://github.com/uasi", "followers_url": "https://api.github.com/users/uasi/followers", "following_url": "https://api.github.com/users/uasi/following{/other_user}", "gists_url": "https://api.github.com/users/uasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/uasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uasi/subscriptions", "organizations_url": "https://api.github.com/users/uasi/orgs", "repos_url": "https://api.github.com/users/uasi/repos", "events_url": "https://api.github.com/users/uasi/events{/privacy}", "received_events_url": "https://api.github.com/users/uasi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "uasi", "id": 22321, "node_id": "MDQ6VXNlcjIyMzIx", "avatar_url": "https://avatars.githubusercontent.com/u/22321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uasi", "html_url": "https://github.com/uasi", "followers_url": "https://api.github.com/users/uasi/followers", "following_url": "https://api.github.com/users/uasi/following{/other_user}", "gists_url": "https://api.github.com/users/uasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/uasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uasi/subscriptions", "organizations_url": "https://api.github.com/users/uasi/orgs", "repos_url": "https://api.github.com/users/uasi/repos", "events_url": "https://api.github.com/users/uasi/events{/privacy}", "received_events_url": "https://api.github.com/users/uasi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d29e8705626e28d3bf96d194dd97311e1967995", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d29e8705626e28d3bf96d194dd97311e1967995", "html_url": "https://github.com/rust-lang/rust/commit/8d29e8705626e28d3bf96d194dd97311e1967995"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5b4cc1f77e864bd10d2a41a11a34518197695f90", "filename": "src/libcore/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d788be80d98c792111f65605bb8853ab3cbdd4a/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d788be80d98c792111f65605bb8853ab3cbdd4a/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=4d788be80d98c792111f65605bb8853ab3cbdd4a", "patch": "@@ -194,7 +194,7 @@ Function: from_cstr\n \n Create a Rust string from a null-terminated C string\n */\n-unsafe fn from_cstr(cstr: sbuf) -> str {\n+fn from_cstr(cstr: sbuf) -> str unsafe {\n     let start = cstr;\n     let curr = start;\n     let i = 0u;\n@@ -210,7 +210,7 @@ Function: from_cstr_len\n \n Create a Rust string from a C string of the given length\n */\n-unsafe fn from_cstr_len(cstr: sbuf, len: uint) -> str {\n+fn from_cstr_len(cstr: sbuf, len: uint) -> str unsafe {\n     let buf: [u8] = [];\n     vec::reserve(buf, len + 1u);\n     vec::as_buf(buf) {|b| ptr::memcpy(b, cstr, len); }"}]}