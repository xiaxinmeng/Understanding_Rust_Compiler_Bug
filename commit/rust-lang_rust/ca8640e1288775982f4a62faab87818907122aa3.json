{"sha": "ca8640e1288775982f4a62faab87818907122aa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhODY0MGUxMjg4Nzc1OTgyZjRhNjJmYWFiODc4MTg5MDcxMjJhYTM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-05-30T03:39:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-30T03:39:16Z"}, "message": "Rollup merge of #72677 - chrissimpkins:fix-72574, r=estebank\n\nFix diagnostics for `@ ..` binding pattern in tuples and tuple structs\n\nFixes #72574\nAssociated https://github.com/rust-lang/rust/pull/72534 https://github.com/rust-lang/rust/issues/72373\n\nIncludes a new suggestion with `Applicability::MaybeIncorrect` confidence level.\n\n### Before\n\n#### tuple\n\n```\nerror: `..` patterns are not allowed here\n --> src/main.rs:4:19\n  |\n4 |         (_a, _x @ ..) => {}\n  |                   ^^\n  |\n  = note: only allowed in tuple, tuple struct, and slice patterns\n\nerror[E0308]: mismatched types\n --> src/main.rs:4:9\n  |\n3 |     match x {\n  |           - this expression has type `({integer}, {integer}, {integer})`\n4 |         (_a, _x @ ..) => {}\n  |         ^^^^^^^^^^^^^ expected a tuple with 3 elements, found one with 2 elements\n  |\n  = note: expected tuple `({integer}, {integer}, {integer})`\n             found tuple `(_, _)`\n\nerror: aborting due to 2 previous errors\n```\n\n#### tuple struct\n\n```\nerror: `..` patterns are not allowed here\n --> src/main.rs:6:25\n  |\n6 |         Binder(_a, _x @ ..) => {}\n  |                         ^^\n  |\n  = note: only allowed in tuple, tuple struct, and slice patterns\n\nerror[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 3 fields\n --> src/main.rs:6:9\n  |\n1 | struct Binder(i32, i32, i32);\n  | ----------------------------- tuple struct defined here\n...\n6 |         Binder(_a, _x @ ..) => {}\n  |         ^^^^^^^^^^^^^^^^^^^ expected 3 fields, found 2\n\nerror: aborting due to 2 previous errors\n```\n\n### After\n\n*Note: final output edited during source review discussion, see thread for details*\n\n#### tuple\n\n```\nerror: `_x @` is not allowed in a tuple\n --> src/main.rs:4:14\n  |\n4 |         (_a, _x @ ..) => {}\n  |              ^^^^^^^ is only allowed in a slice\n  |\nhelp: replace with `..` or use a different valid pattern\n  |\n4 |         (_a, ..) => {}\n  |              ^^\n\nerror[E0308]: mismatched types\n --> src/main.rs:4:9\n  |\n3 |     match x {\n  |           - this expression has type `({integer}, {integer}, {integer})`\n4 |         (_a, _x @ ..) => {}\n  |         ^^^^^^^^^^^^^ expected a tuple with 3 elements, found one with 1 element\n  |\n  = note: expected tuple `({integer}, {integer}, {integer})`\n             found tuple `(_,)`\n\nerror: aborting due to 2 previous errors\n```\n\n#### tuple struct\n\n```\nerror: `_x @` is not allowed in a tuple struct\n --> src/main.rs:6:20\n  |\n6 |         Binder(_a, _x @ ..) => {}\n  |                    ^^^^^^^ is only allowed in a slice\n  |\nhelp: replace with `..` or use a different valid pattern\n  |\n6 |         Binder(_a, ..) => {}\n  |                    ^^\n\nerror[E0023]: this pattern has 1 field, but the corresponding tuple struct has 3 fields\n --> src/main.rs:6:9\n  |\n1 | struct Binder(i32, i32, i32);\n  | ----------------------------- tuple struct defined here\n...\n6 |         Binder(_a, _x @ ..) => {}\n  |         ^^^^^^^^^^^^^^^^^^^ expected 3 fields, found 1\n\nerror: aborting due to 2 previous errors\n```\n\nr? @estebank", "tree": {"sha": "0e3625380828079b0f19c4556b954b2bc34684e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e3625380828079b0f19c4556b954b2bc34684e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca8640e1288775982f4a62faab87818907122aa3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0dVkCRBK7hj4Ov3rIwAAdHIIAHK9qm/kTxBcP3K03U5lE4ag\nyV2P1Djw5IagJ8bhUxk5ELBdZHQnDwAdCWqqSAD1pJ38IBTgGB7Q2bGgVEfrXoE/\nj0pc8ScgkQkHHijhCvVmG2cZNf00Fo4SoVmnFKpXdBFhcSyQn3tZWqVTKZ1jka6u\nJIk3GJ67WrH07nPLPD01qcVhAUz/Kh65/P67GKlb8CRDkp/DDvesLYXX7Y2XIJ6P\nYvTM2BhzUtYpfL4aWfAneRYp/PL3iKXmqluPMIvM254+nRIqSJiQVEo253trgj1y\n9pQr8zI/yd4dhraKV7YQd/rS6FP0mIRb/atdeh77j49lEUdgDefea00vfIdzktY=\n=Swg0\n-----END PGP SIGNATURE-----\n", "payload": "tree 0e3625380828079b0f19c4556b954b2bc34684e5\nparent 7624ac7dc4b44f5ef9d1ee1e9959e251db77d5ab\nparent 27ed143ba9bb96e907f56c9f294c904a2cb26123\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1590809956 +0900\ncommitter GitHub <noreply@github.com> 1590809956 +0900\n\nRollup merge of #72677 - chrissimpkins:fix-72574, r=estebank\n\nFix diagnostics for `@ ..` binding pattern in tuples and tuple structs\n\nFixes #72574\nAssociated https://github.com/rust-lang/rust/pull/72534 https://github.com/rust-lang/rust/issues/72373\n\nIncludes a new suggestion with `Applicability::MaybeIncorrect` confidence level.\n\n### Before\n\n#### tuple\n\n```\nerror: `..` patterns are not allowed here\n --> src/main.rs:4:19\n  |\n4 |         (_a, _x @ ..) => {}\n  |                   ^^\n  |\n  = note: only allowed in tuple, tuple struct, and slice patterns\n\nerror[E0308]: mismatched types\n --> src/main.rs:4:9\n  |\n3 |     match x {\n  |           - this expression has type `({integer}, {integer}, {integer})`\n4 |         (_a, _x @ ..) => {}\n  |         ^^^^^^^^^^^^^ expected a tuple with 3 elements, found one with 2 elements\n  |\n  = note: expected tuple `({integer}, {integer}, {integer})`\n             found tuple `(_, _)`\n\nerror: aborting due to 2 previous errors\n```\n\n#### tuple struct\n\n```\nerror: `..` patterns are not allowed here\n --> src/main.rs:6:25\n  |\n6 |         Binder(_a, _x @ ..) => {}\n  |                         ^^\n  |\n  = note: only allowed in tuple, tuple struct, and slice patterns\n\nerror[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 3 fields\n --> src/main.rs:6:9\n  |\n1 | struct Binder(i32, i32, i32);\n  | ----------------------------- tuple struct defined here\n...\n6 |         Binder(_a, _x @ ..) => {}\n  |         ^^^^^^^^^^^^^^^^^^^ expected 3 fields, found 2\n\nerror: aborting due to 2 previous errors\n```\n\n### After\n\n*Note: final output edited during source review discussion, see thread for details*\n\n#### tuple\n\n```\nerror: `_x @` is not allowed in a tuple\n --> src/main.rs:4:14\n  |\n4 |         (_a, _x @ ..) => {}\n  |              ^^^^^^^ is only allowed in a slice\n  |\nhelp: replace with `..` or use a different valid pattern\n  |\n4 |         (_a, ..) => {}\n  |              ^^\n\nerror[E0308]: mismatched types\n --> src/main.rs:4:9\n  |\n3 |     match x {\n  |           - this expression has type `({integer}, {integer}, {integer})`\n4 |         (_a, _x @ ..) => {}\n  |         ^^^^^^^^^^^^^ expected a tuple with 3 elements, found one with 1 element\n  |\n  = note: expected tuple `({integer}, {integer}, {integer})`\n             found tuple `(_,)`\n\nerror: aborting due to 2 previous errors\n```\n\n#### tuple struct\n\n```\nerror: `_x @` is not allowed in a tuple struct\n --> src/main.rs:6:20\n  |\n6 |         Binder(_a, _x @ ..) => {}\n  |                    ^^^^^^^ is only allowed in a slice\n  |\nhelp: replace with `..` or use a different valid pattern\n  |\n6 |         Binder(_a, ..) => {}\n  |                    ^^\n\nerror[E0023]: this pattern has 1 field, but the corresponding tuple struct has 3 fields\n --> src/main.rs:6:9\n  |\n1 | struct Binder(i32, i32, i32);\n  | ----------------------------- tuple struct defined here\n...\n6 |         Binder(_a, _x @ ..) => {}\n  |         ^^^^^^^^^^^^^^^^^^^ expected 3 fields, found 1\n\nerror: aborting due to 2 previous errors\n```\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca8640e1288775982f4a62faab87818907122aa3", "html_url": "https://github.com/rust-lang/rust/commit/ca8640e1288775982f4a62faab87818907122aa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca8640e1288775982f4a62faab87818907122aa3/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7624ac7dc4b44f5ef9d1ee1e9959e251db77d5ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/7624ac7dc4b44f5ef9d1ee1e9959e251db77d5ab", "html_url": "https://github.com/rust-lang/rust/commit/7624ac7dc4b44f5ef9d1ee1e9959e251db77d5ab"}, {"sha": "27ed143ba9bb96e907f56c9f294c904a2cb26123", "url": "https://api.github.com/repos/rust-lang/rust/commits/27ed143ba9bb96e907f56c9f294c904a2cb26123", "html_url": "https://github.com/rust-lang/rust/commit/27ed143ba9bb96e907f56c9f294c904a2cb26123"}], "stats": {"total": 79, "additions": 76, "deletions": 3}, "files": [{"sha": "55c1f8026633702acdff8688200a5d4793cf0c7d", "filename": "src/librustc_ast_lowering/pat.rs", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/ca8640e1288775982f4a62faab87818907122aa3/src%2Flibrustc_ast_lowering%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca8640e1288775982f4a62faab87818907122aa3/src%2Flibrustc_ast_lowering%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpat.rs?ref=ca8640e1288775982f4a62faab87818907122aa3", "patch": "@@ -3,6 +3,7 @@ use super::{ImplTraitContext, LoweringContext, ParamMode};\n use rustc_ast::ast::*;\n use rustc_ast::ptr::P;\n use rustc_data_structures::stack::ensure_sufficient_stack;\n+use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_span::symbol::Ident;\n@@ -102,10 +103,36 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             // Note that unlike for slice patterns,\n             // where `xs @ ..` is a legal sub-slice pattern,\n             // it is not a legal sub-tuple pattern.\n-            if pat.is_rest() {\n-                rest = Some((idx, pat.span));\n-                break;\n+            match pat.kind {\n+                // Found a sub-tuple rest pattern\n+                PatKind::Rest => {\n+                    rest = Some((idx, pat.span));\n+                    break;\n+                }\n+                // Found a sub-tuple pattern `$binding_mode $ident @ ..`.\n+                // This is not allowed as a sub-tuple pattern\n+                PatKind::Ident(ref _bm, ident, Some(ref sub)) if sub.is_rest() => {\n+                    rest = Some((idx, pat.span));\n+                    let sp = pat.span;\n+                    self.diagnostic()\n+                        .struct_span_err(\n+                            sp,\n+                            &format!(\"`{} @` is not allowed in a {}\", ident.name, ctx),\n+                        )\n+                        .span_label(sp, \"this is only allowed in slice patterns\")\n+                        .help(\"remove this and bind each tuple field independently\")\n+                        .span_suggestion_verbose(\n+                            sp,\n+                            &format!(\"if you don't need to use the contents of {}, discard the tuple's remaining fields\", ident),\n+                            \"..\".to_string(),\n+                            Applicability::MaybeIncorrect,\n+                        )\n+                        .emit();\n+                    break;\n+                }\n+                _ => {}\n             }\n+\n             // It was not a sub-tuple pattern so lower it normally.\n             elems.push(self.lower_pat(pat));\n         }"}, {"sha": "efbb0bfb1508f4c8c8355490bb28fe43e1fb7ed1", "filename": "src/test/ui/issues/issue-72574-1.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ca8640e1288775982f4a62faab87818907122aa3/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca8640e1288775982f4a62faab87818907122aa3/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.rs?ref=ca8640e1288775982f4a62faab87818907122aa3", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+    let x = (1, 2, 3);\n+    match x {\n+        (_a, _x @ ..) => {}\n+        _ => {}\n+    }\n+}\n+//~^^^^ ERROR `_x @` is not allowed in a tuple"}, {"sha": "329f7d008d498e57a5e366f28fa6fb825f9b0c05", "filename": "src/test/ui/issues/issue-72574-1.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ca8640e1288775982f4a62faab87818907122aa3/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca8640e1288775982f4a62faab87818907122aa3/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.stderr?ref=ca8640e1288775982f4a62faab87818907122aa3", "patch": "@@ -0,0 +1,14 @@\n+error: `_x @` is not allowed in a tuple\n+  --> $DIR/issue-72574-1.rs:4:14\n+   |\n+LL |         (_a, _x @ ..) => {}\n+   |              ^^^^^^^ this is only allowed in slice patterns\n+   |\n+   = help: remove this and bind each tuple field independently\n+help: if you don't need to use the contents of _x, discard the tuple's remaining fields\n+   |\n+LL |         (_a, ..) => {}\n+   |              ^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "0c8f6fcc5088909d3abaac72068f942d23597ef9", "filename": "src/test/ui/issues/issue-72574-2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ca8640e1288775982f4a62faab87818907122aa3/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca8640e1288775982f4a62faab87818907122aa3/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.rs?ref=ca8640e1288775982f4a62faab87818907122aa3", "patch": "@@ -0,0 +1,10 @@\n+struct Binder(i32, i32, i32);\n+\n+fn main() {\n+    let x = Binder(1, 2, 3);\n+    match x {\n+        Binder(_a, _x @ ..) => {}\n+        _ => {}\n+    }\n+}\n+//~^^^^ ERROR `_x @` is not allowed in a tuple struct"}, {"sha": "6faa57bcca6b191b526b40196833b669c44d4930", "filename": "src/test/ui/issues/issue-72574-2.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ca8640e1288775982f4a62faab87818907122aa3/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca8640e1288775982f4a62faab87818907122aa3/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr?ref=ca8640e1288775982f4a62faab87818907122aa3", "patch": "@@ -0,0 +1,14 @@\n+error: `_x @` is not allowed in a tuple struct\n+  --> $DIR/issue-72574-2.rs:6:20\n+   |\n+LL |         Binder(_a, _x @ ..) => {}\n+   |                    ^^^^^^^ this is only allowed in slice patterns\n+   |\n+   = help: remove this and bind each tuple field independently\n+help: if you don't need to use the contents of _x, discard the tuple's remaining fields\n+   |\n+LL |         Binder(_a, ..) => {}\n+   |                    ^^\n+\n+error: aborting due to previous error\n+"}]}