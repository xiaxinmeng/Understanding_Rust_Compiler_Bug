{"sha": "8b0937293bdb70ab4a5efed02b90a71af2b234f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMDkzNzI5M2JkYjcwYWI0YTVlZmVkMDJiOTBhNzFhZjJiMjM0ZjY=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-29T05:50:44Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-04-06T06:01:55Z"}, "message": "rustc: move rustc_front to rustc::hir.", "tree": {"sha": "7db24b3a02e775cdce37e5373e2e08d56b23aaa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7db24b3a02e775cdce37e5373e2e08d56b23aaa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b0937293bdb70ab4a5efed02b90a71af2b234f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b0937293bdb70ab4a5efed02b90a71af2b234f6", "html_url": "https://github.com/rust-lang/rust/commit/8b0937293bdb70ab4a5efed02b90a71af2b234f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b0937293bdb70ab4a5efed02b90a71af2b234f6/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "772c600d4d6f39daa6d07d1a60ee0df3d3426978", "url": "https://api.github.com/repos/rust-lang/rust/commits/772c600d4d6f39daa6d07d1a60ee0df3d3426978", "html_url": "https://github.com/rust-lang/rust/commit/772c600d4d6f39daa6d07d1a60ee0df3d3426978"}], "stats": {"total": 985, "additions": 419, "deletions": 566}, "files": [{"sha": "4c06afcae0c420534131ac6c97d1b102e6151bcf", "filename": "mk/crates.mk", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -56,7 +56,7 @@ TARGET_CRATES := libc std term \\\n \t\t alloc_system alloc_jemalloc\n RUSTC_CRATES := rustc rustc_typeck rustc_mir rustc_borrowck rustc_resolve rustc_driver \\\n                 rustc_trans rustc_back rustc_llvm rustc_privacy rustc_lint \\\n-                rustc_data_structures rustc_front rustc_platform_intrinsics \\\n+                rustc_data_structures rustc_platform_intrinsics \\\n                 rustc_plugin rustc_metadata rustc_passes rustc_save_analysis \\\n                 rustc_const_eval rustc_const_math\n HOST_CRATES := syntax syntax_ext $(RUSTC_CRATES) rustdoc fmt_macros \\\n@@ -93,38 +93,37 @@ DEPS_syntax := std term serialize log arena libc rustc_bitflags rustc_unicode\n DEPS_syntax_ext := syntax fmt_macros\n \n DEPS_rustc_const_math := std syntax log serialize\n-DEPS_rustc_const_eval := rustc_const_math rustc syntax log serialize rustc_front \\\n+DEPS_rustc_const_eval := rustc_const_math rustc syntax log serialize \\\n \t\t\t\t\t     rustc_back graphviz\n \n-DEPS_rustc := syntax fmt_macros flate arena serialize getopts rbml rustc_front\\\n+DEPS_rustc := syntax fmt_macros flate arena serialize getopts rbml \\\n               log graphviz rustc_back rustc_data_structures\\\n \t\t  \t  rustc_const_math\n-DEPS_rustc_back := std syntax rustc_front flate log libc\n-DEPS_rustc_borrowck := rustc rustc_front rustc_mir log graphviz syntax\n+DEPS_rustc_back := std syntax flate log libc\n+DEPS_rustc_borrowck := rustc rustc_mir log graphviz syntax\n DEPS_rustc_data_structures := std log serialize\n DEPS_rustc_driver := arena flate getopts graphviz libc rustc rustc_back rustc_borrowck \\\n                      rustc_typeck rustc_mir rustc_resolve log syntax serialize rustc_llvm \\\n-\t             rustc_trans rustc_privacy rustc_lint rustc_front rustc_plugin \\\n+\t             rustc_trans rustc_privacy rustc_lint rustc_plugin \\\n                      rustc_metadata syntax_ext rustc_passes rustc_save_analysis rustc_const_eval\n-DEPS_rustc_front := std syntax log serialize\n DEPS_rustc_lint := rustc log syntax rustc_const_eval\n DEPS_rustc_llvm := native:rustllvm libc std rustc_bitflags\n-DEPS_rustc_metadata := rustc rustc_front syntax rbml rustc_const_math\n-DEPS_rustc_passes := syntax rustc core rustc_front rustc_const_eval\n-DEPS_rustc_mir := rustc rustc_front syntax rustc_const_math rustc_const_eval\n-DEPS_rustc_resolve := arena rustc rustc_front log syntax\n+DEPS_rustc_metadata := rustc syntax rbml rustc_const_math\n+DEPS_rustc_passes := syntax rustc core rustc_const_eval\n+DEPS_rustc_mir := rustc syntax rustc_const_math rustc_const_eval\n+DEPS_rustc_resolve := arena rustc log syntax\n DEPS_rustc_platform_intrinsics := std\n DEPS_rustc_plugin := rustc rustc_metadata syntax rustc_mir\n-DEPS_rustc_privacy := rustc rustc_front log syntax\n+DEPS_rustc_privacy := rustc log syntax\n DEPS_rustc_trans := arena flate getopts graphviz libc rustc rustc_back rustc_mir \\\n-                    log syntax serialize rustc_llvm rustc_front rustc_platform_intrinsics \\\n+                    log syntax serialize rustc_llvm rustc_platform_intrinsics \\\n                     rustc_const_math rustc_const_eval\n-DEPS_rustc_save_analysis := rustc log syntax rustc_front\n-DEPS_rustc_typeck := rustc syntax rustc_front rustc_platform_intrinsics rustc_const_math \\\n+DEPS_rustc_save_analysis := rustc log syntax\n+DEPS_rustc_typeck := rustc syntax rustc_platform_intrinsics rustc_const_math \\\n                      rustc_const_eval\n \n DEPS_rustdoc := rustc rustc_driver native:hoedown serialize getopts \\\n-                test rustc_lint rustc_front rustc_const_eval\n+                test rustc_lint rustc_const_eval\n \n \n TOOL_DEPS_compiletest := test getopts log"}, {"sha": "d77268219fcecb76e1fcf7730527da81085da824", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -19,6 +19,5 @@ rustc_back = { path = \"../librustc_back\" }\n rustc_bitflags = { path = \"../librustc_bitflags\" }\n rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n-rustc_front = { path = \"../librustc_front\" }\n serialize = { path = \"../libserialize\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "4fc0a0926133e4b2dcca7c9a2a773f005e271385", "filename": "src/librustc/cfg/construct.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fcfg%2Fconstruct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fcfg%2Fconstruct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fcfg%2Fconstruct.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -16,7 +16,7 @@ use ty::{self, TyCtxt};\n use syntax::ast;\n use syntax::ptr::P;\n \n-use rustc_front::hir::{self, PatKind};\n+use hir::{self, PatKind};\n \n struct CFGBuilder<'a, 'tcx: 'a> {\n     tcx: &'a TyCtxt<'tcx>,\n@@ -257,7 +257,7 @@ impl<'a, 'tcx> CFGBuilder<'a, 'tcx> {\n                 self.match_(expr.id, &discr, &arms, pred)\n             }\n \n-            hir::ExprBinary(op, ref l, ref r) if ::rustc_front::util::lazy_binop(op.node) => {\n+            hir::ExprBinary(op, ref l, ref r) if hir::util::lazy_binop(op.node) => {\n                 //\n                 //     [pred]\n                 //       |"}, {"sha": "c651baae28224015fc3b790a3af5ee59d14d6aba", "filename": "src/librustc/cfg/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fcfg%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fcfg%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fcfg%2Fgraphviz.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,7 +17,7 @@ use graphviz::IntoCow;\n \n use syntax::ast;\n \n-use front::map as ast_map;\n+use hir::map as ast_map;\n use cfg;\n \n pub type Node<'a> = (cfg::CFGIndex, &'a cfg::CFGNode);"}, {"sha": "e86bf6ebc589af97d1e7f7b7d665678e584a6c7a", "filename": "src/librustc/cfg/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fcfg%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fcfg%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fcfg%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -14,7 +14,7 @@\n use rustc_data_structures::graph;\n use ty::TyCtxt;\n use syntax::ast;\n-use rustc_front::hir;\n+use hir;\n \n mod construct;\n pub mod graphviz;"}, {"sha": "70e7f675fcea9d92243bae1e06d5a203b868471e", "filename": "src/librustc/dep_graph/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fdep_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fdep_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -12,8 +12,8 @@ use self::thread::{DepGraphThreadData, DepMessage};\n use middle::def_id::DefId;\n use syntax::ast::NodeId;\n use ty::TyCtxt;\n-use rustc_front::hir;\n-use rustc_front::intravisit::Visitor;\n+use hir;\n+use hir::intravisit::Visitor;\n use std::rc::Rc;\n \n mod dep_tracking_map;"}, {"sha": "085acc198d16adcdbccd2e1d94ff24b0bd75dc19", "filename": "src/librustc/hir/check_attr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "previous_filename": "src/librustc/front/check_attr.rs"}, {"sha": "e65f2fc37debfa813c63f982711ffd7236d4b9e7", "filename": "src/librustc/hir/fold.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Ffold.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "previous_filename": "src/librustc_front/fold.rs"}, {"sha": "be1cc528d889e59134bf8f67449153f3548b99c5", "filename": "src/librustc/hir/intravisit.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fintravisit.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "previous_filename": "src/librustc_front/intravisit.rs"}, {"sha": "66b9e217bd387d448103c5c0e2d3103335fec2b1", "filename": "src/librustc/hir/lowering.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "previous_filename": "src/librustc_front/lowering.rs"}, {"sha": "7b1c692d54b5e84d7ffba99996c6f884826bb160", "filename": "src/librustc/hir/map/blocks.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -23,14 +23,14 @@\n \n pub use self::Code::*;\n \n-use front::map::{self, Node};\n+use hir::map::{self, Node};\n use syntax::abi;\n-use rustc_front::hir::{Block, FnDecl};\n+use hir::{Block, FnDecl};\n use syntax::ast::{Attribute, Name, NodeId};\n use syntax::attr::ThinAttributesExt;\n-use rustc_front::hir as ast;\n+use hir as ast;\n use syntax::codemap::Span;\n-use rustc_front::intravisit::FnKind;\n+use hir::intravisit::FnKind;\n \n /// An FnLikeNode is a Node that is like a fn, in that it has a decl\n /// and a body (as well as a NodeId, a span, etc).", "previous_filename": "src/librustc/front/map/blocks.rs"}, {"sha": "7036822217256c1c12c7de96214e11f221f77894", "filename": "src/librustc/hir/map/collector.rs", "status": "renamed", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -11,9 +11,8 @@\n use super::*;\n use super::MapEntry::*;\n \n-use rustc_front::hir::*;\n-use rustc_front::util;\n-use rustc_front::intravisit::{self, Visitor};\n+use hir::*;\n+use hir::intravisit::Visitor;\n use middle::def_id::{CRATE_DEF_INDEX, DefId, DefIndex};\n use std::iter::repeat;\n use syntax::ast::{NodeId, CRATE_NODE_ID, DUMMY_NODE_ID};", "previous_filename": "src/librustc/front/map/collector.rs"}, {"sha": "82574b852297aba88db676c7186203bc0f1c0d07", "filename": "src/librustc/hir/map/definitions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "previous_filename": "src/librustc/front/map/definitions.rs"}, {"sha": "4325be9b9a43b1edf41efe7c9044b5223f354d9e", "filename": "src/librustc/hir/map/mod.rs", "status": "renamed", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -27,10 +27,9 @@ use syntax::attr::ThinAttributesExt;\n use syntax::codemap::{Span, Spanned};\n use syntax::parse::token;\n \n-use rustc_front::hir::*;\n-use rustc_front::fold::Folder;\n-use rustc_front::intravisit;\n-use rustc_front::print::pprust;\n+use hir::*;\n+use hir::fold::Folder;\n+use hir::print as pprust;\n \n use arena::TypedArena;\n use std::cell::RefCell;", "previous_filename": "src/librustc/front/map/mod.rs"}, {"sha": "eaf59af2cc359466bebd2c30328da5acc9a4bcff", "filename": "src/librustc/hir/mod.rs", "status": "renamed", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -33,8 +33,6 @@ pub use self::ViewPath_::*;\n pub use self::Visibility::*;\n pub use self::PathParameters::*;\n \n-use intravisit::Visitor;\n-use std::collections::BTreeMap;\n use syntax::codemap::{self, Span, Spanned, DUMMY_SP, ExpnId};\n use syntax::abi::Abi;\n use syntax::ast::{Name, NodeId, DUMMY_NODE_ID, TokenTree, AsmDialect};\n@@ -43,9 +41,7 @@ use syntax::attr::{ThinAttributes, ThinAttributesExt};\n use syntax::parse::token::InternedString;\n use syntax::ptr::P;\n \n-use print::pprust;\n-use util;\n-\n+use std::collections::BTreeMap;\n use std::fmt;\n use std::hash::{Hash, Hasher};\n use serialize::{Encodable, Decodable, Encoder, Decoder};\n@@ -66,6 +62,15 @@ macro_rules! hir_vec {\n     ($($x:expr,)*) => (vec![$($x),*])\n }\n \n+pub mod check_attr;\n+pub mod fold;\n+pub mod intravisit;\n+pub mod lowering;\n+pub mod map;\n+pub mod print;\n+pub mod svh;\n+pub mod util;\n+\n /// Identifier in HIR\n #[derive(Clone, Copy, Eq)]\n pub struct Ident {\n@@ -135,7 +140,7 @@ impl fmt::Debug for Lifetime {\n         write!(f,\n                \"lifetime({}: {})\",\n                self.id,\n-               pprust::lifetime_to_string(self))\n+               print::lifetime_to_string(self))\n     }\n }\n \n@@ -161,13 +166,13 @@ pub struct Path {\n \n impl fmt::Debug for Path {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"path({})\", pprust::path_to_string(self))\n+        write!(f, \"path({})\", print::path_to_string(self))\n     }\n }\n \n impl fmt::Display for Path {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"{}\", pprust::path_to_string(self))\n+        write!(f, \"{}\", print::path_to_string(self))\n     }\n }\n \n@@ -434,7 +439,9 @@ impl Crate {\n     /// follows lexical scoping rules -- then you want a different\n     /// approach. You should override `visit_nested_item` in your\n     /// visitor and then call `intravisit::walk_crate` instead.\n-    pub fn visit_all_items<'hir, V:Visitor<'hir>>(&'hir self, visitor: &mut V) {\n+    pub fn visit_all_items<'hir, V>(&'hir self, visitor: &mut V)\n+        where V: intravisit::Visitor<'hir>\n+    {\n         for (_, item) in &self.items {\n             visitor.visit_item(item);\n         }\n@@ -479,7 +486,7 @@ pub struct Pat {\n \n impl fmt::Debug for Pat {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"pat({}: {})\", self.id, pprust::pat_to_string(self))\n+        write!(f, \"pat({}: {})\", self.id, print::pat_to_string(self))\n     }\n }\n \n@@ -619,7 +626,7 @@ impl fmt::Debug for Stmt_ {\n         write!(f,\n                \"stmt({}: {})\",\n                util::stmt_id(&spanned),\n-               pprust::stmt_to_string(&spanned))\n+               print::stmt_to_string(&spanned))\n     }\n }\n \n@@ -722,7 +729,7 @@ pub struct Expr {\n \n impl fmt::Debug for Expr {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"expr({}: {})\", self.id, pprust::expr_to_string(self))\n+        write!(f, \"expr({}: {})\", self.id, print::expr_to_string(self))\n     }\n }\n \n@@ -940,7 +947,7 @@ pub struct Ty {\n \n impl fmt::Debug for Ty {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"type({})\", pprust::ty_to_string(self))\n+        write!(f, \"type({})\", print::ty_to_string(self))\n     }\n }\n ", "previous_filename": "src/librustc_front/hir.rs"}, {"sha": "568986f39c5278dc4c47178aead4fb097ddc941a", "filename": "src/librustc/hir/print.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -950,7 +950,7 @@ impl<'a> State<'a> {\n \n     pub fn print_variant(&mut self, v: &hir::Variant) -> io::Result<()> {\n         self.head(\"\")?;\n-        let generics = ::util::empty_generics();\n+        let generics = hir::util::empty_generics();\n         self.print_struct(&v.node.data, &generics, v.node.name, v.span, false)?;\n         match v.node.disr_expr {\n             Some(ref d) => {\n@@ -1285,12 +1285,12 @@ impl<'a> State<'a> {\n                          -> io::Result<()> {\n         self.print_expr(lhs)?;\n         space(&mut self.s)?;\n-        self.word_space(::util::binop_to_string(op.node))?;\n+        self.word_space(hir::util::binop_to_string(op.node))?;\n         self.print_expr(rhs)\n     }\n \n     fn print_expr_unary(&mut self, op: hir::UnOp, expr: &hir::Expr) -> io::Result<()> {\n-        word(&mut self.s, ::util::unop_to_string(op))?;\n+        word(&mut self.s, hir::util::unop_to_string(op))?;\n         self.print_expr_maybe_paren(expr)\n     }\n \n@@ -1434,7 +1434,7 @@ impl<'a> State<'a> {\n             hir::ExprAssignOp(op, ref lhs, ref rhs) => {\n                 self.print_expr(&lhs)?;\n                 space(&mut self.s)?;\n-                word(&mut self.s, ::util::binop_to_string(op.node))?;\n+                word(&mut self.s, hir::util::binop_to_string(op.node))?;\n                 self.word_space(\"=\")?;\n                 self.print_expr(&rhs)?;\n             }", "previous_filename": "src/librustc_front/print/pprust.rs"}, {"sha": "7ae20f68ad0c2af3969f765c949c04013893ee7a", "filename": "src/librustc/hir/svh.rs", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fsvh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Fsvh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fsvh.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -48,8 +48,8 @@\n \n use std::fmt;\n use std::hash::{Hash, SipHasher, Hasher};\n-use rustc_front::hir;\n-use rustc_front::intravisit as visit;\n+use hir;\n+use hir::intravisit as visit;\n \n #[derive(Clone, PartialEq, Debug)]\n pub struct Svh {\n@@ -134,10 +134,10 @@ mod svh_visitor {\n     use syntax::ast::{self, Name, NodeId};\n     use syntax::codemap::Span;\n     use syntax::parse::token;\n-    use rustc_front::intravisit as visit;\n-    use rustc_front::intravisit::{Visitor, FnKind};\n-    use rustc_front::hir::*;\n-    use rustc_front::hir;\n+    use hir::intravisit as visit;\n+    use hir::intravisit::{Visitor, FnKind};\n+    use hir::*;\n+    use hir;\n \n     use std::hash::{Hash, SipHasher};\n ", "previous_filename": "src/librustc_back/svh.rs"}, {"sha": "7745c320e7681ae4032da3153d7c1ed381212669", "filename": "src/librustc/hir/util.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fhir%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Futil.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -10,7 +10,7 @@\n \n use hir;\n use hir::*;\n-use intravisit::{self, Visitor, FnKind};\n+use hir::intravisit::{Visitor, FnKind};\n use syntax::ast_util;\n use syntax::ast::{Name, NodeId, DUMMY_NODE_ID};\n use syntax::codemap::Span;", "previous_filename": "src/librustc_front/util.rs"}, {"sha": "c0c63ac5042fb45013cc6fc018763708858fc16d", "filename": "src/librustc/infer/error_reporting.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Finfer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Finfer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -73,9 +73,9 @@ use super::region_inference::SameRegions;\n \n use std::collections::HashSet;\n \n-use front::map as ast_map;\n-use rustc_front::hir;\n-use rustc_front::print::pprust;\n+use hir::map as ast_map;\n+use hir;\n+use hir::print as pprust;\n \n use middle::cstore::CrateStore;\n use middle::def::Def;"}, {"sha": "427ff88b8f24b04c009577527d51781cddfd9c34", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -19,7 +19,7 @@ pub use self::freshen::TypeFreshener;\n pub use self::region_inference::{GenericKind, VerifyBound};\n \n use middle::def_id::DefId;\n-use rustc_front::hir;\n+use hir;\n use middle::free_region::FreeRegionMap;\n use middle::mem_categorization as mc;\n use middle::mem_categorization::McResult;"}, {"sha": "291eab30decbf927ce97a1eb40de621b1993ce15", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -38,6 +38,7 @@\n #![feature(rustc_private)]\n #![feature(slice_patterns)]\n #![feature(staged_api)]\n+#![feature(step_by)]\n #![feature(str_char)]\n #![feature(question_mark)]\n #![cfg_attr(test, feature(test))]\n@@ -51,7 +52,6 @@ extern crate graphviz;\n extern crate libc;\n extern crate rbml;\n extern crate rustc_back;\n-extern crate rustc_front;\n extern crate rustc_data_structures;\n extern crate serialize;\n extern crate collections;\n@@ -72,19 +72,9 @@ mod macros;\n // registered before they are used.\n pub mod diagnostics;\n \n-pub mod back {\n-    pub use rustc_back::rpath;\n-    pub use rustc_back::svh;\n-}\n-\n pub mod cfg;\n pub mod dep_graph;\n-\n-pub mod front {\n-    pub mod check_attr;\n-    pub mod map;\n-}\n-\n+pub mod hir;\n pub mod infer;\n pub mod lint;\n "}, {"sha": "832443527692694b53c1f7ab12860d3bdb544ca2", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -46,9 +46,9 @@ use syntax::errors::DiagnosticBuilder;\n use syntax::parse::token::InternedString;\n use syntax::ast;\n use syntax::attr::ThinAttributesExt;\n-use rustc_front::hir;\n-use rustc_front::util;\n-use rustc_front::intravisit as hir_visit;\n+use hir;\n+use hir::util;\n+use hir::intravisit as hir_visit;\n use syntax::visit as ast_visit;\n \n /// Information about the registered lints."}, {"sha": "28994e1a7c48d50d82f6c807784a0b3bee4c5989", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -34,10 +34,10 @@ pub use self::LintSource::*;\n use std::hash;\n use std::ascii::AsciiExt;\n use syntax::codemap::Span;\n-use rustc_front::intravisit::FnKind;\n+use hir::intravisit::FnKind;\n use syntax::visit as ast_visit;\n use syntax::ast;\n-use rustc_front::hir;\n+use hir;\n \n pub use lint::context::{LateContext, EarlyContext, LintContext, LintStore,\n                         raw_emit_lint, check_crate, check_ast_crate, gather_attrs,"}, {"sha": "871440a7e54ff03dd51bcce848dd521110c24020", "filename": "src/librustc/middle/astconv_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fastconv_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fastconv_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastconv_util.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -18,7 +18,7 @@ use middle::def::Def;\n use ty::{Ty, TyCtxt};\n \n use syntax::codemap::Span;\n-use rustc_front::hir as ast;\n+use hir as ast;\n \n pub fn prohibit_type_params(tcx: &TyCtxt, segments: &[ast::PathSegment]) {\n     for segment in segments {"}, {"sha": "59a3ab44645d993aaa57a825c1bdbfd4f79bec7f", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -22,8 +22,8 @@\n // are *mostly* used as a part of that interface, but these should\n // probably get a better home if someone can find one.\n \n-use back::svh::Svh;\n-use front::map as hir_map;\n+use hir::svh::Svh;\n+use hir::map as hir_map;\n use middle::def::{self, Def};\n use middle::lang_items;\n use ty::{self, Ty, TyCtxt, VariantKind};\n@@ -44,9 +44,9 @@ use syntax::codemap::Span;\n use syntax::ptr::P;\n use syntax::parse::token::InternedString;\n use rustc_back::target::Target;\n-use rustc_front::hir;\n-use rustc_front::intravisit::Visitor;\n-use rustc_front::util::IdVisitor;\n+use hir;\n+use hir::intravisit::Visitor;\n+use hir::util::IdVisitor;\n \n pub use self::DefLike::{DlDef, DlField, DlImpl};\n pub use self::NativeLibraryKind::{NativeStatic, NativeFramework, NativeUnknown};"}, {"sha": "99b512141a4939306ba12a4fc7ec2139a13c3b2c", "filename": "src/librustc/middle/dataflow.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fdataflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fdataflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdataflow.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -25,9 +25,9 @@ use syntax::ast_util::IdRange;\n use syntax::print::pp;\n use syntax::print::pprust::PrintState;\n use util::nodemap::NodeMap;\n-use rustc_front::hir;\n-use rustc_front::intravisit;\n-use rustc_front::print::pprust;\n+use hir;\n+use hir::intravisit;\n+use hir::print as pprust;\n \n \n #[derive(Copy, Clone, Debug)]"}, {"sha": "b7b6279270cb4fd16a39ad660ec45595cd1e98a7", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -13,9 +13,9 @@\n // from live codes are live, and everything else is dead.\n \n use dep_graph::DepNode;\n-use front::map as ast_map;\n-use rustc_front::hir::{self, PatKind};\n-use rustc_front::intravisit::{self, Visitor};\n+use hir::map as ast_map;\n+use hir::{self, PatKind};\n+use hir::intravisit::{self, Visitor};\n \n use middle::{pat_util, privacy};\n use ty::{self, TyCtxt};"}, {"sha": "ee6e747a855543c7daad33c7cd0383e05be5eb61", "filename": "src/librustc/middle/def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdef.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -12,7 +12,7 @@ use middle::def_id::DefId;\n use ty::subst::ParamSpace;\n use util::nodemap::NodeMap;\n use syntax::ast;\n-use rustc_front::hir;\n+use hir;\n \n #[derive(Clone, Copy, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\n pub enum Def {"}, {"sha": "e4c93dfdb931921c7c261073db409c41a85ba2c7", "filename": "src/librustc/middle/effect.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Feffect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Feffect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Feffect.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -19,9 +19,9 @@ use ty::MethodCall;\n \n use syntax::ast;\n use syntax::codemap::Span;\n-use rustc_front::hir;\n-use rustc_front::intravisit;\n-use rustc_front::intravisit::{FnKind, Visitor};\n+use hir;\n+use hir::intravisit;\n+use hir::intravisit::{FnKind, Visitor};\n \n #[derive(Copy, Clone)]\n struct UnsafeContext {"}, {"sha": "4a64980fcdd5a1dbf0ce25c8b246379119f3d5fa", "filename": "src/librustc/middle/entry.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fentry.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -10,15 +10,15 @@\n \n \n use dep_graph::DepNode;\n-use front::map as ast_map;\n+use hir::map as ast_map;\n use middle::def_id::{CRATE_DEF_INDEX};\n use session::{config, Session};\n use syntax::ast::NodeId;\n use syntax::attr;\n use syntax::codemap::Span;\n use syntax::entry::EntryPointType;\n-use rustc_front::hir::{Item, ItemFn};\n-use rustc_front::intravisit::Visitor;\n+use hir::{Item, ItemFn};\n+use hir::intravisit::Visitor;\n \n struct EntryContext<'a, 'tcx: 'a> {\n     session: &'a Session,"}, {"sha": "47ec7ab5ff05a1497c9dddf73cbaa9bc0a16b73d", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -26,7 +26,7 @@ use infer;\n use middle::mem_categorization as mc;\n use ty::{self, TyCtxt, adjustment};\n \n-use rustc_front::hir::{self, PatKind};\n+use hir::{self, PatKind};\n \n use syntax::ast;\n use syntax::ptr::P;\n@@ -479,7 +479,7 @@ impl<'d,'t,'a,'tcx> ExprUseVisitor<'d,'t,'a,'tcx> {\n             }\n \n             hir::ExprUnary(op, ref lhs) => {\n-                let pass_args = if ::rustc_front::util::is_by_value_unop(op) {\n+                let pass_args = if hir::util::is_by_value_unop(op) {\n                     PassArgs::ByValue\n                 } else {\n                     PassArgs::ByRef\n@@ -491,7 +491,7 @@ impl<'d,'t,'a,'tcx> ExprUseVisitor<'d,'t,'a,'tcx> {\n             }\n \n             hir::ExprBinary(op, ref lhs, ref rhs) => {\n-                let pass_args = if ::rustc_front::util::is_by_value_binop(op.node) {\n+                let pass_args = if hir::util::is_by_value_binop(op.node) {\n                     PassArgs::ByValue\n                 } else {\n                     PassArgs::ByRef\n@@ -524,7 +524,7 @@ impl<'d,'t,'a,'tcx> ExprUseVisitor<'d,'t,'a,'tcx> {\n \n             hir::ExprAssignOp(op, ref lhs, ref rhs) => {\n                 // NB All our assignment operations take the RHS by value\n-                assert!(::rustc_front::util::is_by_value_binop(op.node));\n+                assert!(hir::util::is_by_value_binop(op.node));\n \n                 if !self.walk_overloaded_operator(expr, lhs, vec![rhs], PassArgs::ByValue) {\n                     self.mutate_expr(expr, &lhs, MutateMode::WriteAndRead);"}, {"sha": "354a6c5e13bca5831ea55115ad3b85b012cfe4a5", "filename": "src/librustc/middle/intrinsicck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -20,8 +20,8 @@ use std::fmt;\n use syntax::abi::Abi::RustIntrinsic;\n use syntax::ast;\n use syntax::codemap::Span;\n-use rustc_front::intravisit::{self, Visitor, FnKind};\n-use rustc_front::hir;\n+use hir::intravisit::{self, Visitor, FnKind};\n+use hir;\n \n pub fn check_crate(tcx: &TyCtxt) {\n     let mut visitor = IntrinsicCheckingVisitor {"}, {"sha": "7aad106c4ed445049884f07d04625461293593ce", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -22,7 +22,7 @@\n pub use self::LangItem::*;\n \n use dep_graph::DepNode;\n-use front::map as hir_map;\n+use hir::map as hir_map;\n use session::Session;\n use middle::cstore::CrateStore;\n use middle::def_id::DefId;\n@@ -33,8 +33,8 @@ use util::nodemap::FnvHashMap;\n use syntax::ast;\n use syntax::attr::AttrMetaMethods;\n use syntax::parse::token::InternedString;\n-use rustc_front::intravisit::Visitor;\n-use rustc_front::hir;\n+use hir::intravisit::Visitor;\n+use hir;\n \n // The actual lang items defined come at the end of this file in one handy table.\n // So you probably just want to nip down to the end."}, {"sha": "8d429ff23842086cce2ad6a996e9c4d5cc19f134", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -128,10 +128,10 @@ use syntax::codemap::{BytePos, original_sp, Span};\n use syntax::parse::token::special_idents;\n use syntax::ptr::P;\n \n-use rustc_front::hir::Expr;\n-use rustc_front::hir;\n-use rustc_front::print::pprust::{expr_to_string, block_to_string};\n-use rustc_front::intravisit::{self, Visitor, FnKind};\n+use hir::Expr;\n+use hir;\n+use hir::print::{expr_to_string, block_to_string};\n+use hir::intravisit::{self, Visitor, FnKind};\n \n /// For use with `propagate_through_loop`.\n enum LoopKind<'a> {\n@@ -484,7 +484,7 @@ fn visit_expr(ir: &mut IrMaps, expr: &Expr) {\n         ir.add_live_node_for_node(expr.id, ExprNode(expr.span));\n         intravisit::walk_expr(ir, expr);\n       }\n-      hir::ExprBinary(op, _, _) if ::rustc_front::util::lazy_binop(op.node) => {\n+      hir::ExprBinary(op, _, _) if hir::util::lazy_binop(op.node) => {\n         ir.add_live_node_for_node(expr.id, ExprNode(expr.span));\n         intravisit::walk_expr(ir, expr);\n       }\n@@ -1142,7 +1142,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n             self.propagate_through_exprs(&exprs[..], succ)\n           }\n \n-          hir::ExprBinary(op, ref l, ref r) if ::rustc_front::util::lazy_binop(op.node) => {\n+          hir::ExprBinary(op, ref l, ref r) if hir::util::lazy_binop(op.node) => {\n             let r_succ = self.propagate_through_expr(&r, succ);\n \n             let ln = self.live_node(expr.id, expr.span);"}, {"sha": "7260bdde3ee710cb266973c1ee3a8461b702b664", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -72,15 +72,15 @@ pub use self::deref_kind::*;\n use self::Aliasability::*;\n \n use middle::def_id::DefId;\n-use front::map as ast_map;\n+use hir::map as ast_map;\n use infer;\n use middle::const_qualif::ConstQualif;\n use middle::def::Def;\n use ty::adjustment;\n use ty::{self, Ty, TyCtxt};\n \n-use rustc_front::hir::{MutImmutable, MutMutable, PatKind};\n-use rustc_front::hir;\n+use hir::{MutImmutable, MutMutable, PatKind};\n+use hir;\n use syntax::ast;\n use syntax::codemap::Span;\n "}, {"sha": "3cd69603b5bfdaf55ff31f2f389f4f239b3c1797", "filename": "src/librustc/middle/pat_util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fpat_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fpat_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fpat_util.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -14,8 +14,8 @@ use ty::TyCtxt;\n use util::nodemap::FnvHashMap;\n \n use syntax::ast;\n-use rustc_front::hir::{self, PatKind};\n-use rustc_front::util::walk_pat;\n+use hir::{self, PatKind};\n+use hir::util::walk_pat;\n use syntax::codemap::{respan, Span, Spanned, DUMMY_SP};\n \n use std::cell::RefCell;"}, {"sha": "8c44594c1f783f5761dacf52983c884cfc9a944c", "filename": "src/librustc/middle/reachable.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Freachable.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -16,7 +16,7 @@\n // reachable as well.\n \n use dep_graph::DepNode;\n-use front::map as ast_map;\n+use hir::map as ast_map;\n use middle::def::Def;\n use middle::def_id::DefId;\n use ty::{self, TyCtxt};\n@@ -28,9 +28,9 @@ use std::collections::HashSet;\n use syntax::abi::Abi;\n use syntax::ast;\n use syntax::attr;\n-use rustc_front::hir;\n-use rustc_front::intravisit::Visitor;\n-use rustc_front::intravisit;\n+use hir;\n+use hir::intravisit::Visitor;\n+use hir::intravisit;\n \n // Returns true if the given set of generics implies that the item it's\n // associated with must be inlined."}, {"sha": "99ebf5ccb845c66052d8e69c28e839d62418a87a", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,7 +17,7 @@\n //! `middle/infer/region_inference/README.md`\n \n use dep_graph::DepNode;\n-use front::map as ast_map;\n+use hir::map as ast_map;\n use session::Session;\n use util::nodemap::{FnvHashMap, NodeMap, NodeSet};\n use middle::cstore::InlinedItem;\n@@ -30,10 +30,10 @@ use std::mem;\n use syntax::codemap::{self, Span};\n use syntax::ast::{self, NodeId};\n \n-use rustc_front::hir;\n-use rustc_front::intravisit::{self, Visitor, FnKind};\n-use rustc_front::hir::{Block, Item, FnDecl, Arm, Pat, PatKind, Stmt, Expr, Local};\n-use rustc_front::util::stmt_id;\n+use hir;\n+use hir::intravisit::{self, Visitor, FnKind};\n+use hir::{Block, Item, FnDecl, Arm, Pat, PatKind, Stmt, Expr, Local};\n+use hir::util::stmt_id;\n \n #[derive(Clone, PartialEq, PartialOrd, Eq, Ord, Hash, RustcEncodable,\n            RustcDecodable, Copy)]"}, {"sha": "1275753a3406b0c1c7d5d9e26f01d0793973ae5c", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -19,7 +19,7 @@ pub use self::DefRegion::*;\n use self::ScopeChain::*;\n \n use dep_graph::DepNode;\n-use front::map::Map;\n+use hir::map::Map;\n use session::Session;\n use middle::def::{Def, DefMap};\n use middle::region;\n@@ -32,9 +32,9 @@ use syntax::codemap::Span;\n use syntax::parse::token::special_idents;\n use util::nodemap::NodeMap;\n \n-use rustc_front::hir;\n-use rustc_front::print::pprust::lifetime_to_string;\n-use rustc_front::intravisit::{self, Visitor, FnKind};\n+use hir;\n+use hir::print::lifetime_to_string;\n+use hir::intravisit::{self, Visitor, FnKind};\n \n #[derive(Clone, Copy, PartialEq, Eq, Hash, RustcEncodable, RustcDecodable, Debug)]\n pub enum DefRegion {"}, {"sha": "ffb4a791363c4ae5ae0cc2259a2825c21cf5e610", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -14,7 +14,7 @@\n pub use self::StabilityLevel::*;\n \n use dep_graph::DepNode;\n-use front::map as hir_map;\n+use hir::map as hir_map;\n use session::Session;\n use lint;\n use middle::cstore::{CrateStore, LOCAL_CRATE};\n@@ -30,9 +30,9 @@ use syntax::feature_gate::{GateIssue, emit_feature_err};\n use syntax::attr::{self, Stability, Deprecation, AttrMetaMethods};\n use util::nodemap::{DefIdMap, FnvHashSet, FnvHashMap};\n \n-use rustc_front::hir;\n-use rustc_front::hir::{Item, Generics, StructField, Variant, PatKind};\n-use rustc_front::intravisit::{self, Visitor};\n+use hir;\n+use hir::{Item, Generics, StructField, Variant, PatKind};\n+use hir::intravisit::{self, Visitor};\n \n use std::mem::replace;\n use std::cmp::Ordering;"}, {"sha": "74bb41785cbe143446c0975bb0ceaa404c9e9fe5", "filename": "src/librustc/middle/weak_lang_items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -18,9 +18,9 @@ use middle::lang_items;\n use syntax::ast;\n use syntax::codemap::Span;\n use syntax::parse::token::InternedString;\n-use rustc_front::intravisit::Visitor;\n-use rustc_front::intravisit;\n-use rustc_front::hir;\n+use hir::intravisit::Visitor;\n+use hir::intravisit;\n+use hir;\n \n use std::collections::HashSet;\n "}, {"sha": "1b24b4f6210bb0db1460171b06699ce2091084c5", "filename": "src/librustc/mir/repr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmir%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmir%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Frepr.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -16,7 +16,7 @@ use ty::subst::Substs;\n use ty::{self, AdtDef, ClosureSubsts, FnOutput, Region, Ty};\n use util::ppaux;\n use rustc_back::slice;\n-use rustc_front::hir::InlineAsm;\n+use hir::InlineAsm;\n use std::ascii;\n use std::borrow::{Cow};\n use std::fmt::{self, Debug, Formatter, Write};"}, {"sha": "d710417bf20d8b152f0d91e2e31e7869b4dc5273", "filename": "src/librustc/mir/tcx.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmir%2Ftcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fmir%2Ftcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftcx.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,7 +17,7 @@ use mir::repr::*;\n use ty::subst::{Subst, Substs};\n use ty::{self, AdtDef, Ty, TyCtxt};\n use ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n-use rustc_front::hir;\n+use hir;\n \n #[derive(Copy, Clone, Debug)]\n pub enum LvalueTy<'tcx> {"}, {"sha": "97c9caadd523713538078e533c5a16e089754716", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -49,7 +49,7 @@ use std::cell::RefCell;\n use std::fmt;\n use std::rc::Rc;\n use syntax::abi::Abi;\n-use rustc_front::hir;\n+use hir;\n use util::common::ErrorReported;\n use util::nodemap::FnvHashMap;\n "}, {"sha": "41008823c851274450e7cd9db23bf11f40d7691d", "filename": "src/librustc/ty/adjustment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fadjustment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fadjustment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fadjustment.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,7 +17,7 @@ use ty::LvaluePreference::{NoPreference};\n use syntax::ast;\n use syntax::codemap::Span;\n \n-use rustc_front::hir;\n+use hir;\n \n #[derive(Copy, Clone)]\n pub enum AutoAdjustment<'tcx> {"}, {"sha": "fa5a7f3ca692d11746c7c746cd8a5ce4d1e65ec7", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -11,7 +11,7 @@\n //! type context book-keeping\n \n use dep_graph::{DepGraph, DepTrackingMap};\n-use front::map as ast_map;\n+use hir::map as ast_map;\n use session::Session;\n use lint;\n use middle;\n@@ -45,7 +45,7 @@ use syntax::ast::{self, Name, NodeId};\n use syntax::attr;\n use syntax::parse::token::{self, special_idents};\n \n-use rustc_front::hir;\n+use hir;\n \n /// Internal storage\n pub struct CtxtArenas<'tcx> {"}, {"sha": "e6b7b49ea573c191c26f6bf1caf93552f5ddcfcb", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -19,7 +19,7 @@ use syntax::ast::{self, Name};\n use syntax::codemap::Span;\n use syntax::errors::DiagnosticBuilder;\n \n-use rustc_front::hir;\n+use hir;\n \n #[derive(Clone, Copy, Debug)]\n pub struct ExpectedFound<T> {"}, {"sha": "0648450d8331b04125ec05d530f4d422072cbc60", "filename": "src/librustc/ty/item_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fitem_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fitem_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fitem_path.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use front::map::DefPathData;\n+use hir::map::DefPathData;\n use middle::cstore::LOCAL_CRATE;\n use middle::def_id::{DefId, CRATE_DEF_INDEX};\n use ty::{self, Ty, TyCtxt};"}, {"sha": "69a6a6aa920f3b5b818e42c153d1ae171eabcc3b", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -19,8 +19,8 @@ pub use self::LvaluePreference::*;\n pub use self::fold::TypeFoldable;\n \n use dep_graph::{self, DepNode};\n-use front::map as ast_map;\n-use front::map::LinkedPath;\n+use hir::map as ast_map;\n+use hir::map::LinkedPath;\n use middle;\n use middle::cstore::{self, CrateStore, LOCAL_CRATE};\n use middle::def::{self, Def, ExportMap};\n@@ -52,9 +52,9 @@ use syntax::parse::token::InternedString;\n \n use rustc_const_math::ConstInt;\n \n-use rustc_front::hir;\n-use rustc_front::hir::{ItemImpl, ItemTrait, PatKind};\n-use rustc_front::intravisit::Visitor;\n+use hir;\n+use hir::{ItemImpl, ItemTrait, PatKind};\n+use hir::intravisit::Visitor;\n \n pub use self::sty::{Binder, DebruijnIndex};\n pub use self::sty::{BuiltinBound, BuiltinBounds, ExistentialBounds};"}, {"sha": "b1bff9b43cccee818a9a17aec960d49c0ac4403c", "filename": "src/librustc/ty/relate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Frelate.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -19,7 +19,7 @@ use ty::{self, Ty, TyCtxt, TypeFoldable};\n use ty::error::{ExpectedFound, TypeError};\n use std::rc::Rc;\n use syntax::abi;\n-use rustc_front::hir as ast;\n+use hir as ast;\n \n pub type RelateResult<'tcx, T> = Result<T, TypeError<'tcx>>;\n "}, {"sha": "bbf6d0329b4eee57243e0112699699fca53db4c8", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,7 +17,7 @@ use std::rc::Rc;\n use syntax::abi;\n use syntax::ptr::P;\n \n-use rustc_front::hir;\n+use hir;\n \n ///////////////////////////////////////////////////////////////////////////\n // Lift implementations"}, {"sha": "101c8501bd3dd0d0daa632b424dc40fe94d0b420", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -28,7 +28,7 @@ use syntax::parse::token::special_idents;\n \n use serialize::{Decodable, Decoder};\n \n-use rustc_front::hir;\n+use hir;\n \n use self::FnOutput::*;\n use self::InferTy::*;"}, {"sha": "0eb70f93bed30d8620f8422aa0d4d35c1c5b58f5", "filename": "src/librustc/ty/trait_def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Ftrait_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Ftrait_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ftrait_def.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,7 +17,7 @@ use ty::{Ty, TyCtxt, TraitRef};\n use std::borrow::{Borrow};\n use std::cell::{Cell, Ref, RefCell};\n use syntax::ast::Name;\n-use rustc_front::hir;\n+use hir;\n use util::nodemap::FnvHashMap;\n \n /// As `TypeScheme` but for a trait ref."}, {"sha": "710cd2e301c09ee4cc4d6631085c63b8bcedd099", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -10,7 +10,7 @@\n \n //! misc. type-system utilities too small to deserve their own file\n \n-use back::svh::Svh;\n+use hir::svh::Svh;\n use middle::def_id::DefId;\n use ty::subst;\n use infer;\n@@ -28,7 +28,7 @@ use syntax::ast::{self, Name};\n use syntax::attr::{self, AttrMetaMethods, SignedInt, UnsignedInt};\n use syntax::codemap::Span;\n \n-use rustc_front::hir;\n+use hir;\n \n pub trait IntTypeExt {\n     fn to_ty<'tcx>(&self, cx: &TyCtxt<'tcx>) -> Ty<'tcx>;"}, {"sha": "bdfb97549d5d512647ce80179eb8d38579cd1378", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -19,9 +19,9 @@ use std::iter::repeat;\n use std::path::Path;\n use std::time::Instant;\n \n-use rustc_front::hir;\n-use rustc_front::intravisit;\n-use rustc_front::intravisit::Visitor;\n+use hir;\n+use hir::intravisit;\n+use hir::intravisit::Visitor;\n \n // The name of the associated type for `Fn` return types\n pub const FN_OUTPUT_NAME: &'static str = \"Output\";"}, {"sha": "c386a670ba256c62b5e675e0aa56d7f20f908ff4", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -23,7 +23,7 @@ use std::fmt;\n use syntax::abi::Abi;\n use syntax::parse::token;\n use syntax::ast::CRATE_NODE_ID;\n-use rustc_front::hir;\n+use hir;\n \n pub fn verbose() -> bool {\n     ty::tls::with(|tcx| tcx.sess.verbose())"}, {"sha": "85e861b405a9f8620b9480902e0208ce33666abd", "filename": "src/librustc_back/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_back%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_back%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -11,7 +11,6 @@ crate-type = [\"dylib\"]\n [dependencies]\n syntax = { path = \"../libsyntax\" }\n serialize = { path = \"../libserialize\" }\n-rustc_front = { path = \"../librustc_front\" }\n log = { path = \"../liblog\" }\n \n [features]"}, {"sha": "25edaf4b8e4e9774740a34513f18934797b2b3f4", "filename": "src/librustc_back/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_back%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_back%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -45,13 +45,11 @@\n extern crate syntax;\n extern crate libc;\n extern crate serialize;\n-extern crate rustc_front;\n #[macro_use] extern crate log;\n \n pub mod tempdir;\n pub mod rpath;\n pub mod sha2;\n-pub mod svh;\n pub mod target;\n pub mod slice;\n pub mod dynamic_lib;"}, {"sha": "6da87f97fb79fdcded43f2cd4c79dfd35450ecf3", "filename": "src/librustc_borrowck/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -13,5 +13,4 @@ log = { path = \"../liblog\" }\n syntax = { path = \"../libsyntax\" }\n graphviz = { path = \"../libgraphviz\" }\n rustc = { path = \"../librustc\" }\n-rustc_front = { path = \"../librustc_front\" }\n rustc_mir = { path = \"../librustc_mir\" }"}, {"sha": "d79ba213aca14f6763cc23fb79559df5efa928cd", "filename": "src/librustc_borrowck/borrowck/check_loans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -30,7 +30,7 @@ use rustc::ty::{self, TyCtxt};\n use rustc::traits::ProjectionMode;\n use syntax::ast;\n use syntax::codemap::Span;\n-use rustc_front::hir;\n+use rustc::hir;\n \n use std::rc::Rc;\n "}, {"sha": "c85d69fa8a60d40ac8a1ab42c6c22772a834785d", "filename": "src/librustc_borrowck/borrowck/gather_loans/gather_moves.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -23,7 +23,7 @@ use rustc::ty;\n use std::rc::Rc;\n use syntax::ast;\n use syntax::codemap::Span;\n-use rustc_front::hir::{self, PatKind};\n+use rustc::hir::{self, PatKind};\n \n struct GatherMoveInfo<'tcx> {\n     id: ast::NodeId,"}, {"sha": "893c27f0ede32ff903294a4c2abae04513d80ff1", "filename": "src/librustc_borrowck/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -29,10 +29,10 @@ use rustc::traits::ProjectionMode;\n use syntax::ast;\n use syntax::codemap::Span;\n use syntax::ast::NodeId;\n-use rustc_front::hir;\n-use rustc_front::hir::Expr;\n-use rustc_front::intravisit;\n-use rustc_front::intravisit::Visitor;\n+use rustc::hir;\n+use rustc::hir::Expr;\n+use rustc::hir::intravisit;\n+use rustc::hir::intravisit::Visitor;\n \n use self::restrictions::RestrictionResult;\n "}, {"sha": "3d94f5b186f0ff3371b74f15905ebe733290d473", "filename": "src/librustc_borrowck/borrowck/gather_loans/move_error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -16,7 +16,7 @@ use rustc::ty;\n use syntax::ast;\n use syntax::codemap;\n use syntax::errors::DiagnosticBuilder;\n-use rustc_front::hir;\n+use rustc::hir;\n \n pub struct MoveErrorCollector<'tcx> {\n     errors: Vec<MoveError<'tcx>>"}, {"sha": "672faea58f501d6370fab01311a4b41433654b02", "filename": "src/librustc_borrowck/borrowck/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -13,8 +13,8 @@ use borrowck::BorrowckCtxt;\n use syntax::ast;\n use syntax::codemap::Span;\n \n-use rustc_front::hir;\n-use rustc_front::intravisit::{FnKind};\n+use rustc::hir;\n+use rustc::hir::intravisit::{FnKind};\n \n use rustc::mir::repr::{BasicBlock, BasicBlockData, Mir, Statement, Terminator};\n "}, {"sha": "fec327f4aa030ca3e514baefd3a33bb6d6ae86d2", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -21,8 +21,8 @@ pub use self::MovedValueUseKind::*;\n use self::InteriorKind::*;\n \n use rustc::dep_graph::DepNode;\n-use rustc::front::map as hir_map;\n-use rustc::front::map::blocks::FnParts;\n+use rustc::hir::map as hir_map;\n+use rustc::hir::map::blocks::FnParts;\n use rustc::cfg;\n use rustc::middle::dataflow::DataFlowContext;\n use rustc::middle::dataflow::BitwiseOperator;\n@@ -44,11 +44,11 @@ use syntax::attr::AttrMetaMethods;\n use syntax::codemap::Span;\n use syntax::errors::DiagnosticBuilder;\n \n-use rustc_front::hir;\n-use rustc_front::hir::{FnDecl, Block};\n-use rustc_front::intravisit;\n-use rustc_front::intravisit::{Visitor, FnKind};\n-use rustc_front::util as hir_util;\n+use rustc::hir;\n+use rustc::hir::{FnDecl, Block};\n+use rustc::hir::intravisit;\n+use rustc::hir::intravisit::{Visitor, FnKind};\n+use rustc::hir::util as hir_util;\n \n use rustc::mir::mir_map::MirMap;\n "}, {"sha": "292cfcfeac19c423cd3841b2437af8e67ee329ed", "filename": "src/librustc_borrowck/borrowck/move_data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -30,7 +30,7 @@ use std::usize;\n use syntax::ast;\n use syntax::ast_util;\n use syntax::codemap::Span;\n-use rustc_front::hir;\n+use rustc::hir;\n \n #[path=\"fragments.rs\"]\n pub mod fragments;"}, {"sha": "e38677de6625fc46a97eb015d011f76967d8e0d7", "filename": "src/librustc_borrowck/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -34,7 +34,6 @@\n extern crate graphviz as dot;\n #[macro_use]\n extern crate rustc;\n-extern crate rustc_front;\n extern crate rustc_mir;\n extern crate core; // for NonZero\n "}, {"sha": "c572284a6bb376c2acd5311d38df8838c18edfb5", "filename": "src/librustc_const_eval/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_const_eval%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_const_eval%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -12,7 +12,6 @@ crate-type = [\"dylib\"]\n log = { path = \"../liblog\" }\n serialize = { path = \"../libserialize\" }\n rustc = { path = \"../librustc\" }\n-rustc_front = { path = \"../librustc_front\" }\n rustc_back = { path = \"../librustc_back\" }\n rustc_const_math = { path = \"../librustc_const_math\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "70781184f74a4cb2fa008c094787549d6a86e7d5", "filename": "src/librustc_const_eval/check_match.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_const_eval%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_const_eval%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fcheck_match.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -32,17 +32,17 @@ use std::cmp::Ordering;\n use std::fmt;\n use std::iter::{FromIterator, IntoIterator, repeat};\n \n-use rustc_front::hir;\n-use rustc_front::hir::{Pat, PatKind};\n-use rustc_front::intravisit::{self, Visitor, FnKind};\n-use rustc_front::util as front_util;\n+use rustc::hir;\n+use rustc::hir::{Pat, PatKind};\n+use rustc::hir::intravisit::{self, Visitor, FnKind};\n+use rustc::hir::util as front_util;\n use rustc_back::slice;\n \n use syntax::ast::{self, DUMMY_NODE_ID, NodeId};\n use syntax::ast_util;\n use syntax::codemap::{Span, Spanned, DUMMY_SP};\n-use rustc_front::fold::{Folder, noop_fold_pat};\n-use rustc_front::print::pprust::pat_to_string;\n+use rustc::hir::fold::{Folder, noop_fold_pat};\n+use rustc::hir::print::pat_to_string;\n use syntax::ptr::P;\n use rustc::util::nodemap::FnvHashMap;\n "}, {"sha": "dba31ddef95dd39c33e560676057af45081b91fa", "filename": "src/librustc_const_eval/eval.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_const_eval%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_const_eval%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Feval.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -15,8 +15,8 @@ use rustc::middle::const_val::ConstVal;\n use self::ErrKind::*;\n use self::EvalHint::*;\n \n-use rustc::front::map as ast_map;\n-use rustc::front::map::blocks::FnLikeNode;\n+use rustc::hir::map as ast_map;\n+use rustc::hir::map::blocks::FnLikeNode;\n use rustc::middle::cstore::{self, CrateStore, InlinedItem};\n use rustc::{infer, traits};\n use rustc::middle::def::Def;\n@@ -31,9 +31,9 @@ use rustc::lint;\n \n use graphviz::IntoCow;\n use syntax::ast;\n-use rustc_front::hir::{Expr, PatKind};\n-use rustc_front::hir;\n-use rustc_front::intravisit::FnKind;\n+use rustc::hir::{Expr, PatKind};\n+use rustc::hir;\n+use rustc::hir::intravisit::FnKind;\n use syntax::codemap::Span;\n use syntax::ptr::P;\n use syntax::codemap;"}, {"sha": "085888dc21f64bb4d38fbcc01f2d93c675f4f5f8", "filename": "src/librustc_const_eval/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_const_eval%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_const_eval%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -33,7 +33,6 @@\n #[macro_use] extern crate syntax;\n #[macro_use] extern crate log;\n #[macro_use] extern crate rustc;\n-extern crate rustc_front;\n extern crate rustc_back;\n extern crate rustc_const_math;\n extern crate graphviz;"}, {"sha": "bac5900f3edafda51dc18b7aefa6ee140c5e5fec", "filename": "src/librustc_driver/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,7 +17,6 @@ rustc = { path = \"../librustc\" }\n rustc_back = { path = \"../librustc_back\" }\n rustc_borrowck = { path = \"../librustc_borrowck\" }\n rustc_const_eval = { path = \"../librustc_const_eval\" }\n-rustc_front = { path = \"../librustc_front\" }\n rustc_lint = { path = \"../librustc_lint\" }\n rustc_llvm = { path = \"../librustc_llvm\" }\n rustc_mir = { path = \"../librustc_mir\" }"}, {"sha": "f661b2a38b655d6d3510b8ba2e7a5e91eca22149", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n use rustc::dep_graph::DepGraph;\n-use rustc::front;\n-use rustc::front::map as hir_map;\n+use rustc::hir;\n+use rustc::hir::map as hir_map;\n use rustc_mir as mir;\n use rustc::mir::mir_map::MirMap;\n use rustc::session::{Session, CompileResult, compile_result_from_err_count};\n@@ -35,8 +35,7 @@ use rustc_typeck as typeck;\n use rustc_privacy;\n use rustc_plugin::registry::Registry;\n use rustc_plugin as plugin;\n-use rustc_front::hir;\n-use rustc_front::lowering::{lower_crate, LoweringContext};\n+use rustc::hir::lowering::{lower_crate, LoweringContext};\n use rustc_passes::{no_asm, loops, consts, const_fn, rvalues, static_recursion};\n use rustc_const_eval::check_match;\n use super::Compilation;\n@@ -155,7 +154,7 @@ pub fn compile_input(sess: &Session,\n         }\n \n         time(sess.time_passes(), \"attribute checking\", || {\n-            front::check_attr::check_crate(sess, &expanded_crate);\n+            hir::check_attr::check_crate(sess, &expanded_crate);\n         });\n \n         time(sess.time_passes(),"}, {"sha": "b4b53d30e3c04b54395eab24b197ddfecdbf062d", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -42,7 +42,6 @@ extern crate rustc_back;\n extern crate rustc_borrowck;\n extern crate rustc_const_eval;\n extern crate rustc_passes;\n-extern crate rustc_front;\n extern crate rustc_lint;\n extern crate rustc_plugin;\n extern crate rustc_privacy;"}, {"sha": "cda5595c1024e5024e46a4707022af3ac6a332ca", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -50,11 +50,11 @@ use std::option;\n use std::path::PathBuf;\n use std::str::FromStr;\n \n-use rustc::front::map as hir_map;\n-use rustc::front::map::{blocks, NodePrinter};\n-use rustc_front::hir;\n-use rustc_front::lowering::{lower_crate, LoweringContext};\n-use rustc_front::print::pprust as pprust_hir;\n+use rustc::hir::map as hir_map;\n+use rustc::hir::map::{blocks, NodePrinter};\n+use rustc::hir;\n+use rustc::hir::lowering::{lower_crate, LoweringContext};\n+use rustc::hir::print as pprust_hir;\n \n use rustc::mir::mir_map::MirMap;\n "}, {"sha": "fc12d546288b47b0c4a4fe5770723521c955b82d", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -27,7 +27,7 @@ use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc::ty::relate::TypeRelation;\n use rustc::infer::{self, InferOk, InferResult, TypeOrigin};\n use rustc_metadata::cstore::CStore;\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use rustc::session::{self, config};\n use std::rc::Rc;\n use syntax::ast;\n@@ -39,8 +39,8 @@ use syntax::errors::{Level, RenderSpan};\n use syntax::parse::token;\n use syntax::feature_gate::UnstableFeatures;\n \n-use rustc_front::lowering::{lower_crate, LoweringContext};\n-use rustc_front::hir;\n+use rustc::hir::lowering::{lower_crate, LoweringContext};\n+use rustc::hir;\n \n struct Env<'a, 'tcx: 'a> {\n     infcx: &'a infer::InferCtxt<'a, 'tcx>,"}, {"sha": "bf40cdbd330e1acfecf1fbc07bde3e86adab9ab1", "filename": "src/librustc_front/Cargo.toml", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/772c600d4d6f39daa6d07d1a60ee0df3d3426978/src%2Flibrustc_front%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/772c600d4d6f39daa6d07d1a60ee0df3d3426978/src%2Flibrustc_front%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2FCargo.toml?ref=772c600d4d6f39daa6d07d1a60ee0df3d3426978", "patch": "@@ -1,15 +0,0 @@\n-[package]\n-authors = [\"The Rust Project Developers\"]\n-name = \"rustc_front\"\n-version = \"0.0.0\"\n-\n-[lib]\n-name = \"rustc_front\"\n-path = \"lib.rs\"\n-crate-type = [\"dylib\"]\n-\n-[dependencies]\n-log = { path = \"../liblog\" }\n-syntax = { path = \"../libsyntax\" }\n-serialize = { path = \"../libserialize\" }\n-rustc_bitflags = { path = \"../librustc_bitflags\" }"}, {"sha": "b9e3b71cf1ad76eb28617dca3bad7f8a770663e8", "filename": "src/librustc_front/lib.rs", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/772c600d4d6f39daa6d07d1a60ee0df3d3426978/src%2Flibrustc_front%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/772c600d4d6f39daa6d07d1a60ee0df3d3426978/src%2Flibrustc_front%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Flib.rs?ref=772c600d4d6f39daa6d07d1a60ee0df3d3426978", "patch": "@@ -1,58 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! The Rust compiler.\n-//!\n-//! # Note\n-//!\n-//! This API is completely unstable and subject to change.\n-\n-#![crate_name = \"rustc_front\"]\n-#![unstable(feature = \"rustc_private\", issue = \"27812\")]\n-#![crate_type = \"dylib\"]\n-#![crate_type = \"rlib\"]\n-#![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/nightly/\")]\n-#![cfg_attr(not(stage0), deny(warnings))]\n-\n-#![feature(associated_consts)]\n-#![feature(box_patterns)]\n-#![feature(box_syntax)]\n-#![feature(const_fn)]\n-#![feature(quote)]\n-#![feature(rustc_diagnostic_macros)]\n-#![feature(rustc_private)]\n-#![feature(slice_patterns)]\n-#![feature(staged_api)]\n-#![feature(str_char)]\n-#![feature(question_mark)]\n-\n-extern crate serialize;\n-#[macro_use]\n-extern crate log;\n-#[macro_use]\n-extern crate syntax;\n-#[macro_use]\n-#[no_link]\n-extern crate rustc_bitflags;\n-\n-extern crate serialize as rustc_serialize; // used by deriving\n-\n-#[macro_use]\n-pub mod hir;\n-pub mod lowering;\n-pub mod fold;\n-pub mod intravisit;\n-pub mod util;\n-\n-pub mod print {\n-    pub mod pprust;\n-}"}, {"sha": "3f0cd397e769c5858e91c257949e85edcbcb501c", "filename": "src/librustc_lint/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -13,5 +13,4 @@ log = { path = \"../liblog\" }\n rustc = { path = \"../librustc\" }\n rustc_back = { path = \"../librustc_back\" }\n rustc_const_eval = { path = \"../librustc_const_eval\" }\n-rustc_front = { path = \"../librustc_front\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "ed9c66a1882755d923f943c1d5c29f5e01eec669", "filename": "src/librustc_lint/bad_style.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2Fbad_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2Fbad_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbad_style.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,8 +17,8 @@ use syntax::ast;\n use syntax::attr::{self, AttrMetaMethods};\n use syntax::codemap::Span;\n \n-use rustc_front::hir::{self, PatKind};\n-use rustc_front::intravisit::FnKind;\n+use rustc::hir::{self, PatKind};\n+use rustc::hir::intravisit::FnKind;\n \n #[derive(PartialEq)]\n pub enum MethodLateContext {"}, {"sha": "6f11ebafa86ec3bd039b8c8d7788b8afa012f42b", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -37,7 +37,7 @@ use rustc::ty::subst::Substs;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::adjustment;\n use rustc::traits::{self, ProjectionMode};\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use util::nodemap::{NodeSet};\n use lint::{Level, LateContext, LintContext, LintArray, Lint};\n use lint::{LintPass, LateLintPass};\n@@ -48,8 +48,8 @@ use syntax::{ast};\n use syntax::attr::{self, AttrMetaMethods};\n use syntax::codemap::{self, Span};\n \n-use rustc_front::hir::{self, PatKind};\n-use rustc_front::intravisit::FnKind;\n+use rustc::hir::{self, PatKind};\n+use rustc::hir::intravisit::FnKind;\n \n use bad_style::{MethodLateContext, method_context};\n "}, {"sha": "2075bd5edcaeb913c3dfc002b651c4c23d789a47", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -44,7 +44,6 @@ extern crate syntax;\n extern crate rustc;\n #[macro_use]\n extern crate log;\n-extern crate rustc_front;\n extern crate rustc_back;\n extern crate rustc_const_eval;\n "}, {"sha": "b094bca84103e6fe87c0e8be27978903d85a0385", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -29,8 +29,8 @@ use syntax::abi::Abi;\n use syntax::attr::{self, AttrMetaMethods};\n use syntax::codemap::{self, Span};\n \n-use rustc_front::hir;\n-use rustc_front::util::is_shift_binop;\n+use rustc::hir;\n+use rustc::hir::util::is_shift_binop;\n \n register_long_diagnostics! {\n E0519: r##\""}, {"sha": "f531628601b0f9d91e6f5a6b4281bb692af0cc29", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -24,8 +24,8 @@ use syntax::feature_gate::{KNOWN_ATTRIBUTES, AttributeType};\n use syntax::ptr::P;\n \n use rustc_back::slice;\n-use rustc_front::hir;\n-use rustc_front::intravisit::FnKind;\n+use rustc::hir;\n+use rustc::hir::intravisit::FnKind;\n \n declare_lint! {\n     pub UNUSED_MUT,"}, {"sha": "697cbe39c67fcb61c69eb02372ec8c866727fe2f", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -16,7 +16,6 @@ rustc = { path = \"../librustc\" }\n rustc_back = { path = \"../librustc_back\" }\n rustc_bitflags = { path = \"../librustc_bitflags\" }\n rustc_const_math = { path = \"../librustc_const_math\" }\n-rustc_front = { path = \"../librustc_front\" }\n rustc_llvm = { path = \"../librustc_llvm\" }\n serialize = { path = \"../libserialize\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "98e73f2902b74483ee764282ec2666d04b840556", "filename": "src/librustc_metadata/astencode.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fastencode.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -12,12 +12,12 @@\n // FIXME: remove this after snapshot, and Results are handled\n #![allow(unused_must_use)]\n \n-use rustc::front::map as ast_map;\n+use rustc::hir::map as ast_map;\n use rustc::session::Session;\n \n-use rustc_front::hir;\n-use rustc_front::fold;\n-use rustc_front::fold::Folder;\n+use rustc::hir;\n+use rustc::hir::fold;\n+use rustc::hir::fold::Folder;\n \n use common as c;\n use cstore;\n@@ -55,8 +55,8 @@ use serialize::EncoderHelpers;\n #[cfg(test)] use std::io::Cursor;\n #[cfg(test)] use syntax::parse;\n #[cfg(test)] use syntax::ast::NodeId;\n-#[cfg(test)] use rustc_front::print::pprust;\n-#[cfg(test)] use rustc_front::lowering::{lower_item, LoweringContext};\n+#[cfg(test)] use rustc::hir::print as pprust;\n+#[cfg(test)] use rustc::hir::lowering::{lower_item, LoweringContext};\n \n struct DecodeContext<'a, 'b, 'tcx: 'a> {\n     tcx: &'a TyCtxt<'tcx>,\n@@ -168,7 +168,7 @@ pub fn decode_inlined_item<'tcx>(cdata: &cstore::crate_metadata,\n     copy_item_types(dcx, ii, orig_did);\n     if let InlinedItem::Item(ref i) = *ii {\n         debug!(\">>> DECODED ITEM >>>\\n{}\\n<<< DECODED ITEM <<<\",\n-               ::rustc_front::print::pprust::item_to_string(&i));\n+               ::rustc::hir::print::item_to_string(&i));\n     }\n \n     ii"}, {"sha": "df9072835b9e8ee92a6409baa755b8643fdbe140", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,13 +17,13 @@ use cstore::{self, CStore, CrateSource, MetadataBlob};\n use decoder;\n use loader::{self, CratePaths};\n \n-use rustc::back::svh::Svh;\n+use rustc::hir::svh::Svh;\n use rustc::dep_graph::DepNode;\n use rustc::session::{config, Session};\n use rustc::session::search_paths::PathKind;\n use rustc::middle::cstore::{CrateStore, validate_crate_name, ExternCrate};\n use rustc::util::nodemap::FnvHashMap;\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n \n use std::cell::{RefCell, Cell};\n use std::path::PathBuf;\n@@ -37,8 +37,8 @@ use syntax::parse;\n use syntax::attr;\n use syntax::attr::AttrMetaMethods;\n use syntax::parse::token::InternedString;\n-use rustc_front::intravisit::Visitor;\n-use rustc_front::hir;\n+use rustc::hir::intravisit::Visitor;\n+use rustc::hir;\n use log;\n \n pub struct LocalCrateReader<'a, 'b:'a> {"}, {"sha": "c9e661dec510e9ae2752204f9e3a2fedfa9b8698", "filename": "src/librustc_metadata/csearch.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcsearch.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -20,7 +20,7 @@ use middle::lang_items;\n use rustc::ty::{self, Ty, TyCtxt, VariantKind};\n use middle::def_id::{DefId, DefIndex, CRATE_DEF_INDEX};\n \n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use rustc::mir::repr::Mir;\n use rustc::mir::mir_map::MirMap;\n use rustc::util::nodemap::{FnvHashMap, NodeMap, NodeSet, DefIdMap};\n@@ -31,9 +31,9 @@ use std::path::PathBuf;\n use syntax::ast;\n use syntax::attr;\n use syntax::parse::token;\n-use rustc_back::svh::Svh;\n+use rustc::hir::svh::Svh;\n use rustc_back::target::Target;\n-use rustc_front::hir;\n+use rustc::hir;\n \n impl<'tcx> CrateStore<'tcx> for cstore::CStore {\n     fn stability(&self, def: DefId) -> Option<attr::Stability>\n@@ -552,7 +552,7 @@ impl<'tcx> CrateStore<'tcx> for cstore::CStore {\n         let mut visible_parent_map = self.visible_parent_map.borrow_mut();\n         if !visible_parent_map.is_empty() { return visible_parent_map; }\n \n-        use rustc_front::hir;\n+        use rustc::hir;\n         use rustc::middle::cstore::{CrateStore, ChildItem};\n         use std::collections::vec_deque::VecDeque;\n         use std::collections::hash_map::Entry;"}, {"sha": "3a6cd4d832b9a659118ba08abafebdf098140062", "filename": "src/librustc_metadata/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -20,7 +20,7 @@ use decoder;\n use index;\n use loader;\n \n-use rustc::back::svh::Svh;\n+use rustc::hir::svh::Svh;\n use rustc::middle::cstore::{ExternCrate};\n use rustc::util::nodemap::{FnvHashMap, NodeMap, NodeSet, DefIdMap};\n use rustc::middle::def_id::DefId;"}, {"sha": "5aafd015f9a1c7ddd73aae8eb1538f5f1ef646cc", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -22,10 +22,10 @@ use index;\n use tls_context;\n use tydecode::TyDecoder;\n \n-use rustc::back::svh::Svh;\n-use rustc::front::map as hir_map;\n+use rustc::hir::svh::Svh;\n+use rustc::hir::map as hir_map;\n use rustc::util::nodemap::FnvHashMap;\n-use rustc_front::hir;\n+use rustc::hir;\n \n use middle::cstore::{LOCAL_CRATE, FoundAst, InlinedItem, LinkagePreference};\n use middle::cstore::{DefLike, DlDef, DlField, DlImpl, tls};"}, {"sha": "dc21ebcbcfcbd8e218449d36998e52791666bcb5", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -30,9 +30,9 @@ use rustc::traits::specialization_graph;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::util::IntTypeExt;\n \n-use rustc::back::svh::Svh;\n-use rustc::front::map::{LinkedPath, PathElem, PathElems};\n-use rustc::front::map as ast_map;\n+use rustc::hir::svh::Svh;\n+use rustc::hir::map::{LinkedPath, PathElem, PathElems};\n+use rustc::hir::map as ast_map;\n use rustc::mir::mir_map::MirMap;\n use rustc::session::config;\n use rustc::util::nodemap::{FnvHashMap, NodeMap, NodeSet};\n@@ -52,9 +52,9 @@ use syntax::errors::Handler;\n use syntax;\n use rbml::writer::Encoder;\n \n-use rustc_front::hir::{self, PatKind};\n-use rustc_front::intravisit::Visitor;\n-use rustc_front::intravisit;\n+use rustc::hir::{self, PatKind};\n+use rustc::hir::intravisit::Visitor;\n+use rustc::hir::intravisit;\n \n pub struct EncodeContext<'a, 'tcx: 'a> {\n     pub diag: &'a Handler,"}, {"sha": "139462d41bf1fd670183e4153a1617b70a44af31", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -36,7 +36,6 @@ extern crate serialize;\n #[macro_use]\n extern crate rustc;\n extern crate rustc_back;\n-extern crate rustc_front;\n extern crate rustc_llvm;\n extern crate rustc_const_math;\n "}, {"sha": "c7cd8ae2dd7f32372cb73ab374221a88eecf32cf", "filename": "src/librustc_metadata/loader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Floader.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -216,7 +216,7 @@ use cstore::{MetadataBlob, MetadataVec, MetadataArchive};\n use decoder;\n use encoder;\n \n-use rustc::back::svh::Svh;\n+use rustc::hir::svh::Svh;\n use rustc::session::Session;\n use rustc::session::filesearch::{FileSearch, FileMatches, FileDoesntMatch};\n use rustc::session::search_paths::PathKind;"}, {"sha": "cd63b58372b324289928d637303a00c113ae89e6", "filename": "src/librustc_metadata/tydecode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Ftydecode.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -16,7 +16,7 @@\n \n #![allow(non_camel_case_types)]\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n use middle::def_id::{DefId, DefIndex};\n use middle::region;"}, {"sha": "b5079256487dea010518a3e93c2380119237acb7", "filename": "src/librustc_metadata/tyencode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_metadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Ftyencode.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -25,7 +25,7 @@ use rustc::ty::ParamTy;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::FnvHashMap;\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n use syntax::abi::Abi;\n use syntax::ast;"}, {"sha": "1c41ca6f416e19dabda36e2884e68fb137772754", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -16,5 +16,4 @@ rustc_back = { path = \"../librustc_back\" }\n rustc_const_eval = { path = \"../librustc_const_eval\" }\n rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n-rustc_front = { path = \"../librustc_front\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "8c98408e2390ae2cfb8998c4720681a765824396", "filename": "src/librustc_mir/build/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fbuild%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fbuild%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fblock.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -11,7 +11,7 @@\n use build::{BlockAnd, BlockAndExtension, Builder};\n use hair::*;\n use rustc::mir::repr::*;\n-use rustc_front::hir;\n+use rustc::hir;\n \n impl<'a,'tcx> Builder<'a,'tcx> {\n     pub fn ast_block(&mut self,"}, {"sha": "2e5b6a952b72dce6adedf892dcacbfe6f68fafac", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -13,7 +13,7 @@ use rustc::middle::region::{CodeExtent, CodeExtentData};\n use rustc::ty::{FnOutput, Ty};\n use rustc::mir::repr::*;\n use rustc_data_structures::fnv::FnvHashMap;\n-use rustc_front::hir;\n+use rustc::hir;\n use std::ops::{Index, IndexMut};\n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "f0ed25902f7156aaf9d604bf1a53685f4b53a9b7", "filename": "src/librustc_mir/hair/cx/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fblock.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -12,7 +12,7 @@ use hair::*;\n use hair::cx::Cx;\n use hair::cx::to_ref::ToRef;\n use rustc::middle::region::{BlockRemainder, CodeExtentData};\n-use rustc_front::hir;\n+use rustc::hir;\n use syntax::ast;\n \n impl<'tcx> Mirror<'tcx> for &'tcx hir::Block {"}, {"sha": "475ae459fefd56ca31cdc25c17675e6d6a988400", "filename": "src/librustc_mir/hair/cx/expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -14,16 +14,16 @@ use rustc_const_math::ConstInt;\n use hair::cx::Cx;\n use hair::cx::block;\n use hair::cx::to_ref::ToRef;\n-use rustc::front::map;\n+use rustc::hir::map;\n use rustc::middle::def::Def;\n use rustc::middle::const_val::ConstVal;\n use rustc_const_eval as const_eval;\n use rustc::middle::region::CodeExtent;\n use rustc::middle::pat_util;\n use rustc::ty::{self, VariantDef, Ty};\n use rustc::mir::repr::*;\n-use rustc_front::hir;\n-use rustc_front::util as hir_util;\n+use rustc::hir;\n+use rustc::hir::util as hir_util;\n use syntax::ptr::P;\n \n impl<'tcx> Mirror<'tcx> for &'tcx hir::Expr {"}, {"sha": "f0c6887802d6341bbfa1636e517364f0978849e3", "filename": "src/librustc_mir/hair/cx/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -25,7 +25,7 @@ use rustc::infer::InferCtxt;\n use rustc::ty::subst::{Subst, Substs};\n use rustc::ty::{self, Ty, TyCtxt};\n use syntax::parse::token;\n-use rustc_front::hir;\n+use rustc::hir;\n use rustc_const_math::{ConstInt, ConstUsize};\n \n #[derive(Copy, Clone)]"}, {"sha": "673d12c33167a2aae9f982c42aa4d7ff09c162ce", "filename": "src/librustc_mir/hair/cx/pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fpattern.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -16,7 +16,7 @@ use rustc::middle::def::Def;\n use rustc::middle::pat_util::{pat_is_resolved_const, pat_is_binding};\n use rustc::ty::{self, Ty};\n use rustc::mir::repr::*;\n-use rustc_front::hir::{self, PatKind};\n+use rustc::hir::{self, PatKind};\n use syntax::ast;\n use syntax::codemap::Span;\n use syntax::ptr::P;"}, {"sha": "63dbde474380a11900436da0ca7a69c11d796719", "filename": "src/librustc_mir/hair/cx/to_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fto_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fto_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fto_ref.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -10,7 +10,7 @@\n \n use hair::*;\n \n-use rustc_front::hir;\n+use rustc::hir;\n use syntax::ptr::P;\n \n pub trait ToRef {"}, {"sha": "0ea8dece47c7be23aa0148e2f415b26a950a0444", "filename": "src/librustc_mir/hair/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -21,7 +21,7 @@ use rustc::middle::def_id::DefId;\n use rustc::middle::region::CodeExtent;\n use rustc::ty::subst::Substs;\n use rustc::ty::{self, AdtDef, ClosureSubsts, Region, Ty};\n-use rustc_front::hir;\n+use rustc::hir;\n use syntax::ast;\n use syntax::codemap::Span;\n use self::cx::Cx;"}, {"sha": "ced73f34e0d92f9631c9eedea56ea8e912e26f6a", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -30,7 +30,6 @@ extern crate graphviz as dot;\n #[macro_use]\n extern crate rustc;\n extern crate rustc_data_structures;\n-extern crate rustc_front;\n extern crate rustc_back;\n extern crate syntax;\n extern crate rustc_const_math;"}, {"sha": "40334f652eed35d4fe42498b7f6608a7def6a233", "filename": "src/librustc_mir/mir_map.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fmir_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_mir%2Fmir_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmir_map.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,7 +17,6 @@\n //! - `#[rustc_mir(pretty=\"file.mir\")]`\n \n extern crate syntax;\n-extern crate rustc_front;\n \n use build;\n use rustc::dep_graph::DepNode;\n@@ -31,8 +30,8 @@ use rustc::traits::ProjectionMode;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::common::ErrorReported;\n use rustc::util::nodemap::NodeMap;\n-use rustc_front::hir;\n-use rustc_front::intravisit::{self, Visitor};\n+use rustc::hir;\n+use rustc::hir::intravisit::{self, Visitor};\n use syntax::abi::Abi;\n use syntax::ast;\n use syntax::attr::AttrMetaMethods;"}, {"sha": "fa6bd3dfb67ddf7cc9684380a73572d89727c671", "filename": "src/librustc_passes/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -12,5 +12,4 @@ crate-type = [\"dylib\"]\n log = { path = \"../liblog\" }\n rustc = { path = \"../librustc\" }\n rustc_const_eval = { path = \"../librustc_const_eval\" }\n-rustc_front = { path = \"../librustc_front\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "38784191a78283dbae9c735be2eeab2bb826ee5a", "filename": "src/librustc_passes/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fconsts.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -42,11 +42,11 @@ use rustc::util::nodemap::NodeMap;\n use rustc::middle::const_qualif::ConstQualif;\n use rustc::lint::builtin::CONST_ERR;\n \n-use rustc_front::hir::{self, PatKind};\n+use rustc::hir::{self, PatKind};\n use syntax::ast;\n use syntax::codemap::Span;\n use syntax::feature_gate::UnstableFeatures;\n-use rustc_front::intravisit::{self, FnKind, Visitor};\n+use rustc::hir::intravisit::{self, FnKind, Visitor};\n \n use std::collections::hash_map::Entry;\n use std::cmp::Ordering;"}, {"sha": "53ae1b30f7c1796dd48c3d2d776015f50d6e22c3", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -29,7 +29,6 @@\n \n extern crate core;\n #[macro_use] extern crate rustc;\n-extern crate rustc_front;\n extern crate rustc_const_eval;\n \n #[macro_use] extern crate log;"}, {"sha": "9a58a704c52ccb8f84d831617ebd6c82b8329550", "filename": "src/librustc_passes/loops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Floops.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -12,9 +12,9 @@ use self::Context::*;\n use rustc::session::Session;\n \n use rustc::dep_graph::DepNode;\n-use rustc::front::map::Map;\n-use rustc_front::intravisit::{self, Visitor};\n-use rustc_front::hir;\n+use rustc::hir::map::Map;\n+use rustc::hir::intravisit::{self, Visitor};\n+use rustc::hir;\n use syntax::codemap::Span;\n \n #[derive(Clone, Copy, PartialEq)]"}, {"sha": "754d5ef8f528dac080b1a49934e0cc1327adef38", "filename": "src/librustc_passes/rvalues.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2Frvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2Frvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Frvalues.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -18,8 +18,8 @@ use rustc::middle::mem_categorization as mc;\n use rustc::ty::{self, TyCtxt, ParameterEnvironment};\n use rustc::traits::ProjectionMode;\n \n-use rustc_front::hir;\n-use rustc_front::intravisit;\n+use rustc::hir;\n+use rustc::hir::intravisit;\n use syntax::ast;\n use syntax::codemap::Span;\n "}, {"sha": "2766d13d7b8ab972a35b75d64c35881a041c0181", "filename": "src/librustc_passes/static_recursion.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2Fstatic_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_passes%2Fstatic_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstatic_recursion.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -12,16 +12,16 @@\n // recursively.\n \n use rustc::dep_graph::DepNode;\n-use rustc::front::map as ast_map;\n+use rustc::hir::map as ast_map;\n use rustc::session::{Session, CompileResult};\n use rustc::middle::def::{Def, DefMap};\n use rustc::util::nodemap::NodeMap;\n \n use syntax::{ast};\n use syntax::codemap::Span;\n use syntax::feature_gate::{GateIssue, emit_feature_err};\n-use rustc_front::intravisit::{self, Visitor};\n-use rustc_front::hir;\n+use rustc::hir::intravisit::{self, Visitor};\n+use rustc::hir;\n \n use std::cell::RefCell;\n "}, {"sha": "e9a32e53a9fe6372ad31fad1fbcabe8b0616cf4a", "filename": "src/librustc_plugin/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_plugin%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_plugin%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -13,7 +13,6 @@ log = { path = \"../liblog\" }\n rustc = { path = \"../librustc\" }\n rustc_back = { path = \"../librustc_back\" }\n rustc_bitflags = { path = \"../librustc_bitflags\" }\n-rustc_front = { path = \"../librustc_front\" }\n rustc_metadata = { path = \"../librustc_metadata\" }\n rustc_mir = { path = \"../librustc_mir\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "4c7755b1b0937bf8e62795104a6e9ba0a7021282", "filename": "src/librustc_plugin/build.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_plugin%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_plugin%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Fbuild.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -15,9 +15,9 @@ use syntax::attr;\n use syntax::codemap::Span;\n use syntax::errors;\n use rustc::dep_graph::DepNode;\n-use rustc::front::map::Map;\n-use rustc_front::intravisit::Visitor;\n-use rustc_front::hir;\n+use rustc::hir::map::Map;\n+use rustc::hir::intravisit::Visitor;\n+use rustc::hir;\n \n struct RegistrarFinder {\n     registrars: Vec<(ast::NodeId, Span)> ,"}, {"sha": "5fa29771c57fbd1b423a197f81216833e6582c3d", "filename": "src/librustc_plugin/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -69,7 +69,6 @@\n \n extern crate rustc;\n extern crate rustc_back;\n-extern crate rustc_front;\n extern crate rustc_metadata;\n extern crate rustc_mir;\n "}, {"sha": "0553e54e3aa9b145626ec09d6bcf6df224691257", "filename": "src/librustc_privacy/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_privacy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_privacy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -11,5 +11,4 @@ crate-type = [\"dylib\"]\n [dependencies]\n log = { path = \"../liblog\" }\n rustc = { path = \"../librustc\" }\n-rustc_front = { path = \"../librustc_front\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "908a7869c42972f2ff28fc490cd442d9932eeb0b", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -25,13 +25,12 @@\n #[macro_use] extern crate syntax;\n \n #[macro_use] extern crate rustc;\n-extern crate rustc_front;\n \n use std::cmp;\n use std::mem::replace;\n \n-use rustc_front::hir::{self, PatKind};\n-use rustc_front::intravisit::{self, Visitor};\n+use rustc::hir::{self, PatKind};\n+use rustc::hir::intravisit::{self, Visitor};\n \n use rustc::dep_graph::DepNode;\n use rustc::lint;\n@@ -41,7 +40,7 @@ use rustc::middle::def_id::DefId;\n use rustc::middle::privacy::{AccessLevel, AccessLevels};\n use rustc::ty::{self, TyCtxt};\n use rustc::util::nodemap::NodeSet;\n-use rustc::front::map as ast_map;\n+use rustc::hir::map as ast_map;\n \n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "cf477c2a956aab6d661cb1a41fb0c4a2fd6463db", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -13,5 +13,4 @@ log = { path = \"../liblog\" }\n syntax = { path = \"../libsyntax\" }\n rustc = { path = \"../librustc\" }\n rustc_bitflags = { path = \"../librustc_bitflags\" }\n-rustc_front = { path = \"../librustc_front\" }\n arena = { path = \"../libarena\" }"}, {"sha": "470fd88025e4e1c187596e847ba2499d253ba3ed", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -33,15 +33,15 @@ use syntax::attr::AttrMetaMethods;\n use syntax::parse::token::{special_idents, SELF_KEYWORD_NAME, SUPER_KEYWORD_NAME};\n use syntax::codemap::{Span, DUMMY_SP};\n \n-use rustc_front::hir;\n-use rustc_front::hir::{Block, DeclItem};\n-use rustc_front::hir::{ForeignItem, ForeignItemFn, ForeignItemStatic};\n-use rustc_front::hir::{Item, ItemConst, ItemEnum, ItemExternCrate, ItemFn};\n-use rustc_front::hir::{ItemForeignMod, ItemImpl, ItemMod, ItemStatic, ItemDefaultImpl};\n-use rustc_front::hir::{ItemStruct, ItemTrait, ItemTy, ItemUse};\n-use rustc_front::hir::{PathListIdent, PathListMod, StmtDecl};\n-use rustc_front::hir::{Variant, ViewPathGlob, ViewPathList, ViewPathSimple};\n-use rustc_front::intravisit::{self, Visitor};\n+use rustc::hir;\n+use rustc::hir::{Block, DeclItem};\n+use rustc::hir::{ForeignItem, ForeignItemFn, ForeignItemStatic};\n+use rustc::hir::{Item, ItemConst, ItemEnum, ItemExternCrate, ItemFn};\n+use rustc::hir::{ItemForeignMod, ItemImpl, ItemMod, ItemStatic, ItemDefaultImpl};\n+use rustc::hir::{ItemStruct, ItemTrait, ItemTy, ItemUse};\n+use rustc::hir::{PathListIdent, PathListMod, StmtDecl};\n+use rustc::hir::{Variant, ViewPathGlob, ViewPathList, ViewPathSimple};\n+use rustc::hir::intravisit::{self, Visitor};\n \n trait ToNameBinding<'a> {\n     fn to_name_binding(self) -> NameBinding<'a>;"}, {"sha": "4046c8c7783b852b220063f850b8272e73f59e2e", "filename": "src/librustc_resolve/check_unused.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_resolve%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_resolve%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fcheck_unused.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -26,9 +26,9 @@ use rustc::lint;\n use syntax::ast;\n use syntax::codemap::{Span, DUMMY_SP};\n \n-use rustc_front::hir;\n-use rustc_front::hir::{ViewPathGlob, ViewPathList, ViewPathSimple};\n-use rustc_front::intravisit::Visitor;\n+use rustc::hir;\n+use rustc::hir::{ViewPathGlob, ViewPathList, ViewPathSimple};\n+use rustc::hir::intravisit::Visitor;\n \n struct UnusedImportCheckVisitor<'a, 'b: 'a, 'tcx: 'b> {\n     resolver: &'a mut Resolver<'b, 'tcx>,"}, {"sha": "bbf8796436efdca365ec9c6088add03003e94181", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 19, "deletions": 20, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -31,7 +31,6 @@ extern crate arena;\n #[macro_use]\n #[no_link]\n extern crate rustc_bitflags;\n-extern crate rustc_front;\n #[macro_use]\n extern crate rustc;\n \n@@ -49,7 +48,7 @@ use self::ParentLink::*;\n use self::FallbackChecks::*;\n \n use rustc::dep_graph::DepNode;\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use rustc::session::Session;\n use rustc::lint;\n use rustc::middle::cstore::CrateStore;\n@@ -68,24 +67,24 @@ use syntax::errors::DiagnosticBuilder;\n use syntax::parse::token::{self, special_names, special_idents};\n use syntax::util::lev_distance::find_best_match_for_name;\n \n-use rustc_front::intravisit::{self, FnKind, Visitor};\n-use rustc_front::hir;\n-use rustc_front::hir::{Arm, BindByRef, BindByValue, BindingMode, Block};\n-use rustc_front::hir::Crate;\n-use rustc_front::hir::{Expr, ExprAgain, ExprBreak, ExprCall, ExprField};\n-use rustc_front::hir::{ExprLoop, ExprWhile, ExprMethodCall};\n-use rustc_front::hir::{ExprPath, ExprStruct, FnDecl};\n-use rustc_front::hir::{ForeignItemFn, ForeignItemStatic, Generics};\n-use rustc_front::hir::{ImplItem, Item, ItemConst, ItemEnum, ItemExternCrate};\n-use rustc_front::hir::{ItemFn, ItemForeignMod, ItemImpl, ItemMod, ItemStatic, ItemDefaultImpl};\n-use rustc_front::hir::{ItemStruct, ItemTrait, ItemTy, ItemUse};\n-use rustc_front::hir::Local;\n-use rustc_front::hir::{Pat, PatKind, Path, PrimTy};\n-use rustc_front::hir::{PathSegment, PathParameters};\n-use rustc_front::hir::HirVec;\n-use rustc_front::hir::{TraitRef, Ty, TyBool, TyChar, TyFloat, TyInt};\n-use rustc_front::hir::{TyRptr, TyStr, TyUint, TyPath, TyPtr};\n-use rustc_front::util::walk_pat;\n+use rustc::hir::intravisit::{self, FnKind, Visitor};\n+use rustc::hir;\n+use rustc::hir::{Arm, BindByRef, BindByValue, BindingMode, Block};\n+use rustc::hir::Crate;\n+use rustc::hir::{Expr, ExprAgain, ExprBreak, ExprCall, ExprField};\n+use rustc::hir::{ExprLoop, ExprWhile, ExprMethodCall};\n+use rustc::hir::{ExprPath, ExprStruct, FnDecl};\n+use rustc::hir::{ForeignItemFn, ForeignItemStatic, Generics};\n+use rustc::hir::{ImplItem, Item, ItemConst, ItemEnum, ItemExternCrate};\n+use rustc::hir::{ItemFn, ItemForeignMod, ItemImpl, ItemMod, ItemStatic, ItemDefaultImpl};\n+use rustc::hir::{ItemStruct, ItemTrait, ItemTy, ItemUse};\n+use rustc::hir::Local;\n+use rustc::hir::{Pat, PatKind, Path, PrimTy};\n+use rustc::hir::{PathSegment, PathParameters};\n+use rustc::hir::HirVec;\n+use rustc::hir::{TraitRef, Ty, TyBool, TyChar, TyFloat, TyInt};\n+use rustc::hir::{TyRptr, TyStr, TyUint, TyPath, TyPtr};\n+use rustc::hir::util::walk_pat;\n \n use std::collections::{HashMap, HashSet};\n use std::cell::{Cell, RefCell};"}, {"sha": "52fa91934723dd25fe1bb682fab3fb7993d5ffb5", "filename": "src/librustc_save_analysis/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_save_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_save_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -11,5 +11,4 @@ crate-type = [\"dylib\"]\n [dependencies]\n log = { path = \"../liblog\" }\n rustc = { path = \"../librustc\" }\n-rustc_front = { path = \"../librustc_front\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "310747c89914a3c130da6e2b6bfd80d3fc17cfdf", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -42,7 +42,7 @@ use syntax::visit::{self, Visitor};\n use syntax::print::pprust::{path_to_string, ty_to_string};\n use syntax::ptr::P;\n \n-use rustc_front::lowering::{lower_expr, LoweringContext};\n+use rustc::hir::lowering::{lower_expr, LoweringContext};\n \n use super::{escape, generated_code, SaveContext, PathCollector};\n use super::data::*;"}, {"sha": "e65bf5be25648dc33bc08bfc8b904da696cb06ec", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -23,13 +23,12 @@\n #![feature(staged_api)]\n \n #[macro_use] extern crate rustc;\n-extern crate rustc_front;\n \n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;\n \n-use rustc_front::{hir, lowering};\n-use rustc::front::map::NodeItem;\n+use rustc::hir::{self, lowering};\n+use rustc::hir::map::NodeItem;\n use rustc::middle::def::Def;\n use rustc::middle::def_id::DefId;\n use rustc::session::config::CrateType::CrateTypeExecutable;\n@@ -278,7 +277,7 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                     match item.node {\n                         hir::ItemImpl(_, _, _, _, ref ty, _) => {\n                             let mut result = String::from(\"<\");\n-                            result.push_str(&rustc_front::print::pprust::ty_to_string(&ty));\n+                            result.push_str(&rustc::hir::print::ty_to_string(&ty));\n \n                             match self.tcx.trait_of_item(self.tcx.map.local_def_id(id)) {\n                                 Some(def_id) => {"}, {"sha": "ea4cef03b707a688b0e528d93f1e9c8ace5d746d", "filename": "src/librustc_trans/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -18,7 +18,6 @@ rustc_back = { path = \"../librustc_back\" }\n rustc_const_eval = { path = \"../librustc_const_eval\" }\n rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n-rustc_front = { path = \"../librustc_front\" }\n rustc_llvm = { path = \"../librustc_llvm\" }\n rustc_mir = { path = \"../librustc_mir\" }\n rustc_platform_intrinsics = { path = \"../librustc_platform_intrinsics\" }"}, {"sha": "3bbead9847bdd2cfa413c06d9caf3b5330dc912b", "filename": "src/librustc_trans/_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2F_match.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -229,10 +229,10 @@ use std::cell::RefCell;\n use std::cmp::Ordering;\n use std::fmt;\n use std::rc::Rc;\n-use rustc_front::hir::{self, PatKind};\n+use rustc::hir::{self, PatKind};\n use syntax::ast::{self, DUMMY_NODE_ID, NodeId};\n use syntax::codemap::Span;\n-use rustc_front::fold::Folder;\n+use rustc::hir::fold::Folder;\n use syntax::ptr::P;\n \n #[derive(Copy, Clone, Debug)]"}, {"sha": "961a32170d0df80895171622dbdd62a3f9c29c43", "filename": "src/librustc_trans/abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fabi.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -26,7 +26,7 @@ use machine::{llalign_of_min, llsize_of, llsize_of_real};\n use type_::Type;\n use type_of;\n \n-use rustc_front::hir;\n+use rustc::hir;\n use rustc::ty::{self, Ty};\n \n use libc::c_uint;"}, {"sha": "e27bec683757a9b19f95c33354aac160f7829802", "filename": "src/librustc_trans/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fasm.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -18,7 +18,7 @@ use datum::{Datum, Lvalue};\n use type_of;\n use type_::Type;\n \n-use rustc_front::hir as ast;\n+use rustc::hir as ast;\n use std::ffi::CString;\n use syntax::ast::AsmDialect;\n use libc::{c_uint, c_char};"}, {"sha": "ecbb50494433071418198cb021ce95280b024684", "filename": "src/librustc_trans/assert_dep_graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fassert_dep_graph.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -43,8 +43,8 @@ use rustc::middle::def_id::DefId;\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fnv::{FnvHashMap, FnvHashSet};\n use rustc_data_structures::graph::{Direction, INCOMING, OUTGOING, NodeIndex};\n-use rustc_front::hir;\n-use rustc_front::intravisit::Visitor;\n+use rustc::hir;\n+use rustc::hir::intravisit::Visitor;\n use graphviz::IntoCow;\n use std::env;\n use std::fs::File;"}, {"sha": "130499603e7a710839c86c5f5a9fd16a88532c06", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -43,7 +43,7 @@ use syntax::ast;\n use syntax::codemap::Span;\n use syntax::attr::AttrMetaMethods;\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n // RLIB LLVM-BYTECODE OBJECT LAYOUT\n // Version 1"}, {"sha": "949a10297c1e2fdfc582422380b616a6846d46d1", "filename": "src/librustc_trans/back/symbol_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -105,7 +105,7 @@ use rustc::middle::cstore;\n use rustc::middle::def_id::DefId;\n use rustc::ty::{self, TypeFoldable};\n use rustc::ty::item_path::{ItemPathBuffer, RootMode};\n-use rustc::front::map::definitions::{DefPath, DefPathData};\n+use rustc::hir::map::definitions::{DefPath, DefPathData};\n \n use std::fmt::Write;\n use syntax::parse::token::{self, InternedString};"}, {"sha": "d2fc20fd8375f5d92b77f7da76377e366520bde3", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -46,7 +46,7 @@ use rustc::traits;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc::ty::adjustment::CustomCoerceUnsized;\n use rustc::dep_graph::DepNode;\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use rustc::util::common::time;\n use rustc::mir::mir_map::MirMap;\n use session::config::{self, NoDebugInfo, FullDebugInfo};\n@@ -106,9 +106,8 @@ use syntax::codemap::{Span, DUMMY_SP};\n use syntax::parse::token::InternedString;\n use syntax::attr::AttrMetaMethods;\n use syntax::attr;\n-use rustc_front;\n-use rustc_front::intravisit::{self, Visitor};\n-use rustc_front::hir;\n+use rustc::hir::intravisit::{self, Visitor};\n+use rustc::hir;\n use syntax::ast;\n \n thread_local! {\n@@ -713,7 +712,7 @@ fn cast_shift_rhs<F, G>(op: hir::BinOp_,\n           G: FnOnce(ValueRef, Type) -> ValueRef\n {\n     // Shifts may have any size int on the rhs\n-    if rustc_front::util::is_shift_binop(op) {\n+    if hir::util::is_shift_binop(op) {\n         let mut rhs_llty = val_ty(rhs);\n         let mut lhs_llty = val_ty(lhs);\n         if rhs_llty.kind() == Vector {"}, {"sha": "2da9acf3250891a685a477d5ee07bd8b5f33d322", "filename": "src/librustc_trans/callee.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcallee.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -26,7 +26,7 @@ use rustc::infer;\n use rustc::ty::subst;\n use rustc::ty::subst::{Substs};\n use rustc::traits;\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use abi::{Abi, FnType};\n use adt;\n use attributes;\n@@ -54,7 +54,7 @@ use type_of;\n use value::Value;\n use Disr;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use rustc_front::hir;\n+use rustc::hir;\n \n use syntax::codemap::DUMMY_SP;\n use syntax::errors;"}, {"sha": "579848919ecb9a5d877834767fb2df9fb55cfd18", "filename": "src/librustc_trans/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fclosure.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -35,7 +35,7 @@ use session::config::FullDebugInfo;\n \n use syntax::ast;\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n use libc::c_uint;\n "}, {"sha": "4f197dbee1315f6fce424d22f503d11c1b060f44", "filename": "src/librustc_trans/collector.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcollector.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -188,10 +188,10 @@\n //! this is not implemented however: a translation item will be produced\n //! regardless of whether it is actually needed or not.\n \n-use rustc_front::hir;\n-use rustc_front::intravisit as hir_visit;\n+use rustc::hir;\n+use rustc::hir::intravisit as hir_visit;\n \n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use rustc::middle::def_id::DefId;\n use rustc::middle::lang_items::{ExchangeFreeFnLangItem, ExchangeMallocFnLangItem};\n use rustc::traits;"}, {"sha": "1f48eb916039b27f0e43bdd6703fade0d10b14a7", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -40,7 +40,7 @@ use value::Value;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::traits::{self, SelectionContext, ProjectionMode};\n use rustc::ty::fold::{TypeFolder, TypeFoldable};\n-use rustc_front::hir;\n+use rustc::hir;\n use util::nodemap::NodeMap;\n \n use arena::TypedArena;"}, {"sha": "7945639f86b327fd812635ad8d70117de2b613b1", "filename": "src/librustc_trans/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fconsts.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,7 +17,7 @@ use rustc_const_eval::{ConstEvalErr, lookup_const_fn_by_id, lookup_const_by_id,\n use rustc_const_eval::eval_repeat_count;\n use middle::def::Def;\n use middle::def_id::DefId;\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use {abi, adt, closure, debuginfo, expr, machine};\n use base::{self, exported_name, imported_name, push_ctxt};\n use callee::Callee;\n@@ -41,7 +41,7 @@ use rustc::ty::cast::{CastTy,IntTy};\n use util::nodemap::NodeMap;\n use rustc_const_math::{ConstInt, ConstMathErr, ConstUsize, ConstIsize};\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n use std::ffi::{CStr, CString};\n use std::borrow::Cow;"}, {"sha": "60ae91a8c5f7c3d35bb8f00227aea68adc666d17", "filename": "src/librustc_trans/controlflow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontrolflow.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -25,8 +25,8 @@ use debuginfo::{DebugLoc, ToDebugLoc};\n use expr;\n use machine;\n \n-use rustc_front::hir;\n-use rustc_front::util as ast_util;\n+use rustc::hir;\n+use rustc::hir::util as ast_util;\n \n use syntax::ast;\n use syntax::parse::token::InternedString;"}, {"sha": "477dc0b4b52b1613737488a5095533a809efa58c", "filename": "src/librustc_trans/debuginfo/create_scope_map.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -21,8 +21,7 @@ use libc::c_uint;\n use syntax::codemap::{Span, Pos};\n use syntax::{ast, codemap};\n \n-use rustc_front;\n-use rustc_front::hir::{self, PatKind};\n+use rustc::hir::{self, PatKind};\n \n // This procedure builds the *scope map* for a given function, which maps any\n // given ast::NodeId in the function's AST to the correct DIScope metadata instance.\n@@ -117,7 +116,7 @@ fn walk_block(cx: &CrateContext,\n \n     // The interesting things here are statements and the concluding expression.\n     for statement in &block.stmts {\n-        scope_map.insert(rustc_front::util::stmt_id(statement),\n+        scope_map.insert(hir::util::stmt_id(statement),\n                          scope_stack.last().unwrap().scope_metadata);\n \n         match statement.node {"}, {"sha": "acfafc6e3297d3cb8e1c2409cb395e599edbc066", "filename": "src/librustc_trans/debuginfo/metadata.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -27,8 +27,8 @@ use middle::def_id::DefId;\n use rustc::infer;\n use middle::pat_util;\n use rustc::ty::subst;\n-use rustc::front::map as hir_map;\n-use rustc_front::hir::{self, PatKind};\n+use rustc::hir::map as hir_map;\n+use rustc::hir::{self, PatKind};\n use {type_of, adt, machine, monomorphize};\n use common::{self, CrateContext, FunctionContext, Block};\n use _match::{BindingInfo, TransBindingMode};"}, {"sha": "f671c2b79636cecb706e13560b05522ba1bc6e2f", "filename": "src/librustc_trans/debuginfo/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -29,8 +29,7 @@ use llvm::debuginfo::{DIFile, DIType, DIScope, DIBuilderRef, DISubprogram, DIArr\n use middle::def_id::DefId;\n use rustc::infer::normalize_associated_type;\n use rustc::ty::subst::{self, Substs};\n-use rustc_front;\n-use rustc_front::hir;\n+use rustc::hir;\n \n use abi::Abi;\n use common::{NodeIdAndSpan, CrateContext, FunctionContext, Block};\n@@ -39,7 +38,7 @@ use rustc::infer;\n use rustc::ty::{self, Ty};\n use session::config::{self, FullDebugInfo, LimitedDebugInfo, NoDebugInfo};\n use util::nodemap::{NodeMap, FnvHashMap, FnvHashSet};\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n \n use libc::c_uint;\n use std::cell::{Cell, RefCell};\n@@ -239,7 +238,7 @@ pub fn create_function_debug_context<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n         return FunctionDebugContext::FunctionWithoutDebugInfo;\n     }\n \n-    let empty_generics = rustc_front::util::empty_generics();\n+    let empty_generics = hir::util::empty_generics();\n \n     let fnitem = cx.tcx().map.get(fn_ast_id);\n "}, {"sha": "1feb47a3a7d998ce6bdebf487ee5c20f7c2c2f11", "filename": "src/librustc_trans/debuginfo/namespace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fdebuginfo%2Fnamespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fdebuginfo%2Fnamespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fnamespace.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -15,7 +15,7 @@ use super::utils::{DIB, debug_context};\n use llvm;\n use llvm::debuginfo::DIScope;\n use rustc::middle::def_id::DefId;\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use common::CrateContext;\n \n use std::ffi::CString;"}, {"sha": "f5bb1677f29baaf9995dc2666c5ec72d160c7a3f", "filename": "src/librustc_trans/debuginfo/type_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Ftype_names.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -18,7 +18,7 @@ use rustc::infer;\n use rustc::ty::subst;\n use rustc::ty::{self, Ty};\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n // Compute the name of the type as it should be stored in debuginfo. Does not do\n // any caching, i.e. calling the function twice with the same type will also do"}, {"sha": "7c2557fb090235c23285f0da5a081382ffcf6cde", "filename": "src/librustc_trans/expr.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fexpr.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -80,8 +80,7 @@ use util::common::indenter;\n use machine::{llsize_of, llsize_of_alloc};\n use type_::Type;\n \n-use rustc_front;\n-use rustc_front::hir;\n+use rustc::hir;\n \n use syntax::{ast, codemap};\n use syntax::parse::token::InternedString;\n@@ -1181,7 +1180,7 @@ fn trans_rvalue_dps_unadjusted<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n             // if not overloaded, would be RvalueDatumExpr\n             let lhs = unpack_datum!(bcx, trans(bcx, &lhs));\n             let mut rhs = unpack_datum!(bcx, trans(bcx, &rhs_expr));\n-            if !rustc_front::util::is_by_value_binop(op.node) {\n+            if !hir::util::is_by_value_binop(op.node) {\n                 rhs = unpack_datum!(bcx, auto_ref(bcx, rhs, rhs_expr));\n             }\n \n@@ -1205,7 +1204,7 @@ fn trans_rvalue_dps_unadjusted<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n             span_bug!(\n                 expr.span,\n                 \"augmented assignment `{}=` should always be a rvalue_stmt\",\n-                rustc_front::util::binop_to_string(op.node))\n+                hir::util::binop_to_string(op.node))\n         }\n         _ => {\n             span_bug!("}, {"sha": "36dfbec115e797b50b66972baa4e4c88257c3e20", "filename": "src/librustc_trans/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Finline.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,7 +17,7 @@ use callee::Callee;\n use common::*;\n \n use rustc::dep_graph::DepNode;\n-use rustc_front::hir;\n+use rustc::hir;\n \n fn instantiate_inline(ccx: &CrateContext, fn_id: DefId) -> Option<DefId> {\n     debug!(\"instantiate_inline({:?})\", fn_id);"}, {"sha": "355de31bf590d16bf5f5045901e40ad6fe3cc833", "filename": "src/librustc_trans/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fintrinsic.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -40,7 +40,7 @@ use rustc::ty::{self, Ty, TypeFoldable};\n use Disr;\n use rustc::ty::subst::Substs;\n use rustc::dep_graph::DepNode;\n-use rustc_front::hir;\n+use rustc::hir;\n use syntax::ast;\n use syntax::ptr::P;\n use syntax::parse::token;"}, {"sha": "19a172e7f102b136c19fd5acf283399ba7230a7b", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -46,7 +46,6 @@ extern crate libc;\n #[macro_use] extern crate rustc;\n extern crate rustc_back;\n extern crate rustc_data_structures;\n-extern crate rustc_front;\n pub extern crate rustc_llvm as llvm;\n extern crate rustc_mir;\n extern crate rustc_platform_intrinsics as intrinsics;\n@@ -67,7 +66,7 @@ pub use disr::Disr;\n \n pub mod back {\n     pub use rustc_back::rpath;\n-    pub use rustc_back::svh;\n+    pub use rustc::hir::svh;\n \n     pub mod archive;\n     pub mod linker;"}, {"sha": "8e5d220b4f4e8549fa7856649f4f295eb5f2320e", "filename": "src/librustc_trans/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Frvalue.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -134,7 +134,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                     _ => {\n                         // FIXME Shouldn't need to manually trigger closure instantiations.\n                         if let mir::AggregateKind::Closure(def_id, substs) = *kind {\n-                            use rustc_front::hir;\n+                            use rustc::hir;\n                             use syntax::ast::DUMMY_NODE_ID;\n                             use syntax::codemap::DUMMY_SP;\n                             use syntax::ptr::P;"}, {"sha": "de66951d091292fa0f5721e179e69a410bc2124e", "filename": "src/librustc_trans/monomorphize.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmonomorphize.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -23,10 +23,10 @@ use base;\n use common::*;\n use declare;\n use Disr;\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use rustc::util::ppaux;\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n use syntax::attr;\n use syntax::errors;"}, {"sha": "2e3355968dffa4afe630c80e0917acb045471484", "filename": "src/librustc_trans/symbol_names_test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fsymbol_names_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Fsymbol_names_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsymbol_names_test.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -15,8 +15,8 @@\n //! paths etc in all kinds of annoying scenarios.\n \n use back::symbol_names;\n-use rustc_front::hir;\n-use rustc_front::intravisit::{self, Visitor};\n+use rustc::hir;\n+use rustc::hir::intravisit::{self, Visitor};\n use syntax::ast;\n use syntax::attr::AttrMetaMethods;\n "}, {"sha": "f5b9bef5313f23a34039747e79d6f0c634ffd88e", "filename": "src/librustc_trans/tvec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Ftvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_trans%2Ftvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftvec.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -29,7 +29,7 @@ use type_of;\n use value::Value;\n use rustc::ty::{self, Ty};\n \n-use rustc_front::hir;\n+use rustc::hir;\n use rustc_const_eval::eval_repeat_count;\n \n use syntax::ast;"}, {"sha": "e9dabf16eaece7455128e1efbe6d60627ab38ac5", "filename": "src/librustc_typeck/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,5 +17,4 @@ rustc = { path = \"../librustc\" }\n rustc_back = { path = \"../librustc_back\" }\n rustc_const_eval = { path = \"../librustc_const_eval\" }\n rustc_const_math = { path = \"../librustc_const_math\" }\n-rustc_front = { path = \"../librustc_front\" }\n rustc_platform_intrinsics = { path = \"../librustc_platform_intrinsics\" }"}, {"sha": "a52b8cad1083a2193f0b14a1714ba0b4bed58e10", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -74,8 +74,8 @@ use syntax::errors::DiagnosticBuilder;\n use syntax::feature_gate::{GateIssue, emit_feature_err};\n use syntax::parse::token;\n \n-use rustc_front::print::pprust;\n-use rustc_front::hir;\n+use rustc::hir::print as pprust;\n+use rustc::hir;\n use rustc_back::slice;\n \n pub trait AstConv<'tcx> {"}, {"sha": "5c93c17059082372560bf93bd61dc7a106f30d3f", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -30,9 +30,9 @@ use syntax::ast;\n use syntax::codemap::{Span, Spanned};\n use syntax::ptr::P;\n \n-use rustc_front::hir::{self, PatKind};\n-use rustc_front::print::pprust;\n-use rustc_front::util as hir_util;\n+use rustc::hir::{self, PatKind};\n+use rustc::hir::print as pprust;\n+use rustc::hir::util as hir_util;\n \n pub fn check_pat<'a, 'tcx>(pcx: &pat_ctxt<'a, 'tcx>,\n                            pat: &'tcx hir::Pat,"}, {"sha": "460230c60c60a49322df43e74e4a52aa18790de9", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -34,7 +34,7 @@ use syntax::codemap::Span;\n use syntax::parse::token;\n use syntax::ptr::P;\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n /// Check that it is legal to call methods of the trait corresponding\n /// to `trait_id` (this only cares about the trait, not the specific"}, {"sha": "00a73a062fe1882ca7a24a90034ce3ebf30de8e9", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -48,7 +48,7 @@ use middle::def_id::DefId;\n use rustc::ty::{self, Ty, TypeFoldable};\n use rustc::ty::cast::{CastKind, CastTy};\n use syntax::codemap::Span;\n-use rustc_front::hir;\n+use rustc::hir;\n use syntax::ast;\n \n "}, {"sha": "7bca570411cebeb2d7c631bf5cb92948fe1e7f68", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -17,7 +17,7 @@ use rustc::ty::subst;\n use rustc::ty::{self, ToPolyTraitRef, Ty};\n use std::cmp;\n use syntax::abi::Abi;\n-use rustc_front::hir;\n+use rustc::hir;\n \n pub fn check_expr_closure<'a,'tcx>(fcx: &FnCtxt<'a,'tcx>,\n                                    expr: &hir::Expr,"}, {"sha": "f1c6868efd2101f19c469e01092079a2383bb3b7", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -76,7 +76,7 @@ use util::common::indent;\n \n use std::cell::RefCell;\n use std::collections::VecDeque;\n-use rustc_front::hir;\n+use rustc::hir;\n \n struct Coerce<'a, 'tcx: 'a> {\n     fcx: &'a FnCtxt<'a, 'tcx>,"}, {"sha": "5b163eb7de452ebc05ad1577cd371e73df0dae74", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -14,7 +14,7 @@ use rustc::ty::Ty;\n use rustc::infer::{InferOk, TypeOrigin};\n \n use syntax::codemap::Span;\n-use rustc_front::hir;\n+use rustc::hir;\n \n // Requires that the two types unify, and prints an error message if\n // they don't."}, {"sha": "eae0cfb0f22672293a48558b8c6a73effdb260e9", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -26,7 +26,7 @@ use syntax::attr::AttrMetaMethods;\n use syntax::codemap::Span;\n use syntax::parse::token;\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n fn equate_intrinsic_type<'a, 'tcx>(tcx: &TyCtxt<'tcx>, it: &hir::ForeignItem,\n                                    n_tps: usize,"}, {"sha": "cc12b2e05152d4b0ef08626a7fd8838e0e54cacf", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -21,7 +21,7 @@ use rustc::ty::fold::TypeFoldable;\n use rustc::infer;\n use rustc::infer::{InferCtxt, TypeOrigin};\n use syntax::codemap::Span;\n-use rustc_front::hir;\n+use rustc::hir;\n \n struct ConfirmContext<'a, 'tcx:'a> {\n     fcx: &'a FnCtxt<'a, 'tcx>,"}, {"sha": "72ca73aac940ed09b23711ea3260942fcec9c320", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -23,7 +23,7 @@ use rustc::infer;\n use syntax::ast;\n use syntax::codemap::Span;\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n pub use self::MethodError::*;\n pub use self::CandidateSource::*;"}, {"sha": "c907a6dc64020f933e5a22a2bff1ad00de3f6ba4", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -24,7 +24,7 @@ use rustc::ty::{self, NoPreference, Ty, TyCtxt, ToPolyTraitRef, TraitRef, TypeFo\n use rustc::infer::{self, InferCtxt, InferOk, TypeOrigin};\n use syntax::ast;\n use syntax::codemap::{Span, DUMMY_SP};\n-use rustc_front::hir;\n+use rustc::hir;\n use std::collections::HashSet;\n use std::mem;\n use std::rc::Rc;"}, {"sha": "620863a7a2e11f9117f43bfa310e4c0ef2f8aac6", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -15,7 +15,7 @@ use CrateCtxt;\n \n use astconv::AstConv;\n use check::{self, FnCtxt, UnresolvedTypeAction, autoderef};\n-use front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use rustc::ty::{self, Ty, ToPolyTraitRef, ToPredicate, TypeFoldable};\n use middle::cstore::{self, CrateStore};\n use middle::def::Def;\n@@ -30,9 +30,9 @@ use util::nodemap::{FnvHashSet};\n use syntax::ast;\n use syntax::codemap::Span;\n use syntax::errors::DiagnosticBuilder;\n-use rustc_front::print::pprust;\n-use rustc_front::hir;\n-use rustc_front::hir::Expr_;\n+use rustc::hir::print as pprust;\n+use rustc::hir;\n+use rustc::hir::Expr_;\n \n use std::cell;\n use std::cmp::Ordering;\n@@ -436,7 +436,7 @@ impl Ord for TraitInfo {\n /// Retrieve all traits in this crate and any dependent crates.\n pub fn all_traits<'a>(ccx: &'a CrateCtxt) -> AllTraits<'a> {\n     if ccx.all_traits.borrow().is_none() {\n-        use rustc_front::intravisit;\n+        use rustc::hir::intravisit;\n \n         let mut traits = vec![];\n "}, {"sha": "20b9a75e0e555bf0a34d407be86ac2fe68948419", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -124,10 +124,10 @@ use syntax::parse::token::{self, InternedString, special_idents};\n use syntax::ptr::P;\n use syntax::util::lev_distance::find_best_match_for_name;\n \n-use rustc_front::intravisit::{self, Visitor};\n-use rustc_front::hir;\n-use rustc_front::hir::{Visibility, PatKind};\n-use rustc_front::print::pprust;\n+use rustc::hir::intravisit::{self, Visitor};\n+use rustc::hir;\n+use rustc::hir::{Visibility, PatKind};\n+use rustc::hir::print as pprust;\n use rustc_back::slice;\n use rustc_const_eval::eval_repeat_count;\n \n@@ -3987,7 +3987,7 @@ fn check_block_with_expected<'a, 'tcx>(fcx: &FnCtxt<'a, 'tcx>,\n     let mut any_err = false;\n     for s in &blk.stmts {\n         check_stmt(fcx, s);\n-        let s_id = ::rustc_front::util::stmt_id(s);\n+        let s_id = hir::util::stmt_id(s);\n         let s_ty = fcx.node_ty(s_id);\n         if any_diverges && !warned && match s.node {\n             hir::StmtDecl(ref decl, _) => {"}, {"sha": "1af015cdebf9098724262a71c084844697438dd5", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -22,8 +22,8 @@ use middle::def_id::DefId;\n use rustc::ty::{Ty, TypeFoldable, PreferMutLvalue};\n use syntax::ast;\n use syntax::parse::token;\n-use rustc_front::hir;\n-use rustc_front::util as hir_util;\n+use rustc::hir;\n+use rustc::hir::util as hir_util;\n \n /// Check a `a <op>= b`\n pub fn check_binop_assign<'a,'tcx>(fcx: &FnCtxt<'a,'tcx>,"}, {"sha": "ed9372acba9526e54d64ca86fe2247e56bb0c9cd", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -100,9 +100,9 @@ use rustc::ty::wf::ImpliedBound;\n use std::mem;\n use syntax::ast;\n use syntax::codemap::Span;\n-use rustc_front::intravisit::{self, Visitor};\n-use rustc_front::hir::{self, PatKind};\n-use rustc_front::util as hir_util;\n+use rustc::hir::intravisit::{self, Visitor};\n+use rustc::hir::{self, PatKind};\n+use rustc::hir::util as hir_util;\n \n use self::SubjectNode::Subject;\n "}, {"sha": "40481cda76290b4d999d9bc9e24a7d98071f2865", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -51,8 +51,8 @@ use rustc::infer::{InferCtxt, UpvarRegion};\n use std::collections::HashSet;\n use syntax::ast;\n use syntax::codemap::Span;\n-use rustc_front::hir;\n-use rustc_front::intravisit::{self, Visitor};\n+use rustc::hir;\n+use rustc::hir::intravisit::{self, Visitor};\n \n ///////////////////////////////////////////////////////////////////////////\n // PUBLIC ENTRY POINTS"}, {"sha": "0ed0b64b9704f77f2a6caec9375384203f4751af", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -25,8 +25,8 @@ use syntax::ast;\n use syntax::codemap::{Span};\n use syntax::errors::DiagnosticBuilder;\n use syntax::parse::token::{special_idents};\n-use rustc_front::intravisit::{self, Visitor};\n-use rustc_front::hir;\n+use rustc::hir::intravisit::{self, Visitor};\n+use rustc::hir;\n \n pub struct CheckTypeWellFormedVisitor<'ccx, 'tcx:'ccx> {\n     ccx: &'ccx CrateCtxt<'ccx, 'tcx>,"}, {"sha": "6ac6f1d6e17d1f892cd9134cd4deeffba9e1a09c", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -28,10 +28,10 @@ use std::cell::Cell;\n \n use syntax::ast;\n use syntax::codemap::{DUMMY_SP, Span};\n-use rustc_front::print::pprust::pat_to_string;\n-use rustc_front::intravisit::{self, Visitor};\n-use rustc_front::util as hir_util;\n-use rustc_front::hir;\n+use rustc::hir::print::pat_to_string;\n+use rustc::hir::intravisit::{self, Visitor};\n+use rustc::hir::util as hir_util;\n+use rustc::hir;\n \n ///////////////////////////////////////////////////////////////////////////\n // Entry point functions"}, {"sha": "1f7fc45327965153ac8dd54f4aa66bf56c493c1f", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -39,10 +39,10 @@ use syntax::codemap::Span;\n use syntax::errors::DiagnosticBuilder;\n use util::nodemap::{DefIdMap, FnvHashMap};\n use rustc::dep_graph::DepNode;\n-use rustc::front::map as hir_map;\n-use rustc_front::intravisit;\n-use rustc_front::hir::{Item, ItemImpl};\n-use rustc_front::hir;\n+use rustc::hir::map as hir_map;\n+use rustc::hir::intravisit;\n+use rustc::hir::{Item, ItemImpl};\n+use rustc::hir;\n \n mod orphan;\n mod overlap;"}, {"sha": "0821d5582bdedbd7424f1dfb441f6f370a3a7a38", "filename": "src/librustc_typeck/coherence/orphan.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -18,8 +18,8 @@ use rustc::ty::{self, TyCtxt};\n use syntax::ast;\n use syntax::codemap::Span;\n use rustc::dep_graph::DepNode;\n-use rustc_front::intravisit;\n-use rustc_front::hir;\n+use rustc::hir::intravisit;\n+use rustc::hir;\n \n pub fn check(tcx: &TyCtxt) {\n     let mut orphan = OrphanChecker { tcx: tcx };"}, {"sha": "d99c5d52f4a67d243a39cae099670523addf1bda", "filename": "src/librustc_typeck/coherence/overlap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -19,8 +19,8 @@ use rustc::infer;\n use rustc::ty::{self, TyCtxt};\n use syntax::ast;\n use rustc::dep_graph::DepNode;\n-use rustc_front::hir;\n-use rustc_front::intravisit;\n+use rustc::hir;\n+use rustc::hir::intravisit;\n use util::nodemap::DefIdMap;\n use lint;\n "}, {"sha": "b042e23e0ac0494104958c0b376b6c327a604845", "filename": "src/librustc_typeck/coherence/unsafety.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -12,8 +12,8 @@\n //! crate or pertains to a type defined in this crate.\n \n use rustc::ty::TyCtxt;\n-use rustc_front::intravisit;\n-use rustc_front::hir;\n+use rustc::hir::intravisit;\n+use rustc::hir;\n \n pub fn check(tcx: &TyCtxt) {\n     let mut orphan = UnsafetyChecker { tcx: tcx };"}, {"sha": "53126d3494ab17c5b2d6ae885973d52ff980c3d3", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -77,7 +77,7 @@ use rustc::ty::fold::{TypeFolder};\n use rustc::ty::util::IntTypeExt;\n use rscope::*;\n use rustc::dep_graph::DepNode;\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use util::common::{ErrorReported, MemoizationMap};\n use util::nodemap::{FnvHashMap, FnvHashSet};\n use write_ty_to_tcx;\n@@ -94,9 +94,9 @@ use syntax::attr;\n use syntax::codemap::Span;\n use syntax::parse::token::special_idents;\n use syntax::ptr::P;\n-use rustc_front::hir::{self, PatKind};\n-use rustc_front::intravisit;\n-use rustc_front::print::pprust;\n+use rustc::hir::{self, PatKind};\n+use rustc::hir::intravisit;\n+use rustc::hir::print as pprust;\n \n ///////////////////////////////////////////////////////////////////////////\n // Main entry point"}, {"sha": "af32026d47e464bb0e46f32079b68cef491e45ed", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -90,28 +90,26 @@ extern crate arena;\n extern crate fmt_macros;\n #[macro_use] extern crate rustc;\n extern crate rustc_platform_intrinsics as intrinsics;\n-extern crate rustc_front;\n extern crate rustc_back;\n extern crate rustc_const_math;\n extern crate rustc_const_eval;\n \n pub use rustc::dep_graph;\n-pub use rustc::front;\n+pub use rustc::hir;\n pub use rustc::lint;\n pub use rustc::middle;\n pub use rustc::session;\n pub use rustc::util;\n \n use dep_graph::DepNode;\n-use front::map as hir_map;\n+use hir::map as hir_map;\n use middle::def::Def;\n use rustc::infer::{self, TypeOrigin};\n use rustc::ty::subst::Substs;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc::traits::ProjectionMode;\n use session::{config, CompileResult};\n use util::common::time;\n-use rustc_front::hir;\n \n use syntax::codemap::Span;\n use syntax::ast;"}, {"sha": "fa3ee80c6dac8ab7f59e58680a80ccec94d44f1e", "filename": "src/librustc_typeck/variance/constraints.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -20,10 +20,10 @@ use rustc::ty::subst;\n use rustc::ty::subst::ParamSpace;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::maps::ItemVariances;\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use syntax::ast;\n-use rustc_front::hir;\n-use rustc_front::intravisit::Visitor;\n+use rustc::hir;\n+use rustc::hir::intravisit::Visitor;\n \n use super::terms::*;\n use super::terms::VarianceTerm::*;"}, {"sha": "413dc83e638f2c583d84878fcd9e408617bd8585", "filename": "src/librustc_typeck/variance/terms.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -27,8 +27,8 @@ use rustc::ty::maps::ItemVariances;\n use std::fmt;\n use std::rc::Rc;\n use syntax::ast;\n-use rustc_front::hir;\n-use rustc_front::intravisit::Visitor;\n+use rustc::hir;\n+use rustc::hir::intravisit::Visitor;\n use util::nodemap::NodeMap;\n \n use self::VarianceTerm::*;"}, {"sha": "9d76dd81e5f76041ff3404539ad98f8aad599a27", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -15,7 +15,6 @@ rustc = { path = \"../librustc\" }\n rustc_back = { path = \"../librustc_back\" }\n rustc_const_eval = { path = \"../librustc_const_eval\" }\n rustc_driver = { path = \"../librustc_driver\" }\n-rustc_front = { path = \"../librustc_front\" }\n rustc_lint = { path = \"../librustc_lint\" }\n rustc_metadata = { path = \"../librustc_metadata\" }\n rustc_resolve = { path = \"../librustc_resolve\" }"}, {"sha": "2f080dae37084cd2263e2ef715ddc426c9633719", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -14,7 +14,7 @@ use std::collections::HashSet;\n \n use syntax::ast;\n use syntax::attr::AttrMetaMethods;\n-use rustc_front::hir;\n+use rustc::hir;\n \n use rustc::middle::cstore::{self, CrateStore};\n use rustc::middle::def::Def;\n@@ -484,7 +484,7 @@ fn build_module(cx: &DocContext, tcx: &TyCtxt,\n \n fn build_const(cx: &DocContext, tcx: &TyCtxt,\n                did: DefId) -> clean::Constant {\n-    use rustc_front::print::pprust;\n+    use rustc::hir::print as pprust;\n \n     let (expr, ty) = lookup_const_by_id(tcx, did, None).unwrap_or_else(|| {\n         panic!(\"expected lookup_const_by_id to succeed for {:?}\", did);"}, {"sha": "715d0e759c3b777fe79fd81400aa41af58c9d0f9", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -41,7 +41,7 @@ use rustc::ty::subst::{self, ParamSpace, VecPerParamSpace};\n use rustc::ty;\n use rustc::middle::stability;\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n use std::collections::{HashMap, HashSet};\n use std::path::PathBuf;\n@@ -563,7 +563,7 @@ pub enum TyParamBound {\n \n impl TyParamBound {\n     fn maybe_sized(cx: &DocContext) -> TyParamBound {\n-        use rustc_front::hir::TraitBoundModifier as TBM;\n+        use rustc::hir::TraitBoundModifier as TBM;\n         let mut sized_bound = ty::BoundSized.clean(cx);\n         if let TyParamBound::TraitBound(_, ref mut tbm) = sized_bound {\n             *tbm = TBM::Maybe\n@@ -572,7 +572,7 @@ impl TyParamBound {\n     }\n \n     fn is_sized_bound(&self, cx: &DocContext) -> bool {\n-        use rustc_front::hir::TraitBoundModifier as TBM;\n+        use rustc::hir::TraitBoundModifier as TBM;\n         if let Some(tcx) = cx.tcx_opt() {\n             if let TyParamBound::TraitBound(PolyTrait { ref trait_, .. }, TBM::None) = *self {\n                 if trait_.def_id() == tcx.lang_items.sized_trait() {\n@@ -1609,7 +1609,7 @@ impl PrimitiveType {\n \n impl Clean<Type> for hir::Ty {\n     fn clean(&self, cx: &DocContext) -> Type {\n-        use rustc_front::hir::*;\n+        use rustc::hir::*;\n         match self.node {\n             TyPtr(ref m) => RawPointer(m.mutbl.clean(cx), box m.ty.clean(cx)),\n             TyRptr(ref l, ref m) =>\n@@ -1826,7 +1826,7 @@ pub struct VariantStruct {\n     pub fields_stripped: bool,\n }\n \n-impl Clean<VariantStruct> for ::rustc_front::hir::VariantData {\n+impl Clean<VariantStruct> for ::rustc::hir::VariantData {\n     fn clean(&self, cx: &DocContext) -> VariantStruct {\n         VariantStruct {\n             struct_type: doctree::struct_type_from_def(self),\n@@ -2554,7 +2554,7 @@ fn lit_to_string(lit: &ast::Lit) -> String {\n }\n \n fn name_from_pat(p: &hir::Pat) -> String {\n-    use rustc_front::hir::*;\n+    use rustc::hir::*;\n     debug!(\"Trying to get a name from pattern: {:?}\", p);\n \n     match p.node {"}, {"sha": "4686e60be872a4021f0b966ad70243143bd897dc", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -16,11 +16,11 @@ use rustc::session::{self, config};\n use rustc::middle::def_id::DefId;\n use rustc::middle::privacy::AccessLevels;\n use rustc::ty::{self, TyCtxt};\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use rustc::lint;\n use rustc_trans::back::link;\n use rustc_resolve as resolve;\n-use rustc_front::lowering::{lower_crate, LoweringContext};\n+use rustc::hir::lowering::{lower_crate, LoweringContext};\n use rustc_metadata::cstore::CStore;\n \n use syntax::{ast, codemap, errors};"}, {"sha": "2db4b779eed9844d5d5e0a092b4bfd7cc6aff082", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -20,7 +20,7 @@ use syntax::ast;\n use syntax::ast::{Name, NodeId};\n use syntax::attr;\n use syntax::ptr::P;\n-use rustc_front::hir;\n+use rustc::hir;\n \n pub struct Module {\n     pub name: Option<Name>,"}, {"sha": "9f0b636227ff6010fa9a1212ffa74b445d077052", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -21,7 +21,7 @@ use std::iter::repeat;\n use rustc::middle::cstore::LOCAL_CRATE;\n use rustc::middle::def_id::{CRATE_DEF_INDEX, DefId};\n use syntax::abi::Abi;\n-use rustc_front::hir;\n+use rustc::hir;\n \n use clean;\n use html::item_type::ItemType;"}, {"sha": "f97d4fee05391db45dfe697fe9996ebac6312ab6", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -60,7 +60,7 @@ use rustc::middle::def_id::{CRATE_DEF_INDEX, DefId};\n use rustc::middle::privacy::AccessLevels;\n use rustc::middle::stability;\n use rustc::session::config::get_unstable_features_setting;\n-use rustc_front::hir;\n+use rustc::hir;\n \n use clean::{self, SelfTy, Attributes, GetDefId};\n use doctree;"}, {"sha": "9439c258318aedee40e124350a3fac4269c8fec5", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -41,7 +41,6 @@ extern crate rustc_driver;\n extern crate rustc_resolve;\n extern crate rustc_lint;\n extern crate rustc_back;\n-extern crate rustc_front;\n extern crate rustc_metadata;\n extern crate serialize;\n #[macro_use] extern crate syntax;"}, {"sha": "31f00caee436f762cc473d1ee086360fd4435060", "filename": "src/librustdoc/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -14,7 +14,7 @@ use rustc::util::nodemap::DefIdSet;\n use std::cmp;\n use std::string::String;\n use std::usize;\n-use rustc_front::hir;\n+use rustc::hir;\n \n use clean::{self, Attributes, GetDefId};\n use clean::Item;"}, {"sha": "3810fb87acf6a9dac20599551f9fb7a1f4e401c9", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -24,11 +24,11 @@ use std::sync::{Arc, Mutex};\n use testing;\n use rustc_lint;\n use rustc::dep_graph::DepGraph;\n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use rustc::session::{self, config};\n use rustc::session::config::{get_unstable_features_setting, OutputType};\n use rustc::session::search_paths::{SearchPaths, PathKind};\n-use rustc_front::lowering::{lower_crate, LoweringContext};\n+use rustc::hir::lowering::{lower_crate, LoweringContext};\n use rustc_back::dynamic_lib::DynamicLibrary;\n use rustc_back::tempdir::TempDir;\n use rustc_driver::{driver, Compilation};\n@@ -141,7 +141,7 @@ pub fn run(input: &str,\n }\n \n // Look for #![doc(test(no_crate_inject))], used by crates in the std facade\n-fn scrape_test_config(krate: &::rustc_front::hir::Crate) -> TestOptions {\n+fn scrape_test_config(krate: &::rustc::hir::Crate) -> TestOptions {\n     use syntax::attr::AttrMetaMethods;\n     use syntax::print::pprust;\n "}, {"sha": "45c7969ef7c39a6f89c318c200dc72bc29b0848f", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -20,10 +20,10 @@ use syntax::attr;\n use syntax::attr::AttrMetaMethods;\n use syntax::codemap::Span;\n \n-use rustc::front::map as hir_map;\n+use rustc::hir::map as hir_map;\n use rustc::middle::stability;\n \n-use rustc_front::hir;\n+use rustc::hir;\n \n use core;\n use clean::{Clean, Attributes};"}, {"sha": "4b5c2850dab080f72e38d052bee5759c5411bad7", "filename": "src/rustc/Cargo.lock", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Frustc%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Frustc%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2FCargo.lock?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -75,7 +75,6 @@ dependencies = [\n  \"rustc_bitflags 0.0.0\",\n  \"rustc_const_eval 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"serialize 0.0.0\",\n  \"syntax 0.0.0\",\n ]\n@@ -85,7 +84,6 @@ name = \"rustc_back\"\n version = \"0.0.0\"\n dependencies = [\n  \"log 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"serialize 0.0.0\",\n  \"syntax 0.0.0\",\n ]\n@@ -101,7 +99,6 @@ dependencies = [\n  \"graphviz 0.0.0\",\n  \"log 0.0.0\",\n  \"rustc 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"rustc_mir 0.0.0\",\n  \"syntax 0.0.0\",\n ]\n@@ -134,7 +131,6 @@ dependencies = [\n  \"rustc 0.0.0\",\n  \"rustc_back 0.0.0\",\n  \"rustc_borrowck 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"rustc_lint 0.0.0\",\n  \"rustc_llvm 0.0.0\",\n  \"rustc_metadata 0.0.0\",\n@@ -151,24 +147,13 @@ dependencies = [\n  \"syntax_ext 0.0.0\",\n ]\n \n-[[package]]\n-name = \"rustc_front\"\n-version = \"0.0.0\"\n-dependencies = [\n- \"log 0.0.0\",\n- \"rustc_bitflags 0.0.0\",\n- \"serialize 0.0.0\",\n- \"syntax 0.0.0\",\n-]\n-\n [[package]]\n name = \"rustc_lint\"\n version = \"0.0.0\"\n dependencies = [\n  \"log 0.0.0\",\n  \"rustc 0.0.0\",\n  \"rustc_back 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"syntax 0.0.0\",\n ]\n \n@@ -192,7 +177,6 @@ dependencies = [\n  \"rustc_back 0.0.0\",\n  \"rustc_bitflags 0.0.0\",\n  \"rustc_const_eval 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"rustc_llvm 0.0.0\",\n  \"serialize 0.0.0\",\n  \"syntax 0.0.0\",\n@@ -208,7 +192,6 @@ dependencies = [\n  \"rustc_back 0.0.0\",\n  \"rustc_const_eval 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"syntax 0.0.0\",\n ]\n \n@@ -218,7 +201,6 @@ version = \"0.0.0\"\n dependencies = [\n  \"log 0.0.0\",\n  \"rustc 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"syntax 0.0.0\",\n ]\n \n@@ -234,7 +216,6 @@ dependencies = [\n  \"rustc 0.0.0\",\n  \"rustc_back 0.0.0\",\n  \"rustc_bitflags 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"rustc_metadata 0.0.0\",\n  \"rustc_mir 0.0.0\",\n  \"syntax 0.0.0\",\n@@ -246,7 +227,6 @@ version = \"0.0.0\"\n dependencies = [\n  \"log 0.0.0\",\n  \"rustc 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"syntax 0.0.0\",\n ]\n \n@@ -258,7 +238,6 @@ dependencies = [\n  \"log 0.0.0\",\n  \"rustc 0.0.0\",\n  \"rustc_bitflags 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"syntax 0.0.0\",\n ]\n \n@@ -284,7 +263,6 @@ dependencies = [\n  \"rustc_back 0.0.0\",\n  \"rustc_const_eval 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"rustc_llvm 0.0.0\",\n  \"rustc_mir 0.0.0\",\n  \"rustc_platform_intrinsics 0.0.0\",\n@@ -302,7 +280,6 @@ dependencies = [\n  \"rustc 0.0.0\",\n  \"rustc_back 0.0.0\",\n  \"rustc_const_eval 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"rustc_platform_intrinsics 0.0.0\",\n  \"syntax 0.0.0\",\n ]\n@@ -318,7 +295,6 @@ dependencies = [\n  \"rustc 0.0.0\",\n  \"rustc_back 0.0.0\",\n  \"rustc_driver 0.0.0\",\n- \"rustc_front 0.0.0\",\n  \"rustc_lint 0.0.0\",\n  \"rustc_metadata 0.0.0\",\n  \"rustc_resolve 0.0.0\","}, {"sha": "b5234af937b0c08b65385d94606ab902503a9b50", "filename": "src/test/auxiliary/dummy_mir_pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Ftest%2Fauxiliary%2Fdummy_mir_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Ftest%2Fauxiliary%2Fdummy_mir_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fdummy_mir_pass.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -14,7 +14,6 @@\n #![feature(box_syntax)]\n \n #[macro_use] extern crate rustc;\n-extern crate rustc_front;\n extern crate rustc_plugin;\n extern crate rustc_const_math;\n extern crate syntax;"}, {"sha": "a424517da12f0c2dbda6a5b4e45eb48400faf65f", "filename": "src/test/auxiliary/lint_for_crate.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Ftest%2Fauxiliary%2Flint_for_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Ftest%2Fauxiliary%2Flint_for_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_for_crate.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -14,13 +14,12 @@\n #![feature(box_syntax)]\n \n #[macro_use] extern crate rustc;\n-extern crate rustc_front;\n extern crate rustc_plugin;\n extern crate syntax;\n \n use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n use rustc_plugin::Registry;\n-use rustc_front::hir;\n+use rustc::hir;\n use syntax::attr;\n \n declare_lint!(CRATE_NOT_OKAY, Warn, \"crate not marked with #![crate_okay]\");"}, {"sha": "1e9a77724a8ebdfd46a5eabcc407b98f34ee46ac", "filename": "src/test/auxiliary/lint_group_plugin_test.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Ftest%2Fauxiliary%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Ftest%2Fauxiliary%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_group_plugin_test.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -13,14 +13,12 @@\n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n \n-extern crate rustc_front;\n-\n // Load rustc as a plugin to get macros\n #[macro_use]\n extern crate rustc;\n extern crate rustc_plugin;\n \n-use rustc_front::hir;\n+use rustc::hir;\n use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n use rustc_plugin::Registry;\n "}, {"sha": "91b4f5f30ad0d1f0d4313b5e3b843135fe66ef9b", "filename": "src/test/run-make/execution-engine/test.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0937293bdb70ab4a5efed02b90a71af2b234f6/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs?ref=8b0937293bdb70ab4a5efed02b90a71af2b234f6", "patch": "@@ -14,7 +14,6 @@\n extern crate libc;\n extern crate rustc;\n extern crate rustc_driver;\n-extern crate rustc_front;\n extern crate rustc_lint;\n extern crate rustc_llvm as llvm;\n extern crate rustc_metadata;\n@@ -28,13 +27,13 @@ use std::rc::Rc;\n use std::thread::Builder;\n \n use rustc::dep_graph::DepGraph;\n-use rustc::front::map as ast_map;\n+use rustc::hir::map as ast_map;\n use rustc::middle::cstore::{CrateStore, LinkagePreference};\n use rustc::ty;\n use rustc::session::config::{self, basic_options, build_configuration, Input, Options};\n use rustc::session::build_session;\n use rustc_driver::{driver, abort_on_err};\n-use rustc_front::lowering::{lower_crate, LoweringContext};\n+use rustc::hir::lowering::{lower_crate, LoweringContext};\n use rustc_resolve::MakeGlobMap;\n use rustc_metadata::cstore::CStore;\n use libc::c_void;"}]}