{"sha": "4f62077a2c203a74363589db8c010de11ba5f5d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNjIwNzdhMmMyMDNhNzQzNjM1ODlkYjhjMDEwZGUxMWJhNWY1ZDc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-12T04:17:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-12T04:17:25Z"}, "message": "Rollup merge of #53777 - ivanbakel:result_map_or_else, r=alexcrichton\n\nImplemented map_or_else for Result<T, E>\n\nFulfills #53268\nThe example is ripped from `Option::map_or_else`, with the types corrected.", "tree": {"sha": "127b4c460cebae8caa212792b137ff6552ab3bc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/127b4c460cebae8caa212792b137ff6552ab3bc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f62077a2c203a74363589db8c010de11ba5f5d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbmJNVCRBK7hj4Ov3rIwAAdHIIAGm22NPMeKUuRoFiGH2SzkzM\ny66pHeZktMuKmCcPqxKHsHOS8tireLvRDd9oKM4YumJmiZ6SMw4eYcNxd7e3BV+z\nQFyPU7tiiT4p1c8UsR+mu1dFtkY9pNVOIdk+BY3G5NHOa/mzmKohPqWi6rnKoVKs\nxtvcsTPLP5Q3b7xEc7Qrmc4CZlNrfUeo6VbFTlgJEt/BWQtIaA6wNLNf6xH51JB2\nL0ZmIB3emP6JEnwaidTod8g7L8Ya6OT8F/l07FJ9amrvRsugzRtNvBEvTZO1VsKR\ntqlDYePCle82HaKAaYKbLJQAibkpJUGK2BGVQk4ADWHu87+j7efHTEZk2juX9Zk=\n=EeXL\n-----END PGP SIGNATURE-----\n", "payload": "tree 127b4c460cebae8caa212792b137ff6552ab3bc5\nparent 605948f92e3aeb62c9f1dc2d9bef76f3e28aafbb\nparent 79408c3f32e605ac6def31cb2849f7f4017c9084\nauthor kennytm <kennytm@gmail.com> 1536725845 +0800\ncommitter GitHub <noreply@github.com> 1536725845 +0800\n\nRollup merge of #53777 - ivanbakel:result_map_or_else, r=alexcrichton\n\nImplemented map_or_else for Result<T, E>\n\nFulfills #53268\nThe example is ripped from `Option::map_or_else`, with the types corrected.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f62077a2c203a74363589db8c010de11ba5f5d7", "html_url": "https://github.com/rust-lang/rust/commit/4f62077a2c203a74363589db8c010de11ba5f5d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f62077a2c203a74363589db8c010de11ba5f5d7/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "605948f92e3aeb62c9f1dc2d9bef76f3e28aafbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/605948f92e3aeb62c9f1dc2d9bef76f3e28aafbb", "html_url": "https://github.com/rust-lang/rust/commit/605948f92e3aeb62c9f1dc2d9bef76f3e28aafbb"}, {"sha": "79408c3f32e605ac6def31cb2849f7f4017c9084", "url": "https://api.github.com/repos/rust-lang/rust/commits/79408c3f32e605ac6def31cb2849f7f4017c9084", "html_url": "https://github.com/rust-lang/rust/commit/79408c3f32e605ac6def31cb2849f7f4017c9084"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "93ee11aac36b000937eb5756e7293a3df57658a7", "filename": "src/libcore/result.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4f62077a2c203a74363589db8c010de11ba5f5d7/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f62077a2c203a74363589db8c010de11ba5f5d7/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=4f62077a2c203a74363589db8c010de11ba5f5d7", "patch": "@@ -470,6 +470,36 @@ impl<T, E> Result<T, E> {\n         }\n     }\n \n+    /// Maps a `Result<T, E>` to `U` by applying a function to a\n+    /// contained [`Ok`] value, or a fallback function to a\n+    /// contained [`Err`] value.\n+    ///\n+    /// This function can be used to unpack a successful result\n+    /// while handling an error.\n+    ///\n+    /// [`Ok`]: enum.Result.html#variant.Ok\n+    /// [`Err`]: enum.Result.html#variant.Err\n+    ///\n+    /// # Examples\n+    ///\n+    /// Basic usage:\n+    ///\n+    /// ```\n+    /// #![feature(result_map_or_else)]\n+    /// let k = 21;\n+    ///\n+    /// let x : Result<_, &str> = Ok(\"foo\");\n+    /// assert_eq!(x.map_or_else(|e| k * 2, |v| v.len()), 3);\n+    ///\n+    /// let x : Result<&str, _> = Err(\"bar\");\n+    /// assert_eq!(x.map_or_else(|e| k * 2, |v| v.len()), 42);\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"result_map_or_else\", issue = \"53268\")]\n+    pub fn map_or_else<U, M: FnOnce(T) -> U, F: FnOnce(E) -> U>(self, fallback: F, map: M) -> U {\n+        self.map(map).unwrap_or_else(fallback)\n+    }\n+\n     /// Maps a `Result<T, E>` to `Result<T, F>` by applying a function to a\n     /// contained [`Err`] value, leaving an [`Ok`] value untouched.\n     ///"}]}