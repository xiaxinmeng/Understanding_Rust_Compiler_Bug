{"sha": "2b61f90c715b264abd5f2c22506a3906360916d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNjFmOTBjNzE1YjI2NGFiZDVmMmMyMjUwNmEzOTA2MzYwOTE2ZDc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-06-02T14:25:44Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-06-16T16:03:38Z"}, "message": "Fix returning non ZST uninhabited types", "tree": {"sha": "3fd8e35251cdb5669e56ce2896ca8c3f1881cf93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fd8e35251cdb5669e56ce2896ca8c3f1881cf93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b61f90c715b264abd5f2c22506a3906360916d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b61f90c715b264abd5f2c22506a3906360916d7", "html_url": "https://github.com/rust-lang/rust/commit/2b61f90c715b264abd5f2c22506a3906360916d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b61f90c715b264abd5f2c22506a3906360916d7/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01e930385776a5c8a3719cf762362c52e894a46b", "url": "https://api.github.com/repos/rust-lang/rust/commits/01e930385776a5c8a3719cf762362c52e894a46b", "html_url": "https://github.com/rust-lang/rust/commit/01e930385776a5c8a3719cf762362c52e894a46b"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "bf027dd3e88a6c7f8ee285c8203dcd746b72e18f", "filename": "src/value_and_place.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2b61f90c715b264abd5f2c22506a3906360916d7/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b61f90c715b264abd5f2c22506a3906360916d7/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=2b61f90c715b264abd5f2c22506a3906360916d7", "patch": "@@ -327,8 +327,9 @@ impl<'a, 'tcx: 'a> CPlace<'tcx> {\n                 dst_layout,\n             ),\n             CPlace::NoPlace(layout) => {\n-                assert_eq!(layout.size.bytes(), 0);\n-                assert_eq!(from.layout().size.bytes(), 0);\n+                if layout.abi != Abi::Uninhabited {\n+                    assert_eq!(layout.size.bytes(), 0, \"{:?}\", layout);\n+                }\n                 return;\n             }\n             CPlace::Addr(_, _, _) => bug!(\"Can't write value to unsized place {:?}\", self),"}]}