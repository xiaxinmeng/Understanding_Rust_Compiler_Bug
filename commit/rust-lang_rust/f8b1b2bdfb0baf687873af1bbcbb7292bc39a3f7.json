{"sha": "f8b1b2bdfb0baf687873af1bbcbb7292bc39a3f7", "node_id": "C_kwDOAAsO6NoAKGY4YjFiMmJkZmIwYmFmNjg3ODczYWYxYmJjYmI3MjkyYmMzOWEzZjc", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T13:10:04Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T14:27:02Z"}, "message": "Extract record_elided_anchor", "tree": {"sha": "997fc50e24accc1855c477bcbd2a7b64035496f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/997fc50e24accc1855c477bcbd2a7b64035496f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8b1b2bdfb0baf687873af1bbcbb7292bc39a3f7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmLr1zYACgkQgTGiTgx5\n768b+BAApJfFkUn1DdHer85Q0ubW4vHMSpEjH50cv/I1vF5LAg1w7CtHt3p3qrag\nJpPkwD1ILhVozTGerDp/nakf0zERE3kb2VvEXheBmj3Iqse2nZTPzkdp9zSmKJWg\n1O/jOyF9TERsh4mAeYJcbNYKSVV0dHtwYZDEEhcmHt1M+6oiwwSQ7smQ4fR9OPj6\ngv0Ygs53tbgYNzAiAEHWbI4sP7l/7BGCZpqL213UeeiMuDhlcRva3JLYPYij+S2k\nGHd2YGTGeQaetZjfeIbWYRyDrdWSibrM80Uk9fR71HBXM6Dct9XnbVXWC2su3Yhd\naXfEneNmYlNZz/562TudO5UINZvt9BQ/C75MgIr65nnLvrqwu1MTfTdE8ZOfnMvm\nCtbx+peAgQfZmVbbAj4usSHeqAAB0EuyxlFmulFa0RKPdJDUooqDb5p/vk8OmJIr\nXb5qJrkQPjURRqflLyV6tHqnAS533xVLQlXt7On40+aC18FvDJJ8jTYc9roLgf1R\nWaxQaShqmvBAaICb0DQz1Hozf2ZvgkjmaQm3iuNQJ7XIFwnl1S+lbq0vFfuFFFC/\n8hutobO/lu4GDKIRLRYv708ZB1sBEEjmNFstPi74Ml3QjCzuHi1b2K8ShI9ygbqH\n6FDmIvXtYD96X89Aok+lFzjstWJbOJlEGPW4GmSf0yuReVUTfc8=\n=pBep\n-----END PGP SIGNATURE-----", "payload": "tree 997fc50e24accc1855c477bcbd2a7b64035496f1\nparent 9f10f589a78b0ed864884b6ab108fbd081ce2a8d\nauthor Santiago Pastorino <spastorino@gmail.com> 1659618604 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1659623222 -0300\n\nExtract record_elided_anchor\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b1b2bdfb0baf687873af1bbcbb7292bc39a3f7", "html_url": "https://github.com/rust-lang/rust/commit/f8b1b2bdfb0baf687873af1bbcbb7292bc39a3f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8b1b2bdfb0baf687873af1bbcbb7292bc39a3f7/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f10f589a78b0ed864884b6ab108fbd081ce2a8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f10f589a78b0ed864884b6ab108fbd081ce2a8d", "html_url": "https://github.com/rust-lang/rust/commit/9f10f589a78b0ed864884b6ab108fbd081ce2a8d"}], "stats": {"total": 31, "additions": 13, "deletions": 18}, "files": [{"sha": "1a9677919d07c6d1b6b1d271518f3cdd81aff13f", "filename": "compiler/rustc_ast_lowering/src/lifetime_collector.rs", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f8b1b2bdfb0baf687873af1bbcbb7292bc39a3f7/compiler%2Frustc_ast_lowering%2Fsrc%2Flifetime_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b1b2bdfb0baf687873af1bbcbb7292bc39a3f7/compiler%2Frustc_ast_lowering%2Fsrc%2Flifetime_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flifetime_collector.rs?ref=f8b1b2bdfb0baf687873af1bbcbb7292bc39a3f7", "patch": "@@ -29,6 +29,17 @@ impl<'ast> LifetimeCollectVisitor<'ast> {\n             }\n         }\n     }\n+\n+    fn record_elided_anchor(&mut self, node_id: NodeId, span: Span) {\n+        if let Some(LifetimeRes::ElidedAnchor { start, end }) =\n+            self.resolver.get_lifetime_res(node_id)\n+        {\n+            for i in start..end {\n+                let lifetime = Lifetime { id: i, ident: Ident::new(kw::UnderscoreLifetime, span) };\n+                self.record_lifetime_use(lifetime);\n+            }\n+        }\n+    }\n }\n \n impl<'ast> Visitor<'ast> for LifetimeCollectVisitor<'ast> {\n@@ -37,15 +48,7 @@ impl<'ast> Visitor<'ast> for LifetimeCollectVisitor<'ast> {\n     }\n \n     fn visit_path_segment(&mut self, path_span: Span, path_segment: &'ast PathSegment) {\n-        if let Some(LifetimeRes::ElidedAnchor { start, end }) =\n-            self.resolver.get_lifetime_res(path_segment.id)\n-        {\n-            for i in start..end {\n-                let lifetime =\n-                    Lifetime { id: i, ident: Ident::new(kw::UnderscoreLifetime, path_span) };\n-                self.record_lifetime_use(lifetime);\n-            }\n-        }\n+        self.record_elided_anchor(path_segment.id, path_span);\n         visit::walk_path_segment(self, path_span, path_segment);\n     }\n \n@@ -65,15 +68,7 @@ impl<'ast> Visitor<'ast> for LifetimeCollectVisitor<'ast> {\n                 self.current_binders.pop();\n             }\n             TyKind::Rptr(None, _) => {\n-                if let Some(LifetimeRes::ElidedAnchor { start, end }) =\n-                    self.resolver.get_lifetime_res(t.id)\n-                {\n-                    for i in start..end {\n-                        let lifetime =\n-                            Lifetime { id: i, ident: Ident::new(kw::UnderscoreLifetime, t.span) };\n-                        self.record_lifetime_use(lifetime);\n-                    }\n-                }\n+                self.record_elided_anchor(t.id, t.span);\n                 visit::walk_ty(self, t);\n             }\n             _ => {"}]}