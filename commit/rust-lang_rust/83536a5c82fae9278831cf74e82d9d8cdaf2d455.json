{"sha": "83536a5c82fae9278831cf74e82d9d8cdaf2d455", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNTM2YTVjODJmYWU5Mjc4ODMxY2Y3NGU4MmQ5ZDhjZGFmMmQ0NTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-13T19:35:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-13T19:35:34Z"}, "message": "Rollup merge of #67274 - RalfJung:uninit, r=Centril\n\nbe explicit that mem::uninitialized is the same as MaybeUninit::uninit().assume_init()\n\nCc @Centril @nikomatsakis", "tree": {"sha": "5d046fb139ce9065272e3215d75fe9e5add0091d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d046fb139ce9065272e3215d75fe9e5add0091d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83536a5c82fae9278831cf74e82d9d8cdaf2d455", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd8+gGCRBK7hj4Ov3rIwAAdHIIAFIhu3zlPfmvFIJvvlv830Ce\n4Q9GsTJCEvEWE0VWePio0Rt/LEWbhfHZDMqgbpjvHJUVyfXTx/GAyvmcBFfu8Q6J\nEUOVp011xrrsBBdfeebenh7hNjSF7cvyM2dQzoE1Lk2+JawRPuXu+MAX1n8YM4NS\nBg5voM5aPcBkKrqxF8mopNwZ8fRGL2uc5vwdrss+qFUbGUnkrlHDy465sS9z+FAD\nDKWpKfjmYHlyGJhuME3WhP6ujnO6qU5BeGBv/2iHPFL/cHVFbEjr/yPw1B4WBLty\nUucMuMalKFbwW8togSK/vZXcBEhLTBr/Zn7ka89Z7ZXUUp8/O9eMcLD8+STmH9g=\n=cccN\n-----END PGP SIGNATURE-----\n", "payload": "tree 5d046fb139ce9065272e3215d75fe9e5add0091d\nparent 88e702a6ec5e166f20dfc51eaa4b85fc4a045d6b\nparent 216b9ae8780655c001b7401b630a046633e1b3c6\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576265734 +0100\ncommitter GitHub <noreply@github.com> 1576265734 +0100\n\nRollup merge of #67274 - RalfJung:uninit, r=Centril\n\nbe explicit that mem::uninitialized is the same as MaybeUninit::uninit().assume_init()\n\nCc @Centril @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83536a5c82fae9278831cf74e82d9d8cdaf2d455", "html_url": "https://github.com/rust-lang/rust/commit/83536a5c82fae9278831cf74e82d9d8cdaf2d455", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83536a5c82fae9278831cf74e82d9d8cdaf2d455/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88e702a6ec5e166f20dfc51eaa4b85fc4a045d6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/88e702a6ec5e166f20dfc51eaa4b85fc4a045d6b", "html_url": "https://github.com/rust-lang/rust/commit/88e702a6ec5e166f20dfc51eaa4b85fc4a045d6b"}, {"sha": "216b9ae8780655c001b7401b630a046633e1b3c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/216b9ae8780655c001b7401b630a046633e1b3c6", "html_url": "https://github.com/rust-lang/rust/commit/216b9ae8780655c001b7401b630a046633e1b3c6"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "ec926aa6c2308842d1a8028e5258865099f683ed", "filename": "src/libcore/mem/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/83536a5c82fae9278831cf74e82d9d8cdaf2d455/src%2Flibcore%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83536a5c82fae9278831cf74e82d9d8cdaf2d455/src%2Flibcore%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmod.rs?ref=83536a5c82fae9278831cf74e82d9d8cdaf2d455", "patch": "@@ -510,7 +510,9 @@ pub unsafe fn zeroed<T>() -> T {\n /// **This function is deprecated.** Use [`MaybeUninit<T>`] instead.\n ///\n /// The reason for deprecation is that the function basically cannot be used\n-/// correctly: [the Rust compiler assumes][inv] that values are properly initialized.\n+/// correctly: it has the same effect as [`MaybeUninit::uninit().assume_init()`][uninit].\n+/// As the [`assume_init` documentation][assume_init] explains,\n+/// [the Rust compiler assumes][inv] that values are properly initialized.\n /// As a consequence, calling e.g. `mem::uninitialized::<bool>()` causes immediate\n /// undefined behavior for returning a `bool` that is not definitely either `true`\n /// or `false`. Worse, truly uninitialized memory like what gets returned here\n@@ -521,6 +523,8 @@ pub unsafe fn zeroed<T>() -> T {\n /// until they are, it is advisable to avoid them.)\n ///\n /// [`MaybeUninit<T>`]: union.MaybeUninit.html\n+/// [uninit]: union.MaybeUninit.html#method.uninit\n+/// [assume_init]: union.MaybeUninit.html#method.assume_init\n /// [inv]: union.MaybeUninit.html#initialization-invariant\n #[inline]\n #[rustc_deprecated(since = \"1.39.0\", reason = \"use `mem::MaybeUninit` instead\")]"}]}