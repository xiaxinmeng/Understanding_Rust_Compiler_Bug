{"sha": "5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwODRkZTNhYWZhNGI4ZTAxNGExYjg2OThmZGQyZTVlNjJiOTdmYTc=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-05-25T04:38:16Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-06-09T21:29:30Z"}, "message": "Convert tests to use #[plugin_registrar]", "tree": {"sha": "b535ba6822c97d46c4cd0ab568653d69fe10b02c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b535ba6822c97d46c4cd0ab568653d69fe10b02c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7", "html_url": "https://github.com/rust-lang/rust/commit/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2", "html_url": "https://github.com/rust-lang/rust/commit/aca0bac29f7d7e86edfb5850cef1ab9b5e4797f2"}], "stats": {"total": 66, "additions": 30, "deletions": 36}, "files": [{"sha": "805b8a894cb7e24a15a84a7ff341044417e65291", "filename": "src/test/auxiliary/macro_crate_test.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs?ref=5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7", "patch": "@@ -10,29 +10,28 @@\n \n // force-host\n \n-#![feature(globs, macro_registrar, macro_rules, quote, managed_boxes)]\n+#![feature(globs, plugin_registrar, macro_rules, quote, managed_boxes)]\n \n extern crate syntax;\n+extern crate rustc;\n \n-use syntax::ast::{Name, TokenTree, Item, MetaItem};\n+use syntax::ast::{TokenTree, Item, MetaItem};\n use syntax::codemap::Span;\n use syntax::ext::base::*;\n use syntax::parse::token;\n+use rustc::plugin::Registry;\n \n #[macro_export]\n macro_rules! exported_macro (() => (2))\n \n macro_rules! unexported_macro (() => (3))\n \n-#[macro_registrar]\n-pub fn macro_registrar(register: |Name, SyntaxExtension|) {\n-    register(token::intern(\"make_a_1\"),\n-        NormalTT(box BasicMacroExpander {\n-            expander: expand_make_a_1,\n-            span: None,\n-        },\n-        None));\n-    register(token::intern(\"into_foo\"), ItemModifier(expand_into_foo));\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"make_a_1\", expand_make_a_1);\n+    reg.register_syntax_extension(\n+        token::intern(\"into_foo\"),\n+        ItemModifier(expand_into_foo));\n }\n \n fn expand_make_a_1(cx: &mut ExtCtxt, sp: Span, tts: &[TokenTree])"}, {"sha": "213fdd6b74a292355cd4a39202c541e41c57ae6e", "filename": "src/test/auxiliary/plugin_crate_outlive_expansion_phase.rs", "status": "renamed", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Fauxiliary%2Fplugin_crate_outlive_expansion_phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Fauxiliary%2Fplugin_crate_outlive_expansion_phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fplugin_crate_outlive_expansion_phase.rs?ref=5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7", "patch": "@@ -10,13 +10,12 @@\n \n // force-host\n \n-#![feature(macro_registrar)]\n+#![feature(plugin_registrar)]\n \n-extern crate syntax;\n+extern crate rustc;\n \n use std::any::Any;\n-use syntax::ast::Name;\n-use syntax::ext::base::SyntaxExtension;\n+use rustc::plugin::Registry;\n \n struct Foo {\n     foo: int\n@@ -26,8 +25,8 @@ impl Drop for Foo {\n     fn drop(&mut self) {}\n }\n \n-#[macro_registrar]\n-pub fn registrar(_: |Name, SyntaxExtension|) {\n+#[plugin_registrar]\n+pub fn registrar(_: &mut Registry) {\n     local_data_key!(foo: Box<Any:Send>);\n     foo.replace(Some(box Foo { foo: 10 } as Box<Any:Send>));\n }", "previous_filename": "src/test/auxiliary/macro_crate_outlive_expansion_phase.rs"}, {"sha": "04318fcae2733d2dbf2cbbdd3e56397bd3d6adc2", "filename": "src/test/auxiliary/syntax-extension-with-dll-deps-2.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-2.rs?ref=5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7", "patch": "@@ -12,24 +12,20 @@\n // no-prefer-dynamic\n \n #![crate_type = \"dylib\"]\n-#![feature(macro_registrar, quote, globs)]\n+#![feature(plugin_registrar, quote, globs)]\n \n extern crate other = \"syntax-extension-with-dll-deps-1\";\n extern crate syntax;\n+extern crate rustc;\n \n-use syntax::ast::{Name, TokenTree, Item, MetaItem};\n+use syntax::ast::{TokenTree, Item, MetaItem};\n use syntax::codemap::Span;\n use syntax::ext::base::*;\n-use syntax::parse::token;\n+use rustc::plugin::Registry;\n \n-#[macro_registrar]\n-pub fn macro_registrar(register: |Name, SyntaxExtension|) {\n-    register(token::intern(\"foo\"),\n-        NormalTT(box BasicMacroExpander {\n-            expander: expand_foo,\n-            span: None,\n-        },\n-        None));\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"foo\", expand_foo);\n }\n \n fn expand_foo(cx: &mut ExtCtxt, sp: Span, tts: &[TokenTree])"}, {"sha": "f6e11ffd9e5239c92f732a01c6cbd0969afd6726", "filename": "src/test/compile-fail/gated-plugin_registrar.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Fcompile-fail%2Fgated-plugin_registrar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Fcompile-fail%2Fgated-plugin_registrar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-plugin_registrar.rs?ref=5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // the registration function isn't typechecked yet\n-#[macro_registrar]\n-pub fn registrar() {} //~ ERROR cross-crate macro exports are experimental\n+#[plugin_registrar]\n+pub fn registrar() {} //~ ERROR compiler plugins are experimental\n \n fn main() {}", "previous_filename": "src/test/compile-fail/gated-macro_registrar.rs"}, {"sha": "f5ebf84b8e0df83823b4a588d4400795fd546bc4", "filename": "src/test/compile-fail/multiple-plugin-registrars.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Fcompile-fail%2Fmultiple-plugin-registrars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Fcompile-fail%2Fmultiple-plugin-registrars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmultiple-plugin-registrars.rs?ref=5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7", "patch": "@@ -8,15 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: multiple macro registration functions found\n+// error-pattern: multiple plugin registration functions found\n \n-#![feature(macro_registrar)]\n+#![feature(plugin_registrar)]\n \n // the registration function isn't typechecked yet\n-#[macro_registrar]\n+#[plugin_registrar]\n pub fn one() {}\n \n-#[macro_registrar]\n+#[plugin_registrar]\n pub fn two() {}\n \n fn main() {}", "previous_filename": "src/test/compile-fail/multiple-macro-registrars.rs"}, {"sha": "dd585ea979408ec30e1abd46f9a4960296439bf1", "filename": "src/test/run-pass-fulldeps/macro-crate-outlive-expansion-phase.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs?ref=5084de3aafa4b8e014a1b8698fdd2e5e62b97fa7", "patch": "@@ -8,12 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// aux-build:macro_crate_outlive_expansion_phase.rs\n+// aux-build:plugin_crate_outlive_expansion_phase.rs\n // ignore-stage1\n \n #![feature(phase)]\n \n #[phase(plugin)]\n-extern crate macro_crate_outlive_expansion_phase;\n+extern crate plugin_crate_outlive_expansion_phase;\n \n pub fn main() {}"}]}