{"sha": "c2d1cac36bba4f10071f9a5baddefb5925374a9a", "node_id": "C_kwDOAAsO6NoAKGMyZDFjYWMzNmJiYTRmMTAwNzFmOWE1YmFkZGVmYjU5MjUzNzRhOWE", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2023-01-11T05:18:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-11T05:18:57Z"}, "message": "Rollup merge of #106671 - tmiasko:opt-bool, r=wesleywiser\n\nChange flags with a fixed default value from Option<bool> to bool", "tree": {"sha": "dd8e6935f231aebab16e943488e6d8664fa93fff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd8e6935f231aebab16e943488e6d8664fa93fff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2d1cac36bba4f10071f9a5baddefb5925374a9a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjvkbBCRBK7hj4Ov3rIwAAF2cIAKHZqHKfsD7qq/HDrIpwkHE3\noWk2+3kNOtcN0Mm0oWA/BjTBiq5zG6+pm4P2vIkxjCqed0FRk3dDqr1gB80aFEFt\n1/7jBsH1I+OflE0rBRO1FTpuAXDqMMxYwyLiNTL15iXzQY+TE9W/i4aZ+nmecP7f\nd80hgzTMjdtuZvept8WjIX1+z6P7MmIxt8BsYhb5m9HdsORGl4pUOKpFd+5vLg2H\n0fsjdgygbdgW0j4/CALZfgGyZpJgWW5/zX26XoviKSc+pLEY4PT1tvOIzp9u6Un0\nV31+vF68mz0g4uyxdiRCV95HePR45tRK3DyCVhPMLeExW0VnPPTmceQOULtL5LU=\n=pv7G\n-----END PGP SIGNATURE-----\n", "payload": "tree dd8e6935f231aebab16e943488e6d8664fa93fff\nparent 0e92e1dd999a2d7945182c8f4f99f76e0414d0ee\nparent 72f8d6a6597e4b780e518e606ec39595ee0eda85\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1673414337 +0900\ncommitter GitHub <noreply@github.com> 1673414337 +0900\n\nRollup merge of #106671 - tmiasko:opt-bool, r=wesleywiser\n\nChange flags with a fixed default value from Option<bool> to bool\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2d1cac36bba4f10071f9a5baddefb5925374a9a", "html_url": "https://github.com/rust-lang/rust/commit/c2d1cac36bba4f10071f9a5baddefb5925374a9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2d1cac36bba4f10071f9a5baddefb5925374a9a/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e92e1dd999a2d7945182c8f4f99f76e0414d0ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e92e1dd999a2d7945182c8f4f99f76e0414d0ee", "html_url": "https://github.com/rust-lang/rust/commit/0e92e1dd999a2d7945182c8f4f99f76e0414d0ee"}, {"sha": "72f8d6a6597e4b780e518e606ec39595ee0eda85", "url": "https://api.github.com/repos/rust-lang/rust/commits/72f8d6a6597e4b780e518e606ec39595ee0eda85", "html_url": "https://github.com/rust-lang/rust/commit/72f8d6a6597e4b780e518e606ec39595ee0eda85"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a3b9891ee64e90a5f6c7f323a2d172b6c2b6c403", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c2d1cac36bba4f10071f9a5baddefb5925374a9a/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2d1cac36bba4f10071f9a5baddefb5925374a9a/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=c2d1cac36bba4f10071f9a5baddefb5925374a9a", "patch": "@@ -715,7 +715,7 @@ fn test_unstable_options_tracking_hash() {\n     tracked!(asm_comments, true);\n     tracked!(assume_incomplete_release, true);\n     tracked!(binary_dep_depinfo, true);\n-    tracked!(box_noalias, Some(false));\n+    tracked!(box_noalias, false);\n     tracked!(\n         branch_protection,\n         Some(BranchProtection {\n@@ -754,7 +754,7 @@ fn test_unstable_options_tracking_hash() {\n     tracked!(mir_enable_passes, vec![(\"DestProp\".to_string(), false)]);\n     tracked!(mir_opt_level, Some(4));\n     tracked!(move_size_limit, Some(4096));\n-    tracked!(mutable_noalias, Some(true));\n+    tracked!(mutable_noalias, false);\n     tracked!(no_generate_arange_section, true);\n     tracked!(no_jump_tables, true);\n     tracked!(no_link, true);"}, {"sha": "4c2360676881938dacba9c2388f17acf68259389", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c2d1cac36bba4f10071f9a5baddefb5925374a9a/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2d1cac36bba4f10071f9a5baddefb5925374a9a/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=c2d1cac36bba4f10071f9a5baddefb5925374a9a", "patch": "@@ -1255,7 +1255,7 @@ options! {\n     binary_dep_depinfo: bool = (false, parse_bool, [TRACKED],\n         \"include artifacts (sysroot, crate dependencies) used during compilation in dep-info \\\n         (default: no)\"),\n-    box_noalias: Option<bool> = (None, parse_opt_bool, [TRACKED],\n+    box_noalias: bool = (true, parse_bool, [TRACKED],\n         \"emit noalias metadata for box (default: yes)\"),\n     branch_protection: Option<BranchProtection> = (None, parse_branch_protection, [TRACKED],\n         \"set options for branch target identification and pointer authentication on AArch64\"),\n@@ -1437,7 +1437,7 @@ options! {\n         \"use line numbers relative to the function in mir pretty printing\"),\n     move_size_limit: Option<usize> = (None, parse_opt_number, [TRACKED],\n         \"the size at which the `large_assignments` lint starts to be emitted\"),\n-    mutable_noalias: Option<bool> = (None, parse_opt_bool, [TRACKED],\n+    mutable_noalias: bool = (true, parse_bool, [TRACKED],\n         \"emit noalias metadata for mutable references (default: yes)\"),\n     nll_facts: bool = (false, parse_bool, [UNTRACKED],\n         \"dump facts from NLL analysis into side files (default: no)\"),"}, {"sha": "d1197774fe96cfedb369061d15c5053ffbbff23e", "filename": "compiler/rustc_ty_utils/src/abi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c2d1cac36bba4f10071f9a5baddefb5925374a9a/compiler%2Frustc_ty_utils%2Fsrc%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2d1cac36bba4f10071f9a5baddefb5925374a9a/compiler%2Frustc_ty_utils%2Fsrc%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fabi.rs?ref=c2d1cac36bba4f10071f9a5baddefb5925374a9a", "patch": "@@ -254,12 +254,12 @@ fn adjust_for_rust_scalar<'tcx>(\n             // The aliasing rules for `Box<T>` are still not decided, but currently we emit\n             // `noalias` for it. This can be turned off using an unstable flag.\n             // See https://github.com/rust-lang/unsafe-code-guidelines/issues/326\n-            let noalias_for_box = cx.tcx.sess.opts.unstable_opts.box_noalias.unwrap_or(true);\n+            let noalias_for_box = cx.tcx.sess.opts.unstable_opts.box_noalias;\n \n             // LLVM prior to version 12 had known miscompiles in the presence of noalias attributes\n             // (see #54878), so it was conditionally disabled, but we don't support earlier\n             // versions at all anymore. We still support turning it off using -Zmutable-noalias.\n-            let noalias_mut_ref = cx.tcx.sess.opts.unstable_opts.mutable_noalias.unwrap_or(true);\n+            let noalias_mut_ref = cx.tcx.sess.opts.unstable_opts.mutable_noalias;\n \n             // `&mut` pointer parameters never alias other parameters,\n             // or mutable global data"}]}