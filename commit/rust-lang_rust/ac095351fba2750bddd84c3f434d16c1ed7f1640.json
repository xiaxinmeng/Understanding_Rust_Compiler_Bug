{"sha": "ac095351fba2750bddd84c3f434d16c1ed7f1640", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjMDk1MzUxZmJhMjc1MGJkZGQ4NGMzZjQzNGQxNmMxZWQ3ZjE2NDA=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-12-29T03:52:10Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-12-29T06:10:08Z"}, "message": "Fallout from globs/re-export/shadowing change", "tree": {"sha": "c7f11ff959dee86a2feb97dc8eeffde588e57eb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7f11ff959dee86a2feb97dc8eeffde588e57eb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac095351fba2750bddd84c3f434d16c1ed7f1640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac095351fba2750bddd84c3f434d16c1ed7f1640", "html_url": "https://github.com/rust-lang/rust/commit/ac095351fba2750bddd84c3f434d16c1ed7f1640", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac095351fba2750bddd84c3f434d16c1ed7f1640/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35dd33c7e24798e8acc030fc5bbf2ca372616bbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/35dd33c7e24798e8acc030fc5bbf2ca372616bbf", "html_url": "https://github.com/rust-lang/rust/commit/35dd33c7e24798e8acc030fc5bbf2ca372616bbf"}], "stats": {"total": 54, "additions": 33, "deletions": 21}, "files": [{"sha": "cca071836dde7e07fe5ca40f4a981283915854ac", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -1343,7 +1343,10 @@ pub mod raw {\n #[cfg(test)]\n mod tests {\n     use std::boxed::Box;\n-    use prelude::*;\n+    use prelude::{Some, None, range, Vec, ToString, Clone, Greater, Less, Equal};\n+    use prelude::{SliceExt, Iterator, IteratorExt, DoubleEndedIteratorExt};\n+    use prelude::{OrdSliceExt, CloneSliceExt, PartialEqSliceExt, AsSlice};\n+    use prelude::{RandomAccessIterator, Ord, VectorVector};\n     use core::cell::Cell;\n     use core::default::Default;\n     use core::mem;"}, {"sha": "5b26dc294780243efe04a85a888276a57adb5b4a", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -3331,7 +3331,7 @@ mod tests {\n #[cfg(test)]\n mod bench {\n     use super::*;\n-    use prelude::*;\n+    use prelude::{SliceExt, IteratorExt, DoubleEndedIteratorExt};\n     use test::Bencher;\n     use test::black_box;\n "}, {"sha": "39c57b99b36f018e40e2db890de8d2605d825abd", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -537,7 +537,8 @@ pub unsafe fn from_c_multistring<F>(buf: *const libc::c_char,\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use prelude::*;\n+    use prelude::{spawn, Some, None, Option, FnOnce, ToString, CloneSliceExt};\n+    use prelude::{Clone, RawPtr, Iterator, SliceExt, StrExt};\n     use ptr;\n     use thread::Thread;\n     use libc;"}, {"sha": "a405627aecc45a9be9e9a1ea705bf8c4524c428e", "filename": "src/libstd/comm/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fcomm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fcomm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm%2Fmod.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -336,7 +336,8 @@ macro_rules! test {\n             use super::*;\n             use comm::*;\n             use thread::Thread;\n-            use prelude::*;\n+            use prelude::{Ok, Err, spawn, range, drop, Box, Some, None, Option};\n+            use prelude::{Vec, Buffer, from_str, Clone};\n \n             $(#[$a])* #[test] fn f() { $b }\n         }\n@@ -1046,7 +1047,7 @@ unsafe impl<T> kinds::Sync for RacyCell<T> { } // Oh dear\n #[cfg(test)]\n mod test {\n     use super::*;\n-    use prelude::*;\n+    use prelude::{spawn, range, Some, None, from_str, Clone, Str};\n     use os;\n \n     pub fn stress_factor() -> uint {"}, {"sha": "ccece874ce703af29121abfce4fa24a7bc7e891c", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -400,8 +400,8 @@ impl<'a> Buffer for BufReader<'a> {\n mod test {\n     extern crate \"test\" as test_crate;\n     use super::*;\n-    use io::*;\n-    use prelude::*;\n+    use io::{SeekSet, SeekCur, SeekEnd, Reader, Writer, Seek};\n+    use prelude::{Ok, Err, range,  Vec, Buffer,  AsSlice, SliceExt, IteratorExt, CloneSliceExt};\n     use io;\n     use self::test_crate::Bencher;\n "}, {"sha": "82aa00dc98e7f085855fe33c76c127ff1675fdc0", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -1959,8 +1959,8 @@ impl fmt::Show for FilePermission {\n #[cfg(test)]\n mod tests {\n     use self::BadReaderBehavior::*;\n-    use super::{IoResult, Reader, MemReader, NoProgress, InvalidInput};\n-    use prelude::*;\n+    use super::{IoResult, Reader, MemReader, NoProgress, InvalidInput, Writer};\n+    use prelude::{Ok, Vec, Buffer, CloneSliceExt};\n     use uint;\n \n     #[deriving(Clone, PartialEq, Show)]"}, {"sha": "93f37a8c98ff86a6401b47eb8b21a2e88e7550aa", "filename": "src/libstd/io/net/pipe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fnet%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fnet%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Fpipe.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -269,7 +269,7 @@ mod tests {\n     use super::*;\n     use io::*;\n     use io::test::*;\n-    use prelude::*;\n+    use prelude::{Ok, Err, spawn, range, drop,  Some, None, channel, Send, FnOnce, Clone};\n     use io::fs::PathExtensions;\n     use time::Duration;\n "}, {"sha": "24cf06973cc6939f982f6ce6725d42003dfe6557", "filename": "src/libstd/io/net/tcp.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -484,9 +484,12 @@ impl sys_common::AsInner<TcpAcceptorImp> for TcpAcceptor {\n mod test {\n     use io::net::tcp::*;\n     use io::net::ip::*;\n-    use io::*;\n+    use io::{EndOfFile, TimedOut, IoError, ShortWrite, OtherIoError, ConnectionAborted};\n+    use io::{ConnectionRefused, ConnectionReset, BrokenPipe, NotConnected};\n+    use io::{PermissionDenied, Listener, Acceptor};\n     use io::test::*;\n-    use prelude::*;\n+    use prelude::{Ok, Err, spawn, range, drop, Some, None, channel, Clone};\n+    use prelude::{Reader, Writer, IteratorExt};\n \n     // FIXME #11530 this fails on android because tests are run as root\n     #[cfg_attr(any(windows, target_os = \"android\"), ignore)]"}, {"sha": "a165232c5f50dec102725978d287d3ae0cb77f2f", "filename": "src/libstd/io/net/udp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Fudp.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -250,9 +250,9 @@ impl Writer for UdpStream {\n mod test {\n     use super::*;\n     use io::net::ip::*;\n-    use io::*;\n+    use io::{ShortWrite, IoError, TimedOut, PermissionDenied};\n     use io::test::*;\n-    use prelude::*;\n+    use prelude::{Ok, Err, spawn, range, drop, Some, None, channel, Clone, Reader, Writer};\n \n     // FIXME #11530 this fails on android because tests are run as root\n     #[cfg_attr(any(windows, target_os = \"android\"), ignore)]"}, {"sha": "9e0c76e4e79f5de2cb55bbbc65919ce6060dac0a", "filename": "src/libstd/io/process.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fprocess.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -745,8 +745,10 @@ mod tests {\n \n     use super::*;\n     use io::timer::*;\n-    use io::*;\n-    use prelude::*;\n+    use io::{Truncate, Write, TimedOut, timer, process, FileNotFound};\n+    use prelude::{Ok, Err, spawn, range, drop, Box, Some, None, Option, Vec, Buffer};\n+    use prelude::{from_str, Path, String, channel, Reader, Writer, Clone, Slice};\n+    use prelude::{SliceExt, Str, StrExt, AsSlice, ToString, GenericPath};\n     use io::fs::PathExtensions;\n     use time::Duration;\n     use str;"}, {"sha": "79a2b8b84f0c3ccb29e974554c6d9e7d602536c5", "filename": "src/libstd/io/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Futil.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -280,7 +280,7 @@ mod test {\n     use io;\n     use boxed::Box;\n     use super::*;\n-    use prelude::*;\n+    use prelude::{Ok, range, Vec, Buffer, Writer, Reader, ToString, AsSlice};\n \n     #[test]\n     fn test_limit_reader_unlimited() {"}, {"sha": "48ff1a364e93c7d73f750df61d6597ca3a5bf27e", "filename": "src/libstd/num/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fmod.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -147,8 +147,10 @@ pub fn test_num<T>(ten: T, two: T) where\n \n #[cfg(test)]\n mod tests {\n-    use prelude::*;\n-    use super::*;\n+    use prelude::{range, Some, None, Option, IteratorExt};\n+    use super::{from_int, from_uint, from_i32, from_i64, from_u64, from_u32};\n+    use super::{from_f64, from_f32, from_u16, from_i16, from_u8, from_i8, Int};\n+    use super::{cast, NumCast, ToPrimitive, FromPrimitive, UnsignedInt};\n     use i8;\n     use i16;\n     use i32;"}, {"sha": "60f147eac9b2b490be0e4dc9086838f9065a8c65", "filename": "src/libstd/path/posix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fpath%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fpath%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fposix.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -1239,7 +1239,7 @@ mod bench {\n     extern crate test;\n     use self::test::Bencher;\n     use super::*;\n-    use prelude::*;\n+    use prelude::{Clone, GenericPath};\n \n     #[bench]\n     fn join_home_dir(b: &mut Bencher) {"}, {"sha": "bdf947438f36bd617093a36cf57868eab2a9e488", "filename": "src/libstd/sync/atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac095351fba2750bddd84c3f434d16c1ed7f1640/src%2Flibstd%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fatomic.rs?ref=ac095351fba2750bddd84c3f434d16c1ed7f1640", "patch": "@@ -180,7 +180,7 @@ impl<T: Send> Drop for AtomicOption<T> {\n \n #[cfg(test)]\n mod test {\n-    use prelude::*;\n+    use prelude::{Some, None};\n     use super::*;\n \n     #[test]"}]}