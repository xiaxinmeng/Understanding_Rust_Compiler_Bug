{"sha": "d92e30d773e5358d982e7514d2ed5b2bc1b9c43f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MmUzMGQ3NzNlNTM1OGQ5ODJlNzUxNGQyZWQ1YjJiYzFiOWM0M2Y=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-09-16T21:20:44Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-09-16T21:21:24Z"}, "message": "Populate the tag containment relation", "tree": {"sha": "713f85ea329848f84a66702c0e8f5167f9e1388f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/713f85ea329848f84a66702c0e8f5167f9e1388f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d92e30d773e5358d982e7514d2ed5b2bc1b9c43f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d92e30d773e5358d982e7514d2ed5b2bc1b9c43f", "html_url": "https://github.com/rust-lang/rust/commit/d92e30d773e5358d982e7514d2ed5b2bc1b9c43f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d92e30d773e5358d982e7514d2ed5b2bc1b9c43f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c73e09f1a25c8a9d9c69a3243d9342037fed73", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c73e09f1a25c8a9d9c69a3243d9342037fed73", "html_url": "https://github.com/rust-lang/rust/commit/c4c73e09f1a25c8a9d9c69a3243d9342037fed73"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "da520d411bcca794ffc61af6f3822183b37bacf6", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/d92e30d773e5358d982e7514d2ed5b2bc1b9c43f/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/d92e30d773e5358d982e7514d2ed5b2bc1b9c43f/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=d92e30d773e5358d982e7514d2ed5b2bc1b9c43f", "patch": "@@ -984,6 +984,42 @@ let check_stmt (cx:Semant.ctxt) : (fn_ctx -> Ast.stmt -> unit) =\n   in\n   check_stmt\n \n+let create_tag_graph_node (cx:Semant.ctxt) (id:Common.opaque_id) (n:int) =\n+  let tag_info = Hashtbl.find cx.Semant.ctxt_all_tag_info id in\n+  let (_, _, ty_tup) = Hashtbl.find tag_info.Semant.tag_nums n in\n+  let rec add_ty =\n+    function\n+        Ast.TY_tag { Ast.tag_id = id'; Ast.tag_args = tys } ->\n+          let make_graph_node () = {\n+            Semant.tgn_index = None;\n+            Semant.tgn_children = Queue.create ()\n+          } in\n+          let tag_graph_node =\n+            Common.htab_search_or_add cx.Semant.ctxt_tag_containment id\n+              make_graph_node\n+          in\n+          Queue.add id' tag_graph_node.Semant.tgn_children;\n+          Array.iter add_ty tys\n+      | Ast.TY_tup tys -> Array.iter add_ty tys\n+      | Ast.TY_rec ty_rec ->\n+          Array.iter (fun (_, ty) -> add_ty ty) ty_rec\n+      | Ast.TY_fn ty_fn -> add_ty_fn ty_fn\n+      | Ast.TY_vec ty | Ast.TY_chan ty | Ast.TY_port ty | Ast.TY_mutable ty\n+          | Ast.TY_constrained (ty, _) -> add_ty ty\n+      | Ast.TY_obj (_, ty_fns) ->\n+          Hashtbl.iter (fun _ ty_fn -> add_ty_fn ty_fn) ty_fns\n+      | _ -> ()\n+  and add_ty_fn (ty_sig, _) =\n+    let add_slot slot =\n+      match slot.Ast.slot_ty with\n+          None -> ()\n+        | Some ty -> add_ty ty\n+    in\n+    Array.iter add_slot ty_sig.Ast.sig_input_slots;\n+    add_slot ty_sig.Ast.sig_output_slot\n+  in\n+  Array.iter add_ty ty_tup\n+\n let process_crate (cx:Semant.ctxt) (crate:Ast.crate) : unit =\n   let path = Stack.create () in\n   let fn_ctx_stack = Stack.create () in\n@@ -1052,6 +1088,7 @@ let process_crate (cx:Semant.ctxt) (crate:Ast.crate) : unit =\n           Ast.MOD_ITEM_fn _ when\n               not (Hashtbl.mem cx.Semant.ctxt_required_items item_id) ->\n             finish_function item_id\n+        | Ast.MOD_ITEM_tag (_, id, n) -> create_tag_graph_node cx id n\n         | _ -> ()\n     in\n "}]}