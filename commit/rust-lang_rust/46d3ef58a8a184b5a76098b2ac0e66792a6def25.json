{"sha": "46d3ef58a8a184b5a76098b2ac0e66792a6def25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZDNlZjU4YThhMTg0YjVhNzYwOThiMmFjMGU2Njc5MmE2ZGVmMjU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-31T13:23:12Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-13T14:16:36Z"}, "message": "parser: extract `recover_const_mut`.", "tree": {"sha": "181132112556a98b0cd7b4c6ddc197d5bcfb783c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/181132112556a98b0cd7b4c6ddc197d5bcfb783c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46d3ef58a8a184b5a76098b2ac0e66792a6def25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46d3ef58a8a184b5a76098b2ac0e66792a6def25", "html_url": "https://github.com/rust-lang/rust/commit/46d3ef58a8a184b5a76098b2ac0e66792a6def25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46d3ef58a8a184b5a76098b2ac0e66792a6def25/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15e07a6a11bc5ed86e33403eb4b7d718d1636855", "url": "https://api.github.com/repos/rust-lang/rust/commits/15e07a6a11bc5ed86e33403eb4b7d718d1636855", "html_url": "https://github.com/rust-lang/rust/commit/15e07a6a11bc5ed86e33403eb4b7d718d1636855"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "f13898d7024543874722c216091b608c208a1a83", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/46d3ef58a8a184b5a76098b2ac0e66792a6def25/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46d3ef58a8a184b5a76098b2ac0e66792a6def25/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=46d3ef58a8a184b5a76098b2ac0e66792a6def25", "patch": "@@ -138,19 +138,7 @@ impl<'a> Parser<'a> {\n             self.parse_item_const(Some(m))?\n         } else if let Const::Yes(const_span) = self.parse_constness() {\n             // CONST ITEM\n-            if self.eat_keyword(kw::Mut) {\n-                let prev_span = self.prev_span;\n-                self.struct_span_err(prev_span, \"const globals cannot be mutable\")\n-                    .span_label(prev_span, \"cannot be mutable\")\n-                    .span_suggestion(\n-                        const_span,\n-                        \"you might want to declare a static instead\",\n-                        \"static\".to_owned(),\n-                        Applicability::MaybeIncorrect,\n-                    )\n-                    .emit();\n-            }\n-\n+            self.recover_const_mut(const_span);\n             self.parse_item_const(None)?\n         } else if self.check_keyword(kw::Trait) || self.check_auto_or_unsafe_trait_item() {\n             // TRAIT ITEM\n@@ -987,6 +975,22 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Recover on `const mut` with `const` already eaten.\n+    fn recover_const_mut(&mut self, const_span: Span) {\n+        if self.eat_keyword(kw::Mut) {\n+            let span = self.prev_span;\n+            self.struct_span_err(span, \"const globals cannot be mutable\")\n+                .span_label(span, \"cannot be mutable\")\n+                .span_suggestion(\n+                    const_span,\n+                    \"you might want to declare a static instead\",\n+                    \"static\".to_owned(),\n+                    Applicability::MaybeIncorrect,\n+                )\n+                .emit();\n+        }\n+    }\n+\n     /// Parse `[\"const\" | (\"static\" \"mut\"?)] $ident \":\" $ty = $expr` with\n     /// `[\"const\" | (\"static\" \"mut\"?)]` already parsed and stored in `m`.\n     ///"}]}