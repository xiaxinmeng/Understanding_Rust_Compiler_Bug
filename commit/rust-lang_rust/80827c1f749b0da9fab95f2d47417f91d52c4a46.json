{"sha": "80827c1f749b0da9fab95f2d47417f91d52c4a46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwODI3YzFmNzQ5YjBkYTlmYWI5NWYyZDQ3NDE3ZjkxZDUyYzRhNDY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-01-08T23:22:42Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-01-29T09:03:52Z"}, "message": "Warn on empty lines after outer attributes", "tree": {"sha": "d717a39ea1d37e1081591817ac51b73d1287ae17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d717a39ea1d37e1081591817ac51b73d1287ae17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80827c1f749b0da9fab95f2d47417f91d52c4a46", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJabuN4AAoJEGZ8j0taaYpgUr0P/2nHfzvMqoaesnhZGhy3B/VT\nkrOL+74+qEkWIANhTF+7OcKQ+Im3sfNKKKrczkd3jUIJp+NwHKPnM8Md9gh2ndF4\npW7RRHBe4Wz61TxYODf2sOKPM0Pau/sMooEBOmrUatsIF+/ayoYigWa7GJWktHmj\npW476f7YA7aH8kAVvgf9X75sRxWM5y66PGcKW4YbgmCt3SIg4IuWrrUlamlIWWRW\nt5oc6xaiZBZgPR4laO1scxThc3LT5Up1b6wf6Wj7v+iwMPau10Ecc0jSEVpyU7qy\nuQaieFcKpCcZg5IAY9iX1dsN2uEd+VPODbs62xCZA2QJq6pfrdROcFdXLcxrsHpT\nOqMpH15i5HzUB0p5jVlaHVZ0TTXrhZdmX7gpxqR9qOAuIKjdxbp2yz8li6UfrMRC\nVyv3km/0ht4ZMDhN3OrTsckyOyaMFaFyyLI8Pzdb6pO6lWSYVgAl8B4eE+jveQfA\n6eUCfRYejYBcOQ6KC728UdBAAYcJtJSKL1l7G6j02lsuWZP9xJP1NsB88ZeIpkPo\nwUvU2Fdm9K5xnvtxkrYLj+112Sgo8MKtCBdOIU1TJeAG/3xlP3gh2Ix45DvpTyaB\nHHUmzylSUDTAncXCN2ZLFeqMQYCpb7Ke6XdZ8usfl0MX3MUlG+ZyVqzEZDSDG+oq\n/7nN4NNksxnaVIgNFw6M\n=kdnw\n-----END PGP SIGNATURE-----", "payload": "tree d717a39ea1d37e1081591817ac51b73d1287ae17\nparent 81c5a05648f7faa28cf92c745969c8dcb4fd17f8\nauthor Philipp Hansch <dev@phansch.net> 1515453762 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1517216632 +0100\n\nWarn on empty lines after outer attributes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80827c1f749b0da9fab95f2d47417f91d52c4a46", "html_url": "https://github.com/rust-lang/rust/commit/80827c1f749b0da9fab95f2d47417f91d52c4a46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80827c1f749b0da9fab95f2d47417f91d52c4a46/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81c5a05648f7faa28cf92c745969c8dcb4fd17f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/81c5a05648f7faa28cf92c745969c8dcb4fd17f8", "html_url": "https://github.com/rust-lang/rust/commit/81c5a05648f7faa28cf92c745969c8dcb4fd17f8"}], "stats": {"total": 94, "additions": 92, "deletions": 2}, "files": [{"sha": "a96193bacf11839cd58941ec85afcb90d899add5", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 51, "deletions": 2, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/80827c1f749b0da9fab95f2d47417f91d52c4a46/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80827c1f749b0da9fab95f2d47417f91d52c4a46/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=80827c1f749b0da9fab95f2d47417f91d52c4a46", "patch": "@@ -5,7 +5,7 @@ use rustc::lint::*;\n use rustc::hir::*;\n use rustc::ty::{self, TyCtxt};\n use semver::Version;\n-use syntax::ast::{Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem, NestedMetaItemKind};\n+use syntax::ast::{Attribute, AttrStyle, Lit, LitKind, MetaItemKind, NestedMetaItem, NestedMetaItemKind};\n use syntax::codemap::Span;\n use utils::{in_macro, match_def_path, opt_def_id, paths, snippet_opt, span_lint, span_lint_and_then};\n \n@@ -78,12 +78,44 @@ declare_lint! {\n     \"use of `#[deprecated(since = \\\"x\\\")]` where x is not semver\"\n }\n \n+/// **What it does:** Checks for empty lines after outer attributes\n+///\n+/// **Why is this bad?**\n+/// Most likely the attribute was meant to be an inner attribute using a '!'.\n+/// If it was meant to be an outer attribute, then the following item\n+/// should not be separated by empty lines.\n+///\n+/// **Known problems:** None\n+///\n+/// **Example:**\n+/// ```rust\n+/// // Bad\n+/// #[inline(always)]\n+///\n+/// fn not_quite_good_code(..) { ... }\n+///\n+/// // Good (as inner attribute)\n+/// #![inline(always)]\n+///\n+/// fn this_is_fine_too(..) { ... }\n+///\n+/// // Good (as outer attribute)\n+/// #[inline(always)]\n+/// fn this_is_fine(..) { ... }\n+///\n+/// ```\n+declare_lint! {\n+    pub EMPTY_LINE_AFTER_OUTER_ATTR,\n+    Warn,\n+    \"empty line after outer attribute\"\n+}\n+\n #[derive(Copy, Clone)]\n pub struct AttrPass;\n \n impl LintPass for AttrPass {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(INLINE_ALWAYS, DEPRECATED_SEMVER, USELESS_ATTRIBUTE)\n+        lint_array!(INLINE_ALWAYS, DEPRECATED_SEMVER, USELESS_ATTRIBUTE, EMPTY_LINE_AFTER_OUTER_ATTR)\n     }\n }\n \n@@ -230,6 +262,23 @@ fn check_attrs(cx: &LateContext, span: Span, name: &Name, attrs: &[Attribute]) {\n     }\n \n     for attr in attrs {\n+        if attr.style == AttrStyle::Outer {\n+            let attr_to_item_span = Span::new(attr.span.lo(), span.lo(), span.ctxt());\n+\n+            if let Some(snippet) = snippet_opt(cx, attr_to_item_span) {\n+                let lines = snippet.split('\\n').collect::<Vec<_>>();\n+                if lines.iter().filter(|l| l.trim().is_empty()).count() > 1 {\n+                    span_lint(\n+                        cx,\n+                        EMPTY_LINE_AFTER_OUTER_ATTR,\n+                        attr_to_item_span,\n+                        &format!(\"Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\")\n+                        );\n+\n+                }\n+            }\n+        }\n+\n         if let Some(ref values) = attr.meta_item_list() {\n             if values.len() != 1 || attr.name().map_or(true, |n| n != \"inline\") {\n                 continue;"}, {"sha": "723d15e876082c0f257e8aa2907741857ad33515", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80827c1f749b0da9fab95f2d47417f91d52c4a46/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80827c1f749b0da9fab95f2d47417f91d52c4a46/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=80827c1f749b0da9fab95f2d47417f91d52c4a46", "patch": "@@ -438,6 +438,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         attrs::DEPRECATED_SEMVER,\n         attrs::INLINE_ALWAYS,\n         attrs::USELESS_ATTRIBUTE,\n+        attrs::EMPTY_LINE_AFTER_OUTER_ATTR,\n         bit_mask::BAD_BIT_MASK,\n         bit_mask::INEFFECTIVE_BIT_MASK,\n         bit_mask::VERBOSE_BIT_MASK,"}, {"sha": "fa8958612f8cdff460cba64686cb6a4c5ba15556", "filename": "tests/ui/empty_line_after_outer_attribute.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/80827c1f749b0da9fab95f2d47417f91d52c4a46/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80827c1f749b0da9fab95f2d47417f91d52c4a46/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.rs?ref=80827c1f749b0da9fab95f2d47417f91d52c4a46", "patch": "@@ -0,0 +1,21 @@\n+\n+#![warn(empty_line_after_outer_attr)]\n+\n+// This should produce a warning\n+#[crate_type = \"lib\"]\n+\n+fn with_one_newline() { assert!(true) }\n+\n+// This should produce a warning, too\n+#[crate_type = \"lib\"]\n+\n+\n+fn with_two_newlines() { assert!(true) }\n+\n+// This should not produce a warning\n+#[allow(non_camel_case_types)]\n+#[allow(missing_docs)]\n+#[allow(missing_docs)]\n+fn three_attributes() { assert!(true) }\n+\n+fn main() { }"}, {"sha": "04de89c60f67cc41c676b2223e1a4ef7704c156e", "filename": "tests/ui/empty_line_after_outer_attribute.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/80827c1f749b0da9fab95f2d47417f91d52c4a46/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/80827c1f749b0da9fab95f2d47417f91d52c4a46/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.stderr?ref=80827c1f749b0da9fab95f2d47417f91d52c4a46", "patch": "@@ -0,0 +1,19 @@\n+error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n+ --> $DIR/empty_line_after_outer_attribute.rs:5:1\n+  |\n+5 | / #[crate_type = \"lib\"]\n+6 | |\n+7 | | fn with_one_newline() { assert!(true) }\n+  | |_\n+  |\n+  = note: `-D empty-line-after-outer-attr` implied by `-D warnings`\n+\n+error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n+  --> $DIR/empty_line_after_outer_attribute.rs:10:1\n+   |\n+10 | / #[crate_type = \"lib\"]\n+11 | |\n+12 | |\n+13 | | fn with_two_newlines() { assert!(true) }\n+   | |_\n+"}]}