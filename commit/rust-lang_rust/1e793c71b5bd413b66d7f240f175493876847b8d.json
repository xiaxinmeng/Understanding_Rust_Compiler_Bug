{"sha": "1e793c71b5bd413b66d7f240f175493876847b8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNzkzYzcxYjViZDQxM2I2NmQ3ZjI0MGYxNzU0OTM4NzY4NDdiOGQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-18T06:24:56Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-09T02:16:34Z"}, "message": "Update tests since ? macro op is supported on 2015.", "tree": {"sha": "41bc35a742f68dbd77ec8fba07f8025495288b71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41bc35a742f68dbd77ec8fba07f8025495288b71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e793c71b5bd413b66d7f240f175493876847b8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e793c71b5bd413b66d7f240f175493876847b8d", "html_url": "https://github.com/rust-lang/rust/commit/1e793c71b5bd413b66d7f240f175493876847b8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e793c71b5bd413b66d7f240f175493876847b8d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39fbcfb277c45a6f1eeac31c171395173def4bdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/39fbcfb277c45a6f1eeac31c171395173def4bdb", "html_url": "https://github.com/rust-lang/rust/commit/39fbcfb277c45a6f1eeac31c171395173def4bdb"}], "stats": {"total": 272, "additions": 185, "deletions": 87}, "files": [{"sha": "72dfc119966dc390f1f57a5c5838d3d6bf36bf3f", "filename": "src/test/run-pass/macros/macro-at-most-once-rep-2015.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-at-most-once-rep-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-at-most-once-rep-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-at-most-once-rep-2015.rs?ref=1e793c71b5bd413b66d7f240f175493876847b8d", "patch": "@@ -0,0 +1,33 @@\n+// run-pass\n+#![allow(unused_mut)]\n+// The logic for parsing Kleene operators in macros has a special case to disambiguate `?`.\n+// Specifically, `$(pat)?` is the ZeroOrOne operator whereas `$(pat)?+` or `$(pat)?*` are the\n+// ZeroOrMore and OneOrMore operators using `?` as a separator. These tests are intended to\n+// exercise that logic in the macro parser.\n+//\n+// Moreover, we also throw in some tests for using a separator with `?`, which is meaningless but\n+// included for consistency with `+` and `*`.\n+//\n+// This test focuses on non-error cases and making sure the correct number of repetitions happen.\n+\n+// edition:2015\n+\n+macro_rules! foo {\n+    ($($a:ident)? ; $num:expr) => { {\n+        let mut x = 0;\n+\n+        $(\n+            x += $a;\n+         )?\n+\n+        assert_eq!(x, $num);\n+    } }\n+}\n+\n+pub fn main() {\n+    let a = 1;\n+\n+    // accept 0 or 1 repetitions\n+    foo!( ; 0);\n+    foo!(a ; 1);\n+}"}, {"sha": "582ef088a73c9bc24c2ee4a2d63add62408019de", "filename": "src/test/run-pass/macros/macro-at-most-once-rep-2018.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-at-most-once-rep-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-at-most-once-rep-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-at-most-once-rep-2018.rs?ref=1e793c71b5bd413b66d7f240f175493876847b8d", "previous_filename": "src/test/run-pass/macros/macro-at-most-once-rep.rs"}, {"sha": "a8e31a648c9ed4e67a41319d43afeecdc75b17fb", "filename": "src/test/ui/issues/issue-39388.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fissues%2Fissue-39388.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fissues%2Fissue-39388.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39388.rs?ref=1e793c71b5bd413b66d7f240f175493876847b8d", "patch": "@@ -1,7 +1,7 @@\n #![allow(unused_macros)]\n \n macro_rules! assign {\n-    (($($a:tt)*) = ($($b:tt))*) => { //~ ERROR expected `*` or `+`\n+    (($($a:tt)*) = ($($b:tt))*) => { //~ ERROR expected one of: `*`, `+`, or `?`\n         $($a)* = $($b)*\n     }\n }"}, {"sha": "62e7dff547692ead4c1aab1a46b6eb54a92d7aff", "filename": "src/test/ui/issues/issue-39388.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fissues%2Fissue-39388.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fissues%2Fissue-39388.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39388.stderr?ref=1e793c71b5bd413b66d7f240f175493876847b8d", "patch": "@@ -1,4 +1,4 @@\n-error: expected `*` or `+`\n+error: expected one of: `*`, `+`, or `?`\n   --> $DIR/issue-39388.rs:4:22\n    |\n LL |     (($($a:tt)*) = ($($b:tt))*) => {"}, {"sha": "2d8d2ecf9d7b47c63a805e7404566709c793eb8d", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015-ques-rep.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/39fbcfb277c45a6f1eeac31c171395173def4bdb/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39fbcfb277c45a6f1eeac31c171395173def4bdb/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep.rs?ref=39fbcfb277c45a6f1eeac31c171395173def4bdb", "patch": "@@ -1,13 +0,0 @@\n-// Test behavior of `?` macro _kleene op_ under the 2015 edition. Namely, it doesn't exist.\n-\n-// edition:2015\n-\n-macro_rules! bar {\n-    ($(a)?) => {} //~ERROR expected `*` or `+`\n-}\n-\n-macro_rules! baz {\n-    ($(a),?) => {} //~ERROR expected `*` or `+`\n-}\n-\n-fn main() {}"}, {"sha": "e78f2833078cc740d74d6ee8c908a810af6de2c6", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015-ques-rep.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/39fbcfb277c45a6f1eeac31c171395173def4bdb/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39fbcfb277c45a6f1eeac31c171395173def4bdb/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep.stderr?ref=39fbcfb277c45a6f1eeac31c171395173def4bdb", "patch": "@@ -1,18 +0,0 @@\n-error: expected `*` or `+`\n-  --> $DIR/macro-at-most-once-rep-2015-ques-rep.rs:6:10\n-   |\n-LL |     ($(a)?) => {}\n-   |          ^\n-   |\n-   = note: `?` is not a macro repetition operator in the 2015 edition, but is accepted in the 2018 edition\n-\n-error: expected `*` or `+`\n-  --> $DIR/macro-at-most-once-rep-2015-ques-rep.rs:10:11\n-   |\n-LL |     ($(a),?) => {}\n-   |           ^\n-   |\n-   = note: `?` is not a macro repetition operator in the 2015 edition, but is accepted in the 2018 edition\n-\n-error: aborting due to 2 previous errors\n-"}, {"sha": "c8c920ff3f87aaa005eedffe2e59c5ee0123355a", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015-ques-sep.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/39fbcfb277c45a6f1eeac31c171395173def4bdb/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-sep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39fbcfb277c45a6f1eeac31c171395173def4bdb/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-sep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-sep.rs?ref=39fbcfb277c45a6f1eeac31c171395173def4bdb", "patch": "@@ -1,28 +0,0 @@\n-// Test behavior of `?` macro _separator_ under the 2015 edition. Namely, `?` can be used as a\n-// separator, but you get a migration warning for the edition.\n-\n-// edition:2015\n-// compile-pass\n-\n-#![warn(rust_2018_compatibility)]\n-\n-macro_rules! bar {\n-    ($(a)?*) => {} //~WARN using `?` as a separator\n-    //~^WARN this was previously accepted\n-}\n-\n-macro_rules! baz {\n-    ($(a)?+) => {} //~WARN using `?` as a separator\n-    //~^WARN this was previously accepted\n-}\n-\n-fn main() {\n-    bar!();\n-    bar!(a);\n-    bar!(a?a);\n-    bar!(a?a?a?a?a);\n-\n-    baz!(a);\n-    baz!(a?a);\n-    baz!(a?a?a?a?a);\n-}"}, {"sha": "bf1861ae54052691e92b4aa747c791b10c42d032", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015-ques-sep.stderr", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/39fbcfb277c45a6f1eeac31c171395173def4bdb/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-sep.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39fbcfb277c45a6f1eeac31c171395173def4bdb/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-sep.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-sep.stderr?ref=39fbcfb277c45a6f1eeac31c171395173def4bdb", "patch": "@@ -1,24 +0,0 @@\n-warning: using `?` as a separator is deprecated and will be a hard error in an upcoming edition\n-  --> $DIR/macro-at-most-once-rep-2015-ques-sep.rs:10:10\n-   |\n-LL |     ($(a)?*) => {}\n-   |          ^\n-   |\n-note: lint level defined here\n-  --> $DIR/macro-at-most-once-rep-2015-ques-sep.rs:7:9\n-   |\n-LL | #![warn(rust_2018_compatibility)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: #[warn(question_mark_macro_sep)] implied by #[warn(rust_2018_compatibility)]\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n-   = note: for more information, see issue #48075 <https://github.com/rust-lang/rust/issues/48075>\n-\n-warning: using `?` as a separator is deprecated and will be a hard error in an upcoming edition\n-  --> $DIR/macro-at-most-once-rep-2015-ques-sep.rs:15:10\n-   |\n-LL |     ($(a)?+) => {}\n-   |          ^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n-   = note: for more information, see issue #48075 <https://github.com/rust-lang/rust/issues/48075>\n-"}, {"sha": "e6def0f58c5cd6a5aba06a3bdbf1ab0d24973c1c", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015.rs?ref=1e793c71b5bd413b66d7f240f175493876847b8d", "patch": "@@ -0,0 +1,41 @@\n+// Tests that `?` is a Kleene op and not a macro separator in the 2015 edition.\n+\n+// edition:2015\n+\n+macro_rules! foo {\n+    ($(a)?) => {};\n+}\n+\n+macro_rules! baz {\n+    ($(a),?) => {}; //~ERROR the `?` macro repetition operator\n+}\n+\n+macro_rules! barplus {\n+    ($(a)?+) => {}; // ok. matches \"a+\" and \"+\"\n+}\n+\n+macro_rules! barstar {\n+    ($(a)?*) => {}; // ok. matches \"a*\" and \"*\"\n+}\n+\n+pub fn main() {\n+    foo!();\n+    foo!(a);\n+    foo!(a?); //~ ERROR no rules expected the token `?`\n+    foo!(a?a); //~ ERROR no rules expected the token `?`\n+    foo!(a?a?a); //~ ERROR no rules expected the token `?`\n+\n+    barplus!(); //~ERROR unexpected end of macro invocation\n+    barplus!(a); //~ERROR unexpected end of macro invocation\n+    barplus!(a?); //~ ERROR no rules expected the token `?`\n+    barplus!(a?a); //~ ERROR no rules expected the token `?`\n+    barplus!(a+);\n+    barplus!(+);\n+\n+    barstar!(); //~ERROR unexpected end of macro invocation\n+    barstar!(a); //~ERROR unexpected end of macro invocation\n+    barstar!(a?); //~ ERROR no rules expected the token `?`\n+    barstar!(a?a); //~ ERROR no rules expected the token `?`\n+    barstar!(a*);\n+    barstar!(*);\n+}"}, {"sha": "81de4f145c8c0ec0849a24460b7cc52db3c798ec", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015.stderr", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015.stderr?ref=1e793c71b5bd413b66d7f240f175493876847b8d", "patch": "@@ -0,0 +1,107 @@\n+error: the `?` macro repetition operator does not take a separator\n+  --> $DIR/macro-at-most-once-rep-2015.rs:10:10\n+   |\n+LL |     ($(a),?) => {};\n+   |          ^\n+\n+error: no rules expected the token `?`\n+  --> $DIR/macro-at-most-once-rep-2015.rs:24:11\n+   |\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n+...\n+LL |     foo!(a?);\n+   |           ^ no rules expected this token in macro call\n+\n+error: no rules expected the token `?`\n+  --> $DIR/macro-at-most-once-rep-2015.rs:25:11\n+   |\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n+...\n+LL |     foo!(a?a);\n+   |           ^ no rules expected this token in macro call\n+\n+error: no rules expected the token `?`\n+  --> $DIR/macro-at-most-once-rep-2015.rs:26:11\n+   |\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n+...\n+LL |     foo!(a?a?a);\n+   |           ^ no rules expected this token in macro call\n+\n+error: unexpected end of macro invocation\n+  --> $DIR/macro-at-most-once-rep-2015.rs:28:5\n+   |\n+LL | macro_rules! barplus {\n+   | -------------------- when calling this macro\n+...\n+LL |     barplus!();\n+   |     ^^^^^^^^^^^ missing tokens in macro arguments\n+\n+error: unexpected end of macro invocation\n+  --> $DIR/macro-at-most-once-rep-2015.rs:29:15\n+   |\n+LL | macro_rules! barplus {\n+   | -------------------- when calling this macro\n+...\n+LL |     barplus!(a);\n+   |               ^ missing tokens in macro arguments\n+\n+error: no rules expected the token `?`\n+  --> $DIR/macro-at-most-once-rep-2015.rs:30:15\n+   |\n+LL | macro_rules! barplus {\n+   | -------------------- when calling this macro\n+...\n+LL |     barplus!(a?);\n+   |               ^ no rules expected this token in macro call\n+\n+error: no rules expected the token `?`\n+  --> $DIR/macro-at-most-once-rep-2015.rs:31:15\n+   |\n+LL | macro_rules! barplus {\n+   | -------------------- when calling this macro\n+...\n+LL |     barplus!(a?a);\n+   |               ^ no rules expected this token in macro call\n+\n+error: unexpected end of macro invocation\n+  --> $DIR/macro-at-most-once-rep-2015.rs:35:5\n+   |\n+LL | macro_rules! barstar {\n+   | -------------------- when calling this macro\n+...\n+LL |     barstar!();\n+   |     ^^^^^^^^^^^ missing tokens in macro arguments\n+\n+error: unexpected end of macro invocation\n+  --> $DIR/macro-at-most-once-rep-2015.rs:36:15\n+   |\n+LL | macro_rules! barstar {\n+   | -------------------- when calling this macro\n+...\n+LL |     barstar!(a);\n+   |               ^ missing tokens in macro arguments\n+\n+error: no rules expected the token `?`\n+  --> $DIR/macro-at-most-once-rep-2015.rs:37:15\n+   |\n+LL | macro_rules! barstar {\n+   | -------------------- when calling this macro\n+...\n+LL |     barstar!(a?);\n+   |               ^ no rules expected this token in macro call\n+\n+error: no rules expected the token `?`\n+  --> $DIR/macro-at-most-once-rep-2015.rs:38:15\n+   |\n+LL | macro_rules! barstar {\n+   | -------------------- when calling this macro\n+...\n+LL |     barstar!(a?a);\n+   |               ^ no rules expected this token in macro call\n+\n+error: aborting due to 12 previous errors\n+"}, {"sha": "9ed53519ceb3156a82eb00d9ddb3454e4f7688e2", "filename": "src/test/ui/parser/macro/issue-33569.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-33569.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-33569.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-33569.rs?ref=1e793c71b5bd413b66d7f240f175493876847b8d", "patch": "@@ -1,7 +1,7 @@\n macro_rules! foo {\n     { $+ } => { //~ ERROR expected identifier, found `+`\n                 //~^ ERROR missing fragment specifier\n-        $(x)(y) //~ ERROR expected `*` or `+`\n+        $(x)(y) //~ ERROR expected one of: `*`, `+`, or `?`\n     }\n }\n "}, {"sha": "b4d38d3ce4806ca8c5a6d9bf50241a3c01bdb684", "filename": "src/test/ui/parser/macro/issue-33569.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-33569.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e793c71b5bd413b66d7f240f175493876847b8d/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-33569.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-33569.stderr?ref=1e793c71b5bd413b66d7f240f175493876847b8d", "patch": "@@ -4,7 +4,7 @@ error: expected identifier, found `+`\n LL |     { $+ } => {\n    |        ^\n \n-error: expected `*` or `+`\n+error: expected one of: `*`, `+`, or `?`\n   --> $DIR/issue-33569.rs:4:13\n    |\n LL |         $(x)(y)"}]}