{"sha": "cc181040348966789413387d4f99fc81673f60c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMTgxMDQwMzQ4OTY2Nzg5NDEzMzg3ZDRmOTlmYzgxNjczZjYwYzc=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-06-05T22:50:18Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-06-05T22:50:18Z"}, "message": "rustdoc: Remove Derived Implementations title\n\nAs far as I know whether a trait was derived or not does not change the\npublic API so there is no need to include this information in the docs.\n\nThis title currently just adds an extra divide in the list of trait\nimplementations which I don't think needs to be there.", "tree": {"sha": "42c85180f5b936848992b23fd58d0c87bf0c00f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42c85180f5b936848992b23fd58d0c87bf0c00f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc181040348966789413387d4f99fc81673f60c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc181040348966789413387d4f99fc81673f60c7", "html_url": "https://github.com/rust-lang/rust/commit/cc181040348966789413387d4f99fc81673f60c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc181040348966789413387d4f99fc81673f60c7/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c975eafa934e291e4f94b7252faae767de17313", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c975eafa934e291e4f94b7252faae767de17313", "html_url": "https://github.com/rust-lang/rust/commit/1c975eafa934e291e4f94b7252faae767de17313"}], "stats": {"total": 24, "additions": 1, "deletions": 23}, "files": [{"sha": "fbd9ba9d3021075c6d8e865f90708ea6a63edf06", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc181040348966789413387d4f99fc81673f60c7/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc181040348966789413387d4f99fc81673f60c7/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=cc181040348966789413387d4f99fc81673f60c7", "patch": "@@ -425,7 +425,6 @@ pub fn build_impl<'a, 'tcx>(cx: &DocContext,\n     ret.push(clean::Item {\n         inner: clean::ImplItem(clean::Impl {\n             unsafety: hir::Unsafety::Normal, // FIXME: this should be decoded\n-            derived: clean::detect_derived(&attrs),\n             provided_trait_methods: provided,\n             trait_: trait_,\n             for_: for_,"}, {"sha": "1a08fc6bde412a002cfbdcd2627475d3eeacbf62", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc181040348966789413387d4f99fc81673f60c7/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc181040348966789413387d4f99fc81673f60c7/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=cc181040348966789413387d4f99fc81673f60c7", "patch": "@@ -2239,14 +2239,9 @@ pub struct Impl {\n     pub trait_: Option<Type>,\n     pub for_: Type,\n     pub items: Vec<Item>,\n-    pub derived: bool,\n     pub polarity: Option<ImplPolarity>,\n }\n \n-fn detect_derived<M: AttrMetaMethods>(attrs: &[M]) -> bool {\n-    attr::contains_name(attrs, \"automatically_derived\")\n-}\n-\n impl Clean<Vec<Item>> for doctree::Impl {\n     fn clean(&self, cx: &DocContext) -> Vec<Item> {\n         let mut ret = Vec::new();\n@@ -2283,7 +2278,6 @@ impl Clean<Vec<Item>> for doctree::Impl {\n                 trait_: trait_,\n                 for_: self.for_.clean(cx),\n                 items: items,\n-                derived: detect_derived(&self.attrs),\n                 polarity: Some(self.polarity.clean(cx)),\n             }),\n         });"}, {"sha": "1fa40a0cead28c48b3ab16627e92f4efbd0a8a34", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/cc181040348966789413387d4f99fc81673f60c7/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc181040348966789413387d4f99fc81673f60c7/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=cc181040348966789413387d4f99fc81673f60c7", "patch": "@@ -399,7 +399,6 @@ fn init_ids() -> HashMap<String, usize> {\n      \"methods\",\n      \"deref-methods\",\n      \"implementations\",\n-     \"derived_implementations\"\n      ].into_iter().map(|id| (String::from(*id), 1)).collect()\n }\n \n@@ -2501,25 +2500,11 @@ fn render_assoc_items(w: &mut fmt::Formatter,\n         }\n         write!(w, \"<h2 id='implementations'>Trait \\\n                    Implementations</h2>\")?;\n-        let (derived, manual): (Vec<_>, Vec<&Impl>) = traits.iter().partition(|i| {\n-            i.inner_impl().derived\n-        });\n-        for i in &manual {\n+        for i in &traits {\n             let did = i.trait_did().unwrap();\n             let assoc_link = AssocItemLink::GotoSource(did, &i.inner_impl().provided_trait_methods);\n             render_impl(w, cx, i, assoc_link, true, containing_item.stable_since())?;\n         }\n-        if !derived.is_empty() {\n-            write!(w, \"<h3 id='derived_implementations'>\\\n-                           Derived Implementations \\\n-                       </h3>\")?;\n-            for i in &derived {\n-                let did = i.trait_did().unwrap();\n-                let assoc_link = AssocItemLink::GotoSource(did,\n-                                                           &i.inner_impl().provided_trait_methods);\n-                render_impl(w, cx, i, assoc_link, true, containing_item.stable_since())?;\n-            }\n-        }\n     }\n     Ok(())\n }"}]}