{"sha": "f3a71d3e8be80af5e8112bd9ae40f3384ea1c759", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYTcxZDNlOGJlODBhZjVlODExMmJkOWFlNDBmMzM4NGVhMWM3NTk=", "commit": {"author": {"name": "Robin Stocker", "email": "robin@nibor.org", "date": "2016-11-14T01:57:19Z"}, "committer": {"name": "Robin Stocker", "email": "robin@nibor.org", "date": "2016-11-14T01:57:19Z"}, "message": "Add semicolon to \"perhaps add a `use` for one of them\" help\n\nSimilar to pull request #37430, this makes the message more copy-paste\nfriendly and aligns it with other messages like:\n\n    help: you can import it into scope: use foo::Bar;", "tree": {"sha": "d456abd9dfc32e5776a9a92ea4e9e41917493976", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d456abd9dfc32e5776a9a92ea4e9e41917493976"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3a71d3e8be80af5e8112bd9ae40f3384ea1c759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3a71d3e8be80af5e8112bd9ae40f3384ea1c759", "html_url": "https://github.com/rust-lang/rust/commit/f3a71d3e8be80af5e8112bd9ae40f3384ea1c759", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3a71d3e8be80af5e8112bd9ae40f3384ea1c759/comments", "author": {"login": "robinst", "id": 16778, "node_id": "MDQ6VXNlcjE2Nzc4", "avatar_url": "https://avatars.githubusercontent.com/u/16778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinst", "html_url": "https://github.com/robinst", "followers_url": "https://api.github.com/users/robinst/followers", "following_url": "https://api.github.com/users/robinst/following{/other_user}", "gists_url": "https://api.github.com/users/robinst/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinst/subscriptions", "organizations_url": "https://api.github.com/users/robinst/orgs", "repos_url": "https://api.github.com/users/robinst/repos", "events_url": "https://api.github.com/users/robinst/events{/privacy}", "received_events_url": "https://api.github.com/users/robinst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "robinst", "id": 16778, "node_id": "MDQ6VXNlcjE2Nzc4", "avatar_url": "https://avatars.githubusercontent.com/u/16778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinst", "html_url": "https://github.com/robinst", "followers_url": "https://api.github.com/users/robinst/followers", "following_url": "https://api.github.com/users/robinst/following{/other_user}", "gists_url": "https://api.github.com/users/robinst/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinst/subscriptions", "organizations_url": "https://api.github.com/users/robinst/orgs", "repos_url": "https://api.github.com/users/robinst/repos", "events_url": "https://api.github.com/users/robinst/events{/privacy}", "received_events_url": "https://api.github.com/users/robinst/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3316ef7f3685973c930562d813f940a0b6ff30d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3316ef7f3685973c930562d813f940a0b6ff30d8", "html_url": "https://github.com/rust-lang/rust/commit/3316ef7f3685973c930562d813f940a0b6ff30d8"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "d15795730a86c1567dffae3bb30bc478ccbbf8b9", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3a71d3e8be80af5e8112bd9ae40f3384ea1c759/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3a71d3e8be80af5e8112bd9ae40f3384ea1c759/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=f3a71d3e8be80af5e8112bd9ae40f3384ea1c759", "patch": "@@ -308,7 +308,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n \n             let limit = if candidates.len() == 5 { 5 } else { 4 };\n             for (i, trait_did) in candidates.iter().take(limit).enumerate() {\n-                err.help(&format!(\"candidate #{}: `use {}`\",\n+                err.help(&format!(\"candidate #{}: `use {};`\",\n                                   i + 1,\n                                   self.tcx.item_path_str(*trait_did)));\n             }"}, {"sha": "ea8796d38f93c36c542d89b23114924c6bc31b0c", "filename": "src/test/compile-fail/no-method-suggested-traits.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f3a71d3e8be80af5e8112bd9ae40f3384ea1c759/src%2Ftest%2Fcompile-fail%2Fno-method-suggested-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3a71d3e8be80af5e8112bd9ae40f3384ea1c759/src%2Ftest%2Fcompile-fail%2Fno-method-suggested-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-method-suggested-traits.rs?ref=f3a71d3e8be80af5e8112bd9ae40f3384ea1c759", "patch": "@@ -34,31 +34,31 @@ fn main() {\n     1u32.method();\n     //~^ HELP following traits are implemented but not in scope, perhaps add a `use` for one of them\n     //~^^ ERROR no method named\n-    //~^^^ HELP `use foo::Bar`\n-    //~^^^^ HELP `use no_method_suggested_traits::foo::PubPub`\n+    //~^^^ HELP `use foo::Bar;`\n+    //~^^^^ HELP `use no_method_suggested_traits::foo::PubPub;`\n     std::rc::Rc::new(&mut Box::new(&1u32)).method();\n     //~^ HELP following traits are implemented but not in scope, perhaps add a `use` for one of them\n     //~^^ ERROR no method named\n-    //~^^^ HELP `use foo::Bar`\n-    //~^^^^ HELP `use no_method_suggested_traits::foo::PubPub`\n+    //~^^^ HELP `use foo::Bar;`\n+    //~^^^^ HELP `use no_method_suggested_traits::foo::PubPub;`\n \n     'a'.method();\n     //~^ ERROR no method named\n     //~^^ HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n-    //~^^^ HELP `use foo::Bar`\n+    //~^^^ HELP `use foo::Bar;`\n     std::rc::Rc::new(&mut Box::new(&'a')).method();\n     //~^ ERROR no method named\n     //~^^ HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n-    //~^^^ HELP `use foo::Bar`\n+    //~^^^ HELP `use foo::Bar;`\n \n     1i32.method();\n     //~^ ERROR no method named\n     //~^^ HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n-    //~^^^ HELP `use no_method_suggested_traits::foo::PubPub`\n+    //~^^^ HELP `use no_method_suggested_traits::foo::PubPub;`\n     std::rc::Rc::new(&mut Box::new(&1i32)).method();\n     //~^ ERROR no method named\n     //~^^ HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n-    //~^^^ HELP `use no_method_suggested_traits::foo::PubPub`\n+    //~^^^ HELP `use no_method_suggested_traits::foo::PubPub;`\n \n     Foo.method();\n     //~^ ERROR no method named"}]}