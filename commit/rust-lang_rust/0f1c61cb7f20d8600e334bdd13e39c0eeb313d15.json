{"sha": "0f1c61cb7f20d8600e334bdd13e39c0eeb313d15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMWM2MWNiN2YyMGQ4NjAwZTMzNGJkZDEzZTM5YzBlZWIzMTNkMTU=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2018-06-22T20:31:25Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2018-07-04T21:36:07Z"}, "message": "Improve correctness of `Frame` and `Memory` equality\n\nIncorporate a subset of the suggestions from @oli-obk. More to come.", "tree": {"sha": "70b429fe88196f87773af80f60f3ebe8993a8912", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70b429fe88196f87773af80f60f3ebe8993a8912"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f1c61cb7f20d8600e334bdd13e39c0eeb313d15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1c61cb7f20d8600e334bdd13e39c0eeb313d15", "html_url": "https://github.com/rust-lang/rust/commit/0f1c61cb7f20d8600e334bdd13e39c0eeb313d15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f1c61cb7f20d8600e334bdd13e39c0eeb313d15/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "788c5f3c8b1453d5c7815bc345b8b7e7f79ebf80", "url": "https://api.github.com/repos/rust-lang/rust/commits/788c5f3c8b1453d5c7815bc345b8b7e7f79ebf80", "html_url": "https://github.com/rust-lang/rust/commit/788c5f3c8b1453d5c7815bc345b8b7e7f79ebf80"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "e3024e069d9114733bbf45fe9b1951a631e65f21", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0f1c61cb7f20d8600e334bdd13e39c0eeb313d15/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1c61cb7f20d8600e334bdd13e39c0eeb313d15/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=0f1c61cb7f20d8600e334bdd13e39c0eeb313d15", "patch": "@@ -1,6 +1,6 @@\n use std::fmt::Write;\n use std::hash::{Hash, Hasher};\n-use std::{mem, ptr};\n+use std::mem;\n \n use rustc::hir::def_id::DefId;\n use rustc::hir::def::Def;\n@@ -98,8 +98,8 @@ impl<'mir, 'tcx: 'mir> Eq for Frame<'mir, 'tcx> {}\n impl<'mir, 'tcx: 'mir> PartialEq for Frame<'mir, 'tcx> {\n     fn eq(&self, other: &Self) -> bool {\n         let Frame {\n-            mir,\n-            instance: _,\n+            mir: _,\n+            instance,\n             span: _,\n             return_to_block,\n             return_place,\n@@ -108,8 +108,10 @@ impl<'mir, 'tcx: 'mir> PartialEq for Frame<'mir, 'tcx> {\n             stmt,\n         } = self;\n \n-        ptr::eq(mir, &other.mir)\n-            && *return_to_block == other.return_to_block // TODO: Are these two necessary?\n+        // Some of these are constant during evaluation, but are included\n+        // anyways for correctness.\n+        *instance == other.instance\n+            && *return_to_block == other.return_to_block\n             && *return_place == other.return_place\n             && *locals == other.locals\n             && *block == other.block\n@@ -120,8 +122,8 @@ impl<'mir, 'tcx: 'mir> PartialEq for Frame<'mir, 'tcx> {\n impl<'mir, 'tcx: 'mir> Hash for Frame<'mir, 'tcx> {\n     fn hash<H: Hasher>(&self, state: &mut H) {\n         let Frame {\n-            mir,\n-            instance: _,\n+            mir: _,\n+            instance,\n             span: _,\n             return_to_block,\n             return_place,\n@@ -130,7 +132,7 @@ impl<'mir, 'tcx: 'mir> Hash for Frame<'mir, 'tcx> {\n             stmt,\n         } = self;\n \n-        (mir as *const _ as usize).hash(state);\n+        instance.hash(state);\n         return_to_block.hash(state);\n         return_place.hash(state);\n         locals.hash(state);"}, {"sha": "ac4d1c74b8cc1296d8e15eab450cc600ebabfa08", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f1c61cb7f20d8600e334bdd13e39c0eeb313d15/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1c61cb7f20d8600e334bdd13e39c0eeb313d15/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=0f1c61cb7f20d8600e334bdd13e39c0eeb313d15", "patch": "@@ -64,14 +64,13 @@ impl<'a, 'mir, 'tcx, M> PartialEq for Memory<'a, 'mir, 'tcx, M>\n             alloc_kind,\n             alloc_map,\n             cur_frame,\n-            tcx,\n+            tcx: _,\n         } = self;\n \n         *data == other.data\n             && *alloc_kind == other.alloc_kind\n             && *alloc_map == other.alloc_map\n             && *cur_frame == other.cur_frame\n-            && ptr::eq(tcx, &other.tcx)\n     }\n }\n \n@@ -85,12 +84,11 @@ impl<'a, 'mir, 'tcx, M> Hash for Memory<'a, 'mir, 'tcx, M>\n             alloc_kind: _,\n             alloc_map: _,\n             cur_frame,\n-            tcx,\n+            tcx: _,\n         } = self;\n \n         data.hash(state);\n         cur_frame.hash(state);\n-        (tcx as *const _ as usize).hash(state);\n \n         // We ignore some fields which don't change between evaluation steps.\n "}]}