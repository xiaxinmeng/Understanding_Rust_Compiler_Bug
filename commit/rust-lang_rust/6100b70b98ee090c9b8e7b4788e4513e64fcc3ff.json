{"sha": "6100b70b98ee090c9b8e7b4788e4513e64fcc3ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMDBiNzBiOThlZTA5MGM5YjhlN2I0Nzg4ZTQ1MTNlNjRmY2MzZmY=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2016-05-09T14:48:02Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2016-05-09T14:50:47Z"}, "message": "rustdoc: do not strip blanket impls in crate of origin\n\nIn `impl<T> Trait for T`, the blanket type parameters `T` were\nrecognized as \"local\" and \"not exported\", so these impls were\nthrown out.\n\nNow we check if they are generic, and keep them in that case.\n\nFixes: #29503", "tree": {"sha": "7bacc5126f84300141ffdaa8022ef8467649af51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bacc5126f84300141ffdaa8022ef8467649af51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff", "html_url": "https://github.com/rust-lang/rust/commit/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50909f2d5036e59871f779500dd722a62421c13c", "url": "https://api.github.com/repos/rust-lang/rust/commits/50909f2d5036e59871f779500dd722a62421c13c", "html_url": "https://github.com/rust-lang/rust/commit/50909f2d5036e59871f779500dd722a62421c13c"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "a47b66bf2f72ebf21d09b1007885c5d96be21ecb", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=6100b70b98ee090c9b8e7b4788e4513e64fcc3ff", "patch": "@@ -1540,6 +1540,13 @@ impl Type {\n             _ => None,\n         }\n     }\n+\n+    pub fn is_generic(&self) -> bool {\n+        match *self {\n+            ResolvedPath { is_generic, .. } => is_generic,\n+            _ => false,\n+        }\n+    }\n }\n \n impl GetDefId for Type {"}, {"sha": "1980d1f9cc45fc54ab9ccffde89ed3938a580e7f", "filename": "src/librustdoc/passes.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff/src%2Flibrustdoc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff/src%2Flibrustdoc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses.rs?ref=6100b70b98ee090c9b8e7b4788e4513e64fcc3ff", "patch": "@@ -115,9 +115,9 @@ impl<'a> fold::DocFolder for Stripper<'a> {\n \n             // trait impls for private items should be stripped\n             clean::ImplItem(clean::Impl{\n-                for_: clean::ResolvedPath{ did, .. }, ..\n+                for_: clean::ResolvedPath{ did, is_generic, .. }, ..\n             }) => {\n-                if did.is_local() && !self.access_levels.is_exported(did) {\n+                if did.is_local() && !is_generic && !self.access_levels.is_exported(did) {\n                     return None;\n                 }\n             }\n@@ -183,7 +183,9 @@ impl<'a> fold::DocFolder for ImplStripper<'a> {\n     fn fold_item(&mut self, i: Item) -> Option<Item> {\n         if let clean::ImplItem(ref imp) = i.inner {\n             if let Some(did) = imp.for_.def_id() {\n-                if did.is_local() && !self.retained.contains(&did) {\n+                if did.is_local() && !imp.for_.is_generic() &&\n+                    !self.retained.contains(&did)\n+                {\n                     return None;\n                 }\n             }"}, {"sha": "d8b484f6b501bd705f4c2e3044b6b132e8a1065c", "filename": "src/test/rustdoc/issue-29503.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-29503.rs?ref=6100b70b98ee090c9b8e7b4788e4513e64fcc3ff", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::fmt;\n+\n+// @has issue_29503/trait.MyTrait.html\n+pub trait MyTrait {\n+    fn my_string(&self) -> String;\n+}\n+\n+// @has - \"//ul[@id='implementors-list']/li\" \"impl<T> MyTrait for T where T: Debug\"\n+impl<T> MyTrait for T where T: fmt::Debug {\n+    fn my_string(&self) -> String {\n+        format!(\"{:?}\", self)\n+    }\n+}\n+\n+pub fn main() {\n+}"}]}