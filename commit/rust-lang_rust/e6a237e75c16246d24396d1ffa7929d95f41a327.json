{"sha": "e6a237e75c16246d24396d1ffa7929d95f41a327", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2YTIzN2U3NWMxNjI0NmQyNDM5NmQxZmZhNzkyOWQ5NWY0MWEzMjc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-21T12:57:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-21T12:57:30Z"}, "message": "Merge #9660\n\n9660: hide keyword suggestions in non trivial paths r=Veykril a=Freax13\n\nThis pr hides keyword suggestions in non trivial paths:\r\n![now](https://user-images.githubusercontent.com/14952658/126479635-819127d8-322b-4e34-acd2-194d1e9ba504.png)\r\n\r\nPreviously rust analyzer suggested a lot of keywords even when completing non trivial paths:\r\n![prev](https://user-images.githubusercontent.com/14952658/126478222-54c742bb-2bd3-4e5b-b533-f835264604be.png)\r\n\r\nThis had 2 problems:\r\n1. Suggesting a keyword in this position doesn't make sense.\r\n2. There are a lot of keywords, so they make it a lot harder to find the things you're actually looking for (note the scrollbar and that `instructions`, `registers` and `structures` are not visible). \n\nCo-authored-by: Tom Dohrmann <erbse.13@gmx.de>", "tree": {"sha": "6edb4fe61d6ed78241817652eb25eb91458c25ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6edb4fe61d6ed78241817652eb25eb91458c25ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6a237e75c16246d24396d1ffa7929d95f41a327", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg+Bm6CRBK7hj4Ov3rIwAAbyoIAIkYLerZex5qWgGsAru02pYu\nrCEVkm/RUo5uDXKfM5a606J/LBD3O7fDp43F65ny7s2/jT3J/IsuZacTZVIDUuzd\n4VdrpfbfAu2i00V0lNJwSyP88f1gA/pe6Vuhh2GjKycAu+Qolew1r9eTfXAvf2P6\nuBXS2wCoHefBJROrq1hQScq+mSQ9IzCfoizHIbNxnq/YjQ3x7LO3cMlr46syq2rk\n0KJIOvNFt9M/KwRxmemidlByjbCHTSwMwtH/lsf7hZyRzaVWQ+PqRW1QzHUjHjhR\nuec9KL6/FuW1MNMku0enSkP4c4EktylCponSsNdzq4nYUVTUKWhr8QEqD7MzAMA=\n=K8nP\n-----END PGP SIGNATURE-----\n", "payload": "tree 6edb4fe61d6ed78241817652eb25eb91458c25ba\nparent 478d4356403f21dae8ff64e26e5d7d2f59a1ec41\nparent 7b20904e8b10a1e09cca684ac6677fc947261ec0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1626872250 +0000\ncommitter GitHub <noreply@github.com> 1626872250 +0000\n\nMerge #9660\n\n9660: hide keyword suggestions in non trivial paths r=Veykril a=Freax13\n\nThis pr hides keyword suggestions in non trivial paths:\r\n![now](https://user-images.githubusercontent.com/14952658/126479635-819127d8-322b-4e34-acd2-194d1e9ba504.png)\r\n\r\nPreviously rust analyzer suggested a lot of keywords even when completing non trivial paths:\r\n![prev](https://user-images.githubusercontent.com/14952658/126478222-54c742bb-2bd3-4e5b-b533-f835264604be.png)\r\n\r\nThis had 2 problems:\r\n1. Suggesting a keyword in this position doesn't make sense.\r\n2. There are a lot of keywords, so they make it a lot harder to find the things you're actually looking for (note the scrollbar and that `instructions`, `registers` and `structures` are not visible). \n\nCo-authored-by: Tom Dohrmann <erbse.13@gmx.de>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6a237e75c16246d24396d1ffa7929d95f41a327", "html_url": "https://github.com/rust-lang/rust/commit/e6a237e75c16246d24396d1ffa7929d95f41a327", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6a237e75c16246d24396d1ffa7929d95f41a327/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "478d4356403f21dae8ff64e26e5d7d2f59a1ec41", "url": "https://api.github.com/repos/rust-lang/rust/commits/478d4356403f21dae8ff64e26e5d7d2f59a1ec41", "html_url": "https://github.com/rust-lang/rust/commit/478d4356403f21dae8ff64e26e5d7d2f59a1ec41"}, {"sha": "7b20904e8b10a1e09cca684ac6677fc947261ec0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b20904e8b10a1e09cca684ac6677fc947261ec0", "html_url": "https://github.com/rust-lang/rust/commit/7b20904e8b10a1e09cca684ac6677fc947261ec0"}], "stats": {"total": 26, "additions": 10, "deletions": 16}, "files": [{"sha": "72a8a5ebe1ac18450bff1a78d22c953182f1947b", "filename": "crates/ide_completion/src/completions/keyword.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6a237e75c16246d24396d1ffa7929d95f41a327/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6a237e75c16246d24396d1ffa7929d95f41a327/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs?ref=e6a237e75c16246d24396d1ffa7929d95f41a327", "patch": "@@ -20,6 +20,10 @@ pub(crate) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionConte\n         cov_mark::hit!(no_keyword_completion_in_attr_of_expr);\n         return;\n     }\n+    if ctx.is_non_trivial_path() {\n+        cov_mark::hit!(no_keyword_completion_in_non_trivial_path);\n+        return;\n+    }\n \n     // Suggest .await syntax for types that implement Future trait\n     if let Some(receiver) = ctx.dot_receiver() {"}, {"sha": "061c082ab89bb5a44eb64a8828a97897ac10a0e8", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6a237e75c16246d24396d1ffa7929d95f41a327/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6a237e75c16246d24396d1ffa7929d95f41a327/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=e6a237e75c16246d24396d1ffa7929d95f41a327", "patch": "@@ -353,6 +353,10 @@ impl<'a> CompletionContext<'a> {\n         matches!(self.path_context, Some(PathCompletionContext { is_trivial_path: true, .. }))\n     }\n \n+    pub(crate) fn is_non_trivial_path(&self) -> bool {\n+        matches!(self.path_context, Some(PathCompletionContext { is_trivial_path: false, .. }))\n+    }\n+\n     pub(crate) fn path_qual(&self) -> Option<&ast::Path> {\n         self.path_context.as_ref().and_then(|it| it.qualifier.as_ref())\n     }"}, {"sha": "a170616f5542e980aa0f04d4d7597edd0db5d899", "filename": "crates/ide_completion/src/tests/item_list.rs", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e6a237e75c16246d24396d1ffa7929d95f41a327/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6a237e75c16246d24396d1ffa7929d95f41a327/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs?ref=e6a237e75c16246d24396d1ffa7929d95f41a327", "patch": "@@ -101,25 +101,11 @@ fn in_item_list_after_attr() {\n \n #[test]\n fn in_qualified_path() {\n+    cov_mark::check!(no_keyword_completion_in_non_trivial_path);\n     check(\n         r#\"crate::$0\"#,\n         expect![[r##\"\n-            kw pub(crate)\n-            kw pub\n-            kw unsafe\n-            kw fn\n-            kw const\n-            kw type\n-            kw impl\n-            kw extern\n-            kw use\n-            kw trait\n-            kw static\n-            kw mod\n-            kw enum\n-            kw struct\n-            kw union\n-            ma makro!(\u2026)  #[macro_export] macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n             md module\n         \"##]],\n     )"}]}