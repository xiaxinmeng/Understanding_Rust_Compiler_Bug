{"sha": "afb7a502f6e4e564d034ebf9601f4a4a13551f15", "node_id": "C_kwDOAAsO6NoAKGFmYjdhNTAyZjZlNGU1NjRkMDM0ZWJmOTYwMWY0YTRhMTM1NTFmMTU", "commit": {"author": {"name": "Inteon", "email": "42113979+inteon@users.noreply.github.com", "date": "2022-02-06T19:07:03Z"}, "committer": {"name": "Inteon", "email": "42113979+inteon@users.noreply.github.com", "date": "2022-02-06T19:07:03Z"}, "message": "rewrite from_bytes_with_nul to match code style in from_vec_with_nul\n\nSigned-off-by: Inteon <42113979+inteon@users.noreply.github.com>", "tree": {"sha": "9ac982421c63517a5aa0c1c5385e11b730e88111", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ac982421c63517a5aa0c1c5385e11b730e88111"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afb7a502f6e4e564d034ebf9601f4a4a13551f15", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEnJc5ovat8HYrdk+JvV3PcwPHwacFAmIAHFcACgkQvV3PcwPH\nwafOChAAqFSNH3pjTY8DLa76nUdxGTokroX3rcwmeSumeMuU/MjpzzIm3i9OY1sW\nN0MGKTrq3Ul8s1PZ+ksjvE2B4pFgs6grwpBTWAlJYMyw6QdogIfngPeh6ivvG8aI\ndL/X+Saywj7aaHKVWaOMb9YK7wvrHUms2Ao5VuZ2IzfQaR5jl5LmrrVKxeqi5Ma8\nx4PZWMsJADBoneLonjXohjm+TkrzhIScth8nYEx92Vhz4EMZNTVQ7kD72wkZD3ML\nuz/I2JhWI8vT5YB6OPoTeodq0aYQQ8sbhAm1/aVAWcKgdS22vooRQXTOwxTNn1Xd\neqwDmigE4ah37btrbX0FiRhHJ8qG3+xDVOP3XFzPOEhqyIPqhg6mrG9GgzsFN3e6\nYHjXXI2NvvIK507FW02QBIL20peEsuIk2sxLg/YTX+jCFqoeb1+WfhTCw2wf0Pvn\ntXeW7MpOH6C35GBRaBYuwzgSsrIdipX7t0dA9wQHv5QYMYIoyaRm1RybVtNzj9kz\ngT4vnBrSHGmM2KYdx9KwxriNYbZvO0pr2HVHp0ilyThseqQbL5ftBvkEZ8mjg4Ra\nT6Quw80WFxjCK+eDBevglhIgNdMGwJuZccw95plIytCBBfHn06/vb9k2gluDm8PQ\nrL0pM0bKkiJwsuvaRzILtln7lb62/Vd/etG2kiKnhrbBc5QdTWo=\n=TiAu\n-----END PGP SIGNATURE-----", "payload": "tree 9ac982421c63517a5aa0c1c5385e11b730e88111\nparent f624427f8771c00819684c783bb841bf72095704\nauthor Inteon <42113979+inteon@users.noreply.github.com> 1644174423 +0100\ncommitter Inteon <42113979+inteon@users.noreply.github.com> 1644174423 +0100\n\nrewrite from_bytes_with_nul to match code style in from_vec_with_nul\n\nSigned-off-by: Inteon <42113979+inteon@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afb7a502f6e4e564d034ebf9601f4a4a13551f15", "html_url": "https://github.com/rust-lang/rust/commit/afb7a502f6e4e564d034ebf9601f4a4a13551f15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afb7a502f6e4e564d034ebf9601f4a4a13551f15/comments", "author": {"login": "inteon", "id": 42113979, "node_id": "MDQ6VXNlcjQyMTEzOTc5", "avatar_url": "https://avatars.githubusercontent.com/u/42113979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inteon", "html_url": "https://github.com/inteon", "followers_url": "https://api.github.com/users/inteon/followers", "following_url": "https://api.github.com/users/inteon/following{/other_user}", "gists_url": "https://api.github.com/users/inteon/gists{/gist_id}", "starred_url": "https://api.github.com/users/inteon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inteon/subscriptions", "organizations_url": "https://api.github.com/users/inteon/orgs", "repos_url": "https://api.github.com/users/inteon/repos", "events_url": "https://api.github.com/users/inteon/events{/privacy}", "received_events_url": "https://api.github.com/users/inteon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "inteon", "id": 42113979, "node_id": "MDQ6VXNlcjQyMTEzOTc5", "avatar_url": "https://avatars.githubusercontent.com/u/42113979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inteon", "html_url": "https://github.com/inteon", "followers_url": "https://api.github.com/users/inteon/followers", "following_url": "https://api.github.com/users/inteon/following{/other_user}", "gists_url": "https://api.github.com/users/inteon/gists{/gist_id}", "starred_url": "https://api.github.com/users/inteon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inteon/subscriptions", "organizations_url": "https://api.github.com/users/inteon/orgs", "repos_url": "https://api.github.com/users/inteon/repos", "events_url": "https://api.github.com/users/inteon/events{/privacy}", "received_events_url": "https://api.github.com/users/inteon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f624427f8771c00819684c783bb841bf72095704", "url": "https://api.github.com/repos/rust-lang/rust/commits/f624427f8771c00819684c783bb841bf72095704", "html_url": "https://github.com/rust-lang/rust/commit/f624427f8771c00819684c783bb841bf72095704"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "e10c6a5daf13e4216447c8a44ad1bcc75b465708", "filename": "library/std/src/ffi/c_str.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/afb7a502f6e4e564d034ebf9601f4a4a13551f15/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afb7a502f6e4e564d034ebf9601f4a4a13551f15/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs?ref=afb7a502f6e4e564d034ebf9601f4a4a13551f15", "patch": "@@ -1252,15 +1252,16 @@ impl CStr {\n     /// assert!(cstr.is_err());\n     /// ```\n     #[stable(feature = \"cstr_from_bytes\", since = \"1.10.0\")]\n-    pub fn from_bytes_with_nul(bytes: &[u8]) -> Result<&CStr, FromBytesWithNulError> {\n+    pub fn from_bytes_with_nul(bytes: &[u8]) -> Result<&Self, FromBytesWithNulError> {\n         let nul_pos = memchr::memchr(0, bytes);\n-        if let Some(nul_pos) = nul_pos {\n-            if nul_pos + 1 != bytes.len() {\n-                return Err(FromBytesWithNulError::interior_nul(nul_pos));\n+        match nul_pos {\n+            Some(nul_pos) if nul_pos + 1 == bytes.len() => {\n+                // SAFETY: We know there is only one nul byte, at the end\n+                // of the byte slice.\n+                Ok(unsafe { Self::from_bytes_with_nul_unchecked(bytes) })\n             }\n-            Ok(unsafe { CStr::from_bytes_with_nul_unchecked(bytes) })\n-        } else {\n-            Err(FromBytesWithNulError::not_nul_terminated())\n+            Some(nul_pos) => Err(FromBytesWithNulError::interior_nul(nul_pos)),\n+            None => Err(FromBytesWithNulError::not_nul_terminated()),\n         }\n     }\n "}]}