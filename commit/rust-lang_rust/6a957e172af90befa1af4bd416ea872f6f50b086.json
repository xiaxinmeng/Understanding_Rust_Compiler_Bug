{"sha": "6a957e172af90befa1af4bd416ea872f6f50b086", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhOTU3ZTE3MmFmOTBiZWZhMWFmNGJkNDE2ZWE4NzJmNmY1MGIwODY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-21T20:04:19Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-21T20:04:19Z"}, "message": "Add a test case for u128::MAX - 1", "tree": {"sha": "a43f6a7b549e8ee4416791ea835299396317666c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a43f6a7b549e8ee4416791ea835299396317666c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a957e172af90befa1af4bd416ea872f6f50b086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a957e172af90befa1af4bd416ea872f6f50b086", "html_url": "https://github.com/rust-lang/rust/commit/6a957e172af90befa1af4bd416ea872f6f50b086", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a957e172af90befa1af4bd416ea872f6f50b086/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61b6363cb1bb5ce895cd3927f80ec06a41c147de", "url": "https://api.github.com/repos/rust-lang/rust/commits/61b6363cb1bb5ce895cd3927f80ec06a41c147de", "html_url": "https://github.com/rust-lang/rust/commit/61b6363cb1bb5ce895cd3927f80ec06a41c147de"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "e928d4e5f03a6683fead8d5fe83d6fa0dfb83b15", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a957e172af90befa1af4bd416ea872f6f50b086/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a957e172af90befa1af4bd416ea872f6f50b086/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=6a957e172af90befa1af4bd416ea872f6f50b086", "patch": "@@ -1501,6 +1501,8 @@ fn split_grouped_constructors<'p, 'a: 'p, 'tcx: 'a>(\n                     if let Endpoint::Both = a.1 {\n                         split_ctors.push(IntRange::range_to_ctor(tcx, ty, a.0..=a.0));\n                     }\n+                    // Integer overflow cannot occur here, because only the first point may be\n+                    // u128::MIN and only the last may be u128::MAX.\n                     let c = match a.1 {\n                         Endpoint::Start => a.0,\n                         Endpoint::End | Endpoint::Both => a.0 + 1,"}, {"sha": "50fc825e74e096ec758ef23f827d00e42821bcd7", "filename": "src/test/ui/exhaustive_integer_patterns.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6a957e172af90befa1af4bd416ea872f6f50b086/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a957e172af90befa1af4bd416ea872f6f50b086/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs?ref=6a957e172af90befa1af4bd416ea872f6f50b086", "patch": "@@ -140,21 +140,26 @@ fn main() {\n     }\n \n     match (0u8, true) { //~ ERROR non-exhaustive patterns\n-        (0..=125, false) => {}\n-        (128..=255, false) => {}\n-        (0..=255, true) => {}\n+        (0 ..= 125, false) => {}\n+        (128 ..= 255, false) => {}\n+        (0 ..= 255, true) => {}\n     }\n \n     match (0u8, true) { // ok\n-        (0..=125, false) => {}\n-        (128..=255, false) => {}\n-        (0..=255, true) => {}\n-        (125..128, false) => {}\n+        (0 ..= 125, false) => {}\n+        (128 ..= 255, false) => {}\n+        (0 ..= 255, true) => {}\n+        (125 .. 128, false) => {}\n     }\n \n     match 0u8 { // ok\n-        0..2 => {}\n-        1..=2 => {}\n+        0 .. 2 => {}\n+        1 ..= 2 => {}\n         _ => {}\n     }\n+\n+    const lim: u128 = u128::MAX - 1;\n+    match 0u128 { //~ ERROR non-exhaustive patterns\n+        0 ..= lim => {}\n+    }\n }"}, {"sha": "3a47a091012112fed66f444116513b27d0ae67f6", "filename": "src/test/ui/exhaustive_integer_patterns.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6a957e172af90befa1af4bd416ea872f6f50b086/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a957e172af90befa1af4bd416ea872f6f50b086/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr?ref=6a957e172af90befa1af4bd416ea872f6f50b086", "patch": "@@ -64,6 +64,12 @@ error[E0004]: non-exhaustive patterns: `(126u8..=127u8, false)` not covered\n LL |     match (0u8, true) { //~ ERROR non-exhaustive patterns\n    |           ^^^^^^^^^^^ pattern `(126u8..=127u8, false)` not covered\n \n-error: aborting due to 10 previous errors\n+error[E0004]: non-exhaustive patterns: `340282366920938463463374607431768211455u128` not covered\n+  --> $DIR/exhaustive_integer_patterns.rs:162:11\n+   |\n+LL |     match 0u128 { //~ ERROR non-exhaustive patterns\n+   |           ^^^^^ pattern `340282366920938463463374607431768211455u128` not covered\n+\n+error: aborting due to 11 previous errors\n \n For more information about this error, try `rustc --explain E0004`."}]}