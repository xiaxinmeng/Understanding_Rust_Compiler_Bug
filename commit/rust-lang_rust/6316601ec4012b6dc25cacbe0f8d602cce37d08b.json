{"sha": "6316601ec4012b6dc25cacbe0f8d602cce37d08b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMTY2MDFlYzQwMTJiNmRjMjVjYWNiZTBmOGQ2MDJjY2UzN2QwOGI=", "commit": {"author": {"name": "F\u00e9lix Fischer", "email": "felix91gr@gmail.com", "date": "2020-04-23T01:39:47Z"}, "committer": {"name": "F\u00e9lix Fischer", "email": "felix91gr@gmail.com", "date": "2020-04-28T00:13:16Z"}, "message": "Added regression test for literal propagation and for scalar pair propagation", "tree": {"sha": "5e76be04ea67694aa9cae9320f88b87c4bd4a31b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e76be04ea67694aa9cae9320f88b87c4bd4a31b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6316601ec4012b6dc25cacbe0f8d602cce37d08b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6316601ec4012b6dc25cacbe0f8d602cce37d08b", "html_url": "https://github.com/rust-lang/rust/commit/6316601ec4012b6dc25cacbe0f8d602cce37d08b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6316601ec4012b6dc25cacbe0f8d602cce37d08b/comments", "author": {"login": "felix91gr", "id": 11747623, "node_id": "MDQ6VXNlcjExNzQ3NjIz", "avatar_url": "https://avatars.githubusercontent.com/u/11747623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felix91gr", "html_url": "https://github.com/felix91gr", "followers_url": "https://api.github.com/users/felix91gr/followers", "following_url": "https://api.github.com/users/felix91gr/following{/other_user}", "gists_url": "https://api.github.com/users/felix91gr/gists{/gist_id}", "starred_url": "https://api.github.com/users/felix91gr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felix91gr/subscriptions", "organizations_url": "https://api.github.com/users/felix91gr/orgs", "repos_url": "https://api.github.com/users/felix91gr/repos", "events_url": "https://api.github.com/users/felix91gr/events{/privacy}", "received_events_url": "https://api.github.com/users/felix91gr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "felix91gr", "id": 11747623, "node_id": "MDQ6VXNlcjExNzQ3NjIz", "avatar_url": "https://avatars.githubusercontent.com/u/11747623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felix91gr", "html_url": "https://github.com/felix91gr", "followers_url": "https://api.github.com/users/felix91gr/followers", "following_url": "https://api.github.com/users/felix91gr/following{/other_user}", "gists_url": "https://api.github.com/users/felix91gr/gists{/gist_id}", "starred_url": "https://api.github.com/users/felix91gr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felix91gr/subscriptions", "organizations_url": "https://api.github.com/users/felix91gr/orgs", "repos_url": "https://api.github.com/users/felix91gr/repos", "events_url": "https://api.github.com/users/felix91gr/events{/privacy}", "received_events_url": "https://api.github.com/users/felix91gr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d03399f53d28a8be645625376c0c9fbe601a01d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d03399f53d28a8be645625376c0c9fbe601a01d", "html_url": "https://github.com/rust-lang/rust/commit/2d03399f53d28a8be645625376c0c9fbe601a01d"}], "stats": {"total": 121, "additions": 121, "deletions": 0}, "files": [{"sha": "a740e69dca263e4aa4c462286bdd1914ce20f589", "filename": "src/test/mir-opt/const_prop/scalar_literal_propagation.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6316601ec4012b6dc25cacbe0f8d602cce37d08b/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fscalar_literal_propagation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6316601ec4012b6dc25cacbe0f8d602cce37d08b/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fscalar_literal_propagation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fscalar_literal_propagation.rs?ref=6316601ec4012b6dc25cacbe0f8d602cce37d08b", "patch": "@@ -0,0 +1,8 @@\n+// EMIT_MIR rustc.main.ConstProp.diff\n+fn main() {\n+    let x = 1;\n+    consume(x);\n+}\n+\n+#[inline(never)]\n+fn consume(_: u32) { }"}, {"sha": "f872696cf94dddd676d2226f259e280b3cb6ff39", "filename": "src/test/mir-opt/const_prop/scalar_literal_propagation/rustc.main.ConstProp.diff", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/6316601ec4012b6dc25cacbe0f8d602cce37d08b/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fscalar_literal_propagation%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6316601ec4012b6dc25cacbe0f8d602cce37d08b/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fscalar_literal_propagation%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fscalar_literal_propagation%2Frustc.main.ConstProp.diff?ref=6316601ec4012b6dc25cacbe0f8d602cce37d08b", "patch": "@@ -0,0 +1,48 @@\n+- // MIR for `main` before ConstProp\n++ // MIR for `main` after ConstProp\n+  \n+  fn main() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/scalar_literal_propagation.rs:2:11: 2:11\n+      let _1: u32;                         // in scope 0 at $DIR/scalar_literal_propagation.rs:3:9: 3:10\n+      let _2: ();                          // in scope 0 at $DIR/scalar_literal_propagation.rs:4:5: 4:15\n+      let mut _3: u32;                     // in scope 0 at $DIR/scalar_literal_propagation.rs:4:13: 4:14\n+      scope 1 {\n+          debug x => _1;                   // in scope 1 at $DIR/scalar_literal_propagation.rs:3:9: 3:10\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/scalar_literal_propagation.rs:3:9: 3:10\n+          _1 = const 1u32;                 // scope 0 at $DIR/scalar_literal_propagation.rs:3:13: 3:14\n+                                           // ty::Const\n+                                           // + ty: u32\n+                                           // + val: Value(Scalar(0x00000001))\n+                                           // mir::Constant\n+                                           // + span: $DIR/scalar_literal_propagation.rs:3:13: 3:14\n+                                           // + literal: Const { ty: u32, val: Value(Scalar(0x00000001)) }\n+          StorageLive(_2);                 // scope 1 at $DIR/scalar_literal_propagation.rs:4:5: 4:15\n+          StorageLive(_3);                 // scope 1 at $DIR/scalar_literal_propagation.rs:4:13: 4:14\n+          _3 = _1;                         // scope 1 at $DIR/scalar_literal_propagation.rs:4:13: 4:14\n+          _2 = const consume(move _3) -> bb1; // scope 1 at $DIR/scalar_literal_propagation.rs:4:5: 4:15\n+                                           // ty::Const\n+                                           // + ty: fn(u32) {consume}\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/scalar_literal_propagation.rs:4:5: 4:12\n+                                           // + literal: Const { ty: fn(u32) {consume}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          StorageDead(_3);                 // scope 1 at $DIR/scalar_literal_propagation.rs:4:14: 4:15\n+          StorageDead(_2);                 // scope 1 at $DIR/scalar_literal_propagation.rs:4:15: 4:16\n+          _0 = const ();                   // scope 0 at $DIR/scalar_literal_propagation.rs:2:11: 5:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/scalar_literal_propagation.rs:2:11: 5:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+          StorageDead(_1);                 // scope 0 at $DIR/scalar_literal_propagation.rs:5:1: 5:2\n+          return;                          // scope 0 at $DIR/scalar_literal_propagation.rs:5:2: 5:2\n+      }\n+  }\n+  "}, {"sha": "015607cbab1a0d8061ac43039c4ef8ece7b3c7d7", "filename": "src/test/mir-opt/const_prop/tuple_literal_propagation.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6316601ec4012b6dc25cacbe0f8d602cce37d08b/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6316601ec4012b6dc25cacbe0f8d602cce37d08b/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.rs?ref=6316601ec4012b6dc25cacbe0f8d602cce37d08b", "patch": "@@ -0,0 +1,9 @@\n+// EMIT_MIR rustc.main.ConstProp.diff\n+fn main() {\n+    let x = (1, 2);\n+\n+    consume(x);\n+}\n+\n+#[inline(never)]\n+fn consume(_: (u32, u32)) { }"}, {"sha": "f57b7f78d99aa19ce3c1d45c20662ae8667151ae", "filename": "src/test/mir-opt/const_prop/tuple_literal_propagation/rustc.main.ConstProp.diff", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/6316601ec4012b6dc25cacbe0f8d602cce37d08b/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6316601ec4012b6dc25cacbe0f8d602cce37d08b/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation%2Frustc.main.ConstProp.diff?ref=6316601ec4012b6dc25cacbe0f8d602cce37d08b", "patch": "@@ -0,0 +1,56 @@\n+- // MIR for `main` before ConstProp\n++ // MIR for `main` after ConstProp\n+  \n+  fn main() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/tuple_literal_propagation.rs:2:11: 2:11\n+      let _1: (u32, u32);                  // in scope 0 at $DIR/tuple_literal_propagation.rs:3:9: 3:10\n+      let _2: ();                          // in scope 0 at $DIR/tuple_literal_propagation.rs:5:5: 5:15\n+      let mut _3: (u32, u32);              // in scope 0 at $DIR/tuple_literal_propagation.rs:5:13: 5:14\n+      scope 1 {\n+          debug x => _1;                   // in scope 1 at $DIR/tuple_literal_propagation.rs:3:9: 3:10\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/tuple_literal_propagation.rs:3:9: 3:10\n+          _1 = (const 1u32, const 2u32);   // scope 0 at $DIR/tuple_literal_propagation.rs:3:13: 3:19\n+                                           // ty::Const\n+                                           // + ty: u32\n+                                           // + val: Value(Scalar(0x00000001))\n+                                           // mir::Constant\n+-                                          // + span: $DIR/tuple_literal_propagation.rs:3:14: 3:15\n++                                          // + span: $DIR/tuple_literal_propagation.rs:3:13: 3:19\n+                                           // + literal: Const { ty: u32, val: Value(Scalar(0x00000001)) }\n+                                           // ty::Const\n+                                           // + ty: u32\n+                                           // + val: Value(Scalar(0x00000002))\n+                                           // mir::Constant\n+-                                          // + span: $DIR/tuple_literal_propagation.rs:3:17: 3:18\n++                                          // + span: $DIR/tuple_literal_propagation.rs:3:13: 3:19\n+                                           // + literal: Const { ty: u32, val: Value(Scalar(0x00000002)) }\n+          StorageLive(_2);                 // scope 1 at $DIR/tuple_literal_propagation.rs:5:5: 5:15\n+          StorageLive(_3);                 // scope 1 at $DIR/tuple_literal_propagation.rs:5:13: 5:14\n+          _3 = _1;                         // scope 1 at $DIR/tuple_literal_propagation.rs:5:13: 5:14\n+          _2 = const consume(move _3) -> bb1; // scope 1 at $DIR/tuple_literal_propagation.rs:5:5: 5:15\n+                                           // ty::Const\n+                                           // + ty: fn((u32, u32)) {consume}\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/tuple_literal_propagation.rs:5:5: 5:12\n+                                           // + literal: Const { ty: fn((u32, u32)) {consume}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          StorageDead(_3);                 // scope 1 at $DIR/tuple_literal_propagation.rs:5:14: 5:15\n+          StorageDead(_2);                 // scope 1 at $DIR/tuple_literal_propagation.rs:5:15: 5:16\n+          _0 = const ();                   // scope 0 at $DIR/tuple_literal_propagation.rs:2:11: 6:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/tuple_literal_propagation.rs:2:11: 6:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+          StorageDead(_1);                 // scope 0 at $DIR/tuple_literal_propagation.rs:6:1: 6:2\n+          return;                          // scope 0 at $DIR/tuple_literal_propagation.rs:6:2: 6:2\n+      }\n+  }\n+  "}]}