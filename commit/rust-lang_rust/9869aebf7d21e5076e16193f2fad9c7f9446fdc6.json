{"sha": "9869aebf7d21e5076e16193f2fad9c7f9446fdc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NjlhZWJmN2QyMWU1MDc2ZTE2MTkzZjJmYWQ5YzdmOTQ0NmZkYzY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-02T00:58:13Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-02T00:58:33Z"}, "message": "rustc: Remove the static \"size\" field from the tag info", "tree": {"sha": "5486422fefd9b95555dc3aa2e2d8920b640fe5a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5486422fefd9b95555dc3aa2e2d8920b640fe5a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9869aebf7d21e5076e16193f2fad9c7f9446fdc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9869aebf7d21e5076e16193f2fad9c7f9446fdc6", "html_url": "https://github.com/rust-lang/rust/commit/9869aebf7d21e5076e16193f2fad9c7f9446fdc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9869aebf7d21e5076e16193f2fad9c7f9446fdc6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cae0c8c4d15546cbccacb6a937759903df608d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cae0c8c4d15546cbccacb6a937759903df608d7", "html_url": "https://github.com/rust-lang/rust/commit/7cae0c8c4d15546cbccacb6a937759903df608d7"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "e961acb4e9191f0d3e09c2d1e11d9ed4a1c4b206", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9869aebf7d21e5076e16193f2fad9c7f9446fdc6/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9869aebf7d21e5076e16193f2fad9c7f9446fdc6/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=9869aebf7d21e5076e16193f2fad9c7f9446fdc6", "patch": "@@ -61,7 +61,6 @@ type glue_fns = rec(ValueRef activate_glue,\n \n type tag_info = rec(\n     type_handle th,\n-    mutable uint size,\n     mutable @hashmap[ast.def_id,ValueRef] lldiscrims\n );\n \n@@ -4491,15 +4490,6 @@ fn trans_tag_variant(@crate_ctxt cx, ast.def_id tag_id,\n     auto arg_tys = arg_tys_of_fn(variant.ann);\n     copy_args_to_allocas(bcx, none[TypeRef], fn_args, arg_tys);\n \n-    // FIXME: This is wrong for generic tags. We should be dynamically\n-    // computing \"size\" below based on the tydescs passed in.\n-    auto info = cx.tags.get(mk_plain_tag(tag_id));\n-\n-    auto lltagty = T_struct(vec(T_int(), T_array(T_i8(), info.size)));\n-\n-    // FIXME: better name.\n-    llvm.LLVMAddTypeName(cx.llmod, _str.buf(\"tag\"), lltagty);\n-\n     auto lldiscrimptr = bcx.build.GEP(fcx.llretptr,\n                                       vec(C_int(0), C_int(0)));\n     bcx.build.Store(C_int(index), lldiscrimptr);\n@@ -4718,7 +4708,6 @@ fn collect_item(&@crate_ctxt cx, @ast.item i) -> @crate_ctxt {\n \n             auto info = @rec(\n                 th=mk_type_handle(),\n-                mutable size=0u,\n                 mutable lldiscrims=@new_def_hash[ValueRef]()\n             );\n \n@@ -4780,6 +4769,9 @@ fn collect_tag_ctors(@crate_ctxt cx, @ast.crate crate) {\n fn resolve_tag_types_for_item(&@crate_ctxt cx, @ast.item i) -> @crate_ctxt {\n     alt (i.node) {\n         case (ast.item_tag(_, ?variants, _, ?tag_id)) {\n+            // FIXME: This is all wrong. Now sizes and alignments are computed\n+            // dynamically instead of up front.\n+\n             auto max_align = 0u;\n             auto max_size = 0u;\n \n@@ -4799,8 +4791,6 @@ fn resolve_tag_types_for_item(&@crate_ctxt cx, @ast.item i) -> @crate_ctxt {\n                 }\n             }\n \n-            info.size = max_size;\n-\n             // FIXME: alignment is wrong here, manually insert padding I\n             // guess :(\n             auto tag_ty = T_struct(vec(T_int(), T_array(T_i8(), max_size)));"}]}