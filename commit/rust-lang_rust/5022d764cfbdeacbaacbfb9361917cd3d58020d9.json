{"sha": "5022d764cfbdeacbaacbfb9361917cd3d58020d9", "node_id": "C_kwDOAAsO6NoAKDUwMjJkNzY0Y2ZiZGVhY2JhYWNiZmI5MzYxOTE3Y2QzZDU4MDIwZDk", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-29T07:58:41Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-05-04T00:06:06Z"}, "message": "Show invisible delimeters (within comments) when pretty printing.", "tree": {"sha": "58b1b22e1556075d4835ed19c1bb7104efd4ed44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58b1b22e1556075d4835ed19c1bb7104efd4ed44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5022d764cfbdeacbaacbfb9361917cd3d58020d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5022d764cfbdeacbaacbfb9361917cd3d58020d9", "html_url": "https://github.com/rust-lang/rust/commit/5022d764cfbdeacbaacbfb9361917cd3d58020d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5022d764cfbdeacbaacbfb9361917cd3d58020d9/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baaa3b682986879c7784b5733ecea942e9ae7de3", "url": "https://api.github.com/repos/rust-lang/rust/commits/baaa3b682986879c7784b5733ecea942e9ae7de3", "html_url": "https://github.com/rust-lang/rust/commit/baaa3b682986879c7784b5733ecea942e9ae7de3"}], "stats": {"total": 178, "additions": 110, "deletions": 68}, "files": [{"sha": "7ff4246d4892213f321db869d614ee8a219e8ffd", "filename": "compiler/rustc_ast/src/token.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -50,11 +50,12 @@ pub enum Delimiter {\n     Brace,\n     /// `[ ... ]`\n     Bracket,\n-    /// `\u00d8 ... \u00d8`\n+    /// `/*\u00ab*/ ... /*\u00bb*/`\n     /// An invisible delimiter, that may, for example, appear around tokens coming from a\n     /// \"macro variable\" `$var`. It is important to preserve operator priorities in cases like\n     /// `$var * 3` where `$var` is `1 + 2`.\n-    /// Invisible delimiters might not survive roundtrip of a token stream through a string.\n+    /// Invisible delimiters are not directly writable in normal Rust code except as comments.\n+    /// Therefore, they might not survive a roundtrip of a token stream through a string.\n     Invisible,\n }\n "}, {"sha": "8f467d4ce1932dd5335a2e623f6b4447d910d932", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -582,15 +582,29 @@ pub trait PrintState<'a>: std::ops::Deref<Target = pp::Printer> + std::ops::Dere\n                     self.nbsp();\n                 }\n                 self.word(\"{\");\n-                if !tts.is_empty() {\n+                let empty = tts.is_empty();\n+                if !empty {\n                     self.space();\n                 }\n                 self.ibox(0);\n                 self.print_tts(tts, convert_dollar_crate);\n                 self.end();\n-                let empty = tts.is_empty();\n                 self.bclose(span, empty);\n             }\n+            Some(Delimiter::Invisible) => {\n+                self.word(\"/*\u00ab*/\");\n+                let empty = tts.is_empty();\n+                if !empty {\n+                    self.space();\n+                }\n+                self.ibox(0);\n+                self.print_tts(tts, convert_dollar_crate);\n+                self.end();\n+                if !empty {\n+                    self.space();\n+                }\n+                self.word(\"/*\u00bb*/\");\n+            }\n             Some(delim) => {\n                 let token_str = self.token_kind_to_string(&token::OpenDelim(delim));\n                 self.word(token_str);\n@@ -764,9 +778,8 @@ pub trait PrintState<'a>: std::ops::Deref<Target = pp::Printer> + std::ops::Dere\n             token::CloseDelim(Delimiter::Bracket) => \"]\".into(),\n             token::OpenDelim(Delimiter::Brace) => \"{\".into(),\n             token::CloseDelim(Delimiter::Brace) => \"}\".into(),\n-            token::OpenDelim(Delimiter::Invisible) | token::CloseDelim(Delimiter::Invisible) => {\n-                \"\".into()\n-            }\n+            token::OpenDelim(Delimiter::Invisible) => \"/*\u00ab*/\".into(),\n+            token::CloseDelim(Delimiter::Invisible) => \"/*\u00bb*/\".into(),\n             token::Pound => \"#\".into(),\n             token::Dollar => \"$\".into(),\n             token::Question => \"?\".into(),"}, {"sha": "6f7c6305afc14ec91e1be195cd68c6f4dc3a1735", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -703,11 +703,12 @@ pub enum Delimiter {\n     /// `[ ... ]`\n     #[stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")]\n     Bracket,\n-    /// `\u00d8 ... \u00d8`\n+    /// `/*\u00ab*/ ... /*\u00bb*/`\n     /// An invisible delimiter, that may, for example, appear around tokens coming from a\n     /// \"macro variable\" `$var`. It is important to preserve operator priorities in cases like\n     /// `$var * 3` where `$var` is `1 + 2`.\n-    /// Invisible delimiters might not survive roundtrip of a token stream through a string.\n+    /// Invisible delimiters are not directly writable in normal Rust code except as comments.\n+    /// Therefore, they might not survive a roundtrip of a token stream through a string.\n     #[stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")]\n     None,\n }"}, {"sha": "a2e30e2e93b5a63f009dccf6280be1cc887cdd34", "filename": "src/test/ui/proc-macro/auxiliary/expand-expr.rs", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fexpand-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fexpand-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fexpand-expr.rs?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -12,6 +12,15 @@ use std::str::FromStr;\n \n #[proc_macro]\n pub fn expand_expr_is(input: TokenStream) -> TokenStream {\n+    expand_expr_is_inner(input, false)\n+}\n+\n+#[proc_macro]\n+pub fn expand_expr_is_trim(input: TokenStream) -> TokenStream {\n+    expand_expr_is_inner(input, true)\n+}\n+\n+fn expand_expr_is_inner(input: TokenStream, trim_invisible: bool) -> TokenStream {\n     let mut iter = input.into_iter();\n     let mut expected_tts = Vec::new();\n     loop {\n@@ -22,14 +31,18 @@ pub fn expand_expr_is(input: TokenStream) -> TokenStream {\n         }\n     }\n \n-    let expected = expected_tts.into_iter().collect::<TokenStream>();\n-    let expanded = iter.collect::<TokenStream>().expand_expr().expect(\"expand_expr failed\");\n-    assert!(\n-        expected.to_string() == expanded.to_string(),\n-        \"assert failed\\nexpected: `{}`\\nexpanded: `{}`\",\n-        expected.to_string(),\n-        expanded.to_string()\n-    );\n+    // If requested, trim the \"invisible\" delimiters at the start and end.\n+    let expected = expected_tts.into_iter().collect::<TokenStream>().to_string();\n+    let expected = if trim_invisible {\n+        let len1 = \"/*\u00ab*/ \".len();\n+        let len2 = \" /*\u00bb*/\".len();\n+        &expected[len1..expected.len() - len2]\n+    } else {\n+        &expected[..]\n+    };\n+    let expanded = iter.collect::<TokenStream>().expand_expr().unwrap().to_string();\n+\n+    assert_eq!(expected, expanded);\n \n     TokenStream::new()\n }"}, {"sha": "3d0e7eaff00d853f5356582cf0bbb7152163f839", "filename": "src/test/ui/proc-macro/capture-macro-rules-invoke.stdout", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-macro-rules-invoke.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-macro-rules-invoke.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-macro-rules-invoke.stdout?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -1,4 +1,5 @@\n PRINT-BANG INPUT (DISPLAY): self\n+PRINT-BANG RE-COLLECTED (DISPLAY): /*\u00ab*/ self /*\u00bb*/\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Group {\n         delimiter: None,\n@@ -13,8 +14,10 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n ]\n PRINT-BANG INPUT (DISPLAY): 1 + 1, { \"a\" }, let a = 1;, String, my_name, 'a, my_val = 30,\n std::option::Option, pub(in some::path) , [a b c], -30\n-PRINT-BANG RE-COLLECTED (DISPLAY): 1 + 1, { \"a\" }, let a = 1, String, my_name, 'a, my_val = 30,\n-std :: option :: Option, pub(in some :: path), [a b c], - 30\n+PRINT-BANG RE-COLLECTED (DISPLAY): /*\u00ab*/ 1 + 1 /*\u00bb*/, /*\u00ab*/ { \"a\" } /*\u00bb*/, /*\u00ab*/ let a = 1 /*\u00bb*/, /*\u00ab*/\n+String /*\u00bb*/, my_name, /*\u00ab*/ 'a /*\u00bb*/, /*\u00ab*/ my_val = 30 /*\u00bb*/, /*\u00ab*/\n+std :: option :: Option /*\u00bb*/, /*\u00ab*/ pub(in some :: path) /*\u00bb*/, [a b c],\n+/*\u00ab*/ - 30 /*\u00bb*/\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Group {\n         delimiter: None,\n@@ -295,6 +298,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-BANG INPUT (DISPLAY): (a, b)\n+PRINT-BANG RE-COLLECTED (DISPLAY): /*\u00ab*/ (a, b) /*\u00bb*/\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Group {\n         delimiter: None,"}, {"sha": "5fe6ff72b4544a93276baf6f8054cd9f6892b822", "filename": "src/test/ui/proc-macro/capture-unglued-token.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-unglued-token.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-unglued-token.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-unglued-token.stdout?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -1,5 +1,5 @@\n PRINT-BANG INPUT (DISPLAY): Vec<u8>\n-PRINT-BANG RE-COLLECTED (DISPLAY): Vec < u8 >\n+PRINT-BANG RE-COLLECTED (DISPLAY): /*\u00ab*/ Vec < u8 > /*\u00bb*/\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Group {\n         delimiter: None,"}, {"sha": "edcb30f892cdf0b359018eccd74bee28a87643f5", "filename": "src/test/ui/proc-macro/expand-expr.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-expr.rs?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -2,9 +2,9 @@\n \n extern crate expand_expr;\n \n-use expand_expr::{\n-    check_expand_expr_file, echo_pm, expand_expr_fail, expand_expr_is, recursive_expand,\n-};\n+use expand_expr::{check_expand_expr_file, echo_pm, expand_expr_fail, expand_expr_is};\n+use expand_expr::{expand_expr_is_trim, recursive_expand};\n+\n \n // Check builtin macros can be expanded.\n \n@@ -47,21 +47,21 @@ macro_rules! echo_expr {\n \n macro_rules! simple_lit {\n     ($l:literal) => {\n-        expand_expr_is!($l, $l);\n-        expand_expr_is!($l, echo_lit!($l));\n-        expand_expr_is!($l, echo_expr!($l));\n-        expand_expr_is!($l, echo_tts!($l));\n-        expand_expr_is!($l, echo_pm!($l));\n+        expand_expr_is_trim!($l, $l);\n+        expand_expr_is_trim!($l, echo_lit!($l));\n+        expand_expr_is_trim!($l, echo_expr!($l));\n+        expand_expr_is_trim!($l, echo_tts!($l));\n+        expand_expr_is_trim!($l, echo_pm!($l));\n         const _: () = {\n             macro_rules! mac {\n                 () => {\n                     $l\n                 };\n             }\n-            expand_expr_is!($l, mac!());\n-            expand_expr_is!($l, echo_expr!(mac!()));\n-            expand_expr_is!($l, echo_tts!(mac!()));\n-            expand_expr_is!($l, echo_pm!(mac!()));\n+            expand_expr_is_trim!($l, mac!());\n+            expand_expr_is_trim!($l, echo_expr!(mac!()));\n+            expand_expr_is_trim!($l, echo_tts!(mac!()));\n+            expand_expr_is_trim!($l, echo_pm!(mac!()));\n         };\n     };\n }"}, {"sha": "04b516fd254243550031cc841af0047137c05c87", "filename": "src/test/ui/proc-macro/expr-stmt-nonterminal-tokens.stdout", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fexpr-stmt-nonterminal-tokens.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fexpr-stmt-nonterminal-tokens.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpr-stmt-nonterminal-tokens.stdout?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -1,5 +1,6 @@\n PRINT-DERIVE INPUT (DISPLAY): enum E { V = { let _ = #[allow(warnings)] 0 ; 0 }, }\n-PRINT-DERIVE DEEP-RE-COLLECTED (DISPLAY): enum E { V = { let _ = #[allow(warnings)] #[allow(warnings)] 0 ; 0 }, }\n+PRINT-DERIVE DEEP-RE-COLLECTED (DISPLAY): enum E\n+{ V = { let _ = /*\u00ab*/ #[allow(warnings)] #[allow(warnings)] 0 /*\u00bb*/ ; 0 }, }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"enum\",\n@@ -123,7 +124,7 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): enum E { V = { let _ = { 0; } ; 0 }, }\n-PRINT-DERIVE DEEP-RE-COLLECTED (DISPLAY): enum E { V = { let _ = { 0 } ; 0 }, }\n+PRINT-DERIVE DEEP-RE-COLLECTED (DISPLAY): enum E { V = { let _ = { /*\u00ab*/ 0 /*\u00bb*/ } ; 0 }, }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"enum\",\n@@ -203,6 +204,7 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): enum E { V = { let _ = { {} } ; 0 }, }\n+PRINT-DERIVE DEEP-RE-COLLECTED (DISPLAY): enum E { V = { let _ = { /*\u00ab*/ {} /*\u00bb*/ } ; 0 }, }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"enum\",\n@@ -281,7 +283,7 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): enum E { V = { let _ = { PATH; } ; 0 }, }\n-PRINT-DERIVE DEEP-RE-COLLECTED (DISPLAY): enum E { V = { let _ = { PATH } ; 0 }, }\n+PRINT-DERIVE DEEP-RE-COLLECTED (DISPLAY): enum E { V = { let _ = { /*\u00ab*/ PATH /*\u00bb*/ } ; 0 }, }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"enum\",\n@@ -359,7 +361,7 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): enum E { V = { let _ = { 0 + 1; } ; 0 }, }\n-PRINT-DERIVE DEEP-RE-COLLECTED (DISPLAY): enum E { V = { let _ = { 0 + 1 } ; 0 }, }\n+PRINT-DERIVE DEEP-RE-COLLECTED (DISPLAY): enum E { V = { let _ = { /*\u00ab*/ 0 + 1 /*\u00bb*/ } ; 0 }, }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"enum\",\n@@ -450,7 +452,7 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): enum E { V = { let _ = { PATH + 1; } ; 0 }, }\n-PRINT-DERIVE DEEP-RE-COLLECTED (DISPLAY): enum E { V = { let _ = { PATH + 1 } ; 0 }, }\n+PRINT-DERIVE DEEP-RE-COLLECTED (DISPLAY): enum E { V = { let _ = { /*\u00ab*/ PATH + 1 /*\u00bb*/ } ; 0 }, }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"enum\","}, {"sha": "55818969c71781c5829b4f67fac0e49d858bed54", "filename": "src/test/ui/proc-macro/issue-75734-pp-paren.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75734-pp-paren.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75734-pp-paren.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75734-pp-paren.stdout?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -96,6 +96,7 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-BANG INPUT (DISPLAY): 1 + 1 * 2\n+PRINT-BANG RE-COLLECTED (DISPLAY): /*\u00ab*/ 1 + 1 /*\u00bb*/ * 2\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Group {\n         delimiter: None,"}, {"sha": "6cf8043c34f81fd95307d67482e54782877994af", "filename": "src/test/ui/proc-macro/issue-78675-captured-inner-attrs.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fissue-78675-captured-inner-attrs.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fissue-78675-captured-inner-attrs.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-78675-captured-inner-attrs.stdout?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -1,7 +1,7 @@\n PRINT-BANG INPUT (DISPLAY): foo! { #[fake_attr] mod bar {\n     #![doc = r\" Foo\"]\n } }\n-PRINT-BANG DEEP-RE-COLLECTED (DISPLAY): foo! { #[fake_attr] mod bar { #! [doc = r\" Foo\"] } }\n+PRINT-BANG DEEP-RE-COLLECTED (DISPLAY): foo! { #[fake_attr] /*\u00ab*/ mod bar { #! [doc = r\" Foo\"] } /*\u00bb*/ }\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"foo\","}, {"sha": "adbd653ead4b7e5ddc1b35c455a4bd0caa8ebf66", "filename": "src/test/ui/proc-macro/issue-80760-empty-stmt.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fissue-80760-empty-stmt.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fissue-80760-empty-stmt.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-80760-empty-stmt.stdout?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -1,4 +1,5 @@\n PRINT-BANG INPUT (DISPLAY): ;\n+PRINT-BANG RE-COLLECTED (DISPLAY): /*\u00ab*/ ; /*\u00bb*/\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Group {\n         delimiter: None,"}, {"sha": "b912e426d5d993869e647655e92a68158af3a0da", "filename": "src/test/ui/proc-macro/nested-nonterminal-tokens.stdout", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fnested-nonterminal-tokens.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fnested-nonterminal-tokens.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnested-nonterminal-tokens.stdout?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -1,4 +1,6 @@\n PRINT-BANG INPUT (DISPLAY): 0 + 1 + 2 + 3\n+PRINT-BANG RE-COLLECTED (DISPLAY): /*\u00ab*/ 0 + 1 + 2 /*\u00bb*/ + 3\n+PRINT-BANG DEEP-RE-COLLECTED (DISPLAY): /*\u00ab*/ /*\u00ab*/ /*\u00ab*/ 0 /*\u00bb*/ + 1 /*\u00bb*/ + 2 /*\u00bb*/ + 3\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Group {\n         delimiter: None,"}, {"sha": "0d2f33b41750d1401c43e0d76dbd7c98d1e58ca8", "filename": "src/test/ui/proc-macro/nodelim-groups.stdout", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -1,4 +1,5 @@\n PRINT-BANG INPUT (DISPLAY): \"hi\" 1 + (25) + 1 (1 + 1)\n+PRINT-BANG RE-COLLECTED (DISPLAY): \"hi\" /*\u00ab*/ 1 + (25) + 1 /*\u00bb*/ (1 + 1)\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Literal {\n         kind: Str,\n@@ -71,6 +72,9 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-BANG INPUT (DISPLAY): \"hi\" \"hello\".len() + \"world\".len() (1 + 1)\n+PRINT-BANG RE-COLLECTED (DISPLAY): \"hi\" /*\u00ab*/ \"hello\".len() + \"world\".len() /*\u00bb*/ (1 + 1)\n+PRINT-BANG DEEP-RE-COLLECTED (DISPLAY): \"hi\" /*\u00ab*/ /*\u00ab*/ \"hello\".len() /*\u00bb*/ + /*\u00ab*/ \"world\".len() /*\u00bb*/ /*\u00bb*/\n+(1 + 1)\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Literal {\n         kind: Str,"}, {"sha": "32981e7011d970a7182718fe542bb120067c1247", "filename": "src/test/ui/proc-macro/nonterminal-expansion.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-expansion.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-expansion.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-expansion.stdout?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -1,5 +1,5 @@\n PRINT-ATTR_ARGS INPUT (DISPLAY): a, line!(), b\n-PRINT-ATTR_ARGS RE-COLLECTED (DISPLAY): a, line! (), b\n+PRINT-ATTR_ARGS RE-COLLECTED (DISPLAY): a, /*\u00ab*/ line! () /*\u00bb*/, b\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"a\","}, {"sha": "ba18ca75d7fe4dc2743da1d8cfda7d9390f7b377", "filename": "src/test/ui/proc-macro/nonterminal-token-hygiene.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-token-hygiene.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-token-hygiene.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-token-hygiene.stdout?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -1,5 +1,5 @@\n PRINT-BANG INPUT (DISPLAY): struct S;\n-PRINT-BANG RE-COLLECTED (DISPLAY): struct S ;\n+PRINT-BANG RE-COLLECTED (DISPLAY): /*\u00ab*/ struct S ; /*\u00bb*/\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Group {\n         delimiter: None,"}, {"sha": "71e5065a87a8888c63c19e433bc597cb38c55cc9", "filename": "src/test/ui/proc-macro/parent-source-spans.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.rs?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -8,16 +8,16 @@ use parent_source_spans::parent_source_spans;\n \n macro one($a:expr, $b:expr) {\n     two!($a, $b);\n-    //~^ ERROR first parent: \"hello\"\n-    //~| ERROR second parent: \"world\"\n+    //~^ ERROR first parent: /*\u00ab*/ \"hello\" /*\u00bb*/\n+    //~| ERROR second parent: /*\u00ab*/ \"world\" /*\u00bb*/\n }\n \n macro two($a:expr, $b:expr) {\n     three!($a, $b);\n-    //~^ ERROR first final: \"hello\"\n-    //~| ERROR second final: \"world\"\n-    //~| ERROR first final: \"yay\"\n-    //~| ERROR second final: \"rust\"\n+    //~^ ERROR first final: /*\u00ab*/ \"hello\" /*\u00bb*/\n+    //~| ERROR second final: /*\u00ab*/ \"world\" /*\u00bb*/\n+    //~| ERROR first final: /*\u00ab*/ \"yay\" /*\u00bb*/\n+    //~| ERROR second final: /*\u00ab*/ \"rust\" /*\u00bb*/\n }\n \n // forwarding tokens directly doesn't create a new source chain\n@@ -34,16 +34,16 @@ macro four($($tokens:tt)*) {\n \n fn main() {\n     one!(\"hello\", \"world\");\n-    //~^ ERROR first grandparent: \"hello\"\n-    //~| ERROR second grandparent: \"world\"\n-    //~| ERROR first source: \"hello\"\n-    //~| ERROR second source: \"world\"\n+    //~^ ERROR first grandparent: /*\u00ab*/ \"hello\" /*\u00bb*/\n+    //~| ERROR second grandparent: /*\u00ab*/ \"world\" /*\u00bb*/\n+    //~| ERROR first source: /*\u00ab*/ \"hello\" /*\u00bb*/\n+    //~| ERROR second source: /*\u00ab*/ \"world\" /*\u00bb*/\n \n     two!(\"yay\", \"rust\");\n-    //~^ ERROR first parent: \"yay\"\n-    //~| ERROR second parent: \"rust\"\n-    //~| ERROR first source: \"yay\"\n-    //~| ERROR second source: \"rust\"\n+    //~^ ERROR first parent: /*\u00ab*/ \"yay\" /*\u00bb*/\n+    //~| ERROR second parent: /*\u00ab*/ \"rust\" /*\u00bb*/\n+    //~| ERROR first source: /*\u00ab*/ \"yay\" /*\u00bb*/\n+    //~| ERROR second source: /*\u00ab*/ \"rust\" /*\u00bb*/\n \n     three!(\"hip\", \"hop\");\n     //~^ ERROR first final: \"hip\""}, {"sha": "e42218ea70117b3ed05144b789e5bcf044618870", "filename": "src/test/ui/proc-macro/parent-source-spans.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5022d764cfbdeacbaacbfb9361917cd3d58020d9/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr?ref=5022d764cfbdeacbaacbfb9361917cd3d58020d9", "patch": "@@ -1,4 +1,4 @@\n-error: first final: \"hello\"\n+error: first final: /*\u00ab*/ \"hello\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:16:12\n    |\n LL |     three!($a, $b);\n@@ -9,7 +9,7 @@ LL |     one!(\"hello\", \"world\");\n    |\n    = note: this error originates in the macro `two` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: second final: \"world\"\n+error: second final: /*\u00ab*/ \"world\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:16:16\n    |\n LL |     three!($a, $b);\n@@ -20,7 +20,7 @@ LL |     one!(\"hello\", \"world\");\n    |\n    = note: this error originates in the macro `two` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: first parent: \"hello\"\n+error: first parent: /*\u00ab*/ \"hello\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:10:5\n    |\n LL |     two!($a, $b);\n@@ -31,7 +31,7 @@ LL |     one!(\"hello\", \"world\");\n    |\n    = note: this error originates in the macro `one` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: second parent: \"world\"\n+error: second parent: /*\u00ab*/ \"world\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:10:5\n    |\n LL |     two!($a, $b);\n@@ -42,31 +42,31 @@ LL |     one!(\"hello\", \"world\");\n    |\n    = note: this error originates in the macro `one` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: first grandparent: \"hello\"\n+error: first grandparent: /*\u00ab*/ \"hello\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: second grandparent: \"world\"\n+error: second grandparent: /*\u00ab*/ \"world\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: first source: \"hello\"\n+error: first source: /*\u00ab*/ \"hello\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: second source: \"world\"\n+error: second source: /*\u00ab*/ \"world\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: first final: \"yay\"\n+error: first final: /*\u00ab*/ \"yay\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:16:12\n    |\n LL |     three!($a, $b);\n@@ -77,7 +77,7 @@ LL |     two!(\"yay\", \"rust\");\n    |\n    = note: this error originates in the macro `two` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: second final: \"rust\"\n+error: second final: /*\u00ab*/ \"rust\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:16:16\n    |\n LL |     three!($a, $b);\n@@ -88,25 +88,25 @@ LL |     two!(\"yay\", \"rust\");\n    |\n    = note: this error originates in the macro `two` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: first parent: \"yay\"\n+error: first parent: /*\u00ab*/ \"yay\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^\n \n-error: second parent: \"rust\"\n+error: second parent: /*\u00ab*/ \"rust\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^\n \n-error: first source: \"yay\"\n+error: first source: /*\u00ab*/ \"yay\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^\n \n-error: second source: \"rust\"\n+error: second source: /*\u00ab*/ \"rust\" /*\u00bb*/\n   --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");"}]}