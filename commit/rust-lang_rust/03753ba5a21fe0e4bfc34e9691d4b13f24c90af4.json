{"sha": "03753ba5a21fe0e4bfc34e9691d4b13f24c90af4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNzUzYmE1YTIxZmUwZTRiZmMzNGU5NjkxZDRiMTNmMjRjOTBhZjQ=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2015-02-21T19:15:58Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2015-02-21T19:15:58Z"}, "message": "Fix io::Take behavior with limit 0\n\nWe can't call into the inner reader for a 0-byte read because that may\nend up blocking or returning an error.", "tree": {"sha": "9e45175459d3cd408176a284c9ef922fa4db777b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e45175459d3cd408176a284c9ef922fa4db777b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03753ba5a21fe0e4bfc34e9691d4b13f24c90af4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03753ba5a21fe0e4bfc34e9691d4b13f24c90af4", "html_url": "https://github.com/rust-lang/rust/commit/03753ba5a21fe0e4bfc34e9691d4b13f24c90af4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03753ba5a21fe0e4bfc34e9691d4b13f24c90af4/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "522d09dfecbeca1595f25ac58c6d0178bbd21d7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/522d09dfecbeca1595f25ac58c6d0178bbd21d7d", "html_url": "https://github.com/rust-lang/rust/commit/522d09dfecbeca1595f25ac58c6d0178bbd21d7d"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "5e810926ee4fbd2f178bdca8da8e3ee91087b740", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/03753ba5a21fe0e4bfc34e9691d4b13f24c90af4/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03753ba5a21fe0e4bfc34e9691d4b13f24c90af4/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=03753ba5a21fe0e4bfc34e9691d4b13f24c90af4", "patch": "@@ -669,6 +669,11 @@ impl<T> Take<T> {\n \n impl<T: Read> Read for Take<T> {\n     fn read(&mut self, buf: &mut [u8]) -> Result<usize> {\n+        // Don't call into inner reader at all at EOF because it may still block\n+        if self.limit == 0 {\n+            return Ok(0);\n+        }\n+\n         let max = cmp::min(buf.len() as u64, self.limit) as usize;\n         let n = try!(self.inner.read(&mut buf[..max]));\n         self.limit -= n as u64;\n@@ -846,6 +851,7 @@ impl<B: BufRead> Iterator for Lines<B> {\n mod tests {\n     use prelude::v1::*;\n     use io::prelude::*;\n+    use io;\n     use super::Cursor;\n \n     #[test]\n@@ -943,4 +949,18 @@ mod tests {\n         let mut v = String::new();\n         assert!(c.read_to_string(&mut v).is_err());\n     }\n+\n+    #[test]\n+    fn take_eof() {\n+        struct R;\n+\n+        impl Read for R {\n+            fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n+                Err(io::Error::new(io::ErrorKind::Other, \"\", None))\n+            }\n+        }\n+\n+        let mut buf = [0; 1];\n+        assert_eq!(Ok(0), R.take(0).read(&mut buf));\n+    }\n }"}]}