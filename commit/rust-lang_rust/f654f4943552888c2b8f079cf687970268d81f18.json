{"sha": "f654f4943552888c2b8f079cf687970268d81f18", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NTRmNDk0MzU1Mjg4OGMyYjhmMDc5Y2Y2ODc5NzAyNjhkODFmMTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-25T10:35:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-25T10:35:14Z"}, "message": "Merge #4125\n\n4125: Avoid lossy OsString conversions r=matklad a=lnicola\n\nThis is a bit invasive, and perhaps for not much benefit since non-UTF-8 environment variables don't work anyway.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "d0d12e63caa092d986e1ce352e6de0a2cb4cdbdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0d12e63caa092d986e1ce352e6de0a2cb4cdbdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f654f4943552888c2b8f079cf687970268d81f18", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJepBJiCRBK7hj4Ov3rIwAAdHIIAG9sy41g/CP2x9o4w7mx+ZOw\nTAanPHfbdqZrPwUxDTMeX9mRJ8mK4OMseJ4mN9fSUJ21BKrLrPzZe87sxJZAtcPY\nbvsRMhPjLRKjEJgHdYRyoznfwCTDwETdNG7te9rs3gQ9UWM9R4I04F4zev3xSQMe\nYneWu0uLMtTARy77ByggWv2VAPlgbR4XF+ES/VJXFgJmRIirDdBy5m3T7uPr+L63\nDKo5yRq+lSiF8qzaj6+X7Y6hflQRj6d+05oMjMnhNKW/QdSBBIGnxGbBx3khvZAe\n0Mqj3UpOVY/3Tjjkjmyv1l8l0/T8JUE65bjmuSXW5N5WVbmI2LbOmWyhwqxIWQg=\n=1NcN\n-----END PGP SIGNATURE-----\n", "payload": "tree d0d12e63caa092d986e1ce352e6de0a2cb4cdbdd\nparent 29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72\nparent 58dde891f87bc6131b0ef34c33f6ffb9aa0c0ec3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587810914 +0000\ncommitter GitHub <noreply@github.com> 1587810914 +0000\n\nMerge #4125\n\n4125: Avoid lossy OsString conversions r=matklad a=lnicola\n\nThis is a bit invasive, and perhaps for not much benefit since non-UTF-8 environment variables don't work anyway.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f654f4943552888c2b8f079cf687970268d81f18", "html_url": "https://github.com/rust-lang/rust/commit/f654f4943552888c2b8f079cf687970268d81f18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f654f4943552888c2b8f079cf687970268d81f18/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "url": "https://api.github.com/repos/rust-lang/rust/commits/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "html_url": "https://github.com/rust-lang/rust/commit/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "58dde891f87bc6131b0ef34c33f6ffb9aa0c0ec3", "url": "https://api.github.com/repos/rust-lang/rust/commits/58dde891f87bc6131b0ef34c33f6ffb9aa0c0ec3", "html_url": "https://github.com/rust-lang/rust/commit/58dde891f87bc6131b0ef34c33f6ffb9aa0c0ec3"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "e0fef613db0193e08eaa3ade49788970e681dc5b", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f654f4943552888c2b8f079cf687970268d81f18/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f654f4943552888c2b8f079cf687970268d81f18/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=f654f4943552888c2b8f079cf687970268d81f18", "patch": "@@ -358,7 +358,7 @@ fn env_expand(\n     // However, we cannot use an empty string here, because for\n     // `include!(concat!(env!(\"OUT_DIR\"), \"/foo.rs\"))` will become\n     // `include!(\"foo.rs\"), which might go to infinite loop\n-    let s = get_env_inner(db, arg_id, &key).unwrap_or(\"__RA_UNIMPLEMENTATED__\".to_string());\n+    let s = get_env_inner(db, arg_id, &key).unwrap_or_else(|| \"__RA_UNIMPLEMENTATED__\".to_string());\n     let expanded = quote! { #s };\n \n     Ok((expanded, FragmentKind::Expr))"}, {"sha": "731cbd29181874764bd055925079fb1f85ea85e1", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f654f4943552888c2b8f079cf687970268d81f18/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f654f4943552888c2b8f079cf687970268d81f18/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=f654f4943552888c2b8f079cf687970268d81f18", "patch": "@@ -285,8 +285,10 @@ impl ProjectWorkspace {\n                         let mut env = Env::default();\n                         let mut extern_source = ExternSource::default();\n                         if let Some(out_dir) = &krate.out_dir {\n-                            // FIXME: We probably mangle non UTF-8 paths here, figure out a better solution\n-                            env.set(\"OUT_DIR\", out_dir.to_string_lossy().to_string());\n+                            // NOTE: cargo and rustc seem to hide non-UTF-8 strings from env! and option_env!()\n+                            if let Some(out_dir) = out_dir.to_str().map(|s| s.to_owned()) {\n+                                env.set(\"OUT_DIR\", out_dir);\n+                            }\n                             if let Some(&extern_source_id) = extern_source_roots.get(out_dir) {\n                                 extern_source.set_extern_path(&out_dir, extern_source_id);\n                             }\n@@ -402,8 +404,10 @@ impl ProjectWorkspace {\n                             let mut env = Env::default();\n                             let mut extern_source = ExternSource::default();\n                             if let Some(out_dir) = &cargo[pkg].out_dir {\n-                                // FIXME: We probably mangle non UTF-8 paths here, figure out a better solution\n-                                env.set(\"OUT_DIR\", out_dir.to_string_lossy().to_string());\n+                                // NOTE: cargo and rustc seem to hide non-UTF-8 strings from env! and option_env!()\n+                                if let Some(out_dir) = out_dir.to_str().map(|s| s.to_owned()) {\n+                                    env.set(\"OUT_DIR\", out_dir);\n+                                }\n                                 if let Some(&extern_source_id) = extern_source_roots.get(out_dir) {\n                                     extern_source.set_extern_path(&out_dir, extern_source_id);\n                                 }"}, {"sha": "d993c414689ce5e1444d078b06ea86ae59d8e686", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f654f4943552888c2b8f079cf687970268d81f18/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f654f4943552888c2b8f079cf687970268d81f18/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=f654f4943552888c2b8f079cf687970268d81f18", "patch": "@@ -696,7 +696,7 @@ fn on_diagnostic_task(task: DiagnosticTask, msg_sender: &Sender<Message>, state:\n         let uri = match url_from_path_with_drive_lowercasing(&path) {\n             Ok(uri) => uri,\n             Err(err) => {\n-                log::error!(\"Couldn't convert path to url ({}): {:?}\", err, path.to_string_lossy());\n+                log::error!(\"Couldn't convert path to url ({}): {}\", err, path.display());\n                 continue;\n             }\n         };"}, {"sha": "c2c1a23cdfd2cbebfa214693b128ddd46ef0d5d3", "filename": "crates/rust-analyzer/src/main_loop/handlers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f654f4943552888c2b8f079cf687970268d81f18/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f654f4943552888c2b8f079cf687970268d81f18/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=f654f4943552888c2b8f079cf687970268d81f18", "patch": "@@ -384,7 +384,7 @@ pub fn handle_runnables(\n         args: check_args,\n         extra_args: Vec::new(),\n         env: FxHashMap::default(),\n-        cwd: workspace_root.map(|root| root.to_string_lossy().to_string()),\n+        cwd: workspace_root.map(|root| root.to_owned()),\n     });\n     Ok(res)\n }\n@@ -984,7 +984,7 @@ fn to_lsp_runnable(\n             m.insert(\"RUST_BACKTRACE\".to_string(), \"short\".to_string());\n             m\n         },\n-        cwd: world.workspace_root_for(file_id).map(|root| root.to_string_lossy().to_string()),\n+        cwd: world.workspace_root_for(file_id).map(|root| root.to_owned()),\n     })\n }\n "}, {"sha": "ae34488929f688c3569f4a2e5bdbbc140ea2ef1b", "filename": "crates/rust-analyzer/src/req.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f654f4943552888c2b8f079cf687970268d81f18/crates%2Frust-analyzer%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f654f4943552888c2b8f079cf687970268d81f18/crates%2Frust-analyzer%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freq.rs?ref=f654f4943552888c2b8f079cf687970268d81f18", "patch": "@@ -17,6 +17,7 @@ pub use lsp_types::{\n     SignatureHelp, SymbolKind, TextDocumentEdit, TextDocumentPositionParams, TextEdit,\n     WorkDoneProgressParams, WorkspaceEdit, WorkspaceSymbolParams,\n };\n+use std::path::PathBuf;\n \n pub enum AnalyzerStatus {}\n \n@@ -141,7 +142,7 @@ pub struct Runnable {\n     pub args: Vec<String>,\n     pub extra_args: Vec<String>,\n     pub env: FxHashMap<String, String>,\n-    pub cwd: Option<String>,\n+    pub cwd: Option<PathBuf>,\n }\n \n #[derive(Deserialize, Serialize, Debug)]"}]}