{"sha": "c00eaa99690c69457da19dff4920c393d71dbf4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMGVhYTk5NjkwYzY5NDU3ZGExOWRmZjQ5MjBjMzkzZDcxZGJmNGU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-19T12:41:56Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-20T20:54:27Z"}, "message": "Strongly improve search path", "tree": {"sha": "e2d310092d2653e0873b20df20052868760a60c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2d310092d2653e0873b20df20052868760a60c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c00eaa99690c69457da19dff4920c393d71dbf4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c00eaa99690c69457da19dff4920c393d71dbf4e", "html_url": "https://github.com/rust-lang/rust/commit/c00eaa99690c69457da19dff4920c393d71dbf4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c00eaa99690c69457da19dff4920c393d71dbf4e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad6324f6f7ecc05c3597278a0fa83822269c097a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6324f6f7ecc05c3597278a0fa83822269c097a", "html_url": "https://github.com/rust-lang/rust/commit/ad6324f6f7ecc05c3597278a0fa83822269c097a"}], "stats": {"total": 47, "additions": 37, "deletions": 10}, "files": [{"sha": "27f035da7e699e72ff58299b0914682e9cf54169", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 37, "deletions": 10, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/c00eaa99690c69457da19dff4920c393d71dbf4e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/c00eaa99690c69457da19dff4920c393d71dbf4e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=c00eaa99690c69457da19dff4920c393d71dbf4e", "patch": "@@ -376,7 +376,7 @@\n \n             for (var z = 0; z < split.length; ++z) {\n                 if (split[z] === \"\") {\n-                    split.slice(z, 1);\n+                    split.splice(z, 1);\n                     z -= 1;\n                 }\n             }\n@@ -526,20 +526,47 @@\n                 return literalSearch === true ? false : lev_distance;\n             }\n \n-            function checkPath(startsWith, ty) {\n-                var lev_total = 0;\n+            function checkPath(startsWith, lastElem, ty) {\n+                var ret_lev = MAX_LEV_DISTANCE + 1;\n                 var path = ty.path.split(\"::\");\n+\n+                if (ty.parent && ty.parent.name) {\n+                    path.push(ty.parent.name.toLowerCase());\n+                }\n+\n                 if (startsWith.length > path.length) {\n                     return MAX_LEV_DISTANCE + 1;\n                 }\n-                for (var i = path.length - 1; i < startsWith.length; ++i) {\n-                    var lev = levenshtein(startsWith[i], path[i]);\n-                    if (lev > MAX_LEV_DISTANCE) {\n-                        return MAX_LEV_DISTANCE + 1;\n+                for (var i = 0; i < path.length; ++i) {\n+                    if (i + startsWith.length > path.length) {\n+                        break;\n+                    }\n+                    var lev_total = 0;\n+                    var aborted = false;\n+                    for (var x = 0; x < startsWith.length; ++x) {\n+                        var lev = levenshtein(path[i + x], startsWith[x]);\n+                        if (lev > MAX_LEV_DISTANCE) {\n+                            aborted = true;\n+                            break;\n+                        }\n+                        lev_total += lev;\n+                    }\n+                    if (aborted === false) {\n+                        var extra = MAX_LEV_DISTANCE + 1;\n+                        if (i + startsWith.length < path.length) {\n+                            extra = levenshtein(path[i + startsWith.length], lastElem);\n+                        }\n+                        if (extra > MAX_LEV_DISTANCE) {\n+                            extra = levenshtein(ty.name, lastElem);\n+                        }\n+                        if (extra < MAX_LEV_DISTANCE + 1) {\n+                            lev_total += extra;\n+                            ret_lev = Math.min(ret_lev,\n+                                               Math.round(lev_total / (startsWith.length + 1)));\n+                        }\n                     }\n-                    lev_total += lev;\n                 }\n-                return Math.round(lev_total / startsWith.length);\n+                return ret_lev;\n             }\n \n             function typePassesFilter(filter, type) {\n@@ -701,7 +728,7 @@\n                     }\n                     var lev_add = 0;\n                     if (paths.length > 1) {\n-                        var lev = checkPath(startsWith, ty);\n+                        var lev = checkPath(startsWith, paths[paths.length - 1], ty);\n                         if (lev > MAX_LEV_DISTANCE) {\n                             continue;\n                         } else if (lev > 0) {"}]}