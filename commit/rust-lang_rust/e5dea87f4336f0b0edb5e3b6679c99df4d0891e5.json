{"sha": "e5dea87f4336f0b0edb5e3b6679c99df4d0891e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZGVhODdmNDMzNmYwYjBlZGI1ZTNiNjY3OWM5OWRmNGQwODkxZTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-14T21:22:56Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-15T01:19:08Z"}, "message": "core: Add str::from_c_str, from_c_str_len, as_c_str", "tree": {"sha": "1ec0b4570403f66596b06da966a338a27f5114b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ec0b4570403f66596b06da966a338a27f5114b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5dea87f4336f0b0edb5e3b6679c99df4d0891e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5dea87f4336f0b0edb5e3b6679c99df4d0891e5", "html_url": "https://github.com/rust-lang/rust/commit/e5dea87f4336f0b0edb5e3b6679c99df4d0891e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5dea87f4336f0b0edb5e3b6679c99df4d0891e5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a2df84d89e2d16d925663ee0ce9227a87b49bc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a2df84d89e2d16d925663ee0ce9227a87b49bc9", "html_url": "https://github.com/rust-lang/rust/commit/3a2df84d89e2d16d925663ee0ce9227a87b49bc9"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "cacec9e740df6527121680d950dc9b46823665a7", "filename": "src/libcore/str.rs", "status": "modified", "additions": 30, "deletions": 5, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/e5dea87f4336f0b0edb5e3b6679c99df4d0891e5/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5dea87f4336f0b0edb5e3b6679c99df4d0891e5/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=e5dea87f4336f0b0edb5e3b6679c99df4d0891e5", "patch": "@@ -11,14 +11,21 @@ export\n    // Creating a string\n    from_bytes,\n    from_byte,\n-   push_char,\n    from_char,\n    from_chars,\n    from_buf,\n    from_buf_len,\n+   from_c_str,\n+   from_c_str_len,\n+   push_char,\n    concat,\n    connect,\n \n+   // Reinterpretation\n+   as_bytes,\n+   as_buf,\n+   as_c_str,\n+\n    // Adding things to and removing things from a string\n    push_char,\n    pop_char,\n@@ -88,8 +95,6 @@ export\n    char_range_at,\n    is_char_boundary,\n    char_at,\n-   as_bytes,\n-   as_buf,\n    reserve,\n \n    unsafe;\n@@ -192,6 +197,11 @@ fn from_buf(buf: *u8) -> str unsafe {\n     ret from_buf_len(buf, i);\n }\n \n+#[doc = \"Create a Rust string from a null-terminated C string\"]\n+fn from_c_str(c_str: *libc::c_char) -> str unsafe {\n+    from_buf(::unsafe::reinterpret_cast(c_str))\n+}\n+\n #[doc = \"Create a Rust string from a *u8 buffer of the given length\"]\n fn from_buf_len(buf: *u8, len: uint) -> str unsafe {\n     let mut v: [u8] = [];\n@@ -206,6 +216,11 @@ fn from_buf_len(buf: *u8, len: uint) -> str unsafe {\n     ret s;\n }\n \n+#[doc = \"Create a Rust string from a `*c_char` buffer of the given length\"]\n+fn from_c_str_len(c_str: *libc::c_char, len: uint) -> str unsafe {\n+    from_buf_len(::unsafe::reinterpret_cast(c_str), len)\n+}\n+\n #[doc = \"Concatenate a vector of strings\"]\n fn concat(v: [str]) -> str {\n     let mut s: str = \"\";\n@@ -1240,15 +1255,25 @@ Work with the byte buffer of a string.\n \n Allows for unsafe manipulation of strings, which is useful for native\n interop.\n+\"]\n+fn as_buf<T>(s: str, f: fn(*u8) -> T) -> T unsafe {\n+    as_bytes(s) { |v| vec::as_buf(v, f) }\n+}\n+\n+#[doc = \"\n+Work with the byte buffer of a string as a null-terminated C string.\n+\n+Allows for unsafe manipulation of strings, which is useful for native\n+interop, without copying the original string.\n \n # Example\n \n ```\n let s = str::as_buf(\\\"PATH\\\", { |path_buf| libc::getenv(path_buf) });\n ```\n \"]\n-fn as_buf<T>(s: str, f: fn(*u8) -> T) -> T unsafe {\n-    as_bytes(s) { |v| vec::as_buf(v, f) }\n+fn as_c_str<T>(s: str, f: fn(*libc::c_char) -> T) -> T unsafe {\n+    as_buf(s) {|buf| f(buf as *libc::c_char) }\n }\n \n #[doc = \"Allocate more memory for a string, up to `nn` + 1 bytes\"]"}]}