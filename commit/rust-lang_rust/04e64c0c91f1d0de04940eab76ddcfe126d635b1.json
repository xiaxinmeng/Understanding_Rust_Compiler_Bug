{"sha": "04e64c0c91f1d0de04940eab76ddcfe126d635b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZTY0YzBjOTFmMWQwZGUwNDk0MGVhYjc2ZGRjZmUxMjZkNjM1YjE=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2014-06-27T20:54:18Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2014-06-27T21:05:24Z"}, "message": "librustc: Schedule cleanups properly when coercing to a &Trait.", "tree": {"sha": "760cc4227c95a06522e95b520530cc7517b2ed9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/760cc4227c95a06522e95b520530cc7517b2ed9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04e64c0c91f1d0de04940eab76ddcfe126d635b1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04e64c0c91f1d0de04940eab76ddcfe126d635b1", "html_url": "https://github.com/rust-lang/rust/commit/04e64c0c91f1d0de04940eab76ddcfe126d635b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04e64c0c91f1d0de04940eab76ddcfe126d635b1/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abdf71cf73fd8b0b5bca78da830fe6f2a49ff8c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/abdf71cf73fd8b0b5bca78da830fe6f2a49ff8c2", "html_url": "https://github.com/rust-lang/rust/commit/abdf71cf73fd8b0b5bca78da830fe6f2a49ff8c2"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "b10190b23c721c87058a0f22bdee69ee53355e17", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/04e64c0c91f1d0de04940eab76ddcfe126d635b1/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04e64c0c91f1d0de04940eab76ddcfe126d635b1/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=04e64c0c91f1d0de04940eab76ddcfe126d635b1", "patch": "@@ -277,15 +277,19 @@ fn apply_adjustments<'a>(bcx: &'a Block<'a>,\n         auto_ref(bcx, datum, expr)\n     }\n \n-    fn auto_borrow_obj<'a>(bcx: &'a Block<'a>,\n+    fn auto_borrow_obj<'a>(mut bcx: &'a Block<'a>,\n                            expr: &ast::Expr,\n                            source_datum: Datum<Expr>)\n                            -> DatumBlock<'a, Expr> {\n         let tcx = bcx.tcx();\n         let target_obj_ty = expr_ty_adjusted(bcx, expr);\n         debug!(\"auto_borrow_obj(target={})\", target_obj_ty.repr(tcx));\n \n-        let mut datum = source_datum.to_expr_datum();\n+        // Arrange cleanup, if not already done. This is needed in\n+        // case we are auto-borrowing a Box<Trait> to &Trait\n+        let datum = unpack_datum!(\n+            bcx, source_datum.to_lvalue_datum(bcx, \"autoborrowobj\", expr.id));\n+        let mut datum = datum.to_expr_datum();\n         datum.ty = target_obj_ty;\n         DatumBlock::new(bcx, datum)\n     }"}, {"sha": "23142082a8c4162b877469de1407717944a4845f", "filename": "src/test/run-pass/cleanup-auto-borrow-obj.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/04e64c0c91f1d0de04940eab76ddcfe126d635b1/src%2Ftest%2Frun-pass%2Fcleanup-auto-borrow-obj.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04e64c0c91f1d0de04940eab76ddcfe126d635b1/src%2Ftest%2Frun-pass%2Fcleanup-auto-borrow-obj.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-auto-borrow-obj.rs?ref=04e64c0c91f1d0de04940eab76ddcfe126d635b1", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+// This would previously leak the Box<Trait> because we wouldn't\n+// schedule cleanups when auto borrowing trait objects.\n+// This program should be valgrind clean.\n+\n+\n+static mut DROP_RAN: bool = false;\n+\n+struct Foo;\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        unsafe { DROP_RAN = true; }\n+    }\n+}\n+\n+\n+trait Trait {}\n+impl Trait for Foo {}\n+\n+pub fn main() {\n+    {\n+        let _x: &Trait = box Foo as Box<Trait>;\n+    }\n+    unsafe {\n+        assert!(DROP_RAN);\n+    }\n+}\n+"}]}