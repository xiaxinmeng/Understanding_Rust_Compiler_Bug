{"sha": "71fdb95272ba1155cb0eacd7053d0eec18f1dab1", "node_id": "C_kwDOAAsO6NoAKDcxZmRiOTUyNzJiYTExNTVjYjBlYWNkNzA1M2QwZWVjMThmMWRhYjE", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-05-17T05:43:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-17T05:43:57Z"}, "message": "Rollup merge of #111654 - JoJoJet:unsafe-cell-from-mut-lib, r=joshtriplett\n\nAdd a conversion from `&mut T` to `&mut UnsafeCell<T>`\n\nProvides a safe way of downgrading an exclusive reference into an alias-able `&UnsafeCell<T>` reference.\n\nACP: https://github.com/rust-lang/libs-team/issues/198.", "tree": {"sha": "01605ebd761c6be436aa22b5944619ab17da392e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01605ebd761c6be436aa22b5944619ab17da392e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71fdb95272ba1155cb0eacd7053d0eec18f1dab1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkZGmdCRBK7hj4Ov3rIwAA5AsIADaHeoVzT7tUBHie6k/hR/CP\nyh/O6J91H1A8OrCgttq+o2th1i53dSDl3djxAn+xJw++4n9J6z3ZfuuYg+/55jk1\nOC119ZXisiDKcLoqi+J5jAS696V61m5Dx066uXN0BjweOvnJVQru4OPmY+oSHzuq\nFNvLJtW5+n7GxZo0wEWZpyC9SlETveRsuhWGGxEB4GOYsL5N1ZnQuR7gSbjWduCu\nXAoVGMjeaLHY4H0Lcitcui9kz/LCkuPqbQPdcocqIY8EmUXhyQHV/UqMo8NPBiMl\nfL7njZmbfu+fbUbocIKVpMYS9cfr7DSv9igkQjPfAej9d5boyFPg6QpFyrUTdGE=\n=YjGj\n-----END PGP SIGNATURE-----\n", "payload": "tree 01605ebd761c6be436aa22b5944619ab17da392e\nparent bc3b94a486cb2bea32f3d07bd6cab76fae95d35f\nparent ffacb8861a860e5797e2835668336e60147ef454\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1684302237 +0530\ncommitter GitHub <noreply@github.com> 1684302237 +0530\n\nRollup merge of #111654 - JoJoJet:unsafe-cell-from-mut-lib, r=joshtriplett\n\nAdd a conversion from `&mut T` to `&mut UnsafeCell<T>`\n\nProvides a safe way of downgrading an exclusive reference into an alias-able `&UnsafeCell<T>` reference.\n\nACP: https://github.com/rust-lang/libs-team/issues/198.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71fdb95272ba1155cb0eacd7053d0eec18f1dab1", "html_url": "https://github.com/rust-lang/rust/commit/71fdb95272ba1155cb0eacd7053d0eec18f1dab1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71fdb95272ba1155cb0eacd7053d0eec18f1dab1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc3b94a486cb2bea32f3d07bd6cab76fae95d35f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc3b94a486cb2bea32f3d07bd6cab76fae95d35f", "html_url": "https://github.com/rust-lang/rust/commit/bc3b94a486cb2bea32f3d07bd6cab76fae95d35f"}, {"sha": "ffacb8861a860e5797e2835668336e60147ef454", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffacb8861a860e5797e2835668336e60147ef454", "html_url": "https://github.com/rust-lang/rust/commit/ffacb8861a860e5797e2835668336e60147ef454"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "874d578fe1db3827566eadcb25d6b609bf9f25ac", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/71fdb95272ba1155cb0eacd7053d0eec18f1dab1/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71fdb95272ba1155cb0eacd7053d0eec18f1dab1/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=71fdb95272ba1155cb0eacd7053d0eec18f1dab1", "patch": "@@ -1584,6 +1584,7 @@ symbols! {\n         unrestricted_attribute_tokens,\n         unsafe_block_in_unsafe_fn,\n         unsafe_cell,\n+        unsafe_cell_from_mut,\n         unsafe_no_drop_flag,\n         unsafe_pin_internals,\n         unsize,"}, {"sha": "744767aae44caa004f6ef25928d97becc8c2c6d6", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/71fdb95272ba1155cb0eacd7053d0eec18f1dab1/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71fdb95272ba1155cb0eacd7053d0eec18f1dab1/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=71fdb95272ba1155cb0eacd7053d0eec18f1dab1", "patch": "@@ -2030,6 +2030,27 @@ impl<T> UnsafeCell<T> {\n }\n \n impl<T: ?Sized> UnsafeCell<T> {\n+    /// Converts from `&mut T` to `&mut UnsafeCell<T>`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// # #![feature(unsafe_cell_from_mut)]\n+    /// use std::cell::UnsafeCell;\n+    ///\n+    /// let mut val = 42;\n+    /// let uc = UnsafeCell::from_mut(&mut val);\n+    ///\n+    /// *uc.get_mut() -= 1;\n+    /// assert_eq!(*uc.get_mut(), 41);\n+    /// ```\n+    #[inline(always)]\n+    #[unstable(feature = \"unsafe_cell_from_mut\", issue = \"111645\")]\n+    pub const fn from_mut(value: &mut T) -> &mut UnsafeCell<T> {\n+        // SAFETY: `UnsafeCell<T>` has the same memory layout as `T` due to #[repr(transparent)].\n+        unsafe { &mut *(value as *mut T as *mut UnsafeCell<T>) }\n+    }\n+\n     /// Gets a mutable pointer to the wrapped value.\n     ///\n     /// This can be cast to a pointer of any kind."}]}