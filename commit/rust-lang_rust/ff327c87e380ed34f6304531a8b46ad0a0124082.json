{"sha": "ff327c87e380ed34f6304531a8b46ad0a0124082", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMzI3Yzg3ZTM4MGVkMzRmNjMwNDUzMWE4YjQ2YWQwYTAxMjQwODI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-06-06T21:09:31Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-06-06T21:09:31Z"}, "message": "Add comments to `Resolve::get_module`", "tree": {"sha": "3e05e2806c92a40aee81e85fef0ceddff95f4bd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e05e2806c92a40aee81e85fef0ceddff95f4bd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff327c87e380ed34f6304531a8b46ad0a0124082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff327c87e380ed34f6304531a8b46ad0a0124082", "html_url": "https://github.com/rust-lang/rust/commit/ff327c87e380ed34f6304531a8b46ad0a0124082", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff327c87e380ed34f6304531a8b46ad0a0124082/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47c3158c3d797f75f0f7b2b2a977179668919dab", "url": "https://api.github.com/repos/rust-lang/rust/commits/47c3158c3d797f75f0f7b2b2a977179668919dab", "html_url": "https://github.com/rust-lang/rust/commit/47c3158c3d797f75f0f7b2b2a977179668919dab"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "2ae063660e38d9d9ba178fc5630cea14a56a8182", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff327c87e380ed34f6304531a8b46ad0a0124082/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff327c87e380ed34f6304531a8b46ad0a0124082/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=ff327c87e380ed34f6304531a8b46ad0a0124082", "patch": "@@ -95,24 +95,30 @@ impl<'a> Resolver<'a> {\n     }\n \n     crate fn get_module(&mut self, def_id: DefId) -> Module<'a> {\n+        // If this is a local module, it will be in `module_map`, no need to recalculate it.\n         if let Some(def_id) = def_id.as_local() {\n             return self.module_map[&def_id];\n         }\n \n+        // Cache module resolution\n         if let Some(&module) = self.extern_module_map.get(&def_id) {\n             return module;\n         }\n \n         let (name, parent) = if def_id.index == CRATE_DEF_INDEX {\n+            // This is the crate root\n             (self.cstore().crate_name_untracked(def_id.krate), None)\n         } else {\n             let def_key = self.cstore().def_key(def_id);\n             (\n+                // This unwrap is safe: crates must always have a name\n                 def_key.disambiguated_data.data.get_opt_name().unwrap(),\n+                // This unwrap is safe since we know this isn't the root\n                 Some(self.get_module(DefId { index: def_key.parent.unwrap(), ..def_id })),\n             )\n         };\n \n+        // Allocate and return a new module with the information we found\n         let kind = ModuleKind::Def(DefKind::Mod, def_id, name);\n         let module = self.arenas.alloc_module(ModuleData::new(\n             parent,"}]}