{"sha": "4d65ef45491b62fbecdb9a24822c216aa96bb34e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNjVlZjQ1NDkxYjYyZmJlY2RiOWEyNDgyMmMyMTZhYTk2YmIzNGU=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-07-10T19:31:44Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-07-12T23:09:22Z"}, "message": "Tell unicode escapes can\u2019t be used as bytes earlier/more", "tree": {"sha": "0e45af275b2db492e30f4a99c86abe9e2023fdc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e45af275b2db492e30f4a99c86abe9e2023fdc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d65ef45491b62fbecdb9a24822c216aa96bb34e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d65ef45491b62fbecdb9a24822c216aa96bb34e", "html_url": "https://github.com/rust-lang/rust/commit/4d65ef45491b62fbecdb9a24822c216aa96bb34e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d65ef45491b62fbecdb9a24822c216aa96bb34e/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d22f189da13f8ffb3c9227a038615608e99a6211", "url": "https://api.github.com/repos/rust-lang/rust/commits/d22f189da13f8ffb3c9227a038615608e99a6211", "html_url": "https://github.com/rust-lang/rust/commit/d22f189da13f8ffb3c9227a038615608e99a6211"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "b6a3788dacc34332ca050b1190fa3718fe816451", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4d65ef45491b62fbecdb9a24822c216aa96bb34e/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d65ef45491b62fbecdb9a24822c216aa96bb34e/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=4d65ef45491b62fbecdb9a24822c216aa96bb34e", "patch": "@@ -738,26 +738,24 @@ impl<'a> StringReader<'a> {\n                         return match e {\n                             'n' | 'r' | 't' | '\\\\' | '\\'' | '\"' | '0' => true,\n                             'x' => self.scan_byte_escape(delim, !ascii_only),\n-                            'u' if self.curr_is('{') => {\n-                                let valid = self.scan_unicode_escape(delim);\n-                                if valid && ascii_only {\n-                                    self.err_span_(\n-                                        start,\n-                                        self.last_pos,\n+                            'u' => {\n+                                let valid = if self.curr_is('{') {\n+                                    self.scan_unicode_escape(delim) && !ascii_only\n+                                } else {\n+                                    self.err_span_(start, self.last_pos,\n+                                        \"incorrect unicode escape sequence\");\n+                                    self.help_span_(start, self.last_pos,\n+                                        \"format of unicode escape sequences is `\\\\u{\u2026}`\");\n+                                    false\n+                                };\n+                                if ascii_only {\n+                                    self.err_span_(start, self.last_pos,\n                                         \"unicode escape sequences cannot be used as a byte or in \\\n                                         a byte string\"\n                                     );\n-                                    false\n-                                } else {\n-                                   valid\n                                 }\n-                            }\n-                            'u' if !ascii_only => {\n-                                self.err_span_(start, self.last_pos,\n-                                    \"incomplete unicode escape sequence\");\n-                                self.help_span_(start, self.last_pos,\n-                                    \"format of unicode escape sequences is `\\\\u{\u2026}`\");\n-                                false\n+                                valid\n+\n                             }\n                             '\\n' if delim == '\"' => {\n                                 self.consume_whitespace();"}, {"sha": "1790b9164b7efd0216e9f5644c000a6bbe6efbe0", "filename": "src/test/parse-fail/issue-23620-invalid-escapes.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d65ef45491b62fbecdb9a24822c216aa96bb34e/src%2Ftest%2Fparse-fail%2Fissue-23620-invalid-escapes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d65ef45491b62fbecdb9a24822c216aa96bb34e/src%2Ftest%2Fparse-fail%2Fissue-23620-invalid-escapes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-23620-invalid-escapes.rs?ref=4d65ef45491b62fbecdb9a24822c216aa96bb34e", "patch": "@@ -16,7 +16,8 @@ fn main() {\n     //~^ ERROR unicode escape sequences cannot be used as a byte or in a byte string\n \n     let _ = b'\\u';\n-    //~^ ERROR unknown byte escape: u\n+    //~^ ERROR incorrect unicode escape sequence\n+    //~^^ ERROR unicode escape sequences cannot be used as a byte or in a byte string\n \n     let _ = b'\\x5';\n     //~^ ERROR numeric character escape is too short\n@@ -35,11 +36,12 @@ fn main() {\n     let _ = b\"\\u{a4a4} \\xf \\u\";\n     //~^ ERROR unicode escape sequences cannot be used as a byte or in a byte string\n     //~^^ ERROR illegal character in numeric character escape:\n-    //~^^^ ERROR unknown byte escape: u\n+    //~^^^ ERROR incorrect unicode escape sequence\n+    //~^^^^ ERROR unicode escape sequences cannot be used as a byte or in a byte string\n \n     let _ = \"\\u{ffffff} \\xf \\u\";\n     //~^ ERROR illegal unicode character escape\n     //~^^ ERROR illegal character in numeric character escape:\n     //~^^^ ERROR form of character escape may only be used with characters in the range [\\x00-\\x7f]\n-    //~^^^^ ERROR incomplete unicode escape sequence\n+    //~^^^^ ERROR incorrect unicode escape sequence\n }"}]}