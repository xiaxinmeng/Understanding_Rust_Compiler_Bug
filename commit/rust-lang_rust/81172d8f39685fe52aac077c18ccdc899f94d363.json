{"sha": "81172d8f39685fe52aac077c18ccdc899f94d363", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMTcyZDhmMzk2ODVmZTUyYWFjMDc3YzE4Y2NkYzg5OWY5NGQzNjM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-03-17T14:08:18Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-03-17T19:58:31Z"}, "message": "Update pretty tests", "tree": {"sha": "a5eee0f267d0731e9934845c21da9bd425900861", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5eee0f267d0731e9934845c21da9bd425900861"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81172d8f39685fe52aac077c18ccdc899f94d363", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81172d8f39685fe52aac077c18ccdc899f94d363", "html_url": "https://github.com/rust-lang/rust/commit/81172d8f39685fe52aac077c18ccdc899f94d363", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81172d8f39685fe52aac077c18ccdc899f94d363/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa20d96c31fed2dad509391109545d8ebba824c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa20d96c31fed2dad509391109545d8ebba824c7", "html_url": "https://github.com/rust-lang/rust/commit/aa20d96c31fed2dad509391109545d8ebba824c7"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "44d2c5db3e668e67fad55215387a9710a4aeb250", "filename": "src/test/pretty/attr-literals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fpretty%2Fattr-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fpretty%2Fattr-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fattr-literals.rs?ref=81172d8f39685fe52aac077c18ccdc899f94d363", "patch": "@@ -5,7 +5,7 @@\n #![feature(rustc_attrs)]\n \n fn main() {\n-    #![rustc_dummy(\"hi\", 1, 2, 1.012, pi = 3.14, bye, name (\"John\"))]\n+    #![rustc_dummy(\"hi\", 1, 2, 1.012, pi = 3.14, bye, name(\"John\"))]\n     #[rustc_dummy = 8]\n     fn f() { }\n "}, {"sha": "66de0fc6cf7fa85c4487d161182f1314bc6d3792", "filename": "src/test/pretty/delimited-token-groups.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs?ref=81172d8f39685fe52aac077c18ccdc899f94d363", "patch": "@@ -7,7 +7,7 @@ macro_rules! mac { ($ ($ tt : tt) *) => () }\n mac! {\n     struct S { field1 : u8, field2 : u16, } impl Clone for S\n     {\n-        fn clone () -> S\n+        fn clone() -> S\n         {\n             panic ! () ;\n \n@@ -16,9 +16,8 @@ mac! {\n }\n \n mac! {\n-    a\n-    (aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n-     aaaaaaaa aaaaaaaa) a\n+    a(aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n+      aaaaaaaa aaaaaaaa) a\n     [aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n      aaaaaaaa aaaaaaaa] a\n     {"}, {"sha": "031a4825959329f11360f13940057b1c8ebcac31", "filename": "src/test/pretty/issue-68710-field-attr-proc-mac-lost.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fpretty%2Fissue-68710-field-attr-proc-mac-lost.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fpretty%2Fissue-68710-field-attr-proc-mac-lost.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue-68710-field-attr-proc-mac-lost.rs?ref=81172d8f39685fe52aac077c18ccdc899f94d363", "patch": "@@ -12,5 +12,5 @@ const C: C =\n       #[cfg(debug_assertions)]\n       field: 0,\n \n-      #[cfg(not (debug_assertions))]\n+      #[cfg(not(debug_assertions))]\n       field: 1,};"}, {"sha": "6217decd8ef88598a80d40f65cbbf3d50304b32e", "filename": "src/test/ui/macros/trace-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr?ref=81172d8f39685fe52aac077c18ccdc899f94d363", "patch": "@@ -5,5 +5,5 @@ LL |     println!(\"Hello, World!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: expanding `println! { \"Hello, World!\" }`\n-   = note: to `{ $crate :: io :: _print ($crate :: format_args_nl ! (\"Hello, World!\")) ; }`\n+   = note: to `{ $crate :: io :: _print($crate :: format_args_nl ! (\"Hello, World!\")) ; }`\n "}, {"sha": "cf9a97491f03941ce9902ed181d1a848cfb8b364", "filename": "src/test/ui/proc-macro/attribute-spans-preserved.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-spans-preserved.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-spans-preserved.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-spans-preserved.stdout?ref=81172d8f39685fe52aac077c18ccdc899f94d363", "patch": "@@ -1 +1 @@\n-fn main () { let y : u32 = \"z\" ; { let x : u32 = \"y\" ; } }\n+fn main() { let y : u32 = \"z\" ; { let x : u32 = \"y\" ; } }"}, {"sha": "15433bebde967df2bfe250a52ab4f89ba4e2b5e0", "filename": "src/test/ui/proc-macro/dollar-crate-issue-57089.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout?ref=81172d8f39685fe52aac077c18ccdc899f94d363", "patch": "@@ -1,4 +1,4 @@\n-PRINT-BANG INPUT (DISPLAY): struct M ($crate :: S) ;\n+PRINT-BANG INPUT (DISPLAY): struct M($crate :: S) ;\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -39,7 +39,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct A(crate::S);\n-PRINT-ATTR RE-COLLECTED (DISPLAY): struct A ($crate :: S) ;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): struct A($crate :: S) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\","}, {"sha": "73e407918ec8cf68b7585d7018eb5105c9ccdaff", "filename": "src/test/ui/proc-macro/dollar-crate-issue-62325.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout?ref=81172d8f39685fe52aac077c18ccdc899f94d363", "patch": "@@ -1,5 +1,5 @@\n PRINT-ATTR INPUT (DISPLAY): struct A(identity!(crate :: S));\n-PRINT-ATTR RE-COLLECTED (DISPLAY): struct A (identity ! ($crate :: S)) ;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): struct A(identity ! ($crate :: S)) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -55,7 +55,7 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct B(identity!(::dollar_crate_external :: S));\n-PRINT-ATTR RE-COLLECTED (DISPLAY): struct B (identity ! ($crate :: S)) ;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): struct B(identity ! ($crate :: S)) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\","}, {"sha": "e125a3e7f17370619ce2917e190fa6b5596d09a1", "filename": "src/test/ui/proc-macro/dollar-crate.stdout", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/81172d8f39685fe52aac077c18ccdc899f94d363/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout?ref=81172d8f39685fe52aac077c18ccdc899f94d363", "patch": "@@ -1,4 +1,4 @@\n-PRINT-BANG INPUT (DISPLAY): struct M ($crate :: S) ;\n+PRINT-BANG INPUT (DISPLAY): struct M($crate :: S) ;\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -39,7 +39,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct A(crate::S);\n-PRINT-ATTR RE-COLLECTED (DISPLAY): struct A ($crate :: S) ;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): struct A($crate :: S) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -80,7 +80,7 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): struct D(crate::S);\n-PRINT-DERIVE RE-COLLECTED (DISPLAY): struct D ($crate :: S) ;\n+PRINT-DERIVE RE-COLLECTED (DISPLAY): struct D($crate :: S) ;\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -120,7 +120,7 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n         span: #3 bytes(LO..HI),\n     },\n ]\n-PRINT-BANG INPUT (DISPLAY): struct M ($crate :: S) ;\n+PRINT-BANG INPUT (DISPLAY): struct M($crate :: S) ;\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -161,7 +161,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct A(::dollar_crate_external::S);\n-PRINT-ATTR RE-COLLECTED (DISPLAY): struct A ($crate :: S) ;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): struct A($crate :: S) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -202,7 +202,7 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): struct D(::dollar_crate_external::S);\n-PRINT-DERIVE RE-COLLECTED (DISPLAY): struct D ($crate :: S) ;\n+PRINT-DERIVE RE-COLLECTED (DISPLAY): struct D($crate :: S) ;\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\","}]}