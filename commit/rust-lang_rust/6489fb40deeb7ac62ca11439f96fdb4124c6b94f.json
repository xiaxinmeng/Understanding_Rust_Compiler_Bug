{"sha": "6489fb40deeb7ac62ca11439f96fdb4124c6b94f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ODlmYjQwZGVlYjdhYzYyY2ExMTQzOWY5NmZkYjQxMjRjNmI5NGY=", "commit": {"author": {"name": "Tobias Mu\u0308ller", "email": "troplin@bluewin.ch", "date": "2016-03-28T19:37:36Z"}, "committer": {"name": "Tobias Mu\u0308ller", "email": "troplin@bluewin.ch", "date": "2016-03-28T19:37:36Z"}, "message": "Use ? instead of try!, add some basic tests", "tree": {"sha": "8b6dd4ab94484fe32a77c91e62187c509202303b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b6dd4ab94484fe32a77c91e62187c509202303b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6489fb40deeb7ac62ca11439f96fdb4124c6b94f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6489fb40deeb7ac62ca11439f96fdb4124c6b94f", "html_url": "https://github.com/rust-lang/rust/commit/6489fb40deeb7ac62ca11439f96fdb4124c6b94f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6489fb40deeb7ac62ca11439f96fdb4124c6b94f/comments", "author": {"login": "troplin", "id": 13793075, "node_id": "MDQ6VXNlcjEzNzkzMDc1", "avatar_url": "https://avatars.githubusercontent.com/u/13793075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troplin", "html_url": "https://github.com/troplin", "followers_url": "https://api.github.com/users/troplin/followers", "following_url": "https://api.github.com/users/troplin/following{/other_user}", "gists_url": "https://api.github.com/users/troplin/gists{/gist_id}", "starred_url": "https://api.github.com/users/troplin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troplin/subscriptions", "organizations_url": "https://api.github.com/users/troplin/orgs", "repos_url": "https://api.github.com/users/troplin/repos", "events_url": "https://api.github.com/users/troplin/events{/privacy}", "received_events_url": "https://api.github.com/users/troplin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "troplin", "id": 13793075, "node_id": "MDQ6VXNlcjEzNzkzMDc1", "avatar_url": "https://avatars.githubusercontent.com/u/13793075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troplin", "html_url": "https://github.com/troplin", "followers_url": "https://api.github.com/users/troplin/followers", "following_url": "https://api.github.com/users/troplin/following{/other_user}", "gists_url": "https://api.github.com/users/troplin/gists{/gist_id}", "starred_url": "https://api.github.com/users/troplin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troplin/subscriptions", "organizations_url": "https://api.github.com/users/troplin/orgs", "repos_url": "https://api.github.com/users/troplin/repos", "events_url": "https://api.github.com/users/troplin/events{/privacy}", "received_events_url": "https://api.github.com/users/troplin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "373f93a629313dccd1858e403e99fb25709947a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/373f93a629313dccd1858e403e99fb25709947a4", "html_url": "https://github.com/rust-lang/rust/commit/373f93a629313dccd1858e403e99fb25709947a4"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "c329fb3bfa50e55a33a8070fb40c5fa88c705e18", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/6489fb40deeb7ac62ca11439f96fdb4124c6b94f/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6489fb40deeb7ac62ca11439f96fdb4124c6b94f/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=6489fb40deeb7ac62ca11439f96fdb4124c6b94f", "patch": "@@ -1446,7 +1446,7 @@ impl<T: Read, U: Read> Read for Chain<T, U> {\n impl<T: BufRead, U: BufRead> BufRead for Chain<T, U> {\n     fn fill_buf(&mut self) -> Result<&[u8]> {\n         if !self.done_first {\n-            match try!(self.first.fill_buf()) {\n+            match self.first.fill_buf()? {\n                 buf if buf.len() == 0 => { self.done_first = true; }\n                 buf => return Ok(buf),\n             }\n@@ -1865,6 +1865,36 @@ mod tests {\n         assert_eq!(0, R.take(0).read(&mut buf).unwrap());\n     }\n \n+    fn cmp_bufread<Br1: BufRead, Br2: BufRead>(mut br1: Br1, mut br2: Br2, exp: &[u8]) {\n+        let mut cat = Vec::new();\n+        loop {\n+            let consume = {\n+                let buf1 = br1.fill_buf().unwrap();\n+                let buf2 = br2.fill_buf().unwrap();\n+                let minlen = if buf1.len() < buf2.len() { buf1.len() } else { buf2.len() };\n+                assert_eq!(buf1[..minlen], buf2[..minlen]);\n+                cat.extend_from_slice(&buf1[..minlen]);\n+                minlen\n+            };\n+            if consume == 0 {\n+                break;\n+            }\n+            br1.consume(consume);\n+            br2.consume(consume);\n+        }\n+        assert_eq!(br1.fill_buf().unwrap().len(), 0);\n+        assert_eq!(br2.fill_buf().unwrap().len(), 0);\n+        assert_eq!(&cat[..], &exp[..])\n+    }\n+\n+    #[test]\n+    fn chain_bufread() {\n+        let testdata = b\"ABCDEFGHIJKL\";\n+        let chain1 = (&testdata[..3]).chain(&testdata[3..6]).chain(&testdata[6..9]).chain(&testdata[9..]);\n+        let chain2 = (&testdata[..4]).chain(&testdata[4..8]).chain(&testdata[8..]);\n+        cmp_bufread(chain1, chain2, &testdata[..]);\n+    }\n+\n     #[bench]\n     fn bench_read_to_end(b: &mut test::Bencher) {\n         b.iter(|| {"}]}