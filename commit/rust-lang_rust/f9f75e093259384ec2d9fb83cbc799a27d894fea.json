{"sha": "f9f75e093259384ec2d9fb83cbc799a27d894fea", "node_id": "C_kwDOAAsO6NoAKGY5Zjc1ZTA5MzI1OTM4NGVjMmQ5ZmI4M2NiYzc5OWEyN2Q4OTRmZWE", "commit": {"author": {"name": "Evan Typanski", "email": "evantypanski@gmail.com", "date": "2023-01-24T23:18:35Z"}, "committer": {"name": "Evan Typanski", "email": "evantypanski@gmail.com", "date": "2023-01-24T23:22:35Z"}, "message": "Lint `unused_io_amount` with `is_ok` and `is_err`", "tree": {"sha": "c0b30c8ae67a6c2367ed4a71a4a4113d3677e69c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0b30c8ae67a6c2367ed4a71a4a4113d3677e69c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9f75e093259384ec2d9fb83cbc799a27d894fea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9f75e093259384ec2d9fb83cbc799a27d894fea", "html_url": "https://github.com/rust-lang/rust/commit/f9f75e093259384ec2d9fb83cbc799a27d894fea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9f75e093259384ec2d9fb83cbc799a27d894fea/comments", "author": {"login": "evantypanski", "id": 22875724, "node_id": "MDQ6VXNlcjIyODc1NzI0", "avatar_url": "https://avatars.githubusercontent.com/u/22875724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evantypanski", "html_url": "https://github.com/evantypanski", "followers_url": "https://api.github.com/users/evantypanski/followers", "following_url": "https://api.github.com/users/evantypanski/following{/other_user}", "gists_url": "https://api.github.com/users/evantypanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/evantypanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evantypanski/subscriptions", "organizations_url": "https://api.github.com/users/evantypanski/orgs", "repos_url": "https://api.github.com/users/evantypanski/repos", "events_url": "https://api.github.com/users/evantypanski/events{/privacy}", "received_events_url": "https://api.github.com/users/evantypanski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "evantypanski", "id": 22875724, "node_id": "MDQ6VXNlcjIyODc1NzI0", "avatar_url": "https://avatars.githubusercontent.com/u/22875724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evantypanski", "html_url": "https://github.com/evantypanski", "followers_url": "https://api.github.com/users/evantypanski/followers", "following_url": "https://api.github.com/users/evantypanski/following{/other_user}", "gists_url": "https://api.github.com/users/evantypanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/evantypanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evantypanski/subscriptions", "organizations_url": "https://api.github.com/users/evantypanski/orgs", "repos_url": "https://api.github.com/users/evantypanski/repos", "events_url": "https://api.github.com/users/evantypanski/events{/privacy}", "received_events_url": "https://api.github.com/users/evantypanski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41b2a3d9fe20784bb1be0ac87a15fea015c3eac2", "url": "https://api.github.com/repos/rust-lang/rust/commits/41b2a3d9fe20784bb1be0ac87a15fea015c3eac2", "html_url": "https://github.com/rust-lang/rust/commit/41b2a3d9fe20784bb1be0ac87a15fea015c3eac2"}], "stats": {"total": 54, "additions": 47, "deletions": 7}, "files": [{"sha": "0e526c216beeadda0306b2ffdc825bbfdedea4f0", "filename": "clippy_lints/src/unused_io_amount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9f75e093259384ec2d9fb83cbc799a27d894fea/clippy_lints%2Fsrc%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9f75e093259384ec2d9fb83cbc799a27d894fea/clippy_lints%2Fsrc%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_io_amount.rs?ref=f9f75e093259384ec2d9fb83cbc799a27d894fea", "patch": "@@ -65,7 +65,7 @@ impl<'tcx> LateLintPass<'tcx> for UnusedIoAmount {\n                 }\n             },\n             hir::ExprKind::MethodCall(path, arg_0, ..) => match path.ident.as_str() {\n-                \"expect\" | \"unwrap\" | \"unwrap_or\" | \"unwrap_or_else\" => {\n+                \"expect\" | \"unwrap\" | \"unwrap_or\" | \"unwrap_or_else\" | \"is_ok\" | \"is_err\" => {\n                     check_map_error(cx, arg_0, expr);\n                 },\n                 _ => (),"}, {"sha": "8d3e094b75967bf6741d58d38f4df882b3fb42be", "filename": "tests/ui/unused_io_amount.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f9f75e093259384ec2d9fb83cbc799a27d894fea/tests%2Fui%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9f75e093259384ec2d9fb83cbc799a27d894fea/tests%2Fui%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.rs?ref=f9f75e093259384ec2d9fb83cbc799a27d894fea", "patch": "@@ -63,6 +63,14 @@ fn combine_or(file: &str) -> Result<(), Error> {\n     Ok(())\n }\n \n+fn is_ok_err<T: io::Read + io::Write>(s: &mut T) {\n+    s.write(b\"ok\").is_ok();\n+    s.write(b\"err\").is_err();\n+    let mut buf = [0u8; 0];\n+    s.read(&mut buf).is_ok();\n+    s.read(&mut buf).is_err();\n+}\n+\n async fn bad_async_write<W: AsyncWrite + Unpin>(w: &mut W) {\n     w.write(b\"hello world\").await.unwrap();\n }"}, {"sha": "0865c5213f6873e94cc8dfa3eb5b1e0e5fe48ae7", "filename": "tests/ui/unused_io_amount.stderr", "status": "modified", "additions": 38, "deletions": 6, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/f9f75e093259384ec2d9fb83cbc799a27d894fea/tests%2Fui%2Funused_io_amount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f9f75e093259384ec2d9fb83cbc799a27d894fea/tests%2Fui%2Funused_io_amount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.stderr?ref=f9f75e093259384ec2d9fb83cbc799a27d894fea", "patch": "@@ -82,50 +82,82 @@ LL | |         .expect(\"error\");\n error: written amount is not handled\n   --> $DIR/unused_io_amount.rs:67:5\n    |\n+LL |     s.write(b\"ok\").is_ok();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: use `Write::write_all` instead, or handle partial writes\n+\n+error: written amount is not handled\n+  --> $DIR/unused_io_amount.rs:68:5\n+   |\n+LL |     s.write(b\"err\").is_err();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: use `Write::write_all` instead, or handle partial writes\n+\n+error: read amount is not handled\n+  --> $DIR/unused_io_amount.rs:70:5\n+   |\n+LL |     s.read(&mut buf).is_ok();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: use `Read::read_exact` instead, or handle partial reads\n+\n+error: read amount is not handled\n+  --> $DIR/unused_io_amount.rs:71:5\n+   |\n+LL |     s.read(&mut buf).is_err();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: use `Read::read_exact` instead, or handle partial reads\n+\n+error: written amount is not handled\n+  --> $DIR/unused_io_amount.rs:75:5\n+   |\n LL |     w.write(b\"hello world\").await.unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use `AsyncWriteExt::write_all` instead, or handle partial writes\n \n error: read amount is not handled\n-  --> $DIR/unused_io_amount.rs:72:5\n+  --> $DIR/unused_io_amount.rs:80:5\n    |\n LL |     r.read(&mut buf[..]).await.unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use `AsyncReadExt::read_exact` instead, or handle partial reads\n \n error: written amount is not handled\n-  --> $DIR/unused_io_amount.rs:85:9\n+  --> $DIR/unused_io_amount.rs:93:9\n    |\n LL |         w.write(b\"hello world\").await?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use `AsyncWriteExt::write_all` instead, or handle partial writes\n \n error: read amount is not handled\n-  --> $DIR/unused_io_amount.rs:93:9\n+  --> $DIR/unused_io_amount.rs:101:9\n    |\n LL |         r.read(&mut buf[..]).await.or(Err(Error::Kind))?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use `AsyncReadExt::read_exact` instead, or handle partial reads\n \n error: written amount is not handled\n-  --> $DIR/unused_io_amount.rs:101:5\n+  --> $DIR/unused_io_amount.rs:109:5\n    |\n LL |     w.write(b\"hello world\").await.unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use `AsyncWriteExt::write_all` instead, or handle partial writes\n \n error: read amount is not handled\n-  --> $DIR/unused_io_amount.rs:106:5\n+  --> $DIR/unused_io_amount.rs:114:5\n    |\n LL |     r.read(&mut buf[..]).await.unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use `AsyncReadExt::read_exact` instead, or handle partial reads\n \n-error: aborting due to 16 previous errors\n+error: aborting due to 20 previous errors\n "}]}