{"sha": "b01bf0e9d311332d7942619845281af4b9da54bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMWJmMGU5ZDMxMTMzMmQ3OTQyNjE5ODQ1MjgxYWY0YjlkYTU0YmI=", "commit": {"author": {"name": "CDirkx", "email": "christiaan@dirkx.email", "date": "2021-03-22T03:22:11Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-03-26T11:38:27Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: David Tolnay <dtolnay@gmail.com>", "tree": {"sha": "04f3e306d8d72b7d6859c13257838c4cea9df464", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04f3e306d8d72b7d6859c13257838c4cea9df464"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b01bf0e9d311332d7942619845281af4b9da54bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b01bf0e9d311332d7942619845281af4b9da54bb", "html_url": "https://github.com/rust-lang/rust/commit/b01bf0e9d311332d7942619845281af4b9da54bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b01bf0e9d311332d7942619845281af4b9da54bb/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dbed6161a94aeb84fdae332f5b93476b6626515", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dbed6161a94aeb84fdae332f5b93476b6626515", "html_url": "https://github.com/rust-lang/rust/commit/0dbed6161a94aeb84fdae332f5b93476b6626515"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "3f810ffa8ca5999a08f8453cf69f927f95470e50", "filename": "library/std/src/sys/windows/alloc.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01bf0e9d311332d7942619845281af4b9da54bb/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01bf0e9d311332d7942619845281af4b9da54bb/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc.rs?ref=b01bf0e9d311332d7942619845281af4b9da54bb", "patch": "@@ -148,13 +148,15 @@ unsafe impl GlobalAlloc for System {\n     #[inline]\n     unsafe fn alloc(&self, layout: Layout) -> *mut u8 {\n         // SAFETY: pointers returned by `allocate` satisfy the guarantees of `System`\n-        unsafe { allocate(layout, false) }\n+        let zeroed = false;\n+        unsafe { allocate(layout, zeroed) }\n     }\n \n     #[inline]\n     unsafe fn alloc_zeroed(&self, layout: Layout) -> *mut u8 {\n         // SAFETY: pointers returned by `allocate` satisfy the guarantees of `System`\n-        unsafe { allocate(layout, true) }\n+        let zeroed = true;\n+        unsafe { allocate(layout, zeroed) }\n     }\n \n     #[inline]"}]}