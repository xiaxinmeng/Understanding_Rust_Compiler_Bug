{"sha": "eb75a644a1c4483a74027d8936b3cfb9a02b0957", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNzVhNjQ0YTFjNDQ4M2E3NDAyN2Q4OTM2YjNjZmI5YTAyYjA5NTc=", "commit": {"author": {"name": "daxpedda", "email": "daxpedda@gmail.com", "date": "2020-07-02T14:13:24Z"}, "committer": {"name": "daxpedda", "email": "daxpedda@gmail.com", "date": "2020-07-02T14:13:24Z"}, "message": "Implement rust-analyzer feature configuration to tests.", "tree": {"sha": "45489f2de69c156ea9c48cc449327a86f11085b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45489f2de69c156ea9c48cc449327a86f11085b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb75a644a1c4483a74027d8936b3cfb9a02b0957", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3qx/rJh59vdc2+v9Q9YqPqOI5G8FAl7964gACgkQQ9YqPqOI\n5G9L7w//V8wdcgGXwgQqsZ/2o7sZIo+85nZRAnCPODHDE0UxLodAqZP4ug84P0P8\n57KqMfQHGppHUQgprYCjw7n/vIK6/lEJ7UBAsYrAYKprq5RhfbRn+VpN+IEprDNl\nKDb5XrMijXmkyz+JgC7iPNJ1Nu7KfqenurafPRnwc66mU7iQCDUxZO1Gu0YpX3Vw\nfBjdBOrJdG4pnQTbtk0Sm5N/gyYi5t/H7afgArIIPqmRy3dilRWznOFH6W0CjJOP\nBPBoNTy5aNrK0eF9abHwfyD7uM6hTr+oVwfs0SoynLnACmYUN5tNepzpZZ4REi5q\nMqZRldtu7BYo3jLdFn+82Va073M/2ULRodzAl23Rd0ohRkH0KpMxY7MrR7PRllea\nvf8663sQnvQRVD+u4AuNvsO4AaIkl8v8/UfQDM+5lUNfT7LZqPBwYf49u1qukwFL\nkEKrYv7SlqpW51tzru1qPy5h83LXTXwcGrKFf2MBOOybMpMiabv6hROkBEmgANn8\nxADWrbo5g+gG85i6oeGr4ndxisBi8J6DATVTsfBmmTm3USDl/J5awvOHcudUkUav\ncguPSwzeXSreBK5kftQI7bo46aA8bI2nopwZLy613G2lRPRSW6xKNzom3U2k+nR1\nq6lYWL8+vs0FLtGbgJbKRXIf0kwS96jsSjq/YveLY7LHko4uiVM=\n=av8z\n-----END PGP SIGNATURE-----", "payload": "tree 45489f2de69c156ea9c48cc449327a86f11085b9\nparent 57ed622ec4f0f71a618f99a46aa0026e81eb2583\nauthor daxpedda <daxpedda@gmail.com> 1593699204 +0200\ncommitter daxpedda <daxpedda@gmail.com> 1593699204 +0200\n\nImplement rust-analyzer feature configuration to tests.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb75a644a1c4483a74027d8936b3cfb9a02b0957", "html_url": "https://github.com/rust-lang/rust/commit/eb75a644a1c4483a74027d8936b3cfb9a02b0957", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb75a644a1c4483a74027d8936b3cfb9a02b0957/comments", "author": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57ed622ec4f0f71a618f99a46aa0026e81eb2583", "url": "https://api.github.com/repos/rust-lang/rust/commits/57ed622ec4f0f71a618f99a46aa0026e81eb2583", "html_url": "https://github.com/rust-lang/rust/commit/57ed622ec4f0f71a618f99a46aa0026e81eb2583"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "929926cbc5bb50b583e1219f5a7e1c8829595de4", "filename": "crates/rust-analyzer/src/cargo_target_spec.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/eb75a644a1c4483a74027d8936b3cfb9a02b0957/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb75a644a1c4483a74027d8936b3cfb9a02b0957/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs?ref=eb75a644a1c4483a74027d8936b3cfb9a02b0957", "patch": "@@ -21,6 +21,7 @@ pub(crate) struct CargoTargetSpec {\n \n impl CargoTargetSpec {\n     pub(crate) fn runnable_args(\n+        snap: &GlobalStateSnapshot,\n         spec: Option<CargoTargetSpec>,\n         kind: &RunnableKind,\n         cfgs: &[CfgExpr],\n@@ -78,13 +79,21 @@ impl CargoTargetSpec {\n             }\n         }\n \n-        let mut features = Vec::new();\n-        for cfg in cfgs {\n-            required_features(cfg, &mut features);\n-        }\n-        for feature in features {\n-            args.push(\"--features\".to_string());\n-            args.push(feature);\n+        if snap.config.cargo.all_features {\n+            args.push(\"--all-features\".to_string());\n+        } else {\n+            let mut features = Vec::new();\n+            for cfg in cfgs {\n+                required_features(cfg, &mut features);\n+            }\n+            for feature in &snap.config.cargo.features {\n+                features.push(feature.clone());\n+            }\n+            features.dedup();\n+            for feature in features {\n+                args.push(\"--features\".to_string());\n+                args.push(feature);\n+            }\n         }\n \n         Ok((args, extra_args))"}, {"sha": "652a4469468aaa903a79cf568f7b00c40211529d", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb75a644a1c4483a74027d8936b3cfb9a02b0957/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb75a644a1c4483a74027d8936b3cfb9a02b0957/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=eb75a644a1c4483a74027d8936b3cfb9a02b0957", "patch": "@@ -666,7 +666,7 @@ pub(crate) fn runnable(\n     let workspace_root = spec.as_ref().map(|it| it.workspace_root.clone());\n     let target = spec.as_ref().map(|s| s.target.clone());\n     let (cargo_args, executable_args) =\n-        CargoTargetSpec::runnable_args(spec, &runnable.kind, &runnable.cfg_exprs)?;\n+        CargoTargetSpec::runnable_args(snap, spec, &runnable.kind, &runnable.cfg_exprs)?;\n     let label = runnable.label(target);\n     let location = location_link(snap, None, runnable.nav)?;\n "}]}