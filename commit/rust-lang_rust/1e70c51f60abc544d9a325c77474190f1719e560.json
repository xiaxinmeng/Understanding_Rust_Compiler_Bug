{"sha": "1e70c51f60abc544d9a325c77474190f1719e560", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNzBjNTFmNjBhYmM1NDRkOWEzMjVjNzc0NzQxOTBmMTcxOWU1NjA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-05-29T09:12:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-29T09:12:02Z"}, "message": "Merge pull request #1022 from osa1/clif_dump_in_release_mode\n\nDump clif with --emit llvm-ir in release mode", "tree": {"sha": "334b7707f98474de2234ede2969181673ffc1360", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/334b7707f98474de2234ede2969181673ffc1360"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e70c51f60abc544d9a325c77474190f1719e560", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0NHiCRBK7hj4Ov3rIwAAdHIIALMTGBr2l75kxqGtIcMGmOhy\nfibaPGlPYRgp+80sPFGFskCQyszQoD5oXTezpgihEQ4Px5anTKDNRhDinaTwF2fS\nWlNm3OQ0BY3Q54ESclMdptcHdOer12SUnemywtZZgRhQZteCMdrjFIbPjuEilHBD\ndd1fzNQGdr4sZv9nhizLPDqsvNu4bChBPs9bfz0EZLYnnzWTnBiNtDqaVOYsSM+w\nieyXCkUzPG0HTp5voraUC12G6G2wB5K3xX0IDXPmeqbb6bXWoOt9+MfwyoJsXpP4\nvbkwcXs67CeOu7oJvhdvgWNhSk8Far/DDQLktlyEPTVsidlBsL06o4k6GyP5TIA=\n=1sHW\n-----END PGP SIGNATURE-----\n", "payload": "tree 334b7707f98474de2234ede2969181673ffc1360\nparent acbfa06ea2aa298de1591c8bb9a483151f254c2d\nparent c0ad988a3a994720904be8d77e92004daadda91c\nauthor bjorn3 <bjorn3@users.noreply.github.com> 1590743522 +0200\ncommitter GitHub <noreply@github.com> 1590743522 +0200\n\nMerge pull request #1022 from osa1/clif_dump_in_release_mode\n\nDump clif with --emit llvm-ir in release mode"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e70c51f60abc544d9a325c77474190f1719e560", "html_url": "https://github.com/rust-lang/rust/commit/1e70c51f60abc544d9a325c77474190f1719e560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e70c51f60abc544d9a325c77474190f1719e560/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acbfa06ea2aa298de1591c8bb9a483151f254c2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/acbfa06ea2aa298de1591c8bb9a483151f254c2d", "html_url": "https://github.com/rust-lang/rust/commit/acbfa06ea2aa298de1591c8bb9a483151f254c2d"}, {"sha": "c0ad988a3a994720904be8d77e92004daadda91c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0ad988a3a994720904be8d77e92004daadda91c", "html_url": "https://github.com/rust-lang/rust/commit/c0ad988a3a994720904be8d77e92004daadda91c"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "16b320930d9b66ebc0618f48f6fec4a8ca975754", "filename": "src/base.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e70c51f60abc544d9a325c77474190f1719e560/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e70c51f60abc544d9a325c77474190f1719e560/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=1e70c51f60abc544d9a325c77474190f1719e560", "patch": "@@ -77,7 +77,6 @@ pub(crate) fn trans_fn<'clif, 'tcx, B: Backend + 'static>(\n     let local_map = fx.local_map;\n     let cold_blocks = fx.cold_blocks;\n \n-    #[cfg(debug_assertions)]\n     crate::pretty_clif::write_clif_file(cx.tcx, \"unopt\", instance, &context.func, &clif_comments, None);\n \n     // Verify function\n@@ -106,7 +105,6 @@ pub(crate) fn trans_fn<'clif, 'tcx, B: Backend + 'static>(\n     );\n \n     // Write optimized function to file for debugging\n-    #[cfg(debug_assertions)]\n     {\n         let value_ranges = context\n             .build_value_labels_ranges(cx.module.isa())"}, {"sha": "f4a33ddd82e810e5c129180fe50593dedc063b03", "filename": "src/optimize/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e70c51f60abc544d9a325c77474190f1719e560/src%2Foptimize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e70c51f60abc544d9a325c77474190f1719e560/src%2Foptimize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foptimize%2Fmod.rs?ref=1e70c51f60abc544d9a325c77474190f1719e560", "patch": "@@ -18,7 +18,6 @@ pub(crate) fn optimize_function<'tcx>(\n         return; // FIXME classify optimizations over opt levels\n     }\n     self::stack2reg::optimize_function(ctx, clif_comments);\n-    #[cfg(debug_assertions)]\n     crate::pretty_clif::write_clif_file(tcx, \"stack2reg\", instance, &ctx.func, &*clif_comments, None);\n     crate::base::verify_func(tcx, &*clif_comments, &ctx.func);\n }"}, {"sha": "60dd97ab3fb4eb9143c4baad870801fe6f90a933", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1e70c51f60abc544d9a325c77474190f1719e560/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e70c51f60abc544d9a325c77474190f1719e560/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=1e70c51f60abc544d9a325c77474190f1719e560", "patch": "@@ -6,6 +6,8 @@ use cranelift_codegen::{\n     write::{FuncWriter, PlainWriter},\n };\n \n+use rustc_session::config::OutputType;\n+\n use crate::prelude::*;\n \n /// This module provides the [CommentWriter] which makes it possible\n@@ -198,7 +200,6 @@ impl<B: Backend + 'static> FunctionCx<'_, '_, B> {\n     }\n }\n \n-#[cfg(debug_assertions)]\n pub(crate) fn write_clif_file<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     postfix: &str,\n@@ -207,6 +208,10 @@ pub(crate) fn write_clif_file<'tcx>(\n     mut clif_comments: &CommentWriter,\n     value_ranges: Option<&cranelift_codegen::ValueLabelsRanges>,\n ) {\n+    if !cfg!(debug_assertions) && !tcx.sess.opts.output_types.contains_key(&OutputType::LlvmAssembly) {\n+        return;\n+    }\n+\n     use std::io::Write;\n \n     let symbol_name = tcx.symbol_name(instance).name.as_str();"}]}