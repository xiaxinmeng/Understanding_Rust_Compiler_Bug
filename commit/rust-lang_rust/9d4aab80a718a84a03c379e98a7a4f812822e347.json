{"sha": "9d4aab80a718a84a03c379e98a7a4f812822e347", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNGFhYjgwYTcxOGE4NGEwM2MzNzllOThhN2E0ZjgxMjgyMmUzNDc=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-07-21T02:19:44Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-07-24T00:15:30Z"}, "message": "libcore: add vec::{mut_view, const_view}.", "tree": {"sha": "762dab62e494edbba61d6cd50d56ace6a0f5973d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/762dab62e494edbba61d6cd50d56ace6a0f5973d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d4aab80a718a84a03c379e98a7a4f812822e347", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d4aab80a718a84a03c379e98a7a4f812822e347", "html_url": "https://github.com/rust-lang/rust/commit/9d4aab80a718a84a03c379e98a7a4f812822e347", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d4aab80a718a84a03c379e98a7a4f812822e347/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a762c725b523a669159b68d42490668b0a2cc1d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a762c725b523a669159b68d42490668b0a2cc1d6", "html_url": "https://github.com/rust-lang/rust/commit/a762c725b523a669159b68d42490668b0a2cc1d6"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "aa0a9f36b95a5fd0c6220c5b6f012c6a5453ed4a", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9d4aab80a718a84a03c379e98a7a4f812822e347/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d4aab80a718a84a03c379e98a7a4f812822e347/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=9d4aab80a718a84a03c379e98a7a4f812822e347", "patch": "@@ -27,7 +27,7 @@ export init;\n export last;\n export last_opt;\n export slice;\n-export view;\n+export view, mut_view, const_view;\n export split;\n export splitn;\n export rsplit;\n@@ -325,6 +325,30 @@ pure fn view<T>(v: &[T], start: uint, end: uint) -> &[T] {\n     }\n }\n \n+/// Return a slice that points into another slice.\n+pure fn mut_view<T>(v: &[mut T], start: uint, end: uint) -> &[mut T] {\n+    assert (start <= end);\n+    assert (end <= len(v));\n+    do unpack_slice(v) |p, _len| {\n+        unsafe {\n+            ::unsafe::reinterpret_cast(\n+                (ptr::offset(p, start), (end - start) * sys::size_of::<T>()))\n+        }\n+    }\n+}\n+\n+/// Return a slice that points into another slice.\n+pure fn const_view<T>(v: &[const T], start: uint, end: uint) -> &[const T] {\n+    assert (start <= end);\n+    assert (end <= len(v));\n+    do unpack_slice(v) |p, _len| {\n+        unsafe {\n+            ::unsafe::reinterpret_cast(\n+                (ptr::offset(p, start), (end - start) * sys::size_of::<T>()))\n+        }\n+    }\n+}\n+\n /// Split the vector `v` by applying each element against the predicate `f`.\n fn split<T: copy>(v: &[T], f: fn(T) -> bool) -> ~[~[T]] {\n     let ln = len(v);"}]}