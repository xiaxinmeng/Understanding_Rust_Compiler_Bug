{"sha": "5f0c6e5539c66c251f562542cc6c1c01bcbdc75c", "node_id": "C_kwDOAAsO6NoAKDVmMGM2ZTU1MzljNjZjMjUxZjU2MjU0MmNjNmMxYzAxYmNiZGM3NWM", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-11-22T17:01:43Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-11-22T17:01:43Z"}, "message": "Fix allocated reg in AT&T style asm", "tree": {"sha": "ce70df753451733fead8fd2253481f19bd40d9bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce70df753451733fead8fd2253481f19bd40d9bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f0c6e5539c66c251f562542cc6c1c01bcbdc75c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f0c6e5539c66c251f562542cc6c1c01bcbdc75c", "html_url": "https://github.com/rust-lang/rust/commit/5f0c6e5539c66c251f562542cc6c1c01bcbdc75c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f0c6e5539c66c251f562542cc6c1c01bcbdc75c/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9534a9bc997833ccca51dcdcc922fb0df1790e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9534a9bc997833ccca51dcdcc922fb0df1790e1", "html_url": "https://github.com/rust-lang/rust/commit/f9534a9bc997833ccca51dcdcc922fb0df1790e1"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "706d9cdc166e6c283b5a95f05f3e9d5f130792f3", "filename": "src/inline_asm.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5f0c6e5539c66c251f562542cc6c1c01bcbdc75c/src%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f0c6e5539c66c251f562542cc6c1c01bcbdc75c/src%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finline_asm.rs?ref=5f0c6e5539c66c251f562542cc6c1c01bcbdc75c", "patch": "@@ -438,6 +438,9 @@ impl<'tcx> InlineAssemblyGenerator<'_, 'tcx> {\n                     generated_asm.push_str(s);\n                 }\n                 InlineAsmTemplatePiece::Placeholder { operand_idx, modifier, span: _ } => {\n+                    if self.options.contains(InlineAsmOptions::ATT_SYNTAX) {\n+                        generated_asm.push('%');\n+                    }\n                     self.registers[*operand_idx]\n                         .unwrap()\n                         .emit(&mut generated_asm, self.arch, *modifier)"}]}