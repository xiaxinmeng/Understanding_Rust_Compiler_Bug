{"sha": "effc1eae8be338ea949058cc89c39950c25858c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZmMxZWFlOGJlMzM4ZWE5NDkwNThjYzg5YzM5OTUwYzI1ODU4YzU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-30T20:02:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-30T20:02:26Z"}, "message": "migrate gen-lsp-server to new crossbeam", "tree": {"sha": "05d34a0020e1a14791d1b33dfe26572cadce457a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05d34a0020e1a14791d1b33dfe26572cadce457a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/effc1eae8be338ea949058cc89c39950c25858c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/effc1eae8be338ea949058cc89c39950c25858c5", "html_url": "https://github.com/rust-lang/rust/commit/effc1eae8be338ea949058cc89c39950c25858c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/effc1eae8be338ea949058cc89c39950c25858c5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0d1b17a4e976e07966a1d7f545b6e01d278fd08", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0d1b17a4e976e07966a1d7f545b6e01d278fd08", "html_url": "https://github.com/rust-lang/rust/commit/c0d1b17a4e976e07966a1d7f545b6e01d278fd08"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "7f3723f2e08e778a2a0c021ac6ad6042d336beea", "filename": "Cargo.lock", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/effc1eae8be338ea949058cc89c39950c25858c5/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/effc1eae8be338ea949058cc89c39950c25858c5/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=effc1eae8be338ea949058cc89c39950c25858c5", "patch": "@@ -176,6 +176,17 @@ dependencies = [\n  \"smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"crossbeam-channel\"\n+version = \"0.3.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"crossbeam-utils 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"parking_lot 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"crossbeam-deque\"\n version = \"0.2.0\"\n@@ -355,7 +366,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n name = \"gen_lsp_server\"\n version = \"0.1.0\"\n dependencies = [\n- \"crossbeam-channel 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"crossbeam-channel 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"languageserver-types 0.53.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1544,6 +1555,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b957d88f4b6a63b9d70d5f454ac8011819c6efa7727858f458ab71c756ce2d3e\"\n \"checksum cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f\"\n \"checksum crossbeam-channel 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7b85741761b7f160bc5e7e0c14986ef685b7f8bf9b7ad081c60c604bb4649827\"\n+\"checksum crossbeam-channel 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"137bc235f622ffaa0428e3854e24acb53291fc0b3ff6fb2cb75a8be6fb02f06b\"\n \"checksum crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f739f8c5363aca78cfb059edf753d8f0d36908c348f3d8d1503f03d8b75d9cf3\"\n \"checksum crossbeam-epoch 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"927121f5407de9956180ff5e936fe3cf4324279280001cd56b669d28ee7e9150\"\n \"checksum crossbeam-epoch 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2449aaa4ec7ef96e5fb24db16024b935df718e9ae1cec0a1e68feeca2efca7b8\""}, {"sha": "2aee4ea16653347e4dbb45b9b3ee0042c8d46da7", "filename": "crates/gen_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/effc1eae8be338ea949058cc89c39950c25858c5/crates%2Fgen_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/effc1eae8be338ea949058cc89c39950c25858c5/crates%2Fgen_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fgen_lsp_server%2FCargo.toml?ref=effc1eae8be338ea949058cc89c39950c25858c5", "patch": "@@ -13,4 +13,4 @@ log = \"0.4.3\"\n failure = \"0.1.2\"\n serde_json = \"1.0.24\"\n serde = { version = \"1.0.83\", features = [\"derive\"] }\n-crossbeam-channel = \"0.2.4\"\n+crossbeam-channel = \"0.3.5\""}, {"sha": "b206529285165410af02212ddb04a700ec3a726f", "filename": "crates/gen_lsp_server/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/effc1eae8be338ea949058cc89c39950c25858c5/crates%2Fgen_lsp_server%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effc1eae8be338ea949058cc89c39950c25858c5/crates%2Fgen_lsp_server%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fgen_lsp_server%2Fsrc%2Flib.rs?ref=effc1eae8be338ea949058cc89c39950c25858c5", "patch": "@@ -95,7 +95,7 @@ pub fn run_server(\n     server(params, &receiver, &sender)?;\n     log::info!(\"lsp server waiting for exit notification\");\n     match receiver.recv() {\n-        Some(RawMessage::Notification(n)) => n\n+        Ok(RawMessage::Notification(n)) => n\n             .cast::<Exit>()\n             .map_err(|n| format_err!(\"unexpected notification during shutdown: {:?}\", n))?,\n         m => bail!(\"unexpected message during shutdown: {:?}\", m),\n@@ -109,7 +109,7 @@ pub fn handle_shutdown(req: RawRequest, sender: &Sender<RawMessage>) -> Option<R\n     match req.cast::<Shutdown>() {\n         Ok((id, ())) => {\n             let resp = RawResponse::ok::<Shutdown>(id, &());\n-            sender.send(RawMessage::Response(resp));\n+            let _ = sender.send(RawMessage::Response(resp));\n             None\n         }\n         Err(req) => Some(req),\n@@ -122,16 +122,16 @@ fn initialize(\n     caps: ServerCapabilities,\n ) -> Result<InitializeParams> {\n     let (id, params) = match receiver.recv() {\n-        Some(RawMessage::Request(req)) => match req.cast::<Initialize>() {\n+        Ok(RawMessage::Request(req)) => match req.cast::<Initialize>() {\n             Err(req) => bail!(\"expected initialize request, got {:?}\", req),\n             Ok(req) => req,\n         },\n         msg => bail!(\"expected initialize request, got {:?}\", msg),\n     };\n     let resp = RawResponse::ok::<Initialize>(id, &InitializeResult { capabilities: caps });\n-    sender.send(RawMessage::Response(resp));\n+    sender.send(RawMessage::Response(resp)).unwrap();\n     match receiver.recv() {\n-        Some(RawMessage::Notification(n)) => {\n+        Ok(RawMessage::Notification(n)) => {\n             n.cast::<Initialized>()\n                 .map_err(|_| format_err!(\"expected initialized notification\"))?;\n         }"}, {"sha": "5c8e3385470b9eb78f6e5d4bb13bbfd79a149c2b", "filename": "crates/gen_lsp_server/src/stdio.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/effc1eae8be338ea949058cc89c39950c25858c5/crates%2Fgen_lsp_server%2Fsrc%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effc1eae8be338ea949058cc89c39950c25858c5/crates%2Fgen_lsp_server%2Fsrc%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fgen_lsp_server%2Fsrc%2Fstdio.rs?ref=effc1eae8be338ea949058cc89c39950c25858c5", "patch": "@@ -9,19 +9,23 @@ use failure::bail;\n use crate::{RawMessage, Result};\n \n pub fn stdio_transport() -> (Receiver<RawMessage>, Sender<RawMessage>, Threads) {\n-    let (writer_sender, mut writer_receiver) = bounded::<RawMessage>(16);\n+    let (writer_sender, writer_receiver) = bounded::<RawMessage>(16);\n     let writer = thread::spawn(move || {\n         let stdout = stdout();\n         let mut stdout = stdout.lock();\n-        writer_receiver.try_for_each(|it| it.write(&mut stdout))?;\n+        writer_receiver\n+            .into_iter()\n+            .try_for_each(|it| it.write(&mut stdout))?;\n         Ok(())\n     });\n     let (reader_sender, reader_receiver) = bounded::<RawMessage>(16);\n     let reader = thread::spawn(move || {\n         let stdin = stdin();\n         let mut stdin = stdin.lock();\n         while let Some(msg) = RawMessage::read(&mut stdin)? {\n-            reader_sender.send(msg);\n+            if let Err(_) = reader_sender.send(msg) {\n+                break;\n+            }\n         }\n         Ok(())\n     });"}]}