{"sha": "d3edfd18c790971c77845bfc1a2be4f9281c5416", "node_id": "C_kwDOAAsO6NoAKGQzZWRmZDE4Yzc5MDk3MWM3Nzg0NWJmYzFhMmJlNGY5MjgxYzU0MTY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-30T00:31:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-30T00:31:02Z"}, "message": "Auto merge of #111001 - matthiaskrgr:rollup-u590scu, r=matthiaskrgr\n\nRollup of 7 pull requests\n\nSuccessful merges:\n\n - #110586 (Fix Unreadable non-UTF-8 output on localized MSVC)\n - #110652 (Add test for warning-free builds of `core` under `no_global_oom_handling`)\n - #110973 (improve error notes for packed struct reference diagnostic)\n - #110981 (Move most rustdoc-ui tests into subdirectories)\n - #110983 (rustdoc: Get `repr` information through `AdtDef` for foreign items)\n - #110984 (Do not resolve anonymous lifetimes in consts to be static.)\n - #110997 (Improve internal field comments on `slice::Iter(Mut)`)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "eef7eeed9ea5baa42a37a5695720ac56c17aefe0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eef7eeed9ea5baa42a37a5695720ac56c17aefe0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3edfd18c790971c77845bfc1a2be4f9281c5416", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3edfd18c790971c77845bfc1a2be4f9281c5416", "html_url": "https://github.com/rust-lang/rust/commit/d3edfd18c790971c77845bfc1a2be4f9281c5416", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3edfd18c790971c77845bfc1a2be4f9281c5416/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5adff6bd8b29ac7dd173b36f0c8c35bb1c593c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5adff6bd8b29ac7dd173b36f0c8c35bb1c593c5", "html_url": "https://github.com/rust-lang/rust/commit/f5adff6bd8b29ac7dd173b36f0c8c35bb1c593c5"}, {"sha": "f7208139dee27248171d6a9c5c228b9daf470b18", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7208139dee27248171d6a9c5c228b9daf470b18", "html_url": "https://github.com/rust-lang/rust/commit/f7208139dee27248171d6a9c5c228b9daf470b18"}], "stats": {"total": 494, "additions": 375, "deletions": 119}, "files": [{"sha": "f6ee8157b40efd162df87b0706992035996cca96", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -3250,6 +3250,7 @@ dependencies = [\n  \"tempfile\",\n  \"thorin-dwp\",\n  \"tracing\",\n+ \"windows 0.46.0\",\n ]\n \n [[package]]"}, {"sha": "4f73b731f5a2a96d0248105ffeaafbfbd8c95021", "filename": "compiler/rustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/compiler%2Frustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/compiler%2Frustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2FCargo.toml?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -49,3 +49,7 @@ libc = \"0.2.50\"\n version = \"0.30.1\"\n default-features = false\n features = [\"read_core\", \"elf\", \"macho\", \"pe\", \"unaligned\", \"archive\", \"write\"]\n+\n+[target.'cfg(windows)'.dependencies.windows]\n+version = \"0.46.0\"\n+features = [\"Win32_Globalization\"]"}, {"sha": "c63e156beae7b7f57a3c2f20e37494f794285f1c", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 78, "deletions": 1, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -860,7 +860,7 @@ fn link_natively<'a>(\n             if !prog.status.success() {\n                 let mut output = prog.stderr.clone();\n                 output.extend_from_slice(&prog.stdout);\n-                let escaped_output = escape_string(&output);\n+                let escaped_output = escape_linker_output(&output, flavor);\n                 // FIXME: Add UI tests for this error.\n                 let err = errors::LinkingFailed {\n                     linker_path: &linker_path,\n@@ -1052,6 +1052,83 @@ fn escape_string(s: &[u8]) -> String {\n     }\n }\n \n+#[cfg(not(windows))]\n+fn escape_linker_output(s: &[u8], _flavour: LinkerFlavor) -> String {\n+    escape_string(s)\n+}\n+\n+/// If the output of the msvc linker is not UTF-8 and the host is Windows,\n+/// then try to convert the string from the OEM encoding.\n+#[cfg(windows)]\n+fn escape_linker_output(s: &[u8], flavour: LinkerFlavor) -> String {\n+    // This only applies to the actual MSVC linker.\n+    if flavour != LinkerFlavor::Msvc(Lld::No) {\n+        return escape_string(s);\n+    }\n+    match str::from_utf8(s) {\n+        Ok(s) => return s.to_owned(),\n+        Err(_) => match win::locale_byte_str_to_string(s, win::oem_code_page()) {\n+            Some(s) => s,\n+            // The string is not UTF-8 and isn't valid for the OEM code page\n+            None => format!(\"Non-UTF-8 output: {}\", s.escape_ascii()),\n+        },\n+    }\n+}\n+\n+/// Wrappers around the Windows API.\n+#[cfg(windows)]\n+mod win {\n+    use windows::Win32::Globalization::{\n+        GetLocaleInfoEx, MultiByteToWideChar, CP_OEMCP, LOCALE_IUSEUTF8LEGACYOEMCP,\n+        LOCALE_NAME_SYSTEM_DEFAULT, LOCALE_RETURN_NUMBER, MB_ERR_INVALID_CHARS,\n+    };\n+\n+    /// Get the Windows system OEM code page. This is most notably the code page\n+    /// used for link.exe's output.\n+    pub fn oem_code_page() -> u32 {\n+        unsafe {\n+            let mut cp: u32 = 0;\n+            // We're using the `LOCALE_RETURN_NUMBER` flag to return a u32.\n+            // But the API requires us to pass the data as though it's a [u16] string.\n+            let len = std::mem::size_of::<u32>() / std::mem::size_of::<u16>();\n+            let data = std::slice::from_raw_parts_mut(&mut cp as *mut u32 as *mut u16, len);\n+            let len_written = GetLocaleInfoEx(\n+                LOCALE_NAME_SYSTEM_DEFAULT,\n+                LOCALE_IUSEUTF8LEGACYOEMCP | LOCALE_RETURN_NUMBER,\n+                Some(data),\n+            );\n+            if len_written as usize == len { cp } else { CP_OEMCP }\n+        }\n+    }\n+    /// Try to convert a multi-byte string to a UTF-8 string using the given code page\n+    /// The string does not need to be null terminated.\n+    ///\n+    /// This is implemented as a wrapper around `MultiByteToWideChar`.\n+    /// See <https://learn.microsoft.com/en-us/windows/win32/api/stringapiset/nf-stringapiset-multibytetowidechar>\n+    ///\n+    /// It will fail if the multi-byte string is longer than `i32::MAX` or if it contains\n+    /// any invalid bytes for the expected encoding.\n+    pub fn locale_byte_str_to_string(s: &[u8], code_page: u32) -> Option<String> {\n+        // `MultiByteToWideChar` requires a length to be a \"positive integer\".\n+        if s.len() > isize::MAX as usize {\n+            return None;\n+        }\n+        // Error if the string is not valid for the expected code page.\n+        let flags = MB_ERR_INVALID_CHARS;\n+        // Call MultiByteToWideChar twice.\n+        // First to calculate the length then to convert the string.\n+        let mut len = unsafe { MultiByteToWideChar(code_page, flags, s, None) };\n+        if len > 0 {\n+            let mut utf16 = vec![0; len as usize];\n+            len = unsafe { MultiByteToWideChar(code_page, flags, s, Some(&mut utf16)) };\n+            if len > 0 {\n+                return utf16.get(..len as usize).map(String::from_utf16_lossy);\n+            }\n+        }\n+        None\n+    }\n+}\n+\n fn add_sanitizer_libraries(sess: &Session, crate_type: CrateType, linker: &mut dyn Linker) {\n     // On macOS the runtimes are distributed as dylibs which should be linked to\n     // both executables and dynamic shared objects. Everywhere else the runtimes"}, {"sha": "c77292fdd1647d630407cafafe14482f17760764", "filename": "compiler/rustc_feature/src/builtin_attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -344,7 +344,7 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     ),\n     ungated!(link_name, Normal, template!(NameValueStr: \"name\"), FutureWarnPreceding),\n     ungated!(no_link, Normal, template!(Word), WarnFollowing),\n-    ungated!(repr, Normal, template!(List: \"C\"), DuplicatesOk),\n+    ungated!(repr, Normal, template!(List: \"C\"), DuplicatesOk, @only_local: true),\n     ungated!(export_name, Normal, template!(NameValueStr: \"name\"), FutureWarnPreceding),\n     ungated!(link_section, Normal, template!(NameValueStr: \"name\"), FutureWarnPreceding),\n     ungated!(no_mangle, Normal, template!(Word), WarnFollowing, @only_local: true),"}, {"sha": "b9bc89fcf8fa464a4650d33733f71d63876fb0a5", "filename": "compiler/rustc_mir_transform/src/check_packed_ref.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_packed_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_packed_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_packed_ref.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -56,8 +56,11 @@ impl<'tcx> Visitor<'tcx> for PackedRefChecker<'_, 'tcx> {\n                         \"reference to packed field is unaligned\"\n                     )\n                     .note(\n-                        \"fields of packed structs are not properly aligned, and creating \\\n-                        a misaligned reference is undefined behavior (even if that \\\n+                        \"packed structs are only aligned by one byte, and many modern architectures \\\n+                        penalize unaligned field accesses\"\n+                    )\n+                    .note(\n+                        \"creating a misaligned reference is undefined behavior (even if that \\\n                         reference is never dereferenced)\",\n                     ).help(\n                         \"copy the field contents to a local variable, or replace the \\"}, {"sha": "511ae8516a866dbc33d5fa06d7204be47f55e7e6", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -656,7 +656,7 @@ impl<'a: 'ast, 'ast, 'tcx> Visitor<'ast> for LateResolutionVisitor<'a, '_, 'ast,\n     fn visit_anon_const(&mut self, constant: &'ast AnonConst) {\n         // We deal with repeat expressions explicitly in `resolve_expr`.\n         self.with_lifetime_rib(LifetimeRibKind::AnonConst, |this| {\n-            this.with_lifetime_rib(LifetimeRibKind::Elided(LifetimeRes::Static), |this| {\n+            this.with_lifetime_rib(LifetimeRibKind::Elided(LifetimeRes::Infer), |this| {\n                 this.resolve_anon_const(constant, IsRepeatExpr::No);\n             })\n         })\n@@ -4126,7 +4126,7 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n             ExprKind::Repeat(ref elem, ref ct) => {\n                 self.visit_expr(elem);\n                 self.with_lifetime_rib(LifetimeRibKind::AnonConst, |this| {\n-                    this.with_lifetime_rib(LifetimeRibKind::Elided(LifetimeRes::Static), |this| {\n+                    this.with_lifetime_rib(LifetimeRibKind::Elided(LifetimeRes::Infer), |this| {\n                         this.resolve_anon_const(ct, IsRepeatExpr::Yes)\n                     })\n                 });"}, {"sha": "8629aab00704645b6c75db73b8e3978096f378c9", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -60,10 +60,17 @@ impl<'a, T> IntoIterator for &'a mut [T] {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n pub struct Iter<'a, T: 'a> {\n+    /// The pointer to the next element to return, or the past-the-end location\n+    /// if the iterator is empty.\n+    ///\n+    /// This address will be used for all ZST elements, never changed.\n     ptr: NonNull<T>,\n-    end: *const T, // If T is a ZST, this is actually ptr+len. This encoding is picked so that\n-    // ptr == end is a quick test for the Iterator being empty, that works\n-    // for both ZST and non-ZST.\n+    /// For non-ZSTs, the non-null pointer to the past-the-end element.\n+    ///\n+    /// For ZSTs, this is `ptr.wrapping_byte_add(len)`.\n+    ///\n+    /// For all types, `ptr == end` tests whether the iterator is empty.\n+    end: *const T,\n     _marker: PhantomData<&'a T>,\n }\n \n@@ -179,10 +186,17 @@ impl<T> AsRef<[T]> for Iter<'_, T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n pub struct IterMut<'a, T: 'a> {\n+    /// The pointer to the next element to return, or the past-the-end location\n+    /// if the iterator is empty.\n+    ///\n+    /// This address will be used for all ZST elements, never changed.\n     ptr: NonNull<T>,\n-    end: *mut T, // If T is a ZST, this is actually ptr+len. This encoding is picked so that\n-    // ptr == end is a quick test for the Iterator being empty, that works\n-    // for both ZST and non-ZST.\n+    /// For non-ZSTs, the non-null pointer to the past-the-end element.\n+    ///\n+    /// For ZSTs, this is `ptr.wrapping_byte_add(len)`.\n+    ///\n+    /// For all types, `ptr == end` tests whether the iterator is empty.\n+    end: *mut T,\n     _marker: PhantomData<&'a mut T>,\n }\n "}, {"sha": "7371b44465bab00b63fe49fc034c20859afaa258", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -11,6 +11,7 @@ use arrayvec::ArrayVec;\n use thin_vec::ThinVec;\n \n use rustc_ast as ast;\n+use rustc_ast_pretty::pprust;\n use rustc_attr::{ConstStability, Deprecation, Stability, StabilityLevel};\n use rustc_const_eval::const_eval::is_unstable_const_fn;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -711,6 +712,78 @@ impl Item {\n         };\n         Some(tcx.visibility(def_id))\n     }\n+\n+    pub(crate) fn attributes(&self, tcx: TyCtxt<'_>, keep_as_is: bool) -> Vec<String> {\n+        const ALLOWED_ATTRIBUTES: &[Symbol] =\n+            &[sym::export_name, sym::link_section, sym::no_mangle, sym::repr, sym::non_exhaustive];\n+\n+        use rustc_abi::IntegerType;\n+        use rustc_middle::ty::ReprFlags;\n+\n+        let mut attrs: Vec<String> = self\n+            .attrs\n+            .other_attrs\n+            .iter()\n+            .filter_map(|attr| {\n+                if keep_as_is {\n+                    Some(pprust::attribute_to_string(attr))\n+                } else if ALLOWED_ATTRIBUTES.contains(&attr.name_or_empty()) {\n+                    Some(\n+                        pprust::attribute_to_string(attr)\n+                            .replace(\"\\\\\\n\", \"\")\n+                            .replace('\\n', \"\")\n+                            .replace(\"  \", \" \"),\n+                    )\n+                } else {\n+                    None\n+                }\n+            })\n+            .collect();\n+        if let Some(def_id) = self.item_id.as_def_id() &&\n+            !def_id.is_local() &&\n+            // This check is needed because `adt_def` will panic if not a compatible type otherwise...\n+            matches!(self.type_(), ItemType::Struct | ItemType::Enum | ItemType::Union)\n+        {\n+            let repr = tcx.adt_def(def_id).repr();\n+            let mut out = Vec::new();\n+            if repr.flags.contains(ReprFlags::IS_C) {\n+                out.push(\"C\");\n+            }\n+            if repr.flags.contains(ReprFlags::IS_TRANSPARENT) {\n+                out.push(\"transparent\");\n+            }\n+            if repr.flags.contains(ReprFlags::IS_SIMD) {\n+                out.push(\"simd\");\n+            }\n+            let pack_s;\n+            if let Some(pack) = repr.pack {\n+                pack_s = format!(\"packed({})\", pack.bytes());\n+                out.push(&pack_s);\n+            }\n+            let align_s;\n+            if let Some(align) = repr.align {\n+                align_s = format!(\"align({})\", align.bytes());\n+                out.push(&align_s);\n+            }\n+            let int_s;\n+            if let Some(int) = repr.int {\n+                int_s = match int {\n+                    IntegerType::Pointer(is_signed) => {\n+                        format!(\"{}size\", if is_signed { 'i' } else { 'u' })\n+                    }\n+                    IntegerType::Fixed(size, is_signed) => {\n+                        format!(\"{}{}\", if is_signed { 'i' } else { 'u' }, size.size().bytes() * 8)\n+                    }\n+                };\n+                out.push(&int_s);\n+            }\n+            if out.is_empty() {\n+                return Vec::new();\n+            }\n+            attrs.push(format!(\"#[repr({})]\", out.join(\", \")));\n+        }\n+        attrs\n+    }\n }\n \n #[derive(Clone, Debug)]"}, {"sha": "73bf27c9d344921673ccadef5a88e79a110c96b1", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 8, "deletions": 30, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -48,7 +48,6 @@ use std::str;\n use std::string::ToString;\n \n use askama::Template;\n-use rustc_ast_pretty::pprust;\n use rustc_attr::{ConstStability, Deprecation, StabilityLevel};\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -849,10 +848,10 @@ fn assoc_method(\n     let (indent, indent_str, end_newline) = if parent == ItemType::Trait {\n         header_len += 4;\n         let indent_str = \"    \";\n-        write!(w, \"{}\", render_attributes_in_pre(meth, indent_str));\n+        write!(w, \"{}\", render_attributes_in_pre(meth, indent_str, tcx));\n         (4, indent_str, Ending::NoNewline)\n     } else {\n-        render_attributes_in_code(w, meth);\n+        render_attributes_in_code(w, meth, tcx);\n         (0, \"\", Ending::Newline)\n     };\n     w.reserve(header_len + \"<a href=\\\"\\\" class=\\\"fn\\\">{\".len() + \"</a>\".len());\n@@ -1021,36 +1020,15 @@ fn render_assoc_item(\n     }\n }\n \n-const ALLOWED_ATTRIBUTES: &[Symbol] =\n-    &[sym::export_name, sym::link_section, sym::no_mangle, sym::repr, sym::non_exhaustive];\n-\n-fn attributes(it: &clean::Item) -> Vec<String> {\n-    it.attrs\n-        .other_attrs\n-        .iter()\n-        .filter_map(|attr| {\n-            if ALLOWED_ATTRIBUTES.contains(&attr.name_or_empty()) {\n-                Some(\n-                    pprust::attribute_to_string(attr)\n-                        .replace(\"\\\\\\n\", \"\")\n-                        .replace('\\n', \"\")\n-                        .replace(\"  \", \" \"),\n-                )\n-            } else {\n-                None\n-            }\n-        })\n-        .collect()\n-}\n-\n // When an attribute is rendered inside a `<pre>` tag, it is formatted using\n // a whitespace prefix and newline.\n-fn render_attributes_in_pre<'a>(\n+fn render_attributes_in_pre<'a, 'b: 'a>(\n     it: &'a clean::Item,\n     prefix: &'a str,\n-) -> impl fmt::Display + Captures<'a> {\n+    tcx: TyCtxt<'b>,\n+) -> impl fmt::Display + Captures<'a> + Captures<'b> {\n     crate::html::format::display_fn(move |f| {\n-        for a in attributes(it) {\n+        for a in it.attributes(tcx, false) {\n             writeln!(f, \"{}{}\", prefix, a)?;\n         }\n         Ok(())\n@@ -1059,8 +1037,8 @@ fn render_attributes_in_pre<'a>(\n \n // When an attribute is rendered inside a <code> tag, it is formatted using\n // a div to produce a newline after it.\n-fn render_attributes_in_code(w: &mut Buffer, it: &clean::Item) {\n-    for a in attributes(it) {\n+fn render_attributes_in_code(w: &mut Buffer, it: &clean::Item, tcx: TyCtxt<'_>) {\n+    for a in it.attributes(tcx, false) {\n         write!(w, \"<div class=\\\"code-attribute\\\">{}</div>\", a);\n     }\n }"}, {"sha": "4cc81e860f09a76605f707b3a6c60b0e04d44320", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -548,7 +548,7 @@ fn item_function(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, f: &cle\n             w,\n             \"{attrs}{vis}{constness}{asyncness}{unsafety}{abi}fn \\\n                 {name}{generics}{decl}{notable_traits}{where_clause}\",\n-            attrs = render_attributes_in_pre(it, \"\"),\n+            attrs = render_attributes_in_pre(it, \"\", tcx),\n             vis = visibility,\n             constness = constness,\n             asyncness = asyncness,\n@@ -589,7 +589,7 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n             it.name.unwrap(),\n             t.generics.print(cx),\n             bounds,\n-            attrs = render_attributes_in_pre(it, \"\"),\n+            attrs = render_attributes_in_pre(it, \"\", tcx),\n         );\n \n         if !t.generics.where_predicates.is_empty() {\n@@ -1063,7 +1063,7 @@ fn item_trait_alias(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &\n             t.generics.print(cx),\n             print_where_clause(&t.generics, cx, 0, Ending::Newline),\n             bounds(&t.bounds, true, cx),\n-            attrs = render_attributes_in_pre(it, \"\"),\n+            attrs = render_attributes_in_pre(it, \"\", cx.tcx()),\n         );\n     });\n \n@@ -1085,7 +1085,7 @@ fn item_opaque_ty(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &cl\n             t.generics.print(cx),\n             where_clause = print_where_clause(&t.generics, cx, 0, Ending::Newline),\n             bounds = bounds(&t.bounds, false, cx),\n-            attrs = render_attributes_in_pre(it, \"\"),\n+            attrs = render_attributes_in_pre(it, \"\", cx.tcx()),\n         );\n     });\n \n@@ -1109,7 +1109,7 @@ fn item_typedef(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clea\n                 t.generics.print(cx),\n                 where_clause = print_where_clause(&t.generics, cx, 0, Ending::Newline),\n                 type_ = t.type_.print(cx),\n-                attrs = render_attributes_in_pre(it, \"\"),\n+                attrs = render_attributes_in_pre(it, \"\", cx.tcx()),\n             );\n         });\n     }\n@@ -1168,7 +1168,8 @@ fn item_union(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean:\n             &'b self,\n         ) -> impl fmt::Display + Captures<'a> + 'b + Captures<'cx> {\n             display_fn(move |f| {\n-                let v = render_attributes_in_pre(self.it, \"\");\n+                let tcx = self.cx.borrow().tcx();\n+                let v = render_attributes_in_pre(self.it, \"\", tcx);\n                 write!(f, \"{v}\")\n             })\n         }\n@@ -1244,13 +1245,13 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n     let tcx = cx.tcx();\n     let count_variants = e.variants().count();\n     wrap_item(w, |mut w| {\n+        render_attributes_in_code(w, it, tcx);\n         write!(\n             w,\n-            \"{attrs}{}enum {}{}\",\n+            \"{}enum {}{}\",\n             visibility_print_with_space(it.visibility(tcx), it.item_id, cx),\n             it.name.unwrap(),\n             e.generics.print(cx),\n-            attrs = render_attributes_in_pre(it, \"\"),\n         );\n         if !print_where_clause_and_check(w, &e.generics, cx) {\n             // If there wasn't a `where` clause, we add a whitespace.\n@@ -1445,7 +1446,7 @@ fn item_primitive(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item) {\n fn item_constant(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, c: &clean::Constant) {\n     wrap_item(w, |w| {\n         let tcx = cx.tcx();\n-        render_attributes_in_code(w, it);\n+        render_attributes_in_code(w, it, tcx);\n \n         write!(\n             w,\n@@ -1492,7 +1493,7 @@ fn item_constant(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, c: &cle\n \n fn item_struct(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean::Struct) {\n     wrap_item(w, |w| {\n-        render_attributes_in_code(w, it);\n+        render_attributes_in_code(w, it, cx.tcx());\n         render_struct(w, it, Some(&s.generics), s.ctor_kind, &s.fields, \"\", true, cx);\n     });\n \n@@ -1542,7 +1543,7 @@ fn item_struct(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean\n \n fn item_static(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean::Static) {\n     wrap_item(w, |w| {\n-        render_attributes_in_code(w, it);\n+        render_attributes_in_code(w, it, cx.tcx());\n         write!(\n             w,\n             \"{vis}static {mutability}{name}: {typ}\",\n@@ -1558,7 +1559,7 @@ fn item_static(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean\n fn item_foreign_type(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item) {\n     wrap_item(w, |w| {\n         w.write_str(\"extern {\\n\");\n-        render_attributes_in_code(w, it);\n+        render_attributes_in_code(w, it, cx.tcx());\n         write!(\n             w,\n             \"    {}type {};\\n}}\","}, {"sha": "62aab46fa7e8b1a97d05fd3c8225affefc936073", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -41,12 +41,7 @@ impl JsonRenderer<'_> {\n             })\n             .collect();\n         let docs = item.attrs.collapsed_doc_value();\n-        let attrs = item\n-            .attrs\n-            .other_attrs\n-            .iter()\n-            .map(rustc_ast_pretty::pprust::attribute_to_string)\n-            .collect();\n+        let attrs = item.attributes(self.tcx, true);\n         let span = item.span(self.tcx);\n         let visibility = item.visibility(self.tcx);\n         let clean::Item { name, item_id, .. } = item;"}, {"sha": "66080f64b9c21b86387665f4f20346b2ab31d618", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -34,6 +34,7 @@ extern crate tracing;\n // Dependencies listed in Cargo.toml do not need `extern crate`.\n \n extern crate pulldown_cmark;\n+extern crate rustc_abi;\n extern crate rustc_ast;\n extern crate rustc_ast_pretty;\n extern crate rustc_attr;"}, {"sha": "28c5261ff854d85e517b2a9b8ff0780433199ac4", "filename": "tests/run-make/core-no-oom-handling/Makefile", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frun-make%2Fcore-no-oom-handling%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frun-make%2Fcore-no-oom-handling%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fcore-no-oom-handling%2FMakefile?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -0,0 +1,6 @@\n+include ../tools.mk\n+\n+FAKEROOT=$(TMPDIR)/fakeroot\n+\n+all:\n+\t$(RUSTC) --edition=2021 -Dwarnings --crate-type=rlib ../../../library/core/src/lib.rs --sysroot=$(FAKEROOT) --cfg no_global_oom_handling"}, {"sha": "9770be2f191f0b777bce8d1e74b752ed47d708a7", "filename": "tests/rustdoc-ui/check-cfg/check-cfg-test.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg-test.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-cfg-test.stderr"}, {"sha": "5c500ce6ce08219f169606e045c5d34cffe12301", "filename": "tests/rustdoc-ui/check-cfg/check-cfg-unstable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg-unstable.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-cfg-unstable.rs"}, {"sha": "9b27c2bc058a73760e18439b943d0d8bd1b74577", "filename": "tests/rustdoc-ui/check-cfg/check-cfg-unstable.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg-unstable.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-cfg-unstable.stderr"}, {"sha": "fa8789ad3ede4c9a72a2f73fe140a6a2a37e249d", "filename": "tests/rustdoc-ui/check-cfg/check-cfg.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-cfg.rs"}, {"sha": "1db8e1d91c249cf84290b21531d0993182b23f47", "filename": "tests/rustdoc-ui/check-cfg/check-cfg.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fcheck-cfg%2Fcheck-cfg.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-cfg.stderr"}, {"sha": "ee1fec4c5c2191e7fdcefe9290176fb03454e737", "filename": "tests/rustdoc-ui/doctest/auxiliary/extern_macros.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fauxiliary%2Fextern_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fauxiliary%2Fextern_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fauxiliary%2Fextern_macros.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/auxiliary/extern_macros.rs"}, {"sha": "ce529916e5edebbd7e2846ebe4a157158bd4e1c0", "filename": "tests/rustdoc-ui/doctest/block-doc-comment.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fblock-doc-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fblock-doc-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fblock-doc-comment.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/block-doc-comment.rs"}, {"sha": "7326c0a25a069340ea659b1382b6271d853bcc72", "filename": "tests/rustdoc-ui/doctest/block-doc-comment.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fblock-doc-comment.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fblock-doc-comment.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fblock-doc-comment.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/block-doc-comment.stdout"}, {"sha": "a263baa9738c53e188fec95a51a4665cac3d41c8", "filename": "tests/rustdoc-ui/doctest/cfg-test.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcfg-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcfg-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fcfg-test.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n // compile-flags:--test --test-args --test-threads=1\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n \n // Crates like core have doctests gated on `cfg(not(test))` so we need to make", "previous_filename": "tests/rustdoc-ui/cfg-test.rs"}, {"sha": "2960ff8d3b473882f8876b0da805ca5ec82d8ee8", "filename": "tests/rustdoc-ui/doctest/cfg-test.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcfg-test.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcfg-test.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fcfg-test.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/cfg-test.stdout"}, {"sha": "e955470148a16cba9c857c43d0877f5d9f99f539", "filename": "tests/rustdoc-ui/doctest/check-attr-test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-attr-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-attr-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-attr-test.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-attr-test.rs"}, {"sha": "01beba1ffc4a451f1427885e13095f99030763ca", "filename": "tests/rustdoc-ui/doctest/check-attr-test.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-attr-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-attr-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-attr-test.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-attr-test.stderr"}, {"sha": "49a801c3fb35206dd12444f30ba78479dc9a044d", "filename": "tests/rustdoc-ui/doctest/check-cfg-test.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-cfg-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-cfg-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-cfg-test.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n // compile-flags: --test --nocapture --check-cfg=values(feature,\"test\") -Z unstable-options\n-// normalize-stderr-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stderr-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n \n /// The doctest will produce a warning because feature invalid is unexpected", "previous_filename": "tests/rustdoc-ui/check-cfg-test.rs"}, {"sha": "9770be2f191f0b777bce8d1e74b752ed47d708a7", "filename": "tests/rustdoc-ui/doctest/check-cfg-test.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-cfg-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-cfg-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-cfg-test.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -0,0 +1,11 @@\n+warning: unexpected `cfg` condition value\n+  --> $DIR/check-cfg-test.rs:9:7\n+   |\n+LL | #[cfg(feature = \"invalid\")]\n+   |       ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expected values for `feature` are: test\n+   = note: `#[warn(unexpected_cfgs)]` on by default\n+\n+warning: 1 warning emitted\n+"}, {"sha": "b7db49bcfa87a425f0a4ac9105f6cfa2783b4ad4", "filename": "tests/rustdoc-ui/doctest/check-cfg-test.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-cfg-test.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-cfg-test.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fcheck-cfg-test.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-cfg-test.stdout"}, {"sha": "7a26dbff98613561ef541b3d59c16702378e73be", "filename": "tests/rustdoc-ui/doctest/display-output.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdisplay-output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdisplay-output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdisplay-output.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -3,7 +3,7 @@\n // check-pass\n // edition:2018\n // compile-flags:--test --test-args=--show-output\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n \n /// ```", "previous_filename": "tests/rustdoc-ui/display-output.rs"}, {"sha": "ad25d1ce54140a0305d9902a26b347a44e8822b9", "filename": "tests/rustdoc-ui/doctest/display-output.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdisplay-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdisplay-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdisplay-output.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/display-output.stdout"}, {"sha": "75508f435b3caf2366735a65f3e5ef6853c43323", "filename": "tests/rustdoc-ui/doctest/doc-comment-multi-line-attr.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-attr.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,6 +1,6 @@\n // Regression test for #97440: Multiline inner attribute triggers ICE during doctest\n // compile-flags:--test\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // check-pass\n ", "previous_filename": "tests/rustdoc-ui/doc-comment-multi-line-attr.rs"}, {"sha": "e47edbd2a81a013183637ae09a1ad1a9eca1ea1a", "filename": "tests/rustdoc-ui/doctest/doc-comment-multi-line-attr.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-attr.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-attr.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-attr.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-comment-multi-line-attr.stdout"}, {"sha": "3b0b27edb7d086d011243a273752b142e56924c9", "filename": "tests/rustdoc-ui/doctest/doc-comment-multi-line-cfg-attr.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-cfg-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-cfg-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-cfg-attr.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,5 +1,5 @@\n // compile-flags:--test\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // check-pass\n ", "previous_filename": "tests/rustdoc-ui/doc-comment-multi-line-cfg-attr.rs"}, {"sha": "bf3521e4f9177b2e0e45a25f307f3bf59521591c", "filename": "tests/rustdoc-ui/doctest/doc-comment-multi-line-cfg-attr.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-cfg-attr.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-cfg-attr.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-comment-multi-line-cfg-attr.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-comment-multi-line-cfg-attr.stdout"}, {"sha": "12608f244507563109dc98373e1cbff31f4f5f7c", "filename": "tests/rustdoc-ui/doctest/doc-test-attr-pass.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-attr-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-attr-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-attr-pass.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-test-attr-pass.rs"}, {"sha": "46178ad865a4c7b1bfb94ee73ec5f268264578b4", "filename": "tests/rustdoc-ui/doctest/doc-test-attr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-attr.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-test-attr.rs"}, {"sha": "5e6014954a49bb438b58cb5a6ddd93ac6be25ae2", "filename": "tests/rustdoc-ui/doctest/doc-test-attr.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-attr.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-test-attr.stderr"}, {"sha": "9c1f4936eab31ee2eb1616a2efc290825acf3012", "filename": "tests/rustdoc-ui/doctest/doc-test-doctest-feature.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-doctest-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-doctest-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-doctest-feature.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n // compile-flags:--test\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n \n // Make sure `cfg(doctest)` is set when finding doctests but not inside", "previous_filename": "tests/rustdoc-ui/doc-test-doctest-feature.rs"}, {"sha": "d7de1f105228f47d73619062c223893d264ee35e", "filename": "tests/rustdoc-ui/doctest/doc-test-doctest-feature.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-doctest-feature.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-doctest-feature.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-doctest-feature.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-test-doctest-feature.stdout"}, {"sha": "1f90d13af84fcc392504832caead83dde38628b2", "filename": "tests/rustdoc-ui/doctest/doc-test-rustdoc-feature.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-rustdoc-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-rustdoc-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-rustdoc-feature.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n // compile-flags:--test\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n \n #![feature(doc_cfg)]", "previous_filename": "tests/rustdoc-ui/doc-test-rustdoc-feature.rs"}, {"sha": "5b07fc4c87af518a13275ccde27acce0643a82e6", "filename": "tests/rustdoc-ui/doctest/doc-test-rustdoc-feature.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-rustdoc-feature.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-rustdoc-feature.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoc-test-rustdoc-feature.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-test-rustdoc-feature.stdout"}, {"sha": "b0787be972f2f558b99b56c05fdebbdaeff5aa3f", "filename": "tests/rustdoc-ui/doctest/doctest-edition.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-edition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-edition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-edition.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doctest-edition.rs"}, {"sha": "8a3329aa3ed9a4bd2832327904abb3c2152fd44d", "filename": "tests/rustdoc-ui/doctest/doctest-edition.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-edition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-edition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-edition.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doctest-edition.stderr"}, {"sha": "a3bde6cb941038fb3e414d08c63e0b681a44af68", "filename": "tests/rustdoc-ui/doctest/doctest-multiline-crate-attribute.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-multiline-crate-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-multiline-crate-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-multiline-crate-attribute.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,5 +1,5 @@\n // compile-flags:--test --test-args=--test-threads=1\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // check-pass\n ", "previous_filename": "tests/rustdoc-ui/doctest-multiline-crate-attribute.rs"}, {"sha": "07a4f657dea6a15405d7ad22a0b570f1d20814f9", "filename": "tests/rustdoc-ui/doctest/doctest-multiline-crate-attribute.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-multiline-crate-attribute.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-multiline-crate-attribute.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-multiline-crate-attribute.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doctest-multiline-crate-attribute.stdout"}, {"sha": "26754b73f0bc0a23064e9eb1dcc84f5d773cf900", "filename": "tests/rustdoc-ui/doctest/doctest-output.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-output.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,7 +1,7 @@\n // edition:2018\n // aux-build:extern_macros.rs\n // compile-flags:--test --test-args=--test-threads=1\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // check-pass\n ", "previous_filename": "tests/rustdoc-ui/doctest-output.rs"}, {"sha": "35b0e366fb5cc3ce598c88415b85615bd8d84c40", "filename": "tests/rustdoc-ui/doctest/doctest-output.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fdoctest-output.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doctest-output.stdout"}, {"sha": "53b3857dfde691d01f17aa9d185751267968b418", "filename": "tests/rustdoc-ui/doctest/failed-doctest-compile-fail.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-compile-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-compile-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-compile-fail.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -2,7 +2,7 @@\n // adapted to use that, and that normalize line can go away\n \n // compile-flags:--test\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // failure-status: 101\n ", "previous_filename": "tests/rustdoc-ui/failed-doctest-compile-fail.rs"}, {"sha": "af3a90a74100f9bde4126829ae5524403552c864", "filename": "tests/rustdoc-ui/doctest/failed-doctest-compile-fail.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-compile-fail.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-compile-fail.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-compile-fail.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/failed-doctest-compile-fail.stdout"}, {"sha": "84e4d61603aefb05a4a4097a66d5985c22d788e1", "filename": "tests/rustdoc-ui/doctest/failed-doctest-extra-semicolon-on-item.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-extra-semicolon-on-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-extra-semicolon-on-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-extra-semicolon-on-item.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -2,7 +2,7 @@\n // adapted to use that, and that normalize line can go away\n \n // compile-flags:--test\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // failure-status: 101\n ", "previous_filename": "tests/rustdoc-ui/failed-doctest-extra-semicolon-on-item.rs"}, {"sha": "61468b6c7457b3cdf3922f0fbc6eacdd64286898", "filename": "tests/rustdoc-ui/doctest/failed-doctest-extra-semicolon-on-item.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-extra-semicolon-on-item.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-extra-semicolon-on-item.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-extra-semicolon-on-item.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/failed-doctest-extra-semicolon-on-item.stdout"}, {"sha": "4e3b848fc02bc50f09d264775e589110184afb01", "filename": "tests/rustdoc-ui/doctest/failed-doctest-missing-codes.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-missing-codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-missing-codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-missing-codes.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -2,7 +2,7 @@\n // adapted to use that, and that normalize line can go away\n \n // compile-flags:--test\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // failure-status: 101\n ", "previous_filename": "tests/rustdoc-ui/failed-doctest-missing-codes.rs"}, {"sha": "bacbb47b5f9ff4ad28b94258e85b953376413889", "filename": "tests/rustdoc-ui/doctest/failed-doctest-missing-codes.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-missing-codes.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-missing-codes.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-missing-codes.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/failed-doctest-missing-codes.stdout"}, {"sha": "6bc6c33c76ecc71682e93f45c76dd947f19cd12d", "filename": "tests/rustdoc-ui/doctest/failed-doctest-output-windows.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output-windows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output-windows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output-windows.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -7,7 +7,7 @@\n \n // compile-flags:--test --test-args --test-threads=1\n // rustc-env:RUST_BACKTRACE=0\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // failure-status: 101\n ", "previous_filename": "tests/rustdoc-ui/failed-doctest-output-windows.rs"}, {"sha": "6c147054da3225cfa13f521f78fe3922d1024ef7", "filename": "tests/rustdoc-ui/doctest/failed-doctest-output-windows.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output-windows.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output-windows.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output-windows.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/failed-doctest-output-windows.stdout"}, {"sha": "3e1312382ee8706a11f23ebfa284c109c801d713", "filename": "tests/rustdoc-ui/doctest/failed-doctest-output.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -7,7 +7,7 @@\n \n // compile-flags:--test --test-args --test-threads=1\n // rustc-env:RUST_BACKTRACE=0\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // failure-status: 101\n ", "previous_filename": "tests/rustdoc-ui/failed-doctest-output.rs"}, {"sha": "630198a561af00db927e045cd397d35a6673f173", "filename": "tests/rustdoc-ui/doctest/failed-doctest-output.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-output.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/failed-doctest-output.stdout"}, {"sha": "36284e814f3c406a770d114d8169be273dfed397", "filename": "tests/rustdoc-ui/doctest/failed-doctest-should-panic.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-should-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-should-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-should-panic.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -2,7 +2,7 @@\n // adapted to use that, and that normalize line can go away\n \n // compile-flags:--test\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // failure-status: 101\n ", "previous_filename": "tests/rustdoc-ui/failed-doctest-should-panic.rs"}, {"sha": "57a20092a5d6c588825aa978cf2325ebe1740603", "filename": "tests/rustdoc-ui/doctest/failed-doctest-should-panic.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-should-panic.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-should-panic.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ffailed-doctest-should-panic.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/failed-doctest-should-panic.stdout"}, {"sha": "4ead621482bfdd72c117961aa5d2d8ff552d0ecc", "filename": "tests/rustdoc-ui/doctest/no-run-flag-error.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag-error.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/no-run-flag-error.rs"}, {"sha": "d032646c365c74c3dcf254a5ead4d1749bf48fa1", "filename": "tests/rustdoc-ui/doctest/no-run-flag-error.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag-error.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/no-run-flag-error.stderr"}, {"sha": "1cf3b7c4bb3d0dba1b40bef4ee18f13598c48681", "filename": "tests/rustdoc-ui/doctest/no-run-flag.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -2,7 +2,7 @@\n \n // check-pass\n // compile-flags:-Z unstable-options --test --no-run --test-args=--test-threads=1\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n \n /// ```", "previous_filename": "tests/rustdoc-ui/no-run-flag.rs"}, {"sha": "02f28aaf60da054a6040cb29927dd9b3ea3af28f", "filename": "tests/rustdoc-ui/doctest/no-run-flag.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fno-run-flag.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/no-run-flag.stdout"}, {"sha": "ce487a43db418cb3f00927a3d7bd31b39da8a871", "filename": "tests/rustdoc-ui/doctest/nocapture-fail.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture-fail.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n // compile-flags:--test -Zunstable-options --nocapture\n-// normalize-stderr-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stderr-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n \n /// ```compile_fail", "previous_filename": "tests/rustdoc-ui/nocapture-fail.rs"}, {"sha": "b65b622c1ed4b5965539325ed02f8b51e936c5ac", "filename": "tests/rustdoc-ui/doctest/nocapture-fail.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture-fail.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/nocapture-fail.stderr"}, {"sha": "754f77db53ca3a535ad4a25565a389499eb89d53", "filename": "tests/rustdoc-ui/doctest/nocapture-fail.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture-fail.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture-fail.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture-fail.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/nocapture-fail.stdout"}, {"sha": "25fbcf857e256c1d9d14a6f60ccb41d85d327d0b", "filename": "tests/rustdoc-ui/doctest/nocapture.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n // compile-flags:--test -Zunstable-options --nocapture\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n \n /// ```", "previous_filename": "tests/rustdoc-ui/nocapture.rs"}, {"sha": "af6415db3c72404d1adfed96a44dde1c9af0f416", "filename": "tests/rustdoc-ui/doctest/nocapture.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/nocapture.stderr"}, {"sha": "4880e75da706227b5b992429e9361f1d871f3066", "filename": "tests/rustdoc-ui/doctest/nocapture.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fnocapture.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/nocapture.stdout"}, {"sha": "a1f9f8dca083ecf7c7eda6a5f3e129133a99d1f0", "filename": "tests/rustdoc-ui/doctest/private-doc-test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-doc-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-doc-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-doc-test.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/private-doc-test.rs"}, {"sha": "1a3d6cc636d31e37c78ba94af760fe90c3557614", "filename": "tests/rustdoc-ui/doctest/private-item-doc-test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-item-doc-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-item-doc-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-item-doc-test.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/private-item-doc-test.rs"}, {"sha": "5df6132987c9fe4f6eda4291cbf97f538ebc7e72", "filename": "tests/rustdoc-ui/doctest/private-item-doc-test.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-item-doc-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-item-doc-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-item-doc-test.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/private-item-doc-test.stderr"}, {"sha": "7cc62b38cc26080174a39ef01c3ff1b64176dfce", "filename": "tests/rustdoc-ui/doctest/private-public-item-doc-test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-public-item-doc-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-public-item-doc-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-public-item-doc-test.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/private-public-item-doc-test.rs"}, {"sha": "f50dbd1844e7afc0972a8a764c2921e241504d5f", "filename": "tests/rustdoc-ui/doctest/private-public-item-doc-test.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-public-item-doc-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-public-item-doc-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fprivate-public-item-doc-test.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/private-public-item-doc-test.stderr"}, {"sha": "b86a53305a175fb66c83a60288dc50396e35abd7", "filename": "tests/rustdoc-ui/doctest/public-reexported-item-doc-test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fpublic-reexported-item-doc-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Fpublic-reexported-item-doc-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Fpublic-reexported-item-doc-test.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/public-reexported-item-doc-test.rs"}, {"sha": "e9b2754794a78c10ebb0536c2bc8db28c0f42858", "filename": "tests/rustdoc-ui/doctest/run-directory.correct.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Frun-directory.correct.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Frun-directory.correct.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Frun-directory.correct.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/run-directory.correct.stdout"}, {"sha": "97a5dbc5c0cd19112a8b6c02652880f568ca197f", "filename": "tests/rustdoc-ui/doctest/run-directory.incorrect.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Frun-directory.incorrect.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Frun-directory.incorrect.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Frun-directory.incorrect.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/run-directory.incorrect.stdout"}, {"sha": "1ff0af2d17cb3dcc7cf32924babda1416a61c7d7", "filename": "tests/rustdoc-ui/doctest/run-directory.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Frun-directory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Frun-directory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Frun-directory.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -4,20 +4,20 @@\n // check-pass\n // [correct]compile-flags:--test --test-run-directory={{src-base}}\n // [incorrect]compile-flags:--test --test-run-directory={{src-base}}/coverage\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n \n /// ```\n /// assert_eq!(\n-///     std::fs::read_to_string(\"run-directory.rs\").unwrap(),\n+///     std::fs::read_to_string(\"doctest/run-directory.rs\").unwrap(),\n ///     include_str!(\"run-directory.rs\"),\n /// );\n /// ```\n #[cfg(correct)]\n pub fn foo() {}\n \n /// ```\n-/// assert!(std::fs::read_to_string(\"run-directory.rs\").is_err());\n+/// assert!(std::fs::read_to_string(\"doctest/run-directory.rs\").is_err());\n /// ```\n #[cfg(incorrect)]\n pub fn foo() {}", "previous_filename": "tests/rustdoc-ui/run-directory.rs"}, {"sha": "a05390238784d28b1ab6443670bb872a075f5179", "filename": "tests/rustdoc-ui/doctest/test-compile-fail1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail1.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/test-compile-fail1.rs"}, {"sha": "72915e46becd34896f75647ea492afd871300163", "filename": "tests/rustdoc-ui/doctest/test-compile-fail1.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail1.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/test-compile-fail1.stderr"}, {"sha": "651ded0a0479380e5b302c64a106d1abf36471bc", "filename": "tests/rustdoc-ui/doctest/test-compile-fail2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail2.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/test-compile-fail2.rs"}, {"sha": "cee5b63cf509720c4d62be3bc131f13452edfaf2", "filename": "tests/rustdoc-ui/doctest/test-compile-fail2.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail2.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/test-compile-fail2.stderr"}, {"sha": "faa30ad836712d275f527acda79634a9f71240fc", "filename": "tests/rustdoc-ui/doctest/test-compile-fail3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail3.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/test-compile-fail3.rs"}, {"sha": "fab801b3beaeaec049388d3856dbc741c39014f0", "filename": "tests/rustdoc-ui/doctest/test-compile-fail3.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ftest-compile-fail3.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/test-compile-fail3.stderr"}, {"sha": "fd651d1a3442151e3e8bc2b9267e8ba32cd81612", "filename": "tests/rustdoc-ui/doctest/test-no_std.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-no_std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-no_std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ftest-no_std.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,5 +1,5 @@\n // compile-flags:--test\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // check-pass\n ", "previous_filename": "tests/rustdoc-ui/test-no_std.rs"}, {"sha": "8d5a30804c1e22e097e8a045f293f595e390b619", "filename": "tests/rustdoc-ui/doctest/test-no_std.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-no_std.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-no_std.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ftest-no_std.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/test-no_std.stdout"}, {"sha": "036d37f9db2b263c16830790eb118694633659f0", "filename": "tests/rustdoc-ui/doctest/test-type.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ftest-type.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,6 +1,6 @@\n // compile-flags: --test --test-args=--test-threads=1\n // check-pass\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n \n /// ```", "previous_filename": "tests/rustdoc-ui/test-type.rs"}, {"sha": "a66fd240d34c49c3af71529ca2c218c2d5fd91c2", "filename": "tests/rustdoc-ui/doctest/test-type.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-type.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Ftest-type.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Ftest-type.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/test-type.stdout"}, {"sha": "fd8b2094d020196fa29798247848c69ba32eb592", "filename": "tests/rustdoc-ui/doctest/unparseable-doc-test.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Funparseable-doc-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Funparseable-doc-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Funparseable-doc-test.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: --test\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/doctest\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // failure-status: 101\n // rustc-env: RUST_BACKTRACE=0", "previous_filename": "tests/rustdoc-ui/unparseable-doc-test.rs"}, {"sha": "2641c66f25e7703433bc668058a770aad458c7d9", "filename": "tests/rustdoc-ui/doctest/unparseable-doc-test.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Funparseable-doc-test.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fdoctest%2Funparseable-doc-test.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fdoctest%2Funparseable-doc-test.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/unparseable-doc-test.stdout"}, {"sha": "87620d74ee6455d5d37118b089a252a29d6c8cdf", "filename": "tests/rustdoc-ui/generate-link-to-definition/generate-link-to-definition-opt-unstable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt-unstable.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/generate-link-to-definition-opt-unstable.rs"}, {"sha": "a8ddf91bcbf15acad8d1e2e0bca0fa8f7a4592a4", "filename": "tests/rustdoc-ui/generate-link-to-definition/generate-link-to-definition-opt-unstable.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt-unstable.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/generate-link-to-definition-opt-unstable.stderr"}, {"sha": "8f4f561b44dcc5c5c4a172a9f6ca006e1e9eeab7", "filename": "tests/rustdoc-ui/generate-link-to-definition/generate-link-to-definition-opt.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/generate-link-to-definition-opt.rs"}, {"sha": "4c8c607e7da231243f3b67bd84da85c73c3996b2", "filename": "tests/rustdoc-ui/generate-link-to-definition/generate-link-to-definition-opt.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/generate-link-to-definition-opt.stderr"}, {"sha": "da5142087ddee8a59322bc0602e9d307566f2c3d", "filename": "tests/rustdoc-ui/generate-link-to-definition/generate-link-to-definition-opt2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt2.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/generate-link-to-definition-opt2.rs"}, {"sha": "4c8c607e7da231243f3b67bd84da85c73c3996b2", "filename": "tests/rustdoc-ui/generate-link-to-definition/generate-link-to-definition-opt2.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fgenerate-link-to-definition%2Fgenerate-link-to-definition-opt2.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/generate-link-to-definition-opt2.stderr"}, {"sha": "0976515f4a42610f9f3eb8417c1edbacbdd3274b", "filename": "tests/rustdoc-ui/intra-doc/assoc-item-not-in-scope.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fassoc-item-not-in-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fassoc-item-not-in-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fassoc-item-not-in-scope.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/assoc-item-not-in-scope.rs"}, {"sha": "04594ad414250cc1d88072e6d7e764992b86f43b", "filename": "tests/rustdoc-ui/intra-doc/assoc-item-not-in-scope.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fassoc-item-not-in-scope.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fassoc-item-not-in-scope.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fassoc-item-not-in-scope.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/assoc-item-not-in-scope.stderr"}, {"sha": "09da124b16206c2210e08156388dac3770905185", "filename": "tests/rustdoc-ui/intra-doc/deny-intra-link-resolution-failure.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fdeny-intra-link-resolution-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fdeny-intra-link-resolution-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fdeny-intra-link-resolution-failure.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/deny-intra-link-resolution-failure.rs"}, {"sha": "3e08354a61dea7169c4f2bd8dbf37e5aaaa99d52", "filename": "tests/rustdoc-ui/intra-doc/deny-intra-link-resolution-failure.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fdeny-intra-link-resolution-failure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fdeny-intra-link-resolution-failure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fdeny-intra-link-resolution-failure.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/deny-intra-link-resolution-failure.stderr"}, {"sha": "f2e66b77bf3eaf54e1b5b98e5ed1bb78974d0d7f", "filename": "tests/rustdoc-ui/intra-doc/pub-export-lint.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fpub-export-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fpub-export-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fpub-export-lint.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/pub-export-lint.rs"}, {"sha": "81ef799617ccdde9d7088b113c3cdafc97bec3bc", "filename": "tests/rustdoc-ui/intra-doc/pub-export-lint.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fpub-export-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Fpub-export-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fpub-export-lint.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/pub-export-lint.stderr"}, {"sha": "71bd2c522ff86e295ffddf8f05a5f32cf59bb855", "filename": "tests/rustdoc-ui/intra-doc/reference-link-reports-error-once.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Freference-link-reports-error-once.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Freference-link-reports-error-once.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Freference-link-reports-error-once.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/reference-link-reports-error-once.rs"}, {"sha": "2ab67090f66e69c36c1c61ea36400ddde83ae08d", "filename": "tests/rustdoc-ui/intra-doc/reference-link-reports-error-once.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Freference-link-reports-error-once.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Freference-link-reports-error-once.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Freference-link-reports-error-once.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/reference-link-reports-error-once.stderr"}, {"sha": "e81e034465d7f9589c04cbde87378ac4d7aa772a", "filename": "tests/rustdoc-ui/intra-doc/reference-links.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Freference-links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Freference-links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Freference-links.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/reference-links.rs"}, {"sha": "c98a2fd7ce69020e8034dabbea1c36fed4c782e2", "filename": "tests/rustdoc-ui/intra-doc/reference-links.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Freference-links.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fintra-doc%2Freference-links.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Freference-links.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/reference-links.stderr"}, {"sha": "877810f15d7fe7f69c5f70c659393d9c4f932151", "filename": "tests/rustdoc-ui/issues/auxiliary/empty-fn.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fauxiliary%2Fempty-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fauxiliary%2Fempty-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fauxiliary%2Fempty-fn.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/auxiliary/empty-fn.rs"}, {"sha": "57a365b3f386a4163044023f49b26d05c1019af3", "filename": "tests/rustdoc-ui/issues/auxiliary/issue-61592.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fauxiliary%2Fissue-61592.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fauxiliary%2Fissue-61592.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fauxiliary%2Fissue-61592.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/auxiliary/issue-61592.rs"}, {"sha": "0aaaeee105147a47890ac15a5032fef0b4ea5325", "filename": "tests/rustdoc-ui/issues/auxiliary/panic-handler.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fauxiliary%2Fpanic-handler.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fauxiliary%2Fpanic-handler.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fauxiliary%2Fpanic-handler.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/auxiliary/panic-handler.rs"}, {"sha": "648f9902908af8607dbca9bbee167b6114f4b5fe", "filename": "tests/rustdoc-ui/issues/issue-101076.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-101076.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-101076.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-101076.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-101076.rs"}, {"sha": "001784ac28561000f390c9b08d1f6a353896acdd", "filename": "tests/rustdoc-ui/issues/issue-102986.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-102986.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-102986.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-102986.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-102986.rs"}, {"sha": "3a573726c9727a4ce2edde9a190ed8a4b85d257c", "filename": "tests/rustdoc-ui/issues/issue-102986.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-102986.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-102986.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-102986.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-102986.stderr"}, {"sha": "36f42fb15f7e426958718afb548ee4bc46528a91", "filename": "tests/rustdoc-ui/issues/issue-103997.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-103997.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-103997.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-103997.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-103997.rs"}, {"sha": "c06db91496f86c4348487e55b8cc442a4d47fd10", "filename": "tests/rustdoc-ui/issues/issue-103997.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-103997.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-103997.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-103997.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-103997.stderr"}, {"sha": "ee1adc6a02914e0767f5f1a0ee9a09b8d9fdca60", "filename": "tests/rustdoc-ui/issues/issue-105334.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105334.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105334.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-105334.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-105334.rs"}, {"sha": "e163bb4db9ee609a3941feadec49b01cb213e8ce", "filename": "tests/rustdoc-ui/issues/issue-105334.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105334.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105334.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-105334.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-105334.stderr"}, {"sha": "154f069d8ffac43fbdfc70ac4e8bbd94db90d758", "filename": "tests/rustdoc-ui/issues/issue-105737.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105737.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105737.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-105737.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-105737.rs"}, {"sha": "2dd9beb17da9b4853b983ffda6c9ddab1c9aad1e", "filename": "tests/rustdoc-ui/issues/issue-105737.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105737.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105737.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-105737.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-105737.stderr"}, {"sha": "8f4172c0cbbbf8d30be44eb696917fa67af8df24", "filename": "tests/rustdoc-ui/issues/issue-105742.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105742.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105742.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-105742.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-105742.rs"}, {"sha": "cd53762ef9b2de78e1c70b9a60683f7c44e45116", "filename": "tests/rustdoc-ui/issues/issue-105742.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105742.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-105742.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-105742.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-105742.stderr"}, {"sha": "6d51846b7d0c0d22cd648dd2f2d6d66f82f2dd20", "filename": "tests/rustdoc-ui/issues/issue-106213.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-106213.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-106213.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-106213.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-106213.rs"}, {"sha": "0a4ff69bafb347c744f5562ac1cdcd4c25beb8f5", "filename": "tests/rustdoc-ui/issues/issue-106213.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-106213.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-106213.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-106213.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-106213.stderr"}, {"sha": "71b497a9adc7312f5a0871523d6ce21cd6b6e1f0", "filename": "tests/rustdoc-ui/issues/issue-106226.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-106226.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-106226.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-106226.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-106226.rs"}, {"sha": "1c973dab61d89e143e87dbd50399cfd6de465985", "filename": "tests/rustdoc-ui/issues/issue-106226.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-106226.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-106226.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-106226.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-106226.stderr"}, {"sha": "13788df0fc99697e5796e3474fb734b8be34a709", "filename": "tests/rustdoc-ui/issues/issue-107918.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-107918.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-107918.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-107918.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-107918.rs"}, {"sha": "0ec8523222fbef9277446022a482d886d7ffd7d4", "filename": "tests/rustdoc-ui/issues/issue-109282-import-inline-merge.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-109282-import-inline-merge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-109282-import-inline-merge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-109282-import-inline-merge.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-109282-import-inline-merge.rs"}, {"sha": "e3154baf860a32ed360b09c49c286771a17db35e", "filename": "tests/rustdoc-ui/issues/issue-110900.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-110900.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-110900.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-110900.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-110900.rs"}, {"sha": "000b6a329c1a7ea869a8f11789fdf5c9f2bd4901", "filename": "tests/rustdoc-ui/issues/issue-58473-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-58473-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-58473-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-58473-2.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-58473-2.rs"}, {"sha": "44e1f58d0a0fbc64db81086ea998bb62f53cf1f5", "filename": "tests/rustdoc-ui/issues/issue-58473.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-58473.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-58473.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-58473.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-58473.rs"}, {"sha": "5b4fc5ee7006307ed2231ac43db97f5a7c34d6a4", "filename": "tests/rustdoc-ui/issues/issue-61592-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61592-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61592-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-61592-2.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-61592-2.rs"}, {"sha": "1b7f8bb552c0ce1201a6a6c908ba84ab2d7015e6", "filename": "tests/rustdoc-ui/issues/issue-61592-2.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61592-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61592-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-61592-2.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-61592-2.stderr"}, {"sha": "66772557f2c2fb165654ba8140aa28e6a02475ad", "filename": "tests/rustdoc-ui/issues/issue-61592.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61592.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61592.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-61592.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-61592.rs"}, {"sha": "9c9c9106f8ac3ea66677e9b06e035dd19fd3fd39", "filename": "tests/rustdoc-ui/issues/issue-61592.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61592.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61592.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-61592.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-61592.stderr"}, {"sha": "4bd8efeaa3b97514c6573170bbb7540b6c09c4f5", "filename": "tests/rustdoc-ui/issues/issue-61732.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61732.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61732.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-61732.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-61732.rs"}, {"sha": "d16ec6a853a5ca68da33ca341c170f9f3868c6b2", "filename": "tests/rustdoc-ui/issues/issue-61732.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61732.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-61732.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-61732.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-61732.stderr"}, {"sha": "44c88b6183a8ef924e56acbe1bb2a04dc70833dd", "filename": "tests/rustdoc-ui/issues/issue-74134.private.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-74134.private.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-74134.private.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-74134.private.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-74134.private.stderr"}, {"sha": "5b1887b8310847b8a6bab7db446fa23bfe540abf", "filename": "tests/rustdoc-ui/issues/issue-74134.public.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-74134.public.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-74134.public.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-74134.public.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-74134.public.stderr"}, {"sha": "b1be9123aaf838cf4750c84dc06fb23d1f01b5cd", "filename": "tests/rustdoc-ui/issues/issue-74134.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-74134.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-74134.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-74134.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-74134.rs"}, {"sha": "e50f3995b83dda8fbd59cb5443143fd46d98b0d2", "filename": "tests/rustdoc-ui/issues/issue-79465.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79465.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79465.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-79465.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-79465.rs"}, {"sha": "d187a2e664a25fa1baafe0a134af0cf24db0f30d", "filename": "tests/rustdoc-ui/issues/issue-79465.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79465.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79465.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-79465.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-79465.stderr"}, {"sha": "eb0b9b380714e26d1e6750bb668f509e4138469f", "filename": "tests/rustdoc-ui/issues/issue-79467.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79467.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79467.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-79467.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-79467.rs"}, {"sha": "561513a432bb567722df9e6111036b41c57732d1", "filename": "tests/rustdoc-ui/issues/issue-79467.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79467.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79467.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-79467.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-79467.stderr"}, {"sha": "fc39424b793f640c2d4174028e7731958033adf1", "filename": "tests/rustdoc-ui/issues/issue-79494.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79494.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79494.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-79494.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-79494.rs"}, {"sha": "7ed5ed38247160d88ee0245662a485a8130fd8b1", "filename": "tests/rustdoc-ui/issues/issue-79494.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79494.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-79494.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-79494.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-79494.stderr"}, {"sha": "f5ae16981ca116cc9ccd17c82ada5e1d6bfb9178", "filename": "tests/rustdoc-ui/issues/issue-80992.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-80992.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-80992.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-80992.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n // compile-flags:--test\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/issues\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n \n pub fn test() -> Result<(), ()> {", "previous_filename": "tests/rustdoc-ui/issue-80992.rs"}, {"sha": "d2b1cd1d550cf2a4201be07e5c7aea366073a1ee", "filename": "tests/rustdoc-ui/issues/issue-80992.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-80992.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-80992.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-80992.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-80992.stdout"}, {"sha": "0240d217bee521a493339bd6ecdd646a24e957ae", "filename": "tests/rustdoc-ui/issues/issue-81662-shortness.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-81662-shortness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-81662-shortness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-81662-shortness.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,5 +1,5 @@\n // compile-flags:--test --error-format=short\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/issues\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // failure-status: 101\n ", "previous_filename": "tests/rustdoc-ui/issue-81662-shortness.rs"}, {"sha": "748113be3a26d14d94a8d5f96b26b6750677ccd8", "filename": "tests/rustdoc-ui/issues/issue-81662-shortness.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-81662-shortness.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-81662-shortness.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-81662-shortness.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-81662-shortness.stdout"}, {"sha": "0474d6c143e924b50a6950b049a435b3536fc6e9", "filename": "tests/rustdoc-ui/issues/issue-83883-describe-lints.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-83883-describe-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-83883-describe-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-83883-describe-lints.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-83883-describe-lints.rs"}, {"sha": "bbf66a31583d25631b7ed04b08e99c9994cc9a67", "filename": "tests/rustdoc-ui/issues/issue-83883-describe-lints.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-83883-describe-lints.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-83883-describe-lints.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-83883-describe-lints.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-83883-describe-lints.stdout"}, {"sha": "85362f186cc7f6d24c4e235f67eda07fe97569c6", "filename": "tests/rustdoc-ui/issues/issue-91134.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-91134.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-91134.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-91134.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,7 +1,7 @@\n // compile-flags: --test --crate-name=empty_fn --extern=empty_fn --test-args=--test-threads=1\n // aux-build:empty-fn.rs\n // check-pass\n-// normalize-stdout-test: \"tests/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"tests/rustdoc-ui/issues\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n // edition:2021\n ", "previous_filename": "tests/rustdoc-ui/issue-91134.rs"}, {"sha": "084062743daeabc0040d7128cd37277addb170e9", "filename": "tests/rustdoc-ui/issues/issue-91134.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-91134.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-91134.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-91134.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-91134.stdout"}, {"sha": "610bbf11d9cb33439b8b5fd430e07ef95f1a9fa9", "filename": "tests/rustdoc-ui/issues/issue-91713.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-91713.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-91713.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-91713.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-91713.rs"}, {"sha": "44ead7a1de2767d413e395daa9fdf7d9fbbb526b", "filename": "tests/rustdoc-ui/issues/issue-91713.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-91713.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-91713.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-91713.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-91713.stderr"}, {"sha": "1678352436315d74046949c81b8f3402974a7db3", "filename": "tests/rustdoc-ui/issues/issue-91713.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-91713.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-91713.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-91713.stdout?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-91713.stdout"}, {"sha": "08cc7ef4c902ce69450bcb23d574d301c6fe4752", "filename": "tests/rustdoc-ui/issues/issue-96287.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-96287.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-96287.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-96287.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-96287.rs"}, {"sha": "7722eb96028dfedf7756be8b108800a5e4bdb978", "filename": "tests/rustdoc-ui/issues/issue-96287.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-96287.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-96287.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-96287.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-96287.stderr"}, {"sha": "fe9bd87ab28e6452601fe462369a15b16a31f348", "filename": "tests/rustdoc-ui/issues/issue-98690.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-98690.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-98690.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-98690.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-98690.rs"}, {"sha": "47d94f99a4563e2064a1cfb4d4e3cd60357e06f0", "filename": "tests/rustdoc-ui/issues/issue-98690.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-98690.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fissues%2Fissue-98690.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissues%2Fissue-98690.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/issue-98690.stderr"}, {"sha": "23aa5c44c21fd7146ccf4b91999f249f17e3714b", "filename": "tests/rustdoc-ui/lints/bare-urls.fixed", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fbare-urls.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fbare-urls.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fbare-urls.fixed?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/bare-urls.fixed"}, {"sha": "592f57343bc922aeb68da11ed637b54ea13392b8", "filename": "tests/rustdoc-ui/lints/bare-urls.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fbare-urls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fbare-urls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fbare-urls.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/bare-urls.rs"}, {"sha": "ccf52cd0b933f35edc9b0ee00d5bc7ebff46db10", "filename": "tests/rustdoc-ui/lints/bare-urls.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fbare-urls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fbare-urls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fbare-urls.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/bare-urls.stderr"}, {"sha": "0b3f7bedda5cf9b442a625b2a97e7bb90bd71141", "filename": "tests/rustdoc-ui/lints/check-attr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fcheck-attr.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-attr.rs"}, {"sha": "f66e63ab727eab3cd76883ebde3326dc25898246", "filename": "tests/rustdoc-ui/lints/check-attr.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fcheck-attr.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-attr.stderr"}, {"sha": "02632b4ce7d3cb3ca6768acca5a96d10205154db", "filename": "tests/rustdoc-ui/lints/check-fail.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fcheck-fail.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-fail.rs"}, {"sha": "f05e457af6452fd5789f87550bf3b21a5834b366", "filename": "tests/rustdoc-ui/lints/check-fail.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fcheck-fail.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check-fail.stderr"}, {"sha": "e389a81bb33cc93fae6a4591317d53b54c677ff8", "filename": "tests/rustdoc-ui/lints/check.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fcheck.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check.rs"}, {"sha": "c5ed5d0c3efbe214732794e9d812d74eb2b9304e", "filename": "tests/rustdoc-ui/lints/check.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fcheck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fcheck.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/check.stderr"}, {"sha": "b74eba3f66b81272a8d2a354cd0ac241b518545e", "filename": "tests/rustdoc-ui/lints/deny-missing-docs-crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-crate.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/deny-missing-docs-crate.rs"}, {"sha": "5025b0b0ca82562f9f9f55b534722eb0590a44a0", "filename": "tests/rustdoc-ui/lints/deny-missing-docs-crate.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-crate.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/deny-missing-docs-crate.stderr"}, {"sha": "b1c1253176b303dc9401929865abc75d4cd7c748", "filename": "tests/rustdoc-ui/lints/deny-missing-docs-macro.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-macro.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/deny-missing-docs-macro.rs"}, {"sha": "0867b08183e2de20eaa7af23ce9f43ce2c6e8b53", "filename": "tests/rustdoc-ui/lints/deny-missing-docs-macro.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdeny-missing-docs-macro.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/deny-missing-docs-macro.stderr"}, {"sha": "980d1c0e2077d272406075d834928dcf265e7ed3", "filename": "tests/rustdoc-ui/lints/doc-attr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdoc-attr.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-attr.rs"}, {"sha": "68df2771fd7235c9f9b31037cb261dc4f1ac5881", "filename": "tests/rustdoc-ui/lints/doc-attr.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdoc-attr.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-attr.stderr"}, {"sha": "4b58778eacd17605e54d0ce7f062c620556f3f9a", "filename": "tests/rustdoc-ui/lints/doc-spotlight.fixed", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-spotlight.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-spotlight.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdoc-spotlight.fixed?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-spotlight.fixed"}, {"sha": "16e387245802b128364f52c61b7091844c823e30", "filename": "tests/rustdoc-ui/lints/doc-spotlight.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-spotlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-spotlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdoc-spotlight.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-spotlight.rs"}, {"sha": "58612327ff93ec7b288b86dcd6f886d2e5e769d8", "filename": "tests/rustdoc-ui/lints/doc-spotlight.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-spotlight.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-spotlight.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdoc-spotlight.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-spotlight.stderr"}, {"sha": "86d7c83d335981541cdce90d1f7cc404eefae3cc", "filename": "tests/rustdoc-ui/lints/doc-without-codeblock.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-without-codeblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-without-codeblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdoc-without-codeblock.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-without-codeblock.rs"}, {"sha": "ebf2a2d54f75c154cb86fb939a8a1bb5c3bc7be0", "filename": "tests/rustdoc-ui/lints/doc-without-codeblock.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-without-codeblock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc-without-codeblock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdoc-without-codeblock.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc-without-codeblock.stderr"}, {"sha": "5d8791748a0122401401eb591819a42710ff0151", "filename": "tests/rustdoc-ui/lints/doc_cfg_hide.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc_cfg_hide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc_cfg_hide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdoc_cfg_hide.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc_cfg_hide.rs"}, {"sha": "b7e8870fdf548a0318078a24e832264f87230932", "filename": "tests/rustdoc-ui/lints/doc_cfg_hide.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc_cfg_hide.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fdoc_cfg_hide.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fdoc_cfg_hide.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/doc_cfg_hide.stderr"}, {"sha": "0901ac3640fdda75db09625d7e7de9546675f6b1", "filename": "tests/rustdoc-ui/lints/expect-tool-lint-rfc-2383.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fexpect-tool-lint-rfc-2383.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fexpect-tool-lint-rfc-2383.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fexpect-tool-lint-rfc-2383.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/expect-tool-lint-rfc-2383.rs"}, {"sha": "efc5f349f4f44437e301e1244a72399cebb1b8a5", "filename": "tests/rustdoc-ui/lints/expect-tool-lint-rfc-2383.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fexpect-tool-lint-rfc-2383.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fexpect-tool-lint-rfc-2383.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fexpect-tool-lint-rfc-2383.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/expect-tool-lint-rfc-2383.stderr"}, {"sha": "c34ea0567a9d4f1430271e4da9199c7d562ee0eb", "filename": "tests/rustdoc-ui/lints/feature-gate-rustdoc_missing_doc_code_examples.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Ffeature-gate-rustdoc_missing_doc_code_examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Ffeature-gate-rustdoc_missing_doc_code_examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Ffeature-gate-rustdoc_missing_doc_code_examples.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/feature-gate-rustdoc_missing_doc_code_examples.rs"}, {"sha": "326dcfe3bdef0d89e390bcdef6c8b286cbd7c08d", "filename": "tests/rustdoc-ui/lints/feature-gate-rustdoc_missing_doc_code_examples.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Ffeature-gate-rustdoc_missing_doc_code_examples.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Ffeature-gate-rustdoc_missing_doc_code_examples.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Ffeature-gate-rustdoc_missing_doc_code_examples.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/feature-gate-rustdoc_missing_doc_code_examples.stderr"}, {"sha": "c231e43b35caff712fb2a7f91c26ac1e6e7e05e5", "filename": "tests/rustdoc-ui/lints/invalid-doc-attr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-doc-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-doc-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Finvalid-doc-attr.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/invalid-doc-attr.rs"}, {"sha": "b23b8ded8674bf1dda2aee60cf47398e66d0f61b", "filename": "tests/rustdoc-ui/lints/invalid-doc-attr.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-doc-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-doc-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Finvalid-doc-attr.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/invalid-doc-attr.stderr"}, {"sha": "d973a53cbc7cea9d5cddfa83438d3f0bbf3435af", "filename": "tests/rustdoc-ui/lints/invalid-html-self-closing-tag.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-html-self-closing-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-html-self-closing-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Finvalid-html-self-closing-tag.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/invalid-html-self-closing-tag.rs"}, {"sha": "e45edfb43ff8e7f1c481014a85e5de3a0447a461", "filename": "tests/rustdoc-ui/lints/invalid-html-self-closing-tag.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-html-self-closing-tag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-html-self-closing-tag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Finvalid-html-self-closing-tag.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/invalid-html-self-closing-tag.stderr"}, {"sha": "317f1fd1d46411a54c72db058aff165868ada5ad", "filename": "tests/rustdoc-ui/lints/invalid-html-tags.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-html-tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-html-tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Finvalid-html-tags.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/invalid-html-tags.rs"}, {"sha": "9c2bfcf2c3dd71af45e36cc2265a68fc5f0684f4", "filename": "tests/rustdoc-ui/lints/invalid-html-tags.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-html-tags.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Finvalid-html-tags.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Finvalid-html-tags.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/invalid-html-tags.stderr"}, {"sha": "ad88157f64f7920dc04cb6f856d988c30c4dd97e", "filename": "tests/rustdoc-ui/lints/lint-group.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Flint-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Flint-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Flint-group.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/lint-group.rs"}, {"sha": "7ff09fcc45a1243660ab5f3892f7545850432d10", "filename": "tests/rustdoc-ui/lints/lint-group.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Flint-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Flint-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Flint-group.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/lint-group.stderr"}, {"sha": "40f35728d79b0ba2f8cc09db394258119f96d54d", "filename": "tests/rustdoc-ui/lints/lint-missing-doc-code-example.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Flint-missing-doc-code-example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Flint-missing-doc-code-example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Flint-missing-doc-code-example.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/lint-missing-doc-code-example.rs"}, {"sha": "f9331250154d7923c4a422fadfe4a9a55d94463b", "filename": "tests/rustdoc-ui/lints/lint-missing-doc-code-example.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Flint-missing-doc-code-example.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Flint-missing-doc-code-example.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Flint-missing-doc-code-example.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/lint-missing-doc-code-example.stderr"}, {"sha": "a186410acf483c819cee69576f3e9baeedca1801", "filename": "tests/rustdoc-ui/lints/no-crate-level-doc-lint.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fno-crate-level-doc-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fno-crate-level-doc-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fno-crate-level-doc-lint.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/no-crate-level-doc-lint.rs"}, {"sha": "fb3a5e415dfee980045e41da3af519ce4b8b7f18", "filename": "tests/rustdoc-ui/lints/no-crate-level-doc-lint.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fno-crate-level-doc-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Fno-crate-level-doc-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Fno-crate-level-doc-lint.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/no-crate-level-doc-lint.stderr"}, {"sha": "a4d3a4b497117b80948337551fbfa18348c4bda8", "filename": "tests/rustdoc-ui/lints/renamed-lint-still-applies.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Frenamed-lint-still-applies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Frenamed-lint-still-applies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Frenamed-lint-still-applies.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/renamed-lint-still-applies.rs"}, {"sha": "ee9b67cb91be669648a1dba9dc003b07df7f60e2", "filename": "tests/rustdoc-ui/lints/renamed-lint-still-applies.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Frenamed-lint-still-applies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Frenamed-lint-still-applies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Frenamed-lint-still-applies.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/renamed-lint-still-applies.stderr"}, {"sha": "e106d06aff592dd2e9e97b272336d2511df709b2", "filename": "tests/rustdoc-ui/lints/rustdoc-all-only-stable-lints.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Frustdoc-all-only-stable-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Frustdoc-all-only-stable-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Frustdoc-all-only-stable-lints.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/rustdoc-all-only-stable-lints.rs"}, {"sha": "ddf03dd079f94257fc73f675dbccc08d1502b60c", "filename": "tests/rustdoc-ui/lints/unknown-renamed-lints.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Funknown-renamed-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Funknown-renamed-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Funknown-renamed-lints.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/unknown-renamed-lints.rs"}, {"sha": "bf529b9f8e26327b6add65ba5a79f8d550afade4", "filename": "tests/rustdoc-ui/lints/unknown-renamed-lints.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Funknown-renamed-lints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Funknown-renamed-lints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Funknown-renamed-lints.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/unknown-renamed-lints.stderr"}, {"sha": "be0e31e4be2ff9d3c985393712f231291c13dd1b", "filename": "tests/rustdoc-ui/lints/unused-braces-lint.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Funused-braces-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Funused-braces-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Funused-braces-lint.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/unused-braces-lint.rs"}, {"sha": "702b24c36c56c0bd31245045e9ae7472c29938da", "filename": "tests/rustdoc-ui/lints/unused.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Flints%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flints%2Funused.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/unused.rs"}, {"sha": "8f4fde96d7e4bb6cd937cbf9eb7b698f1bcb6bad", "filename": "tests/rustdoc-ui/scrape-examples/scrape-examples-fail-if-type-error.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-fail-if-type-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-fail-if-type-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-fail-if-type-error.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/scrape-examples-fail-if-type-error.rs"}, {"sha": "750aa32071944948222a402011636ebdcac07679", "filename": "tests/rustdoc-ui/scrape-examples/scrape-examples-fail-if-type-error.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-fail-if-type-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-fail-if-type-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-fail-if-type-error.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/scrape-examples-fail-if-type-error.stderr"}, {"sha": "d629b62a7241a1b3ac9cb775e67f1d1128ffa076", "filename": "tests/rustdoc-ui/scrape-examples/scrape-examples-ice.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-ice.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/scrape-examples-ice.rs"}, {"sha": "a1f005c32ee0fa837ee3d1e64d4f3f832122e785", "filename": "tests/rustdoc-ui/scrape-examples/scrape-examples-wrong-options-1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-1.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/scrape-examples-wrong-options-1.rs"}, {"sha": "eb8e9f799681fee13b718594e5c336713dbb0fd2", "filename": "tests/rustdoc-ui/scrape-examples/scrape-examples-wrong-options-1.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-1.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/scrape-examples-wrong-options-1.stderr"}, {"sha": "4aacec7f09493fc8816b01007e2c4c17455f3935", "filename": "tests/rustdoc-ui/scrape-examples/scrape-examples-wrong-options-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-2.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/scrape-examples-wrong-options-2.rs"}, {"sha": "eb8e9f799681fee13b718594e5c336713dbb0fd2", "filename": "tests/rustdoc-ui/scrape-examples/scrape-examples-wrong-options-2.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fscrape-examples%2Fscrape-examples-wrong-options-2.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "previous_filename": "tests/rustdoc-ui/scrape-examples-wrong-options-2.stderr"}, {"sha": "4a6648a643980e90d48c8f92cf3eee024f134bb5", "filename": "tests/rustdoc/inline_cross/auxiliary/repr.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc%2Finline_cross%2Fauxiliary%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc%2Finline_cross%2Fauxiliary%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Finline_cross%2Fauxiliary%2Frepr.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -1,4 +1,22 @@\n-#[repr(C)]\n-pub struct Foo {\n+#![feature(repr_simd)]\n+\n+#[repr(C, align(8))]\n+pub struct ReprC {\n     field: u8,\n }\n+#[repr(simd, packed(2))]\n+pub struct ReprSimd {\n+    field: u8,\n+}\n+#[repr(transparent)]\n+pub struct ReprTransparent {\n+    field: u8,\n+}\n+#[repr(isize)]\n+pub enum ReprIsize {\n+    Bla,\n+}\n+#[repr(u8)]\n+pub enum ReprU8 {\n+    Bla,\n+}"}, {"sha": "9e107cee9e91bbf9b24663343e487ad2f69ed45e", "filename": "tests/rustdoc/inline_cross/repr.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc%2Finline_cross%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Frustdoc%2Finline_cross%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Finline_cross%2Frepr.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -7,7 +7,23 @@\n \n extern crate repr;\n \n-// @has 'foo/struct.Foo.html'\n-// @has - '//*[@class=\"rust item-decl\"]//*[@class=\"code-attribute\"]' '#[repr(C)]'\n+// @has 'foo/struct.ReprC.html'\n+// @has - '//*[@class=\"rust item-decl\"]//*[@class=\"code-attribute\"]' '#[repr(C, align(8))]'\n #[doc(inline)]\n-pub use repr::Foo;\n+pub use repr::ReprC;\n+// @has 'foo/struct.ReprSimd.html'\n+// @has - '//*[@class=\"rust item-decl\"]//*[@class=\"code-attribute\"]' '#[repr(simd, packed(2))]'\n+#[doc(inline)]\n+pub use repr::ReprSimd;\n+// @has 'foo/struct.ReprTransparent.html'\n+// @has - '//*[@class=\"rust item-decl\"]//*[@class=\"code-attribute\"]' '#[repr(transparent)]'\n+#[doc(inline)]\n+pub use repr::ReprTransparent;\n+// @has 'foo/enum.ReprIsize.html'\n+// @has - '//*[@class=\"rust item-decl\"]//*[@class=\"code-attribute\"]' '#[repr(isize)]'\n+#[doc(inline)]\n+pub use repr::ReprIsize;\n+// @has 'foo/enum.ReprU8.html'\n+// @has - '//*[@class=\"rust item-decl\"]//*[@class=\"code-attribute\"]' '#[repr(u8)]'\n+#[doc(inline)]\n+pub use repr::ReprU8;"}, {"sha": "349c4639a9e2dad4465460aeb916ab00b85ee31e", "filename": "tests/ui/binding/issue-53114-safety-checks.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fbinding%2Fissue-53114-safety-checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fbinding%2Fissue-53114-safety-checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbinding%2Fissue-53114-safety-checks.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -4,7 +4,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     let _ = &p.b;\n    |             ^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -13,7 +14,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     let (_,) = (&p.b,);\n    |                 ^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -22,7 +24,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     let _: _ = &p.b;\n    |                ^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -31,7 +34,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     let (_,): _ = (&p.b,);\n    |                    ^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -40,7 +44,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     match &p.b  { _ => { } }\n    |           ^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -49,7 +54,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     match (&p.b,)  { (_,) => { } }\n    |            ^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0133]: access to union field is unsafe and requires unsafe function or block"}, {"sha": "8c44229bcebe1e29ac7f6d17acb07b8801eb439f", "filename": "tests/ui/closures/2229_closure_analysis/diagnostics/repr_packed.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Frepr_packed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Frepr_packed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Frepr_packed.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -4,7 +4,8 @@ error[E0793]: reference to packed field is unaligned\n LL |         println!(\"{}\", foo.x);\n    |                        ^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n    = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "69a7b61bab41821856f8751f5e011854976d5740", "filename": "tests/ui/lifetimes/elided-lifetime-in-anon-const.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Flifetimes%2Felided-lifetime-in-anon-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Flifetimes%2Felided-lifetime-in-anon-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes%2Felided-lifetime-in-anon-const.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -0,0 +1,20 @@\n+// Verify that elided lifetimes inside anonymous constants are not forced to be `'static`.\n+// check-pass\n+\n+fn foo() -> [(); {\n+       let a = 10_usize;\n+       let b: &'_ usize = &a;\n+       *b\n+   }] {\n+    [(); 10]\n+}\n+\n+fn bar() -> [(); 10] {\n+    [(); {\n+        let a = 10_usize;\n+        let b: &'_ usize = &a;\n+        *b\n+    }]\n+}\n+\n+fn main() {}"}, {"sha": "5f9cecadbffa6ccff77598cf58a95f40fcdd4030", "filename": "tests/ui/lint/unaligned_references.stderr", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Flint%2Funaligned_references.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Flint%2Funaligned_references.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Funaligned_references.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -4,7 +4,8 @@ error[E0793]: reference to packed field is unaligned\n LL |             &self.x;\n    |             ^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -13,7 +14,8 @@ error[E0793]: reference to packed field is unaligned\n LL |         let _ = &good.ptr;\n    |                 ^^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -22,7 +24,8 @@ error[E0793]: reference to packed field is unaligned\n LL |         let _ = &good.data;\n    |                 ^^^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -31,7 +34,8 @@ error[E0793]: reference to packed field is unaligned\n LL |         let _ = &good.data as *const _;\n    |                 ^^^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -40,7 +44,8 @@ error[E0793]: reference to packed field is unaligned\n LL |         let _: *const _ = &good.data;\n    |                           ^^^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -49,7 +54,8 @@ error[E0793]: reference to packed field is unaligned\n LL |         let _ = good.data.clone();\n    |                 ^^^^^^^^^^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -58,7 +64,8 @@ error[E0793]: reference to packed field is unaligned\n LL |         let _ = &good.data2[0];\n    |                 ^^^^^^^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -67,7 +74,8 @@ error[E0793]: reference to packed field is unaligned\n LL |         let _ = &packed2.x;\n    |                 ^^^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -76,7 +84,8 @@ error[E0793]: reference to packed field is unaligned\n LL |         let _ref = &m1.1.a;\n    |                    ^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -85,7 +94,8 @@ error[E0793]: reference to packed field is unaligned\n LL |         let _ref = &m2.1.a;\n    |                    ^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error: aborting due to 10 previous errors"}, {"sha": "94a95c1d8fda728ebd5349f9ff64b6e419728dc5", "filename": "tests/ui/lint/unaligned_references_external_macro.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Flint%2Funaligned_references_external_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Flint%2Funaligned_references_external_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Funaligned_references_external_macro.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -9,7 +9,8 @@ LL | |     }\n LL | | }\n    | |_^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n    = note: this error originates in the macro `unaligned_references_external_crate::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "3fb2842d694cce774286c87070ce2fdf189be0d9", "filename": "tests/ui/native-library-link-flags/msvc-non-utf8-output.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fnative-library-link-flags%2Fmsvc-non-utf8-output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fnative-library-link-flags%2Fmsvc-non-utf8-output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnative-library-link-flags%2Fmsvc-non-utf8-output.rs?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -0,0 +1,6 @@\n+// build-fail\n+// compile-flags:-C link-arg=m\u00e4rchenhaft\n+// only-msvc\n+// error-pattern:= note: LINK : fatal error LNK1181:\n+// normalize-stderr-test \"(\\s*\\|\\n)\\s*= note: .*\\n\" -> \"$1\"\n+pub fn main() {}"}, {"sha": "f843aad782c30f3bf3c9c6ef26cf08ce8c31e7ed", "filename": "tests/ui/native-library-link-flags/msvc-non-utf8-output.stderr", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fnative-library-link-flags%2Fmsvc-non-utf8-output.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fnative-library-link-flags%2Fmsvc-non-utf8-output.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnative-library-link-flags%2Fmsvc-non-utf8-output.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -0,0 +1,7 @@\n+error: linking with `link.exe` failed: exit code: 1181\n+   |\n+   = note: LINK : fatal error LNK1181: cannot open input file 'm\u00e4rchenhaft.obj'\n+           \n+\n+error: aborting due to previous error\n+"}, {"sha": "4dc31a283865c08f00027ed9af67bb3ac21eb931", "filename": "tests/ui/packed/issue-27060.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fpacked%2Fissue-27060.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fpacked%2Fissue-27060.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpacked%2Fissue-27060.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -4,7 +4,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     let _ = &good.data;\n    |             ^^^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -13,7 +14,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     let _ = &good.data2[0];\n    |             ^^^^^^^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -22,7 +24,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     let _ = &good.data;\n    |             ^^^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -31,7 +34,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     let _ = &good.data2[0];\n    |             ^^^^^^^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error: aborting due to 4 previous errors"}, {"sha": "57630a4b47018b3879ac19975a178788697d83a0", "filename": "tests/ui/packed/packed-struct-borrow-element-64bit.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fpacked%2Fpacked-struct-borrow-element-64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fpacked%2Fpacked-struct-borrow-element-64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpacked%2Fpacked-struct-borrow-element-64bit.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -4,7 +4,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     let brw = &foo.baz;\n    |               ^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error: aborting due to previous error"}, {"sha": "c1f749d6fbbbd876371fbf7d3619a471dd2b152a", "filename": "tests/ui/packed/packed-struct-borrow-element.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fpacked%2Fpacked-struct-borrow-element.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3edfd18c790971c77845bfc1a2be4f9281c5416/tests%2Fui%2Fpacked%2Fpacked-struct-borrow-element.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpacked%2Fpacked-struct-borrow-element.stderr?ref=d3edfd18c790971c77845bfc1a2be4f9281c5416", "patch": "@@ -4,7 +4,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     let brw = &foo.baz;\n    |               ^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error[E0793]: reference to packed field is unaligned\n@@ -13,7 +14,8 @@ error[E0793]: reference to packed field is unaligned\n LL |     let brw = &foo.baz;\n    |               ^^^^^^^^\n    |\n-   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: packed structs are only aligned by one byte, and many modern architectures penalize unaligned field accesses\n+   = note: creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n    = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)\n \n error: aborting due to 2 previous errors"}]}