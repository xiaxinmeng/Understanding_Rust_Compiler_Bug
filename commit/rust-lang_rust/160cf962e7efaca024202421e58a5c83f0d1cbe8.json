{"sha": "160cf962e7efaca024202421e58a5c83f0d1cbe8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MGNmOTYyZTdlZmFjYTAyNDIwMjQyMWU1OGE1YzgzZjBkMWNiZTg=", "commit": {"author": {"name": "Keegan McAllister", "email": "mcallister.keegan@gmail.com", "date": "2015-02-19T02:08:35Z"}, "committer": {"name": "Keegan McAllister", "email": "mcallister.keegan@gmail.com", "date": "2015-02-19T03:54:38Z"}, "message": "borrowck/README.md: Remove SCOPE (mostly unused)\n\nOnly one case is used in the text.  All of them are pretty straightforward, so\nI don't think the code needs an explicit link to the README.", "tree": {"sha": "ecdc698b7ab6757addb9e80954c545bff2d8e390", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecdc698b7ab6757addb9e80954c545bff2d8e390"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/160cf962e7efaca024202421e58a5c83f0d1cbe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/160cf962e7efaca024202421e58a5c83f0d1cbe8", "html_url": "https://github.com/rust-lang/rust/commit/160cf962e7efaca024202421e58a5c83f0d1cbe8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/160cf962e7efaca024202421e58a5c83f0d1cbe8/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c1fc1ca7b3b4c67e362e89e4cec33854d1e7de6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c1fc1ca7b3b4c67e362e89e4cec33854d1e7de6", "html_url": "https://github.com/rust-lang/rust/commit/0c1fc1ca7b3b4c67e362e89e4cec33854d1e7de6"}], "stats": {"total": 38, "additions": 1, "deletions": 37}, "files": [{"sha": "619301f17dd3740cbd602a04fd3897d32093b088", "filename": "src/librustc_borrowck/borrowck/README.md", "status": "modified", "additions": 1, "deletions": 35, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/160cf962e7efaca024202421e58a5c83f0d1cbe8/src%2Flibrustc_borrowck%2Fborrowck%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/160cf962e7efaca024202421e58a5c83f0d1cbe8/src%2Flibrustc_borrowck%2Fborrowck%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2FREADME.md?ref=160cf962e7efaca024202421e58a5c83f0d1cbe8", "patch": "@@ -375,48 +375,14 @@ Formally, we define a predicate `LIFETIME(LV, LT, MQ)`, which states that\n `MQ`\". The Rust code corresponding to this predicate is the module\n `middle::borrowck::gather_loans::lifetime`.\n \n-### The Scope function\n-\n-Several of the rules refer to a helper function `SCOPE(LV)=LT`.  The\n-`SCOPE(LV)` yields the lifetime `LT` for which the lvalue `LV` is\n-guaranteed to exist, presuming that no mutations occur.\n-\n-The scope of a local variable is the block where it is declared:\n-\n-```text\n-  SCOPE(X) = block where X is declared\n-```\n-\n-The scope of a field is the scope of the struct:\n-\n-```text\n-  SCOPE(LV.f) = SCOPE(LV)\n-```\n-\n-The scope of a unique referent is the scope of the pointer, since\n-(barring mutation or moves) the pointer will not be freed until\n-the pointer itself `LV` goes out of scope:\n-\n-```text\n-  SCOPE(*LV) = SCOPE(LV) if LV has type Box<T>\n-```\n-\n-The scope of a borrowed referent is the scope associated with the\n-pointer.  This is a conservative approximation, since the data that\n-the pointer points at may actually live longer:\n-\n-```text\n-  SCOPE(*LV) = LT if LV has type &'LT T or &'LT mut T\n-```\n-\n ### Checking lifetime of variables\n \n The rule for variables states that a variable can only be borrowed a\n lifetime `LT` that is a subregion of the variable's scope:\n \n ```text\n LIFETIME(X, LT, MQ)                 // L-Local\n-  LT <= SCOPE(X)\n+  LT <= block where X is declared\n ```\n \n ### Checking lifetime for owned content"}, {"sha": "9f7b4cf26e1c47fa60dabc40b6bdc37abb10c293", "filename": "src/librustc_borrowck/borrowck/gather_loans/lifetime.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/160cf962e7efaca024202421e58a5c83f0d1cbe8/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Flifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/160cf962e7efaca024202421e58a5c83f0d1cbe8/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Flifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Flifetime.rs?ref=160cf962e7efaca024202421e58a5c83f0d1cbe8", "patch": "@@ -106,8 +106,6 @@ impl<'a, 'tcx> GuaranteeLifetimeContext<'a, 'tcx> {\n         //! lvalue `cmt` is guaranteed to be valid without any\n         //! rooting etc, and presuming `cmt` is not mutated.\n \n-        // See the SCOPE(LV) function in doc.rs\n-\n         match cmt.cat {\n             mc::cat_rvalue(temp_scope) => {\n                 temp_scope"}]}