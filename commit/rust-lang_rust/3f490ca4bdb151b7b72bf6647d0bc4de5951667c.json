{"sha": "3f490ca4bdb151b7b72bf6647d0bc4de5951667c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNDkwY2E0YmRiMTUxYjdiNzJiZjY2NDdkMGJjNGRlNTk1MTY2N2M=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-20T16:20:07Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-20T19:38:13Z"}, "message": "convert region-liveness-drop{-,-no-}may-dangle.rs into ui tests\n\nThe \"match exact bits of CFG\" approach was fragile and uninformative.", "tree": {"sha": "0941bc9bb9050e564eaf7757f9a357103e3c5dc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0941bc9bb9050e564eaf7757f9a357103e3c5dc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f490ca4bdb151b7b72bf6647d0bc4de5951667c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f490ca4bdb151b7b72bf6647d0bc4de5951667c", "html_url": "https://github.com/rust-lang/rust/commit/3f490ca4bdb151b7b72bf6647d0bc4de5951667c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f490ca4bdb151b7b72bf6647d0bc4de5951667c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cba82561cf0773b8a2bc3358313e555ffd0352c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/cba82561cf0773b8a2bc3358313e555ffd0352c3", "html_url": "https://github.com/rust-lang/rust/commit/cba82561cf0773b8a2bc3358313e555ffd0352c3"}], "stats": {"total": 144, "additions": 78, "deletions": 66}, "files": [{"sha": "058a57fe612cff17c815c36bc1aa832339787130", "filename": "src/test/mir-opt/nll/region-liveness-drop-no-may-dangle.rs", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/cba82561cf0773b8a2bc3358313e555ffd0352c3/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-no-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cba82561cf0773b8a2bc3358313e555ffd0352c3/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-no-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-no-may-dangle.rs?ref=cba82561cf0773b8a2bc3358313e555ffd0352c3", "patch": "@@ -1,52 +0,0 @@\n-// Copyright 2012-2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Basic test for liveness constraints: the region (`R1`) that appears\n-// in the type of `p` includes the points after `&v[0]` up to (but not\n-// including) the call to `use_x`. The `else` branch is not included.\n-\n-// ignore-tidy-linelength\n-// compile-flags:-Znll -Zverbose\n-//                     ^^^^^^^^^ force compiler to dump more region information\n-\n-#![allow(warnings)]\n-\n-fn use_x(_: usize) -> bool { true }\n-\n-fn main() {\n-    let mut v = [1, 2, 3];\n-    let p: Wrap<& /* R1 */ usize> = Wrap { value: &v[0] };\n-    if true {\n-        use_x(*p.value);\n-    } else {\n-        use_x(22);\n-    }\n-\n-    // `p` will get dropped here. Because the `#[may_dangle]`\n-    // attribute is not present on `Wrap`, we must conservatively\n-    // assume that the dtor may access the `value` field, and hence we\n-    // must consider R1 to be live.\n-}\n-\n-struct Wrap<T> {\n-    value: T\n-}\n-\n-// Look ma, no `#[may_dangle]` attribute here.\n-impl<T> Drop for Wrap<T> {\n-    fn drop(&mut self) { }\n-}\n-\n-// END RUST SOURCE\n-// START rustc.main.nll.0.mir\n-// | '_#6r    | {bb2[3..=5], bb3[0..=2], bb4[0], bb5[0..=2], bb6[0], bb7[0..=1], bb8[0]}\n-// ...\n-// let _2: Wrap<&'_#6r usize>;\n-// END rustc.main.nll.0.mir"}, {"sha": "2780b34746378ac33b4736c8a856aad4bfe97621", "filename": "src/test/ui/nll/drop-may-dangle.rs", "status": "renamed", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3f490ca4bdb151b7b72bf6647d0bc4de5951667c/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f490ca4bdb151b7b72bf6647d0bc4de5951667c/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs?ref=3f490ca4bdb151b7b72bf6647d0bc4de5951667c", "patch": "@@ -12,8 +12,8 @@\n // in the type of `p` includes the points after `&v[0]` up to (but not\n // including) the call to `use_x`. The `else` branch is not included.\n \n-// compile-flags:-Znll -Zverbose\n-//                     ^^^^^^^^^ force compiler to dump more region information\n+// compile-flags:-Znll -Zborrowck=mir\n+// must-compile-successfully\n \n #![allow(warnings)]\n #![feature(dropck_eyepatch)]\n@@ -23,28 +23,24 @@ fn use_x(_: usize) -> bool { true }\n \n fn main() {\n     let mut v = [1, 2, 3];\n-    let p: Wrap<& /* R4 */ usize> = Wrap { value: &v[0] };\n+    let p: WrapMayDangle<& /* R4 */ usize> = WrapMayDangle { value: &v[0] };\n     if true {\n+        // `p` will get dropped at end of this block. However, because of\n+        // the `#[may_dangle]` attribute, we do not need to consider R4\n+        // live after this point.\n         use_x(*p.value);\n     } else {\n+        v[0] += 1;\n         use_x(22);\n     }\n \n-    // `p` will get dropped here. However, because of the\n-    // `#[may_dangle]` attribute, we do not need to consider R4 live.\n+    v[0] += 1;\n }\n \n-struct Wrap<T> {\n+struct WrapMayDangle<T> {\n     value: T\n }\n \n-unsafe impl<#[may_dangle] T> Drop for Wrap<T> {\n+unsafe impl<#[may_dangle] T> Drop for WrapMayDangle<T> {\n     fn drop(&mut self) { }\n }\n-\n-// END RUST SOURCE\n-// START rustc.main.nll.0.mir\n-// | '_#6r    | {bb2[3..=5], bb3[0..=1]}\n-// ...\n-// let _2: Wrap<&'_#6r usize>;\n-// END rustc.main.nll.0.mir", "previous_filename": "src/test/mir-opt/nll/region-liveness-drop-may-dangle.rs"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/ui/nll/drop-may-dangle.stderr", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3f490ca4bdb151b7b72bf6647d0bc4de5951667c/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f490ca4bdb151b7b72bf6647d0bc4de5951667c/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.stderr?ref=3f490ca4bdb151b7b72bf6647d0bc4de5951667c"}, {"sha": "0220858a0d59ed265eb0a5d2fda03953559ca8c0", "filename": "src/test/ui/nll/drop-no-may-dangle.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/3f490ca4bdb151b7b72bf6647d0bc4de5951667c/src%2Ftest%2Fui%2Fnll%2Fdrop-no-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f490ca4bdb151b7b72bf6647d0bc4de5951667c/src%2Ftest%2Fui%2Fnll%2Fdrop-no-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fdrop-no-may-dangle.rs?ref=3f490ca4bdb151b7b72bf6647d0bc4de5951667c", "patch": "@@ -0,0 +1,43 @@\n+// Copyright 2012-2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Basic test for liveness constraints: the region (`R1`) that appears\n+// in the type of `p` must include everything until `p` is dropped\n+// because of destructor. (Note that the stderr also identifies this\n+// destructor in the error message.)\n+\n+// compile-flags:-Znll -Zborrowck=mir -Znll-dump-cause\n+\n+#![allow(warnings)]\n+#![feature(dropck_eyepatch)]\n+#![feature(generic_param_attrs)]\n+\n+fn use_x(_: usize) -> bool { true }\n+\n+fn main() {\n+    let mut v = [1, 2, 3];\n+    let p: WrapMayNotDangle<&usize> = WrapMayNotDangle { value: &v[0] };\n+    if true {\n+        use_x(*p.value);\n+    } else {\n+        use_x(22);\n+        v[0] += 1; //~ ERROR cannot assign to `v[..]` because it is borrowed\n+    }\n+\n+    v[0] += 1; //~ ERROR cannot assign to `v[..]` because it is borrowed\n+}\n+\n+struct WrapMayNotDangle<T> {\n+    value: T\n+}\n+\n+impl<T> Drop for WrapMayNotDangle<T> {\n+    fn drop(&mut self) { }\n+}"}, {"sha": "ef850f3a568c0b84f3a5ddcc9b7090e1d423165e", "filename": "src/test/ui/nll/drop-no-may-dangle.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3f490ca4bdb151b7b72bf6647d0bc4de5951667c/src%2Ftest%2Fui%2Fnll%2Fdrop-no-may-dangle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f490ca4bdb151b7b72bf6647d0bc4de5951667c/src%2Ftest%2Fui%2Fnll%2Fdrop-no-may-dangle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fdrop-no-may-dangle.stderr?ref=3f490ca4bdb151b7b72bf6647d0bc4de5951667c", "patch": "@@ -0,0 +1,25 @@\n+error[E0506]: cannot assign to `v[..]` because it is borrowed\n+  --> $DIR/drop-no-may-dangle.rs:31:9\n+   |\n+26 |     let p: WrapMayNotDangle<&usize> = WrapMayNotDangle { value: &v[0] };\n+   |                                                                 ----- borrow of `v[..]` occurs here\n+...\n+31 |         v[0] += 1; //~ ERROR cannot assign to `v[..]` because it is borrowed\n+   |         ^^^^^^^^^ assignment to borrowed `v[..]` occurs here\n+...\n+35 | }\n+   |  - borrow later used here, when `p` is dropped\n+\n+error[E0506]: cannot assign to `v[..]` because it is borrowed\n+  --> $DIR/drop-no-may-dangle.rs:34:5\n+   |\n+26 |     let p: WrapMayNotDangle<&usize> = WrapMayNotDangle { value: &v[0] };\n+   |                                                                 ----- borrow of `v[..]` occurs here\n+...\n+34 |     v[0] += 1; //~ ERROR cannot assign to `v[..]` because it is borrowed\n+   |     ^^^^^^^^^ assignment to borrowed `v[..]` occurs here\n+35 | }\n+   |  - borrow later used here, when `p` is dropped\n+\n+error: aborting due to 2 previous errors\n+"}]}