{"sha": "8c1092455e6b110a28ff27e76a7e21e48fd0a038", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMTA5MjQ1NWU2YjExMGEyOGZmMjdlNzZhN2UyMWU0OGZkMGEwMzg=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-29T11:17:49Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-29T11:17:49Z"}, "message": "Use `find_node_at_range`", "tree": {"sha": "66750f6cd984712aa59a3cb4fdd9347655e21d91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66750f6cd984712aa59a3cb4fdd9347655e21d91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c1092455e6b110a28ff27e76a7e21e48fd0a038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c1092455e6b110a28ff27e76a7e21e48fd0a038", "html_url": "https://github.com/rust-lang/rust/commit/8c1092455e6b110a28ff27e76a7e21e48fd0a038", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c1092455e6b110a28ff27e76a7e21e48fd0a038/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6580aa380ed68cbd3a8e05aa6944d759d3ea247", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6580aa380ed68cbd3a8e05aa6944d759d3ea247", "html_url": "https://github.com/rust-lang/rust/commit/e6580aa380ed68cbd3a8e05aa6944d759d3ea247"}], "stats": {"total": 33, "additions": 7, "deletions": 26}, "files": [{"sha": "8714e4978c5424cd276753a86ce8a98e90780292", "filename": "crates/ide_assists/src/assist_context.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c1092455e6b110a28ff27e76a7e21e48fd0a038/crates%2Fide_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c1092455e6b110a28ff27e76a7e21e48fd0a038/crates%2Fide_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fassist_context.rs?ref=8c1092455e6b110a28ff27e76a7e21e48fd0a038", "patch": "@@ -13,7 +13,7 @@ use ide_db::{\n     RootDatabase,\n };\n use syntax::{\n-    algo::{self, find_node_at_offset, SyntaxRewriter},\n+    algo::{self, find_node_at_offset, find_node_at_range, SyntaxRewriter},\n     AstNode, AstToken, SourceFile, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxNodePtr,\n     SyntaxToken, TextRange, TextSize, TokenAtOffset,\n };\n@@ -89,6 +89,9 @@ impl<'a> AssistContext<'a> {\n     pub(crate) fn find_node_at_offset<N: AstNode>(&self) -> Option<N> {\n         find_node_at_offset(self.source_file.syntax(), self.offset())\n     }\n+    pub(crate) fn find_node_at_range<N: AstNode>(&self) -> Option<N> {\n+        find_node_at_range(self.source_file.syntax(), self.frange.range)\n+    }\n     pub(crate) fn find_node_at_offset_with_descend<N: AstNode>(&self) -> Option<N> {\n         self.sema.find_node_at_offset_with_descend(self.source_file.syntax(), self.offset())\n     }"}, {"sha": "f75d3546248629fa594d76b557ceda54c5482b06", "filename": "crates/ide_assists/src/handlers/extract_type_alias.rs", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8c1092455e6b110a28ff27e76a7e21e48fd0a038/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c1092455e6b110a28ff27e76a7e21e48fd0a038/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs?ref=8c1092455e6b110a28ff27e76a7e21e48fd0a038", "patch": "@@ -1,7 +1,4 @@\n-use syntax::{\n-    ast::{self, AstNode},\n-    SyntaxKind,\n-};\n+use syntax::ast::{self, AstNode};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n \n@@ -27,28 +24,9 @@ pub(crate) fn extract_type_alias(acc: &mut Assists, ctx: &AssistContext) -> Opti\n         return None;\n     }\n \n-    let node = match ctx.covering_element() {\n-        syntax::NodeOrToken::Node(node) => node,\n-        syntax::NodeOrToken::Token(tok) => tok.parent()?,\n-    };\n-    let range = node.text_range();\n-    let mut type_like_node = None;\n-    for node in node.ancestors() {\n-        if node.text_range() != range {\n-            break;\n-        }\n-\n-        let kind = node.kind();\n-        if ast::Type::can_cast(kind) || kind == SyntaxKind::TYPE_ARG {\n-            type_like_node = Some(node);\n-            break;\n-        }\n-    }\n-\n-    let node = type_like_node?;\n-\n+    let node = ctx.find_node_at_range::<ast::Type>()?;\n     let insert = ctx.find_node_at_offset::<ast::Item>()?.syntax().text_range().start();\n-    let target = node.text_range();\n+    let target = node.syntax().text_range();\n \n     acc.add(\n         AssistId(\"extract_type_alias\", AssistKind::RefactorExtract),"}]}