{"sha": "0c8700b9d50a1e3d31f7b6c0956df555279ac441", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjODcwMGI5ZDUwYTFlM2QzMWY3YjZjMDk1NmRmNTU1Mjc5YWM0NDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-20T05:01:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-20T05:01:38Z"}, "message": "Auto merge of #59298 - kennytm:rollup, r=kennytm\n\nRollup of 5 pull requests (all of which changes `src/ci/docker`)\n\nSuccessful merges:\n\n - #58986 ([CI] Update binutils for powerpc64 and powerpc64le)\n - #59038 (Track embedded-book in the toolstate)\n - #59055 (CI: Set job names.)\n - #59253 (Calculate Docker cache hash precisely from Dockerfile's dependencies)\n - #59257 (Update CI configuration for building Redox libraries)\n\nFailed merges:\n\nr? @ghost", "tree": {"sha": "c52732861c5c83e2d598205c1b15feb46b503c21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c52732861c5c83e2d598205c1b15feb46b503c21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c8700b9d50a1e3d31f7b6c0956df555279ac441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c8700b9d50a1e3d31f7b6c0956df555279ac441", "html_url": "https://github.com/rust-lang/rust/commit/0c8700b9d50a1e3d31f7b6c0956df555279ac441", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c8700b9d50a1e3d31f7b6c0956df555279ac441/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eb4890dfe6db0279fdd3cda19f9643873ae3db9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eb4890dfe6db0279fdd3cda19f9643873ae3db9", "html_url": "https://github.com/rust-lang/rust/commit/3eb4890dfe6db0279fdd3cda19f9643873ae3db9"}, {"sha": "f31974a18e9bb210e1057b73674077436b122107", "url": "https://api.github.com/repos/rust-lang/rust/commits/f31974a18e9bb210e1057b73674077436b122107", "html_url": "https://github.com/rust-lang/rust/commit/f31974a18e9bb210e1057b73674077436b122107"}], "stats": {"total": 171, "additions": 122, "deletions": 49}, "files": [{"sha": "7a8772d7abd63556a991e2dd2f10b8c0ccdbba69", "filename": ".travis.yml", "status": "modified", "additions": 48, "deletions": 6, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/0c8700b9d50a1e3d31f7b6c0956df555279ac441/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/0c8700b9d50a1e3d31f7b6c0956df555279ac441/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=0c8700b9d50a1e3d31f7b6c0956df555279ac441", "patch": "@@ -12,20 +12,27 @@ git:\n   depth: 2\n   submodules: false\n \n+env:\n+  global:\n+    - CI_JOB_NAME=$TRAVIS_JOB_NAME\n+\n matrix:\n   fast_finish: true\n   include:\n     # Images used in testing PR and try-build should be run first.\n     - env: IMAGE=x86_64-gnu-llvm-6.0 RUST_BACKTRACE=1\n+      name: x86_64-gnu-llvm-6.0\n       if: type = pull_request OR branch = auto\n \n     - env: IMAGE=dist-x86_64-linux DEPLOY=1\n+      name: dist-x86_64-linux\n       if: branch = try OR branch = auto\n \n     # \"alternate\" deployments, these are \"nightlies\" but have LLVM assertions\n     # turned on, they're deployed to a different location primarily for\n     # additional testing.\n-    - env: IMAGE=dist-x86_64-linux DEPLOY_ALT=1 CI_JOB_NAME=dist-x86_64-linux-alt\n+    - env: IMAGE=dist-x86_64-linux DEPLOY_ALT=1\n+      name: dist-x86_64-linux-alt\n       if: branch = try OR branch = auto\n \n     - env: >\n@@ -37,9 +44,9 @@ matrix:\n         MACOSX_DEPLOYMENT_TARGET=10.7\n         NO_LLVM_ASSERTIONS=1\n         NO_DEBUG_ASSERTIONS=1\n-        CI_JOB_NAME=dist-x86_64-apple-alt\n       os: osx\n       osx_image: xcode9.3-moar\n+      name: dist-x86_64-apple-alt\n       if: branch = auto\n \n     # macOS builders. These are placed near the beginning because they are very\n@@ -60,9 +67,9 @@ matrix:\n         MACOSX_STD_DEPLOYMENT_TARGET=10.7\n         NO_LLVM_ASSERTIONS=1\n         NO_DEBUG_ASSERTIONS=1\n-        CI_JOB_NAME=x86_64-apple\n       os: osx\n       osx_image: xcode9.3-moar\n+      name: x86_64-apple\n       if: branch = auto\n \n     - env: >\n@@ -74,9 +81,9 @@ matrix:\n         MACOSX_STD_DEPLOYMENT_TARGET=10.7\n         NO_LLVM_ASSERTIONS=1\n         NO_DEBUG_ASSERTIONS=1\n-        CI_JOB_NAME=i686-apple\n       os: osx\n       osx_image: xcode9.3-moar\n+      name: i686-apple\n       if: branch = auto\n \n     # OSX builders producing releases. These do not run the full test suite and\n@@ -95,9 +102,9 @@ matrix:\n         NO_LLVM_ASSERTIONS=1\n         NO_DEBUG_ASSERTIONS=1\n         DIST_REQUIRE_ALL_TOOLS=1\n-        CI_JOB_NAME=dist-i686-apple\n       os: osx\n       osx_image: xcode9.3-moar\n+      name: dist-i686-apple\n       if: branch = auto\n \n     - env: >\n@@ -110,81 +117,116 @@ matrix:\n         NO_LLVM_ASSERTIONS=1\n         NO_DEBUG_ASSERTIONS=1\n         DIST_REQUIRE_ALL_TOOLS=1\n-        CI_JOB_NAME=dist-x86_64-apple\n       os: osx\n       osx_image: xcode9.3-moar\n+      name: dist-x86_64-apple\n       if: branch = auto\n \n     # Linux builders, remaining docker images\n     - env: IMAGE=arm-android\n+      name: arm-android\n       if: branch = auto\n     - env: IMAGE=armhf-gnu\n+      name: armhf-gnu\n       if: branch = auto\n     - env: IMAGE=dist-various-1 DEPLOY=1\n+      name: dist-various-1\n       if: branch = auto\n     - env: IMAGE=dist-various-2 DEPLOY=1\n+      name: dist-various-2\n       if: branch = auto\n     - env: IMAGE=dist-aarch64-linux DEPLOY=1\n+      name: dist-aarch64-linux\n       if: branch = auto\n     - env: IMAGE=dist-android DEPLOY=1\n+      name: dist-android\n       if: branch = auto\n     - env: IMAGE=dist-arm-linux DEPLOY=1\n+      name: dist-arm-linux\n       if: branch = auto\n     - env: IMAGE=dist-armhf-linux DEPLOY=1\n+      name: dist-armhf-linux\n       if: branch = auto\n     - env: IMAGE=dist-armv7-linux DEPLOY=1\n+      name: dist-armv7-linux\n       if: branch = auto\n     - env: IMAGE=dist-i586-gnu-i586-i686-musl DEPLOY=1\n+      name: dist-i586-gnu-i586-i686-musl\n       if: branch = auto\n     - env: IMAGE=dist-i686-freebsd DEPLOY=1\n+      name: dist-i686-freebsd\n       if: branch = auto\n     - env: IMAGE=dist-i686-linux DEPLOY=1\n+      name: dist-i686-linux\n       if: branch = auto\n     - env: IMAGE=dist-mips-linux DEPLOY=1\n+      name: dist-mips-linux\n       if: branch = auto\n     - env: IMAGE=dist-mips64-linux DEPLOY=1\n+      name: dist-mips64-linux\n       if: branch = auto\n     - env: IMAGE=dist-mips64el-linux DEPLOY=1\n+      name: dist-mips64el-linux\n       if: branch = auto\n     - env: IMAGE=dist-mipsel-linux DEPLOY=1\n+      name: dist-mipsel-linux\n       if: branch = auto\n     - env: IMAGE=dist-powerpc-linux DEPLOY=1\n+      name: dist-powerpc-linux\n       if: branch = auto\n     - env: IMAGE=dist-powerpc64-linux DEPLOY=1\n+      name: dist-powerpc64-linux\n       if: branch = auto\n     - env: IMAGE=dist-powerpc64le-linux DEPLOY=1\n+      name: dist-powerpc64le-linux\n       if: branch = auto\n     - env: IMAGE=dist-s390x-linux DEPLOY=1\n+      name: dist-s390x-linux\n       if: branch = auto\n     - env: IMAGE=dist-x86_64-freebsd DEPLOY=1\n+      name: dist-x86_64-freebsd\n       if: branch = auto\n     - env: IMAGE=dist-x86_64-musl DEPLOY=1\n+      name: dist-x86_64-musl\n       if: branch = auto\n     - env: IMAGE=dist-x86_64-netbsd DEPLOY=1\n+      name: dist-x86_64-netbsd\n       if: branch = auto\n     - env: IMAGE=asmjs\n+      name: asmjs\n       if: branch = auto\n     - env: IMAGE=i686-gnu\n+      name: i686-gnu\n       if: branch = auto\n     - env: IMAGE=i686-gnu-nopt\n+      name: i686-gnu-nopt\n       if: branch = auto\n     - env: IMAGE=test-various\n+      name: test-various\n       if: branch = auto\n     - env: IMAGE=x86_64-gnu\n+      name: x86_64-gnu\n       if: branch = auto\n     - env: IMAGE=x86_64-gnu-full-bootstrap\n+      name: x86_64-gnu-full-bootstrap\n       if: branch = auto\n     - env: IMAGE=x86_64-gnu-aux\n+      name: x86_64-gnu-aux\n       if: branch = auto\n     - env: IMAGE=x86_64-gnu-tools\n+      name: x86_64-gnu-tools\n       if: branch = auto OR (type = pull_request AND commit_message =~ /(?i:^update.*\\b(rls|rustfmt|clippy|miri|cargo)\\b)/)\n     - env: IMAGE=x86_64-gnu-debug\n+      name: x86_64-gnu-debug\n       if: branch = auto\n     - env: IMAGE=x86_64-gnu-nopt\n+      name: x86_64-gnu-nopt\n       if: branch = auto\n     - env: IMAGE=x86_64-gnu-distcheck\n+      name: x86_64-gnu-distcheck\n       if: branch = auto\n     - env: IMAGE=mingw-check\n+      name: mingw-check\n       if: type = pull_request OR branch = auto\n \n     - stage: publish toolstate"}, {"sha": "ab0a29d2752b532195dba8f2c54ccf73186bb44e", "filename": "appveyor.yml", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/0c8700b9d50a1e3d31f7b6c0956df555279ac441/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/0c8700b9d50a1e3d31f7b6c0956df555279ac441/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=0c8700b9d50a1e3d31f7b6c0956df555279ac441", "patch": "@@ -10,34 +10,34 @@ environment:\n \n   matrix:\n   # 32/64 bit MSVC tests\n-  - MSYS_BITS: 64\n+  - CI_JOB_NAME: x86_64-msvc\n+    MSYS_BITS: 64\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-profiler\n     SCRIPT: python x.py test\n-    CI_JOB_NAME: x86_64-msvc\n-  - MSYS_BITS: 32\n+  - CI_JOB_NAME: i686-msvc-1\n+    MSYS_BITS: 32\n     RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n     SCRIPT: make appveyor-subset-1\n-    CI_JOB_NAME: i686-msvc-1\n-  - MSYS_BITS: 32\n+  - CI_JOB_NAME: i686-msvc-2\n+    MSYS_BITS: 32\n     RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n     SCRIPT: make appveyor-subset-2\n-    CI_JOB_NAME: i686-msvc-2\n \n   # MSVC aux tests\n-  - MSYS_BITS: 64\n+  - CI_JOB_NAME: x86_64-msvc-aux\n+    MSYS_BITS: 64\n     RUST_CHECK_TARGET: check-aux EXCLUDE_CARGO=1\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n-    CI_JOB_NAME: x86_64-msvc-aux\n-  - MSYS_BITS: 64\n+  - CI_JOB_NAME: x86_64-msvc-cargo\n+    MSYS_BITS: 64\n     SCRIPT: python x.py test src/tools/cargotest src/tools/cargo\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n-    CI_JOB_NAME: x86_64-msvc-cargo\n \n   # MSVC tools tests\n-  - MSYS_BITS: 64\n+  - CI_JOB_NAME: x86_64-msvc-tools\n+    MSYS_BITS: 64\n     SCRIPT: src/ci/docker/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstates.json windows\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstates.json --enable-test-miri\n-    CI_JOB_NAME: x86_64-msvc-tools\n \n   # 32/64-bit MinGW builds.\n   #\n@@ -52,72 +52,72 @@ environment:\n   # bucket, but they cleraly didn't originate there! The downloads originally\n   # came from the mingw-w64 SourceForge download site. Unfortunately\n   # SourceForge is notoriously flaky, so we mirror it on our own infrastructure.\n-  - MSYS_BITS: 32\n+  - CI_JOB_NAME: i686-mingw-1\n+    MSYS_BITS: 32\n     RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n     SCRIPT: make appveyor-subset-1\n     MINGW_URL: https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rust-ci-mirror\n     MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\n     MINGW_DIR: mingw32\n-    CI_JOB_NAME: i686-mingw-1\n-  - MSYS_BITS: 32\n+  - CI_JOB_NAME: i686-mingw-2\n+    MSYS_BITS: 32\n     RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n     SCRIPT: make appveyor-subset-2\n     MINGW_URL: https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rust-ci-mirror\n     MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\n     MINGW_DIR: mingw32\n-    CI_JOB_NAME: i686-mingw-2\n-  - MSYS_BITS: 64\n+  - CI_JOB_NAME: x86_64-mingw\n+    MSYS_BITS: 64\n     SCRIPT: python x.py test\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n     MINGW_URL: https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rust-ci-mirror\n     MINGW_ARCHIVE: x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z\n     MINGW_DIR: mingw64\n-    CI_JOB_NAME: x86_64-mingw\n \n   # 32/64 bit MSVC and GNU deployment\n-  - RUST_CONFIGURE_ARGS: >\n+  - CI_JOB_NAME: dist-x86_64-msvc\n+    RUST_CONFIGURE_ARGS: >\n       --build=x86_64-pc-windows-msvc\n       --target=x86_64-pc-windows-msvc,aarch64-pc-windows-msvc\n       --enable-full-tools\n       --enable-profiler\n     SCRIPT: python x.py dist\n     DIST_REQUIRE_ALL_TOOLS: 1\n     DEPLOY: 1\n-    CI_JOB_NAME: dist-x86_64-msvc\n-  - RUST_CONFIGURE_ARGS: >\n+  - CI_JOB_NAME: dist-i686-msvc\n+    RUST_CONFIGURE_ARGS: >\n       --build=i686-pc-windows-msvc\n       --target=i586-pc-windows-msvc\n       --enable-full-tools\n       --enable-profiler\n     SCRIPT: python x.py dist\n     DIST_REQUIRE_ALL_TOOLS: 1\n     DEPLOY: 1\n-    CI_JOB_NAME: dist-i686-msvc\n-  - MSYS_BITS: 32\n+  - CI_JOB_NAME: dist-i686-mingw\n+    MSYS_BITS: 32\n     RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-full-tools\n     SCRIPT: python x.py dist\n     MINGW_URL: https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rust-ci-mirror\n     MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\n     MINGW_DIR: mingw32\n     DIST_REQUIRE_ALL_TOOLS: 1\n     DEPLOY: 1\n-    CI_JOB_NAME: dist-i686-mingw\n-  - MSYS_BITS: 64\n+  - CI_JOB_NAME: dist-x86_64-mingw\n+    MSYS_BITS: 64\n     SCRIPT: python x.py dist\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-full-tools\n     MINGW_URL: https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rust-ci-mirror\n     MINGW_ARCHIVE: x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z\n     MINGW_DIR: mingw64\n     DIST_REQUIRE_ALL_TOOLS: 1\n     DEPLOY: 1\n-    CI_JOB_NAME: dist-x86_64-mingw\n \n   # \"alternate\" deployment, see .travis.yml for more info\n-  - MSYS_BITS: 64\n+  - CI_JOB_NAME: dist-x86_64-msvc-alt\n+    MSYS_BITS: 64\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\n     SCRIPT: python x.py dist\n     DEPLOY_ALT: 1\n-    CI_JOB_NAME: dist-x86_64-msvc-alt\n \n matrix:\n   fast_finish: true"}, {"sha": "11a3acd68e3e8c19e3aac3cc9f46ecf1aba66fe7", "filename": "src/ci/docker/disabled/dist-x86_64-redox/Dockerfile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-redox%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-redox%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-redox%2FDockerfile?ref=0c8700b9d50a1e3d31f7b6c0956df555279ac441", "patch": "@@ -7,8 +7,8 @@ COPY scripts/crosstool-ng.sh /scripts/\n RUN sh /scripts/crosstool-ng.sh\n \n WORKDIR /tmp\n-COPY cross/install-x86_64-redox.sh /tmp/\n-RUN ./install-x86_64-redox.sh\n+COPY dist-various-1/install-x86_64-redox.sh /scripts/\n+RUN sh /scripts/install-x86_64-redox.sh\n \n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh"}, {"sha": "fc53849a2ada41f6094b3793e96b093d8ffc606a", "filename": "src/ci/docker/dist-powerpc64-linux/build-powerpc64-toolchain.sh", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fbuild-powerpc64-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fbuild-powerpc64-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fbuild-powerpc64-toolchain.sh?ref=0c8700b9d50a1e3d31f7b6c0956df555279ac441", "patch": "@@ -3,9 +3,29 @@ set -ex\n \n source shared.sh\n \n+BINUTILS=2.32\n+TARGET=powerpc64-unknown-linux-gnu\n+PREFIX=/x-tools/$TARGET\n+SYSROOT=$PREFIX/$TARGET/sysroot\n+\n mkdir build\n cd build\n cp ../powerpc64-linux-gnu.config .config\n hide_output ct-ng build\n cd ..\n rm -rf build\n+\n+chmod -R u+w $PREFIX\n+\n+# Next, download and build newer binutils.\n+mkdir binutils-$TARGET\n+pushd binutils-$TARGET\n+curl https://ftp.gnu.org/gnu/binutils/binutils-$BINUTILS.tar.bz2 | tar xjf -\n+mkdir binutils-build\n+cd binutils-build\n+hide_output ../binutils-$BINUTILS/configure --target=$TARGET \\\n+  --prefix=$PREFIX --with-sysroot=$SYSROOT\n+hide_output make -j10\n+hide_output make install\n+popd\n+rm -rf binutils-$TARGET"}, {"sha": "f866a24287f9e6d9aed7b0758bd4ee258f37ee1c", "filename": "src/ci/docker/dist-powerpc64le-linux/build-powerpc64le-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh?ref=0c8700b9d50a1e3d31f7b6c0956df555279ac441", "patch": "@@ -4,7 +4,7 @@ set -ex\n \n source shared.sh\n \n-BINUTILS=2.25.1\n+BINUTILS=2.32\n GCC=5.3.0\n TARGET=powerpc64le-linux-gnu\n SYSROOT=/usr/local/$TARGET/sysroot"}, {"sha": "339042bb6729ab2eb16adfb8825a86db0b363147", "filename": "src/ci/docker/dist-various-1/install-x86_64-redox.sh", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-x86_64-redox.sh", "raw_url": "https://github.com/rust-lang/rust/raw/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-x86_64-redox.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-x86_64-redox.sh?ref=0c8700b9d50a1e3d31f7b6c0956df555279ac441", "patch": "@@ -3,11 +3,5 @@\n \n set -ex\n \n-apt-get update\n-apt-get install -y --no-install-recommends software-properties-common apt-transport-https\n-\n-apt-key adv --batch --yes --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys AA12E97F0881517F\n-add-apt-repository -y 'deb https://static.redox-os.org/toolchain/apt /'\n-\n-apt-get update\n-apt-get install -y x86-64-unknown-redox-gcc\n+curl https://static.redox-os.org/toolchain/x86_64-unknown-redox/relibc-install.tar.gz | \\\n+tar --extract --gzip --directory /usr/local"}, {"sha": "ef151750af9bfcb7962760c07f4de7675a0fa73c", "filename": "src/ci/docker/run.sh", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Frun.sh?ref=0c8700b9d50a1e3d31f7b6c0956df555279ac441", "patch": "@@ -22,7 +22,18 @@ if [ -f \"$docker_dir/$image/Dockerfile\" ]; then\n       hash_key=/tmp/.docker-hash-key.txt\n       rm -f \"${hash_key}\"\n       echo $image >> $hash_key\n-      find $docker_dir -type f | sort | xargs cat >> $hash_key\n+\n+      cat \"$docker_dir/$image/Dockerfile\" >> $hash_key\n+      # Look for all source files involves in the COPY command\n+      copied_files=/tmp/.docker-copied-files.txt\n+      rm -f \"$copied_files\"\n+      for i in $(sed -n -e 's/^COPY \\(.*\\) .*$/\\1/p' \"$docker_dir/$image/Dockerfile\"); do\n+        # List the file names\n+        find \"$docker_dir/$i\" -type f >> $copied_files\n+      done\n+      # Sort the file names and cat the content into the hash key\n+      sort $copied_files | xargs cat >> $hash_key\n+\n       docker --version >> $hash_key\n       cksum=$(sha512sum $hash_key | \\\n         awk '{print $1}')"}, {"sha": "97e6ee25ec7a024edcbc9877f40de3069bfaaf67", "filename": "src/ci/docker/x86_64-gnu-tools/checktools.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "raw_url": "https://github.com/rust-lang/rust/raw/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh?ref=0c8700b9d50a1e3d31f7b6c0956df555279ac441", "patch": "@@ -78,6 +78,7 @@ status_check() {\n     check_dispatch $1 beta clippy-driver src/tools/clippy\n     # these tools are not required for beta to successfully branch\n     check_dispatch $1 nightly miri src/tools/miri\n+    check_dispatch $1 nightly embedded-book src/doc/embedded-book\n }\n \n # If this PR is intended to update one of these tools, do not let the build pass"}, {"sha": "f2a585e6273070a70639233d6cebe00c1dc584c1", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/0c8700b9d50a1e3d31f7b6c0956df555279ac441/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=0c8700b9d50a1e3d31f7b6c0956df555279ac441", "patch": "@@ -12,7 +12,7 @@\n except ImportError:\n     import urllib.request as urllib2\n \n-# List of people to ping when the status of a tool changed.\n+# List of people to ping when the status of a tool or a book changed.\n MAINTAINERS = {\n     'miri': '@oli-obk @RalfJung @eddyb',\n     'clippy-driver': '@Manishearth @llogiq @mcarton @oli-obk @phansch',\n@@ -22,6 +22,10 @@\n     'nomicon': '@frewsxcv @Gankro',\n     'reference': '@steveklabnik @Havvy @matthewjasper @alercah',\n     'rust-by-example': '@steveklabnik @marioidival @projektir',\n+    'embedded-book': (\n+        '@adamgreig @andre-richter @jamesmunns @korken89 '\n+        '@ryankurte @thejpster @therealprof'\n+    ),\n }\n \n REPOS = {\n@@ -33,6 +37,7 @@\n     'nomicon': 'https://github.com/rust-lang-nursery/nomicon',\n     'reference': 'https://github.com/rust-lang-nursery/reference',\n     'rust-by-example': 'https://github.com/rust-lang/rust-by-example',\n+    'embedded-book': 'https://github.com/rust-embedded/book',\n }\n \n \n@@ -70,7 +75,7 @@ def issue(\n \n             cc @{}, the PR reviewer, and @rust-lang/compiler -- nominating for prioritization.\n \n-            ''').format(relevant_pr_number, tool, REPOS[tool], relevant_pr_user, pr_reviewer),\n+            ''').format(relevant_pr_number, tool, REPOS.get(tool), relevant_pr_user, pr_reviewer),\n             'title': '`{}` no longer builds after {}'.format(tool, relevant_pr_number),\n             'assignees': assignees,\n             'labels': ['T-compiler', 'I-nominated'],\n@@ -137,7 +142,7 @@ def update_latest(\n             if build_failed:\n                 try:\n                     issue(\n-                        tool, MAINTAINERS.get(tool),\n+                        tool, MAINTAINERS.get(tool, ''),\n                         relevant_pr_number, relevant_pr_user, pr_reviewer,\n                     )\n                 except IOError as e:"}]}