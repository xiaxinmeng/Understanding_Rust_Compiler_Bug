{"sha": "988b3d5f9e43a9d63a8bff86756c27b9cb69615c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4OGIzZDVmOWU0M2E5ZDYzYThiZmY4Njc1NmMyN2I5Y2I2OTYxNWM=", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2019-02-27T17:11:35Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2019-02-27T13:30:15Z"}, "message": "Implement ExactSizeIterator for ToLowercase and ToUppercase", "tree": {"sha": "68cb7fc749cc1c5713f22331c8bad918c79a728a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68cb7fc749cc1c5713f22331c8bad918c79a728a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/988b3d5f9e43a9d63a8bff86756c27b9cb69615c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/988b3d5f9e43a9d63a8bff86756c27b9cb69615c", "html_url": "https://github.com/rust-lang/rust/commit/988b3d5f9e43a9d63a8bff86756c27b9cb69615c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/988b3d5f9e43a9d63a8bff86756c27b9cb69615c/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f47ec2ad5b6887b3d400aee49e2294bd27733d18", "url": "https://api.github.com/repos/rust-lang/rust/commits/f47ec2ad5b6887b3d400aee49e2294bd27733d18", "html_url": "https://github.com/rust-lang/rust/commit/f47ec2ad5b6887b3d400aee49e2294bd27733d18"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "95b7c066793fc4ee812a6b4182efc6aee85cc869", "filename": "src/libcore/char/mod.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/988b3d5f9e43a9d63a8bff86756c27b9cb69615c/src%2Flibcore%2Fchar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/988b3d5f9e43a9d63a8bff86756c27b9cb69615c/src%2Flibcore%2Fchar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fmod.rs?ref=988b3d5f9e43a9d63a8bff86756c27b9cb69615c", "patch": "@@ -389,11 +389,17 @@ impl Iterator for ToLowercase {\n     fn next(&mut self) -> Option<char> {\n         self.0.next()\n     }\n+    fn size_hint(&self) -> (usize, Option<usize>) {\n+        self.0.size_hint()\n+    }\n }\n \n #[stable(feature = \"fused\", since = \"1.26.0\")]\n impl FusedIterator for ToLowercase {}\n \n+#[stable(feature = \"exact_size_case_mapping_iter\", since = \"1.34.0\")]\n+impl ExactSizeIterator for ToLowercase {}\n+\n /// Returns an iterator that yields the uppercase equivalent of a `char`.\n ///\n /// This `struct` is created by the [`to_uppercase`] method on [`char`]. See\n@@ -411,11 +417,17 @@ impl Iterator for ToUppercase {\n     fn next(&mut self) -> Option<char> {\n         self.0.next()\n     }\n+    fn size_hint(&self) -> (usize, Option<usize>) {\n+        self.0.size_hint()\n+    }\n }\n \n #[stable(feature = \"fused\", since = \"1.26.0\")]\n impl FusedIterator for ToUppercase {}\n \n+#[stable(feature = \"exact_size_case_mapping_iter\", since = \"1.34.0\")]\n+impl ExactSizeIterator for ToUppercase {}\n+\n #[derive(Debug, Clone)]\n enum CaseMappingIter {\n     Three(char, char, char),\n@@ -457,6 +469,16 @@ impl Iterator for CaseMappingIter {\n             CaseMappingIter::Zero => None,\n         }\n     }\n+\n+    fn size_hint(&self) -> (usize, Option<usize>) {\n+        let size = match self {\n+            CaseMappingIter::Three(..) => 3,\n+            CaseMappingIter::Two(..) => 2,\n+            CaseMappingIter::One(_) => 1,\n+            CaseMappingIter::Zero => 0,\n+        };\n+        (size, Some(size))\n+    }\n }\n \n impl fmt::Display for CaseMappingIter {"}, {"sha": "579feed288adbcb10fdd43525c30cdb1618fab08", "filename": "src/libcore/tests/char.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/988b3d5f9e43a9d63a8bff86756c27b9cb69615c/src%2Flibcore%2Ftests%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/988b3d5f9e43a9d63a8bff86756c27b9cb69615c/src%2Flibcore%2Ftests%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fchar.rs?ref=988b3d5f9e43a9d63a8bff86756c27b9cb69615c", "patch": "@@ -76,6 +76,8 @@ fn test_to_digit() {\n #[test]\n fn test_to_lowercase() {\n     fn lower(c: char) -> String {\n+        let to_lowercase = c.to_uppercase();\n+        assert_eq!(to_lowercase.len(), to_lowercase.count());\n         let iter: String = c.to_lowercase().collect();\n         let disp: String = c.to_lowercase().to_string();\n         assert_eq!(iter, disp);\n@@ -101,6 +103,8 @@ fn test_to_lowercase() {\n #[test]\n fn test_to_uppercase() {\n     fn upper(c: char) -> String {\n+        let to_uppercase = c.to_uppercase();\n+        assert_eq!(to_uppercase.len(), to_uppercase.count());\n         let iter: String = c.to_uppercase().collect();\n         let disp: String = c.to_uppercase().to_string();\n         assert_eq!(iter, disp);"}]}