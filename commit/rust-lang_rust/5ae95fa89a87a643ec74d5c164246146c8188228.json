{"sha": "5ae95fa89a87a643ec74d5c164246146c8188228", "node_id": "C_kwDOAAsO6NoAKDVhZTk1ZmE4OWE4N2E2NDNlYzc0ZDVjMTY0MjQ2MTQ2YzgxODgyMjg", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-06-07T16:36:34Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-06-07T16:38:53Z"}, "message": "Document Rust's stance on `/proc/self/mem`\n\nAdd documentation to `std::os::unix::io` describing Rust's stance on\n`/proc/self/mem`, treating it as an external entity which is outside\nthe scope of Rust's safety guarantees.", "tree": {"sha": "c844bb08e2bae738b68e74239a306ec7dc391c24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c844bb08e2bae738b68e74239a306ec7dc391c24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ae95fa89a87a643ec74d5c164246146c8188228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ae95fa89a87a643ec74d5c164246146c8188228", "html_url": "https://github.com/rust-lang/rust/commit/5ae95fa89a87a643ec74d5c164246146c8188228", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ae95fa89a87a643ec74d5c164246146c8188228/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a8e71385940c2f02ec4b23876c0a36fd09bdefe", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a8e71385940c2f02ec4b23876c0a36fd09bdefe", "html_url": "https://github.com/rust-lang/rust/commit/3a8e71385940c2f02ec4b23876c0a36fd09bdefe"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "d2c5f7413245888813d352c13211d4307e722f93", "filename": "library/std/src/os/unix/io/mod.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5ae95fa89a87a643ec74d5c164246146c8188228/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ae95fa89a87a643ec74d5c164246146c8188228/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs?ref=5ae95fa89a87a643ec74d5c164246146c8188228", "patch": "@@ -44,6 +44,26 @@\n //! Like boxes, `OwnedFd` values conceptually own the resource they point to,\n //! and free (close) it when they are dropped.\n //!\n+//! ## What about `/proc/self/mem` and similar OS features?\n+//!\n+//! Some platforms have a feature known as `/proc/self/mem`, which is a\n+//! filesystem path that can be opened, producing a file descriptor that, when\n+//! read from or written to, reads and writes the process's memory. These reads\n+//! and writes happen outside the control of the Rust compiler, so they do not\n+//! uphold Rust's memory safety guarantees.\n+//!\n+//! Does this mean that all APIs that might allow `/proc/self/mem` to be opened\n+//! and read from or written to must be `unsafe`? No. Rust's safety guarantees\n+//! only cover what the program itself can do, and not what entities outside\n+//! the program can do to it. `/proc/self/mem` is considered to be such an\n+//! external entity, along with debugggers and people with physical access to\n+//! the hardware. This is true even in cases where the program is controling\n+//! the external entity.\n+//!\n+//! If you desire to comprehensively prevent programs from reaching out and\n+//! causing external entities to reach back in and violate memory safety, it's\n+//! necessary to use *sandboxing*, which is outside the scope of `std`.\n+//!\n //! [`BorrowedFd<'a>`]: crate::os::unix::io::BorrowedFd\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]"}]}