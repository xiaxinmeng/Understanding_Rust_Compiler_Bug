{"sha": "ac9157b482e916c09e2ec35bb7e514ae7b6b9c03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjOTE1N2I0ODJlOTE2YzA5ZTJlYzM1YmI3ZTUxNGFlN2I2YjljMDM=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-12T00:54:47Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-15T14:54:06Z"}, "message": "EMPTY_MAP -> EMPTY_SET", "tree": {"sha": "cab154a4c95ca348da5795cb42485dbc43d88c91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cab154a4c95ca348da5795cb42485dbc43d88c91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac9157b482e916c09e2ec35bb7e514ae7b6b9c03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac9157b482e916c09e2ec35bb7e514ae7b6b9c03", "html_url": "https://github.com/rust-lang/rust/commit/ac9157b482e916c09e2ec35bb7e514ae7b6b9c03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac9157b482e916c09e2ec35bb7e514ae7b6b9c03/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2ff0e703eef715737ebb2afab04ec3f73cbf4bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2ff0e703eef715737ebb2afab04ec3f73cbf4bf", "html_url": "https://github.com/rust-lang/rust/commit/b2ff0e703eef715737ebb2afab04ec3f73cbf4bf"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f433c78890ffa373c265683cef42b4559351a115", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac9157b482e916c09e2ec35bb7e514ae7b6b9c03/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac9157b482e916c09e2ec35bb7e514ae7b6b9c03/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=ac9157b482e916c09e2ec35bb7e514ae7b6b9c03", "patch": "@@ -364,9 +364,6 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n         ..Options::default()\n     };\n \n-    lazy_static! {\n-        static ref EMPTY_MAP: FxHashSet<LocalDefId> = FxHashSet::default();\n-    }\n     let config = interface::Config {\n         opts: sessopts,\n         crate_cfg: interface::parse_cfgspecs(cfgs),\n@@ -381,12 +378,15 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n         lint_caps,\n         register_lints: None,\n         override_queries: Some(|_sess, local_providers, external_providers| {\n+            lazy_static! {\n+                static ref EMPTY_SET: FxHashSet<LocalDefId> = FxHashSet::default();\n+            }\n             // Most lints will require typechecking, so just don't run them.\n             local_providers.lint_mod = |_, _| {};\n             external_providers.lint_mod = |_, _| {};\n             local_providers.typeck_item_bodies = |_, _| {};\n             // hack so that `used_trait_imports` won't try to call typeck_tables_of\n-            local_providers.used_trait_imports = |_, _| &EMPTY_MAP;\n+            local_providers.used_trait_imports = |_, _| &EMPTY_SET;\n             // In case typeck does end up being called, don't ICE in case there were name resolution errors\n             local_providers.typeck_tables_of = move |tcx, def_id| {\n                 // Closures' tables come from their outermost function,"}]}