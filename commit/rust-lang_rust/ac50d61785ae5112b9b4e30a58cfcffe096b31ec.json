{"sha": "ac50d61785ae5112b9b4e30a58cfcffe096b31ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNTBkNjE3ODVhZTUxMTJiOWI0ZTMwYTU4Y2ZjZmZlMDk2YjMxZWM=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-08-07T16:57:21Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-08-07T17:41:45Z"}, "message": "instance: polymorphize `FnDef` substs\n\nThis commit extends previous polymorphization of substs to polymorphize\n`FnDef`.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "193546fbb3d2110e3c9db793b84abf79b3fa7743", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/193546fbb3d2110e3c9db793b84abf79b3fa7743"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac50d61785ae5112b9b4e30a58cfcffe096b31ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl8tklkACgkQJZLnbIc4\nH9n2JQ//SKOAfM0Y9Oew8GziifvkyDQkJRVHpvb9HB6sT05jFpmnO0XFRouc+pDl\nsx4SZug2akcYy/2UapGN9IQNoeFH0I0+HlEsfbur9kln/5d5Vzc4Ex4jkxsvXUHo\n223BjTxnoCC6VgZIjQmiKWR4fG+d3f360jv84cvF4UoUvpfBNZbNiGRvmFUpapa5\nqmTFQAqO50GbwXVEX1ypTYmgaA3LfFmRvqzM4YGcmBv9D2bQikGhAXv/r9TfAni9\nT9n5y+PYE7h1VnBHidIssNyAsfu9uN93EV/xuTXLhlcAPBVidAwjBP6+8hvHNygf\nrhGJPiqMqM+z9tnmQCzQfSTV5z50ZWqHhr3Xy5GBmzEsS2CSB3LJsyYuL4hKrYXb\nngOo2JD/4lhmXKzyJ13pJckXRk9vcvz7VoDum6roTs/11ou/rTGnngdVi751VvWZ\n1Id8/pE/Wz2m2vn03f7WZsSbPtJeh4iFP9HStw7XBRNHJ1GEVXzQyTaekmvcaVtq\nArK+MhXHkFfp+8G6fuqmjdKTSsPLify8kgS3mRdkJsSwavbcP9iNXZLpwzRPie8J\n0+c4iWgFoKuHO31yjwenKC2rNCLQ2MEmqrKlbN9Czt7D8CijE54P2nauPMMZZA57\nrFGCL36e++mIo9pUPdCQszA4i37qclVXFn+7+G0JEKn6nRDOI1o=\n=u9Qe\n-----END PGP SIGNATURE-----", "payload": "tree 193546fbb3d2110e3c9db793b84abf79b3fa7743\nparent 4ccaf6f38ce5b617635ec5dc738275c681090eff\nauthor David Wood <david@davidtw.co> 1596819441 +0100\ncommitter David Wood <david@davidtw.co> 1596822105 +0100\n\ninstance: polymorphize `FnDef` substs\n\nThis commit extends previous polymorphization of substs to polymorphize\n`FnDef`.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac50d61785ae5112b9b4e30a58cfcffe096b31ec", "html_url": "https://github.com/rust-lang/rust/commit/ac50d61785ae5112b9b4e30a58cfcffe096b31ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac50d61785ae5112b9b4e30a58cfcffe096b31ec/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ccaf6f38ce5b617635ec5dc738275c681090eff", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ccaf6f38ce5b617635ec5dc738275c681090eff", "html_url": "https://github.com/rust-lang/rust/commit/4ccaf6f38ce5b617635ec5dc738275c681090eff"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "81f7474962c8d503a6f54c7d1368ac1c592b803e", "filename": "src/librustc_middle/ty/flags.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac50d61785ae5112b9b4e30a58cfcffe096b31ec/src%2Flibrustc_middle%2Fty%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac50d61785ae5112b9b4e30a58cfcffe096b31ec/src%2Flibrustc_middle%2Fty%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fflags.rs?ref=ac50d61785ae5112b9b4e30a58cfcffe096b31ec", "patch": "@@ -196,6 +196,8 @@ impl FlagComputation {\n             }\n \n             &ty::FnDef(_, substs) => {\n+                self.add_flags(TypeFlags::MAY_POLYMORPHIZE);\n+\n                 self.add_substs(substs);\n             }\n "}, {"sha": "87434f3f26777606c905d4bea721d7676aeb8846", "filename": "src/librustc_middle/ty/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac50d61785ae5112b9b4e30a58cfcffe096b31ec/src%2Flibrustc_middle%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac50d61785ae5112b9b4e30a58cfcffe096b31ec/src%2Flibrustc_middle%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Ffold.rs?ref=ac50d61785ae5112b9b4e30a58cfcffe096b31ec", "patch": "@@ -150,7 +150,7 @@ pub trait TypeFoldable<'tcx>: fmt::Debug + Clone {\n         self.has_type_flags(TypeFlags::STILL_FURTHER_SPECIALIZABLE)\n     }\n \n-    /// Does this value contain closures or generators such that it may require\n+    /// Does this value contain closures, generators or functions such that it may require\n     /// polymorphization?\n     fn may_polymorphize(&self) -> bool {\n         self.has_type_flags(TypeFlags::MAY_POLYMORPHIZE)"}, {"sha": "cf876db26bc76a66f4e8fa7dca30ea468f32051d", "filename": "src/librustc_middle/ty/instance.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac50d61785ae5112b9b4e30a58cfcffe096b31ec/src%2Flibrustc_middle%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac50d61785ae5112b9b4e30a58cfcffe096b31ec/src%2Flibrustc_middle%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Finstance.rs?ref=ac50d61785ae5112b9b4e30a58cfcffe096b31ec", "patch": "@@ -512,6 +512,14 @@ fn polymorphize<'tcx>(\n                         self.tcx.mk_closure(def_id, polymorphized_substs)\n                     }\n                 }\n+                ty::FnDef(def_id, substs) => {\n+                    let polymorphized_substs = polymorphize(self.tcx, def_id, substs);\n+                    if substs == polymorphized_substs {\n+                        ty\n+                    } else {\n+                        self.tcx.mk_fn_def(def_id, polymorphized_substs)\n+                    }\n+                }\n                 ty::Generator(def_id, substs, movability) => {\n                     let polymorphized_substs = polymorphize(self.tcx, def_id, substs);\n                     if substs == polymorphized_substs {"}, {"sha": "c82fb2712c2168737038da2109bbbf89eaff658d", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac50d61785ae5112b9b4e30a58cfcffe096b31ec/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac50d61785ae5112b9b4e30a58cfcffe096b31ec/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=ac50d61785ae5112b9b4e30a58cfcffe096b31ec", "patch": "@@ -576,7 +576,7 @@ bitflags! {\n         /// replaced later, in a way that would change the results of `impl` specialization?\n         const STILL_FURTHER_SPECIALIZABLE = 1 << 17;\n \n-        /// Does this value contain closures or generators such that it may require\n+        /// Does this value contain closures, generators or functions such that it may require\n         /// polymorphization?\n         const MAY_POLYMORPHIZE = 1 << 18;\n     }"}, {"sha": "af47b440640afdf36530efd9d64c361cdb9c8088", "filename": "src/test/codegen-units/polymorphization/pr-75255.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ac50d61785ae5112b9b4e30a58cfcffe096b31ec/src%2Ftest%2Fcodegen-units%2Fpolymorphization%2Fpr-75255.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac50d61785ae5112b9b4e30a58cfcffe096b31ec/src%2Ftest%2Fcodegen-units%2Fpolymorphization%2Fpr-75255.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpolymorphization%2Fpr-75255.rs?ref=ac50d61785ae5112b9b4e30a58cfcffe096b31ec", "patch": "@@ -3,20 +3,33 @@\n \n #![crate_type = \"rlib\"]\n \n-// Test that only one copy of `Iter::map` is generated.\n+// Test that only one copy of `Iter::map` and `iter::repeat` are generated.\n+\n+fn unused<T>() -> u64 {\n+    42\n+}\n \n fn foo<T>() {\n     let x = [1, 2, 3, std::mem::size_of::<T>()];\n     x.iter().map(|_| ());\n }\n \n+//~ MONO_ITEM fn core::iter[0]::adapters[0]::{{impl}}[29]::new[0]<core::slice[0]::Iter[0]<usize>, pr_75255::foo[0]::{{closure}}[0]<T>> @@ pr_75255-cgu.0[External]\n+//~ MONO_ITEM fn core::iter[0]::traits[0]::iterator[0]::Iterator[0]::map[0]<core::slice[0]::Iter[0]<usize>, (), pr_75255::foo[0]::{{closure}}[0]<T>> @@ pr_75255-cgu.1[Internal]\n+\n+fn bar<T>() {\n+    std::iter::repeat(unused::<T>);\n+}\n+\n+//~ MONO_ITEM fn core::iter[0]::sources[0]::repeat[0]<fn() -> u64> @@ pr_75255-cgu.1[Internal]\n+\n pub fn dispatch() {\n     foo::<String>();\n     foo::<Vec<String>>();\n-}\n \n-//~ MONO_ITEM fn core::iter[0]::adapters[0]::{{impl}}[29]::new[0]<core::slice[0]::Iter[0]<usize>, pr_75255::foo[0]::{{closure}}[0]<T>> @@ pr_75255-cgu.0[External]\n-//~ MONO_ITEM fn core::iter[0]::traits[0]::iterator[0]::Iterator[0]::map[0]<core::slice[0]::Iter[0]<usize>, (), pr_75255::foo[0]::{{closure}}[0]<T>> @@ pr_75255-cgu.1[Internal]\n+    bar::<String>();\n+    bar::<Vec<String>>();\n+}\n \n // These are all the items that aren't relevant to the test.\n //~ MONO_ITEM fn core::mem[0]::size_of[0]<alloc::string[0]::String[0]> @@ pr_75255-cgu.1[Internal]\n@@ -35,3 +48,5 @@ pub fn dispatch() {\n //~ MONO_ITEM fn pr_75255::dispatch[0] @@ pr_75255-cgu.1[External]\n //~ MONO_ITEM fn pr_75255::foo[0]<alloc::string[0]::String[0]> @@ pr_75255-cgu.1[Internal]\n //~ MONO_ITEM fn pr_75255::foo[0]<alloc::vec[0]::Vec[0]<alloc::string[0]::String[0]>> @@ pr_75255-cgu.1[Internal]\n+//~ MONO_ITEM fn pr_75255::bar[0]<alloc::string[0]::String[0]> @@ pr_75255-cgu.1[Internal]\n+//~ MONO_ITEM fn pr_75255::bar[0]<alloc::vec[0]::Vec[0]<alloc::string[0]::String[0]>> @@ pr_75255-cgu.1[Internal]"}]}