{"sha": "72b3347d000473d06d90fc5112e74d160b65a0e8", "node_id": "C_kwDOAAsO6NoAKDcyYjMzNDdkMDAwNDczZDA2ZDkwZmM1MTEyZTc0ZDE2MGI2NWEwZTg", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-09-23T11:23:54Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-09-23T12:03:49Z"}, "message": "use correct location for type tests in promoted consts", "tree": {"sha": "1b3f05667adc3a418a57cd59150cfb3e1f6438bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b3f05667adc3a418a57cd59150cfb3e1f6438bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72b3347d000473d06d90fc5112e74d160b65a0e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72b3347d000473d06d90fc5112e74d160b65a0e8", "html_url": "https://github.com/rust-lang/rust/commit/72b3347d000473d06d90fc5112e74d160b65a0e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72b3347d000473d06d90fc5112e74d160b65a0e8/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e50038a2d4029bd1484af75dbf144c4b0da6c74", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e50038a2d4029bd1484af75dbf144c4b0da6c74", "html_url": "https://github.com/rust-lang/rust/commit/3e50038a2d4029bd1484af75dbf144c4b0da6c74"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "3deffffe8a4f0d8e1b9d6e9664976f48b2c6ed01", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/72b3347d000473d06d90fc5112e74d160b65a0e8/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72b3347d000473d06d90fc5112e74d160b65a0e8/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=72b3347d000473d06d90fc5112e74d160b65a0e8", "patch": "@@ -587,6 +587,7 @@ impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n         // modify their locations.\n         let all_facts = &mut None;\n         let mut constraints = Default::default();\n+        let mut type_tests = Default::default();\n         let mut closure_bounds = Default::default();\n         let mut liveness_constraints =\n             LivenessValues::new(Rc::new(RegionValueElements::new(&promoted_body)));\n@@ -598,6 +599,7 @@ impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n                 &mut this.cx.borrowck_context.constraints.outlives_constraints,\n                 &mut constraints,\n             );\n+            mem::swap(&mut this.cx.borrowck_context.constraints.type_tests, &mut type_tests);\n             mem::swap(\n                 &mut this.cx.borrowck_context.constraints.closure_bounds_mapping,\n                 &mut closure_bounds,\n@@ -622,6 +624,13 @@ impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n         swap_constraints(self);\n \n         let locations = location.to_locations();\n+\n+        // Use location of promoted const in collected constraints\n+        for type_test in type_tests.iter() {\n+            let mut type_test = type_test.clone();\n+            type_test.locations = locations;\n+            self.cx.borrowck_context.constraints.type_tests.push(type_test)\n+        }\n         for constraint in constraints.outlives().iter() {\n             let mut constraint = constraint.clone();\n             constraint.locations = locations;"}]}