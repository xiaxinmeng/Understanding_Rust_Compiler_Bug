{"sha": "8fb0e80e405b755c6ea9cb77c1f88dbf4b75b245", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmYjBlODBlNDA1Yjc1NWM2ZWE5Y2I3N2MxZjg4ZGJmNGI3NWIyNDU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-08-23T14:52:05Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-09-22T19:01:21Z"}, "message": "address RalfJung's comment", "tree": {"sha": "fb0a72a896c2d875285b904591ac8bab21177b5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb0a72a896c2d875285b904591ac8bab21177b5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fb0e80e405b755c6ea9cb77c1f88dbf4b75b245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fb0e80e405b755c6ea9cb77c1f88dbf4b75b245", "html_url": "https://github.com/rust-lang/rust/commit/8fb0e80e405b755c6ea9cb77c1f88dbf4b75b245", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fb0e80e405b755c6ea9cb77c1f88dbf4b75b245/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "758ce16b3dea3f08bfdacea75bcc55a8cd4ff106", "url": "https://api.github.com/repos/rust-lang/rust/commits/758ce16b3dea3f08bfdacea75bcc55a8cd4ff106", "html_url": "https://github.com/rust-lang/rust/commit/758ce16b3dea3f08bfdacea75bcc55a8cd4ff106"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "c86278fc5ddaacc10ecd0175d52860a3c75d20de", "filename": "src/liballoc/collections/btree/node.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8fb0e80e405b755c6ea9cb77c1f88dbf4b75b245/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fb0e80e405b755c6ea9cb77c1f88dbf4b75b245/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs?ref=8fb0e80e405b755c6ea9cb77c1f88dbf4b75b245", "patch": "@@ -567,7 +567,7 @@ impl<'a, K: 'a, V: 'a, Type> NodeRef<marker::Immut<'a>, K, V, Type> {\n             // the node, which is allowed by LLVM.\n             unsafe {\n                 slice::from_raw_parts(\n-                    self.as_leaf().keys.get_ref().as_ptr(),\n+                    self.as_leaf().keys.as_ptr() as *const K,\n                     self.len()\n                 )\n             }\n@@ -578,7 +578,7 @@ impl<'a, K: 'a, V: 'a, Type> NodeRef<marker::Immut<'a>, K, V, Type> {\n         debug_assert!(!self.is_shared_root());\n         unsafe {\n             slice::from_raw_parts(\n-                self.as_leaf().vals.get_ref().as_ptr(),\n+                self.as_leaf().vals.as_ptr() as *const V,\n                 self.len()\n             )\n         }\n@@ -1152,12 +1152,12 @@ impl<'a, K, V> Handle<NodeRef<marker::Mut<'a>, K, V, marker::Leaf>, marker::KV>\n \n             ptr::copy_nonoverlapping(\n                 self.node.keys().as_ptr().add(self.idx + 1),\n-                new_node.keys.get_mut().as_mut_ptr(),\n+                new_node.keys.as_mut_ptr() as *mut K,\n                 new_len\n             );\n             ptr::copy_nonoverlapping(\n                 self.node.vals().as_ptr().add(self.idx + 1),\n-                new_node.vals.get_mut().as_mut_ptr(),\n+                new_node.vals.as_mut_ptr() as *mut V,\n                 new_len\n             );\n \n@@ -1210,12 +1210,12 @@ impl<'a, K, V> Handle<NodeRef<marker::Mut<'a>, K, V, marker::Internal>, marker::\n \n             ptr::copy_nonoverlapping(\n                 self.node.keys().as_ptr().add(self.idx + 1),\n-                new_node.data.keys.get_mut().as_mut_ptr(),\n+                new_node.data.keys.as_mut_ptr() as *mut K,\n                 new_len\n             );\n             ptr::copy_nonoverlapping(\n                 self.node.vals().as_ptr().add(self.idx + 1),\n-                new_node.data.vals.get_mut().as_mut_ptr(),\n+                new_node.data.vals.as_mut_ptr() as *mut V,\n                 new_len\n             );\n             ptr::copy_nonoverlapping("}]}