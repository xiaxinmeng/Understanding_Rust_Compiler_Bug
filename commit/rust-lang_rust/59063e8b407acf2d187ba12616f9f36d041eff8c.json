{"sha": "59063e8b407acf2d187ba12616f9f36d041eff8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5MDYzZThiNDA3YWNmMmQxODdiYTEyNjE2ZjlmMzZkMDQxZWZmOGM=", "commit": {"author": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2020-04-16T12:52:47Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-09-06T22:02:20Z"}, "message": "fix: newline width calc in combine w/ comments (#4123)", "tree": {"sha": "f826aac9b41aab64304b67a027aff608289c0cec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f826aac9b41aab64304b67a027aff608289c0cec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59063e8b407acf2d187ba12616f9f36d041eff8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59063e8b407acf2d187ba12616f9f36d041eff8c", "html_url": "https://github.com/rust-lang/rust/commit/59063e8b407acf2d187ba12616f9f36d041eff8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59063e8b407acf2d187ba12616f9f36d041eff8c/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae5696a7c4c2edf642c37f06c526eb6bdf78c23b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae5696a7c4c2edf642c37f06c526eb6bdf78c23b", "html_url": "https://github.com/rust-lang/rust/commit/ae5696a7c4c2edf642c37f06c526eb6bdf78c23b"}], "stats": {"total": 78, "additions": 77, "deletions": 1}, "files": [{"sha": "62b624acd495452086f18a93d5484ae9e2d46aa5", "filename": "src/comment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59063e8b407acf2d187ba12616f9f36d041eff8c/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59063e8b407acf2d187ba12616f9f36d041eff8c/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=59063e8b407acf2d187ba12616f9f36d041eff8c", "patch": "@@ -184,7 +184,7 @@ pub(crate) fn combine_strs_with_missing_comments(\n     let missing_comment = rewrite_missing_comment(span, shape, context)?;\n \n     if missing_comment.is_empty() {\n-        if allow_extend && prev_str.len() + first_sep.len() + next_str.len() <= shape.width {\n+        if allow_extend && one_line_width <= shape.width {\n             result.push_str(first_sep);\n         } else if !prev_str.is_empty() {\n             result.push_str(&indent.to_string_with_newline(config))"}, {"sha": "065d5395c7e73ad161d330877ec4445ed32951f6", "filename": "tests/target/issue_4031.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/59063e8b407acf2d187ba12616f9f36d041eff8c/tests%2Ftarget%2Fissue_4031.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59063e8b407acf2d187ba12616f9f36d041eff8c/tests%2Ftarget%2Fissue_4031.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue_4031.rs?ref=59063e8b407acf2d187ba12616f9f36d041eff8c", "patch": "@@ -0,0 +1,21 @@\n+fn foo() {\n+    with_woff2_glyf_table(\"tests/fonts/woff2/SFNT-TTF-Composite.woff2\", |glyf| {\n+        let actual = glyf\n+            .records\n+            .iter()\n+            .map(|glyph| match glyph {\n+                GlyfRecord::Parsed(\n+                    found @ Glyph {\n+                        data: GlyphData::Composite { .. },\n+                        ..\n+                    },\n+                ) => Some(found),\n+                _ => None,\n+            })\n+            .find(|candidate| candidate.is_some())\n+            .unwrap()\n+            .unwrap();\n+\n+        assert_eq!(*actual, expected)\n+    });\n+}"}, {"sha": "4a58c3946e12dae2c3ac6c441c60bc5c9b8b6f1f", "filename": "tests/target/issue_4110.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/59063e8b407acf2d187ba12616f9f36d041eff8c/tests%2Ftarget%2Fissue_4110.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59063e8b407acf2d187ba12616f9f36d041eff8c/tests%2Ftarget%2Fissue_4110.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue_4110.rs?ref=59063e8b407acf2d187ba12616f9f36d041eff8c", "patch": "@@ -0,0 +1,55 @@\n+fn bindings() {\n+    let err = match (place_desc, explanation) {\n+        (\n+            Some(ref name),\n+            BorrowExplanation::MustBeValidFor {\n+                category:\n+                    category @ (ConstraintCategory::Return\n+                    | ConstraintCategory::CallArgument\n+                    | ConstraintCategory::OpaqueType),\n+                from_closure: false,\n+                ref region_name,\n+                span,\n+                ..\n+            },\n+        ) if borrow_spans.for_generator() | borrow_spans.for_closure() => self\n+            .report_escaping_closure_capture(\n+                borrow_spans,\n+                borrow_span,\n+                region_name,\n+                category,\n+                span,\n+                &format!(\"`{}`\", name),\n+            ),\n+        (\n+            ref name,\n+            BorrowExplanation::MustBeValidFor {\n+                category: ConstraintCategory::Assignment,\n+                from_closure: false,\n+                region_name:\n+                    RegionName {\n+                        source: RegionNameSource::AnonRegionFromUpvar(upvar_span, ref upvar_name),\n+                        ..\n+                    },\n+                span,\n+                ..\n+            },\n+        ) => self.report_escaping_data(borrow_span, name, upvar_span, upvar_name, span),\n+        (Some(name), explanation) => self.report_local_value_does_not_live_long_enough(\n+            location,\n+            &name,\n+            &borrow,\n+            drop_span,\n+            borrow_spans,\n+            explanation,\n+        ),\n+        (None, explanation) => self.report_temporary_value_does_not_live_long_enough(\n+            location,\n+            &borrow,\n+            drop_span,\n+            borrow_spans,\n+            proper_span,\n+            explanation,\n+        ),\n+    };\n+}"}]}