{"sha": "7fd9beedc230d0b0fc0b98e1db7855f88122df30", "node_id": "C_kwDOAAsO6NoAKDdmZDliZWVkYzIzMGQwYjBmYzBiOThlMWRiNzg1NWY4ODEyMmRmMzA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-13T10:26:11Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-14T15:36:39Z"}, "message": "Rename to match similar methods", "tree": {"sha": "940556c65e24199628dd5406fe2dc1235465baf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/940556c65e24199628dd5406fe2dc1235465baf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fd9beedc230d0b0fc0b98e1db7855f88122df30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fd9beedc230d0b0fc0b98e1db7855f88122df30", "html_url": "https://github.com/rust-lang/rust/commit/7fd9beedc230d0b0fc0b98e1db7855f88122df30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fd9beedc230d0b0fc0b98e1db7855f88122df30/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fef872a8757eaf6964c1af0dcd2b5b4751c056c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fef872a8757eaf6964c1af0dcd2b5b4751c056c4", "html_url": "https://github.com/rust-lang/rust/commit/fef872a8757eaf6964c1af0dcd2b5b4751c056c4"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "ef5d8f925cf3b4b002147ec332e90b7ca06bc68f", "filename": "compiler/rustc_hir_typeck/src/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7fd9beedc230d0b0fc0b98e1db7855f88122df30/compiler%2Frustc_hir_typeck%2Fsrc%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fd9beedc230d0b0fc0b98e1db7855f88122df30/compiler%2Frustc_hir_typeck%2Fsrc%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2F_match.rs?ref=7fd9beedc230d0b0fc0b98e1db7855f88122df30", "patch": "@@ -542,7 +542,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             ty::PredicateKind::Clause(ty::Clause::Trait(trait_pred)) => {\n                                 assert_eq!(trait_pred.trait_ref.self_ty(), opaque_ty);\n                                 ty::PredicateKind::Clause(ty::Clause::Trait(\n-                                    trait_pred.with_self_type(self.tcx, ty),\n+                                    trait_pred.with_self_ty(self.tcx, ty),\n                                 ))\n                             }\n                             ty::PredicateKind::Clause(ty::Clause::Projection(mut proj_pred)) => {"}, {"sha": "82b41ac1f7b6478fdcfd116a309d44dc676fb47c", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7fd9beedc230d0b0fc0b98e1db7855f88122df30/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fd9beedc230d0b0fc0b98e1db7855f88122df30/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=7fd9beedc230d0b0fc0b98e1db7855f88122df30", "patch": "@@ -781,8 +781,8 @@ impl<'tcx> TraitPredicate<'tcx> {\n         }\n     }\n \n-    pub fn with_self_type(self, tcx: TyCtxt<'tcx>, self_ty: Ty<'tcx>) -> Self {\n-        Self { trait_ref: self.trait_ref.with_self_type(tcx, self_ty), ..self }\n+    pub fn with_self_ty(self, tcx: TyCtxt<'tcx>, self_ty: Ty<'tcx>) -> Self {\n+        Self { trait_ref: self.trait_ref.with_self_ty(tcx, self_ty), ..self }\n     }\n \n     pub fn def_id(self) -> DefId {"}, {"sha": "a60aea26216963bc5b5ce07de5c2c3acc8471b1c", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7fd9beedc230d0b0fc0b98e1db7855f88122df30/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fd9beedc230d0b0fc0b98e1db7855f88122df30/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=7fd9beedc230d0b0fc0b98e1db7855f88122df30", "patch": "@@ -823,7 +823,7 @@ impl<'tcx> TraitRef<'tcx> {\n         TraitRef { def_id, substs }\n     }\n \n-    pub fn with_self_type(self, tcx: TyCtxt<'tcx>, self_ty: Ty<'tcx>) -> Self {\n+    pub fn with_self_ty(self, tcx: TyCtxt<'tcx>, self_ty: Ty<'tcx>) -> Self {\n         tcx.mk_trait_ref(\n             self.def_id,\n             [self_ty.into()].into_iter().chain(self.substs.iter().skip(1)),"}, {"sha": "3d8dfe81748c20d62c2372edee6b8f80b424a4ea", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7fd9beedc230d0b0fc0b98e1db7855f88122df30/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fd9beedc230d0b0fc0b98e1db7855f88122df30/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=7fd9beedc230d0b0fc0b98e1db7855f88122df30", "patch": "@@ -1036,7 +1036,7 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                             && self.fallback_has_occurred\n                         {\n                             let predicate = trait_predicate.map_bound(|trait_pred| {\n-                                trait_pred.with_self_type(self.tcx, self.tcx.mk_unit())\n+                                trait_pred.with_self_ty(self.tcx, self.tcx.mk_unit())\n                             });\n                             let unit_obligation = obligation.with(tcx, predicate);\n                             if self.predicate_may_hold(&unit_obligation) {\n@@ -2085,8 +2085,8 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n         param_env: ty::ParamEnv<'tcx>,\n         trait_ref_and_ty: ty::Binder<'tcx, (ty::TraitPredicate<'tcx>, Ty<'tcx>)>,\n     ) -> PredicateObligation<'tcx> {\n-        let trait_pred = trait_ref_and_ty\n-            .map_bound(|(tr, new_self_ty)| tr.with_self_type(self.tcx, new_self_ty));\n+        let trait_pred =\n+            trait_ref_and_ty.map_bound(|(tr, new_self_ty)| tr.with_self_ty(self.tcx, new_self_ty));\n \n         Obligation::new(self.tcx, ObligationCause::dummy(), param_env, trait_pred)\n     }"}, {"sha": "34b5fc4891eb36643e65c2412e8ac70330559e55", "filename": "compiler/rustc_trait_selection/src/traits/relationships.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7fd9beedc230d0b0fc0b98e1db7855f88122df30/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Frelationships.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fd9beedc230d0b0fc0b98e1db7855f88122df30/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Frelationships.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Frelationships.rs?ref=7fd9beedc230d0b0fc0b98e1db7855f88122df30", "patch": "@@ -26,7 +26,7 @@ pub(crate) fn update<'tcx, T>(\n                 .kind()\n                 .rebind(\n                     // (*) binder moved here\n-                    ty::PredicateKind::Clause(ty::Clause::Trait(tpred.with_self_type(infcx.tcx, new_self_ty)))\n+                    ty::PredicateKind::Clause(ty::Clause::Trait(tpred.with_self_ty(infcx.tcx, new_self_ty)))\n                 ),\n         );\n         // Don't report overflow errors. Otherwise equivalent to may_hold."}]}