{"sha": "f26011d5a034b8d3a9f89a3160d7ec68a24e2228", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNjAxMWQ1YTAzNGI4ZDNhOWY4OWEzMTYwZDdlYzY4YTI0ZTIyMjg=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-07-28T06:03:46Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-07-28T15:41:53Z"}, "message": "rustdoc: improvements to stability dashboard\n\n* Makes dashboard width dynamic.\n* Colors unmarked items.\n* Gives overall crate percentages.", "tree": {"sha": "0732414af1be40a1f3b7dd58ed9e036a303e8439", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0732414af1be40a1f3b7dd58ed9e036a303e8439"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f26011d5a034b8d3a9f89a3160d7ec68a24e2228", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f26011d5a034b8d3a9f89a3160d7ec68a24e2228", "html_url": "https://github.com/rust-lang/rust/commit/f26011d5a034b8d3a9f89a3160d7ec68a24e2228", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f26011d5a034b8d3a9f89a3160d7ec68a24e2228/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79e9f14abf50eecb7d3c53f10ad900615bb2d397", "url": "https://api.github.com/repos/rust-lang/rust/commits/79e9f14abf50eecb7d3c53f10ad900615bb2d397", "html_url": "https://github.com/rust-lang/rust/commit/79e9f14abf50eecb7d3c53f10ad900615bb2d397"}], "stats": {"total": 64, "additions": 38, "deletions": 26}, "files": [{"sha": "2fb3143b0bf6e077f7c2886bfdfc0be0c3af8b47", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 33, "deletions": 24, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/f26011d5a034b8d3a9f89a3160d7ec68a24e2228/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f26011d5a034b8d3a9f89a3160d7ec68a24e2228/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=f26011d5a034b8d3a9f89a3160d7ec68a24e2228", "patch": "@@ -663,31 +663,27 @@ impl fmt::Show for ModuleSummary {\n             context.push(m.name.as_slice());\n             let path = context.connect(\"::\");\n \n-            // the total width of each row's stability summary, in pixels\n-            let width = 500;\n-\n             try!(write!(f, \"<tr>\"));\n-            try!(write!(f, \"<td class='summary'>\\\n-                            <a class='summary' href='{}'>{}</a></td>\",\n+            try!(write!(f, \"<td><a href='{}'>{}</a></td>\",\n                         Vec::from_slice(context.slice_from(1))\n                             .append_one(\"index.html\").connect(\"/\"),\n                         path));\n-            try!(write!(f, \"<td>\"));\n+            try!(write!(f, \"<td class='summary-column'>\"));\n             try!(write!(f, \"<span class='summary Stable' \\\n-                            style='width: {}px; display: inline-block'>&nbsp</span>\",\n-                        (width * cnt.stable)/tot));\n+                            style='width: {:.4}%; display: inline-block'>&nbsp</span>\",\n+                        (100 * cnt.stable) as f64/tot as f64));\n             try!(write!(f, \"<span class='summary Unstable' \\\n-                            style='width: {}px; display: inline-block'>&nbsp</span>\",\n-                        (width * cnt.unstable)/tot));\n+                            style='width: {:.4}%; display: inline-block'>&nbsp</span>\",\n+                        (100 * cnt.unstable) as f64/tot as f64));\n             try!(write!(f, \"<span class='summary Experimental' \\\n-                            style='width: {}px; display: inline-block'>&nbsp</span>\",\n-                        (width * cnt.experimental)/tot));\n+                            style='width: {:.4}%; display: inline-block'>&nbsp</span>\",\n+                        (100 * cnt.experimental) as f64/tot as f64));\n             try!(write!(f, \"<span class='summary Deprecated' \\\n-                            style='width: {}px; display: inline-block'>&nbsp</span>\",\n-                        (width * cnt.deprecated)/tot));\n+                            style='width: {:.4}%; display: inline-block'>&nbsp</span>\",\n+                        (100 * cnt.deprecated) as f64/tot as f64));\n             try!(write!(f, \"<span class='summary Unmarked' \\\n-                            style='width: {}px; display: inline-block'>&nbsp</span>\",\n-                        (width * cnt.unmarked)/tot));\n+                            style='width: {:.4}%; display: inline-block'>&nbsp</span>\",\n+                        (100 * cnt.unmarked) as f64/tot as f64));\n             try!(write!(f, \"</td></tr>\"));\n \n             for submodule in m.submodules.iter() {\n@@ -699,20 +695,33 @@ impl fmt::Show for ModuleSummary {\n \n         let mut context = Vec::new();\n \n+        let tot = self.counts.total();\n+        let (stable, unstable, experimental, deprecated, unmarked) = if tot == 0 {\n+            (0, 0, 0, 0, 0)\n+        } else {\n+            ((100 * self.counts.stable)/tot,\n+             (100 * self.counts.unstable)/tot,\n+             (100 * self.counts.experimental)/tot,\n+             (100 * self.counts.deprecated)/tot,\n+             (100 * self.counts.unmarked)/tot)\n+        };\n+\n         try!(write!(f,\n-r\"<h1 class='fqn'>Stability dashboard: crate <a class='mod' href='index.html'>{}</a></h1>\n+r\"<h1 class='fqn'>Stability dashboard: crate <a class='mod' href='index.html'>{name}</a></h1>\n This dashboard summarizes the stability levels for all of the public modules of\n-the crate, according to the total number of items at each level in the module and its children:\n+the crate, according to the total number of items at each level in the module and\n+its children (percentages total for {name}):\n <blockquote>\n-<a class='stability Stable'></a> stable,<br/>\n-<a class='stability Unstable'></a> unstable,<br/>\n-<a class='stability Experimental'></a> experimental,<br/>\n-<a class='stability Deprecated'></a> deprecated,<br/>\n-<a class='stability Unmarked'></a> unmarked\n+<a class='stability Stable'></a> stable ({}%),<br/>\n+<a class='stability Unstable'></a> unstable ({}%),<br/>\n+<a class='stability Experimental'></a> experimental ({}%),<br/>\n+<a class='stability Deprecated'></a> deprecated ({}%),<br/>\n+<a class='stability Unmarked'></a> unmarked ({}%)\n </blockquote>\n The counts do not include methods or trait\n implementations that are visible only through a re-exported type.\",\n-self.name));\n+stable, unstable, experimental, deprecated, unmarked,\n+name=self.name));\n         try!(write!(f, \"<table>\"))\n         try!(fmt_inner(f, &mut context, self));\n         write!(f, \"</table>\")"}, {"sha": "c22dd64d2b4c89d0f550dc634318140b158819d0", "filename": "src/librustdoc/html/static/main.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f26011d5a034b8d3a9f89a3160d7ec68a24e2228/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css", "raw_url": "https://github.com/rust-lang/rust/raw/f26011d5a034b8d3a9f89a3160d7ec68a24e2228/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css?ref=f26011d5a034b8d3a9f89a3160d7ec68a24e2228", "patch": "@@ -407,7 +407,7 @@ h1 .stability {\n .stability.Stable { border-color: #54A759; color: #2D8632; }\n .stability.Frozen { border-color: #009431; color: #007726; }\n .stability.Locked { border-color: #0084B6; color: #00668c; }\n-.stability.Unmarked { border-color: #FFFFFF; }\n+.stability.Unmarked { border-color: #BBBBBB; }\n \n .summary {\n     padding-right: 0px;\n@@ -416,7 +416,7 @@ h1 .stability {\n .summary.Experimental { background-color: #D46D6A; }\n .summary.Unstable { background-color: #D4B16A; }\n .summary.Stable { background-color: #54A759; }\n-.summary.Unmarked { background-color: #FFFFFF; }\n+.summary.Unmarked { background-color: #BBBBBB; }\n \n :target { background: #FDFFD3; }\n "}, {"sha": "3a51348784fc9d29a36b6eae70f935e5146a6a59", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f26011d5a034b8d3a9f89a3160d7ec68a24e2228/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/f26011d5a034b8d3a9f89a3160d7ec68a24e2228/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=f26011d5a034b8d3a9f89a3160d7ec68a24e2228", "patch": "@@ -42,6 +42,9 @@\n             $('.docblock.short').width(function() {\n                 return contentWidth - 40 - $(this).prev().width();\n             }).addClass('nowrap');\n+            $('.summary-column').width(function() {\n+                return contentWidth - 40 - $(this).prev().width();\n+            })\n         }, 150);\n     }\n     resizeShortBlocks();"}]}