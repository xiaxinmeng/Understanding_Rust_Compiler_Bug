{"sha": "bcffdf1b6da161eecd761eb4a3ef703ff05c33f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjZmZkZjFiNmRhMTYxZWVjZDc2MWViNGEzZWY3MDNmZjA1YzMzZjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-28T08:01:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-28T08:01:22Z"}, "message": "Auto merge of #49383 - nox:scalarpair, r=eddyb\n\nAllow niche-filling dataful variants to be represented as a ScalarPair\n\nr? @eddyb", "tree": {"sha": "73aeb763d2f28fa243ddba8777ef616941231714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73aeb763d2f28fa243ddba8777ef616941231714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcffdf1b6da161eecd761eb4a3ef703ff05c33f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcffdf1b6da161eecd761eb4a3ef703ff05c33f6", "html_url": "https://github.com/rust-lang/rust/commit/bcffdf1b6da161eecd761eb4a3ef703ff05c33f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcffdf1b6da161eecd761eb4a3ef703ff05c33f6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e58df0d8c5221fa5743587740eb50e4db42c3d1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e58df0d8c5221fa5743587740eb50e4db42c3d1e", "html_url": "https://github.com/rust-lang/rust/commit/e58df0d8c5221fa5743587740eb50e4db42c3d1e"}, {"sha": "bda718fd255237167f08198b0fc80ab0d484d58e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bda718fd255237167f08198b0fc80ab0d484d58e", "html_url": "https://github.com/rust-lang/rust/commit/bda718fd255237167f08198b0fc80ab0d484d58e"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "5f9c305d92f04ec32860e064606b3cb541e19f7d", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bcffdf1b6da161eecd761eb4a3ef703ff05c33f6/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcffdf1b6da161eecd761eb4a3ef703ff05c33f6/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=bcffdf1b6da161eecd761eb4a3ef703ff05c33f6", "patch": "@@ -1517,10 +1517,21 @@ impl<'a, 'tcx> LayoutCx<'tcx, TyCtxt<'a, 'tcx, 'tcx>> {\n                             let offset = st[i].fields.offset(field_index) + offset;\n                             let size = st[i].size;\n \n-                            let abi = if offset.bytes() == 0 && niche.value.size(dl) == size {\n-                                Abi::Scalar(niche.clone())\n-                            } else {\n-                                Abi::Aggregate { sized: true }\n+                            let abi = match st[i].abi {\n+                                Abi::Scalar(_) => Abi::Scalar(niche.clone()),\n+                                Abi::ScalarPair(ref first, ref second) => {\n+                                    // We need to use scalar_unit to reset the\n+                                    // valid range to the maximal one for that\n+                                    // primitive, because only the niche is\n+                                    // guaranteed to be initialised, not the\n+                                    // other primitive.\n+                                    if offset.bytes() == 0 {\n+                                        Abi::ScalarPair(niche.clone(), scalar_unit(second.value))\n+                                    } else {\n+                                        Abi::ScalarPair(scalar_unit(first.value), niche.clone())\n+                                    }\n+                                }\n+                                _ => Abi::Aggregate { sized: true },\n                             };\n \n                             return Ok(tcx.intern_layout(LayoutDetails {"}, {"sha": "de302c69056f6b3d53892fe12d9308e31dfa0bc5", "filename": "src/test/codegen/function-arguments.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bcffdf1b6da161eecd761eb4a3ef703ff05c33f6/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcffdf1b6da161eecd761eb4a3ef703ff05c33f6/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs?ref=bcffdf1b6da161eecd761eb4a3ef703ff05c33f6", "patch": "@@ -133,6 +133,12 @@ pub fn trait_borrow(_: &Drop) {\n pub fn trait_box(_: Box<Drop>) {\n }\n \n+// CHECK: { i8*, i8* } @trait_option(i8* noalias %x.0, i8* %x.1)\n+#[no_mangle]\n+pub fn trait_option(x: Option<Box<Drop>>) -> Option<Box<Drop>> {\n+  x\n+}\n+\n // CHECK: { [0 x i16]*, [[USIZE]] } @return_slice([0 x i16]* noalias nonnull readonly %x.0, [[USIZE]] %x.1)\n #[no_mangle]\n pub fn return_slice(x: &[u16]) -> &[u16] {"}]}