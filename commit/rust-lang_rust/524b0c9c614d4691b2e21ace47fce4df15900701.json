{"sha": "524b0c9c614d4691b2e21ace47fce4df15900701", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNGIwYzljNjE0ZDQ2OTFiMmUyMWFjZTQ3ZmNlNGRmMTU5MDA3MDE=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-02-01T09:31:34Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-02-01T09:46:48Z"}, "message": "Add test for inplace collection of Result<Vec<_>,_>", "tree": {"sha": "201f2e87d8d2d0e28e382698041a6016713569d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/201f2e87d8d2d0e28e382698041a6016713569d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/524b0c9c614d4691b2e21ace47fce4df15900701", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/524b0c9c614d4691b2e21ace47fce4df15900701", "html_url": "https://github.com/rust-lang/rust/commit/524b0c9c614d4691b2e21ace47fce4df15900701", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/524b0c9c614d4691b2e21ace47fce4df15900701/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af424c1813eca41024da5290e064ead85f68dc0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/af424c1813eca41024da5290e064ead85f68dc0b", "html_url": "https://github.com/rust-lang/rust/commit/af424c1813eca41024da5290e064ead85f68dc0b"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "b88f2f2089d18dcd6de094f880d67be5b79f00ae", "filename": "library/core/tests/iter/mod.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/524b0c9c614d4691b2e21ace47fce4df15900701/library%2Fcore%2Ftests%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/524b0c9c614d4691b2e21ace47fce4df15900701/library%2Fcore%2Ftests%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fiter%2Fmod.rs?ref=524b0c9c614d4691b2e21ace47fce4df15900701", "patch": "@@ -100,3 +100,29 @@ pub fn extend_for_unit() {\n     }\n     assert_eq!(x, 5);\n }\n+\n+#[test]\n+pub fn inplace_result_collect() {\n+    let src = vec![0usize; 256];\n+    let srcptr = src.as_ptr();\n+    let sink = src.into_iter().map(|i| Ok(i)).collect::<Result<Vec<_>, ()>>().unwrap();\n+    let sinkptr = sink.as_ptr();\n+    assert_eq!(srcptr, sinkptr);\n+\n+    let src: Vec<usize> = vec![0usize; 256];\n+    let srcptr = src.as_ptr();\n+    let iter = src\n+        .into_iter()\n+        .enumerate()\n+        .map(|i| i.0 + i.1)\n+        .zip(std::iter::repeat(1usize))\n+        .map(|(a, b)| a + b)\n+        .map_while(Option::Some)\n+        .peekable()\n+        .skip(1)\n+        .map(|e| std::num::NonZeroUsize::new(e))\n+        .map(|z| z.map(|u| u.get()).ok_or(()));\n+    let sink = iter.collect::<Result<Vec<_>, _>>().unwrap();\n+    let sinkptr = sink.as_ptr();\n+    assert_eq!(srcptr, sinkptr as *const usize);\n+}"}]}