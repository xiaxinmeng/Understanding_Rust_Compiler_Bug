{"sha": "1328c29d4ae91fe0f932a6036e38374740179213", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMjhjMjlkNGFlOTFmZTBmOTMyYTYwMzZlMzgzNzQ3NDAxNzkyMTM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-07T21:08:19Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-07T21:08:19Z"}, "message": "save-analysis: fix bug with method ids\n\nThis just handles a missing entry, doesn't try to recover, because I couldn't actually find a test case.\n\ncc https://github.com/rust-lang-nursery/rls/issues/558", "tree": {"sha": "cc89851e65459906f95cac2b7d73cfb5b580166a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc89851e65459906f95cac2b7d73cfb5b580166a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1328c29d4ae91fe0f932a6036e38374740179213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1328c29d4ae91fe0f932a6036e38374740179213", "html_url": "https://github.com/rust-lang/rust/commit/1328c29d4ae91fe0f932a6036e38374740179213", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1328c29d4ae91fe0f932a6036e38374740179213/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95937990c5e772721e83c603dcca7c5aed8cdd0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/95937990c5e772721e83c603dcca7c5aed8cdd0e", "html_url": "https://github.com/rust-lang/rust/commit/95937990c5e772721e83c603dcca7c5aed8cdd0e"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "5d97dbf728ba5db083c92dd47b239826d8c9ef83", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1328c29d4ae91fe0f932a6036e38374740179213/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1328c29d4ae91fe0f932a6036e38374740179213/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=1328c29d4ae91fe0f932a6036e38374740179213", "patch": "@@ -548,7 +548,13 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n             }\n             ast::ExprKind::MethodCall(ref seg, ..) => {\n                 let expr_hir_id = self.tcx.hir.definitions().node_to_hir_id(expr.id);\n-                let method_id = self.tables.type_dependent_defs()[expr_hir_id].def_id();\n+                let method_id = match self.tables.type_dependent_defs().get(expr_hir_id) {\n+                    Some(id) => id.def_id(),\n+                    None => {\n+                        debug!(\"Could not resolve method id for {:?}\", expr);\n+                        return None;\n+                    }\n+                };\n                 let (def_id, decl_id) = match self.tcx.associated_item(method_id).container {\n                     ty::ImplContainer(_) => (Some(method_id), None),\n                     ty::TraitContainer(_) => (None, Some(method_id)),"}]}