{"sha": "0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYjRkNDZkMDNjZTQ4NmE5OGMzZWQyNGY5YWEwNDA2ZmYwYjJhNDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-22T17:02:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-22T17:02:19Z"}, "message": "Auto merge of #37310 - vadimcn:drop-spans, r=michaelwoerister\n\nFix line stepping in debugger.\n\nAttribute drop code to block's closing brace, instead of the line where the allocation was done.\nAttribute function epilogues to function body's closing brace, rather than the function header.\n\nFixes #37032\n\nr? @michaelwoerister", "tree": {"sha": "a5b2e8c35e9876e4855d5fb177f3954cde1250f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5b2e8c35e9876e4855d5fb177f3954cde1250f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43", "html_url": "https://github.com/rust-lang/rust/commit/0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5f6d7ec2d4e231b9ef0c8a9e8e7ec8a7f67d2ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5f6d7ec2d4e231b9ef0c8a9e8e7ec8a7f67d2ae", "html_url": "https://github.com/rust-lang/rust/commit/b5f6d7ec2d4e231b9ef0c8a9e8e7ec8a7f67d2ae"}, {"sha": "209fe0df24292a69ab4f34d10a5a8c417f64e2e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/209fe0df24292a69ab4f34d10a5a8c417f64e2e9", "html_url": "https://github.com/rust-lang/rust/commit/209fe0df24292a69ab4f34d10a5a8c417f64e2e9"}], "stats": {"total": 102, "additions": 99, "deletions": 3}, "files": [{"sha": "7b3306de7538bf1b1506b941e37ce56a795a25d3", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43", "patch": "@@ -176,8 +176,9 @@ pub fn construct_fn<'a, 'gcx, 'tcx, A>(hir: Cx<'a, 'gcx, 'tcx>,\n         unpack!(block = builder.in_scope(arg_extent, block, |builder| {\n             builder.args_and_body(block, return_ty, &arguments, arg_extent, ast_block)\n         }));\n-\n-        let source_info = builder.source_info(span);\n+        // Attribute epilogue to function's closing brace\n+        let fn_end = Span { lo: span.hi, ..span };\n+        let source_info = builder.source_info(fn_end);\n         let return_block = builder.return_block();\n         builder.cfg.terminate(block, source_info,\n                               TerminatorKind::Goto { target: return_block });"}, {"sha": "ae6a1fb473b6d63aadaaaab4d68fab79e97ce41c", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43", "patch": "@@ -521,8 +521,12 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                 if let DropKind::Value { .. } = drop_kind {\n                     scope.needs_cleanup = true;\n                 }\n+                let tcx = self.hir.tcx();\n+                let extent_span = extent.span(&tcx.region_maps, &tcx.map).unwrap();\n+                // Attribute scope exit drops to scope's closing brace\n+                let scope_end = Span { lo: extent_span.hi, .. extent_span};\n                 scope.drops.push(DropData {\n-                    span: span,\n+                    span: scope_end,\n                     location: lvalue.clone(),\n                     kind: drop_kind\n                 });"}, {"sha": "3a7c534c13902023ff7398ddcadce43760752d12", "filename": "src/test/debuginfo/drop-locations.rs", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43/src%2Ftest%2Fdebuginfo%2Fdrop-locations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43/src%2Ftest%2Fdebuginfo%2Fdrop-locations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdrop-locations.rs?ref=0eb4d46d03ce486a98c3ed24f9aa0406ff0b2a43", "patch": "@@ -0,0 +1,91 @@\n+// Copyright 2013-2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-windows\n+// ignore-android\n+// min-lldb-version: 310\n+\n+#![allow(unused)]\n+\n+// compile-flags:-g\n+\n+// This test checks that drop glue code gets attributed to scope's closing brace,\n+// and function epilogues - to function's closing brace.\n+\n+// === GDB TESTS ===================================================================================\n+\n+// gdb-command:run\n+// gdb-command:next\n+// gdb-command:frame\n+// gdb-check:[...]#loc1[...]\n+// gdb-command:next\n+// gdb-command:frame\n+// gdb-check:[...]#loc2[...]\n+// gdb-command:next\n+// gdb-command:frame\n+// gdb-check:[...]#loc3[...]\n+// gdb-command:next\n+// gdb-command:frame\n+// gdb-check:[...]#loc4[...]\n+// gdb-command:next\n+// gdb-command:frame\n+// gdb-check:[...]#loc5[...]\n+// gdb-command:next\n+// gdb-command:frame\n+// gdb-check:[...]#loc6[...]\n+\n+// === LLDB TESTS ==================================================================================\n+\n+// lldb-command:set set stop-line-count-before 0\n+// lldb-command:set set stop-line-count-after 1\n+// Can't set both to zero or lldb will stop printing source at all.  So it will output the current\n+// line and the next.  We deal with this by having at least 2 lines between the #loc's\n+\n+// lldb-command:run\n+// lldb-command:next\n+// lldb-command:frame select\n+// lldb-check:[...]#loc1[...]\n+// lldb-command:next\n+// lldb-command:frame select\n+// lldb-check:[...]#loc2[...]\n+// lldb-command:next\n+// lldb-command:frame select\n+// lldb-check:[...]#loc3[...]\n+// lldb-command:next\n+// lldb-command:frame select\n+// lldb-check:[...]#loc4[...]\n+// lldb-command:next\n+// lldb-command:frame select\n+// lldb-check:[...]#loc5[...]\n+// lldb-command:next\n+// lldb-command:frame select\n+// lldb-check:[...]#loc6[...]\n+\n+fn main() {\n+\n+    foo();\n+\n+    zzz(); // #loc5\n+\n+} // #loc6\n+\n+fn foo() {\n+    {\n+        let s = String::from(\"s\"); // #break\n+\n+        zzz(); // #loc1\n+\n+    } // #loc2\n+\n+    zzz(); // #loc3\n+\n+} // #loc4\n+\n+fn zzz() {()}"}]}