{"sha": "97ee62cee43373e7d1c6e6e778b1f9b738523ead", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ZWU2MmNlZTQzMzczZTdkMWM2ZTZlNzc4YjFmOWI3Mzg1MjNlYWQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-06T07:25:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-06T07:25:55Z"}, "message": "Rollup merge of #76855 - jyn514:platform-specific, r=ollie27\n\nRevamp rustdoc docs about documentation using `cfg`\n\n- Move `cfg(doc)` out of `unstable-features`. It's not unstable.\n- Remove outdated reference to `everybody_loops`.\n- Improve wording in various places\n- Give an example of code this allows (and does not allow)\n- Link to `cfg(doc)` in `doc(cfg)` documentation. Since one is stable\nand the other is not, don't combine them.\n- Cleanup wording for `doc(cfg)`\n- Incorporate changes from #76849\n- Mention that `doc(cfg)` is also for features\n\nAddresses https://github.com/rust-lang/rust/pull/76849#issuecomment-694516199.\nObsoletes https://github.com/rust-lang/rust/pull/76849 (I made sure to fix the weird dashes too).\nr? @steveklabnik", "tree": {"sha": "452eaadd6e26d4f7ce117ab3971d3a3573bbfd5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/452eaadd6e26d4f7ce117ab3971d3a3573bbfd5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97ee62cee43373e7d1c6e6e778b1f9b738523ead", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJffBwECRBK7hj4Ov3rIwAAdHIIAKSHPQKklk9tpIv2+JbGjt17\narb2xkRY3Ra81fCCXz6BGYOXLIMtxOO1Ka67LW7KBmw969hYshHmWHxsv3Rjnndh\n5kT5r1hiSocLkhuBCRCtnzfgtUgpIiCH3Q6lyVNAJtDZf4Liw+DFZjT7pVJXMAU3\nJx5Ghvh0pScIhe5MpTbc/SWwzd2bkFr/wULnA35YrRIQRHZlAFjG32Ajgh2itWDh\nZABODNDgo8nJCG0ATbLZ3d6IhrTK5dXrvJ4xX6ZrA1ddVFKLAswzSxrLJuA+TWi5\nleqpkA2uALPcx77Y6HaKgmwDbN7EgjZMtEyTjd+RlXnifNtggR8k1k0ETlGvdh0=\n=tAIW\n-----END PGP SIGNATURE-----\n", "payload": "tree 452eaadd6e26d4f7ce117ab3971d3a3573bbfd5a\nparent 59476e9e57af0e7ed5c84c2ee6018200c2ae8585\nparent dc5a000d794329c1cac5dc94871329fcb8b30123\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1601969155 +0900\ncommitter GitHub <noreply@github.com> 1601969155 +0900\n\nRollup merge of #76855 - jyn514:platform-specific, r=ollie27\n\nRevamp rustdoc docs about documentation using `cfg`\n\n- Move `cfg(doc)` out of `unstable-features`. It's not unstable.\n- Remove outdated reference to `everybody_loops`.\n- Improve wording in various places\n- Give an example of code this allows (and does not allow)\n- Link to `cfg(doc)` in `doc(cfg)` documentation. Since one is stable\nand the other is not, don't combine them.\n- Cleanup wording for `doc(cfg)`\n- Incorporate changes from #76849\n- Mention that `doc(cfg)` is also for features\n\nAddresses https://github.com/rust-lang/rust/pull/76849#issuecomment-694516199.\nObsoletes https://github.com/rust-lang/rust/pull/76849 (I made sure to fix the weird dashes too).\nr? @steveklabnik\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97ee62cee43373e7d1c6e6e778b1f9b738523ead", "html_url": "https://github.com/rust-lang/rust/commit/97ee62cee43373e7d1c6e6e778b1f9b738523ead", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97ee62cee43373e7d1c6e6e778b1f9b738523ead/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59476e9e57af0e7ed5c84c2ee6018200c2ae8585", "url": "https://api.github.com/repos/rust-lang/rust/commits/59476e9e57af0e7ed5c84c2ee6018200c2ae8585", "html_url": "https://github.com/rust-lang/rust/commit/59476e9e57af0e7ed5c84c2ee6018200c2ae8585"}, {"sha": "dc5a000d794329c1cac5dc94871329fcb8b30123", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc5a000d794329c1cac5dc94871329fcb8b30123", "html_url": "https://github.com/rust-lang/rust/commit/dc5a000d794329c1cac5dc94871329fcb8b30123"}], "stats": {"total": 71, "additions": 50, "deletions": 21}, "files": [{"sha": "8be9489c617507e28c6360645bf4c2e67b884058", "filename": "src/doc/rustdoc/src/advanced-features.md", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/97ee62cee43373e7d1c6e6e778b1f9b738523ead/src%2Fdoc%2Frustdoc%2Fsrc%2Fadvanced-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/97ee62cee43373e7d1c6e6e778b1f9b738523ead/src%2Fdoc%2Frustdoc%2Fsrc%2Fadvanced-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fadvanced-features.md?ref=97ee62cee43373e7d1c6e6e778b1f9b738523ead", "patch": "@@ -2,7 +2,7 @@\n \n The features listed on this page fall outside the rest of the main categories.\n \n-## `#[cfg(doc)]`: Documenting platform-/feature-specific information\n+## `#[cfg(doc)]`: Documenting platform-specific or feature-specific information\n \n For conditional compilation, Rustdoc treats your crate the same way the compiler does. Only things\n from the host target are available (or from the given `--target` if present), and everything else is\n@@ -17,7 +17,7 @@ with other `#[cfg]` filters on it, you can write something like `#[cfg(any(windo\n This will preserve the item either when built normally on Windows, or when being documented\n anywhere.\n \n-Please note that this feature is not passed to doctests.\n+Please note that this `cfg` is not passed to doctests.\n \n Example:\n \n@@ -33,6 +33,40 @@ pub struct UnixToken;\n Here, the respective tokens can only be used by dependent crates on their respective platforms, but\n they will both appear in documentation.\n \n+### Interactions between platform-specific docs\n+\n+Rustdoc does not have a magic way to compile documentation 'as-if' you'd run it once for each\n+platform (such a magic wand has been called the ['holy grail of rustdoc'][#1998]). Instead,\n+it sees *all* of your code at once, the same way the Rust compiler would if you passed it\n+`--cfg doc`. However, Rustdoc has a trick up its sleeve to handle platform-specific code if it\n+*does* receive it.\n+\n+To document your crate, Rustdoc only needs to know the public signature of your functions.\n+In particular, it doesn't have to know how any of your functions are implemented, so it ignores\n+all type errors and name resolution errors with function bodies. Note that this does *not*\n+work for anything outside a function body: since Rustdoc documents your types, it has to\n+know what those types are! For example, this code will work regardless of the platform:\n+\n+<!-- `ignore` because doc-tests are run with `rustc`, not `rustdoc` -->\n+```ignore\n+pub fn f() {\n+    use std::os::windows::ffi::OsStrExt;\n+}\n+```\n+\n+but this will not, because the unknown type is part of the function signature:\n+\n+```ignore\n+pub fn f() -> std::os::windows::ffi::EncodeWide<'static> {\n+    unimplemented!()\n+}\n+```\n+\n+For a more realistic example of code this allows, see [the rustdoc test suite][realistic-async].\n+\n+[#1998]: https://github.com/rust-lang/rust/issues/1998\n+[realistic-async]: https://github.com/rust-lang/rust/blob/b146000e910ccd60bdcde89363cb6aa14ecc0d95/src/test/rustdoc-ui/error-in-impl-trait/realistic-async.rs\n+\n ## Add aliases for an item in documentation search\n \n This feature allows you to add alias(es) to an item when using the `rustdoc` search through the"}, {"sha": "16157a4b080f197fd200fddf4bd7efd8072ea2c9", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/97ee62cee43373e7d1c6e6e778b1f9b738523ead/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/97ee62cee43373e7d1c6e6e778b1f9b738523ead/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=97ee62cee43373e7d1c6e6e778b1f9b738523ead", "patch": "@@ -43,28 +43,16 @@ plain text.\n These features operate by extending the `#[doc]` attribute, and thus can be caught by the compiler\n and enabled with a `#![feature(...)]` attribute in your crate.\n \n-### Documenting platform-/feature-specific information\n+### `#[doc(cfg)]`: Recording what platforms or features are required for code to be present\n \n-Because of the way Rustdoc documents a crate, the documentation it creates is specific to the target\n-rustc compiles for. Anything that's specific to any other target is dropped via `#[cfg]` attribute\n-processing early in the compilation process. However, Rustdoc has a trick up its sleeve to handle\n-platform-specific code if it *does* receive it.\n+You can use `#[doc(cfg(...))]` to tell Rustdoc exactly which platform items appear on.\n+This has two effects:\n \n-Because Rustdoc doesn't need to fully compile a crate to binary, it replaces function bodies with\n-`loop {}` to prevent having to process more than necessary. This means that any code within a\n-function that requires platform-specific pieces is ignored. Combined with a special attribute,\n-`#[doc(cfg(...))]`, you can tell Rustdoc exactly which platform something is supposed to run on,\n-ensuring that doctests are only run on the appropriate platforms.\n-\n-The `#[doc(cfg(...))]` attribute has another effect: When Rustdoc renders documentation for that\n-item, it will be accompanied by a banner explaining that the item is only available on certain\n-platforms.\n-\n-For Rustdoc to document an item, it needs to see it, regardless of what platform it's currently\n-running on. To aid this, Rustdoc sets the flag `#[cfg(doc)]` when running on your crate.\n-Combining this with the target platform of a given item allows it to appear when building your crate\n-normally on that platform, as well as when building documentation anywhere.\n+1. doctests will only run on the appropriate platforms, and\n+2. When Rustdoc renders documentation for that item, it will be accompanied by a banner explaining\n+   that the item is only available on certain platforms.\n \n+`#[doc(cfg)]` is intended to be used alongside [`#[cfg(doc)]`][cfg-doc].\n For example, `#[cfg(any(windows, doc))]` will preserve the item either on Windows or during the\n documentation process. Then, adding a new attribute `#[doc(cfg(windows))]` will tell Rustdoc that\n the item is supposed to be used on Windows. For example:\n@@ -81,6 +69,12 @@ pub struct WindowsToken;\n #[cfg(any(unix, doc))]\n #[doc(cfg(unix))]\n pub struct UnixToken;\n+\n+/// Token struct that is only available with the `serde` feature\n+#[cfg(feature = \"serde\")]\n+#[doc(cfg(feature = \"serde\"))]\n+#[derive(serde::Deserialize)]\n+pub struct SerdeToken;\n ```\n \n In this sample, the tokens will only appear on their respective platforms, but they will both appear\n@@ -90,6 +84,7 @@ in documentation.\n `#![feature(doc_cfg)]` feature gate. For more information, see [its chapter in the Unstable\n Book][unstable-doc-cfg] and [its tracking issue][issue-doc-cfg].\n \n+[cfg-doc]: ./advanced-features.md\n [unstable-doc-cfg]: ../unstable-book/language-features/doc-cfg.html\n [issue-doc-cfg]: https://github.com/rust-lang/rust/issues/43781\n "}]}