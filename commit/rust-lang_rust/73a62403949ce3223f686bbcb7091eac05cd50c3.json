{"sha": "73a62403949ce3223f686bbcb7091eac05cd50c3", "node_id": "C_kwDOAAsO6NoAKDczYTYyNDAzOTQ5Y2UzMjIzZjY4NmJiY2I3MDkxZWFjMDVjZDUwYzM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-13T14:02:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-13T14:02:34Z"}, "message": "Rollup merge of #99011 - oli-obk:UnsoundCell, r=eddyb\n\n`UnsafeCell` blocks niches inside its nested type from being available outside\n\nfixes #87341\n\nThis implements the plan by `@eddyb` in https://github.com/rust-lang/rust/issues/87341#issuecomment-886083646\n\nSomewhat related PR (not strictly necessary, but that cleanup made this PR simpler): #94527", "tree": {"sha": "d251536c7b4a2e09785217ef9677851361534e5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d251536c7b4a2e09785217ef9677851361534e5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73a62403949ce3223f686bbcb7091eac05cd50c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73a62403949ce3223f686bbcb7091eac05cd50c3", "html_url": "https://github.com/rust-lang/rust/commit/73a62403949ce3223f686bbcb7091eac05cd50c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73a62403949ce3223f686bbcb7091eac05cd50c3/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e1af3fd82b8db3c2d5bea18653f620d49df4d3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e1af3fd82b8db3c2d5bea18653f620d49df4d3d", "html_url": "https://github.com/rust-lang/rust/commit/9e1af3fd82b8db3c2d5bea18653f620d49df4d3d"}, {"sha": "6293da231abe89341faf97e2042a28cadd06c918", "url": "https://api.github.com/repos/rust-lang/rust/commits/6293da231abe89341faf97e2042a28cadd06c918", "html_url": "https://github.com/rust-lang/rust/commit/6293da231abe89341faf97e2042a28cadd06c918"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6bce5fbd4c1fecf24cb1144fa812569186834f26", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73a62403949ce3223f686bbcb7091eac05cd50c3/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73a62403949ce3223f686bbcb7091eac05cd50c3/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=73a62403949ce3223f686bbcb7091eac05cd50c3", "patch": "@@ -148,7 +148,7 @@ fn is_value_unfrozen_raw<'tcx>(\n         match val.ty().kind() {\n             // the fact that we have to dig into every structs to search enums\n             // leads us to the point checking `UnsafeCell` directly is the only option.\n-            ty::Adt(ty_def, ..) if Some(ty_def.did()) == cx.tcx.lang_items().unsafe_cell_type() => true,\n+            ty::Adt(ty_def, ..) if ty_def.is_unsafe_cell() => true,\n             ty::Array(..) | ty::Adt(..) | ty::Tuple(..) => {\n                 let val = cx.tcx.destructure_mir_constant(cx.param_env, val);\n                 val.fields.iter().any(|field| inner(cx, *field))"}]}