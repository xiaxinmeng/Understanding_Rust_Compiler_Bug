{"sha": "a1ca12581a5099122a64e64b1dd76cd56de5ef29", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExY2ExMjU4MWE1MDk5MTIyYTY0ZTY0YjFkZDc2Y2Q1NmRlNWVmMjk=", "commit": {"author": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-08-09T03:03:41Z"}, "committer": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-08-09T03:03:41Z"}, "message": "update stderr for transmutes_expressible_as_ptr_casts", "tree": {"sha": "c76944dc0fa6e40f2d1c4a00d3415f1c79068c23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c76944dc0fa6e40f2d1c4a00d3415f1c79068c23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1ca12581a5099122a64e64b1dd76cd56de5ef29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1ca12581a5099122a64e64b1dd76cd56de5ef29", "html_url": "https://github.com/rust-lang/rust/commit/a1ca12581a5099122a64e64b1dd76cd56de5ef29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1ca12581a5099122a64e64b1dd76cd56de5ef29/comments", "author": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe9ad57e98c00367ca7b5eb3bae976c7ecfc8b08", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe9ad57e98c00367ca7b5eb3bae976c7ecfc8b08", "html_url": "https://github.com/rust-lang/rust/commit/fe9ad57e98c00367ca7b5eb3bae976c7ecfc8b08"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "721888802157bc6fb3f05e4fec7830a709002624", "filename": "tests/ui/transmutes_expressible_as_ptr_casts.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a1ca12581a5099122a64e64b1dd76cd56de5ef29/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a1ca12581a5099122a64e64b1dd76cd56de5ef29/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.stderr?ref=a1ca12581a5099122a64e64b1dd76cd56de5ef29", "patch": "@@ -1,53 +1,53 @@\n error: transmute from an integer to a pointer\n-  --> $DIR/transmutes_expressible_as_ptr_casts.rs:18:9\n+  --> $DIR/transmutes_expressible_as_ptr_casts.rs:19:9\n    |\n LL |         transmute::<isize, *const i32>(-1)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `-1 as *const i32`\n    |\n    = note: `-D clippy::useless-transmute` implied by `-D warnings`\n \n error: transmute from a pointer to a pointer\n-  --> $DIR/transmutes_expressible_as_ptr_casts.rs:24:9\n+  --> $DIR/transmutes_expressible_as_ptr_casts.rs:25:9\n    |\n LL |         transmute::<*const i32, *const i8>(ptr_i32)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ptr_i32 as *const i8`\n    |\n    = note: `-D clippy::transmute-ptr-to-ptr` implied by `-D warnings`\n \n error: transmute from a pointer to a pointer\n-  --> $DIR/transmutes_expressible_as_ptr_casts.rs:32:9\n+  --> $DIR/transmutes_expressible_as_ptr_casts.rs:33:9\n    |\n LL |         transmute::<*const [i32], *const [u16]>(slice_ptr)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `slice_ptr as *const [u16]`\n \n error: transmute from `*const i32` to `usize` which could be expressed as a pointer cast instead\n-  --> $DIR/transmutes_expressible_as_ptr_casts.rs:40:9\n+  --> $DIR/transmutes_expressible_as_ptr_casts.rs:41:9\n    |\n LL |         transmute::<*const i32, usize>(ptr_i32)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ptr_i32 as usize`\n    |\n    = note: `-D clippy::transmutes-expressible-as-ptr-casts` implied by `-D warnings`\n \n error: transmute from a reference to a pointer\n-  --> $DIR/transmutes_expressible_as_ptr_casts.rs:48:9\n+  --> $DIR/transmutes_expressible_as_ptr_casts.rs:49:9\n    |\n LL |         transmute::<&[i32; 4], *const [i32; 4]>(array_ref)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `array_ref as *const [i32; 4]`\n \n error: transmute from `fn(usize) -> u8 {main::foo}` to `*const usize` which could be expressed as a pointer cast instead\n-  --> $DIR/transmutes_expressible_as_ptr_casts.rs:56:9\n+  --> $DIR/transmutes_expressible_as_ptr_casts.rs:57:9\n    |\n LL |         transmute::<fn(usize) -> u8, *const usize>(foo)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `foo as *const usize`\n \n error: transmute from `fn(usize) -> u8 {main::foo}` to `usize` which could be expressed as a pointer cast instead\n-  --> $DIR/transmutes_expressible_as_ptr_casts.rs:62:9\n+  --> $DIR/transmutes_expressible_as_ptr_casts.rs:63:9\n    |\n LL |         transmute::<fn(usize) -> u8, usize>(foo)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `foo as usize`\n \n error: transmute from a reference to a pointer\n-  --> $DIR/transmutes_expressible_as_ptr_casts.rs:75:14\n+  --> $DIR/transmutes_expressible_as_ptr_casts.rs:76:14\n    |\n LL |     unsafe { transmute::<&[i32; 1], *const u8>(in_param) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `in_param as *const [i32; 1] as *const u8`"}]}