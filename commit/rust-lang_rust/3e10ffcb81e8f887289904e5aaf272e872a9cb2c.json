{"sha": "3e10ffcb81e8f887289904e5aaf272e872a9cb2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMTBmZmNiODFlOGY4ODcyODk5MDRlNWFhZjI3MmU4NzJhOWNiMmM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-05T20:51:40Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-05T21:48:30Z"}, "message": "Make features stable and clarify examples", "tree": {"sha": "ed12979c4981b0403d25a161ed0e66afc4616a72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed12979c4981b0403d25a161ed0e66afc4616a72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e10ffcb81e8f887289904e5aaf272e872a9cb2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e10ffcb81e8f887289904e5aaf272e872a9cb2c", "html_url": "https://github.com/rust-lang/rust/commit/3e10ffcb81e8f887289904e5aaf272e872a9cb2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e10ffcb81e8f887289904e5aaf272e872a9cb2c/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33067ad2011ce97e80a247c5a1a9bdb15fc4f376", "url": "https://api.github.com/repos/rust-lang/rust/commits/33067ad2011ce97e80a247c5a1a9bdb15fc4f376", "html_url": "https://github.com/rust-lang/rust/commit/33067ad2011ce97e80a247c5a1a9bdb15fc4f376"}], "stats": {"total": 31, "additions": 8, "deletions": 23}, "files": [{"sha": "618aff963f22dd59bc8d549bd4fc585ecd4d8847", "filename": "src/liballoc/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e10ffcb81e8f887289904e5aaf272e872a9cb2c/src%2Fliballoc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e10ffcb81e8f887289904e5aaf272e872a9cb2c/src%2Fliballoc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flib.rs?ref=3e10ffcb81e8f887289904e5aaf272e872a9cb2c", "patch": "@@ -25,7 +25,6 @@\n #![feature(unboxed_closures)]\n #![feature(exact_chunks)]\n #![feature(repeat_generic_slice)]\n-#![feature(trim_direction)]\n \n extern crate alloc_system;\n extern crate core;"}, {"sha": "0caab089a3baeffbfba59e1cb087add3c5ef3a95", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 8, "deletions": 22, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3e10ffcb81e8f887289904e5aaf272e872a9cb2c/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e10ffcb81e8f887289904e5aaf272e872a9cb2c/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=3e10ffcb81e8f887289904e5aaf272e872a9cb2c", "patch": "@@ -3604,24 +3604,20 @@ impl str {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// #![feature(trim_direction)]\n-    ///\n     /// let s = \" Hello\\tworld\\t\";\n     /// assert_eq!(\"Hello\\tworld\\t\", s.trim_start());\n     /// ```\n     ///\n     /// Directionality:\n     ///\n     /// ```\n-    /// #![feature(trim_direction)]\n-    ///\n-    /// let s = \"  English\";\n+    /// let s = \"  English  \";\n     /// assert!(Some('E') == s.trim_start().chars().next());\n     ///\n-    /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea\";\n+    /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea  \";\n     /// assert!(Some('\u05e2') == s.trim_start().chars().next());\n     /// ```\n-    #[unstable(feature = \"trim_direction\", issue = \"30459\")]\n+    #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n     pub fn trim_start(&self) -> &str {\n         self.trim_start_matches(|c: char| c.is_whitespace())\n     }\n@@ -3643,24 +3639,20 @@ impl str {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// #![feature(trim_direction)]\n-    ///\n     /// let s = \" Hello\\tworld\\t\";\n     /// assert_eq!(\" Hello\\tworld\", s.trim_end());\n     /// ```\n     ///\n     /// Directionality:\n     ///\n     /// ```\n-    /// #![feature(trim_direction)]\n-    ///\n-    /// let s = \"English  \";\n+    /// let s = \"  English  \";\n     /// assert!(Some('h') == s.trim_end().chars().rev().next());\n     ///\n-    /// let s = \"\u05e2\u05d1\u05e8\u05d9\u05ea  \";\n+    /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea  \";\n     /// assert!(Some('\u05ea') == s.trim_end().chars().rev().next());\n     /// ```\n-    #[unstable(feature = \"trim_direction\", issue = \"30459\")]\n+    #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n     pub fn trim_end(&self) -> &str {\n         self.trim_end_matches(|c: char| c.is_whitespace())\n     }\n@@ -3805,15 +3797,13 @@ impl str {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// #![feature(trim_direction)]\n-    ///\n     /// assert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\n     /// assert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n     ///\n     /// let x: &[_] = &['1', '2'];\n     /// assert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n     /// ```\n-    #[unstable(feature = \"trim_direction\", issue = \"30459\")]\n+    #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n     pub fn trim_start_matches<'a, P: Pattern<'a>>(&'a self, pat: P) -> &'a str {\n         let mut i = self.len();\n         let mut matcher = pat.into_searcher(self);\n@@ -3846,8 +3836,6 @@ impl str {\n     /// Simple patterns:\n     ///\n     /// ```\n-    /// #![feature(trim_direction)]\n-    ///\n     /// assert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\n     /// assert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n     ///\n@@ -3858,11 +3846,9 @@ impl str {\n     /// A more complex pattern, using a closure:\n     ///\n     /// ```\n-    /// #![feature(trim_direction)]\n-    ///\n     /// assert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n     /// ```\n-    #[unstable(feature = \"trim_direction\", issue = \"30459\")]\n+    #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n     pub fn trim_end_matches<'a, P: Pattern<'a>>(&'a self, pat: P) -> &'a str\n         where P::Searcher: ReverseSearcher<'a>\n     {"}]}