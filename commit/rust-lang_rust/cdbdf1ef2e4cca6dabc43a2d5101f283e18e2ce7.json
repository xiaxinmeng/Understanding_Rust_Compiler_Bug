{"sha": "cdbdf1ef2e4cca6dabc43a2d5101f283e18e2ce7", "node_id": "C_kwDOAAsO6NoAKGNkYmRmMWVmMmU0Y2NhNmRhYmM0M2EyZDUxMDFmMjgzZTE4ZTJjZTc", "commit": {"author": {"name": "fee1-dead", "email": "ent3rm4n@gmail.com", "date": "2022-04-12T12:44:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-12T12:44:44Z"}, "message": "Rollup merge of #95900 - o01eg:fix-wasm-doc, r=Mark-Simulacrum\n\nFix documentation for wasm32-unknown-unknown\n\nFixes https://github.com/rust-lang/rust/issues/76526#issuecomment-1094208720", "tree": {"sha": "dfd7559b4981fbf9fa05ac3bfc7188d3c999b759", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfd7559b4981fbf9fa05ac3bfc7188d3c999b759"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdbdf1ef2e4cca6dabc43a2d5101f283e18e2ce7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiVXQ8CRBK7hj4Ov3rIwAAAU0IAA6B39KBgROLeu2YdQmuQKWa\nQuaG3of0e7PjK2bk2sjCPghiNay3tbf19FyAVquMz+Uu0HkuDFyC2VW/hepL68lT\nqSo8lDF4HauEAGgUIRK5ecw/Q0aVdi4VU8Ur4D8/7DOVHS6Ebe2igvi/fzkjNOZF\nHZfjCkC0AT2rofmtvJSDl4qYjFW9nTon8ImnHOet+a7lAmdeIyNSivvOuxCViC+/\nBHz+rTXG7Eds97Z2ZGIVjRjyDgNKLfuI1lBRM5cQ9aI+zzlgUXCdYCyaOi58oBG+\noclpIfQEZowd9O3RSVJZi/QoYN57IE6oed8lfPGoCYan/bq4kyNmMx5ThL1WyI0=\n=tTR8\n-----END PGP SIGNATURE-----\n", "payload": "tree dfd7559b4981fbf9fa05ac3bfc7188d3c999b759\nparent 93e6020ed9d992fa6869dc7fa81544b193211df3\nparent 3f4bbd50fda2be3ccf31031003bce19645afa99a\nauthor fee1-dead <ent3rm4n@gmail.com> 1649767484 +1000\ncommitter GitHub <noreply@github.com> 1649767484 +1000\n\nRollup merge of #95900 - o01eg:fix-wasm-doc, r=Mark-Simulacrum\n\nFix documentation for wasm32-unknown-unknown\n\nFixes https://github.com/rust-lang/rust/issues/76526#issuecomment-1094208720\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdbdf1ef2e4cca6dabc43a2d5101f283e18e2ce7", "html_url": "https://github.com/rust-lang/rust/commit/cdbdf1ef2e4cca6dabc43a2d5101f283e18e2ce7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdbdf1ef2e4cca6dabc43a2d5101f283e18e2ce7/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93e6020ed9d992fa6869dc7fa81544b193211df3", "url": "https://api.github.com/repos/rust-lang/rust/commits/93e6020ed9d992fa6869dc7fa81544b193211df3", "html_url": "https://github.com/rust-lang/rust/commit/93e6020ed9d992fa6869dc7fa81544b193211df3"}, {"sha": "3f4bbd50fda2be3ccf31031003bce19645afa99a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f4bbd50fda2be3ccf31031003bce19645afa99a", "html_url": "https://github.com/rust-lang/rust/commit/3f4bbd50fda2be3ccf31031003bce19645afa99a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e6013c7c051e5a4b985c505170d1f29ddea99d9c", "filename": "library/std/src/os/fd/owned.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cdbdf1ef2e4cca6dabc43a2d5101f283e18e2ce7/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdbdf1ef2e4cca6dabc43a2d5101f283e18e2ce7/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs?ref=cdbdf1ef2e4cca6dabc43a2d5101f283e18e2ce7", "patch": "@@ -8,7 +8,7 @@ use crate::fmt;\n use crate::fs;\n use crate::marker::PhantomData;\n use crate::mem::forget;\n-#[cfg(not(any(target_os = \"wasi\", target_env = \"sgx\")))]\n+#[cfg(not(any(target_arch = \"wasm32\", target_env = \"sgx\")))]\n use crate::sys::cvt;\n use crate::sys_common::{AsInner, FromInner, IntoInner};\n \n@@ -76,7 +76,7 @@ impl BorrowedFd<'_> {\n impl OwnedFd {\n     /// Creates a new `OwnedFd` instance that shares the same underlying file handle\n     /// as the existing `OwnedFd` instance.\n-    #[cfg(not(target_os = \"wasi\"))]\n+    #[cfg(not(target_arch = \"wasm32\"))]\n     pub fn try_clone(&self) -> crate::io::Result<Self> {\n         // We want to atomically duplicate this file descriptor and set the\n         // CLOEXEC flag, and currently that's done via F_DUPFD_CLOEXEC. This\n@@ -95,7 +95,7 @@ impl OwnedFd {\n         Ok(unsafe { Self::from_raw_fd(fd) })\n     }\n \n-    #[cfg(target_os = \"wasi\")]\n+    #[cfg(target_arch = \"wasm32\")]\n     pub fn try_clone(&self) -> crate::io::Result<Self> {\n         Err(crate::io::const_io_error!(\n             crate::io::ErrorKind::Unsupported,"}, {"sha": "47ee88d97fb9349fba80eb4ab47cfbc5e6895720", "filename": "library/std/src/os/fd/raw.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cdbdf1ef2e4cca6dabc43a2d5101f283e18e2ce7/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdbdf1ef2e4cca6dabc43a2d5101f283e18e2ce7/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs?ref=cdbdf1ef2e4cca6dabc43a2d5101f283e18e2ce7", "patch": "@@ -5,7 +5,7 @@\n use crate::fs;\n use crate::io;\n use crate::os::raw;\n-#[cfg(doc)]\n+#[cfg(all(doc, not(target_arch = \"wasm32\")))]\n use crate::os::unix::io::AsFd;\n #[cfg(unix)]\n use crate::os::unix::io::OwnedFd;"}]}