{"sha": "7042c8ef8d8242b96bbf9efd2a7de472a3b71e05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNDJjOGVmOGQ4MjQyYjk2YmJmOWVmZDJhN2RlNDcyYTNiNzFlMDU=", "commit": {"author": {"name": "Ivan Kozik", "email": "ivan@ludios.org", "date": "2016-02-24T20:00:58Z"}, "committer": {"name": "Ivan Kozik", "email": "ivan@ludios.org", "date": "2016-02-24T20:09:01Z"}, "message": "book: Explain better why the filter closure gets a reference", "tree": {"sha": "0988a712ed322af4952c956cc81a57fadabc66e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0988a712ed322af4952c956cc81a57fadabc66e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7042c8ef8d8242b96bbf9efd2a7de472a3b71e05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7042c8ef8d8242b96bbf9efd2a7de472a3b71e05", "html_url": "https://github.com/rust-lang/rust/commit/7042c8ef8d8242b96bbf9efd2a7de472a3b71e05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7042c8ef8d8242b96bbf9efd2a7de472a3b71e05/comments", "author": {"login": "ivan", "id": 4458, "node_id": "MDQ6VXNlcjQ0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan", "html_url": "https://github.com/ivan", "followers_url": "https://api.github.com/users/ivan/followers", "following_url": "https://api.github.com/users/ivan/following{/other_user}", "gists_url": "https://api.github.com/users/ivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan/subscriptions", "organizations_url": "https://api.github.com/users/ivan/orgs", "repos_url": "https://api.github.com/users/ivan/repos", "events_url": "https://api.github.com/users/ivan/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ivan", "id": 4458, "node_id": "MDQ6VXNlcjQ0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan", "html_url": "https://github.com/ivan", "followers_url": "https://api.github.com/users/ivan/followers", "following_url": "https://api.github.com/users/ivan/following{/other_user}", "gists_url": "https://api.github.com/users/ivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan/subscriptions", "organizations_url": "https://api.github.com/users/ivan/orgs", "repos_url": "https://api.github.com/users/ivan/repos", "events_url": "https://api.github.com/users/ivan/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ef8d426050318934d16d962325ec002eaf0c29d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ef8d426050318934d16d962325ec002eaf0c29d", "html_url": "https://github.com/rust-lang/rust/commit/0ef8d426050318934d16d962325ec002eaf0c29d"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "0c4f804126631fea066fdc402ad7e4a47a566dd8", "filename": "src/doc/book/iterators.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7042c8ef8d8242b96bbf9efd2a7de472a3b71e05/src%2Fdoc%2Fbook%2Fiterators.md", "raw_url": "https://github.com/rust-lang/rust/raw/7042c8ef8d8242b96bbf9efd2a7de472a3b71e05/src%2Fdoc%2Fbook%2Fiterators.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fiterators.md?ref=7042c8ef8d8242b96bbf9efd2a7de472a3b71e05", "patch": "@@ -311,10 +311,12 @@ for i in (1..100).filter(|&x| x % 2 == 0) {\n ```\n \n This will print all of the even numbers between one and a hundred.\n-(Note that because `filter` doesn't consume the elements that are\n-being iterated over, it is passed a reference to each element, and\n-thus the filter predicate uses the `&x` pattern to extract the integer\n-itself.)\n+(Note that, unlike `map`, the closure passed to `filter` is passed a reference\n+to the element instead of the element itself. The filter predicate here uses\n+the `&x` pattern to extract the integer. The filter closure is passed a\n+reference because it returns `true` or `false` instead of the element,\n+so the `filter` implementation must retain ownership to put the elements\n+into the newly constructed iterator.)\n \n You can chain all three things together: start with an iterator, adapt it\n a few times, and then consume the result. Check it out:"}]}