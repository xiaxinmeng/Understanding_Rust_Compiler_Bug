{"sha": "346f1a67697c6a640a202afe9695ff03c80860b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NmYxYTY3Njk3YzZhNjQwYTIwMmFmZTk2OTVmZjAzYzgwODYwYjU=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-16T19:06:09Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-16T19:06:09Z"}, "message": "More driver related cleanups.", "tree": {"sha": "86e7e0aa547c87646f72151613ac752fc422fd85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86e7e0aa547c87646f72151613ac752fc422fd85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/346f1a67697c6a640a202afe9695ff03c80860b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/346f1a67697c6a640a202afe9695ff03c80860b5", "html_url": "https://github.com/rust-lang/rust/commit/346f1a67697c6a640a202afe9695ff03c80860b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/346f1a67697c6a640a202afe9695ff03c80860b5/comments", "author": null, "committer": null, "parents": [{"sha": "bd8f6097a77206e34fbbe9592a3cc61111562d63", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd8f6097a77206e34fbbe9592a3cc61111562d63", "html_url": "https://github.com/rust-lang/rust/commit/bd8f6097a77206e34fbbe9592a3cc61111562d63"}], "stats": {"total": 49, "additions": 15, "deletions": 34}, "files": [{"sha": "48707bac5c2c1d5f48abad75773f2f0518916735", "filename": "mk/tests.mk", "status": "modified", "additions": 15, "deletions": 34, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/346f1a67697c6a640a202afe9695ff03c80860b5/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/346f1a67697c6a640a202afe9695ff03c80860b5/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=346f1a67697c6a640a202afe9695ff03c80860b5", "patch": "@@ -182,23 +182,21 @@ compile-check: tidy \\\n # Testing rules\n ######################################################################\n \n-%.stage0$(X): %.stage0.o  $(SREQ0)\n-\t@$(call E, link [gcc]: $@)\n-\t$(Q)gcc $(CFG_GCCISH_CFLAGS) stage1/glue.o -o $@ $< \\\n-      -Lstage1 -Lrt rt/main.o -lrustrt -lstd -lm\n-\t@# dsymutil sometimes fails or prints a warning, but the\n-\t@# program still runs.  Since it simplifies debugging other\n-\t@# programs, I\\'ll live with the noise.\n-\t-$(Q)$(CFG_DSYMUTIL) $@\n-\n-%.stage1$(X): %.stage1.o $(SREQ1)\n-\t@$(call E, link [gcc]: $@)\n-\t$(Q)gcc $(CFG_GCCISH_CFLAGS) stage2/glue.o -o $@ $< \\\n-      -Lstage2 -Lrt rt/main.o -lrustrt -lstd -lm\n-\t@# dsymutil sometimes fails or prints a warning, but the\n-\t@# program still runs.  Since it simplifies debugging other\n-\t@# programs, I\\'ll live with the noise.\n-\t-$(Q)$(CFG_DSYMUTIL) $@\n+%.stage0$(X): %.rs $(SREQ0)\n+\t@$(call E, compile_and_link: $@)\n+\t$(STAGE0) -o $@ $<\n+\n+%.stage0$(X): %.rc $(SREQ0)\n+\t@$(call E, compile_and_link: $@)\n+\t$(STAGE0) -o $@ $<\n+\n+%.stage1$(X): %.rs $(SREQ1)\n+\t@$(call E, compile_and_link: $@)\n+\t$(STAGE1) -o $@ $<\n+\n+%.stage1$(X): %.rc $(SREQ1)\n+\t@$(call E, compile_and_link: $@)\n+\t$(STAGE1) -o $@ $<\n \n %.stage2$(X): %.rs $(SREQ2)\n \t@$(call E, compile_and_link: $@)\n@@ -208,23 +206,6 @@ compile-check: tidy \\\n \t@$(call E, compile_and_link: $@)\n \t$(STAGE2) -o $@ $<\n \n-%.stage0.o: %.rc $(SREQ0)\n-\t@$(call E, compile [stage0]: $@)\n-\t$(STAGE0) -c -o $@ $<\n-\n-%.stage0.o: %.rs $(SREQ0)\n-\t@$(call E, compile [stage0]: $@)\n-\t$(STAGE0) -c -o $@ $<\n-\n-\n-%.stage1.o: %.rc $(SREQ1)\n-\t@$(call E, compile [stage1]: $@)\n-\t$(STAGE1) -c -o $@ $<\n-\n-%.stage1.o: %.rs $(SREQ1)\n-\t@$(call E, compile [stage1]: $@)\n-\t$(STAGE1) -c -o $@ $<\n-\n # Cancel the implicit .out rule in GNU make.\n %.out: %\n "}]}