{"sha": "e7b45a0b1fa26e55453965b6060667a86ef4d099", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YjQ1YTBiMWZhMjZlNTU0NTM5NjViNjA2MDY2N2E4NmVmNGQwOTk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-12T04:17:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-12T04:17:30Z"}, "message": "Rollup merge of #54072 - blitzerr:master, r=Mark-Simulacrum\n\nStabilization change for mod.rs\n\nThis change is in response to https://github.com/rust-lang/rust/issues/53125.\nThe patch makes the feature accepted and removes the tests that tested the\nnon-accepted status of the feature.", "tree": {"sha": "f2f57d3362488167866d421341378ceab82fc44a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2f57d3362488167866d421341378ceab82fc44a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7b45a0b1fa26e55453965b6060667a86ef4d099", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbmJNaCRBK7hj4Ov3rIwAAdHIIAGYvWI1tuZEMQjARcCgYT0bl\nbWnrcl+NJfgIGirK2Q9zIflZHeE893+AlbUxBCnZpdg1BLjg/sU+ytvJJsQ1iTTz\nnVee6CkQ09PO50Ebr8Lk0VWaxIF80y/ezHLOdPv8maIhLvoOxNBfmbPDC5jzAzIn\nBsubyJMDK/5Shb5T4RGCKcanEQn/PM7tODo4c9tvr3UGZ42NYgxIWVEvujQfLIqi\njeK/0w3GWg0idqx6mN1aU4KwcfsGP2T/JEgxsgnlOGyCpyXDMsZJSuuEDOAcNCcD\nL10Pc+IuSiGR0WunmMY+PAdFrvv3gVZYCfHU63+jnWNIX2n1wfYCokMZ4OfrRl8=\n=C+f/\n-----END PGP SIGNATURE-----\n", "payload": "tree f2f57d3362488167866d421341378ceab82fc44a\nparent de2c0f95e85d5f5140821805dfa76ec4e9867f50\nparent 7f6b60899502c45fc0b58adf79d09fb77ffc8884\nauthor kennytm <kennytm@gmail.com> 1536725850 +0800\ncommitter GitHub <noreply@github.com> 1536725850 +0800\n\nRollup merge of #54072 - blitzerr:master, r=Mark-Simulacrum\n\nStabilization change for mod.rs\n\nThis change is in response to https://github.com/rust-lang/rust/issues/53125.\nThe patch makes the feature accepted and removes the tests that tested the\nnon-accepted status of the feature.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7b45a0b1fa26e55453965b6060667a86ef4d099", "html_url": "https://github.com/rust-lang/rust/commit/e7b45a0b1fa26e55453965b6060667a86ef4d099", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7b45a0b1fa26e55453965b6060667a86ef4d099/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de2c0f95e85d5f5140821805dfa76ec4e9867f50", "url": "https://api.github.com/repos/rust-lang/rust/commits/de2c0f95e85d5f5140821805dfa76ec4e9867f50", "html_url": "https://github.com/rust-lang/rust/commit/de2c0f95e85d5f5140821805dfa76ec4e9867f50"}, {"sha": "7f6b60899502c45fc0b58adf79d09fb77ffc8884", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f6b60899502c45fc0b58adf79d09fb77ffc8884", "html_url": "https://github.com/rust-lang/rust/commit/7f6b60899502c45fc0b58adf79d09fb77ffc8884"}], "stats": {"total": 188, "additions": 3, "deletions": 185}, "files": [{"sha": "2b4daa6440c0cee481cead9042c16b7a35bff761", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 30, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e7b45a0b1fa26e55453965b6060667a86ef4d099/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b45a0b1fa26e55453965b6060667a86ef4d099/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=e7b45a0b1fa26e55453965b6060667a86ef4d099", "patch": "@@ -37,7 +37,7 @@ use visit::{self, FnKind, Visitor};\n use parse::ParseSess;\n use symbol::{keywords, Symbol};\n \n-use std::{env, path};\n+use std::{env};\n \n macro_rules! set {\n     // The const_fn feature also enables the min_const_fn feature, because `min_const_fn` allows\n@@ -406,9 +406,6 @@ declare_features! (\n     // Resolve absolute paths as paths from other crates\n     (active, extern_absolute_paths, \"1.24.0\", Some(44660), Some(Edition::Edition2018)),\n \n-    // `foo.rs` as an alternative to `foo/mod.rs`\n-    (active, non_modrs_mods, \"1.24.0\", Some(44660), Some(Edition::Edition2018)),\n-\n     // `extern` in paths\n     (active, extern_in_paths, \"1.23.0\", Some(44660), None),\n \n@@ -660,6 +657,8 @@ declare_features! (\n     (accepted, repr_transparent, \"1.28.0\", Some(43036), None),\n     // Defining procedural macros in `proc-macro` crates\n     (accepted, proc_macro, \"1.29.0\", Some(38356), None),\n+    // `foo.rs` as an alternative to `foo/mod.rs`\n+    (accepted, non_modrs_mods, \"1.30.0\", Some(44660), None),\n     // Allows use of the :vis macro fragment specifier\n     (accepted, macro_vis_matcher, \"1.30.0\", Some(41022), None),\n     // Allows importing and reexporting macros with `use`,\n@@ -1498,31 +1497,6 @@ impl<'a> PostExpansionVisitor<'a> {\n     }\n }\n \n-impl<'a> PostExpansionVisitor<'a> {\n-    fn whole_crate_feature_gates(&mut self, _krate: &ast::Crate) {\n-        for &(ident, span) in &*self.context.parse_sess.non_modrs_mods.borrow() {\n-            if !span.allows_unstable() {\n-                let cx = &self.context;\n-                let level = GateStrength::Hard;\n-                let has_feature = cx.features.non_modrs_mods;\n-                let name = \"non_modrs_mods\";\n-                debug!(\"gate_feature(feature = {:?}, span = {:?}); has? {}\",\n-                        name, span, has_feature);\n-\n-                if !has_feature && !span.allows_unstable() {\n-                    leveled_feature_err(\n-                        cx.parse_sess, name, span, GateIssue::Language,\n-                        \"mod statements in non-mod.rs files are unstable\", level\n-                    )\n-                    .help(&format!(\"on stable builds, rename this file to {}{}mod.rs\",\n-                                   ident, path::MAIN_SEPARATOR))\n-                    .emit();\n-                }\n-            }\n-        }\n-    }\n-}\n-\n impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n     fn visit_attribute(&mut self, attr: &ast::Attribute) {\n         if !attr.span.allows_unstable() {\n@@ -2092,7 +2066,6 @@ pub fn check_crate(krate: &ast::Crate,\n     };\n \n     let visitor = &mut PostExpansionVisitor { context: &ctx };\n-    visitor.whole_crate_feature_gates(krate);\n     visit::walk_crate(visitor, krate);\n }\n "}, {"sha": "ff93fddf9b366e9c75103c793c5539e57c582d82", "filename": "src/test/ui/directory_ownership/mod_file_not_owning.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmod_file_not_owning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmod_file_not_owning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmod_file_not_owning.rs?ref=de2c0f95e85d5f5140821805dfa76ec4e9867f50", "patch": "@@ -1,15 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// error-pattern: mod statements in non-mod.rs files are unstable\n-\n-mod mod_file_not_owning_aux1;\n-\n-fn main() {}"}, {"sha": "e2937573997fc941a313120c7a324f58b87b921f", "filename": "src/test/ui/directory_ownership/mod_file_not_owning.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmod_file_not_owning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmod_file_not_owning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmod_file_not_owning.stderr?ref=de2c0f95e85d5f5140821805dfa76ec4e9867f50", "patch": "@@ -1,15 +0,0 @@\n-error[E0658]: mod statements in non-mod.rs files are unstable (see issue #44660)\n-  --> $DIR/mod_file_not_owning_aux1.rs:14:17\n-   |\n-LL |     () => { mod mod_file_not_owning_aux2; }\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n-LL | }\n-LL | m!();\n-   | ----- in this macro invocation\n-   |\n-   = help: add #![feature(non_modrs_mods)] to the crate attributes to enable\n-   = help: on stable builds, rename this file to mod_file_not_owning_aux1/mod.rs\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "0cffb7cc9e51732c2f42766eaedf64be616fa91d", "filename": "src/test/ui/directory_ownership/unowned_mod_with_path.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fdirectory_ownership%2Funowned_mod_with_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fdirectory_ownership%2Funowned_mod_with_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdirectory_ownership%2Funowned_mod_with_path.rs?ref=de2c0f95e85d5f5140821805dfa76ec4e9867f50", "patch": "@@ -1,15 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// error-pattern: mod statements in non-mod.rs files are unstable\n-\n-// This is not a directory owner since the file name is not \"mod.rs\".\n-#[path = \"mod_file_not_owning_aux1.rs\"]\n-mod foo;"}, {"sha": "0c0b428143416e76ad597345a3f468bd61aecefa", "filename": "src/test/ui/directory_ownership/unowned_mod_with_path.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fdirectory_ownership%2Funowned_mod_with_path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fdirectory_ownership%2Funowned_mod_with_path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdirectory_ownership%2Funowned_mod_with_path.stderr?ref=de2c0f95e85d5f5140821805dfa76ec4e9867f50", "patch": "@@ -1,15 +0,0 @@\n-error[E0658]: mod statements in non-mod.rs files are unstable (see issue #44660)\n-  --> $DIR/mod_file_not_owning_aux1.rs:14:17\n-   |\n-LL |     () => { mod mod_file_not_owning_aux2; }\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n-LL | }\n-LL | m!();\n-   | ----- in this macro invocation\n-   |\n-   = help: add #![feature(non_modrs_mods)] to the crate attributes to enable\n-   = help: on stable builds, rename this file to foo/mod.rs\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "9dc85f4d3f92d7948f11bc3eacd9223484033a91", "filename": "src/test/ui/non_modrs_mods/non_modrs_mods.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.rs?ref=de2c0f95e85d5f5140821805dfa76ec4e9867f50", "patch": "@@ -1,28 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-//\n-// Tests the formatting of the feature-gate errors for non_modrs_mods\n-//\n-// gate-test-non_modrs_mods\n-// ignore-windows\n-// ignore-pretty issue #37195\n-pub mod modrs_mod;\n-pub mod foors_mod;\n-\n-#[path = \"some_crazy_attr_mod_dir/arbitrary_name.rs\"]\n-pub mod attr_mod;\n-\n-pub fn main() {\n-    modrs_mod::inner_modrs_mod::innest::foo();\n-    modrs_mod::inner_foors_mod::innest::foo();\n-    foors_mod::inner_modrs_mod::innest::foo();\n-    foors_mod::inner_foors_mod::innest::foo();\n-    attr_mod::inner_modrs_mod::innest::foo();\n-}"}, {"sha": "c45ab734fd57903fb078e51fa4bc7d6edec92dc6", "filename": "src/test/ui/non_modrs_mods/non_modrs_mods.stderr", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.stderr?ref=de2c0f95e85d5f5140821805dfa76ec4e9867f50", "patch": "@@ -1,39 +0,0 @@\n-error[E0658]: mod statements in non-mod.rs files are unstable (see issue #44660)\n-  --> $DIR/modrs_mod/inner_foors_mod.rs:11:9\n-   |\n-LL | pub mod innest;\n-   |         ^^^^^^\n-   |\n-   = help: add #![feature(non_modrs_mods)] to the crate attributes to enable\n-   = help: on stable builds, rename this file to inner_foors_mod/mod.rs\n-\n-error[E0658]: mod statements in non-mod.rs files are unstable (see issue #44660)\n-  --> $DIR/foors_mod.rs:13:9\n-   |\n-LL | pub mod inner_modrs_mod;\n-   |         ^^^^^^^^^^^^^^^\n-   |\n-   = help: add #![feature(non_modrs_mods)] to the crate attributes to enable\n-   = help: on stable builds, rename this file to foors_mod/mod.rs\n-\n-error[E0658]: mod statements in non-mod.rs files are unstable (see issue #44660)\n-  --> $DIR/foors_mod.rs:14:9\n-   |\n-LL | pub mod inner_foors_mod;\n-   |         ^^^^^^^^^^^^^^^\n-   |\n-   = help: add #![feature(non_modrs_mods)] to the crate attributes to enable\n-   = help: on stable builds, rename this file to foors_mod/mod.rs\n-\n-error[E0658]: mod statements in non-mod.rs files are unstable (see issue #44660)\n-  --> $DIR/foors_mod/inner_foors_mod.rs:11:9\n-   |\n-LL | pub mod innest;\n-   |         ^^^^^^\n-   |\n-   = help: add #![feature(non_modrs_mods)] to the crate attributes to enable\n-   = help: on stable builds, rename this file to inner_foors_mod/mod.rs\n-\n-error: aborting due to 4 previous errors\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "a9b240be804e3402806a535fca62302d67be3aee", "filename": "src/test/ui/run-pass/non_modrs_mods/non_modrs_mods.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Frun-pass%2Fnon_modrs_mods%2Fnon_modrs_mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2c0f95e85d5f5140821805dfa76ec4e9867f50/src%2Ftest%2Fui%2Frun-pass%2Fnon_modrs_mods%2Fnon_modrs_mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fnon_modrs_mods%2Fnon_modrs_mods.rs?ref=de2c0f95e85d5f5140821805dfa76ec4e9867f50", "patch": "@@ -1,28 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-pass\n-//\n-// ignore-pretty issue #37195\n-#![feature(non_modrs_mods)]\n-\n-pub mod modrs_mod;\n-pub mod foors_mod;\n-\n-#[path = \"some_crazy_attr_mod_dir/arbitrary_name.rs\"]\n-pub mod attr_mod;\n-\n-pub fn main() {\n-    modrs_mod::inner_modrs_mod::innest::foo();\n-    modrs_mod::inner_foors_mod::innest::foo();\n-    foors_mod::inner_modrs_mod::innest::foo();\n-    foors_mod::inner_foors_mod::innest::foo();\n-    attr_mod::inner_modrs_mod::innest::foo();\n-}"}]}