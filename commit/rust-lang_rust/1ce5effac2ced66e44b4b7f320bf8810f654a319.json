{"sha": "1ce5effac2ced66e44b4b7f320bf8810f654a319", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZTVlZmZhYzJjZWQ2NmU0NGI0YjdmMzIwYmY4ODEwZjY1NGEzMTk=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-08-05T09:56:59Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-08-07T13:17:52Z"}, "message": "testsuite: add explanation to a Note, and remove duplicated code.\n\nFixes #7302.", "tree": {"sha": "7fc553c4bbfd0fe5bc2271bb569c500325993b4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fc553c4bbfd0fe5bc2271bb569c500325993b4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ce5effac2ced66e44b4b7f320bf8810f654a319", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ce5effac2ced66e44b4b7f320bf8810f654a319", "html_url": "https://github.com/rust-lang/rust/commit/1ce5effac2ced66e44b4b7f320bf8810f654a319", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ce5effac2ced66e44b4b7f320bf8810f654a319/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5fb4c4359de527c6807b64cd7855c9fb1b3176a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5fb4c4359de527c6807b64cd7855c9fb1b3176a", "html_url": "https://github.com/rust-lang/rust/commit/e5fb4c4359de527c6807b64cd7855c9fb1b3176a"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "46819027dad649719e9ab9da908260a5800ab863", "filename": "src/test/run-pass/rcvr-borrowed-to-region.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1ce5effac2ced66e44b4b7f320bf8810f654a319/src%2Ftest%2Frun-pass%2Frcvr-borrowed-to-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ce5effac2ced66e44b4b7f320bf8810f654a319/src%2Ftest%2Frun-pass%2Frcvr-borrowed-to-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frcvr-borrowed-to-region.rs?ref=1ce5effac2ced66e44b4b7f320bf8810f654a319", "patch": "@@ -12,7 +12,9 @@ trait get {\n     fn get(self) -> int;\n }\n \n-// FIXME #7302: Note: impl on a slice\n+// Note: impl on a slice; we're checking that the pointers below\n+// correctly get borrowed to `&`. (similar to impling for `int`, with\n+// `&self` instead of `self`.)\n impl<'self> get for &'self int {\n     fn get(self) -> int {\n         return *self;\n@@ -34,11 +36,6 @@ pub fn main() {\n     info!(\"y=%d\", y);\n     assert_eq!(y, 6);\n \n-    let x = ~6;\n-    let y = x.get();\n-    info!(\"y=%d\", y);\n-    assert_eq!(y, 6);\n-\n     let x = &6;\n     let y = x.get();\n     info!(\"y=%d\", y);"}]}