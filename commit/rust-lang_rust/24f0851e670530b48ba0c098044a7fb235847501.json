{"sha": "24f0851e670530b48ba0c098044a7fb235847501", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ZjA4NTFlNjcwNTMwYjQ4YmEwYzA5ODA0NGE3ZmIyMzU4NDc1MDE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-01T15:43:09Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-01T15:43:09Z"}, "message": "require that header lines begin with `//`", "tree": {"sha": "38fdbbdfad2277e07a71992e80504aa125a40a90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38fdbbdfad2277e07a71992e80504aa125a40a90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24f0851e670530b48ba0c098044a7fb235847501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24f0851e670530b48ba0c098044a7fb235847501", "html_url": "https://github.com/rust-lang/rust/commit/24f0851e670530b48ba0c098044a7fb235847501", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24f0851e670530b48ba0c098044a7fb235847501/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a52494f7e259f49a3be176dc6fb151c755d6686", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a52494f7e259f49a3be176dc6fb151c755d6686", "html_url": "https://github.com/rust-lang/rust/commit/0a52494f7e259f49a3be176dc6fb151c755d6686"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "d8d0c383d8e0cc7f9a464159c60a76ff41e88e39", "filename": "src/compiletest/header.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/24f0851e670530b48ba0c098044a7fb235847501/src%2Fcompiletest%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24f0851e670530b48ba0c098044a7fb235847501/src%2Fcompiletest%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fheader.rs?ref=24f0851e670530b48ba0c098044a7fb235847501", "patch": "@@ -252,11 +252,12 @@ fn iter_header(testfile: &Path, it: &mut FnMut(&str) -> bool) -> bool {\n         // module or function. This doesn't seem to be an optimization\n         // with a warm page cache. Maybe with a cold one.\n         let ln = ln.unwrap();\n+        let ln = ln.trim();\n         if ln.starts_with(\"fn\") ||\n                 ln.starts_with(\"mod\") {\n             return true;\n-        } else {\n-            if !(it(ln.trim())) {\n+        } else if ln.starts_with(\"//\") {\n+            if !it(&ln[2..]) {\n                 return false;\n             }\n         }"}]}