{"sha": "cd51c7cb73579ff20996746113090e8cc76b8005", "node_id": "C_kwDOAAsO6NoAKGNkNTFjN2NiNzM1NzlmZjIwOTk2NzQ2MTEzMDkwZThjYzc2YjgwMDU", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-03-31T19:18:44Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-05-08T12:37:15Z"}, "message": "Test `expect` attribute for tool lints, rustc edition (RFC 2383)", "tree": {"sha": "65dd9aad0a74cee76aa2288971f53c809108f5a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65dd9aad0a74cee76aa2288971f53c809108f5a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd51c7cb73579ff20996746113090e8cc76b8005", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsfZNmu/fmIv8KDcv/Ny/Ka9k1gEFAmJ3uXsACgkQ/Ny/Ka9k\n1gE5UBAAoK7pOq9W/bf8qZnVMMcxyTYNklOjKFI9ynV9uH2atwpOlOtYjIVE+mT+\n7cR2S+KmamyqULnBxJCU8NWPHaQ5icbkj27cfiih/+IZSJnOnIb9leKLIA7OuloL\nRBaIWwmJaddxQ7VeVZjxgJ2ZIXRZ6aPDyAPE/2VyeDTqvX9fiE3fo7GhEhZyjx7+\n7+n296AwI+bXVDams2hUqAj04sQkLyfti9KLDSwV5Yzlqyuxa3+A8zspCR065d98\nfNMy5/pmIXRJEWnbMKuqs1QM9tjsSts1mdY2K4qdC4IFD1lMzs3/sMLRUkvmDl9P\nUxhKnQ5PMyysJyjhiqH4g03slSDAF07JjXv638zCLJoOwOqdTmx7X6wW/hHjpEDx\nEAyaSXUsgbzgJZbgKvZWbZ0okXfu+OskeGrIDKbScUErovfILVHtc/YYqa0Hpi3q\n9JPbitCf14SA7+tNVxEkhY0f0Pn8E5hgekLKx9lLHE8NLoLmi46sVqxLDrm6ZII0\nxF89PQFsuKnJkzIzdvPohEQHr16gcEMsyfZ5bWQXP4rTxOZHvH3uNYMKJk55/HXK\nUxKwxpUGBxgBn6H0teAYfWFsR60oetNJGWCBFOhcrWo73UqeU+5dVgVSd1zb/t6A\n1RJqn/K9ulQqtvTkLEMJ6KZb3f0nWA/UB5ix9kD1LtFrtkJxVzA=\n=FbvV\n-----END PGP SIGNATURE-----", "payload": "tree 65dd9aad0a74cee76aa2288971f53c809108f5a4\nparent 2c5e85249f8b10b5fb0caf608d8b2537620285c6\nauthor xFrednet <xFrednet@gmail.com> 1648754324 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1652013435 +0200\n\nTest `expect` attribute for tool lints, rustc edition (RFC 2383)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd51c7cb73579ff20996746113090e8cc76b8005", "html_url": "https://github.com/rust-lang/rust/commit/cd51c7cb73579ff20996746113090e8cc76b8005", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd51c7cb73579ff20996746113090e8cc76b8005/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c5e85249f8b10b5fb0caf608d8b2537620285c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c5e85249f8b10b5fb0caf608d8b2537620285c6", "html_url": "https://github.com/rust-lang/rust/commit/2c5e85249f8b10b5fb0caf608d8b2537620285c6"}], "stats": {"total": 171, "additions": 171, "deletions": 0}, "files": [{"sha": "f80fe88cbb97e2e21611cda8071b56387d9c397f", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_tool_lint_rfc_2383.rs", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/rust-lang/rust/blob/cd51c7cb73579ff20996746113090e8cc76b8005/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_tool_lint_rfc_2383.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd51c7cb73579ff20996746113090e8cc76b8005/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_tool_lint_rfc_2383.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_tool_lint_rfc_2383.rs?ref=cd51c7cb73579ff20996746113090e8cc76b8005", "patch": "@@ -0,0 +1,155 @@\n+// check-pass\n+#![feature(lint_reasons)]\n+\n+//! This file tests the `#[expect]` attribute implementation for tool lints. The same\n+//! file is used to test clippy and rustdoc. Any changes to this file should be synced\n+//! to the other test files.\n+//!\n+//! Expectations:\n+//! * rustc: only rustc lint expectations are emitted\n+//! * clippy: rustc and Clippy's expectations are emitted\n+//! * rustdoc: only rustdoc lint expectations are emitted\n+//!\n+//! This test can't cover every lint from Clippy, rustdoc and potentially other\n+//! tools that will be developed. This therefore only tests a small subset of lints\n+\n+#![expect(rustdoc::missing_crate_level_docs)]\n+\n+mod rustc_ok {\n+    //! See <https://doc.rust-lang.org/rustc/lints/index.html>\n+\n+    #[expect(dead_code)]\n+    pub fn rustc_lints() {\n+        let x = 42.0;\n+\n+        #[expect(illegal_floating_point_literal_pattern)]\n+        match x {\n+            5.0 => {}\n+            6.0 => {}\n+            _ => {}\n+        }\n+    }\n+}\n+\n+mod rustc_warn {\n+    //! See <https://doc.rust-lang.org/rustc/lints/index.html>\n+\n+    #[expect(dead_code)]\n+    //~^ WARNING this lint expectation is unfulfilled [unfulfilled_lint_expectations]\n+    //~| NOTE `#[warn(unfulfilled_lint_expectations)]` on by default\n+    pub fn rustc_lints() {\n+        let x = 42;\n+\n+        #[expect(illegal_floating_point_literal_pattern)]\n+        //~^ WARNING this lint expectation is unfulfilled [unfulfilled_lint_expectations]\n+        match x {\n+            5 => {}\n+            6 => {}\n+            _ => {}\n+        }\n+    }\n+}\n+\n+pub mod rustdoc_ok {\n+    //! See <https://doc.rust-lang.org/rustdoc/lints.html>\n+\n+    #[expect(rustdoc::broken_intra_doc_links)]\n+    /// I want to link to [`Nonexistent`] but it doesn't exist!\n+    pub fn foo() {}\n+\n+    #[expect(rustdoc::invalid_html_tags)]\n+    /// <h1>\n+    pub fn bar() {}\n+\n+    #[expect(rustdoc::bare_urls)]\n+    /// http://example.org\n+    pub fn baz() {}\n+}\n+\n+pub mod rustdoc_warn {\n+    //! See <https://doc.rust-lang.org/rustdoc/lints.html>\n+\n+    #[expect(rustdoc::broken_intra_doc_links)]\n+    /// I want to link to [`bar`] but it doesn't exist!\n+    pub fn foo() {}\n+\n+    #[expect(rustdoc::invalid_html_tags)]\n+    /// <h1></h1>\n+    pub fn bar() {}\n+\n+    #[expect(rustdoc::bare_urls)]\n+    /// <http://example.org>\n+    pub fn baz() {}\n+}\n+\n+mod clippy_ok {\n+    //! See <https://rust-lang.github.io/rust-clippy/master/index.html>\n+\n+    #[expect(clippy::almost_swapped)]\n+    fn foo() {\n+        let mut a = 0;\n+        let mut b = 9;\n+        a = b;\n+        b = a;\n+    }\n+\n+    #[expect(clippy::bytes_nth)]\n+    fn bar() {\n+        let _ = \"Hello\".bytes().nth(3);\n+    }\n+\n+    #[expect(clippy::if_same_then_else)]\n+    fn baz() {\n+        let _ = if true {\n+            42\n+        } else {\n+            42\n+        };\n+    }\n+\n+    #[expect(clippy::logic_bug)]\n+    fn burger() {\n+        let a = false;\n+        let b = true;\n+\n+        if a && b || a {}\n+    }\n+}\n+\n+mod clippy_warn {\n+    //! See <https://rust-lang.github.io/rust-clippy/master/index.html>\n+\n+    #[expect(clippy::almost_swapped)]\n+    fn foo() {\n+        let mut a = 0;\n+        let mut b = 9;\n+        a = b;\n+    }\n+\n+    #[expect(clippy::bytes_nth)]\n+    fn bar() {\n+        let _ = \"Hello\".as_bytes().get(3);\n+    }\n+\n+    #[expect(clippy::if_same_then_else)]\n+    fn baz() {\n+        let _ = if true {\n+            33\n+        } else {\n+            42\n+        };\n+    }\n+\n+    #[expect(clippy::logic_bug)]\n+    fn burger() {\n+        let a = false;\n+        let b = true;\n+        let c = false;\n+\n+        if a && b || c {}\n+    }\n+}\n+\n+fn main() {\n+    rustc_warn::rustc_lints();\n+}"}, {"sha": "6d49e7543dc59d606a0dd6a61785768a327cb909", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_tool_lint_rfc_2383.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cd51c7cb73579ff20996746113090e8cc76b8005/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_tool_lint_rfc_2383.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd51c7cb73579ff20996746113090e8cc76b8005/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_tool_lint_rfc_2383.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_tool_lint_rfc_2383.stderr?ref=cd51c7cb73579ff20996746113090e8cc76b8005", "patch": "@@ -0,0 +1,16 @@\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/expect_tool_lint_rfc_2383.rs:37:14\n+   |\n+LL |     #[expect(dead_code)]\n+   |              ^^^^^^^^^\n+   |\n+   = note: `#[warn(unfulfilled_lint_expectations)]` on by default\n+\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/expect_tool_lint_rfc_2383.rs:43:18\n+   |\n+LL |         #[expect(illegal_floating_point_literal_pattern)]\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: 2 warnings emitted\n+"}]}