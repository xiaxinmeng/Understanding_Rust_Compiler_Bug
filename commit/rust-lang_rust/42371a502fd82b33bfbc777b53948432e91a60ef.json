{"sha": "42371a502fd82b33bfbc777b53948432e91a60ef", "node_id": "C_kwDOAAsO6NoAKDQyMzcxYTUwMmZkODJiMzNiZmJjNzc3YjUzOTQ4NDMyZTkxYTYwZWY", "commit": {"author": {"name": "Connor Fogarty", "email": "connorflynnfogarty@gmail.com", "date": "2022-02-03T00:50:27Z"}, "committer": {"name": "Connor Fogarty", "email": "connorflynnfogarty@gmail.com", "date": "2022-02-03T00:50:27Z"}, "message": "Propagate `use_polonius` flag to liveness module", "tree": {"sha": "db2ef0914bb07f8e6c659b3a08cc1a354715a44b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db2ef0914bb07f8e6c659b3a08cc1a354715a44b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42371a502fd82b33bfbc777b53948432e91a60ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42371a502fd82b33bfbc777b53948432e91a60ef", "html_url": "https://github.com/rust-lang/rust/commit/42371a502fd82b33bfbc777b53948432e91a60ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42371a502fd82b33bfbc777b53948432e91a60ef/comments", "author": {"login": "connorff", "id": 40175891, "node_id": "MDQ6VXNlcjQwMTc1ODkx", "avatar_url": "https://avatars.githubusercontent.com/u/40175891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/connorff", "html_url": "https://github.com/connorff", "followers_url": "https://api.github.com/users/connorff/followers", "following_url": "https://api.github.com/users/connorff/following{/other_user}", "gists_url": "https://api.github.com/users/connorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/connorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/connorff/subscriptions", "organizations_url": "https://api.github.com/users/connorff/orgs", "repos_url": "https://api.github.com/users/connorff/repos", "events_url": "https://api.github.com/users/connorff/events{/privacy}", "received_events_url": "https://api.github.com/users/connorff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "connorff", "id": 40175891, "node_id": "MDQ6VXNlcjQwMTc1ODkx", "avatar_url": "https://avatars.githubusercontent.com/u/40175891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/connorff", "html_url": "https://github.com/connorff", "followers_url": "https://api.github.com/users/connorff/followers", "following_url": "https://api.github.com/users/connorff/following{/other_user}", "gists_url": "https://api.github.com/users/connorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/connorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/connorff/subscriptions", "organizations_url": "https://api.github.com/users/connorff/orgs", "repos_url": "https://api.github.com/users/connorff/repos", "events_url": "https://api.github.com/users/connorff/events{/privacy}", "received_events_url": "https://api.github.com/users/connorff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cd14d2f561a61e9838546f133afcf06038d761b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cd14d2f561a61e9838546f133afcf06038d761b", "html_url": "https://github.com/rust-lang/rust/commit/7cd14d2f561a61e9838546f133afcf06038d761b"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "bf486ffe4bc8597003e52e1c4b0bfa8bbdba5ec8", "filename": "compiler/rustc_borrowck/src/nll.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42371a502fd82b33bfbc777b53948432e91a60ef/compiler%2Frustc_borrowck%2Fsrc%2Fnll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42371a502fd82b33bfbc777b53948432e91a60ef/compiler%2Frustc_borrowck%2Fsrc%2Fnll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fnll.rs?ref=42371a502fd82b33bfbc777b53948432e91a60ef", "patch": "@@ -189,6 +189,7 @@ pub(crate) fn compute_regions<'cx, 'tcx>(\n             move_data,\n             elements,\n             upvars,\n+            use_polonius,\n         );\n \n     if let Some(all_facts) = &mut all_facts {"}, {"sha": "ac8670a513820f108bd62f29321c131904e90de0", "filename": "compiler/rustc_borrowck/src/type_check/liveness/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/42371a502fd82b33bfbc777b53948432e91a60ef/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fliveness%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42371a502fd82b33bfbc777b53948432e91a60ef/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fliveness%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fliveness%2Fmod.rs?ref=42371a502fd82b33bfbc777b53948432e91a60ef", "patch": "@@ -37,6 +37,7 @@ pub(super) fn generate<'mir, 'tcx>(\n     flow_inits: &mut ResultsCursor<'mir, 'tcx, MaybeInitializedPlaces<'mir, 'tcx>>,\n     move_data: &MoveData<'tcx>,\n     location_table: &LocationTable,\n+    use_polonius: bool,\n ) {\n     debug!(\"liveness::generate\");\n \n@@ -46,7 +47,7 @@ pub(super) fn generate<'mir, 'tcx>(\n         &typeck.borrowck_context.constraints.outlives_constraints,\n     );\n     let live_locals = compute_live_locals(typeck.tcx(), &free_regions, &body);\n-    let facts_enabled = AllFacts::enabled(typeck.tcx());\n+    let facts_enabled = use_polonius || AllFacts::enabled(typeck.tcx());\n \n     let polonius_drop_used = if facts_enabled {\n         let mut drop_used = Vec::new();"}, {"sha": "42ff83036e0478e2576b7216cacf15f38b750e26", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/42371a502fd82b33bfbc777b53948432e91a60ef/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42371a502fd82b33bfbc777b53948432e91a60ef/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=42371a502fd82b33bfbc777b53948432e91a60ef", "patch": "@@ -136,6 +136,7 @@ pub(crate) fn type_check<'mir, 'tcx>(\n     move_data: &MoveData<'tcx>,\n     elements: &Rc<RegionValueElements>,\n     upvars: &[Upvar<'tcx>],\n+    use_polonius: bool,\n ) -> MirTypeckResults<'tcx> {\n     let implicit_region_bound = infcx.tcx.mk_region(ty::ReVar(universal_regions.fr_fn_body));\n     let mut universe_causes = FxHashMap::default();\n@@ -187,7 +188,15 @@ pub(crate) fn type_check<'mir, 'tcx>(\n         &mut borrowck_context,\n         |mut cx| {\n             cx.equate_inputs_and_outputs(&body, universal_regions, &normalized_inputs_and_output);\n-            liveness::generate(&mut cx, body, elements, flow_inits, move_data, location_table);\n+            liveness::generate(\n+                &mut cx,\n+                body,\n+                elements,\n+                flow_inits,\n+                move_data,\n+                location_table,\n+                use_polonius,\n+            );\n \n             translate_outlives_facts(&mut cx);\n             let opaque_type_values = mem::take(&mut infcx.inner.borrow_mut().opaque_types);"}]}