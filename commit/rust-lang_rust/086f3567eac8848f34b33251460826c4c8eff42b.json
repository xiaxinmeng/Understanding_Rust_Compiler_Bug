{"sha": "086f3567eac8848f34b33251460826c4c8eff42b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NmYzNTY3ZWFjODg0OGYzNGIzMzI1MTQ2MDgyNmM0YzhlZmY0MmI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-12T17:23:24Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-12T17:23:24Z"}, "message": "Rustup to rustc 1.31.0-nightly (77af31408 2018-10-11)", "tree": {"sha": "b95093ba7f096f5d647773d965f1712e5c0b1a64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b95093ba7f096f5d647773d965f1712e5c0b1a64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/086f3567eac8848f34b33251460826c4c8eff42b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/086f3567eac8848f34b33251460826c4c8eff42b", "html_url": "https://github.com/rust-lang/rust/commit/086f3567eac8848f34b33251460826c4c8eff42b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/086f3567eac8848f34b33251460826c4c8eff42b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b9c1e91492d37beda4735229de6f9571ccacec7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b9c1e91492d37beda4735229de6f9571ccacec7", "html_url": "https://github.com/rust-lang/rust/commit/2b9c1e91492d37beda4735229de6f9571ccacec7"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "53ef5368b2a1391c013907f6550f90711c64753a", "filename": "src/constant.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/086f3567eac8848f34b33251460826c4c8eff42b/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086f3567eac8848f34b33251460826c4c8eff42b/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=086f3567eac8848f34b33251460826c4c8eff42b", "patch": "@@ -1,3 +1,4 @@\n+use std::borrow::Cow;\n use cranelift_module::*;\n use crate::prelude::*;\n use crate::rustc::mir::interpret::{\n@@ -225,7 +226,7 @@ fn define_all_allocs<'a, 'tcx: 'a, B: Backend + 'a>(\n \n         data_ctx.define(alloc.bytes.to_vec().into_boxed_slice());\n \n-        for &(offset, reloc) in alloc.relocations.iter() {\n+        for &(offset, (_tag, reloc)) in alloc.relocations.iter() {\n             let reloc_offset = {\n                 let endianness = tcx.data_layout.endian;\n                 let offset = offset.bytes() as usize;\n@@ -279,7 +280,9 @@ struct TransPlaceInterpreter;\n impl<'a, 'mir, 'tcx> Machine<'a, 'mir, 'tcx> for TransPlaceInterpreter {\n     type MemoryData = ();\n     type MemoryKinds = ();\n-    const MUT_STATIC_KIND: Option<()> = None;\n+    type MemoryMap = FxHashMap<AllocId, (MemoryKind<()>, Allocation<()>)>;\n+    type PointerTag = ();\n+    const STATIC_KIND: Option<()> = None;\n     const ENFORCE_VALIDITY: bool = true;\n \n     fn before_terminator(_: &mut EvalContext<'a, 'mir, 'tcx, Self>) -> EvalResult<'tcx> {\n@@ -308,10 +311,14 @@ impl<'a, 'mir, 'tcx> Machine<'a, 'mir, 'tcx> for TransPlaceInterpreter {\n     fn find_foreign_static(\n         _: crate::rustc::ty::query::TyCtxtAt<'a, 'tcx, 'tcx>,\n         _: DefId,\n-    ) -> EvalResult<'tcx, &'tcx Allocation> {\n+    ) -> EvalResult<'tcx, Cow<'tcx, Allocation>> {\n         panic!();\n     }\n \n+    fn static_with_default_tag(alloc: &Allocation) -> Cow<Allocation<()>> {\n+        Cow::Borrowed(alloc)\n+    }\n+\n     fn ptr_op(\n         _: &EvalContext<'a, 'mir, 'tcx, Self>,\n         _: mir::BinOp,"}]}