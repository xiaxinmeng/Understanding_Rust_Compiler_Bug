{"sha": "db357a6e3be7b741a710a926d3ddeed79fc40482", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMzU3YTZlM2JlN2I3NDFhNzEwYTkyNmQzZGRlZWQ3OWZjNDA0ODI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-30T08:31:25Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-12-01T17:53:25Z"}, "message": "rustc_plugin: Remove support for adding plugins from command line", "tree": {"sha": "a3c77e5480bc39b6605e7f69c154f0414acd0f55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3c77e5480bc39b6605e7f69c154f0414acd0f55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db357a6e3be7b741a710a926d3ddeed79fc40482", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db357a6e3be7b741a710a926d3ddeed79fc40482", "html_url": "https://github.com/rust-lang/rust/commit/db357a6e3be7b741a710a926d3ddeed79fc40482", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db357a6e3be7b741a710a926d3ddeed79fc40482/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55ba05bd0dd0d7f8e8b288e4a69fc426619bc806", "url": "https://api.github.com/repos/rust-lang/rust/commits/55ba05bd0dd0d7f8e8b288e4a69fc426619bc806", "html_url": "https://github.com/rust-lang/rust/commit/55ba05bd0dd0d7f8e8b288e4a69fc426619bc806"}], "stats": {"total": 44, "additions": 17, "deletions": 27}, "files": [{"sha": "7f72154e42c61eb0f7fcb447d12e04a295a4c33a", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=db357a6e3be7b741a710a926d3ddeed79fc40482", "patch": "@@ -47,8 +47,7 @@ use rustc_error_codes::*;\n /// This is basically the subset of `Context` that we can\n /// build early in the compile pipeline.\n pub struct LintStore {\n-    /// Registered lints. The bool is true if the lint was\n-    /// added by a plugin.\n+    /// Registered lints.\n     lints: Vec<&'static Lint>,\n \n     /// Constructor functions for each variety of lint pass."}, {"sha": "d2ac5436cc8025e3e889462f593151fe1a1b620f", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=db357a6e3be7b741a710a926d3ddeed79fc40482", "patch": "@@ -1364,8 +1364,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"enable queries of the dependency graph for regression testing\"),\n     no_analysis: bool = (false, parse_bool, [UNTRACKED],\n         \"parse and expand the source, but run no analysis\"),\n-    extra_plugins: Vec<String> = (Vec::new(), parse_list, [TRACKED],\n-        \"load extra plugins\"),\n     unstable_options: bool = (false, parse_bool, [UNTRACKED],\n         \"adds unstable command line options to rustc interface\"),\n     force_overflow_checks: Option<bool> = (None, parse_opt_bool, [TRACKED],"}, {"sha": "e752a5eab4e9ecdead703b958158de2bc4e9a87b", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=db357a6e3be7b741a710a926d3ddeed79fc40482", "patch": "@@ -106,8 +106,7 @@ declare_box_region_type!(\n     (&mut Resolver<'_>) -> (Result<ast::Crate>, ResolverOutputs)\n );\n \n-/// Runs the \"early phases\" of the compiler: initial `cfg` processing,\n-/// loading compiler plugins (including those from `addl_plugins`),\n+/// Runs the \"early phases\" of the compiler: initial `cfg` processing, loading compiler plugins,\n /// syntax expansion, secondary `cfg` expansion, synthesis of a test\n /// harness if one is to be provided, injection of a dependency on the\n /// standard library and prelude, and name resolution.\n@@ -210,12 +209,7 @@ pub fn register_plugins<'a>(\n     });\n \n     let registrars = time(sess, \"plugin loading\", || {\n-        plugin::load::load_plugins(\n-            sess,\n-            metadata_loader,\n-            &krate,\n-            Some(sess.opts.debugging_opts.extra_plugins.clone()),\n-        )\n+        plugin::load::load_plugins(sess, metadata_loader, &krate)\n     });\n \n     let mut lint_store = rustc_lint::new_lint_store("}, {"sha": "4c630b56cb4ce36a1b02bac73b31b57b673b1a4f", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=db357a6e3be7b741a710a926d3ddeed79fc40482", "patch": "@@ -650,10 +650,6 @@ fn test_debugging_options_tracking_hash() {\n     opts.debugging_opts.continue_parse_after_error = true;\n     assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());\n \n-    opts = reference.clone();\n-    opts.debugging_opts.extra_plugins = vec![String::from(\"plugin1\"), String::from(\"plugin2\")];\n-    assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());\n-\n     opts = reference.clone();\n     opts.debugging_opts.force_overflow_checks = Some(true);\n     assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());"}, {"sha": "6f2af6895e4d9f64a44e2642d1fd48b77fa3bffb", "filename": "src/librustc_plugin_impl/load.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Flibrustc_plugin_impl%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Flibrustc_plugin_impl%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin_impl%2Fload.rs?ref=db357a6e3be7b741a710a926d3ddeed79fc40482", "patch": "@@ -28,10 +28,8 @@ fn call_malformed_plugin_attribute(sess: &Session, span: Span) {\n /// Read plugin metadata and dynamically load registrar functions.\n pub fn load_plugins(sess: &Session,\n                     metadata_loader: &dyn MetadataLoader,\n-                    krate: &Crate,\n-                    addl_plugins: Option<Vec<String>>) -> Vec<PluginRegistrarFn> {\n+                    krate: &Crate) -> Vec<PluginRegistrarFn> {\n     let mut plugins = Vec::new();\n-    let mut load_plugin = |ident| load_plugin(&mut plugins, sess, metadata_loader, ident);\n \n     for attr in &krate.attrs {\n         if !attr.check_name(sym::plugin) {\n@@ -40,16 +38,13 @@ pub fn load_plugins(sess: &Session,\n \n         for plugin in attr.meta_item_list().unwrap_or_default() {\n             match plugin.ident() {\n-                Some(ident) if plugin.is_word() => load_plugin(ident),\n+                Some(ident) if plugin.is_word() =>\n+                    load_plugin(&mut plugins, sess, metadata_loader, ident),\n                 _ => call_malformed_plugin_attribute(sess, plugin.span()),\n             }\n         }\n     }\n \n-    for plugin in addl_plugins.unwrap_or_default() {\n-        load_plugin(Ident::from_str(&plugin));\n-    }\n-\n     plugins\n }\n "}, {"sha": "0bd95dfbd14a97420b0a78f9c50f7c7775b4a14c", "filename": "src/test/ui-fulldeps/lint-plugin-cmdline-load.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-load.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-load.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-load.rs?ref=db357a6e3be7b741a710a926d3ddeed79fc40482", "patch": "@@ -1,9 +1,9 @@\n-// run-pass\n+// check-pass\n // aux-build:lint-plugin-test.rs\n // ignore-stage1\n-// compile-flags: -Z extra-plugins=lint_plugin_test\n+// compile-flags: -Z crate-attr=plugin(lint_plugin_test)\n \n-#![allow(dead_code)]\n+#![feature(plugin)]\n \n fn lintme() { } //~ WARNING item is named 'lintme'\n "}, {"sha": "1263a0efe624fe646846a79e1b7734f449331d1e", "filename": "src/test/ui-fulldeps/lint-plugin-cmdline-load.stderr", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-load.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-load.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-load.stderr?ref=db357a6e3be7b741a710a926d3ddeed79fc40482", "patch": "@@ -1,3 +1,11 @@\n+warning: use of deprecated attribute `plugin`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n+  --> <crate attribute>:1:1\n+   |\n+LL | plugin(lint_plugin_test)\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n+   |\n+   = note: `#[warn(deprecated)]` on by default\n+\n warning: item is named 'lintme'\n   --> $DIR/lint-plugin-cmdline-load.rs:8:1\n    |"}]}