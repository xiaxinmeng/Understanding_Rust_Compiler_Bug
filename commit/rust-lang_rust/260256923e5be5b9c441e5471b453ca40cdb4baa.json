{"sha": "260256923e5be5b9c441e5471b453ca40cdb4baa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2MDI1NjkyM2U1YmU1YjljNDQxZTU0NzFiNDUzY2E0MGNkYjRiYWE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-05-13T08:48:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-13T08:48:08Z"}, "message": "Merge pull request #726 from RalfJung/stacked-borrows-2\n\nrename per-location aprt of reborowing to 'granting'", "tree": {"sha": "af1a0f770d36ab461ea4bd6e9feea1e2de49b012", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af1a0f770d36ab461ea4bd6e9feea1e2de49b012"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/260256923e5be5b9c441e5471b453ca40cdb4baa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc2S9ICRBK7hj4Ov3rIwAAdHIIAKrQUrjqh0lDk8mMvCMxLuvA\ncr+Gobv0ui8j57b8onAgjrpy5jQzz6sQ3ADEd/GXk7BZoDpxc84zO0Zh83f6giqL\njAiHHUI3XwQjBqhaRCD0E4j5FcljkKPFPMegAiY+7l7BiafrMyoCBU29CEa5WptS\naYC9YuYubPfXbh0pizIFE6XT5EIElxP9bZGxz6YmPMlYhXL4RpXyvLyPdIcGkmqm\nKm09nnxeBO4n6ZRDX/0UpCAfQYepsn8ZXwST4vbDad1foLtEz0bPg5MMv8JS5qbU\n6xbSzwqtdNikd/kEBLg1r/H7Z2iXrOf/mp4BWGWMQjJt2LeJ2gSRuPPlHk8v/fc=\n=HfuJ\n-----END PGP SIGNATURE-----\n", "payload": "tree af1a0f770d36ab461ea4bd6e9feea1e2de49b012\nparent 72698b1b30c69f14a13970d497234bac28a8fd1c\nparent a9e66928d60a0d8564cc262d780f42ad0a2e900c\nauthor Oliver Scherer <github35764891676564198441@oli-obk.de> 1557737288 +0200\ncommitter GitHub <noreply@github.com> 1557737288 +0200\n\nMerge pull request #726 from RalfJung/stacked-borrows-2\n\nrename per-location aprt of reborowing to 'granting'"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/260256923e5be5b9c441e5471b453ca40cdb4baa", "html_url": "https://github.com/rust-lang/rust/commit/260256923e5be5b9c441e5471b453ca40cdb4baa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/260256923e5be5b9c441e5471b453ca40cdb4baa/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72698b1b30c69f14a13970d497234bac28a8fd1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/72698b1b30c69f14a13970d497234bac28a8fd1c", "html_url": "https://github.com/rust-lang/rust/commit/72698b1b30c69f14a13970d497234bac28a8fd1c"}, {"sha": "a9e66928d60a0d8564cc262d780f42ad0a2e900c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9e66928d60a0d8564cc262d780f42ad0a2e900c", "html_url": "https://github.com/rust-lang/rust/commit/a9e66928d60a0d8564cc262d780f42ad0a2e900c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "910c4ce49f5aaacba8769ba6716b3e593f0ea8e7", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/260256923e5be5b9c441e5471b453ca40cdb4baa/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/260256923e5be5b9c441e5471b453ca40cdb4baa/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=260256923e5be5b9c441e5471b453ca40cdb4baa", "patch": "@@ -373,10 +373,10 @@ impl<'tcx> Stack {\n     }\n \n     /// Derived a new pointer from one with the given tag.\n-    /// `weak` controls whether this is a weak reborrow: weak reborrows do not act as\n-    /// accesses, and they add the new item directly on top of the one it is derived\n+    /// `weak` controls whether this operation is weak or strong: weak granting does not act as\n+    /// an access, and they add the new item directly on top of the one it is derived\n     /// from instead of all the way at the top of the stack.\n-    fn reborrow(\n+    fn grant(\n         &mut self,\n         derived_from: Tag,\n         weak: bool,\n@@ -588,7 +588,7 @@ trait EvalContextPrivExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n                     let weak = perm == Permission::SharedReadWrite;\n                     let item = Item { perm, tag: new_tag, protector };\n                     alloc.extra.for_each(cur_ptr, size, |stack, global| {\n-                        stack.reborrow(cur_ptr.tag, force_weak || weak, item, global)\n+                        stack.grant(cur_ptr.tag, force_weak || weak, item, global)\n                     })\n                 });\n             }\n@@ -597,7 +597,7 @@ trait EvalContextPrivExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n         let weak = perm == Permission::SharedReadWrite;\n         let item = Item { perm, tag: new_tag, protector };\n         alloc.extra.for_each(ptr, size, |stack, global| {\n-            stack.reborrow(ptr.tag, force_weak || weak, item, global)\n+            stack.grant(ptr.tag, force_weak || weak, item, global)\n         })\n     }\n "}]}