{"sha": "1ca8b69e1cddb0f3c601ee508519fedff227d9db", "node_id": "C_kwDOAAsO6NoAKDFjYThiNjllMWNkZGIwZjNjNjAxZWU1MDg1MTlmZWRmZjIyN2Q5ZGI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-21T23:38:12Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-21T23:38:12Z"}, "message": "remove use of &Alloc in btree tests", "tree": {"sha": "a1a8328f1c07adedb6144c74d38f9f8d83470cab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1a8328f1c07adedb6144c74d38f9f8d83470cab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ca8b69e1cddb0f3c601ee508519fedff227d9db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ca8b69e1cddb0f3c601ee508519fedff227d9db", "html_url": "https://github.com/rust-lang/rust/commit/1ca8b69e1cddb0f3c601ee508519fedff227d9db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ca8b69e1cddb0f3c601ee508519fedff227d9db/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc80ca78b6ec2b6bba02560470347433bcd0bb3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc80ca78b6ec2b6bba02560470347433bcd0bb3c", "html_url": "https://github.com/rust-lang/rust/commit/dc80ca78b6ec2b6bba02560470347433bcd0bb3c"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "aadb0dc9c40d9304a68176eaea9d60f9a12bf433", "filename": "library/alloc/src/collections/btree/node/tests.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ca8b69e1cddb0f3c601ee508519fedff227d9db/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca8b69e1cddb0f3c601ee508519fedff227d9db/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs?ref=1ca8b69e1cddb0f3c601ee508519fedff227d9db", "patch": "@@ -68,10 +68,10 @@ fn test_splitpoint() {\n \n #[test]\n fn test_partial_eq() {\n-    let mut root1 = NodeRef::new_leaf(&Global);\n+    let mut root1 = NodeRef::new_leaf(Global);\n     root1.borrow_mut().push(1, ());\n-    let mut root1 = NodeRef::new_internal(root1.forget_type(), &Global).forget_type();\n-    let root2 = Root::new(&Global);\n+    let mut root1 = NodeRef::new_internal(root1.forget_type(), Global).forget_type();\n+    let root2 = Root::new(Global);\n     root1.reborrow().assert_back_pointers();\n     root2.reborrow().assert_back_pointers();\n \n@@ -87,9 +87,9 @@ fn test_partial_eq() {\n     assert!(top_edge_1 == top_edge_1);\n     assert!(top_edge_1 != top_edge_2);\n \n-    root1.pop_internal_level(&Global);\n-    unsafe { root1.into_dying().deallocate_and_ascend(&Global) };\n-    unsafe { root2.into_dying().deallocate_and_ascend(&Global) };\n+    root1.pop_internal_level(Global);\n+    unsafe { root1.into_dying().deallocate_and_ascend(Global) };\n+    unsafe { root2.into_dying().deallocate_and_ascend(Global) };\n }\n \n #[test]"}]}