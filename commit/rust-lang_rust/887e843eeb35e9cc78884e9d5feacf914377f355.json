{"sha": "887e843eeb35e9cc78884e9d5feacf914377f355", "node_id": "C_kwDOAAsO6NoAKDg4N2U4NDNlZWIzNWU5Y2M3ODg4NGU5ZDVmZWFjZjkxNDM3N2YzNTU", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2021-12-17T23:05:38Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-01-18T22:25:30Z"}, "message": "Update async-fn-nonsend.rs\n\nThe previous commit made the non_sync_with_method_call case pass due to\nthe await being unreachable. Unfortunately, this isn't actually the\nbehavior the test was verifying. This change lifts the panic into a\nhelper function so that the generator analysis still thinks the await\nis reachable, and therefore we preserve the same testing behavior.", "tree": {"sha": "4bf7fe5deefcc60123204003c0a5e0d526247cda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bf7fe5deefcc60123204003c0a5e0d526247cda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/887e843eeb35e9cc78884e9d5feacf914377f355", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/887e843eeb35e9cc78884e9d5feacf914377f355", "html_url": "https://github.com/rust-lang/rust/commit/887e843eeb35e9cc78884e9d5feacf914377f355", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/887e843eeb35e9cc78884e9d5feacf914377f355/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "787f4cbd15b91e88d757bf3f1ac1dadfa0e8ec5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/787f4cbd15b91e88d757bf3f1ac1dadfa0e8ec5a", "html_url": "https://github.com/rust-lang/rust/commit/787f4cbd15b91e88d757bf3f1ac1dadfa0e8ec5a"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "c5453b67ef5b6cbfc90462a2a54fe3e24e10ae20", "filename": "src/test/ui/async-await/async-fn-nonsend.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/887e843eeb35e9cc78884e9d5feacf914377f355/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/887e843eeb35e9cc78884e9d5feacf914377f355/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.rs?ref=887e843eeb35e9cc78884e9d5feacf914377f355", "patch": "@@ -35,14 +35,26 @@ async fn non_send_temporary_in_match() {\n     }\n }\n \n+fn get_formatter() -> std::fmt::Formatter<'static> {\n+    panic!()\n+}\n+\n async fn non_sync_with_method_call() {\n+    let f: &mut std::fmt::Formatter = &mut get_formatter();\n+    // It would by nice for this to work.\n+    if non_sync().fmt(f).unwrap() == () {\n+        fut().await;\n+    }\n+}\n+\n+async fn non_sync_with_method_call_panic() {\n     let f: &mut std::fmt::Formatter = panic!();\n     if non_sync().fmt(f).unwrap() == () {\n         fut().await;\n     }\n }\n \n-async fn non_sync_with_infinite_loop() {\n+async fn non_sync_with_method_call_infinite_loop() {\n     let f: &mut std::fmt::Formatter = loop {};\n     if non_sync().fmt(f).unwrap() == () {\n         fut().await;\n@@ -56,5 +68,7 @@ pub fn pass_assert() {\n     assert_send(non_send_temporary_in_match());\n     //~^ ERROR future cannot be sent between threads safely\n     assert_send(non_sync_with_method_call());\n-    assert_send(non_sync_with_infinite_loop());\n+    //~^ ERROR future cannot be sent between threads safely\n+    assert_send(non_sync_with_method_call_panic());\n+    assert_send(non_sync_with_method_call_infinite_loop());\n }"}, {"sha": "40ad46b48620d86454d6cb450d2cbd9d6d9cbfb2", "filename": "src/test/ui/async-await/async-fn-nonsend.stderr", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/887e843eeb35e9cc78884e9d5feacf914377f355/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/887e843eeb35e9cc78884e9d5feacf914377f355/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.stderr?ref=887e843eeb35e9cc78884e9d5feacf914377f355", "patch": "@@ -1,5 +1,5 @@\n error: future cannot be sent between threads safely\n-  --> $DIR/async-fn-nonsend.rs:56:17\n+  --> $DIR/async-fn-nonsend.rs:68:17\n    |\n LL |     assert_send(non_send_temporary_in_match());\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ future returned by `non_send_temporary_in_match` is not `Send`\n@@ -16,10 +16,34 @@ LL |         Some(_) => fut().await,\n LL | }\n    | - `Some(non_send())` is later dropped here\n note: required by a bound in `assert_send`\n-  --> $DIR/async-fn-nonsend.rs:52:24\n+  --> $DIR/async-fn-nonsend.rs:64:24\n    |\n LL | fn assert_send(_: impl Send) {}\n    |                        ^^^^ required by this bound in `assert_send`\n \n-error: aborting due to previous error\n+error: future cannot be sent between threads safely\n+  --> $DIR/async-fn-nonsend.rs:70:17\n+   |\n+LL |     assert_send(non_sync_with_method_call());\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ future returned by `non_sync_with_method_call` is not `Send`\n+   |\n+   = help: the trait `Send` is not implemented for `dyn std::fmt::Write`\n+note: future is not `Send` as this value is used across an await\n+  --> $DIR/async-fn-nonsend.rs:46:14\n+   |\n+LL |     let f: &mut std::fmt::Formatter = &mut get_formatter();\n+   |                                            --------------- has type `Formatter<'_>` which is not `Send`\n+...\n+LL |         fut().await;\n+   |              ^^^^^^ await occurs here, with `get_formatter()` maybe used later\n+LL |     }\n+LL | }\n+   | - `get_formatter()` is later dropped here\n+note: required by a bound in `assert_send`\n+  --> $DIR/async-fn-nonsend.rs:64:24\n+   |\n+LL | fn assert_send(_: impl Send) {}\n+   |                        ^^^^ required by this bound in `assert_send`\n+\n+error: aborting due to 2 previous errors\n "}]}