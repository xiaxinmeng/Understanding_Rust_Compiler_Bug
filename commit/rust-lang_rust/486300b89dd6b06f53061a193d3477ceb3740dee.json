{"sha": "486300b89dd6b06f53061a193d3477ceb3740dee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NjMwMGI4OWRkNmIwNmY1MzA2MWExOTNkMzQ3N2NlYjM3NDBkZWU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-11-03T08:34:13Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-11-03T08:34:13Z"}, "message": "Merge #3400\n\n3400: Fix a false-positive of needless_borrow r=phansch a=sinkuu\n\n\n\nCo-authored-by: Shotaro Yamada <sinkuu@sinkuu.xyz>", "tree": {"sha": "274d32979c8ec4dc003d76a6309f5866c4f1564e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/274d32979c8ec4dc003d76a6309f5866c4f1564e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/486300b89dd6b06f53061a193d3477ceb3740dee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/486300b89dd6b06f53061a193d3477ceb3740dee", "html_url": "https://github.com/rust-lang/rust/commit/486300b89dd6b06f53061a193d3477ceb3740dee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/486300b89dd6b06f53061a193d3477ceb3740dee/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "ebcea405f3bc9a8325cbced1dd9718332e7561b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebcea405f3bc9a8325cbced1dd9718332e7561b3", "html_url": "https://github.com/rust-lang/rust/commit/ebcea405f3bc9a8325cbced1dd9718332e7561b3"}, {"sha": "d4370f8b07b8aac41a94187f4d334e0903a68711", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4370f8b07b8aac41a94187f4d334e0903a68711", "html_url": "https://github.com/rust-lang/rust/commit/d4370f8b07b8aac41a94187f4d334e0903a68711"}], "stats": {"total": 58, "additions": 36, "deletions": 22}, "files": [{"sha": "06ae78a6509ca9cb627cf595a3f2dd7f7b3676ac", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/486300b89dd6b06f53061a193d3477ceb3740dee/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486300b89dd6b06f53061a193d3477ceb3740dee/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=486300b89dd6b06f53061a193d3477ceb3740dee", "patch": "@@ -367,7 +367,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box zero_div_zero::Pass);\n     reg.register_late_lint_pass(box mutex_atomic::MutexAtomic);\n     reg.register_late_lint_pass(box needless_update::Pass);\n-    reg.register_late_lint_pass(box needless_borrow::NeedlessBorrow);\n+    reg.register_late_lint_pass(box needless_borrow::NeedlessBorrow::default());\n     reg.register_late_lint_pass(box needless_borrowed_ref::NeedlessBorrowedRef);\n     reg.register_late_lint_pass(box no_effect::Pass);\n     reg.register_late_lint_pass(box temporary_assignment::Pass);"}, {"sha": "7892467b7f853d1132421757d3cb745b4c0ff4bb", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 28, "deletions": 21, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/486300b89dd6b06f53061a193d3477ceb3740dee/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486300b89dd6b06f53061a193d3477ceb3740dee/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=486300b89dd6b06f53061a193d3477ceb3740dee", "patch": "@@ -12,14 +12,15 @@\n //!\n //! This lint is **warn** by default\n \n+use crate::rustc::hir::{BindingAnnotation, Expr, ExprKind, Item, MutImmutable, Pat, PatKind};\n use crate::rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n-use crate::rustc::{declare_tool_lint, lint_array};\n-use if_chain::if_chain;\n-use crate::rustc::hir::{BindingAnnotation, Expr, ExprKind, MutImmutable, Pat, PatKind};\n use crate::rustc::ty;\n use crate::rustc::ty::adjustment::{Adjust, Adjustment};\n-use crate::utils::{in_macro, snippet_opt, span_lint_and_then};\n+use crate::rustc::{declare_tool_lint, lint_array};\n use crate::rustc_errors::Applicability;\n+use crate::utils::{in_macro, snippet_opt, span_lint_and_then};\n+use crate::syntax::ast::NodeId;\n+use if_chain::if_chain;\n \n /// **What it does:** Checks for address of operations (`&`) that are going to\n /// be dereferenced immediately by the compiler.\n@@ -32,26 +33,17 @@ use crate::rustc_errors::Applicability;\n /// let x: &i32 = &&&&&&5;\n /// ```\n ///\n-/// **Known problems:** This will cause false positives in code generated by `derive`.\n-/// For instance in the following snippet:\n-/// ```rust\n-/// #[derive(Debug)]\n-/// pub enum Error {\n-///     Type(\n-///         &'static str,\n-///     ),\n-/// }\n-/// ```\n-/// A warning will be emitted that `&'static str` should be replaced with `&'static str`,\n-/// however there is nothing that can or should be done to fix this.\n+/// **Known problems:** None.\n declare_clippy_lint! {\n     pub NEEDLESS_BORROW,\n     nursery,\n     \"taking a reference that is going to be automatically dereferenced\"\n }\n \n-#[derive(Copy, Clone)]\n-pub struct NeedlessBorrow;\n+#[derive(Default)]\n+pub struct NeedlessBorrow {\n+    derived_item: Option<NodeId>,\n+}\n \n impl LintPass for NeedlessBorrow {\n     fn get_lints(&self) -> LintArray {\n@@ -61,7 +53,7 @@ impl LintPass for NeedlessBorrow {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBorrow {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n-        if in_macro(e.span) {\n+        if in_macro(e.span) || self.derived_item.is_some() {\n             return;\n         }\n         if let ExprKind::AddrOf(MutImmutable, ref inner) = e.node {\n@@ -87,7 +79,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBorrow {\n                             |db| {\n                                 if let Some(snippet) = snippet_opt(cx, inner.span) {\n                                     db.span_suggestion_with_applicability(\n-                                        e.span, \n+                                        e.span,\n                                         \"change this to\",\n                                         snippet,\n                                         Applicability::MachineApplicable,\n@@ -101,7 +93,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBorrow {\n         }\n     }\n     fn check_pat(&mut self, cx: &LateContext<'a, 'tcx>, pat: &'tcx Pat) {\n-        if in_macro(pat.span) {\n+        if in_macro(pat.span) || self.derived_item.is_some() {\n             return;\n         }\n         if_chain! {\n@@ -131,4 +123,19 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBorrow {\n             }\n         }\n     }\n+\n+    fn check_item(&mut self, _: &LateContext<'a, 'tcx>, item: &'tcx Item) {\n+        if item.attrs.iter().any(|a| a.check_name(\"automatically_derived\")) {\n+            debug_assert!(self.derived_item.is_none());\n+            self.derived_item = Some(item.id);\n+        }\n+    }\n+\n+    fn check_item_post(&mut self, _: &LateContext<'a, 'tcx>, item: &'tcx Item) {\n+        if let Some(id) = self.derived_item {\n+            if item.id == id {\n+                self.derived_item = None;\n+            }\n+        }\n+    }\n }"}, {"sha": "29e6ccca94d5b9f58b24e105883e924917cce493", "filename": "tests/ui/needless_borrow.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/486300b89dd6b06f53061a193d3477ceb3740dee/tests%2Fui%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486300b89dd6b06f53061a193d3477ceb3740dee/tests%2Fui%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.rs?ref=486300b89dd6b06f53061a193d3477ceb3740dee", "patch": "@@ -63,3 +63,10 @@ fn issue_1432() {\n \n     let _ = v.iter().filter(|&a| a.is_empty());\n }\n+\n+#[allow(dead_code)]\n+#[warn(clippy::needless_borrow)]\n+#[derive(Debug)]\n+enum Foo<'a> {\n+    Str(&'a str),\n+}"}]}