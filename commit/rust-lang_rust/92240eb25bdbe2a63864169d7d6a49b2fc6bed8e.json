{"sha": "92240eb25bdbe2a63864169d7d6a49b2fc6bed8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMjQwZWIyNWJkYmUyYTYzODY0MTY5ZDdkNmE0OWIyZmM2YmVkOGU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-01T13:26:48Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-01T15:52:43Z"}, "message": "Add check for irrefutable patterns in destructuring locals", "tree": {"sha": "b62264ecb7b3925f5057000eb888b3e855b6061e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b62264ecb7b3925f5057000eb888b3e855b6061e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92240eb25bdbe2a63864169d7d6a49b2fc6bed8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92240eb25bdbe2a63864169d7d6a49b2fc6bed8e", "html_url": "https://github.com/rust-lang/rust/commit/92240eb25bdbe2a63864169d7d6a49b2fc6bed8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92240eb25bdbe2a63864169d7d6a49b2fc6bed8e/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "985c32ef4c930cdfba23db2191014d772c354407", "url": "https://api.github.com/repos/rust-lang/rust/commits/985c32ef4c930cdfba23db2191014d772c354407", "html_url": "https://github.com/rust-lang/rust/commit/985c32ef4c930cdfba23db2191014d772c354407"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "c0053ecc56d886f9b930417bf33b34ce567c417d", "filename": "src/comp/middle/check_alt.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/92240eb25bdbe2a63864169d7d6a49b2fc6bed8e/src%2Fcomp%2Fmiddle%2Fcheck_alt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92240eb25bdbe2a63864169d7d6a49b2fc6bed8e/src%2Fcomp%2Fmiddle%2Fcheck_alt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fcheck_alt.rs?ref=92240eb25bdbe2a63864169d7d6a49b2fc6bed8e", "patch": "@@ -3,8 +3,9 @@ import syntax::visit;\n \n fn check_crate(tcx: &ty::ctxt, crate: &@crate) {\n     let v =\n-        @{visit_expr: bind check_expr(tcx, _, _, _)\n-             with *visit::default_visitor[()]()};\n+        @{visit_expr: bind check_expr(tcx, _, _, _),\n+          visit_local: bind check_local(tcx, _, _, _)\n+          with *visit::default_visitor[()]()};\n     visit::visit_crate(*crate, (), visit::mk_vt(v));\n     tcx.sess.abort_if_errors();\n }\n@@ -92,6 +93,38 @@ fn pattern_supersedes(tcx: &ty::ctxt, a: &@pat, b: &@pat) -> bool {\n     }\n }\n \n+fn check_local(tcx: &ty::ctxt, loc: &@local, s: &(), v: &visit::vt[()]) {\n+    visit::visit_local(loc, s, v);\n+    if is_refutable(tcx, loc.node.pat) {\n+        tcx.sess.span_err(loc.node.pat.span,\n+                          \"refutable pattern in local binding\");\n+    }\n+}\n+\n+fn is_refutable(tcx: &ty::ctxt, pat: &@pat) -> bool {\n+    alt pat.node {\n+      pat_wild. | pat_bind(_) { ret false; }\n+      pat_lit(_) { ret true; }\n+      pat_box(sub) { ret is_refutable(tcx, sub); }\n+      pat_rec(fields, _) {\n+        for field: field_pat in fields {\n+            if is_refutable(tcx, field.pat) { ret true; }\n+        }\n+        ret false;\n+      }\n+      pat_tag(_, args) {\n+        let vdef = variant_def_ids(tcx.def_map.get(pat.id));\n+        if std::ivec::len(ty::tag_variants(tcx, vdef.tg)) != 1u {\n+            ret true;\n+        }\n+        for p: @pat in args {\n+            if is_refutable(tcx, p) { ret true; }\n+        }\n+        ret false;\n+      }\n+    }\n+}\n+\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}, {"sha": "07dfedad6c06d9f5109968166b3aea2f1897ed17", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/92240eb25bdbe2a63864169d7d6a49b2fc6bed8e/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92240eb25bdbe2a63864169d7d6a49b2fc6bed8e/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=92240eb25bdbe2a63864169d7d6a49b2fc6bed8e", "patch": "@@ -1198,8 +1198,6 @@ fn gather_locals(ccx: &@crate_ctxt, f: &ast::_fn, id: &ast::node_id,\n               local_names: &hashmap[ast::node_id, ast::ident],\n               nvi: @mutable int, nid: ast::node_id, ident: &ast::ident,\n               ty_opt: option::t[ty::t]) {\n-        // FIXME DESTR\n-        if locals.contains_key(nid) { ret; }\n         let var_id = next_var_id(nvi);\n         locals.insert(nid, var_id);\n         local_names.insert(nid, ident);"}]}