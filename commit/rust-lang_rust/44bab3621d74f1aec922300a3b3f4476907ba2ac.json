{"sha": "44bab3621d74f1aec922300a3b3f4476907ba2ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YmFiMzYyMWQ3NGYxYWVjOTIyMzAwYTNiM2Y0NDc2OTA3YmEyYWM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-09-19T15:56:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-19T15:56:38Z"}, "message": "Merge #1873\n\n1873: `fold_kind`: `MATCH_ARM_LIST => FoldKind::Block` r=matklad a=Centril\n\nAs suggested by @matklad in https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/folding.20of.20.60match.60.20and.20.60if.60/near/176109093.\r\n\r\nThis should let folks fold all the arms in a `match` expression rather than just each arm individually.\n\nCo-authored-by: Mazdak Farrokhzad <twingoow@gmail.com>", "tree": {"sha": "35b400e0cb3efdb2298e8dfba9447b9048050164", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35b400e0cb3efdb2298e8dfba9447b9048050164"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44bab3621d74f1aec922300a3b3f4476907ba2ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdg6U2CRBK7hj4Ov3rIwAAdHIIAGjIBAUVJ/byPwIpTlPSmKjS\n6vU2aipaYtBE5t5v+0kUtw0d7KgY//aBafoS3WwCpXo5tROq5ZiBTcOpfYHuVDL5\nISI+wvEhNvLsaj+pEU67ZMmaLa6r38ihryKyMZntQz9kt93g6KZMLdRq0QGE8KVv\ny8bEiB09zHLgBozgtpJvDSGt1TevrdJcbOBQcIyJHtljvjWAyptFFM4u/LGAF8Gd\ne5+yXv3881APZjObixx/kk2ZvcW96d5hiNWWO73j1SGrkUpxblnUETN7SnIN2dn5\nqSp4glYizllkzt46ZEugd1skd1nB5pEYhtqAkcZnPHjR32N0GfPjU+hrjUrfXUM=\n=lC+t\n-----END PGP SIGNATURE-----\n", "payload": "tree 35b400e0cb3efdb2298e8dfba9447b9048050164\nparent 4eb0bb4810d872a8dff176d22c108974c3d4b109\nparent 2be9031935c92c4837c2d16e7dd503658108524b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1568908598 +0000\ncommitter GitHub <noreply@github.com> 1568908598 +0000\n\nMerge #1873\n\n1873: `fold_kind`: `MATCH_ARM_LIST => FoldKind::Block` r=matklad a=Centril\n\nAs suggested by @matklad in https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/folding.20of.20.60match.60.20and.20.60if.60/near/176109093.\r\n\r\nThis should let folks fold all the arms in a `match` expression rather than just each arm individually.\n\nCo-authored-by: Mazdak Farrokhzad <twingoow@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44bab3621d74f1aec922300a3b3f4476907ba2ac", "html_url": "https://github.com/rust-lang/rust/commit/44bab3621d74f1aec922300a3b3f4476907ba2ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44bab3621d74f1aec922300a3b3f4476907ba2ac/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4eb0bb4810d872a8dff176d22c108974c3d4b109", "url": "https://api.github.com/repos/rust-lang/rust/commits/4eb0bb4810d872a8dff176d22c108974c3d4b109", "html_url": "https://github.com/rust-lang/rust/commit/4eb0bb4810d872a8dff176d22c108974c3d4b109"}, {"sha": "2be9031935c92c4837c2d16e7dd503658108524b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2be9031935c92c4837c2d16e7dd503658108524b", "html_url": "https://github.com/rust-lang/rust/commit/2be9031935c92c4837c2d16e7dd503658108524b"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "79fadcc5dbcd1c696353824fcdecf6ad0a40a025", "filename": "crates/ra_ide_api/src/folding_ranges.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/44bab3621d74f1aec922300a3b3f4476907ba2ac/crates%2Fra_ide_api%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44bab3621d74f1aec922300a3b3f4476907ba2ac/crates%2Fra_ide_api%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Ffolding_ranges.rs?ref=44bab3621d74f1aec922300a3b3f4476907ba2ac", "patch": "@@ -87,6 +87,7 @@ fn fold_kind(kind: SyntaxKind) -> Option<FoldKind> {\n         | EXTERN_ITEM_LIST\n         | USE_TREE_LIST\n         | BLOCK\n+        | MATCH_ARM_LIST\n         | ENUM_VARIANT_LIST\n         | TOKEN_TREE => Some(FoldKind::Block),\n         _ => None,\n@@ -358,4 +359,18 @@ macro_rules! foo <fold>{\n         let folds = &[FoldKind::Block];\n         do_check(text, folds);\n     }\n+\n+    #[test]\n+    fn test_fold_match_arms() {\n+        let text = r#\"\n+fn main() <fold>{\n+    match 0 <fold>{\n+        0 => 0,\n+        _ => 1,\n+    }</fold>\n+}</fold>\"#;\n+\n+        let folds = &[FoldKind::Block, FoldKind::Block];\n+        do_check(text, folds);\n+    }\n }"}]}