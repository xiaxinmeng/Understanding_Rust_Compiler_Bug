{"sha": "73530ff80b51ed58d9b66feb48a8b22f6077e886", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNTMwZmY4MGI1MWVkNThkOWI2NmZlYjQ4YThiMjJmNjA3N2U4ODY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-29T06:16:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-29T06:16:02Z"}, "message": "Rollup merge of #61291 - spastorino:avoid-unneeded-bug-call, r=estebank\n\nAvoid unneeded bug!() call\n\nr? @oli-obk", "tree": {"sha": "7cbe2b6fbb7285cd744f849be33f59f62a6767ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cbe2b6fbb7285cd744f849be33f59f62a6767ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73530ff80b51ed58d9b66feb48a8b22f6077e886", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc7iOiCRBK7hj4Ov3rIwAAdHIIADQ4ThTP8cH0EYahdHx6VCCf\n7PB9EbcrdjF/c20+5Wa5hb+tJJjpMxWN/yvdj5Uh1O0l2bOjSSJRL5F0Ma0DqkDA\nIujvJdJEPLHy3CvmEZ2O8MGctMoQAgXQZ2dlUAW6Z68+eVjV+tFKyFm8bNQPOdk+\ng/C7G2N+9pb6DsE9gyimR2eGjlVf65HDYtlxiZU/6pB4w7J7u+9KcQXPX+m6Z4RT\nx3kHG1Z6EdkuFIiMtS3+9yiQs/GTDNdbezCVyWCfR5viVapnEwlyFZDnBdGI9YTB\nCuE8hhmbU20lRJ1P0Hp9digVinFlNPmchWJuMNYNXYd0THVh/61VuFHWiG3hsN0=\n=55vn\n-----END PGP SIGNATURE-----\n", "payload": "tree 7cbe2b6fbb7285cd744f849be33f59f62a6767ae\nparent dcfc15b23cbb7fe5e3dc79e0bbc0c1d9ca38f09b\nparent 0631d19c9a8d4b31828f0c980bec3d1699e5c10b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1559110562 +0200\ncommitter GitHub <noreply@github.com> 1559110562 +0200\n\nRollup merge of #61291 - spastorino:avoid-unneeded-bug-call, r=estebank\n\nAvoid unneeded bug!() call\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73530ff80b51ed58d9b66feb48a8b22f6077e886", "html_url": "https://github.com/rust-lang/rust/commit/73530ff80b51ed58d9b66feb48a8b22f6077e886", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73530ff80b51ed58d9b66feb48a8b22f6077e886/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcfc15b23cbb7fe5e3dc79e0bbc0c1d9ca38f09b", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcfc15b23cbb7fe5e3dc79e0bbc0c1d9ca38f09b", "html_url": "https://github.com/rust-lang/rust/commit/dcfc15b23cbb7fe5e3dc79e0bbc0c1d9ca38f09b"}, {"sha": "0631d19c9a8d4b31828f0c980bec3d1699e5c10b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0631d19c9a8d4b31828f0c980bec3d1699e5c10b", "html_url": "https://github.com/rust-lang/rust/commit/0631d19c9a8d4b31828f0c980bec3d1699e5c10b"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "cd32d6f484d730f671a650f06edb4c284954db8a", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/73530ff80b51ed58d9b66feb48a8b22f6077e886/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73530ff80b51ed58d9b66feb48a8b22f6077e886/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=73530ff80b51ed58d9b66feb48a8b22f6077e886", "patch": "@@ -396,22 +396,20 @@ impl<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         let cx = self.cx;\n         let tcx = self.cx.tcx();\n \n-        if let mir::Place::Base(mir::PlaceBase::Local(index)) = *place {\n-            match self.locals[index] {\n-                LocalRef::Place(place) => {\n-                    return place;\n-                }\n-                LocalRef::UnsizedPlace(place) => {\n-                    return bx.load_operand(place).deref(cx);\n-                }\n-                LocalRef::Operand(..) => {\n-                    bug!(\"using operand local {:?} as place\", place);\n+        let result = match *place {\n+            mir::Place::Base(mir::PlaceBase::Local(index)) => {\n+                match self.locals[index] {\n+                    LocalRef::Place(place) => {\n+                        return place;\n+                    }\n+                    LocalRef::UnsizedPlace(place) => {\n+                        return bx.load_operand(place).deref(cx);\n+                    }\n+                    LocalRef::Operand(..) => {\n+                        bug!(\"using operand local {:?} as place\", place);\n+                    }\n                 }\n             }\n-        }\n-\n-        let result = match *place {\n-            mir::Place::Base(mir::PlaceBase::Local(_)) => bug!(), // handled above\n             mir::Place::Base(\n                 mir::PlaceBase::Static(\n                     box mir::Static { ty, kind: mir::StaticKind::Promoted(promoted) }"}]}