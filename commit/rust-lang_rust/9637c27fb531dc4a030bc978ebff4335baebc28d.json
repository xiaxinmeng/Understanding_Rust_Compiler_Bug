{"sha": "9637c27fb531dc4a030bc978ebff4335baebc28d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MzdjMjdmYjUzMWRjNGEwMzBiYzk3OGViZmY0MzM1YmFlYmMyOGQ=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-12-15T09:58:24Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-12-15T10:00:26Z"}, "message": "compiletest: unit test parse_normalization_string\n\nThere is a FIXME inside that function and I think the unit tests can be\nhelpful to resolve it without breaking anything else.", "tree": {"sha": "551bcb2445211b34466e4c0ac8d37158952d22de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/551bcb2445211b34466e4c0ac8d37158952d22de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9637c27fb531dc4a030bc978ebff4335baebc28d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlwU0LsACgkQtvoGpuDi\nZlubgxAAnFOowKaDt+YMwJZC+2QBH/ibG5sMFzQ1rY5JzhbpjfHdL89vaERNeb7M\n4PytUXHi7LM7vHbyyaSGUwCveK5M1G0Yf6oiN5ed+0jdX6KYsAh/TpyA3Hu7wISE\nGQgQ+SCThIFoo2EHz+g76pkBgFxctrzJT0GUkji5U4Wn5RX+4Ursl2xhG+dnyZCD\nbSwnJV5enpQEwCOAni01p0uoD1AYSm7E2XO3f/KRuGWRn6vnVPDJJ0W7s1FLTtzQ\ntjmSGMmXLd+uyuTZywBWClHvuN0PNJHZs5hZSkG86SmlMatOVVrz3smhMp7d/oPn\nENopXwPoNni1q9YD9XRE26vp0PRxlBN1LyZUfnHRXiRBxFf8UPwz4rg1G0QyJBo+\ngKBOw98ptdfzDAoJnAwjP3dPITa11s2kYj9j+H1qleQ4oNzQ+I3Xfmk3GVWEWYxp\nk+yfm35qbAd5M9uUWDxkvZn3wlf/elnbRDH/TXfTqVqJYd4o8MKijLxNEWOQSAs5\n8bRgSFu2e8Jgcm624E7B/BMEYDWCMS5rcANp4uRDS/OEA4lPp05LocTAfBqbf/Xf\n/9dFYST+HaWoI+ntfDw6Pc5Fikd9JDBhpgemVd7RmhlBVT5Dx/rD36fXDZV8p4uT\njrlrS0OQxRWQBBRDeSEpu1t7Jcm55Y4oW6w/HIVHij2SKJC6EZw=\n=dS8c\n-----END PGP SIGNATURE-----", "payload": "tree 551bcb2445211b34466e4c0ac8d37158952d22de\nparent 818f6823ad6f4faa09dd859ea83942e93e470860\nauthor Philipp Hansch <dev@phansch.net> 1544867904 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1544868026 +0100\n\ncompiletest: unit test parse_normalization_string\n\nThere is a FIXME inside that function and I think the unit tests can be\nhelpful to resolve it without breaking anything else.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9637c27fb531dc4a030bc978ebff4335baebc28d", "html_url": "https://github.com/rust-lang/rust/commit/9637c27fb531dc4a030bc978ebff4335baebc28d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9637c27fb531dc4a030bc978ebff4335baebc28d/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "818f6823ad6f4faa09dd859ea83942e93e470860", "url": "https://api.github.com/repos/rust-lang/rust/commits/818f6823ad6f4faa09dd859ea83942e93e470860", "html_url": "https://github.com/rust-lang/rust/commit/818f6823ad6f4faa09dd859ea83942e93e470860"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "8b3023e63dfb49c732a5f2668629a416c2684e09", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9637c27fb531dc4a030bc978ebff4335baebc28d/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9637c27fb531dc4a030bc978ebff4335baebc28d/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=9637c27fb531dc4a030bc978ebff4335baebc28d", "patch": "@@ -873,3 +873,29 @@ fn parse_normalization_string(line: &mut &str) -> Option<String> {\n     *line = &line[end + 1..];\n     Some(result)\n }\n+\n+#[test]\n+fn test_parse_normalization_string() {\n+    let mut s = \"normalize-stderr-32bit: \\\"something (32 bits)\\\" -> \\\"something ($WORD bits)\\\".\";\n+    let first = parse_normalization_string(&mut s);\n+    assert_eq!(first, Some(\"something (32 bits)\".to_owned()));\n+    assert_eq!(s, \" -> \\\"something ($WORD bits)\\\".\");\n+\n+    // Nothing to normalize (No quotes)\n+    let mut s = \"normalize-stderr-32bit: something (32 bits) -> something ($WORD bits).\";\n+    let first = parse_normalization_string(&mut s);\n+    assert_eq!(first, None);\n+    assert_eq!(s, r#\"normalize-stderr-32bit: something (32 bits) -> something ($WORD bits).\"#);\n+\n+    // Nothing to normalize (Only a single quote)\n+    let mut s = \"normalize-stderr-32bit: \\\"something (32 bits) -> something ($WORD bits).\";\n+    let first = parse_normalization_string(&mut s);\n+    assert_eq!(first, None);\n+    assert_eq!(s, \"normalize-stderr-32bit: \\\"something (32 bits) -> something ($WORD bits).\");\n+\n+    // Nothing to normalize (Three quotes)\n+    let mut s = \"normalize-stderr-32bit: \\\"something (32 bits)\\\" -> \\\"something ($WORD bits).\";\n+    let first = parse_normalization_string(&mut s);\n+    assert_eq!(first, Some(\"something (32 bits)\".to_owned()));\n+    assert_eq!(s, \" -> \\\"something ($WORD bits).\");\n+}"}]}