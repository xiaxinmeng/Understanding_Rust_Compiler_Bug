{"sha": "897149a88323f0b5b9bc16e9b41b39cbc3bdae0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5NzE0OWE4ODMyM2YwYjViOWJjMTZlOWI0MWIzOWNiYzNiZGFlMGU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-29T13:44:19Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-29T13:45:42Z"}, "message": "fence docs: fix example Mutex", "tree": {"sha": "505a729551ff053bfb9959c369e4e2f778a7821f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/505a729551ff053bfb9959c369e4e2f778a7821f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/897149a88323f0b5b9bc16e9b41b39cbc3bdae0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/897149a88323f0b5b9bc16e9b41b39cbc3bdae0e", "html_url": "https://github.com/rust-lang/rust/commit/897149a88323f0b5b9bc16e9b41b39cbc3bdae0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/897149a88323f0b5b9bc16e9b41b39cbc3bdae0e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06e7b93f6a2a3eeaf80fd6a9a3ef7b180bb5d778", "url": "https://api.github.com/repos/rust-lang/rust/commits/06e7b93f6a2a3eeaf80fd6a9a3ef7b180bb5d778", "html_url": "https://github.com/rust-lang/rust/commit/06e7b93f6a2a3eeaf80fd6a9a3ef7b180bb5d778"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "f31a4a0b7518de4b9af61de602f90b894d52595a", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/897149a88323f0b5b9bc16e9b41b39cbc3bdae0e/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/897149a88323f0b5b9bc16e9b41b39cbc3bdae0e/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=897149a88323f0b5b9bc16e9b41b39cbc3bdae0e", "patch": "@@ -2649,7 +2649,8 @@ unsafe fn atomic_umin<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {\n ///     }\n ///\n ///     pub fn lock(&self) {\n-///         while !self.flag.compare_and_swap(false, true, Ordering::Relaxed) {}\n+///         // Wait until the old value is `false`.\n+///         while self.flag.compare_and_swap(false, true, Ordering::Relaxed) != false {}\n ///         // This fence synchronizes-with store in `unlock`.\n ///         fence(Ordering::Acquire);\n ///     }"}]}