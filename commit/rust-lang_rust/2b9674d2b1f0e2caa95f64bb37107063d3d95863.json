{"sha": "2b9674d2b1f0e2caa95f64bb37107063d3d95863", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiOTY3NGQyYjFmMGUyY2FhOTVmNjRiYjM3MTA3MDYzZDNkOTU4NjM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T15:20:11Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T15:20:11Z"}, "message": "Rollup merge of #49105 - SimonSapin:from_utf8_lossy_example, r=alexcrichton\n\nAdd an example of lossy decoding to str::Utf8Error docs\n\nCC https://github.com/rust-lang/rust/issues/33906", "tree": {"sha": "79634b7c506140285f19e0bdef38018062ba14b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79634b7c506140285f19e0bdef38018062ba14b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b9674d2b1f0e2caa95f64bb37107063d3d95863", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqzyasACgkQ/vbIBR0O\nATzafhAAk75qFNiLX99a939cogbpEkxlZ16RtdrhFbAEl5WONYZGIOOUTn2i+Jsf\ns7DbV+rIFi126gI1au8earuOyZcX2V49WxSKog50onqzlDmive4WfoRAKklPuR62\n1jetSw1a8cGZqo4088E9ydBanM8s/v+1TQhwz3CY3U2fM5KEdr3fusn7V7JcF6Jj\n8waCqcPqa0xhX9rYYvGVmLM2WdliRAQf9Nu7TSU8/ws9TdrF2uxbWA6R//GVw/8t\n5ANWO3bcv9Pa4YdffSk+Y7zV1N3J41HDDot3Ii0Jtww1x6GxbEpCyAK7w5A+t66G\nfqcvI/qaxMCKSFYI89m0dLc9BgQ8L0XOxhME+U/LUz8E7YNoZGlHBmqDtTK3WwE9\nJAY4LWwOxVdcUfWztGY7c1ySanRdLofc1tNgRysouP7oR4PWN6h/T32pZCcBhx+D\na4s6FsMlrgJbnJlxsNwXUwRJipwNW78zi04nkMq7vUod7iHYVGmhqqihlJEx/mwt\nlk+gBmtyETQ6cmSV++SputwltTdjoDsdk/yj943fPl2udkCsbHRhTb0Bkl+XitMn\nSzEA2GzjY4nAqI7cMHBEcNJsIeUjXARSMXyvJyDoUeO246q1CViCxQg4H5kke8/k\nsp/zuur2aov64YusWwnDpt8RQvyGoDc1XI7ABTrXHXA4R3UiwaY=\n=r3UO\n-----END PGP SIGNATURE-----", "payload": "tree 79634b7c506140285f19e0bdef38018062ba14b5\nparent a4bc8590117f313ab2c895ab91f183f368369e2b\nparent e09dbbc39eeecbf6a8122d86297a1e8701aca26b\nauthor kennytm <kennytm@gmail.com> 1521732011 +0800\ncommitter kennytm <kennytm@gmail.com> 1521732011 +0800\n\nRollup merge of #49105 - SimonSapin:from_utf8_lossy_example, r=alexcrichton\n\nAdd an example of lossy decoding to str::Utf8Error docs\n\nCC https://github.com/rust-lang/rust/issues/33906\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b9674d2b1f0e2caa95f64bb37107063d3d95863", "html_url": "https://github.com/rust-lang/rust/commit/2b9674d2b1f0e2caa95f64bb37107063d3d95863", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b9674d2b1f0e2caa95f64bb37107063d3d95863/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4bc8590117f313ab2c895ab91f183f368369e2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4bc8590117f313ab2c895ab91f183f368369e2b", "html_url": "https://github.com/rust-lang/rust/commit/a4bc8590117f313ab2c895ab91f183f368369e2b"}, {"sha": "e09dbbc39eeecbf6a8122d86297a1e8701aca26b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e09dbbc39eeecbf6a8122d86297a1e8701aca26b", "html_url": "https://github.com/rust-lang/rust/commit/e09dbbc39eeecbf6a8122d86297a1e8701aca26b"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "1185b7acaae1f3101d34307983185843208ae8f0", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2b9674d2b1f0e2caa95f64bb37107063d3d95863/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9674d2b1f0e2caa95f64bb37107063d3d95863/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=2b9674d2b1f0e2caa95f64bb37107063d3d95863", "patch": "@@ -165,6 +165,37 @@ Section: Creating a string\n ///\n /// [`String`]: ../../std/string/struct.String.html#method.from_utf8\n /// [`&str`]: ../../std/str/fn.from_utf8.html\n+///\n+/// # Examples\n+///\n+/// This error type\u2019s methods can be used to create functionality\n+/// similar to `String::from_utf8_lossy` without allocating heap memory:\n+///\n+/// ```\n+/// fn from_utf8_lossy<F>(mut input: &[u8], mut push: F) where F: FnMut(&str) {\n+///     loop {\n+///         match ::std::str::from_utf8(input) {\n+///             Ok(valid) => {\n+///                 push(valid);\n+///                 break\n+///             }\n+///             Err(error) => {\n+///                 let (valid, after_valid) = input.split_at(error.valid_up_to());\n+///                 unsafe {\n+///                     push(::std::str::from_utf8_unchecked(valid))\n+///                 }\n+///                 push(\"\\u{FFFD}\");\n+///\n+///                 if let Some(invalid_sequence_length) = error.error_len() {\n+///                     input = &after_valid[invalid_sequence_length..]\n+///                 } else {\n+///                     break\n+///                 }\n+///             }\n+///         }\n+///     }\n+/// }\n+/// ```\n #[derive(Copy, Eq, PartialEq, Clone, Debug)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Utf8Error {"}]}