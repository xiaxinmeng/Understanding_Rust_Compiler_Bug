{"sha": "11694905b4c3073b2ce5a3de954139bfaa50681f", "node_id": "C_kwDOAAsO6NoAKDExNjk0OTA1YjRjMzA3M2IyY2U1YTNkZTk1NDEzOWJmYWE1MDY4MWY", "commit": {"author": {"name": "Christopher Durham", "email": "cad97@cad97.com", "date": "2022-07-11T20:20:00Z"}, "committer": {"name": "Christopher Durham", "email": "cad97@cad97.com", "date": "2022-07-11T21:58:42Z"}, "message": "Remove duplication of layout size check", "tree": {"sha": "65ac194930c2b8fc5fb2c6583242afcd221fb60a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65ac194930c2b8fc5fb2c6583242afcd221fb60a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11694905b4c3073b2ce5a3de954139bfaa50681f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11694905b4c3073b2ce5a3de954139bfaa50681f", "html_url": "https://github.com/rust-lang/rust/commit/11694905b4c3073b2ce5a3de954139bfaa50681f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11694905b4c3073b2ce5a3de954139bfaa50681f/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "079d3eb22f883edb0ef332a4929a00513112cb6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/079d3eb22f883edb0ef332a4929a00513112cb6a", "html_url": "https://github.com/rust-lang/rust/commit/079d3eb22f883edb0ef332a4929a00513112cb6a"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "59ebe5fbe022776d76fa887b6d773d59aee80381", "filename": "library/core/src/alloc/layout.rs", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/11694905b4c3073b2ce5a3de954139bfaa50681f/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11694905b4c3073b2ce5a3de954139bfaa50681f/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs?ref=11694905b4c3073b2ce5a3de954139bfaa50681f", "patch": "@@ -68,6 +68,13 @@ impl Layout {\n             return Err(LayoutError);\n         }\n \n+        // SAFETY: just checked that align is a power of two.\n+        Layout::from_size_valid_align(size, unsafe { ValidAlign::new_unchecked(align) })\n+    }\n+\n+    /// Internal helper constructor to skip revalidating alignment validity.\n+    #[inline]\n+    const fn from_size_valid_align(size: usize, align: ValidAlign) -> Result<Self, LayoutError> {\n         // (power-of-two implies align != 0.)\n \n         // Rounded up size is:\n@@ -82,23 +89,11 @@ impl Layout {\n         //\n         // Above implies that checking for summation overflow is both\n         // necessary and sufficient.\n-        if size > isize::MAX as usize - (align - 1) {\n-            return Err(LayoutError);\n-        }\n-\n-        // SAFETY: the conditions for `from_size_align_unchecked` have been\n-        // checked above.\n-        unsafe { Ok(Layout::from_size_align_unchecked(size, align)) }\n-    }\n-\n-    /// Internal helper constructor to skip revalidating alignment validity.\n-    #[inline]\n-    const fn from_size_valid_align(size: usize, align: ValidAlign) -> Result<Self, LayoutError> {\n-        // See above for the correctness of this check.\n         if size > isize::MAX as usize - (align.as_nonzero().get() - 1) {\n             return Err(LayoutError);\n         }\n-        // SAFTEY: as above, this check is sufficient.\n+\n+        // SAFETY: Layout::size invariants checked above.\n         Ok(Layout { size, align })\n     }\n \n@@ -113,8 +108,8 @@ impl Layout {\n     #[must_use]\n     #[inline]\n     pub const unsafe fn from_size_align_unchecked(size: usize, align: usize) -> Self {\n-        // SAFETY: the caller must ensure that `align` is a power of two.\n-        Layout { size, align: unsafe { ValidAlign::new_unchecked(align) } }\n+        // SAFETY: the caller is required to uphold the preconditions.\n+        unsafe { Layout { size, align: ValidAlign::new_unchecked(align) } }\n     }\n \n     /// The minimum size in bytes for a memory block of this layout."}]}