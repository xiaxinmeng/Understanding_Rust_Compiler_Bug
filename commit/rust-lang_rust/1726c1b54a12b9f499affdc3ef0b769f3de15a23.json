{"sha": "1726c1b54a12b9f499affdc3ef0b769f3de15a23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MjZjMWI1NGExMmI5ZjQ5OWFmZmRjM2VmMGI3NjlmM2RlMTVhMjM=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-02-23T06:21:37Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-03-14T22:04:40Z"}, "message": "Add some debugging output for specialization graph assembly", "tree": {"sha": "9335534c1be171fd628313abcf82a8647176ba15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9335534c1be171fd628313abcf82a8647176ba15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1726c1b54a12b9f499affdc3ef0b769f3de15a23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1726c1b54a12b9f499affdc3ef0b769f3de15a23", "html_url": "https://github.com/rust-lang/rust/commit/1726c1b54a12b9f499affdc3ef0b769f3de15a23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1726c1b54a12b9f499affdc3ef0b769f3de15a23/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaf2f909561c3b2c26ee8d40ac7a95e89c5034d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf2f909561c3b2c26ee8d40ac7a95e89c5034d9", "html_url": "https://github.com/rust-lang/rust/commit/eaf2f909561c3b2c26ee8d40ac7a95e89c5034d9"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "c73219fbc088241ad5ea51ab15104a7b244783b8", "filename": "src/librustc/middle/traits/specialize/specialization_graph.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1726c1b54a12b9f499affdc3ef0b769f3de15a23/src%2Flibrustc%2Fmiddle%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1726c1b54a12b9f499affdc3ef0b769f3de15a23/src%2Flibrustc%2Fmiddle%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fspecialize%2Fspecialization_graph.rs?ref=1726c1b54a12b9f499affdc3ef0b769f3de15a23", "patch": "@@ -65,6 +65,8 @@ impl Graph {\n         let trait_ref = tcx.impl_trait_ref(impl_def_id).unwrap();\n         let trait_def_id = trait_ref.def_id;\n \n+        debug!(\"inserting TraitRef {:?} into specialization graph\", trait_ref);\n+\n         // if the reference itself contains an earlier error (e.g., due to a\n         // resolution failure), then we just insert the impl at the top level of\n         // the graph and claim that there's no overlap (in order to supress\n@@ -99,10 +101,16 @@ impl Graph {\n                     let ge = specializes(tcx, possible_sibling, impl_def_id);\n \n                     if le && !ge {\n+                        let parent_trait_ref = tcx.impl_trait_ref(possible_sibling).unwrap();\n+                        debug!(\"descending as child of TraitRef {:?}\", parent_trait_ref);\n+\n                         // the impl specializes possible_sibling\n                         parent = possible_sibling;\n                         continue 'descend;\n                     } else if ge && !le {\n+                        let child_trait_ref = tcx.impl_trait_ref(possible_sibling).unwrap();\n+                        debug!(\"placing as parent of TraitRef {:?}\", child_trait_ref);\n+\n                         // possible_sibling specializes the impl\n                         *slot = impl_def_id;\n                         self.parent.insert(impl_def_id, parent);\n@@ -123,6 +131,7 @@ impl Graph {\n             }\n \n             // no overlap with any potential siblings, so add as a new sibling\n+            debug!(\"placing as new sibling\");\n             self.parent.insert(impl_def_id, parent);\n             possible_siblings.push(impl_def_id);\n             return Ok(());"}]}