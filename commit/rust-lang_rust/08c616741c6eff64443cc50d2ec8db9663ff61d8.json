{"sha": "08c616741c6eff64443cc50d2ec8db9663ff61d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4YzYxNjc0MWM2ZWZmNjQ0NDNjYzUwZDJlYzhkYjk2NjNmZjYxZDg=", "commit": {"author": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-07-09T17:32:30Z"}, "committer": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-07-09T17:32:30Z"}, "message": "Ensure deterministic ordering for diagnostics", "tree": {"sha": "501eff2fe165025d5b159d24c4da58dba8d34b73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/501eff2fe165025d5b159d24c4da58dba8d34b73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08c616741c6eff64443cc50d2ec8db9663ff61d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08c616741c6eff64443cc50d2ec8db9663ff61d8", "html_url": "https://github.com/rust-lang/rust/commit/08c616741c6eff64443cc50d2ec8db9663ff61d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08c616741c6eff64443cc50d2ec8db9663ff61d8/comments", "author": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cbeaf738267c8ddb5ab205dae4404e2f25eeeeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cbeaf738267c8ddb5ab205dae4404e2f25eeeeb", "html_url": "https://github.com/rust-lang/rust/commit/8cbeaf738267c8ddb5ab205dae4404e2f25eeeeb"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "c42ca936e9758beca9f2fedf5f2b00ad75993681", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/08c616741c6eff64443cc50d2ec8db9663ff61d8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08c616741c6eff64443cc50d2ec8db9663ff61d8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=08c616741c6eff64443cc50d2ec8db9663ff61d8", "patch": "@@ -96,7 +96,7 @@ type MigrationNeededForCapture = (Option<hir::HirId>, String, String);\n \n /// Intermediate format to store the hir id of the root variable and a HashSet containing\n /// information on why the root variable should be fully captured\n-type MigrationDiagnosticInfo = (hir::HirId, FxHashSet<MigrationNeededForCapture>);\n+type MigrationDiagnosticInfo = (hir::HirId, Vec<MigrationNeededForCapture>);\n \n struct InferBorrowKindVisitor<'a, 'tcx> {\n     fcx: &'a FnCtxt<'a, 'tcx>,\n@@ -861,7 +861,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         // Perform auto-trait analysis\n         for (&var_hir_id, _) in upvars.iter() {\n-            let mut responsible_captured_hir_ids = FxHashSet::default();\n+            let mut responsible_captured_hir_ids = Vec::new();\n \n             let auto_trait_diagnostic = if let Some(diagnostics_info) =\n                 self.compute_2229_migrations_for_trait(min_captures, var_hir_id, closure_clause)\n@@ -891,6 +891,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 capture_diagnostic.insert(key.clone());\n             }\n \n+            let mut capture_diagnostic = capture_diagnostic.into_iter().collect::<Vec<_>>();\n+            capture_diagnostic.sort();\n             for captured_info in capture_diagnostic.iter() {\n                 // Get the auto trait reasons of why migration is needed because of that capture, if there are any\n                 let capture_trait_reasons =\n@@ -907,7 +909,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 // auto trait implementation issues\n                 auto_trait_migration_reasons.extend(capture_trait_reasons.clone());\n \n-                responsible_captured_hir_ids.insert((\n+                responsible_captured_hir_ids.push((\n                     captured_info.0,\n                     captured_info.1.clone(),\n                     self.compute_2229_migrations_reasons("}, {"sha": "8a42683c1df9f9df0c93f4f6a89c0a200117560c", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/multi_diagnostics.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08c616741c6eff64443cc50d2ec8db9663ff61d8/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmulti_diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/08c616741c6eff64443cc50d2ec8db9663ff61d8/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmulti_diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmulti_diagnostics.stderr?ref=08c616741c6eff64443cc50d2ec8db9663ff61d8", "patch": "@@ -90,8 +90,8 @@ LL |         let _f_1 = f1.1;\n LL | }\n    | -\n    | |\n-   | in Rust 2018, `f1` would be dropped here, but in Rust 2021, only `f1.1` would be dropped here alongside the closure\n    | in Rust 2018, `f1` would be dropped here, but in Rust 2021, only `f1.0` would be dropped here alongside the closure\n+   | in Rust 2018, `f1` would be dropped here, but in Rust 2021, only `f1.1` would be dropped here alongside the closure\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/disjoint-capture-in-closures.html>\n help: add a dummy let to cause `f1` to be fully captured"}, {"sha": "5bf73ccc55400edbdc5f1c2a98ab8735cd4608f5", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/precise.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08c616741c6eff64443cc50d2ec8db9663ff61d8/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/08c616741c6eff64443cc50d2ec8db9663ff61d8/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.stderr?ref=08c616741c6eff64443cc50d2ec8db9663ff61d8", "patch": "@@ -44,8 +44,8 @@ LL |         let _x = u.1.0;\n LL | }\n    | -\n    | |\n-   | in Rust 2018, `u` would be dropped here, but in Rust 2021, only `u.0.1` would be dropped here alongside the closure\n    | in Rust 2018, `u` would be dropped here, but in Rust 2021, only `u.0.0` would be dropped here alongside the closure\n+   | in Rust 2018, `u` would be dropped here, but in Rust 2021, only `u.0.1` would be dropped here alongside the closure\n    | in Rust 2018, `u` would be dropped here, but in Rust 2021, only `u.1.0` would be dropped here alongside the closure\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/disjoint-capture-in-closures.html>"}]}