{"sha": "9e2dac4787e5470ecd9e245420e8da9528620edd", "node_id": "C_kwDOAAsO6NoAKDllMmRhYzQ3ODdlNTQ3MGVjZDllMjQ1NDIwZThkYTk1Mjg2MjBlZGQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-26T00:11:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-26T00:11:30Z"}, "message": "Auto merge of #2245 - saethlin:color-always, r=RalfJung\n\nActually pass through the request for --color=always\n\nhttps://github.com/rust-lang/miri/pull/2243 actually doesn't work :joy:\n\nThe suggestion to split on `,` was good but `arg` is actually the whole `--json=diagnostic-rendered-ansi,artifacts,future-incompat\n`, and of course I didn't test that change locally and we have no test for this in CI.\n\nTherefore, I would like some guidance on making a test for this because I'm going to rely on this working.", "tree": {"sha": "a4f6d876f34c26eaddbe5f5408f4a8093c88ad26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4f6d876f34c26eaddbe5f5408f4a8093c88ad26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e2dac4787e5470ecd9e245420e8da9528620edd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e2dac4787e5470ecd9e245420e8da9528620edd", "html_url": "https://github.com/rust-lang/rust/commit/9e2dac4787e5470ecd9e245420e8da9528620edd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e2dac4787e5470ecd9e245420e8da9528620edd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "320084e7a8fb7d362e65b580ec518d662fa853e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/320084e7a8fb7d362e65b580ec518d662fa853e8", "html_url": "https://github.com/rust-lang/rust/commit/320084e7a8fb7d362e65b580ec518d662fa853e8"}, {"sha": "fed0e1639777cf33caf381ac3bc588ad082398eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/fed0e1639777cf33caf381ac3bc588ad082398eb", "html_url": "https://github.com/rust-lang/rust/commit/fed0e1639777cf33caf381ac3bc588ad082398eb"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "4d7b7da6634ce8fabc578836f41cbfa7205c9a73", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9e2dac4787e5470ecd9e245420e8da9528620edd/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e2dac4787e5470ecd9e245420e8da9528620edd/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=9e2dac4787e5470ecd9e245420e8da9528620edd", "patch": "@@ -952,12 +952,14 @@ fn phase_runner(binary: &Path, binary_args: env::Args, phase: RunnerPhase) {\n             assert!(suffix.starts_with('='));\n             // Drop this argument.\n         } else if let Some(suffix) = arg.strip_prefix(json_flag) {\n-            assert!(suffix.starts_with('='));\n+            let suffix = suffix.strip_prefix('=').unwrap();\n             // This is how we pass through --color=always. We detect that Cargo is detecting rustc\n             // to emit the diagnostic structure that Cargo would consume from rustc to emit colored\n             // diagnostics, and ask rustc to emit them.\n             // See https://github.com/rust-lang/miri/issues/2037\n-            if arg.split(',').any(|a| a == \"diagnostic-rendered-ansi\") {\n+            // First skip over the leading `=`, then check for diagnostic-rendered-ansi in the\n+            // comma-separated list\n+            if suffix.split(',').any(|a| a == \"diagnostic-rendered-ansi\") {\n                 cmd.arg(\"--color=always\");\n             }\n             // But aside from remembering that colored output was requested, drop this argument."}]}