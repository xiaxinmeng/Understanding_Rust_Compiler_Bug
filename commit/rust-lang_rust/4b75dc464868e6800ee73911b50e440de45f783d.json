{"sha": "4b75dc464868e6800ee73911b50e440de45f783d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNzVkYzQ2NDg2OGU2ODAwZWU3MzkxMWI1MGU0NDBkZTQ1Zjc4M2Q=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-03-16T21:23:39Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-03-16T21:25:22Z"}, "message": "thread: 'dur' -> 'duration'\n\nAlso:\n\n- italize the binding name\n- complete a sentence", "tree": {"sha": "e714b8d0e7219025c800a923cfc19e6743e8294c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e714b8d0e7219025c800a923cfc19e6743e8294c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b75dc464868e6800ee73911b50e440de45f783d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b75dc464868e6800ee73911b50e440de45f783d", "html_url": "https://github.com/rust-lang/rust/commit/4b75dc464868e6800ee73911b50e440de45f783d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b75dc464868e6800ee73911b50e440de45f783d/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80a0d8223d527d8adf2a4a2a4d3856af98df69f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/80a0d8223d527d8adf2a4a2a4d3856af98df69f7", "html_url": "https://github.com/rust-lang/rust/commit/80a0d8223d527d8adf2a4a2a4d3856af98df69f7"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a40b26c85bee1f5f4352345d5804e65e2afc648c", "filename": "src/libstd/thread.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4b75dc464868e6800ee73911b50e440de45f783d/src%2Flibstd%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b75dc464868e6800ee73911b50e440de45f783d/src%2Flibstd%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread.rs?ref=4b75dc464868e6800ee73911b50e440de45f783d", "patch": "@@ -402,18 +402,18 @@ pub fn park() {\n /// the specified duration has been reached (may wake spuriously).\n ///\n /// The semantics of this function are equivalent to `park()` except that the\n-/// thread will be blocked for roughly no longer than dur. This method\n+/// thread will be blocked for roughly no longer than *duration*. This method\n /// should not be used for precise timing due to anomalies such as\n /// preemption or platform differences that may not cause the maximum\n-/// amount of time waited to be precisely dur\n+/// amount of time waited to be precisely *duration* long.\n ///\n /// See the module doc for more detail.\n #[unstable(feature = \"std_misc\", reason = \"recently introduced, depends on Duration\")]\n-pub fn park_timeout(dur: Duration) {\n+pub fn park_timeout(duration: Duration) {\n     let thread = current();\n     let mut guard = thread.inner.lock.lock().unwrap();\n     if !*guard {\n-        let (g, _) = thread.inner.cvar.wait_timeout(guard, dur).unwrap();\n+        let (g, _) = thread.inner.cvar.wait_timeout(guard, duration).unwrap();\n         guard = g;\n     }\n     *guard = false;\n@@ -502,11 +502,11 @@ impl Thread {\n     /// Deprecated: use module-level free function.\n     #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[unstable(feature = \"std_misc\", reason = \"recently introduced\")]\n-    pub fn park_timeout(dur: Duration) {\n+    pub fn park_timeout(duration: Duration) {\n         let thread = current();\n         let mut guard = thread.inner.lock.lock().unwrap();\n         if !*guard {\n-            let (g, _) = thread.inner.cvar.wait_timeout(guard, dur).unwrap();\n+            let (g, _) = thread.inner.cvar.wait_timeout(guard, duration).unwrap();\n             guard = g;\n         }\n         *guard = false;"}]}