{"sha": "a6cfabc88a79fe039a9c3d0c541f6517fb9767e2", "node_id": "C_kwDOAAsO6NoAKGE2Y2ZhYmM4OGE3OWZlMDM5YTljM2QwYzU0MWY2NTE3ZmI5NzY3ZTI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-06T17:42:52Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-06T17:43:48Z"}, "message": "Avoid ICE in rustdoc.", "tree": {"sha": "c6f070496709125804f0e3547d28873e72ad1d9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6f070496709125804f0e3547d28873e72ad1d9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6cfabc88a79fe039a9c3d0c541f6517fb9767e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6cfabc88a79fe039a9c3d0c541f6517fb9767e2", "html_url": "https://github.com/rust-lang/rust/commit/a6cfabc88a79fe039a9c3d0c541f6517fb9767e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6cfabc88a79fe039a9c3d0c541f6517fb9767e2/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55f46419afd2e49acfc6be176ad4aeadaa5686d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/55f46419afd2e49acfc6be176ad4aeadaa5686d7", "html_url": "https://github.com/rust-lang/rust/commit/55f46419afd2e49acfc6be176ad4aeadaa5686d7"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "6697952293e5648af3598f7d089097ab1e511455", "filename": "src/librustdoc/clean/auto_trait.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a6cfabc88a79fe039a9c3d0c541f6517fb9767e2/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6cfabc88a79fe039a9c3d0c541f6517fb9767e2/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs?ref=a6cfabc88a79fe039a9c3d0c541f6517fb9767e2", "patch": "@@ -354,9 +354,7 @@ where\n         ty_to_bounds\n             .into_iter()\n             .flat_map(|(ty, mut bounds)| {\n-                if let Some(data) = ty_to_fn.get(&ty) {\n-                    let (poly_trait, output) =\n-                        (data.0.as_ref().unwrap().clone(), data.1.as_ref().cloned().map(Box::new));\n+                if let Some((Some(ref poly_trait), ref output)) = ty_to_fn.get(&ty) {\n                     let mut new_path = poly_trait.trait_.clone();\n                     let last_segment = new_path.segments.pop().expect(\"segments were empty\");\n \n@@ -374,8 +372,9 @@ where\n                         GenericArgs::Parenthesized { inputs, output } => (inputs, output),\n                     };\n \n+                    let output = output.as_ref().cloned().map(Box::new);\n                     if old_output.is_some() && old_output != output {\n-                        panic!(\"Output mismatch for {:?} {:?} {:?}\", ty, old_output, data.1);\n+                        panic!(\"Output mismatch for {:?} {:?} {:?}\", ty, old_output, output);\n                     }\n \n                     let new_params = GenericArgs::Parenthesized { inputs: old_input, output };\n@@ -385,7 +384,10 @@ where\n                         .push(PathSegment { name: last_segment.name, args: new_params });\n \n                     bounds.insert(GenericBound::TraitBound(\n-                        PolyTrait { trait_: new_path, generic_params: poly_trait.generic_params },\n+                        PolyTrait {\n+                            trait_: new_path,\n+                            generic_params: poly_trait.generic_params.clone(),\n+                        },\n                         hir::TraitBoundModifier::None,\n                     ));\n                 }"}, {"sha": "7b44ee7b4b5bf9e7052f8eb58609b4a99a03a0bf", "filename": "src/test/rustdoc/fn-bound.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a6cfabc88a79fe039a9c3d0c541f6517fb9767e2/src%2Ftest%2Frustdoc%2Ffn-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6cfabc88a79fe039a9c3d0c541f6517fb9767e2/src%2Ftest%2Frustdoc%2Ffn-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ffn-bound.rs?ref=a6cfabc88a79fe039a9c3d0c541f6517fb9767e2", "patch": "@@ -0,0 +1,17 @@\n+use std::iter::Peekable;\n+\n+pub struct Span<F: Fn(&i32)> {\n+    inner: Peekable<ConditionalIterator<F>>,\n+}\n+\n+struct ConditionalIterator<F> {\n+    f: F,\n+}\n+\n+impl<F: Fn(&i32)> Iterator for ConditionalIterator<F> {\n+    type Item = ();\n+\n+    fn next(&mut self) -> Option<Self::Item> {\n+        todo!()\n+    }\n+}"}]}