{"sha": "b2490299fc2029f9b43be51f80003ebcf804f7ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNDkwMjk5ZmMyMDI5ZjliNDNiZTUxZjgwMDAzZWJjZjgwNGY3YWM=", "commit": {"author": {"name": "Christopher Serr", "email": "christopher.serr@gmail.com", "date": "2020-06-26T15:53:52Z"}, "committer": {"name": "Christopher Serr", "email": "christopher.serr@gmail.com", "date": "2020-07-02T07:32:06Z"}, "message": "Check for feature with pre-interned symbol", "tree": {"sha": "5c97eb742d26299618016773ea21914c6cd8fe39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c97eb742d26299618016773ea21914c6cd8fe39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2490299fc2029f9b43be51f80003ebcf804f7ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2490299fc2029f9b43be51f80003ebcf804f7ac", "html_url": "https://github.com/rust-lang/rust/commit/b2490299fc2029f9b43be51f80003ebcf804f7ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2490299fc2029f9b43be51f80003ebcf804f7ac/comments", "author": {"login": "CryZe", "id": 1451630, "node_id": "MDQ6VXNlcjE0NTE2MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1451630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CryZe", "html_url": "https://github.com/CryZe", "followers_url": "https://api.github.com/users/CryZe/followers", "following_url": "https://api.github.com/users/CryZe/following{/other_user}", "gists_url": "https://api.github.com/users/CryZe/gists{/gist_id}", "starred_url": "https://api.github.com/users/CryZe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CryZe/subscriptions", "organizations_url": "https://api.github.com/users/CryZe/orgs", "repos_url": "https://api.github.com/users/CryZe/repos", "events_url": "https://api.github.com/users/CryZe/events{/privacy}", "received_events_url": "https://api.github.com/users/CryZe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CryZe", "id": 1451630, "node_id": "MDQ6VXNlcjE0NTE2MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1451630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CryZe", "html_url": "https://github.com/CryZe", "followers_url": "https://api.github.com/users/CryZe/followers", "following_url": "https://api.github.com/users/CryZe/following{/other_user}", "gists_url": "https://api.github.com/users/CryZe/gists{/gist_id}", "starred_url": "https://api.github.com/users/CryZe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CryZe/subscriptions", "organizations_url": "https://api.github.com/users/CryZe/orgs", "repos_url": "https://api.github.com/users/CryZe/repos", "events_url": "https://api.github.com/users/CryZe/events{/privacy}", "received_events_url": "https://api.github.com/users/CryZe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94cd4f15d6479756af6e03a31a204bd588805cbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/94cd4f15d6479756af6e03a31a204bd588805cbd", "html_url": "https://github.com/rust-lang/rust/commit/94cd4f15d6479756af6e03a31a204bd588805cbd"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "83cd0dbfcd47e3ac916ba000bbf35e6efcc56520", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b2490299fc2029f9b43be51f80003ebcf804f7ac/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2490299fc2029f9b43be51f80003ebcf804f7ac/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=b2490299fc2029f9b43be51f80003ebcf804f7ac", "patch": "@@ -18,6 +18,7 @@ use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_hir::def_id::DefId;\n use rustc_middle::ty::layout::TyAndLayout;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_span::sym;\n use rustc_target::abi::{self, Align, Size};\n use rustc_target::spec::{HasTargetSpec, Target};\n use std::borrow::Cow;\n@@ -478,7 +479,11 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n                 let llptr = self.struct_gep(place.llval, i as u64);\n                 let load = self.load(llptr, align);\n                 scalar_load_metadata(self, load, scalar);\n-                if scalar.is_bool() { self.trunc(load, self.type_i1()) } else { load }\n+                if scalar.is_bool() {\n+                    self.trunc(load, self.type_i1())\n+                } else {\n+                    load\n+                }\n             };\n \n             OperandValue::Pair(\n@@ -654,10 +659,7 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n \n     fn fptoui_sat(&mut self, val: &'ll Value, dest_ty: &'ll Type) -> Option<&'ll Value> {\n         if self.sess().target.target.arch == \"wasm32\"\n-            && self\n-                .sess()\n-                .target_features\n-                .contains(&rustc_span::symbol::Symbol::intern(\"nontrapping-fptoint\"))\n+            && self.sess().target_features.contains(&sym::wasm_nontrapping_fptoint)\n         {\n             let src_ty = self.cx.val_ty(val);\n             let float_width = self.cx.float_width(src_ty);\n@@ -679,10 +681,7 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n \n     fn fptosi_sat(&mut self, val: &'ll Value, dest_ty: &'ll Type) -> Option<&'ll Value> {\n         if self.sess().target.target.arch == \"wasm32\"\n-            && self\n-                .sess()\n-                .target_features\n-                .contains(&rustc_span::symbol::Symbol::intern(\"nontrapping-fptoint\"))\n+            && self.sess().target_features.contains(&sym::wasm_nontrapping_fptoint)\n         {\n             let src_ty = self.cx.val_ty(val);\n             let float_width = self.cx.float_width(src_ty);"}, {"sha": "2e2ce1544109aa1dead3eae7f6f44a78a042ac54", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2490299fc2029f9b43be51f80003ebcf804f7ac/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2490299fc2029f9b43be51f80003ebcf804f7ac/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=b2490299fc2029f9b43be51f80003ebcf804f7ac", "patch": "@@ -253,7 +253,7 @@ const RISCV_WHITELIST: &[(&str, Option<Symbol>)] = &[\n const WASM_WHITELIST: &[(&str, Option<Symbol>)] = &[\n     (\"simd128\", Some(sym::wasm_target_feature)),\n     (\"atomics\", Some(sym::wasm_target_feature)),\n-    (\"nontrapping-fptoint\", Some(sym::wasm_target_feature)), // TODO: Maybe None?\n+    (\"nontrapping-fptoint\", Some(sym::wasm_target_feature)),\n ];\n \n /// When rustdoc is running, provide a list of all known features so that all their respective"}, {"sha": "2f0a0584a302b2bd72ab36ebc68def7d111644db", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2490299fc2029f9b43be51f80003ebcf804f7ac/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2490299fc2029f9b43be51f80003ebcf804f7ac/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=b2490299fc2029f9b43be51f80003ebcf804f7ac", "patch": "@@ -844,6 +844,7 @@ symbols! {\n         warn,\n         wasm_import_module,\n         wasm_target_feature,\n+        wasm_nontrapping_fptoint: \"nontrapping-fptoint\",\n         while_let,\n         windows,\n         windows_subsystem,"}]}