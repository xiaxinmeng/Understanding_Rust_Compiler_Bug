{"sha": "ca5ed4cc498ad5da22c6e1c4c0b79df07a07029e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNWVkNGNjNDk4YWQ1ZGEyMmM2ZTFjNGMwYjc5ZGYwN2EwNzAyOWU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-22T23:50:17Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-22T23:56:11Z"}, "message": "std: add benchmark for allocating-and-dropping a struct with a dtor.", "tree": {"sha": "477222397ff4e9d588a679f6f2ae7a19140ff7c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/477222397ff4e9d588a679f6f2ae7a19140ff7c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca5ed4cc498ad5da22c6e1c4c0b79df07a07029e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca5ed4cc498ad5da22c6e1c4c0b79df07a07029e", "html_url": "https://github.com/rust-lang/rust/commit/ca5ed4cc498ad5da22c6e1c4c0b79df07a07029e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca5ed4cc498ad5da22c6e1c4c0b79df07a07029e/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f7e364d3a0f5d325f3722efb9c7ae4257b04e3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f7e364d3a0f5d325f3722efb9c7ae4257b04e3d", "html_url": "https://github.com/rust-lang/rust/commit/9f7e364d3a0f5d325f3722efb9c7ae4257b04e3d"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "756b4a10d3c9042ed7aa576b50edad859e515fce", "filename": "src/libstd/ops.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ca5ed4cc498ad5da22c6e1c4c0b79df07a07029e/src%2Flibstd%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca5ed4cc498ad5da22c6e1c4c0b79df07a07029e/src%2Flibstd%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fops.rs?ref=ca5ed4cc498ad5da22c6e1c4c0b79df07a07029e", "patch": "@@ -81,3 +81,28 @@ pub trait Shr<RHS,Result> {\n pub trait Index<Index,Result> {\n     fn index(&self, index: &Index) -> Result;\n }\n+\n+#[cfg(test)]\n+mod bench {\n+\n+    use extra::test::BenchHarness;\n+    use ops::Drop;\n+\n+    // Overhead of dtors\n+\n+    struct HasDtor {\n+        x: int\n+    }\n+\n+    impl Drop for HasDtor {\n+        fn drop(&self) {\n+        }\n+    }\n+\n+    #[bench]\n+    fn alloc_obj_with_dtor(bh: &mut BenchHarness) {\n+        do bh.iter {\n+            HasDtor { x : 10 };\n+        }\n+    }\n+}\n\\ No newline at end of file"}]}