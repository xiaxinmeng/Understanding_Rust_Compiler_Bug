{"sha": "ddbbb267b63bf51b813be1d9b151563474c7e8d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkYmJiMjY3YjYzYmY1MWI4MTNiZTFkOWIxNTE1NjM0NzRjN2U4ZDg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-01-26T11:37:49Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-01-26T11:37:49Z"}, "message": "Update gimli", "tree": {"sha": "ae9bcd87bb03b224cfbef9e46436932c0997324e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae9bcd87bb03b224cfbef9e46436932c0997324e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddbbb267b63bf51b813be1d9b151563474c7e8d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddbbb267b63bf51b813be1d9b151563474c7e8d8", "html_url": "https://github.com/rust-lang/rust/commit/ddbbb267b63bf51b813be1d9b151563474c7e8d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddbbb267b63bf51b813be1d9b151563474c7e8d8/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36f6e2f5080bbc62a2fd6667c20bdbb6de9db822", "url": "https://api.github.com/repos/rust-lang/rust/commits/36f6e2f5080bbc62a2fd6667c20bdbb6de9db822", "html_url": "https://github.com/rust-lang/rust/commit/36f6e2f5080bbc62a2fd6667c20bdbb6de9db822"}], "stats": {"total": 36, "additions": 15, "deletions": 21}, "files": [{"sha": "e5346109a7354c0699191a3fc7d388643b0809a4", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ddbbb267b63bf51b813be1d9b151563474c7e8d8/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ddbbb267b63bf51b813be1d9b151563474c7e8d8/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ddbbb267b63bf51b813be1d9b151563474c7e8d8", "patch": "@@ -319,7 +319,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n [[package]]\n name = \"gimli\"\n version = \"0.16.1\"\n-source = \"git+https://github.com/gimli-rs/gimli.git#9930c6166487e9195e6ba31002685686001f906a\"\n+source = \"git+https://github.com/gimli-rs/gimli.git#bedf4f00e460e2229f40bbbad78a6d6974640ba6\"\n dependencies = [\n  \"arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\","}, {"sha": "79460ff714ec892f6df9a48abb5d38270395303c", "filename": "src/debuginfo.rs", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ddbbb267b63bf51b813be1d9b151563474c7e8d8/src%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddbbb267b63bf51b813be1d9b151563474c7e8d8/src%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo.rs?ref=ddbbb267b63bf51b813be1d9b151563474c7e8d8", "patch": "@@ -11,7 +11,7 @@ use gimli::write::{\n     RangeList, RangeListTable, Result, SectionId, StringTable, UnitEntryId, UnitId, UnitTable,\n     Writer, FileId,\n };\n-use gimli::{Endianity, Format, RunTimeEndian};\n+use gimli::{Encoding, Format, RunTimeEndian};\n \n use faerie::*;\n \n@@ -43,10 +43,8 @@ struct DebugReloc {\n }\n \n pub struct DebugContext<'tcx> {\n+    encoding: Encoding,\n     endian: RunTimeEndian,\n-    format: Format,\n-    version: u16,\n-    address_size: u8,\n \n     symbols: indexmap::IndexSet<String>,\n \n@@ -64,9 +62,13 @@ pub struct DebugContext<'tcx> {\n \n impl<'a, 'tcx: 'a> DebugContext<'tcx> {\n     pub fn new(tcx: TyCtxt, address_size: u8) -> Self {\n-        // TODO: this should be configurable\n-        let version = 3; // macOS doesn't seem to support DWARF > 3\n-        let format = Format::Dwarf32;\n+        let encoding = Encoding {\n+            format: Format::Dwarf32,\n+            // TODO: this should be configurable\n+            // macOS doesn't seem to support DWARF > 3\n+            version: 3,\n+            address_size,\n+        };\n \n         // FIXME: how to get version when building out of tree?\n         // Normally this would use option_env!(\"CFG_VERSION\").\n@@ -83,9 +85,7 @@ impl<'a, 'tcx: 'a> DebugContext<'tcx> {\n         let range_lists = RangeListTable::default();\n \n         let global_line_program = line_programs.add(LineProgram::new(\n-            version,\n-            address_size,\n-            format,\n+            encoding,\n             1,\n             1,\n             -5,\n@@ -95,7 +95,7 @@ impl<'a, 'tcx: 'a> DebugContext<'tcx> {\n             None,\n         ));\n \n-        let unit_id = units.add(CompilationUnit::new(version, address_size, format));\n+        let unit_id = units.add(CompilationUnit::new(encoding));\n         {\n             let name = strings.add(&*name);\n             let comp_dir = strings.add(&*comp_dir);\n@@ -124,10 +124,8 @@ impl<'a, 'tcx: 'a> DebugContext<'tcx> {\n         }\n \n         DebugContext {\n+            encoding,\n             endian: target_endian(tcx),\n-            format,\n-            version,\n-            address_size,\n \n             symbols: indexmap::IndexSet::new(),\n \n@@ -189,9 +187,7 @@ impl<'a, 'tcx: 'a> DebugContext<'tcx> {\n             .write(\n                 &mut debug_ranges,\n                 &mut debug_rnglists,\n-                self.format,\n-                self.version,\n-                self.address_size,\n+                self.encoding\n             )\n             .unwrap();\n         self.units\n@@ -417,9 +413,7 @@ impl<'a, 'b, 'tcx: 'b> FunctionDebugContext<'a, 'tcx> {\n         let unit = self.debug_context.units.get_mut(self.debug_context.unit_id);\n         // FIXME: add to appropriate scope intead of root\n         let entry = unit.get_mut(self.entry_id);\n-        let mut size_array = [0; 8];\n-        target_endian(tcx).write_u64(&mut size_array, code_size as u64);\n-        entry.set(gimli::DW_AT_high_pc, AttributeValue::Data8(size_array));\n+        entry.set(gimli::DW_AT_high_pc, AttributeValue::Data8(code_size as u64));\n \n         self.debug_context.unit_range_list.0.push(Range {\n             begin: Address::Relative {"}]}