{"sha": "52872ca1cbefd48c3639dcf7d3b32fa0d460a1df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyODcyY2ExY2JlZmQ0OGMzNjM5ZGNmN2QzYjMyZmEwZDQ2MGExZGY=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-15T09:44:27Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-19T15:03:21Z"}, "message": "Add a stat for local DefId density", "tree": {"sha": "761e29e4ed18598cf55e5c05a15077aac22c7547", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/761e29e4ed18598cf55e5c05a15077aac22c7547"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52872ca1cbefd48c3639dcf7d3b32fa0d460a1df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52872ca1cbefd48c3639dcf7d3b32fa0d460a1df", "html_url": "https://github.com/rust-lang/rust/commit/52872ca1cbefd48c3639dcf7d3b32fa0d460a1df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52872ca1cbefd48c3639dcf7d3b32fa0d460a1df/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1a81c779dcc6022ff591f219a0d14e001a51f7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a81c779dcc6022ff591f219a0d14e001a51f7d", "html_url": "https://github.com/rust-lang/rust/commit/d1a81c779dcc6022ff591f219a0d14e001a51f7d"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "cecad5f2eebd74cc8df61b95aa04098225e2fdc5", "filename": "src/librustc/ty/query/stats.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/52872ca1cbefd48c3639dcf7d3b32fa0d460a1df/src%2Flibrustc%2Fty%2Fquery%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52872ca1cbefd48c3639dcf7d3b32fa0d460a1df/src%2Flibrustc%2Fty%2Fquery%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fstats.rs?ref=52872ca1cbefd48c3639dcf7d3b32fa0d460a1df", "patch": "@@ -2,10 +2,27 @@ use crate::ty::query::config::QueryAccessors;\n use crate::ty::query::plumbing::QueryState;\n use crate::ty::query::queries;\n use crate::ty::TyCtxt;\n+use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n \n use std::any::type_name;\n use std::mem;\n \n+trait KeyStats {\n+    fn key_stats(&self, stats: &mut QueryStats);\n+}\n+\n+impl<T> KeyStats for T {\n+    default fn key_stats(&self, _: &mut QueryStats) {}\n+}\n+\n+impl KeyStats for DefId {\n+    fn key_stats(&self, stats: &mut QueryStats) {\n+        if self.krate == LOCAL_CRATE {\n+            stats.local_def_id_keys = Some(stats.local_def_id_keys.unwrap_or(0) + 1);\n+        }\n+    }\n+}\n+\n #[derive(Clone)]\n struct QueryStats {\n     name: &'static str,\n@@ -15,13 +32,14 @@ struct QueryStats {\n     value_size: usize,\n     value_type: &'static str,\n     entry_count: usize,\n+    local_def_id_keys: Option<usize>,\n }\n \n fn stats<'tcx, Q: QueryAccessors<'tcx>>(\n     name: &'static str,\n     map: &QueryState<'tcx, Q>,\n ) -> QueryStats {\n-    QueryStats {\n+    let mut stats = QueryStats {\n         name,\n         #[cfg(debug_assertions)]\n         cache_hits: map.cache_hits,\n@@ -32,7 +50,14 @@ fn stats<'tcx, Q: QueryAccessors<'tcx>>(\n         value_size: mem::size_of::<Q::Value>(),\n         value_type: type_name::<Q::Value>(),\n         entry_count: map.iter_results(|results| results.count()),\n-    }\n+        local_def_id_keys: None,\n+    };\n+    map.iter_results(|results| {\n+        for (key, _, _) in results {\n+            key.key_stats(&mut stats)\n+        }\n+    });\n+    stats\n }\n \n pub fn print_stats(tcx: TyCtxt<'_>) {\n@@ -78,6 +103,14 @@ pub fn print_stats(tcx: TyCtxt<'_>) {\n     for q in query_value_count.iter().rev() {\n         println!(\"   {} - {}\", q.name, q.entry_count);\n     }\n+\n+    let mut def_id_density: Vec<_> =\n+        queries.iter().filter(|q| q.local_def_id_keys.is_some()).collect();\n+    def_id_density.sort_by_key(|q| q.local_def_id_keys.unwrap());\n+    println!(\"\\nLocal DefId density:\");\n+    for q in def_id_density.iter().rev() {\n+        println!(\"   {} - {}\", q.name, q.local_def_id_keys.unwrap());\n+    }\n }\n \n macro_rules! print_stats {"}]}