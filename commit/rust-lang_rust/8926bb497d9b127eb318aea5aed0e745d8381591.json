{"sha": "8926bb497d9b127eb318aea5aed0e745d8381591", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MjZiYjQ5N2Q5YjEyN2ViMzE4YWVhNWFlZDBlNzQ1ZDgzODE1OTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-30T05:26:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-30T05:26:27Z"}, "message": "Auto merge of #70536 - Centril:rustc-middle, r=eddyb\n\nRename `librustc` to `librustc_middle`\n\nHere we rename `librustc` to `librustc_middle`.\n\nThis crate is not nearly as large or central as it was previously and so it doesn't make much sense to give it such a central name as `librustc` (\"the entry point to the compiler\"). Moreover, there is already a `rustc` crate which is has the actual `fn main` of `rustc`, so having `librustc` is confusing relative to that.\n\nr? @eddyb", "tree": {"sha": "637b0151ddc296b61025dd9b1e5424cb99893a79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/637b0151ddc296b61025dd9b1e5424cb99893a79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8926bb497d9b127eb318aea5aed0e745d8381591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8926bb497d9b127eb318aea5aed0e745d8381591", "html_url": "https://github.com/rust-lang/rust/commit/8926bb497d9b127eb318aea5aed0e745d8381591", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8926bb497d9b127eb318aea5aed0e745d8381591/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0afdf43dc1d9be4c8b422840166b51dd99e56a16", "url": "https://api.github.com/repos/rust-lang/rust/commits/0afdf43dc1d9be4c8b422840166b51dd99e56a16", "html_url": "https://github.com/rust-lang/rust/commit/0afdf43dc1d9be4c8b422840166b51dd99e56a16"}, {"sha": "2a9283914721317564e0d5a6672e4f39767a9311", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a9283914721317564e0d5a6672e4f39767a9311", "html_url": "https://github.com/rust-lang/rust/commit/2a9283914721317564e0d5a6672e4f39767a9311"}], "stats": {"total": 3578, "additions": 1804, "deletions": 1774}, "files": [{"sha": "e8b21a247b289ab5013740a71b3cf55ccb3306ef", "filename": "Cargo.lock", "status": "modified", "additions": 53, "deletions": 53, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -3132,39 +3132,6 @@ dependencies = [\n  \"rustc-workspace-hack\",\n ]\n \n-[[package]]\n-name = \"rustc\"\n-version = \"0.0.0\"\n-dependencies = [\n- \"arena\",\n- \"backtrace\",\n- \"bitflags\",\n- \"byteorder\",\n- \"jobserver\",\n- \"log\",\n- \"measureme\",\n- \"parking_lot 0.10.0\",\n- \"polonius-engine\",\n- \"rustc-rayon\",\n- \"rustc-rayon-core\",\n- \"rustc_apfloat\",\n- \"rustc_ast\",\n- \"rustc_attr\",\n- \"rustc_data_structures\",\n- \"rustc_errors\",\n- \"rustc_feature\",\n- \"rustc_hir\",\n- \"rustc_index\",\n- \"rustc_macros\",\n- \"rustc_query_system\",\n- \"rustc_session\",\n- \"rustc_span\",\n- \"rustc_target\",\n- \"scoped-tls\",\n- \"serialize\",\n- \"smallvec 1.0.0\",\n-]\n-\n [[package]]\n name = \"rustc-ap-arena\"\n version = \"642.0.0\"\n@@ -3603,7 +3570,6 @@ dependencies = [\n  \"libc\",\n  \"log\",\n  \"measureme\",\n- \"rustc\",\n  \"rustc-demangle\",\n  \"rustc_ast\",\n  \"rustc_attr\",\n@@ -3616,6 +3582,7 @@ dependencies = [\n  \"rustc_incremental\",\n  \"rustc_index\",\n  \"rustc_llvm\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n@@ -3634,7 +3601,6 @@ dependencies = [\n  \"log\",\n  \"memmap\",\n  \"num_cpus\",\n- \"rustc\",\n  \"rustc_apfloat\",\n  \"rustc_ast\",\n  \"rustc_attr\",\n@@ -3645,6 +3611,7 @@ dependencies = [\n  \"rustc_incremental\",\n  \"rustc_index\",\n  \"rustc_metadata\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_symbol_mangling\",\n@@ -3685,7 +3652,6 @@ dependencies = [\n  \"env_logger 0.7.1\",\n  \"lazy_static 1.4.0\",\n  \"log\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_codegen_ssa\",\n@@ -3698,6 +3664,7 @@ dependencies = [\n  \"rustc_interface\",\n  \"rustc_lint\",\n  \"rustc_metadata\",\n+ \"rustc_middle\",\n  \"rustc_mir\",\n  \"rustc_parse\",\n  \"rustc_plugin_impl\",\n@@ -3797,11 +3764,11 @@ dependencies = [\n  \"graphviz\",\n  \"log\",\n  \"rand 0.7.3\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_fs_util\",\n  \"rustc_hir\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"serialize\",\n@@ -3821,13 +3788,13 @@ version = \"0.0.0\"\n dependencies = [\n  \"graphviz\",\n  \"log\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_macros\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n@@ -3840,7 +3807,6 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"once_cell\",\n- \"rustc\",\n  \"rustc-rayon\",\n  \"rustc_ast\",\n  \"rustc_ast_lowering\",\n@@ -3857,6 +3823,7 @@ dependencies = [\n  \"rustc_infer\",\n  \"rustc_lint\",\n  \"rustc_metadata\",\n+ \"rustc_middle\",\n  \"rustc_mir\",\n  \"rustc_mir_build\",\n  \"rustc_parse\",\n@@ -3890,7 +3857,6 @@ name = \"rustc_lint\"\n version = \"0.0.0\"\n dependencies = [\n  \"log\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_attr\",\n@@ -3900,6 +3866,7 @@ dependencies = [\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_infer\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n@@ -3933,7 +3900,6 @@ dependencies = [\n  \"flate2\",\n  \"log\",\n  \"memmap\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n@@ -3942,6 +3908,7 @@ dependencies = [\n  \"rustc_hir\",\n  \"rustc_hir_pretty\",\n  \"rustc_index\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n@@ -3951,6 +3918,39 @@ dependencies = [\n  \"winapi 0.3.8\",\n ]\n \n+[[package]]\n+name = \"rustc_middle\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"arena\",\n+ \"backtrace\",\n+ \"bitflags\",\n+ \"byteorder\",\n+ \"jobserver\",\n+ \"log\",\n+ \"measureme\",\n+ \"parking_lot 0.10.0\",\n+ \"polonius-engine\",\n+ \"rustc-rayon\",\n+ \"rustc-rayon-core\",\n+ \"rustc_apfloat\",\n+ \"rustc_ast\",\n+ \"rustc_attr\",\n+ \"rustc_data_structures\",\n+ \"rustc_errors\",\n+ \"rustc_feature\",\n+ \"rustc_hir\",\n+ \"rustc_index\",\n+ \"rustc_macros\",\n+ \"rustc_query_system\",\n+ \"rustc_session\",\n+ \"rustc_span\",\n+ \"rustc_target\",\n+ \"scoped-tls\",\n+ \"serialize\",\n+ \"smallvec 1.0.0\",\n+]\n+\n [[package]]\n name = \"rustc_mir\"\n version = \"0.0.0\"\n@@ -3961,7 +3961,6 @@ dependencies = [\n  \"log\",\n  \"log_settings\",\n  \"polonius-engine\",\n- \"rustc\",\n  \"rustc_apfloat\",\n  \"rustc_ast\",\n  \"rustc_ast_pretty\",\n@@ -3973,6 +3972,7 @@ dependencies = [\n  \"rustc_infer\",\n  \"rustc_lexer\",\n  \"rustc_macros\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n@@ -3987,7 +3987,6 @@ version = \"0.0.0\"\n dependencies = [\n  \"arena\",\n  \"log\",\n- \"rustc\",\n  \"rustc_apfloat\",\n  \"rustc_ast\",\n  \"rustc_attr\",\n@@ -3997,6 +3996,7 @@ dependencies = [\n  \"rustc_index\",\n  \"rustc_infer\",\n  \"rustc_macros\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n@@ -4028,7 +4028,6 @@ name = \"rustc_passes\"\n version = \"0.0.0\"\n dependencies = [\n  \"log\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n@@ -4037,6 +4036,7 @@ dependencies = [\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_infer\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n@@ -4047,12 +4047,12 @@ dependencies = [\n name = \"rustc_plugin_impl\"\n version = \"0.0.0\"\n dependencies = [\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_lint\",\n  \"rustc_metadata\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n ]\n@@ -4062,12 +4062,12 @@ name = \"rustc_privacy\"\n version = \"0.0.0\"\n dependencies = [\n  \"log\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_typeck\",\n@@ -4096,7 +4096,6 @@ dependencies = [\n  \"arena\",\n  \"bitflags\",\n  \"log\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_ast_lowering\",\n  \"rustc_ast_pretty\",\n@@ -4107,6 +4106,7 @@ dependencies = [\n  \"rustc_feature\",\n  \"rustc_hir\",\n  \"rustc_metadata\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"smallvec 1.0.0\",\n@@ -4119,12 +4119,12 @@ dependencies = [\n  \"log\",\n  \"rls-data\",\n  \"rls-span\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n  \"rustc_hir\",\n  \"rustc_hir_pretty\",\n+ \"rustc_middle\",\n  \"rustc_parse\",\n  \"rustc_session\",\n  \"rustc_span\",\n@@ -4169,12 +4169,12 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"punycode\",\n- \"rustc\",\n  \"rustc-demangle\",\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_hir\",\n  \"rustc_metadata\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n@@ -4209,7 +4209,6 @@ version = \"0.0.0\"\n dependencies = [\n  \"fmt_macros\",\n  \"log\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n@@ -4218,6 +4217,7 @@ dependencies = [\n  \"rustc_index\",\n  \"rustc_infer\",\n  \"rustc_macros\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n@@ -4229,12 +4229,12 @@ name = \"rustc_traits\"\n version = \"0.0.0\"\n dependencies = [\n  \"log\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_hir\",\n  \"rustc_infer\",\n  \"rustc_macros\",\n+ \"rustc_middle\",\n  \"rustc_span\",\n  \"rustc_target\",\n  \"rustc_trait_selection\",\n@@ -4246,10 +4246,10 @@ name = \"rustc_ty\"\n version = \"0.0.0\"\n dependencies = [\n  \"log\",\n- \"rustc\",\n  \"rustc_data_structures\",\n  \"rustc_hir\",\n  \"rustc_infer\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n@@ -4262,14 +4262,14 @@ version = \"0.0.0\"\n dependencies = [\n  \"arena\",\n  \"log\",\n- \"rustc\",\n  \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_infer\",\n+ \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\","}, {"sha": "9cc0109069e9c34d58c04a704ca0ca8def3eb8fb", "filename": "src/libcore/clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibcore%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibcore%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fclone.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -169,7 +169,7 @@ pub struct AssertParamIsCopy<T: Copy + ?Sized> {\n /// Implementations of `Clone` for primitive types.\n ///\n /// Implementations that cannot be described in Rust\n-/// are implemented in `SelectionContext::copy_clone_conditions()` in librustc.\n+/// are implemented in `SelectionContext::copy_clone_conditions()` in librustc_middle.\n mod impls {\n \n     use super::Clone;"}, {"sha": "9b13766e9c43fa5b5c3c096f3bd001301e2729fe", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -759,7 +759,7 @@ impl<T: ?Sized> Unpin for *mut T {}\n /// Implementations of `Copy` for primitive types.\n ///\n /// Implementations that cannot be described in Rust\n-/// are implemented in `SelectionContext::copy_clone_conditions()` in librustc.\n+/// are implemented in `SelectionContext::copy_clone_conditions()` in librustc_middle.\n mod copy_impls {\n \n     use super::Copy;"}, {"sha": "9bbdce94a0623b0f7fb585a360405a4cb2f1f840", "filename": "src/libcore/raw.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibcore%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibcore%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fraw.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -6,7 +6,7 @@\n //! They can be used as targets of transmutes in unsafe code for manipulating\n //! the raw representations directly.\n //!\n-//! Their definition should always match the ABI defined in `rustc::back::abi`.\n+//! Their definition should always match the ABI defined in `rustc_target::abi`.\n \n /// The representation of a trait object like `&SomeTrait`.\n ///"}, {"sha": "ae542cec170a3ee7146142a057373b4744fde8f1", "filename": "src/librustc/arena.rs", "status": "removed", "additions": 0, "deletions": 132, "changes": 132, "blob_url": "https://github.com/rust-lang/rust/blob/0afdf43dc1d9be4c8b422840166b51dd99e56a16/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0afdf43dc1d9be4c8b422840166b51dd99e56a16/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=0afdf43dc1d9be4c8b422840166b51dd99e56a16", "patch": "@@ -1,132 +0,0 @@\n-/// This declares a list of types which can be allocated by `Arena`.\n-///\n-/// The `few` modifier will cause allocation to use the shared arena and recording the destructor.\n-/// This is faster and more memory efficient if there's only a few allocations of the type.\n-/// Leaving `few` out will cause the type to get its own dedicated `TypedArena` which is\n-/// faster and more memory efficient if there is lots of allocations.\n-///\n-/// Specifying the `decode` modifier will add decode impls for &T and &[T] where T is the type\n-/// listed. These impls will appear in the implement_ty_decoder! macro.\n-#[macro_export]\n-macro_rules! arena_types {\n-    ($macro:path, $args:tt, $tcx:lifetime) => (\n-        $macro!($args, [\n-            [] layouts: rustc::ty::layout::Layout,\n-            [] generics: rustc::ty::Generics,\n-            [] trait_def: rustc::ty::TraitDef,\n-            [] adt_def: rustc::ty::AdtDef,\n-            [] steal_mir: rustc::ty::steal::Steal<rustc::mir::BodyAndCache<$tcx>>,\n-            [] mir: rustc::mir::BodyAndCache<$tcx>,\n-            [] steal_promoted: rustc::ty::steal::Steal<\n-                rustc_index::vec::IndexVec<\n-                    rustc::mir::Promoted,\n-                    rustc::mir::BodyAndCache<$tcx>\n-                >\n-            >,\n-            [] promoted: rustc_index::vec::IndexVec<\n-                rustc::mir::Promoted,\n-                rustc::mir::BodyAndCache<$tcx>\n-            >,\n-            [decode] tables: rustc::ty::TypeckTables<$tcx>,\n-            [decode] borrowck_result: rustc::mir::BorrowCheckResult<$tcx>,\n-            [] const_allocs: rustc::mir::interpret::Allocation,\n-            [] vtable_method: Option<(\n-                rustc_hir::def_id::DefId,\n-                rustc::ty::subst::SubstsRef<$tcx>\n-            )>,\n-            [few, decode] mir_keys: rustc_hir::def_id::DefIdSet,\n-            [decode] specialization_graph: rustc::traits::specialization_graph::Graph,\n-            [] region_scope_tree: rustc::middle::region::ScopeTree,\n-            [] item_local_set: rustc_hir::ItemLocalSet,\n-            [decode] mir_const_qualif: rustc_index::bit_set::BitSet<rustc::mir::Local>,\n-            [] trait_impls_of: rustc::ty::trait_def::TraitImpls,\n-            [] associated_items: rustc::ty::AssociatedItems,\n-            [] dropck_outlives:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx,\n-                        rustc::traits::query::DropckOutlivesResult<'tcx>\n-                    >\n-                >,\n-            [] normalize_projection_ty:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx,\n-                        rustc::traits::query::NormalizationResult<'tcx>\n-                    >\n-                >,\n-            [] implied_outlives_bounds:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx,\n-                        Vec<rustc::traits::query::OutlivesBound<'tcx>>\n-                    >\n-                >,\n-            [] type_op_subtype:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx, ()>\n-                >,\n-            [] type_op_normalize_poly_fn_sig:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx, rustc::ty::PolyFnSig<'tcx>>\n-                >,\n-            [] type_op_normalize_fn_sig:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx, rustc::ty::FnSig<'tcx>>\n-                >,\n-            [] type_op_normalize_predicate:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx, rustc::ty::Predicate<'tcx>>\n-                >,\n-            [] type_op_normalize_ty:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx, rustc::ty::Ty<'tcx>>\n-                >,\n-            [few] crate_inherent_impls: rustc::ty::CrateInherentImpls,\n-            [few] upstream_monomorphizations:\n-                rustc_hir::def_id::DefIdMap<\n-                    rustc_data_structures::fx::FxHashMap<\n-                        rustc::ty::subst::SubstsRef<'tcx>,\n-                        rustc_hir::def_id::CrateNum\n-                    >\n-                >,\n-            [few] diagnostic_items: rustc_data_structures::fx::FxHashMap<\n-                rustc_span::symbol::Symbol,\n-                rustc_hir::def_id::DefId,\n-            >,\n-            [few] resolve_lifetimes: rustc::middle::resolve_lifetime::ResolveLifetimes,\n-            [few] lint_levels: rustc::lint::LintLevelMap,\n-            [few] stability_index: rustc::middle::stability::Index<'tcx>,\n-            [few] features: rustc_feature::Features,\n-            [few] all_traits: Vec<rustc_hir::def_id::DefId>,\n-            [few] privacy_access_levels: rustc::middle::privacy::AccessLevels,\n-            [few] target_features_whitelist: rustc_data_structures::fx::FxHashMap<\n-                String,\n-                Option<rustc_span::symbol::Symbol>\n-            >,\n-            [few] wasm_import_module_map: rustc_data_structures::fx::FxHashMap<\n-                rustc_hir::def_id::DefId,\n-                String\n-            >,\n-            [few] get_lib_features: rustc::middle::lib_features::LibFeatures,\n-            [few] defined_lib_features: rustc::middle::lang_items::LanguageItems,\n-            [few] visible_parent_map: rustc_hir::def_id::DefIdMap<rustc_hir::def_id::DefId>,\n-            [few] foreign_module: rustc::middle::cstore::ForeignModule,\n-            [few] foreign_modules: Vec<rustc::middle::cstore::ForeignModule>,\n-            [few] reachable_non_generics: rustc_hir::def_id::DefIdMap<\n-                rustc::middle::exported_symbols::SymbolExportLevel\n-            >,\n-            [few] crate_variances: rustc::ty::CrateVariancesMap<'tcx>,\n-            [few] inferred_outlives_crate: rustc::ty::CratePredicatesMap<'tcx>,\n-            [] upvars: rustc_data_structures::fx::FxIndexMap<rustc_hir::HirId, rustc_hir::Upvar>,\n-\n-            // Interned types\n-            [] tys: rustc::ty::TyS<$tcx>,\n-\n-            // HIR query types\n-            [few] indexed_hir: rustc::hir::map::IndexedHir<$tcx>,\n-            [few] hir_definitions: rustc_hir::definitions::Definitions,\n-            [] hir_owner: rustc::hir::Owner<$tcx>,\n-            [] hir_owner_nodes: rustc::hir::OwnerNodes<$tcx>,\n-        ], $tcx);\n-    )\n-}\n-\n-arena_types!(arena::declare_arena, [], 'tcx);"}, {"sha": "90d417a45fd93a30dca670d22a15fb563e88ec4a", "filename": "src/librustc_ast/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_ast%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_ast%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast%2Fentry.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -10,7 +10,7 @@ pub enum EntryPointType {\n     OtherMain, // Not an entry point, but some other function named main\n }\n \n-// Beware, this is duplicated in librustc/middle/entry.rs, make sure to keep\n+// Beware, this is duplicated in librustc_middle/middle/entry.rs, make sure to keep\n // them in sync.\n pub fn entry_point_type(item: &Item, depth: usize) -> EntryPointType {\n     match item.kind {"}, {"sha": "3c634ff40ccb1a524182b1b4dbc046888e77a9f9", "filename": "src/librustc_ast/expand/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_ast%2Fexpand%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_ast%2Fexpand%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast%2Fexpand%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,4 +1,4 @@\n-//! Definitions shared by macros / syntax extensions and e.g. librustc.\n+//! Definitions shared by macros / syntax extensions and e.g. librustc_middle.\n \n use crate::ast::Attribute;\n use rustc_span::symbol::sym;"}, {"sha": "1687f828f240f904ac780c4347cdba8bfb58a258", "filename": "src/librustc_ast/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_ast%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_ast%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -54,7 +54,7 @@ use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n \n /// Requirements for a `StableHashingContext` to be used in this crate.\n /// This is a hack to allow using the `HashStable_Generic` derive macro\n-/// instead of implementing everything in librustc.\n+/// instead of implementing everything in librustc_middle.\n pub trait HashStableContext: rustc_span::HashStableContext {\n     fn hash_attr(&mut self, _: &ast::Attribute, hasher: &mut StableHasher);\n }"}, {"sha": "9028edc73a031fc91f079550c9058e5a1983ab6d", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -97,7 +97,7 @@ struct LoweringContext<'a, 'hir: 'a> {\n \n     /// HACK(Centril): there is a cyclic dependency between the parser and lowering\n     /// if we don't have this function pointer. To avoid that dependency so that\n-    /// librustc is independent of the parser, we use dynamic dispatch here.\n+    /// librustc_middle is independent of the parser, we use dynamic dispatch here.\n     nt_to_tokenstream: NtToTokenstream,\n \n     /// Used to allocate HIR nodes"}, {"sha": "ab5a844e58f7a18d9aa8496d77c1022cb2c0b3ed", "filename": "src/librustc_attr/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_attr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_attr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2Fbuiltin.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -870,7 +870,7 @@ pub fn find_repr_attrs(sess: &ParseSess, attr: &Attribute) -> Vec<ReprAttr> {\n                     let parse_alignment = |node: &ast::LitKind| -> Result<u32, &'static str> {\n                         if let ast::LitKind::Int(literal, ast::LitIntType::Unsuffixed) = node {\n                             if literal.is_power_of_two() {\n-                                // rustc::ty::layout::Align restricts align to <= 2^29\n+                                // rustc_middle::ty::layout::Align restricts align to <= 2^29\n                                 if *literal <= 1 << 29 {\n                                     Ok(*literal as u32)\n                                 } else {"}, {"sha": "64e66595d92d9feaacb5cbb5ee4739bc60e58239", "filename": "src/librustc_codegen_llvm/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2FCargo.toml?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -16,7 +16,7 @@ flate2 = \"1.0\"\n libc = \"0.2\"\n measureme = \"0.7.1\"\n log = \"0.4\"\n-rustc = { path = \"../librustc\" }\n+rustc_middle = { path = \"../librustc_middle\" }\n rustc-demangle = \"0.1\"\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_codegen_ssa = { path = \"../librustc_codegen_ssa\" }"}, {"sha": "38dd879de7d591deb8b12a3b608ed9278b948acd", "filename": "src/librustc_codegen_llvm/abi.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fabi.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -5,19 +5,19 @@ use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n \n-use rustc::bug;\n-use rustc::ty::layout::{self};\n-use rustc::ty::Ty;\n use rustc_codegen_ssa::mir::operand::OperandValue;\n use rustc_codegen_ssa::mir::place::PlaceRef;\n use rustc_codegen_ssa::traits::*;\n use rustc_codegen_ssa::MemFlags;\n+use rustc_middle::bug;\n+use rustc_middle::ty::layout::{self};\n+use rustc_middle::ty::Ty;\n use rustc_target::abi::call::ArgAbi;\n use rustc_target::abi::{HasDataLayout, LayoutOf};\n \n use libc::c_uint;\n \n-pub use rustc::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n+pub use rustc_middle::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n pub use rustc_target::abi::call::*;\n pub use rustc_target::spec::abi::Abi;\n "}, {"sha": "a78546571e2919b5c412586ea328e54e4d540b42", "filename": "src/librustc_codegen_llvm/allocator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fallocator.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,8 +1,8 @@\n use crate::attributes;\n use libc::c_uint;\n-use rustc::bug;\n-use rustc::ty::TyCtxt;\n use rustc_ast::expand::allocator::{AllocatorKind, AllocatorTy, ALLOCATOR_METHODS};\n+use rustc_middle::bug;\n+use rustc_middle::ty::TyCtxt;\n \n use crate::llvm::{self, False, True};\n use crate::ModuleLlvm;"}, {"sha": "e4d6d7d8af90e54713b7b17400a8fd93d00471bb", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,15 +2,15 @@\n \n use std::ffi::CString;\n \n-use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc::ty::layout::HasTyCtxt;\n-use rustc::ty::query::Providers;\n-use rustc::ty::{self, Ty, TyCtxt};\n use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::const_cstr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::ty::layout::HasTyCtxt;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_session::config::{OptLevel, Sanitizer};\n use rustc_session::Session;\n use rustc_target::abi::call::Conv;"}, {"sha": "816329e06c7a52f8bb639a292a70f72098cd359d", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -6,9 +6,6 @@ use crate::llvm::archive_ro::ArchiveRO;\n use crate::llvm::{self, False, True};\n use crate::{LlvmCodegenBackend, ModuleLlvm};\n use log::{debug, info};\n-use rustc::bug;\n-use rustc::dep_graph::WorkProduct;\n-use rustc::middle::exported_symbols::SymbolExportLevel;\n use rustc_codegen_ssa::back::lto::{LtoModuleCodegen, SerializedModule, ThinModule, ThinShared};\n use rustc_codegen_ssa::back::symbol_export;\n use rustc_codegen_ssa::back::write::{CodegenContext, FatLTOInput, ModuleConfig};\n@@ -17,6 +14,9 @@ use rustc_codegen_ssa::{ModuleCodegen, ModuleKind, RLIB_BYTECODE_EXTENSION};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{FatalError, Handler};\n use rustc_hir::def_id::LOCAL_CRATE;\n+use rustc_middle::bug;\n+use rustc_middle::dep_graph::WorkProduct;\n+use rustc_middle::middle::exported_symbols::SymbolExportLevel;\n use rustc_session::cgu_reuse_tracker::CguReuse;\n use rustc_session::config::{self, Lto};\n "}, {"sha": "5708cb4e654184e2fbd45b69fc8a3008bc952d8c", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -14,15 +14,15 @@ use crate::type_::Type;\n use crate::LlvmCodegenBackend;\n use crate::ModuleLlvm;\n use log::debug;\n-use rustc::bug;\n-use rustc::ty::TyCtxt;\n use rustc_codegen_ssa::back::write::{BitcodeSection, CodegenContext, EmitObj, ModuleConfig};\n use rustc_codegen_ssa::traits::*;\n use rustc_codegen_ssa::{CompiledModule, ModuleCodegen, RLIB_BYTECODE_EXTENSION};\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_errors::{FatalError, Handler};\n use rustc_fs_util::{link_or_copy, path_to_c_string};\n use rustc_hir::def_id::LOCAL_CRATE;\n+use rustc_middle::bug;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::config::{self, Lto, OutputType, Passes, Sanitizer, SwitchWithOptPath};\n use rustc_session::Session;\n "}, {"sha": "e5f73473b72a6159aab9f926c9f1fa9e0bb73157", "filename": "src/librustc_codegen_llvm/base.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbase.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -23,17 +23,17 @@ use crate::llvm;\n use crate::metadata;\n use crate::value::Value;\n \n-use rustc::dep_graph;\n-use rustc::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n-use rustc::middle::cstore::EncodedMetadata;\n-use rustc::middle::exported_symbols;\n-use rustc::mir::mono::{Linkage, Visibility};\n-use rustc::ty::TyCtxt;\n use rustc_codegen_ssa::base::maybe_create_entry_wrapper;\n use rustc_codegen_ssa::mono_item::MonoItemExt;\n use rustc_codegen_ssa::traits::*;\n use rustc_codegen_ssa::{ModuleCodegen, ModuleKind};\n use rustc_data_structures::small_c_str::SmallCStr;\n+use rustc_middle::dep_graph;\n+use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n+use rustc_middle::middle::cstore::EncodedMetadata;\n+use rustc_middle::middle::exported_symbols;\n+use rustc_middle::mir::mono::{Linkage, Visibility};\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::config::DebugInfo;\n use rustc_span::symbol::Symbol;\n "}, {"sha": "35946fb71c3e02e1740441c3baf86789ec3f793a", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -7,8 +7,6 @@ use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n use libc::{c_char, c_uint};\n use log::debug;\n-use rustc::ty::layout::{self, Align, Size, TyAndLayout};\n-use rustc::ty::{self, Ty, TyCtxt};\n use rustc_codegen_ssa::base::to_immediate;\n use rustc_codegen_ssa::common::{IntPredicate, RealPredicate, TypeKind};\n use rustc_codegen_ssa::mir::operand::{OperandRef, OperandValue};\n@@ -18,6 +16,8 @@ use rustc_codegen_ssa::MemFlags;\n use rustc_data_structures::const_cstr;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::layout::{self, Align, Size, TyAndLayout};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_session::config::{self, Sanitizer};\n use rustc_target::spec::{HasTargetSpec, Target};\n use std::borrow::Cow;\n@@ -302,9 +302,9 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         lhs: Self::Value,\n         rhs: Self::Value,\n     ) -> (Self::Value, Self::Value) {\n-        use rustc::ty::{Int, Uint};\n         use rustc_ast::ast::IntTy::*;\n         use rustc_ast::ast::UintTy::*;\n+        use rustc_middle::ty::{Int, Uint};\n \n         let new_kind = match ty.kind {\n             Int(t @ Isize) => Int(t.normalize(self.tcx.sess.target.ptr_width)),"}, {"sha": "0759823c07a851d649f2698042de6f660bafc85b", "filename": "src/librustc_codegen_llvm/callee.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcallee.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -12,8 +12,8 @@ use crate::value::Value;\n use log::debug;\n use rustc_codegen_ssa::traits::*;\n \n-use rustc::ty::layout::{FnAbiExt, HasTyCtxt};\n-use rustc::ty::{Instance, TypeFoldable};\n+use rustc_middle::ty::layout::{FnAbiExt, HasTyCtxt};\n+use rustc_middle::ty::{Instance, TypeFoldable};\n \n /// Codegens a reference to a fn/method item, monomorphizing and\n /// inlining as it goes."}, {"sha": "01c8e02fdc2ba380df1f06e324432b4ad5acae77", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -8,13 +8,13 @@ use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n use log::debug;\n-use rustc::bug;\n use rustc_codegen_ssa::traits::*;\n+use rustc_middle::bug;\n \n use crate::consts::const_alloc_to_llvm;\n-use rustc::mir::interpret::{Allocation, GlobalAlloc, Scalar};\n-use rustc::ty::layout::{self, HasDataLayout, LayoutOf, Size, TyAndLayout};\n use rustc_codegen_ssa::mir::place::PlaceRef;\n+use rustc_middle::mir::interpret::{Allocation, GlobalAlloc, Scalar};\n+use rustc_middle::ty::layout::{self, HasDataLayout, LayoutOf, Size, TyAndLayout};\n \n use libc::{c_char, c_uint};\n "}, {"sha": "db92f3d382f6e57848159cf869fc04de13eb0ad9", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -7,16 +7,18 @@ use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n use libc::c_uint;\n use log::debug;\n-use rustc::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n-use rustc::mir::interpret::{read_target_uint, Allocation, ConstValue, ErrorHandled, Pointer};\n-use rustc::mir::mono::MonoItem;\n-use rustc::ty::layout::{self, Align, LayoutOf, Size};\n-use rustc::ty::{self, Instance, Ty};\n-use rustc::{bug, span_bug};\n use rustc_codegen_ssa::traits::*;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::Node;\n+use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n+use rustc_middle::mir::interpret::{\n+    read_target_uint, Allocation, ConstValue, ErrorHandled, Pointer,\n+};\n+use rustc_middle::mir::mono::MonoItem;\n+use rustc_middle::ty::layout::{self, Align, LayoutOf, Size};\n+use rustc_middle::ty::{self, Instance, Ty};\n+use rustc_middle::{bug, span_bug};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use rustc_target::abi::HasDataLayout;"}, {"sha": "add1f46a56d37e4dcb5fd2cf103c74cdefc163b4", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -6,18 +6,18 @@ use crate::llvm_util;\n use crate::type_::Type;\n use crate::value::Value;\n \n-use rustc::bug;\n-use rustc::mir::mono::CodegenUnit;\n-use rustc::ty::layout::{\n-    HasParamEnv, LayoutError, LayoutOf, PointeeInfo, Size, TyAndLayout, VariantIdx,\n-};\n-use rustc::ty::{self, Instance, Ty, TyCtxt};\n use rustc_codegen_ssa::base::wants_msvc_seh;\n use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::base_n;\n use rustc_data_structures::const_cstr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::small_c_str::SmallCStr;\n+use rustc_middle::bug;\n+use rustc_middle::mir::mono::CodegenUnit;\n+use rustc_middle::ty::layout::{\n+    HasParamEnv, LayoutError, LayoutOf, PointeeInfo, Size, TyAndLayout, VariantIdx,\n+};\n+use rustc_middle::ty::{self, Instance, Ty, TyCtxt};\n use rustc_session::config::{self, CFGuard, DebugInfo};\n use rustc_session::Session;\n use rustc_span::source_map::{Span, DUMMY_SP};"}, {"sha": "e2eae4ac427e5c7a6eb75bca6489e9eb56a4bca4", "filename": "src/librustc_codegen_llvm/debuginfo/create_scope_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -6,7 +6,7 @@ use rustc_codegen_ssa::traits::*;\n use crate::common::CodegenCx;\n use crate::llvm;\n use crate::llvm::debuginfo::{DIScope, DISubprogram};\n-use rustc::mir::{Body, SourceScope};\n+use rustc_middle::mir::{Body, SourceScope};\n use rustc_session::config::DebugInfo;\n \n use rustc_index::bit_set::BitSet;"}, {"sha": "64d4076cbf0dbd37738d1510b230b4db56990f92", "filename": "src/librustc_codegen_llvm/debuginfo/gdb.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -5,8 +5,8 @@ use crate::llvm;\n use crate::builder::Builder;\n use crate::common::CodegenCx;\n use crate::value::Value;\n-use rustc::bug;\n use rustc_codegen_ssa::traits::*;\n+use rustc_middle::bug;\n use rustc_session::config::DebugInfo;\n \n use rustc_ast::attr;"}, {"sha": "20d07b2f8ce822115c37f0a69e8e4e1ffed15abc", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -20,17 +20,6 @@ use crate::llvm_util;\n use crate::value::Value;\n \n use log::debug;\n-use rustc::ich::NodeIdHashingMode;\n-use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc::mir::interpret::truncate;\n-use rustc::mir::{self, Field, GeneratorLayout};\n-use rustc::ty::layout::{\n-    self, Align, Integer, IntegerExt, LayoutOf, PrimitiveExt, Size, TyAndLayout, VariantIdx,\n-};\n-use rustc::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc::ty::Instance;\n-use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n-use rustc::{bug, span_bug};\n use rustc_ast::ast;\n use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::const_cstr;\n@@ -41,6 +30,17 @@ use rustc_fs_util::path_to_c_string;\n use rustc_hir::def::CtorKind;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_middle::ich::NodeIdHashingMode;\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::mir::interpret::truncate;\n+use rustc_middle::mir::{self, Field, GeneratorLayout};\n+use rustc_middle::ty::layout::{\n+    self, Align, Integer, IntegerExt, LayoutOf, PrimitiveExt, Size, TyAndLayout, VariantIdx,\n+};\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::Instance;\n+use rustc_middle::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n+use rustc_middle::{bug, span_bug};\n use rustc_session::config::{self, DebugInfo};\n use rustc_span::symbol::{Interner, Symbol};\n use rustc_span::{self, FileName, Span};"}, {"sha": "848c973c15b515efe7290a81762861d3a9c7b1a0", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -12,28 +12,28 @@ use crate::llvm;\n use crate::llvm::debuginfo::{\n     DIArray, DIBuilder, DIFile, DIFlags, DILexicalBlock, DISPFlags, DIScope, DIType, DIVariable,\n };\n-use rustc::ty::subst::{GenericArgKind, SubstsRef};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, LOCAL_CRATE};\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n \n use crate::abi::FnAbi;\n use crate::builder::Builder;\n use crate::common::CodegenCx;\n use crate::value::Value;\n-use rustc::mir;\n-use rustc::ty::{self, Instance, ParamEnv, Ty};\n use rustc_codegen_ssa::debuginfo::type_names;\n use rustc_codegen_ssa::mir::debuginfo::{DebugScope, FunctionDebugContext, VariableKind};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir;\n+use rustc_middle::ty::{self, Instance, ParamEnv, Ty};\n use rustc_session::config::{self, DebugInfo};\n \n use libc::c_uint;\n use log::debug;\n use std::cell::RefCell;\n \n-use rustc::ty::layout::{self, HasTyCtxt, LayoutOf, Size};\n use rustc_ast::ast;\n use rustc_codegen_ssa::traits::*;\n+use rustc_middle::ty::layout::{self, HasTyCtxt, LayoutOf, Size};\n use rustc_span::symbol::Symbol;\n use rustc_span::{self, BytePos, Span};\n use smallvec::SmallVec;"}, {"sha": "475dea239a765ee07be1e1f0c75684edacbf7689", "filename": "src/librustc_codegen_llvm/debuginfo/namespace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n // Namespace Handling.\n \n use super::utils::{debug_context, DIB};\n-use rustc::ty::{self, Instance};\n+use rustc_middle::ty::{self, Instance};\n \n use crate::common::CodegenCx;\n use crate::llvm;"}, {"sha": "ee188e69be11fd7f30f8838de9cbd99eae622fb3", "filename": "src/librustc_codegen_llvm/debuginfo/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -3,8 +3,8 @@\n use super::namespace::item_namespace;\n use super::CrateDebugContext;\n \n-use rustc::ty::DefIdTree;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::DefIdTree;\n \n use crate::common::CodegenCx;\n use crate::llvm;"}, {"sha": "26ab46bde3843e1c361985de7807f8fee1f62ec0", "filename": "src/librustc_codegen_llvm/declare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdeclare.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -19,8 +19,8 @@ use crate::llvm::AttributePlace::Function;\n use crate::type_::Type;\n use crate::value::Value;\n use log::debug;\n-use rustc::ty::Ty;\n use rustc_codegen_ssa::traits::*;\n+use rustc_middle::ty::Ty;\n \n /// Declare a function.\n ///"}, {"sha": "23f6c0a942036d4514ea7d6a05b80763b938eb06", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -7,9 +7,6 @@ use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::va_arg::emit_va_arg;\n use crate::value::Value;\n-use rustc::ty::layout::{self, FnAbiExt, HasTyCtxt, LayoutOf, Primitive};\n-use rustc::ty::{self, Ty};\n-use rustc::{bug, span_bug};\n use rustc_ast::ast;\n use rustc_codegen_ssa::base::{compare_simd_types, to_immediate, wants_msvc_seh};\n use rustc_codegen_ssa::common::{IntPredicate, TypeKind};\n@@ -18,6 +15,9 @@ use rustc_codegen_ssa::mir::operand::{OperandRef, OperandValue};\n use rustc_codegen_ssa::mir::place::PlaceRef;\n use rustc_codegen_ssa::MemFlags;\n use rustc_hir as hir;\n+use rustc_middle::ty::layout::{self, FnAbiExt, HasTyCtxt, LayoutOf, Primitive};\n+use rustc_middle::ty::{self, Ty};\n+use rustc_middle::{bug, span_bug};\n use rustc_target::abi::HasDataLayout;\n \n use rustc_codegen_ssa::common::span_invalid_monomorphization_error;\n@@ -1390,8 +1390,8 @@ fn generic_simd_intrinsic(\n \n     fn simd_simple_float_intrinsic(\n         name: &str,\n-        in_elem: &::rustc::ty::TyS<'_>,\n-        in_ty: &::rustc::ty::TyS<'_>,\n+        in_elem: &::rustc_middle::ty::TyS<'_>,\n+        in_ty: &::rustc_middle::ty::TyS<'_>,\n         in_len: u64,\n         bx: &mut Builder<'a, 'll, 'tcx>,\n         span: Span,"}, {"sha": "8a16d098a8bef5002d4eab4440caa8ada57ac31a", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -17,17 +17,17 @@\n use back::write::{create_informational_target_machine, create_target_machine};\n \n pub use llvm_util::target_features;\n-use rustc::dep_graph::{DepGraph, WorkProduct};\n-use rustc::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n-use rustc::ty::{self, TyCtxt};\n-use rustc::util::common::ErrorReported;\n use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_codegen_ssa::back::lto::{LtoModuleCodegen, SerializedModule, ThinModule};\n use rustc_codegen_ssa::back::write::{CodegenContext, FatLTOInput, ModuleConfig};\n use rustc_codegen_ssa::traits::*;\n use rustc_codegen_ssa::ModuleCodegen;\n use rustc_codegen_ssa::{CodegenResults, CompiledModule};\n use rustc_errors::{FatalError, Handler};\n+use rustc_middle::dep_graph::{DepGraph, WorkProduct};\n+use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n+use rustc_middle::ty::{self, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_serialize::json;\n use rustc_session::config::{self, OptLevel, OutputFilenames, PrintRequest};\n use rustc_session::Session;"}, {"sha": "a56c8802f3c00d6525337f0bd09e61bc25819d85", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n use crate::back::write::create_informational_target_machine;\n use crate::llvm;\n use libc::c_int;\n-use rustc::bug;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_feature::UnstableFeatures;\n+use rustc_middle::bug;\n use rustc_session::config::PrintRequest;\n use rustc_session::Session;\n use rustc_span::symbol::sym;"}, {"sha": "6d0612ca075d1f9437df938af02d4eb4b72cf113", "filename": "src/librustc_codegen_llvm/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmetadata.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n use crate::llvm;\n use crate::llvm::archive_ro::ArchiveRO;\n use crate::llvm::{mk_section_iter, False, ObjectFile};\n-use rustc::middle::cstore::MetadataLoader;\n+use rustc_middle::middle::cstore::MetadataLoader;\n use rustc_target::spec::Target;\n \n use log::debug;"}, {"sha": "fe1537fbd021dc15586046888448f01ac0ea898a", "filename": "src/librustc_codegen_llvm/mono_item.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmono_item.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -5,13 +5,13 @@ use crate::context::CodegenCx;\n use crate::llvm;\n use crate::type_of::LayoutLlvmExt;\n use log::debug;\n-use rustc::mir::mono::{Linkage, Visibility};\n-use rustc::ty::layout::{FnAbiExt, LayoutOf};\n-use rustc::ty::{Instance, TypeFoldable};\n use rustc_codegen_ssa::traits::*;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_middle::mir::mono::{Linkage, Visibility};\n+use rustc_middle::ty::layout::{FnAbiExt, LayoutOf};\n+use rustc_middle::ty::{Instance, TypeFoldable};\n \n-pub use rustc::mir::mono::MonoItem;\n+pub use rustc_middle::mir::mono::MonoItem;\n \n impl PreDefineMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n     fn predefine_static("}, {"sha": "c06d2e6a01ac2d9cc714f4e3c46ac97503090000", "filename": "src/librustc_codegen_llvm/type_.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,20 +1,19 @@\n pub use crate::llvm::Type;\n \n+use crate::abi::{FnAbiLlvmExt, LlvmType};\n+use crate::common;\n use crate::context::CodegenCx;\n use crate::llvm;\n use crate::llvm::{Bool, False, True};\n-use crate::value::Value;\n-use rustc::bug;\n-use rustc_codegen_ssa::traits::*;\n-\n-use crate::abi::{FnAbiLlvmExt, LlvmType};\n-use crate::common;\n use crate::type_of::LayoutLlvmExt;\n-use rustc::ty::layout::{self, Align, Size, TyAndLayout};\n-use rustc::ty::Ty;\n+use crate::value::Value;\n use rustc_ast::ast;\n use rustc_codegen_ssa::common::TypeKind;\n+use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::small_c_str::SmallCStr;\n+use rustc_middle::bug;\n+use rustc_middle::ty::layout::{self, Align, Size, TyAndLayout};\n+use rustc_middle::ty::Ty;\n use rustc_target::abi::call::{CastTarget, FnAbi, Reg};\n \n use std::fmt;"}, {"sha": "350f7be5a9d8d80a22f17b3d2c021900140632cd", "filename": "src/librustc_codegen_llvm/type_of.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_of.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,11 +2,11 @@ use crate::abi::FnAbi;\n use crate::common::*;\n use crate::type_::Type;\n use log::debug;\n-use rustc::bug;\n-use rustc::ty::layout::{self, Align, FnAbiExt, LayoutOf, PointeeInfo, Size, TyAndLayout};\n-use rustc::ty::print::obsolete::DefPathBasedNames;\n-use rustc::ty::{self, Ty, TypeFoldable};\n use rustc_codegen_ssa::traits::*;\n+use rustc_middle::bug;\n+use rustc_middle::ty::layout::{self, Align, FnAbiExt, LayoutOf, PointeeInfo, Size, TyAndLayout};\n+use rustc_middle::ty::print::obsolete::DefPathBasedNames;\n+use rustc_middle::ty::{self, Ty, TypeFoldable};\n use rustc_target::abi::TyAndLayoutMethods;\n \n use std::fmt::Write;\n@@ -221,7 +221,7 @@ impl<'tcx> LayoutLlvmExt<'tcx> for TyAndLayout<'tcx> {\n         }\n     }\n \n-    /// Gets the LLVM type corresponding to a Rust type, i.e., `rustc::ty::Ty`.\n+    /// Gets the LLVM type corresponding to a Rust type, i.e., `rustc_middle::ty::Ty`.\n     /// The pointee type of the pointer in `PlaceRef` is always this type.\n     /// For sized types, it is also the right LLVM type for an `alloca`\n     /// containing a value of that type, and most immediates (except `bool`)."}, {"sha": "42e9f60e95cb5dee5eacafbefab4d825f18c919f", "filename": "src/librustc_codegen_llvm/va_arg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fva_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_llvm%2Fva_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fva_arg.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,12 +2,12 @@ use crate::builder::Builder;\n use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n-use rustc::ty::layout::{Align, HasDataLayout, HasTyCtxt, LayoutOf, Size};\n-use rustc::ty::Ty;\n use rustc_codegen_ssa::mir::operand::OperandRef;\n use rustc_codegen_ssa::traits::{\n     BaseTypeMethods, BuilderMethods, ConstMethods, DerivedTypeMethods,\n };\n+use rustc_middle::ty::layout::{Align, HasDataLayout, HasTyCtxt, LayoutOf, Size};\n+use rustc_middle::ty::Ty;\n \n #[allow(dead_code)]\n fn round_pointer_up_to_alignment("}, {"sha": "717e32d4a0d8a1e79083d2d7df9762779e2f643f", "filename": "src/librustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2FCargo.toml?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -22,7 +22,7 @@ tempfile = \"3.1\"\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n rustc_ast = { path = \"../librustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n-rustc = { path = \"../librustc\" }\n+rustc_middle = { path = \"../librustc_middle\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_symbol_mangling = { path = \"../librustc_symbol_mangling\" }"}, {"sha": "1e780c5f86771ee3767cf25f99f2852ac35fb7c7", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,8 +1,8 @@\n-use rustc::middle::cstore::{EncodedMetadata, LibSource, NativeLibrary, NativeLibraryKind};\n-use rustc::middle::dependency_format::Linkage;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_fs_util::fix_windows_verbatim_for_gcc;\n use rustc_hir::def_id::CrateNum;\n+use rustc_middle::middle::cstore::{EncodedMetadata, LibSource, NativeLibrary, NativeLibraryKind};\n+use rustc_middle::middle::dependency_format::Linkage;\n use rustc_session::config::{\n     self, CFGuard, DebugInfo, OutputFilenames, OutputType, PrintRequest, Sanitizer,\n };"}, {"sha": "c0c533524b09861eaf79cbe4fbe9aef1c40b5fa0", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -8,10 +8,10 @@ use std::io::prelude::*;\n use std::io::{self, BufWriter};\n use std::path::{Path, PathBuf};\n \n-use rustc::middle::dependency_format::Linkage;\n-use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n+use rustc_middle::middle::dependency_format::Linkage;\n+use rustc_middle::ty::TyCtxt;\n use rustc_serialize::{json, Encoder};\n use rustc_session::config::{self, CrateType, DebugInfo, LinkerPluginLto, Lto, OptLevel};\n use rustc_session::Session;"}, {"sha": "c02e4f279b1fbea67e2990c6f0b6db5540372441", "filename": "src/librustc_codegen_ssa/back/rpath.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Frpath.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -3,8 +3,8 @@ use std::env;\n use std::fs;\n use std::path::{Path, PathBuf};\n \n-use rustc::middle::cstore::LibSource;\n use rustc_hir::def_id::CrateNum;\n+use rustc_middle::middle::cstore::LibSource;\n \n pub struct RPathConfig<'a> {\n     pub used_crates: &'a [(CrateNum, LibSource)],"}, {"sha": "39b70a5f2e730527e5011efec2287ab6f0ed8fb0", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,19 +1,21 @@\n use std::collections::hash_map::Entry::*;\n use std::sync::Arc;\n \n-use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc::middle::exported_symbols::{metadata_symbol_name, ExportedSymbol, SymbolExportLevel};\n-use rustc::ty::query::Providers;\n-use rustc::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc::ty::Instance;\n-use rustc::ty::{SymbolName, TyCtxt};\n use rustc_ast::expand::allocator::ALLOCATOR_METHODS;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::Node;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::middle::exported_symbols::{\n+    metadata_symbol_name, ExportedSymbol, SymbolExportLevel,\n+};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::Instance;\n+use rustc_middle::ty::{SymbolName, TyCtxt};\n use rustc_session::config::{self, Sanitizer};\n \n pub fn threshold(tcx: TyCtxt<'_>) -> SymbolExportLevel {\n@@ -221,8 +223,8 @@ fn exported_symbols_provider_local(\n     }\n \n     if tcx.sess.opts.share_generics() && tcx.local_crate_exports_generics() {\n-        use rustc::mir::mono::{Linkage, MonoItem, Visibility};\n-        use rustc::ty::InstanceDef;\n+        use rustc_middle::mir::mono::{Linkage, MonoItem, Visibility};\n+        use rustc_middle::ty::InstanceDef;\n \n         // Normally, we require that shared monomorphizations are not hidden,\n         // because if we want to re-use a monomorphization from a Rust dylib, it"}, {"sha": "35c5812e1f3bf138cba1d2bd86c44b43042d6730", "filename": "src/librustc_codegen_ssa/back/write.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -10,10 +10,6 @@ use crate::{\n \n use crate::traits::*;\n use jobserver::{Acquired, Client};\n-use rustc::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n-use rustc::middle::cstore::EncodedMetadata;\n-use rustc::middle::exported_symbols::SymbolExportLevel;\n-use rustc::ty::TyCtxt;\n use rustc_ast::attr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::profiling::SelfProfilerRef;\n@@ -28,6 +24,10 @@ use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_incremental::{\n     copy_cgu_workproducts_to_incr_comp_cache_dir, in_incr_comp_dir, in_incr_comp_dir_sess,\n };\n+use rustc_middle::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n+use rustc_middle::middle::cstore::EncodedMetadata;\n+use rustc_middle::middle::exported_symbols::SymbolExportLevel;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::cgu_reuse_tracker::CguReuseTracker;\n use rustc_session::config::{\n     self, Lto, OutputFilenames, OutputType, Passes, Sanitizer, SwitchWithOptPath,"}, {"sha": "9e6a3b23323d8593aabab563a80bb51c654025df", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -25,23 +25,23 @@ use crate::mir::place::PlaceRef;\n use crate::traits::*;\n use crate::{CachedModuleCodegen, CrateInfo, MemFlags, ModuleCodegen, ModuleKind};\n \n-use rustc::middle::codegen_fn_attrs::CodegenFnAttrs;\n-use rustc::middle::cstore::EncodedMetadata;\n-use rustc::middle::cstore::{self, LinkagePreference};\n-use rustc::middle::lang_items;\n-use rustc::middle::lang_items::StartFnLangItem;\n-use rustc::mir::mono::{CodegenUnit, CodegenUnitNameBuilder, MonoItem};\n-use rustc::ty::layout::{self, Align, HasTyCtxt, LayoutOf, TyAndLayout, VariantIdx};\n-use rustc::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n-use rustc::ty::query::Providers;\n-use rustc::ty::{self, Instance, Ty, TyCtxt};\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::profiling::print_time_passes_entry;\n use rustc_data_structures::sync::{par_iter, Lock, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_index::vec::Idx;\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrs;\n+use rustc_middle::middle::cstore::EncodedMetadata;\n+use rustc_middle::middle::cstore::{self, LinkagePreference};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::middle::lang_items::StartFnLangItem;\n+use rustc_middle::mir::mono::{CodegenUnit, CodegenUnitNameBuilder, MonoItem};\n+use rustc_middle::ty::layout::{self, Align, HasTyCtxt, LayoutOf, TyAndLayout, VariantIdx};\n+use rustc_middle::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, Instance, Ty, TyCtxt};\n use rustc_session::cgu_reuse_tracker::CguReuse;\n use rustc_session::config::{self, EntryFnType, Lto};\n use rustc_session::Session;\n@@ -557,7 +557,7 @@ pub fn codegen_crate<B: ExtraBackendMethods>(\n     // one instead. If nothing exists then it's our job to generate the\n     // allocator!\n     let any_dynamic_crate = tcx.dependency_formats(LOCAL_CRATE).iter().any(|(_, list)| {\n-        use rustc::middle::dependency_format::Linkage;\n+        use rustc_middle::middle::dependency_format::Linkage;\n         list.iter().any(|&linkage| linkage == Linkage::Dynamic)\n     });\n     let allocator_module = if any_dynamic_crate {"}, {"sha": "8de04b730e17039f483bdd6b7c2447699e2b71fd", "filename": "src/librustc_codegen_ssa/common.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fcommon.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,14 +1,14 @@\n #![allow(non_camel_case_types, non_snake_case)]\n \n-use rustc::ty::{Ty, TyCtxt};\n use rustc_errors::struct_span_err;\n+use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_session::Session;\n use rustc_span::Span;\n \n use crate::base;\n use crate::traits::*;\n-use rustc::middle::lang_items::LangItem;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::middle::lang_items::LangItem;\n \n use crate::traits::BuilderMethods;\n use rustc_hir as hir;"}, {"sha": "6c0e4128e30f5f51e128056a3eb0837c88834605", "filename": "src/librustc_codegen_ssa/debuginfo/type_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fdebuginfo%2Ftype_names.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n // Type Names for Debug Info.\n \n-use rustc::ty::{self, subst::SubstsRef, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::{self, subst::SubstsRef, Ty, TyCtxt};\n \n // Compute the name of the type as it should be stored in debuginfo. Does not do\n // any caching, i.e., calling the function twice with the same type will also do"}, {"sha": "5b086bc43ff353ffa0ca75570d0397d2de7f660a", "filename": "src/librustc_codegen_ssa/glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fglue.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -5,7 +5,7 @@\n use crate::common::IntPredicate;\n use crate::meth;\n use crate::traits::*;\n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::{self, Ty};\n \n pub fn size_and_align_of_dst<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     bx: &mut Bx,"}, {"sha": "bf2f92a473fe8f0deaaad0ce2890556d4a141c2c", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -15,17 +15,17 @@\n #[macro_use]\n extern crate log;\n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n \n-use rustc::dep_graph::WorkProduct;\n-use rustc::middle::cstore::{CrateSource, LibSource, NativeLibrary};\n-use rustc::middle::dependency_format::Dependencies;\n-use rustc::middle::lang_items::LangItem;\n-use rustc::ty::query::Providers;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;\n use rustc_hir::def_id::CrateNum;\n+use rustc_middle::dep_graph::WorkProduct;\n+use rustc_middle::middle::cstore::{CrateSource, LibSource, NativeLibrary};\n+use rustc_middle::middle::dependency_format::Dependencies;\n+use rustc_middle::middle::lang_items::LangItem;\n+use rustc_middle::ty::query::Providers;\n use rustc_session::config::{OutputFilenames, OutputType, RUST_CGU_EXT};\n use rustc_span::symbol::Symbol;\n use std::path::{Path, PathBuf};\n@@ -144,7 +144,7 @@ pub struct CodegenResults {\n     pub allocator_module: Option<CompiledModule>,\n     pub metadata_module: Option<CompiledModule>,\n     pub crate_hash: Svh,\n-    pub metadata: rustc::middle::cstore::EncodedMetadata,\n+    pub metadata: rustc_middle::middle::cstore::EncodedMetadata,\n     pub windows_subsystem: Option<String>,\n     pub linker_info: back::linker::LinkerInfo,\n     pub crate_info: CrateInfo,"}, {"sha": "199dd8c7df42fd7d0be1e33acb752b6d652b210e", "filename": "src/librustc_codegen_ssa/meth.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmeth.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,6 +1,6 @@\n use crate::traits::*;\n \n-use rustc::ty::{self, Instance, Ty};\n+use rustc_middle::ty::{self, Instance, Ty};\n use rustc_target::abi::call::FnAbi;\n \n #[derive(Copy, Clone, Debug)]"}, {"sha": "ec3de274b8a83620f5d9dfbbeac535f66a7cddc6", "filename": "src/librustc_codegen_ssa/mir/analyze.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -3,16 +3,16 @@\n \n use super::FunctionCx;\n use crate::traits::*;\n-use rustc::mir::traversal;\n-use rustc::mir::visit::{\n-    MutatingUseContext, NonMutatingUseContext, NonUseContext, PlaceContext, Visitor,\n-};\n-use rustc::mir::{self, Location, TerminatorKind};\n-use rustc::ty;\n-use rustc::ty::layout::{HasTyCtxt, LayoutOf};\n use rustc_data_structures::graph::dominators::Dominators;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_middle::mir::traversal;\n+use rustc_middle::mir::visit::{\n+    MutatingUseContext, NonMutatingUseContext, NonUseContext, PlaceContext, Visitor,\n+};\n+use rustc_middle::mir::{self, Location, TerminatorKind};\n+use rustc_middle::ty;\n+use rustc_middle::ty::layout::{HasTyCtxt, LayoutOf};\n \n pub fn non_ssa_locals<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     fx: &FunctionCx<'a, 'tcx, Bx>,"}, {"sha": "e71a63b7f308002710dc05d8185f1db8ae39d533", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -9,12 +9,12 @@ use crate::meth;\n use crate::traits::*;\n use crate::MemFlags;\n \n-use rustc::middle::lang_items;\n-use rustc::mir;\n-use rustc::mir::AssertKind;\n-use rustc::ty::layout::{self, FnAbiExt, HasTyCtxt, LayoutOf};\n-use rustc::ty::{self, Instance, Ty, TypeFoldable};\n use rustc_index::vec::Idx;\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir;\n+use rustc_middle::mir::AssertKind;\n+use rustc_middle::ty::layout::{self, FnAbiExt, HasTyCtxt, LayoutOf};\n+use rustc_middle::ty::{self, Instance, Ty, TypeFoldable};\n use rustc_span::{source_map::Span, symbol::Symbol};\n use rustc_target::abi::call::{ArgAbi, FnAbi, PassMode};\n use rustc_target::spec::abi::Abi;"}, {"sha": "9770d04aa99dd54baeb01deec58f0ab11c457c74", "filename": "src/librustc_codegen_ssa/mir/constant.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,10 +1,10 @@\n use crate::mir::operand::OperandRef;\n use crate::traits::*;\n-use rustc::mir;\n-use rustc::mir::interpret::{ConstValue, ErrorHandled};\n-use rustc::ty::layout::{self, HasTyCtxt};\n-use rustc::ty::{self, Ty};\n use rustc_index::vec::Idx;\n+use rustc_middle::mir;\n+use rustc_middle::mir::interpret::{ConstValue, ErrorHandled};\n+use rustc_middle::ty::layout::{self, HasTyCtxt};\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::source_map::Span;\n \n use super::FunctionCx;"}, {"sha": "4eefb37ba0d42e0cc1b90b0561277b20a25d3790", "filename": "src/librustc_codegen_ssa/mir/debuginfo.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n use crate::traits::*;\n-use rustc::mir;\n-use rustc::ty;\n-use rustc::ty::layout::{LayoutOf, Size};\n use rustc_hir::def_id::CrateNum;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir;\n+use rustc_middle::ty;\n+use rustc_middle::ty::layout::{LayoutOf, Size};\n use rustc_session::config::DebugInfo;\n \n use rustc_span::symbol::{kw, Symbol};"}, {"sha": "fd20cf5404c666b5247166cf9ae34a74f34ab1d4", "filename": "src/librustc_codegen_ssa/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,8 +1,8 @@\n use crate::base;\n use crate::traits::*;\n-use rustc::mir;\n-use rustc::ty::layout::{FnAbiExt, HasTyCtxt, TyAndLayout};\n-use rustc::ty::{self, Instance, Ty, TypeFoldable};\n+use rustc_middle::mir;\n+use rustc_middle::ty::layout::{FnAbiExt, HasTyCtxt, TyAndLayout};\n+use rustc_middle::ty::{self, Instance, Ty, TypeFoldable};\n use rustc_target::abi::call::{FnAbi, PassMode};\n \n use std::iter;\n@@ -13,7 +13,7 @@ use rustc_index::vec::IndexVec;\n use self::analyze::CleanupKind;\n use self::debuginfo::{FunctionDebugContext, PerLocalVarDebugInfo};\n use self::place::PlaceRef;\n-use rustc::mir::traversal;\n+use rustc_middle::mir::traversal;\n \n use self::operand::{OperandRef, OperandValue};\n "}, {"sha": "7545882a0eacb1ee5b3cb2c749ac36323a55e3bb", "filename": "src/librustc_codegen_ssa/mir/operand.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -6,10 +6,10 @@ use crate::glue;\n use crate::traits::*;\n use crate::MemFlags;\n \n-use rustc::mir;\n-use rustc::mir::interpret::{ConstValue, ErrorHandled, Pointer, Scalar};\n-use rustc::ty::layout::{self, Align, LayoutOf, Size, TyAndLayout};\n-use rustc::ty::Ty;\n+use rustc_middle::mir;\n+use rustc_middle::mir::interpret::{ConstValue, ErrorHandled, Pointer, Scalar};\n+use rustc_middle::ty::layout::{self, Align, LayoutOf, Size, TyAndLayout};\n+use rustc_middle::ty::Ty;\n \n use std::fmt;\n "}, {"sha": "1237e70aa36f1df11a782658f9e0d1d895e5e446", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -6,10 +6,10 @@ use crate::glue;\n use crate::traits::*;\n use crate::MemFlags;\n \n-use rustc::mir;\n-use rustc::mir::tcx::PlaceTy;\n-use rustc::ty::layout::{self, Align, HasTyCtxt, LayoutOf, TyAndLayout, VariantIdx};\n-use rustc::ty::{self, Ty};\n+use rustc_middle::mir;\n+use rustc_middle::mir::tcx::PlaceTy;\n+use rustc_middle::ty::layout::{self, Align, HasTyCtxt, LayoutOf, TyAndLayout, VariantIdx};\n+use rustc_middle::ty::{self, Ty};\n \n #[derive(Copy, Clone, Debug)]\n pub struct PlaceRef<'tcx, V> {"}, {"sha": "66ce50c482a6f54c2d255cb0865d1549251544f4", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -7,12 +7,12 @@ use crate::common::{self, IntPredicate, RealPredicate};\n use crate::traits::*;\n use crate::MemFlags;\n \n-use rustc::middle::lang_items::ExchangeMallocFnLangItem;\n-use rustc::mir;\n-use rustc::ty::cast::{CastTy, IntTy};\n-use rustc::ty::layout::{self, HasTyCtxt, LayoutOf};\n-use rustc::ty::{self, adjustment::PointerCast, Instance, Ty, TyCtxt};\n use rustc_apfloat::{ieee, Float, Round, Status};\n+use rustc_middle::middle::lang_items::ExchangeMallocFnLangItem;\n+use rustc_middle::mir;\n+use rustc_middle::ty::cast::{CastTy, IntTy};\n+use rustc_middle::ty::layout::{self, HasTyCtxt, LayoutOf};\n+use rustc_middle::ty::{self, adjustment::PointerCast, Instance, Ty, TyCtxt};\n use rustc_span::source_map::{Span, DUMMY_SP};\n use rustc_span::symbol::sym;\n "}, {"sha": "ddd7447406c48cafb710ed6a61cc94621a19e8e4", "filename": "src/librustc_codegen_ssa/mir/statement.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir;\n use rustc_errors::struct_span_err;\n+use rustc_middle::mir;\n \n use super::FunctionCx;\n use super::LocalRef;"}, {"sha": "5994ef2be5467e0301115428398a8006591fff72", "filename": "src/librustc_codegen_ssa/mono_item.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmono_item.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,10 +1,10 @@\n use crate::base;\n use crate::traits::*;\n-use rustc::mir::mono::{Linkage, Visibility};\n-use rustc::ty::layout::HasTyCtxt;\n use rustc_hir as hir;\n+use rustc_middle::mir::mono::{Linkage, Visibility};\n+use rustc_middle::ty::layout::HasTyCtxt;\n \n-use rustc::mir::mono::MonoItem;\n+use rustc_middle::mir::mono::MonoItem;\n \n pub trait MonoItemExt<'a, 'tcx> {\n     fn define<Bx: BuilderMethods<'a, 'tcx>>(&self, cx: &'a Bx::CodegenCx);"}, {"sha": "dd8495850bd5458e88a78f8a53e0ea04f16b2a8d", "filename": "src/librustc_codegen_ssa/traits/abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fabi.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,5 +1,5 @@\n use super::BackendTypes;\n-use rustc::ty::Ty;\n+use rustc_middle::ty::Ty;\n use rustc_target::abi::call::FnAbi;\n \n pub trait AbiBuilderMethods<'tcx>: BackendTypes {"}, {"sha": "1474edd8aa09af0cbda548c0ee00363b3062248e", "filename": "src/librustc_codegen_ssa/traits/backend.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,13 +2,13 @@ use super::write::WriteBackendMethods;\n use super::CodegenObject;\n use crate::ModuleCodegen;\n \n-use rustc::dep_graph::DepGraph;\n-use rustc::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n-use rustc::ty::layout::{HasTyCtxt, LayoutOf, TyAndLayout};\n-use rustc::ty::query::Providers;\n-use rustc::ty::{Ty, TyCtxt};\n-use rustc::util::common::ErrorReported;\n use rustc_ast::expand::allocator::AllocatorKind;\n+use rustc_middle::dep_graph::DepGraph;\n+use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n+use rustc_middle::ty::layout::{HasTyCtxt, LayoutOf, TyAndLayout};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{Ty, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_session::{\n     config::{self, OutputFilenames, PrintRequest},\n     Session,"}, {"sha": "d59ea387b86ba496d19285494726b09f3bdaa305", "filename": "src/librustc_codegen_ssa/traits/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -12,8 +12,8 @@ use crate::mir::operand::OperandRef;\n use crate::mir::place::PlaceRef;\n use crate::MemFlags;\n \n-use rustc::ty::layout::{Align, HasParamEnv, Size};\n-use rustc::ty::Ty;\n+use rustc_middle::ty::layout::{Align, HasParamEnv, Size};\n+use rustc_middle::ty::Ty;\n use rustc_target::spec::HasTargetSpec;\n \n use std::iter::TrustedLen;"}, {"sha": "e5e1aa658e62e39823a79560d8cdad4c9a1ba061", "filename": "src/librustc_codegen_ssa/traits/consts.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,8 +1,8 @@\n use super::BackendTypes;\n use crate::mir::place::PlaceRef;\n-use rustc::mir::interpret::Allocation;\n-use rustc::mir::interpret::Scalar;\n-use rustc::ty::layout;\n+use rustc_middle::mir::interpret::Allocation;\n+use rustc_middle::mir::interpret::Scalar;\n+use rustc_middle::ty::layout;\n use rustc_span::Symbol;\n \n pub trait ConstMethods<'tcx>: BackendTypes {"}, {"sha": "4e84c096822ef136f88ec72a7ea54f61daf2acde", "filename": "src/librustc_codegen_ssa/traits/debuginfo.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,10 +1,10 @@\n use super::BackendTypes;\n use crate::mir::debuginfo::{FunctionDebugContext, VariableKind};\n-use rustc::mir;\n-use rustc::ty::layout::Size;\n-use rustc::ty::{Instance, Ty};\n use rustc_ast::ast::Name;\n use rustc_hir::def_id::CrateNum;\n+use rustc_middle::mir;\n+use rustc_middle::ty::layout::Size;\n+use rustc_middle::ty::{Instance, Ty};\n use rustc_span::{SourceFile, Span};\n use rustc_target::abi::call::FnAbi;\n "}, {"sha": "de63ef796138749db2cb2607e638952177728c91", "filename": "src/librustc_codegen_ssa/traits/declare.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n use super::BackendTypes;\n-use rustc::mir::mono::{Linkage, Visibility};\n-use rustc::ty::{Instance, Ty};\n use rustc_hir::def_id::DefId;\n+use rustc_middle::mir::mono::{Linkage, Visibility};\n+use rustc_middle::ty::{Instance, Ty};\n use rustc_target::abi::call::FnAbi;\n \n pub trait DeclareMethods<'tcx>: BackendTypes {"}, {"sha": "9d48e233de6558f251629bdf04641277ebfd61ff", "filename": "src/librustc_codegen_ssa/traits/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fintrinsic.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,6 +1,6 @@\n use super::BackendTypes;\n use crate::mir::operand::OperandRef;\n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::Span;\n use rustc_target::abi::call::FnAbi;\n "}, {"sha": "beff9eae85929232feadbc2ae3ba5206df23442f", "filename": "src/librustc_codegen_ssa/traits/misc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n use super::BackendTypes;\n-use rustc::mir::mono::CodegenUnit;\n-use rustc::ty::{self, Instance, Ty};\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_middle::mir::mono::CodegenUnit;\n+use rustc_middle::ty::{self, Instance, Ty};\n use rustc_session::Session;\n use std::cell::RefCell;\n use std::sync::Arc;"}, {"sha": "f4c09a33285bda34c41af67883a8a509ca4e1f1d", "filename": "src/librustc_codegen_ssa/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -42,7 +42,7 @@ pub use self::type_::{\n };\n pub use self::write::{ModuleBufferMethods, ThinBufferMethods, WriteBackendMethods};\n \n-use rustc::ty::layout::{HasParamEnv, HasTyCtxt};\n+use rustc_middle::ty::layout::{HasParamEnv, HasTyCtxt};\n use rustc_target::spec::HasTargetSpec;\n \n use std::fmt;"}, {"sha": "50df08614345fbe7602e92b4d3a98dc9f4ba3df3", "filename": "src/librustc_codegen_ssa/traits/statics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,6 +1,6 @@\n use super::BackendTypes;\n-use rustc::ty::layout::Align;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::layout::Align;\n \n pub trait StaticMethods: BackendTypes {\n     fn static_addr_of(&self, cv: Self::Value, align: Align, kind: Option<&str>) -> Self::Value;"}, {"sha": "383be6dfcb5ea08b5018de024251a48ad429454a", "filename": "src/librustc_codegen_ssa/traits/type_.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Ftype_.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -3,8 +3,8 @@ use super::Backend;\n use super::HasCodegen;\n use crate::common::TypeKind;\n use crate::mir::place::PlaceRef;\n-use rustc::ty::layout::{self, TyAndLayout};\n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::layout::{self, TyAndLayout};\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::DUMMY_SP;\n use rustc_target::abi::call::{ArgAbi, CastTarget, FnAbi, Reg};\n \n@@ -54,7 +54,7 @@ pub trait DerivedTypeMethods<'tcx>: BaseTypeMethods<'tcx> + MiscMethods<'tcx> {\n     }\n \n     fn type_from_integer(&self, i: layout::Integer) -> Self::Type {\n-        use rustc::ty::layout::Integer::*;\n+        use rustc_middle::ty::layout::Integer::*;\n         match i {\n             I8 => self.type_i8(),\n             I16 => self.type_i16(),"}, {"sha": "27d52e9b9c53e8ab524f192c7bee41b70ea77601", "filename": "src/librustc_codegen_ssa/traits/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,8 +2,8 @@ use crate::back::lto::{LtoModuleCodegen, SerializedModule, ThinModule};\n use crate::back::write::{CodegenContext, FatLTOInput, ModuleConfig};\n use crate::{CompiledModule, ModuleCodegen};\n \n-use rustc::dep_graph::WorkProduct;\n use rustc_errors::{FatalError, Handler};\n+use rustc_middle::dep_graph::WorkProduct;\n \n pub trait WriteBackendMethods: 'static + Sized + Clone {\n     type Module: Send + Sync;"}, {"sha": "ba82e58d7a92e6f583254f38552458ade2e4d3b8", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -114,6 +114,6 @@ impl<F: Fn()> Drop for OnDrop<F> {\n     }\n }\n \n-// See comments in src/librustc/lib.rs\n+// See comments in src/librustc_middle/lib.rs\n #[doc(hidden)]\n pub fn __noop_fix_for_27438() {}"}, {"sha": "652f16c2e08285a2c2abc7c5dc6daa59eac486bc", "filename": "src/librustc_driver/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2FCargo.toml?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -13,7 +13,7 @@ crate-type = [\"dylib\"]\n lazy_static = \"1.0\"\n log = \"0.4\"\n env_logger = { version = \"0.7\", default-features = false }\n-rustc = { path = \"../librustc\" }\n+rustc_middle = { path = \"../librustc_middle\" }\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_lint = { path = \"../librustc_lint\" }"}, {"sha": "8f8c2eae6e27d1f746f50289567f749f27928e9a", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -18,9 +18,6 @@ extern crate lazy_static;\n \n pub extern crate rustc_plugin_impl as plugin;\n \n-use rustc::middle::cstore::MetadataLoader;\n-use rustc::ty::TyCtxt;\n-use rustc::util::common::ErrorReported;\n use rustc_ast::ast;\n use rustc_codegen_ssa::{traits::CodegenBackend, CodegenResults};\n use rustc_data_structures::profiling::print_time_passes_entry;\n@@ -35,6 +32,9 @@ use rustc_interface::util::{collect_crate_types, get_builtin_codegen_backend};\n use rustc_interface::{interface, Queries};\n use rustc_lint::LintStore;\n use rustc_metadata::locator;\n+use rustc_middle::middle::cstore::MetadataLoader;\n+use rustc_middle::ty::TyCtxt;\n+use rustc_middle::util::common::ErrorReported;\n use rustc_save_analysis as save;\n use rustc_save_analysis::DumpHandler;\n use rustc_serialize::json::{self, ToJson};"}, {"sha": "2319760204a9e2b463e8315168c482efba37700a", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,13 +1,13 @@\n //! The various pretty-printing routines.\n \n-use rustc::hir::map as hir_map;\n-use rustc::ty::{self, TyCtxt};\n-use rustc::util::common::ErrorReported;\n use rustc_ast::ast;\n use rustc_ast_pretty::pprust;\n use rustc_hir as hir;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir_pretty as pprust_hir;\n+use rustc_middle::hir::map as hir_map;\n+use rustc_middle::ty::{self, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_mir::util::{write_mir_graphviz, write_mir_pretty};\n use rustc_session::config::{Input, PpMode, PpSourceMode};\n use rustc_session::Session;"}, {"sha": "e2a27f7b10672f365669ce0b797b4f9c24f447ce", "filename": "src/librustc_error_codes/error_codes/E0264.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_error_codes%2Ferror_codes%2FE0264.md", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_error_codes%2Ferror_codes%2FE0264.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0264.md?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -12,7 +12,7 @@ extern \"C\" {\n ```\n \n A list of available external lang items is available in\n-`src/librustc/middle/weak_lang_items.rs`. Example:\n+`src/librustc_middle/middle/weak_lang_items.rs`. Example:\n \n ```\n #![feature(lang_items)]"}, {"sha": "204fea58c955f930305a5970831c31f098eff552", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -425,7 +425,7 @@ impl Handler {\n     }\n \n     // This is here to not allow mutation of flags;\n-    // as of this writing it's only used in tests in librustc.\n+    // as of this writing it's only used in tests in librustc_middle.\n     pub fn can_emit_warnings(&self) -> bool {\n         self.flags.can_emit_warnings\n     }"}, {"sha": "c8f3edcbda0d9d7dea20c73c82d9f42108f64cbc", "filename": "src/librustc_hir/intravisit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_hir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_hir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fintravisit.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -119,7 +119,7 @@ impl<'a> FnKind<'a> {\n     }\n }\n \n-/// An abstract representation of the HIR `rustc::hir::map::Map`.\n+/// An abstract representation of the HIR `rustc_middle::hir::map::Map`.\n pub trait Map<'hir> {\n     /// Retrieves the `Node` corresponding to `id`, returning `None` if cannot be found.\n     fn find(&self, hir_id: HirId) -> Option<Node<'hir>>;"}, {"sha": "1d3f44a08993aad0cd542c6857ffc9f7e9f5b5a3", "filename": "src/librustc_hir/stable_hash_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_hir%2Fstable_hash_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_hir%2Fstable_hash_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fstable_hash_impls.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -9,7 +9,7 @@ use rustc_span::def_id::{DefPathHash, LocalDefId};\n \n /// Requirements for a `StableHashingContext` to be used in this crate.\n /// This is a hack to allow using the `HashStable_Generic` derive macro\n-/// instead of implementing everything in librustc.\n+/// instead of implementing everything in librustc_middle.\n pub trait HashStableContext:\n     rustc_ast::HashStableContext + rustc_target::HashStableContext\n {"}, {"sha": "5caf1d411e637b874335bdb02656af870556bfa5", "filename": "src/librustc_incremental/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2FCargo.toml?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -13,7 +13,7 @@ doctest = false\n graphviz = { path = \"../libgraphviz\" }\n log = \"0.4\"\n rand = \"0.7\"\n-rustc = { path = \"../librustc\" }\n+rustc_middle = { path = \"../librustc_middle\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }"}, {"sha": "5135820ac507f64aab753a539bb114b00e7c3ebd", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -34,16 +34,16 @@\n //! ```\n \n use graphviz as dot;\n-use rustc::dep_graph::debug::{DepNodeFilter, EdgeFilter};\n-use rustc::dep_graph::{DepGraphQuery, DepKind, DepNode, DepNodeExt};\n-use rustc::hir::map::Map;\n-use rustc::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{Direction, NodeIndex, INCOMING, OUTGOING};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n+use rustc_middle::dep_graph::debug::{DepNodeFilter, EdgeFilter};\n+use rustc_middle::dep_graph::{DepGraphQuery, DepKind, DepNode, DepNodeExt};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n "}, {"sha": "856edb3725a93d13a174c9e818647ff715b992e9", "filename": "src/librustc_incremental/assert_module_sources.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_module_sources.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -21,10 +21,10 @@\n //! allows for doing a more fine-grained check to see if pre- or post-lto data\n //! was re-used.\n \n-use rustc::mir::mono::CodegenUnitNameBuilder;\n-use rustc::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_hir::def_id::LOCAL_CRATE;\n+use rustc_middle::mir::mono::CodegenUnitNameBuilder;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::cgu_reuse_tracker::*;\n use rustc_span::symbol::{sym, Symbol};\n use std::collections::BTreeSet;"}, {"sha": "dd715c6c81d56a94d5a9369d5e9bae0fe73d3f31", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -6,7 +6,7 @@\n #![recursion_limit = \"256\"]\n \n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n #[macro_use]\n extern crate log;\n "}, {"sha": "ea0fd4eb7ee737b96d29fd07d9d2d844ecfa782a", "filename": "src/librustc_incremental/persist/data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,6 +1,6 @@\n //! The data that we will serialize and deserialize.\n \n-use rustc::dep_graph::{WorkProduct, WorkProductId};\n+use rustc_middle::dep_graph::{WorkProduct, WorkProductId};\n \n #[derive(Debug, RustcEncodable, RustcDecodable)]\n pub struct SerializedWorkProduct {"}, {"sha": "804d1744d687296f874f57442ab33c3d409a56c1", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -13,9 +13,6 @@\n //! Errors are reported if we are in the suitable configuration but\n //! the required condition is not met.\n \n-use rustc::dep_graph::{label_strs, DepNode, DepNodeExt};\n-use rustc::hir::map::Map;\n-use rustc::ty::TyCtxt;\n use rustc_ast::ast::{self, Attribute, NestedMetaItem};\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashSet;\n@@ -25,6 +22,9 @@ use rustc_hir::intravisit;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::Node as HirNode;\n use rustc_hir::{ImplItemKind, ItemKind as HirItem, TraitItemKind};\n+use rustc_middle::dep_graph::{label_strs, DepNode, DepNodeExt};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use std::iter::FromIterator;\n@@ -306,7 +306,7 @@ impl DirtyCleanVisitor<'tcx> {\n                     // michaelwoerister and vitiral came up with a possible solution,\n                     // to just do this before every query\n                     // ```\n-                    // ::rustc::ty::query::plumbing::force_from_dep_node(tcx, dep_node)\n+                    // ::rustc_middle::ty::query::plumbing::force_from_dep_node(tcx, dep_node)\n                     // ```\n                     //\n                     // However, this did not seem to work effectively and more bugs were hit."}, {"sha": "b75a428c62a091f15199008d0916628d91232410", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n //! Code to save/load the dep-graph from files.\n \n-use rustc::dep_graph::{PreviousDepGraph, SerializedDepGraph, WorkProduct, WorkProductId};\n-use rustc::ty::query::OnDiskCache;\n-use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_middle::dep_graph::{PreviousDepGraph, SerializedDepGraph, WorkProduct, WorkProductId};\n+use rustc_middle::ty::query::OnDiskCache;\n+use rustc_middle::ty::TyCtxt;\n use rustc_serialize::opaque::Decoder;\n use rustc_serialize::Decodable as RustcDecodable;\n use rustc_session::Session;"}, {"sha": "6d4ba45c2e6ed8b89e54824aac5f33525710a8ab", "filename": "src/librustc_incremental/persist/save.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n-use rustc::dep_graph::{DepGraph, DepKind, WorkProduct, WorkProductId};\n-use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::join;\n+use rustc_middle::dep_graph::{DepGraph, DepKind, WorkProduct, WorkProductId};\n+use rustc_middle::ty::TyCtxt;\n use rustc_serialize::opaque::Encoder;\n use rustc_serialize::Encodable as RustcEncodable;\n use rustc_session::Session;"}, {"sha": "4dd81b1df5759eb94999ef9fad437800d510eb7f", "filename": "src/librustc_incremental/persist/work_product.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,8 +1,8 @@\n //! This module contains files for saving intermediate work-products.\n \n use crate::persist::fs::*;\n-use rustc::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n use rustc_fs_util::link_or_copy;\n+use rustc_middle::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n use rustc_session::Session;\n use std::fs as std_fs;\n use std::path::PathBuf;"}, {"sha": "bc4080ac6c8de59bb9614566c5c887c4daaa026e", "filename": "src/librustc_infer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2FCargo.toml?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -12,7 +12,7 @@ doctest = false\n [dependencies]\n graphviz = { path = \"../libgraphviz\" }\n log = { version = \"0.4\", features = [\"release_max_level_info\", \"std\"] }\n-rustc = { path = \"../librustc\" }\n+rustc_middle = { path = \"../librustc_middle\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_hir = { path = \"../librustc_hir\" }"}, {"sha": "5c62a1298b97b371da3ac53d482dce823e8576b7", "filename": "src/librustc_infer/infer/at.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fat.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -27,8 +27,8 @@\n \n use super::*;\n \n-use rustc::ty::relate::{Relate, TypeRelation};\n-use rustc::ty::Const;\n+use rustc_middle::ty::relate::{Relate, TypeRelation};\n+use rustc_middle::ty::Const;\n \n pub struct At<'a, 'tcx> {\n     pub infcx: &'a InferCtxt<'a, 'tcx>,"}, {"sha": "347a5ff6d56a41736a1bcd3d697bf785fa57e28a", "filename": "src/librustc_infer/infer/canonical/canonicalizer.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -10,10 +10,10 @@ use crate::infer::canonical::{\n     OriginalQueryValues,\n };\n use crate::infer::InferCtxt;\n-use rustc::ty::flags::FlagComputation;\n-use rustc::ty::fold::{TypeFoldable, TypeFolder};\n-use rustc::ty::subst::GenericArg;\n-use rustc::ty::{self, BoundVar, InferConst, List, Ty, TyCtxt, TypeFlags};\n+use rustc_middle::ty::flags::FlagComputation;\n+use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc_middle::ty::subst::GenericArg;\n+use rustc_middle::ty::{self, BoundVar, InferConst, List, Ty, TyCtxt, TypeFlags};\n use std::sync::atomic::Ordering;\n \n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "b7890cf9e925a8bf6170fc9f234e28b1de7da337", "filename": "src/librustc_infer/infer/canonical/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -23,13 +23,13 @@\n \n use crate::infer::{ConstVariableOrigin, ConstVariableOriginKind};\n use crate::infer::{InferCtxt, RegionVariableOrigin, TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::subst::GenericArg;\n-use rustc::ty::{self, BoundVar, List};\n use rustc_index::vec::IndexVec;\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::subst::GenericArg;\n+use rustc_middle::ty::{self, BoundVar, List};\n use rustc_span::source_map::Span;\n \n-pub use rustc::infer::canonical::*;\n+pub use rustc_middle::infer::canonical::*;\n use substitute::CanonicalExt;\n \n mod canonicalizer;"}, {"sha": "79a0a5076241f96d1ee8b4cc33bfffb70fe0c7f5", "filename": "src/librustc_infer/infer/canonical/query_response.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -18,14 +18,14 @@ use crate::infer::{InferCtxt, InferOk, InferResult, NLLRegionVariableOrigin};\n use crate::traits::query::{Fallible, NoSolution};\n use crate::traits::{DomainGoal, TraitEngine};\n use crate::traits::{Obligation, ObligationCause, PredicateObligation};\n-use rustc::arena::ArenaAllocatable;\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::relate::TypeRelation;\n-use rustc::ty::subst::{GenericArg, GenericArgKind};\n-use rustc::ty::{self, BoundVar, Ty, TyCtxt};\n use rustc_data_structures::captures::Captures;\n use rustc_index::vec::Idx;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::arena::ArenaAllocatable;\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::relate::TypeRelation;\n+use rustc_middle::ty::subst::{GenericArg, GenericArgKind};\n+use rustc_middle::ty::{self, BoundVar, Ty, TyCtxt};\n use std::fmt::Debug;\n \n impl<'cx, 'tcx> InferCtxt<'cx, 'tcx> {"}, {"sha": "55609c080acc16a24c25b12300328ce1a0d32557", "filename": "src/librustc_infer/infer/canonical/substitute.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fsubstitute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fsubstitute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fsubstitute.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -7,9 +7,9 @@\n //! [c]: https://rustc-dev-guide.rust-lang.org/traits/canonicalization.html\n \n use crate::infer::canonical::{Canonical, CanonicalVarValues};\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::subst::GenericArgKind;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::subst::GenericArgKind;\n+use rustc_middle::ty::{self, TyCtxt};\n \n pub(super) trait CanonicalExt<'tcx, V> {\n     /// Instantiate the wrapped value, replacing each canonical value"}, {"sha": "c630f58abf9855174ba81a26a131560e3fa308d6", "filename": "src/librustc_infer/infer/combine.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcombine.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -34,13 +34,13 @@ use super::{InferCtxt, MiscVariable, TypeTrace};\n \n use crate::traits::{Obligation, PredicateObligations};\n \n-use rustc::ty::error::TypeError;\n-use rustc::ty::relate::{self, Relate, RelateResult, TypeRelation};\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, InferConst, Ty, TyCtxt};\n-use rustc::ty::{IntType, UintType};\n use rustc_ast::ast;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::error::TypeError;\n+use rustc_middle::ty::relate::{self, Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, InferConst, Ty, TyCtxt};\n+use rustc_middle::ty::{IntType, UintType};\n use rustc_span::{Span, DUMMY_SP};\n \n #[derive(Clone)]"}, {"sha": "e05094cda2762a76d20824539f574581bc3e2b42", "filename": "src/librustc_infer/infer/equate.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fequate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fequate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fequate.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,10 +1,10 @@\n use super::combine::{CombineFields, RelationDir};\n use super::Subtype;\n \n-use rustc::ty::relate::{self, Relate, RelateResult, TypeRelation};\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::TyVar;\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::relate::{self, Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::TyVar;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n use rustc_hir::def_id::DefId;\n "}, {"sha": "4ffdd94cca771f9d2c571b05c5af116ace5e91e6", "filename": "src/librustc_infer/infer/error_reporting/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -55,19 +55,19 @@ use crate::traits::{\n     IfExpressionCause, MatchExpressionArmCause, ObligationCause, ObligationCauseCode,\n };\n \n-use rustc::middle::region;\n-use rustc::ty::error::TypeError;\n-use rustc::ty::{\n-    self,\n-    subst::{Subst, SubstsRef},\n-    Region, Ty, TyCtxt, TypeFoldable,\n-};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{pluralize, struct_span_err};\n use rustc_errors::{Applicability, DiagnosticBuilder, DiagnosticStyledString};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::Node;\n+use rustc_middle::middle::region;\n+use rustc_middle::ty::error::TypeError;\n+use rustc_middle::ty::{\n+    self,\n+    subst::{Subst, SubstsRef},\n+    Region, Ty, TyCtxt, TypeFoldable,\n+};\n use rustc_span::{DesugaringKind, Pos, Span};\n use rustc_target::spec::abi;\n use std::{cmp, fmt};"}, {"sha": "7824855fe057c7360e9f41e101dc1115aadf0893", "filename": "src/librustc_infer/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,13 +1,13 @@\n use crate::infer::type_variable::TypeVariableOriginKind;\n use crate::infer::InferCtxt;\n-use rustc::hir::map::Map;\n-use rustc::ty::print::Print;\n-use rustc::ty::{self, DefIdTree, Infer, Ty, TyVar};\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Namespace};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Body, Expr, ExprKind, FnRetTy, HirId, Local, Pat};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::print::Print;\n+use rustc_middle::ty::{self, DefIdTree, Infer, Ty, TyVar};\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::symbol::kw;\n use rustc_span::Span;"}, {"sha": "3836bd9afa8b6e214bb7f9df4d1c8c78bb2f68a4", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/different_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -5,7 +5,7 @@ use crate::infer::error_reporting::nice_region_error::util::AnonymousParamInfo;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::SubregionOrigin;\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::util::common::ErrorReported;\n \n use rustc_errors::struct_span_err;\n "}, {"sha": "53cab34cd3f176906b331cc49021f2d1ea16f32e", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/find_anon_type.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,10 +1,10 @@\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use rustc::hir::map::Map;\n-use rustc::middle::resolve_lifetime as rl;\n-use rustc::ty::{self, Region, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::Node;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::resolve_lifetime as rl;\n+use rustc_middle::ty::{self, Region, TyCtxt};\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// This function calls the `visit_ty` method for the parameters"}, {"sha": "4613c43ba07afb0522e3e9f448c0cd853c8f3288", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError::*;\n use crate::infer::InferCtxt;\n-use rustc::ty::{self, TyCtxt};\n-use rustc::util::common::ErrorReported;\n use rustc_errors::DiagnosticBuilder;\n+use rustc_middle::ty::{self, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_span::source_map::Span;\n \n mod different_lifetimes;"}, {"sha": "b85a4cae2e47036b3bb967c129ebe5536af581e2", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/named_anon_conflict.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n //! Error Reporting for Anonymous Region Lifetime Errors\n //! where one region is named and the other is anonymous.\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use rustc::ty;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir::{FnRetTy, TyKind};\n+use rustc_middle::ty;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// When given a `ConcreteFailure` for a function with parameters containing a named region and"}, {"sha": "028148b17db1865af2665d072779d33c668a234a", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/outlives_closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -4,9 +4,9 @@\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError::SubSupConflict;\n use crate::infer::SubregionOrigin;\n-use rustc::ty::RegionKind;\n-use rustc::util::common::ErrorReported;\n use rustc_hir::{Expr, ExprKind::Closure, Node};\n+use rustc_middle::ty::RegionKind;\n+use rustc_middle::util::common::ErrorReported;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// Print the error message for lifetime errors when binding escapes a closure."}, {"sha": "2187064ec5ecf9e5b7dc1ca9b77777cd97a328df", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/placeholder_error.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -3,13 +3,13 @@ use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::ValuePairs;\n use crate::infer::{SubregionOrigin, TypeTrace};\n use crate::traits::{ObligationCause, ObligationCauseCode};\n-use rustc::ty::error::ExpectedFound;\n-use rustc::ty::print::{FmtPrinter, Print, RegionHighlightMode};\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, TyCtxt};\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir::def::Namespace;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::error::ExpectedFound;\n+use rustc_middle::ty::print::{FmtPrinter, Print, RegionHighlightMode};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, TyCtxt};\n \n use std::fmt::{self, Write};\n "}, {"sha": "34653f2dc0db81454d08cbe3c274aa08ccbf3b93", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -3,9 +3,9 @@\n use crate::infer::error_reporting::msg_span_from_free_region;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n-use rustc::ty::{BoundRegion, FreeRegion, RegionKind};\n-use rustc::util::common::ErrorReported;\n use rustc_errors::Applicability;\n+use rustc_middle::ty::{BoundRegion, FreeRegion, RegionKind};\n+use rustc_middle::util::common::ErrorReported;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// Print the error message for lifetime errors when the return type is a static impl Trait."}, {"sha": "7083e8e78faa610441e040908df013ddf92fac2f", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/trait_impl_difference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -4,8 +4,8 @@ use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::{Subtype, ValuePairs};\n use crate::traits::ObligationCauseCode::CompareImplMethodObligation;\n-use rustc::ty::Ty;\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::ty::Ty;\n+use rustc_middle::util::common::ErrorReported;\n use rustc_span::Span;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {"}, {"sha": "d35a589320badcbe8136922fa909fbe50ddffc1b", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,9 +2,9 @@\n //! anonymous regions.\n \n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use rustc::ty::{self, DefIdTree, Region, Ty};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::{self, DefIdTree, Region, Ty};\n use rustc_span::Span;\n \n // The struct contains the information about the anonymous region"}, {"sha": "81f37831af208222641c35bfbf37b6bc455fcce4", "filename": "src/librustc_infer/infer/error_reporting/note.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnote.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n use crate::infer::error_reporting::{note_and_explain_region, ObligationCauseExt};\n use crate::infer::{self, InferCtxt, SubregionOrigin};\n-use rustc::middle::region;\n-use rustc::ty::error::TypeError;\n-use rustc::ty::{self, Region};\n use rustc_errors::{struct_span_err, DiagnosticBuilder};\n+use rustc_middle::middle::region;\n+use rustc_middle::ty::error::TypeError;\n+use rustc_middle::ty::{self, Region};\n \n impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     pub(super) fn note_region_origin("}, {"sha": "eeaa4c1661e4e205393a8dcf181ae31951131535", "filename": "src/librustc_infer/infer/freshen.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ffreshen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ffreshen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ffreshen.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -31,8 +31,8 @@\n //! variable only once, and it does so as soon as it can, so it is reasonable to ask what the type\n //! inferencer knows \"so far\".\n \n-use rustc::ty::fold::TypeFolder;\n-use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::fold::TypeFolder;\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n \n use rustc_data_structures::fx::FxHashMap;\n "}, {"sha": "1a58e100fb3f4bfffb7233d9bb4b365021d7ce6a", "filename": "src/librustc_infer/infer/fudge.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ffudge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ffudge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ffudge.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,5 +1,5 @@\n-use rustc::ty::fold::{TypeFoldable, TypeFolder};\n-use rustc::ty::{self, ConstVid, FloatVid, IntVid, RegionVid, Ty, TyCtxt, TyVid};\n+use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc_middle::ty::{self, ConstVid, FloatVid, IntVid, RegionVid, Ty, TyCtxt, TyVid};\n \n use super::type_variable::TypeVariableOrigin;\n use super::InferCtxt;"}, {"sha": "f95d74a9340c9fbd7920f04752795e52ca05f7a6", "filename": "src/librustc_infer/infer/glb.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fglb.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -4,8 +4,8 @@ use super::InferCtxt;\n use super::Subtype;\n \n use crate::traits::ObligationCause;\n-use rustc::ty::relate::{Relate, RelateResult, TypeRelation};\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n /// \"Greatest lower bound\" (common subtype)\n pub struct Glb<'combine, 'infcx, 'tcx> {"}, {"sha": "ef18918c1772f7ddfccdda79da9c630d2abd7a4f", "filename": "src/librustc_infer/infer/higher_ranked/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -5,8 +5,8 @@ use super::combine::CombineFields;\n use super::{HigherRankedType, InferCtxt, PlaceholderMap};\n \n use crate::infer::CombinedSnapshot;\n-use rustc::ty::relate::{Relate, RelateResult, TypeRelation};\n-use rustc::ty::{self, Binder, TypeFoldable};\n+use rustc_middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::{self, Binder, TypeFoldable};\n \n impl<'a, 'tcx> CombineFields<'a, 'tcx> {\n     pub fn higher_ranked_sub<T>("}, {"sha": "c29614b855667b6e4950efada1854b4c58c15406", "filename": "src/librustc_infer/infer/lattice.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Flattice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Flattice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flattice.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -23,9 +23,9 @@ use super::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use super::InferCtxt;\n \n use crate::traits::ObligationCause;\n-use rustc::ty::relate::{RelateResult, TypeRelation};\n-use rustc::ty::TyVar;\n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::relate::{RelateResult, TypeRelation};\n+use rustc_middle::ty::TyVar;\n+use rustc_middle::ty::{self, Ty};\n \n pub trait LatticeDir<'f, 'tcx>: TypeRelation<'tcx> {\n     fn infcx(&self) -> &'f InferCtxt<'f, 'tcx>;"}, {"sha": "c43d8107b2fe9ad96e35dc4cde30a53d2202f2f2", "filename": "src/librustc_infer/infer/lexical_region_resolve/graphviz.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,5 +1,5 @@\n //! This module provides linkage between libgraphviz traits and\n-//! `rustc::middle::typeck::infer::region_constraints`, generating a\n+//! `rustc_middle::middle::typeck::infer::region_constraints`, generating a\n //! rendering of the graph represented by the list of `Constraint`\n //! instances (which make up the edges of the graph), as well as the\n //! origin for each constraint (which are attached to the labels on\n@@ -11,11 +11,11 @@ use graphviz as dot;\n use super::Constraint;\n use crate::infer::region_constraints::RegionConstraintData;\n use crate::infer::SubregionOrigin;\n-use rustc::middle::free_region::RegionRelations;\n-use rustc::middle::region;\n-use rustc::ty;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def_id::DefIndex;\n+use rustc_middle::middle::free_region::RegionRelations;\n+use rustc_middle::middle::region;\n+use rustc_middle::ty;\n \n use std::borrow::Cow;\n use std::collections::btree_map::BTreeMap;"}, {"sha": "8a73c8b880ee26b68e5ced3af951d58c9c9df9d1", "filename": "src/librustc_infer/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -9,17 +9,17 @@ use crate::infer::region_constraints::VerifyBound;\n use crate::infer::RegionVariableOrigin;\n use crate::infer::RegionckMode;\n use crate::infer::SubregionOrigin;\n-use rustc::middle::free_region::RegionRelations;\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::ty::{ReEarlyBound, ReEmpty, ReErased, ReFree, ReStatic};\n-use rustc::ty::{ReLateBound, RePlaceholder, ReScope, ReVar};\n-use rustc::ty::{Region, RegionVid};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{\n     Direction, Graph, NodeIndex, INCOMING, OUTGOING,\n };\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_middle::middle::free_region::RegionRelations;\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::{ReEarlyBound, ReEmpty, ReErased, ReFree, ReStatic};\n+use rustc_middle::ty::{ReLateBound, RePlaceholder, ReScope, ReVar};\n+use rustc_middle::ty::{Region, RegionVid};\n use rustc_span::Span;\n use std::fmt;\n "}, {"sha": "492f2b229d36d3ace1bc65d2f965d687401201b6", "filename": "src/librustc_infer/infer/lub.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Flub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Flub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flub.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -4,8 +4,8 @@ use super::InferCtxt;\n use super::Subtype;\n \n use crate::traits::ObligationCause;\n-use rustc::ty::relate::{Relate, RelateResult, TypeRelation};\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n /// \"Least upper bound\" (common supertype)\n pub struct Lub<'combine, 'infcx, 'tcx> {"}, {"sha": "edaa7a04b34d02caa60859fab828e727cd41597b", "filename": "src/librustc_infer/infer/mod.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -8,28 +8,28 @@ pub use self::ValuePairs::*;\n \n use crate::traits::{self, ObligationCause, PredicateObligations, TraitEngine};\n \n-use rustc::infer::canonical::{Canonical, CanonicalVarValues};\n-use rustc::infer::unify_key::{ConstVarValue, ConstVariableValue};\n-use rustc::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind, ToType};\n-use rustc::middle::free_region::RegionRelations;\n-use rustc::middle::region;\n-use rustc::mir;\n-use rustc::mir::interpret::ConstEvalResult;\n-use rustc::traits::select;\n-use rustc::ty::error::{ExpectedFound, TypeError, UnconstrainedNumeric};\n-use rustc::ty::fold::{TypeFoldable, TypeFolder};\n-use rustc::ty::relate::RelateResult;\n-use rustc::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef};\n-pub use rustc::ty::IntVarValue;\n-use rustc::ty::{self, GenericParamDefKind, InferConst, Ty, TyCtxt};\n-use rustc::ty::{ConstVid, FloatVid, IntVid, TyVid};\n use rustc_ast::ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::unify as ut;\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n+use rustc_middle::infer::canonical::{Canonical, CanonicalVarValues};\n+use rustc_middle::infer::unify_key::{ConstVarValue, ConstVariableValue};\n+use rustc_middle::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind, ToType};\n+use rustc_middle::middle::free_region::RegionRelations;\n+use rustc_middle::middle::region;\n+use rustc_middle::mir;\n+use rustc_middle::mir::interpret::ConstEvalResult;\n+use rustc_middle::traits::select;\n+use rustc_middle::ty::error::{ExpectedFound, TypeError, UnconstrainedNumeric};\n+use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc_middle::ty::relate::RelateResult;\n+use rustc_middle::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef};\n+pub use rustc_middle::ty::IntVarValue;\n+use rustc_middle::ty::{self, GenericParamDefKind, InferConst, Ty, TyCtxt};\n+use rustc_middle::ty::{ConstVid, FloatVid, IntVid, TyVid};\n use rustc_session::config::BorrowckMode;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n@@ -65,7 +65,7 @@ mod sub;\n pub mod type_variable;\n \n use crate::infer::canonical::OriginalQueryValues;\n-pub use rustc::infer::unify_key;\n+pub use rustc_middle::infer::unify_key;\n \n #[must_use]\n #[derive(Debug)]\n@@ -672,8 +672,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     }\n \n     pub fn type_is_unconstrained_numeric(&'a self, ty: Ty<'_>) -> UnconstrainedNumeric {\n-        use rustc::ty::error::UnconstrainedNumeric::Neither;\n-        use rustc::ty::error::UnconstrainedNumeric::{UnconstrainedFloat, UnconstrainedInt};\n+        use rustc_middle::ty::error::UnconstrainedNumeric::Neither;\n+        use rustc_middle::ty::error::UnconstrainedNumeric::{UnconstrainedFloat, UnconstrainedInt};\n         match ty.kind {\n             ty::Infer(ty::IntVar(vid)) => {\n                 if self.inner.borrow_mut().int_unification_table.probe_value(vid).is_some() {"}, {"sha": "44bacfa80e125671a65f83207a0338ec19a0441d", "filename": "src/librustc_infer/infer/nll_relate/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -24,12 +24,12 @@\n use crate::infer::InferCtxt;\n use crate::infer::{ConstVarValue, ConstVariableValue};\n use crate::traits::DomainGoal;\n-use rustc::ty::error::TypeError;\n-use rustc::ty::fold::{TypeFoldable, TypeVisitor};\n-use rustc::ty::relate::{self, Relate, RelateResult, TypeRelation};\n-use rustc::ty::subst::GenericArg;\n-use rustc::ty::{self, InferConst, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_middle::ty::error::TypeError;\n+use rustc_middle::ty::fold::{TypeFoldable, TypeVisitor};\n+use rustc_middle::ty::relate::{self, Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::subst::GenericArg;\n+use rustc_middle::ty::{self, InferConst, Ty, TyCtxt};\n use std::fmt::Debug;\n \n #[derive(PartialEq)]"}, {"sha": "38c3f0ee6ac1b57ebb48c868b5d1fed131772754", "filename": "src/librustc_infer/infer/outlives/env.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n use crate::infer::{GenericKind, InferCtxt};\n use crate::traits::query::OutlivesBound;\n-use rustc::ty;\n-use rustc::ty::free_region_map::FreeRegionMap;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n+use rustc_middle::ty;\n+use rustc_middle::ty::free_region_map::FreeRegionMap;\n \n use super::explicit_outlives_bounds;\n "}, {"sha": "ed3d86058696802f5fca9cc5017048cd351968ed", "filename": "src/librustc_infer/infer/outlives/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -4,8 +4,8 @@ pub mod env;\n pub mod obligations;\n pub mod verify;\n \n-use rustc::traits::query::OutlivesBound;\n-use rustc::ty;\n+use rustc_middle::traits::query::OutlivesBound;\n+use rustc_middle::ty;\n \n pub fn explicit_outlives_bounds<'tcx>(\n     param_env: ty::ParamEnv<'tcx>,"}, {"sha": "e6feb5e1edcb56902ddd0d353e2f9805d7f02c75", "filename": "src/librustc_infer/infer/outlives/obligations.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fobligations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fobligations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fobligations.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -63,9 +63,9 @@ use crate::infer::outlives::env::RegionBoundPairs;\n use crate::infer::outlives::verify::VerifyBoundCx;\n use crate::infer::{self, GenericKind, InferCtxt, RegionObligation, SubregionOrigin, VerifyBound};\n use crate::traits::ObligationCause;\n-use rustc::ty::outlives::Component;\n-use rustc::ty::subst::GenericArgKind;\n-use rustc::ty::{self, Region, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::outlives::Component;\n+use rustc_middle::ty::subst::GenericArgKind;\n+use rustc_middle::ty::{self, Region, Ty, TyCtxt, TypeFoldable};\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;"}, {"sha": "1cd6830b6a241cca0cfefa11e139948e96aa2244", "filename": "src/librustc_infer/infer/outlives/verify.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,10 +1,10 @@\n use crate::infer::outlives::env::RegionBoundPairs;\n use crate::infer::{GenericKind, VerifyBound};\n use crate::traits;\n-use rustc::ty::subst::{InternalSubsts, Subst};\n-use rustc::ty::{self, Ty, TyCtxt};\n use rustc_data_structures::captures::Captures;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n use smallvec::smallvec;\n "}, {"sha": "18e86162eb5e40ac1126cb5998389dc571c2fa92", "filename": "src/librustc_infer/infer/region_constraints/leak_check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n use super::*;\n use crate::infer::{CombinedSnapshot, PlaceholderMap};\n-use rustc::ty::error::TypeError;\n-use rustc::ty::relate::RelateResult;\n+use rustc_middle::ty::error::TypeError;\n+use rustc_middle::ty::relate::RelateResult;\n \n impl<'tcx> RegionConstraintCollector<'tcx> {\n     /// Searches region constraints created since `snapshot` that"}, {"sha": "e10b0938955affd93e35c732a93bb16ac50a5f8b", "filename": "src/librustc_infer/infer/region_constraints/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -6,15 +6,15 @@ use self::UndoLog::*;\n use super::unify_key;\n use super::{MiscVariable, RegionVariableOrigin, SubregionOrigin};\n \n-use rustc::ty::ReStatic;\n-use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::ty::{ReLateBound, ReVar};\n-use rustc::ty::{Region, RegionVid};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::unify as ut;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::ty::ReStatic;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::{ReLateBound, ReVar};\n+use rustc_middle::ty::{Region, RegionVid};\n use rustc_span::Span;\n \n use std::collections::BTreeMap;\n@@ -23,7 +23,7 @@ use std::{cmp, fmt, mem};\n \n mod leak_check;\n \n-pub use rustc::infer::MemberConstraint;\n+pub use rustc_middle::infer::MemberConstraint;\n \n #[derive(Default)]\n pub struct RegionConstraintCollector<'tcx> {"}, {"sha": "22b90f2415540c5aa6442dd3a394813a0b589b41", "filename": "src/librustc_infer/infer/resolve.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fresolve.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n use super::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use super::{FixupError, FixupResult, InferCtxt, Span};\n-use rustc::ty::fold::{TypeFolder, TypeVisitor};\n-use rustc::ty::{self, Const, InferConst, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::fold::{TypeFolder, TypeVisitor};\n+use rustc_middle::ty::{self, Const, InferConst, Ty, TyCtxt, TypeFoldable};\n \n ///////////////////////////////////////////////////////////////////////////\n // OPPORTUNISTIC VAR RESOLVER"}, {"sha": "080af37492d89a4eb56e50ad9fd56b70fb455ef2", "filename": "src/librustc_infer/infer/sub.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fsub.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,10 +2,10 @@ use super::combine::{CombineFields, RelationDir};\n use super::SubregionOrigin;\n \n use crate::traits::Obligation;\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::relate::{Cause, Relate, RelateResult, TypeRelation};\n-use rustc::ty::TyVar;\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::relate::{Cause, Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::TyVar;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use std::mem;\n \n /// Ensures `a` is made a subtype of `b`. Returns `a` on success."}, {"sha": "8e4199f0c263db333bf6c8980f2bfa1d1d5cb43b", "filename": "src/librustc_infer/infer/type_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,5 +1,5 @@\n-use rustc::ty::{self, Ty, TyVid};\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::{self, Ty, TyVid};\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n "}, {"sha": "5dd5165b688cff21ade2422aad66fdb451c8f141", "filename": "src/librustc_infer/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -30,7 +30,7 @@ extern crate rustc_data_structures;\n #[macro_use]\n extern crate log;\n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n \n pub mod infer;\n pub mod traits;"}, {"sha": "a95257ba6820a0c737a43506ff60f4ee40118ce1", "filename": "src/librustc_infer/traits/engine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fengine.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n use crate::infer::InferCtxt;\n use crate::traits::Obligation;\n-use rustc::ty::{self, ToPredicate, Ty, WithConstness};\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::{self, ToPredicate, Ty, WithConstness};\n \n use super::FulfillmentError;\n use super::{ObligationCause, PredicateObligation};"}, {"sha": "9206166d0bd67bd6e73434137a373ea3abff6ad9", "filename": "src/librustc_infer/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,12 +1,12 @@\n use super::ObjectSafetyViolation;\n \n use crate::infer::InferCtxt;\n-use rustc::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::Span;\n use std::fmt;\n "}, {"sha": "0c451998be435b08ce3fa2f9efdcfbca76dbd75e", "filename": "src/librustc_infer/traits/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -8,9 +8,9 @@ mod project;\n mod structural_impls;\n mod util;\n \n-use rustc::ty::error::{ExpectedFound, TypeError};\n-use rustc::ty::{self, Ty};\n use rustc_hir as hir;\n+use rustc_middle::ty::error::{ExpectedFound, TypeError};\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::Span;\n \n pub use self::FulfillmentErrorCode::*;\n@@ -26,7 +26,7 @@ pub use self::project::{\n };\n crate use self::util::elaborate_predicates;\n \n-pub use rustc::traits::*;\n+pub use rustc_middle::traits::*;\n \n /// An `Obligation` represents some trait reference (e.g., `int: Eq`) for\n /// which the vtable must be found. The process of finding a vtable is"}, {"sha": "48375a9ddf418eba274b1d6b1339e1615018b43a", "filename": "src/librustc_infer/traits/project.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fproject.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,11 +2,11 @@\n \n use super::PredicateObligation;\n \n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::{self, Ty};\n use rustc_data_structures::snapshot_map::{Snapshot, SnapshotMap};\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::{self, Ty};\n \n-pub use rustc::traits::Reveal;\n+pub use rustc_middle::traits::Reveal;\n \n #[derive(Clone)]\n pub struct MismatchedProjectionTypes<'tcx> {"}, {"sha": "595a8cd768390e5d4613e2faf211baebb8e73359", "filename": "src/librustc_infer/traits/structural_impls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fstructural_impls.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n use crate::traits;\n use crate::traits::project::Normalized;\n-use rustc::ty;\n-use rustc::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n+use rustc_middle::ty;\n+use rustc_middle::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n \n use std::fmt;\n "}, {"sha": "80a1e2828090f4ca94802359eebd61a63845d439", "filename": "src/librustc_infer/traits/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_infer%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Futil.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,8 +1,8 @@\n use smallvec::smallvec;\n \n-use rustc::ty::outlives::Component;\n-use rustc::ty::{self, ToPolyTraitRef, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_middle::ty::outlives::Component;\n+use rustc_middle::ty::{self, ToPolyTraitRef, TyCtxt};\n \n fn anonymize_predicate<'tcx>(tcx: TyCtxt<'tcx>, pred: &ty::Predicate<'tcx>) -> ty::Predicate<'tcx> {\n     match *pred {"}, {"sha": "c9d81e51641a8b2f49bb50745992f47cb6c9663b", "filename": "src/librustc_interface/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2FCargo.toml?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -21,7 +21,7 @@ rustc_parse = { path = \"../librustc_parse\" }\n rustc_session = { path = \"../librustc_session\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n-rustc = { path = \"../librustc\" }\n+rustc_middle = { path = \"../librustc_middle\" }\n rustc_ast_lowering = { path = \"../librustc_ast_lowering\" }\n rustc_ast_passes = { path = \"../librustc_ast_passes\" }\n rustc_incremental = { path = \"../librustc_incremental\" }"}, {"sha": "88c3d0ec56f6877e773018eb412c9280cdf6996d", "filename": "src/librustc_interface/callbacks.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Fcallbacks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Fcallbacks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fcallbacks.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,6 +1,6 @@\n //! Throughout the compiler tree, there are several places which want to have\n //! access to state or queries while being inside crates that are dependencies\n-//! of librustc. To facilitate this, we have the\n+//! of librustc_middle. To facilitate this, we have the\n //! `rustc_data_structures::AtomicRef` type, which allows us to setup a global\n //! static which can then be set in this file at program startup.\n //!\n@@ -9,12 +9,12 @@\n //! The functions in this file should fall back to the default set in their\n //! origin crate when the `TyCtxt` is not present in TLS.\n \n-use rustc::ty::tls;\n use rustc_errors::{Diagnostic, TRACK_DIAGNOSTICS};\n+use rustc_middle::ty::tls;\n use std::fmt;\n \n /// This is a callback from librustc_ast as it cannot access the implicit state\n-/// in librustc otherwise.\n+/// in librustc_middle otherwise.\n fn span_debug(span: rustc_span::Span, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n     tls::with_opt(|tcx| {\n         if let Some(tcx) = tcx {\n@@ -26,7 +26,7 @@ fn span_debug(span: rustc_span::Span, f: &mut fmt::Formatter<'_>) -> fmt::Result\n }\n \n /// This is a callback from librustc_ast as it cannot access the implicit state\n-/// in librustc otherwise. It is used to when diagnostic messages are\n+/// in librustc_middle otherwise. It is used to when diagnostic messages are\n /// emitted and stores them in the current query, if there is one.\n fn track_diagnostic(diagnostic: &Diagnostic) {\n     tls::with_context_opt(|icx| {\n@@ -40,7 +40,7 @@ fn track_diagnostic(diagnostic: &Diagnostic) {\n }\n \n /// This is a callback from librustc_hir as it cannot access the implicit state\n-/// in librustc otherwise.\n+/// in librustc_middle otherwise.\n fn def_id_debug(def_id: rustc_hir::def_id::DefId, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n     write!(f, \"DefId({}:{}\", def_id.krate, def_id.index.index())?;\n     tls::with_opt(|opt_tcx| {\n@@ -58,5 +58,5 @@ pub fn setup_callbacks() {\n     rustc_span::SPAN_DEBUG.swap(&(span_debug as fn(_, &mut fmt::Formatter<'_>) -> _));\n     rustc_hir::def_id::DEF_ID_DEBUG.swap(&(def_id_debug as fn(_, &mut fmt::Formatter<'_>) -> _));\n     TRACK_DIAGNOSTICS.swap(&(track_diagnostic as fn(&_)));\n-    rustc::ty::RESOLVE_INSTANCE.swap(&(rustc_ty::instance::resolve_instance as _));\n+    rustc_middle::ty::RESOLVE_INSTANCE.swap(&(rustc_ty::instance::resolve_instance as _));\n }"}, {"sha": "a50e802ac2ec677887d2be370a64a43775187b95", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,8 +1,6 @@\n pub use crate::passes::BoxedResolver;\n use crate::util;\n \n-use rustc::ty;\n-use rustc::util::common::ErrorReported;\n use rustc_ast::ast::{self, MetaItemKind};\n use rustc_ast::token;\n use rustc_codegen_ssa::traits::CodegenBackend;\n@@ -11,6 +9,8 @@ use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::OnDrop;\n use rustc_errors::registry::Registry;\n use rustc_lint::LintStore;\n+use rustc_middle::ty;\n+use rustc_middle::util::common::ErrorReported;\n use rustc_parse::new_parser_from_source_str;\n use rustc_session::config::{self, ErrorOutputType, Input, OutputFilenames};\n use rustc_session::early_error;"}, {"sha": "7d066a31a079710e64257571113d0a0028891d25", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -3,13 +3,6 @@ use crate::proc_macro_decls;\n use crate::util;\n \n use log::{info, log_enabled, warn};\n-use rustc::arena::Arena;\n-use rustc::dep_graph::DepGraph;\n-use rustc::middle;\n-use rustc::middle::cstore::{CrateStore, MetadataLoader, MetadataLoaderDyn};\n-use rustc::ty::steal::Steal;\n-use rustc::ty::{self, GlobalCtxt, ResolverOutputs, TyCtxt};\n-use rustc::util::common::ErrorReported;\n use rustc_ast::mut_visit::MutVisitor;\n use rustc_ast::{self, ast, visit};\n use rustc_codegen_ssa::back::link::emit_metadata;\n@@ -22,6 +15,13 @@ use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_hir::definitions::Definitions;\n use rustc_hir::Crate;\n use rustc_lint::LintStore;\n+use rustc_middle::arena::Arena;\n+use rustc_middle::dep_graph::DepGraph;\n+use rustc_middle::middle;\n+use rustc_middle::middle::cstore::{CrateStore, MetadataLoader, MetadataLoaderDyn};\n+use rustc_middle::ty::steal::Steal;\n+use rustc_middle::ty::{self, GlobalCtxt, ResolverOutputs, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_mir as mir;\n use rustc_mir_build as mir_build;\n use rustc_parse::{parse_crate_from_file, parse_crate_from_source_str};\n@@ -678,7 +678,7 @@ pub fn default_provide(providers: &mut ty::query::Providers<'_>) {\n     providers.analysis = analysis;\n     proc_macro_decls::provide(providers);\n     plugin::build::provide(providers);\n-    rustc::hir::provide(providers);\n+    rustc_middle::hir::provide(providers);\n     mir::provide(providers);\n     mir_build::provide(providers);\n     rustc_privacy::provide(providers);"}, {"sha": "47b53aeba725d9f42aabcd30b37e21e8568585fd", "filename": "src/librustc_interface/proc_macro_decls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Fproc_macro_decls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Fproc_macro_decls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fproc_macro_decls.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n-use rustc::ty::query::Providers;\n-use rustc::ty::TyCtxt;\n use rustc_ast::attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n \n pub fn find(tcx: TyCtxt<'_>) -> Option<DefId> {"}, {"sha": "995776552dd1820263ad6372df925c2ac2374c65", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,18 +1,18 @@\n use crate::interface::{Compiler, Result};\n use crate::passes::{self, BoxedResolver, QueryContext};\n \n-use rustc::arena::Arena;\n-use rustc::dep_graph::DepGraph;\n-use rustc::ty::steal::Steal;\n-use rustc::ty::{GlobalCtxt, ResolverOutputs, TyCtxt};\n-use rustc::util::common::ErrorReported;\n use rustc_ast::{self, ast};\n use rustc_codegen_ssa::traits::CodegenBackend;\n use rustc_data_structures::sync::{Lrc, Once, WorkerLocal};\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir::Crate;\n use rustc_incremental::DepGraphFuture;\n use rustc_lint::LintStore;\n+use rustc_middle::arena::Arena;\n+use rustc_middle::dep_graph::DepGraph;\n+use rustc_middle::ty::steal::Steal;\n+use rustc_middle::ty::{GlobalCtxt, ResolverOutputs, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_session::config::{OutputFilenames, OutputType};\n use rustc_session::{output::find_crate_name, Session};\n use rustc_span::symbol::sym;"}, {"sha": "a9d9052423ca4dc0e74364678efebbc80ba078c7", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,9 +2,9 @@ extern crate getopts;\n \n use crate::interface::parse_cfgspecs;\n \n-use rustc::middle::cstore;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{emitter::HumanReadableErrorType, registry, ColorConfig};\n+use rustc_middle::middle::cstore;\n use rustc_session::config::{build_configuration, build_session_options, to_crate_config};\n use rustc_session::config::{rustc_optgroups, ErrorOutputType, ExternLocation, Options, Passes};\n use rustc_session::config::{ExternEntry, LinkerPluginLto, LtoCli, SwitchWithOptPath};"}, {"sha": "a8cc34e185439e9e4afe073482999c211d4d544c", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,5 +1,4 @@\n use log::info;\n-use rustc::ty;\n use rustc_ast::ast::{AttrVec, BlockCheckMode};\n use rustc_ast::mut_visit::{visit_clobber, MutVisitor, *};\n use rustc_ast::ptr::P;\n@@ -14,6 +13,7 @@ use rustc_data_structures::stable_hasher::StableHasher;\n use rustc_data_structures::sync::{Lock, Lrc};\n use rustc_errors::registry::Registry;\n use rustc_metadata::dynamic_lib::DynamicLibrary;\n+use rustc_middle::ty;\n use rustc_resolve::{self, Resolver};\n use rustc_session as session;\n use rustc_session::config::{ErrorOutputType, Input, OutputFilenames};"}, {"sha": "44a5ba3de517c2b310e1e03c014f303df0c05f00", "filename": "src/librustc_lint/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2FCargo.toml?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -11,7 +11,7 @@ path = \"lib.rs\"\n [dependencies]\n log = \"0.4\"\n unicode-security = \"0.0.2\"\n-rustc = { path = \"../librustc\" }\n+rustc_middle = { path = \"../librustc_middle\" }\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "3eb587c016acb18c7f9b85b1d82d6738fe10a728", "filename": "src/librustc_lint/array_into_iter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Farray_into_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Farray_into_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Farray_into_iter.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,8 +1,8 @@\n use crate::{LateContext, LateLintPass, LintContext};\n-use rustc::ty;\n-use rustc::ty::adjustment::{Adjust, Adjustment};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n+use rustc_middle::ty;\n+use rustc_middle::ty::adjustment::{Adjust, Adjustment};\n use rustc_session::lint::FutureIncompatibleInfo;\n use rustc_span::symbol::sym;\n "}, {"sha": "937164fb55d9d4888da1ea2a5ad2d4022f2065b0", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,17 +1,16 @@\n //! Lints in the Rust compiler.\n //!\n //! This contains lints which can feasibly be implemented as their own\n-//! AST visitor. Also see `rustc::lint::builtin`, which contains the\n-//! definitions of lints that are emitted directly inside the main\n-//! compiler.\n+//! AST visitor. Also see `rustc_session::lint::builtin`, which contains the\n+//! definitions of lints that are emitted directly inside the main compiler.\n //!\n //! To add a new lint to rustc, declare it here using `declare_lint!()`.\n //! Then add code to emit the new lint in the appropriate circumstances.\n //! You can do that in an existing `LintPass` if it makes sense, or in a\n //! new `LintPass`, or using `Session::add_lint` elsewhere in the\n //! compiler. Only do the latter if the check can't be written cleanly as a\n //! `LintPass` (also, note that such lints will need to be defined in\n-//! `rustc::lint::builtin`, not here).\n+//! `rustc_session::lint::builtin`, not here).\n //!\n //! If you define a new `EarlyLintPass`, you will also need to add it to the\n //! `add_early_builtin!` or `add_early_builtin_with_new!` invocation in\n@@ -22,8 +21,6 @@\n //! `late_lint_methods!` invocation in `lib.rs`.\n \n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc::lint::LintDiagnosticBuilder;\n-use rustc::ty::{self, layout::VariantIdx, Ty, TyCtxt};\n use rustc_ast::ast::{self, Expr};\n use rustc_ast::attr::{self, HasAttrs};\n use rustc_ast::tokenstream::{TokenStream, TokenTree};\n@@ -38,6 +35,8 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::{GenericParamKind, PatKind};\n use rustc_hir::{HirIdSet, Node};\n+use rustc_middle::lint::LintDiagnosticBuilder;\n+use rustc_middle::ty::{self, layout::VariantIdx, Ty, TyCtxt};\n use rustc_session::lint::FutureIncompatibleInfo;\n use rustc_span::edition::Edition;\n use rustc_span::source_map::Spanned;\n@@ -50,7 +49,7 @@ use crate::nonstandard_style::{method_context, MethodLateContext};\n use log::debug;\n use std::fmt::Write;\n \n-// hardwired lints from librustc\n+// hardwired lints from librustc_middle\n pub use rustc_session::lint::builtin::*;\n \n declare_lint! {\n@@ -1207,8 +1206,8 @@ declare_lint_pass!(\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TrivialConstraints {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx hir::Item<'tcx>) {\n-        use rustc::ty::fold::TypeFoldable;\n-        use rustc::ty::Predicate::*;\n+        use rustc_middle::ty::fold::TypeFoldable;\n+        use rustc_middle::ty::Predicate::*;\n \n         if cx.tcx.features().trivial_bounds {\n             let def_id = cx.tcx.hir().local_def_id(item.hir_id);\n@@ -1558,7 +1557,7 @@ impl ExplicitOutlivesRequirements {\n         inferred_outlives: &[ty::Region<'tcx>],\n         infer_static: bool,\n     ) -> Vec<(usize, Span)> {\n-        use rustc::middle::resolve_lifetime::Region;\n+        use rustc_middle::middle::resolve_lifetime::Region;\n \n         bounds\n             .iter()\n@@ -1641,7 +1640,7 @@ impl ExplicitOutlivesRequirements {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ExplicitOutlivesRequirements {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx hir::Item<'_>) {\n-        use rustc::middle::resolve_lifetime::Region;\n+        use rustc_middle::middle::resolve_lifetime::Region;\n \n         let infer_static = cx.tcx.features().infer_static_outlives_requirements;\n         let def_id = cx.tcx.hir().local_def_id(item.hir_id);\n@@ -1926,7 +1925,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for InvalidValue {\n             ty: Ty<'tcx>,\n             init: InitKind,\n         ) -> Option<InitError> {\n-            use rustc::ty::TyKind::*;\n+            use rustc_middle::ty::TyKind::*;\n             match ty.kind {\n                 // Primitive types that don't like 0 as a value.\n                 Ref(..) => Some((\"references must be non-null\".to_string(), None)),"}, {"sha": "4d644ce69eac248eb9d38aba9c92e1c94bbeaf24", "filename": "src/librustc_lint/context.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fcontext.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -18,11 +18,6 @@ use self::TargetLint::*;\n \n use crate::levels::LintLevelsBuilder;\n use crate::passes::{EarlyLintPassObject, LateLintPassObject};\n-use rustc::lint::LintDiagnosticBuilder;\n-use rustc::middle::privacy::AccessLevels;\n-use rustc::middle::stability;\n-use rustc::ty::layout::{LayoutError, LayoutOf, TyAndLayout};\n-use rustc::ty::{self, print::Printer, subst::GenericArg, Ty, TyCtxt};\n use rustc_ast::ast;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::FxHashMap;\n@@ -31,6 +26,11 @@ use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n+use rustc_middle::lint::LintDiagnosticBuilder;\n+use rustc_middle::middle::privacy::AccessLevels;\n+use rustc_middle::middle::stability;\n+use rustc_middle::ty::layout::{LayoutError, LayoutOf, TyAndLayout};\n+use rustc_middle::ty::{self, print::Printer, subst::GenericArg, Ty, TyCtxt};\n use rustc_session::lint::{add_elided_lifetime_in_path_suggestion, BuiltinLintDiagnostics};\n use rustc_session::lint::{FutureIncompatibleInfo, Level, Lint, LintBuffer, LintId};\n use rustc_session::Session;"}, {"sha": "1999a8ec5f60d564a7e913fb43e9bcce7c542e6e", "filename": "src/librustc_lint/late.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flate.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -15,15 +15,15 @@\n //! for all lint attributes.\n \n use crate::{passes::LateLintPassObject, LateContext, LateLintPass, LintStore};\n-use rustc::hir::map::Map;\n-use rustc::ty::{self, TyCtxt};\n use rustc_ast::ast;\n use rustc_ast::walk_list;\n use rustc_data_structures::sync::{join, par_iter, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::intravisit as hir_visit;\n use rustc_hir::intravisit::Visitor;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_session::lint::LintPass;\n use rustc_span::Span;\n "}, {"sha": "c78b088fb12617935ee5563ce4f78bb4cb8f62ee", "filename": "src/librustc_lint/levels.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flevels.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,10 +1,5 @@\n use crate::context::{CheckLintNameResult, LintStore};\n use crate::late::unerased_lint_store;\n-use rustc::hir::map::Map;\n-use rustc::lint::LintDiagnosticBuilder;\n-use rustc::lint::{struct_lint_level, LintLevelMap, LintLevelSets, LintSet, LintSource};\n-use rustc::ty::query::Providers;\n-use rustc::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_ast::unwrap_or;\n@@ -14,6 +9,11 @@ use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_hir::{intravisit, HirId};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::LintDiagnosticBuilder;\n+use rustc_middle::lint::{struct_lint_level, LintLevelMap, LintLevelSets, LintSet, LintSource};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::lint::{builtin, Level, Lint};\n use rustc_session::parse::feature_err;\n use rustc_session::Session;"}, {"sha": "97261759aeb28f619dee10f58f5bc77e50cbad10", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -19,7 +19,7 @@\n //! example) requires more effort. See `emit_lint` and `GatherNodeLevels`\n //! in `context.rs`.\n //!\n-//! Some code also exists in `rustc_session::lint`, `rustc::lint`.\n+//! Some code also exists in `rustc_session::lint`, `rustc_middle::lint`.\n //!\n //! ## Note\n //!\n@@ -35,7 +35,7 @@\n #![recursion_limit = \"256\"]\n \n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n #[macro_use]\n extern crate rustc_session;\n \n@@ -53,11 +53,11 @@ mod redundant_semicolon;\n mod types;\n mod unused;\n \n-use rustc::ty::query::Providers;\n-use rustc::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::lint::builtin::{\n     BARE_TRAIT_OBJECTS, ELIDED_LIFETIMES_IN_PATHS, EXPLICIT_OUTLIVES_REQUIREMENTS,\n     INTRA_DOC_LINK_RESOLUTION_FAILURE, MISSING_DOC_CODE_EXAMPLES, PRIVATE_DOC_TESTS,"}, {"sha": "052b461039b23402e6a90dba452b4f25bbe667d7", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,12 +1,12 @@\n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc::ty;\n use rustc_ast::ast;\n use rustc_attr as attr;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{GenericParamKind, PatKind};\n+use rustc_middle::ty;\n use rustc_span::symbol::sym;\n use rustc_span::{symbol::Ident, BytePos, Span};\n use rustc_target::spec::abi::Abi;"}, {"sha": "52ec8cd938156289699d59b9c765cad246480356", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,10 +1,6 @@\n #![allow(non_snake_case)]\n \n use crate::{LateContext, LateLintPass, LintContext};\n-use rustc::mir::interpret::{sign_extend, truncate};\n-use rustc::ty::layout::{self, IntegerExt, LayoutOf, SizeSkeleton, VariantIdx};\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n use rustc_ast::ast;\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n@@ -13,6 +9,10 @@ use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{is_range_literal, ExprKind, Node};\n use rustc_index::vec::Idx;\n+use rustc_middle::mir::interpret::{sign_extend, truncate};\n+use rustc_middle::ty::layout::{self, IntegerExt, LayoutOf, SizeSkeleton, VariantIdx};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n use rustc_span::source_map;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n@@ -919,7 +919,7 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n     }\n \n     fn check_for_opaque_ty(&mut self, sp: Span, ty: Ty<'tcx>) -> bool {\n-        use crate::rustc::ty::TypeFoldable;\n+        use rustc_middle::ty::TypeFoldable;\n \n         struct ProhibitOpaqueTypes<'tcx> {\n             ty: Option<Ty<'tcx>>,"}, {"sha": "d14a3f0ff067382b6660e94eefe4cdc3267a4de0", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,6 +1,4 @@\n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc::ty::adjustment;\n-use rustc::ty::{self, Ty};\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_ast::util::parser;\n@@ -11,6 +9,8 @@ use rustc_feature::{AttributeType, BuiltinAttribute, BUILTIN_ATTRIBUTE_MAP};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::adjustment;\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::lint::builtin::UNUSED_ATTRIBUTES;\n use rustc_span::symbol::Symbol;\n use rustc_span::symbol::{kw, sym};"}, {"sha": "c955c137782764b6c283d46f3c23724842563617", "filename": "src/librustc_macros/src/hash_stable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -115,13 +115,13 @@ pub fn hash_stable_derive(mut s: synstructure::Structure<'_>) -> proc_macro2::To\n     s.bound_impl(\n         quote!(\n             ::rustc_data_structures::stable_hasher::HashStable<\n-                ::rustc::ich::StableHashingContext<'__ctx>,\n+                ::rustc_middle::ich::StableHashingContext<'__ctx>,\n             >\n         ),\n         quote! {\n             fn hash_stable(\n                 &self,\n-                __hcx: &mut ::rustc::ich::StableHashingContext<'__ctx>,\n+                __hcx: &mut ::rustc_middle::ich::StableHashingContext<'__ctx>,\n                 __hasher: &mut ::rustc_data_structures::stable_hasher::StableHasher) {\n                 #discriminant\n                 match *self { #body }"}, {"sha": "4bf4ce00a4d3826a9cb29ca8cb2096f1bbc3c2ab", "filename": "src/librustc_macros/src/lift.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_macros%2Fsrc%2Flift.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_macros%2Fsrc%2Flift.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Flift.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -39,11 +39,11 @@ pub fn lift_derive(mut s: synstructure::Structure<'_>) -> proc_macro2::TokenStre\n \n     s.add_impl_generic(newtcx);\n     s.bound_impl(\n-        quote!(::rustc::ty::Lift<'__lifted>),\n+        quote!(::rustc_middle::ty::Lift<'__lifted>),\n         quote! {\n             type Lifted = #lifted;\n \n-            fn lift_to_tcx(&self, __tcx: ::rustc::ty::TyCtxt<'__lifted>) -> Option<#lifted> {\n+            fn lift_to_tcx(&self, __tcx: ::rustc_middle::ty::TyCtxt<'__lifted>) -> Option<#lifted> {\n                 Some(match *self { #body })\n             }\n         },"}, {"sha": "08dc854e9ff59092a195a52681c31ac8763c519c", "filename": "src/librustc_macros/src/query.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_macros%2Fsrc%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_macros%2Fsrc%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fquery.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -429,7 +429,7 @@ pub fn rustc_queries(input: TokenStream) -> TokenStream {\n                 });\n \n                 try_load_from_on_disk_cache_stream.extend(quote! {\n-                    ::rustc::dep_graph::DepKind::#name => {\n+                    ::rustc_middle::dep_graph::DepKind::#name => {\n                         if <#arg as DepNodeParams<TyCtxt<'_>>>::CAN_RECONSTRUCT_QUERY_KEY {\n                             debug_assert!($tcx.dep_graph\n                                             .node_color($dep_node)\n@@ -486,7 +486,7 @@ pub fn rustc_queries(input: TokenStream) -> TokenStream {\n \n             // Add a match arm to force the query given the dep node\n             dep_node_force_stream.extend(quote! {\n-                ::rustc::dep_graph::DepKind::#name => {\n+                ::rustc_middle::dep_graph::DepKind::#name => {\n                     if <#arg as DepNodeParams<TyCtxt<'_>>>::CAN_RECONSTRUCT_QUERY_KEY {\n                         if let Some(key) = <#arg as DepNodeParams<TyCtxt<'_>>>::recover($tcx, $dep_node) {\n                             force_query::<crate::ty::query::queries::#name<'_>, _>(\n@@ -510,7 +510,7 @@ pub fn rustc_queries(input: TokenStream) -> TokenStream {\n     }\n \n     dep_node_force_stream.extend(quote! {\n-        ::rustc::dep_graph::DepKind::Null => {\n+        ::rustc_middle::dep_graph::DepKind::Null => {\n             bug!(\"Cannot force dep node: {:?}\", $dep_node)\n         }\n     });"}, {"sha": "6931e6552add28eab90b998e251deecefd08f77f", "filename": "src/librustc_macros/src/type_foldable.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_macros%2Fsrc%2Ftype_foldable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_macros%2Fsrc%2Ftype_foldable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Ftype_foldable.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -11,25 +11,25 @@ pub fn type_foldable_derive(mut s: synstructure::Structure<'_>) -> proc_macro2::\n         vi.construct(|_, index| {\n             let bind = &bindings[index];\n             quote! {\n-                ::rustc::ty::fold::TypeFoldable::fold_with(#bind, __folder)\n+                ::rustc_middle::ty::fold::TypeFoldable::fold_with(#bind, __folder)\n             }\n         })\n     });\n     let body_visit = s.fold(false, |acc, bind| {\n-        quote! { #acc || ::rustc::ty::fold::TypeFoldable::visit_with(#bind, __folder) }\n+        quote! { #acc || ::rustc_middle::ty::fold::TypeFoldable::visit_with(#bind, __folder) }\n     });\n \n     s.bound_impl(\n-        quote!(::rustc::ty::fold::TypeFoldable<'tcx>),\n+        quote!(::rustc_middle::ty::fold::TypeFoldable<'tcx>),\n         quote! {\n-            fn super_fold_with<__F: ::rustc::ty::fold::TypeFolder<'tcx>>(\n+            fn super_fold_with<__F: ::rustc_middle::ty::fold::TypeFolder<'tcx>>(\n                 &self,\n                 __folder: &mut __F\n             ) -> Self {\n                 match *self { #body_fold }\n             }\n \n-            fn super_visit_with<__F: ::rustc::ty::fold::TypeVisitor<'tcx>>(\n+            fn super_visit_with<__F: ::rustc_middle::ty::fold::TypeVisitor<'tcx>>(\n                 &self,\n                 __folder: &mut __F\n             ) -> bool {"}, {"sha": "a88ccd52e911122a5fb3a1723c207d0ea7881a34", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -14,7 +14,7 @@ flate2 = \"1.0\"\n log = \"0.4\"\n memmap = \"0.7\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n-rustc = { path = \"../librustc\" }\n+rustc_middle = { path = \"../librustc_middle\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "3e5d7b8efd530a5d31341446639ca9a62f3af454", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -3,9 +3,6 @@\n use crate::locator::{CrateLocator, CratePaths};\n use crate::rmeta::{CrateDep, CrateMetadata, CrateNumMap, CrateRoot, MetadataBlob};\n \n-use rustc::middle::cstore::DepKind;\n-use rustc::middle::cstore::{CrateSource, ExternCrate, ExternCrateSource, MetadataLoaderDyn};\n-use rustc::ty::TyCtxt;\n use rustc_ast::expand::allocator::{global_allocator_spans, AllocatorKind};\n use rustc_ast::{ast, attr};\n use rustc_data_structures::svh::Svh;\n@@ -15,6 +12,11 @@ use rustc_expand::base::SyntaxExtension;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_hir::definitions::Definitions;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::middle::cstore::DepKind;\n+use rustc_middle::middle::cstore::{\n+    CrateSource, ExternCrate, ExternCrateSource, MetadataLoaderDyn,\n+};\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::config;\n use rustc_session::output::validate_crate_name;\n use rustc_session::search_paths::PathKind;"}, {"sha": "91654067f08155e3206c8a359d3d1db26bcbe2b3", "filename": "src/librustc_metadata/dependency_format.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdependency_format.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -53,12 +53,12 @@\n \n use crate::creader::CStore;\n \n-use rustc::middle::cstore::LinkagePreference::{self, RequireDynamic, RequireStatic};\n-use rustc::middle::cstore::{self, DepKind};\n-use rustc::middle::dependency_format::{Dependencies, DependencyList, Linkage};\n-use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::CrateNum;\n+use rustc_middle::middle::cstore::LinkagePreference::{self, RequireDynamic, RequireStatic};\n+use rustc_middle::middle::cstore::{self, DepKind};\n+use rustc_middle::middle::dependency_format::{Dependencies, DependencyList, Linkage};\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::config;\n use rustc_target::spec::PanicStrategy;\n "}, {"sha": "b312aa37d46b027936e5eab75afaee9ed8b532bf", "filename": "src/librustc_metadata/foreign_modules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Fforeign_modules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Fforeign_modules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fforeign_modules.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n-use rustc::middle::cstore::ForeignModule;\n-use rustc::ty::TyCtxt;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::middle::cstore::ForeignModule;\n+use rustc_middle::ty::TyCtxt;\n \n crate fn collect(tcx: TyCtxt<'_>) -> Vec<ForeignModule> {\n     let mut collector = Collector { tcx, modules: Vec::new() };"}, {"sha": "22a2bf280415cc7a16370e925e961805cf88745b", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -14,7 +14,7 @@ extern crate libc;\n extern crate proc_macro;\n \n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n #[macro_use]\n extern crate rustc_data_structures;\n "}, {"sha": "2dd4a9c9dbcb114a113cc0951ed430365bb968cb", "filename": "src/librustc_metadata/link_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Flink_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Flink_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flink_args.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,6 +1,6 @@\n-use rustc::ty::TyCtxt;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n use rustc_target::spec::abi::Abi;\n "}, {"sha": "d56c8490ef5eea949bca79187a652c1c3db28199", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -215,11 +215,11 @@\n use crate::creader::Library;\n use crate::rmeta::{rustc_version, MetadataBlob, METADATA_HEADER};\n \n-use rustc::middle::cstore::{CrateSource, MetadataLoader};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;\n use rustc_errors::{struct_span_err, DiagnosticBuilder};\n+use rustc_middle::middle::cstore::{CrateSource, MetadataLoader};\n use rustc_session::filesearch::{FileDoesntMatch, FileMatches, FileSearch};\n use rustc_session::search_paths::PathKind;\n use rustc_session::{config, CrateDisambiguator, Session};"}, {"sha": "e952051eb9f6d662db838c894cc527e9125af078", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,10 +1,10 @@\n-use rustc::middle::cstore::{self, NativeLibrary};\n-use rustc::ty::TyCtxt;\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::middle::cstore::{self, NativeLibrary};\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::parse::feature_err;\n use rustc_session::Session;\n use rustc_span::source_map::Span;"}, {"sha": "004c5f2ebb7f41d19584953db4b8b3e977e5a3a9", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -4,17 +4,6 @@ use crate::creader::CrateMetadataRef;\n use crate::rmeta::table::{FixedSizeEncoding, Table};\n use crate::rmeta::*;\n \n-use rustc::dep_graph::{self, DepNode, DepNodeExt, DepNodeIndex};\n-use rustc::hir::exports::Export;\n-use rustc::middle::cstore::{CrateSource, ExternCrate};\n-use rustc::middle::cstore::{ForeignModule, LinkagePreference, NativeLibrary};\n-use rustc::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n-use rustc::middle::lang_items;\n-use rustc::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n-use rustc::mir::{self, interpret, BodyAndCache, Promoted};\n-use rustc::ty::codec::TyDecoder;\n-use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::util::common::record_time;\n use rustc_ast::ast::{self, Ident};\n use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;\n@@ -30,6 +19,17 @@ use rustc_hir::def_id::{CrateNum, DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX,\n use rustc_hir::definitions::DefPathTable;\n use rustc_hir::definitions::{DefKey, DefPath, DefPathData, DefPathHash};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_middle::dep_graph::{self, DepNode, DepNodeExt, DepNodeIndex};\n+use rustc_middle::hir::exports::Export;\n+use rustc_middle::middle::cstore::{CrateSource, ExternCrate};\n+use rustc_middle::middle::cstore::{ForeignModule, LinkagePreference, NativeLibrary};\n+use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n+use rustc_middle::mir::{self, interpret, BodyAndCache, Promoted};\n+use rustc_middle::ty::codec::TyDecoder;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::util::common::record_time;\n use rustc_serialize::{opaque, Decodable, Decoder, SpecializedDecoder};\n use rustc_session::Session;\n use rustc_span::source_map::{self, respan, Spanned};"}, {"sha": "c99b1dc360682955fb0b8772fe5d612f578342a5", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -4,13 +4,6 @@ use crate::link_args;\n use crate::native_libs;\n use crate::rmeta::{self, encoder};\n \n-use rustc::hir::exports::Export;\n-use rustc::middle::cstore::{CrateSource, CrateStore, EncodedMetadata, NativeLibraryKind};\n-use rustc::middle::exported_symbols::ExportedSymbol;\n-use rustc::middle::stability::DeprecationEntry;\n-use rustc::ty::query::Providers;\n-use rustc::ty::query::QueryConfig;\n-use rustc::ty::{self, TyCtxt};\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_ast::expand::allocator::AllocatorKind;\n@@ -19,6 +12,13 @@ use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::definitions::DefPathTable;\n use rustc_hir::definitions::{DefKey, DefPath, DefPathHash};\n+use rustc_middle::hir::exports::Export;\n+use rustc_middle::middle::cstore::{CrateSource, CrateStore, EncodedMetadata, NativeLibraryKind};\n+use rustc_middle::middle::exported_symbols::ExportedSymbol;\n+use rustc_middle::middle::stability::DeprecationEntry;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::query::QueryConfig;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_session::{CrateDisambiguator, Session};\n use rustc_span::source_map::{self, Span, Spanned};\n use rustc_span::symbol::Symbol;"}, {"sha": "aeea7db9e9e8bc403045b3ef88e41c6f7c58352d", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,16 +2,6 @@ use crate::rmeta::table::FixedSizeEncoding;\n use crate::rmeta::*;\n \n use log::{debug, trace};\n-use rustc::hir::map::Map;\n-use rustc::middle::cstore::{EncodedMetadata, ForeignModule, LinkagePreference, NativeLibrary};\n-use rustc::middle::dependency_format::Linkage;\n-use rustc::middle::exported_symbols::{metadata_symbol_name, ExportedSymbol, SymbolExportLevel};\n-use rustc::middle::lang_items;\n-use rustc::mir::{self, interpret};\n-use rustc::traits::specialization_graph;\n-use rustc::ty::codec::{self as ty_codec, TyEncoder};\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::{self, SymbolName, Ty, TyCtxt};\n use rustc_ast::ast::{self, Ident};\n use rustc_ast::attr;\n use rustc_data_structures::fingerprint::Fingerprint;\n@@ -27,6 +17,20 @@ use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::{ItemLikeVisitor, ParItemLikeVisitor};\n use rustc_hir::{AnonConst, GenericParamKind};\n use rustc_index::vec::Idx;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::cstore::{\n+    EncodedMetadata, ForeignModule, LinkagePreference, NativeLibrary,\n+};\n+use rustc_middle::middle::dependency_format::Linkage;\n+use rustc_middle::middle::exported_symbols::{\n+    metadata_symbol_name, ExportedSymbol, SymbolExportLevel,\n+};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir::{self, interpret};\n+use rustc_middle::traits::specialization_graph;\n+use rustc_middle::ty::codec::{self as ty_codec, TyEncoder};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::{self, SymbolName, Ty, TyCtxt};\n use rustc_serialize::{opaque, Encodable, Encoder, SpecializedEncoder};\n use rustc_session::config::{self, CrateType};\n use rustc_span::source_map::Spanned;"}, {"sha": "d0ad76b0fc7ea6302c2ac60ee032da82f74c5c1b", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,12 +1,6 @@\n use decoder::Metadata;\n use table::{Table, TableBuilder};\n \n-use rustc::hir::exports::Export;\n-use rustc::middle::cstore::{DepKind, ForeignModule, LinkagePreference, NativeLibrary};\n-use rustc::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n-use rustc::middle::lang_items;\n-use rustc::mir;\n-use rustc::ty::{self, ReprOptions, Ty};\n use rustc_ast::ast::{self, MacroDef};\n use rustc_attr as attr;\n use rustc_data_structures::svh::Svh;\n@@ -15,6 +9,12 @@ use rustc_hir as hir;\n use rustc_hir::def::CtorKind;\n use rustc_hir::def_id::{DefId, DefIndex};\n use rustc_index::vec::IndexVec;\n+use rustc_middle::hir::exports::Export;\n+use rustc_middle::middle::cstore::{DepKind, ForeignModule, LinkagePreference, NativeLibrary};\n+use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir;\n+use rustc_middle::ty::{self, ReprOptions, Ty};\n use rustc_serialize::opaque::Encoder;\n use rustc_session::config::SymbolManglingVersion;\n use rustc_session::CrateDisambiguator;"}, {"sha": "dd322b9da952bcb3a8e756fd7273aa18706432f9", "filename": "src/librustc_middle/Cargo.toml", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2FCargo.toml?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,11 +1,11 @@\n [package]\n authors = [\"The Rust Project Developers\"]\n-name = \"rustc\"\n+name = \"rustc_middle\"\n version = \"0.0.0\"\n edition = \"2018\"\n \n [lib]\n-name = \"rustc\"\n+name = \"rustc_middle\"\n path = \"lib.rs\"\n doctest = false\n ", "previous_filename": "src/librustc/Cargo.toml"}, {"sha": "de58f546cd3b5d1fb053c5a2fd8bd2d03e3a4b55", "filename": "src/librustc_middle/README.md", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2FREADME.md?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/README.md"}, {"sha": "fcf6989043a54394a40aef2ecc6978ef97b09537", "filename": "src/librustc_middle/arena.rs", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Farena.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -0,0 +1,132 @@\n+/// This declares a list of types which can be allocated by `Arena`.\n+///\n+/// The `few` modifier will cause allocation to use the shared arena and recording the destructor.\n+/// This is faster and more memory efficient if there's only a few allocations of the type.\n+/// Leaving `few` out will cause the type to get its own dedicated `TypedArena` which is\n+/// faster and more memory efficient if there is lots of allocations.\n+///\n+/// Specifying the `decode` modifier will add decode impls for &T and &[T] where T is the type\n+/// listed. These impls will appear in the implement_ty_decoder! macro.\n+#[macro_export]\n+macro_rules! arena_types {\n+    ($macro:path, $args:tt, $tcx:lifetime) => (\n+        $macro!($args, [\n+            [] layouts: rustc_middle::ty::layout::Layout,\n+            [] generics: rustc_middle::ty::Generics,\n+            [] trait_def: rustc_middle::ty::TraitDef,\n+            [] adt_def: rustc_middle::ty::AdtDef,\n+            [] steal_mir: rustc_middle::ty::steal::Steal<rustc_middle::mir::BodyAndCache<$tcx>>,\n+            [] mir: rustc_middle::mir::BodyAndCache<$tcx>,\n+            [] steal_promoted: rustc_middle::ty::steal::Steal<\n+                rustc_index::vec::IndexVec<\n+                    rustc_middle::mir::Promoted,\n+                    rustc_middle::mir::BodyAndCache<$tcx>\n+                >\n+            >,\n+            [] promoted: rustc_index::vec::IndexVec<\n+                rustc_middle::mir::Promoted,\n+                rustc_middle::mir::BodyAndCache<$tcx>\n+            >,\n+            [decode] tables: rustc_middle::ty::TypeckTables<$tcx>,\n+            [decode] borrowck_result: rustc_middle::mir::BorrowCheckResult<$tcx>,\n+            [] const_allocs: rustc_middle::mir::interpret::Allocation,\n+            [] vtable_method: Option<(\n+                rustc_hir::def_id::DefId,\n+                rustc_middle::ty::subst::SubstsRef<$tcx>\n+            )>,\n+            [few, decode] mir_keys: rustc_hir::def_id::DefIdSet,\n+            [decode] specialization_graph: rustc_middle::traits::specialization_graph::Graph,\n+            [] region_scope_tree: rustc_middle::middle::region::ScopeTree,\n+            [] item_local_set: rustc_hir::ItemLocalSet,\n+            [decode] mir_const_qualif: rustc_index::bit_set::BitSet<rustc_middle::mir::Local>,\n+            [] trait_impls_of: rustc_middle::ty::trait_def::TraitImpls,\n+            [] associated_items: rustc_middle::ty::AssociatedItems,\n+            [] dropck_outlives:\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx,\n+                        rustc_middle::traits::query::DropckOutlivesResult<'tcx>\n+                    >\n+                >,\n+            [] normalize_projection_ty:\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx,\n+                        rustc_middle::traits::query::NormalizationResult<'tcx>\n+                    >\n+                >,\n+            [] implied_outlives_bounds:\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx,\n+                        Vec<rustc_middle::traits::query::OutlivesBound<'tcx>>\n+                    >\n+                >,\n+            [] type_op_subtype:\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx, ()>\n+                >,\n+            [] type_op_normalize_poly_fn_sig:\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx, rustc_middle::ty::PolyFnSig<'tcx>>\n+                >,\n+            [] type_op_normalize_fn_sig:\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx, rustc_middle::ty::FnSig<'tcx>>\n+                >,\n+            [] type_op_normalize_predicate:\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx, rustc_middle::ty::Predicate<'tcx>>\n+                >,\n+            [] type_op_normalize_ty:\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx, rustc_middle::ty::Ty<'tcx>>\n+                >,\n+            [few] crate_inherent_impls: rustc_middle::ty::CrateInherentImpls,\n+            [few] upstream_monomorphizations:\n+                rustc_hir::def_id::DefIdMap<\n+                    rustc_data_structures::fx::FxHashMap<\n+                        rustc_middle::ty::subst::SubstsRef<'tcx>,\n+                        rustc_hir::def_id::CrateNum\n+                    >\n+                >,\n+            [few] diagnostic_items: rustc_data_structures::fx::FxHashMap<\n+                rustc_span::symbol::Symbol,\n+                rustc_hir::def_id::DefId,\n+            >,\n+            [few] resolve_lifetimes: rustc_middle::middle::resolve_lifetime::ResolveLifetimes,\n+            [few] lint_levels: rustc_middle::lint::LintLevelMap,\n+            [few] stability_index: rustc_middle::middle::stability::Index<'tcx>,\n+            [few] features: rustc_feature::Features,\n+            [few] all_traits: Vec<rustc_hir::def_id::DefId>,\n+            [few] privacy_access_levels: rustc_middle::middle::privacy::AccessLevels,\n+            [few] target_features_whitelist: rustc_data_structures::fx::FxHashMap<\n+                String,\n+                Option<rustc_span::symbol::Symbol>\n+            >,\n+            [few] wasm_import_module_map: rustc_data_structures::fx::FxHashMap<\n+                rustc_hir::def_id::DefId,\n+                String\n+            >,\n+            [few] get_lib_features: rustc_middle::middle::lib_features::LibFeatures,\n+            [few] defined_lib_features: rustc_middle::middle::lang_items::LanguageItems,\n+            [few] visible_parent_map: rustc_hir::def_id::DefIdMap<rustc_hir::def_id::DefId>,\n+            [few] foreign_module: rustc_middle::middle::cstore::ForeignModule,\n+            [few] foreign_modules: Vec<rustc_middle::middle::cstore::ForeignModule>,\n+            [few] reachable_non_generics: rustc_hir::def_id::DefIdMap<\n+                rustc_middle::middle::exported_symbols::SymbolExportLevel\n+            >,\n+            [few] crate_variances: rustc_middle::ty::CrateVariancesMap<'tcx>,\n+            [few] inferred_outlives_crate: rustc_middle::ty::CratePredicatesMap<'tcx>,\n+            [] upvars: rustc_data_structures::fx::FxIndexMap<rustc_hir::HirId, rustc_hir::Upvar>,\n+\n+            // Interned types\n+            [] tys: rustc_middle::ty::TyS<$tcx>,\n+\n+            // HIR query types\n+            [few] indexed_hir: rustc_middle::hir::map::IndexedHir<$tcx>,\n+            [few] hir_definitions: rustc_hir::definitions::Definitions,\n+            [] hir_owner: rustc_middle::hir::Owner<$tcx>,\n+            [] hir_owner_nodes: rustc_middle::hir::OwnerNodes<$tcx>,\n+        ], $tcx);\n+    )\n+}\n+\n+arena_types!(arena::declare_arena, [], 'tcx);"}, {"sha": "237751bcbd787a34c66a400ed6a7d0c6c8e84994", "filename": "src/librustc_middle/benches/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fbenches%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fbenches%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fbenches%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/benches/lib.rs"}, {"sha": "af7723aea34e466edfd582741d409baec623c5ea", "filename": "src/librustc_middle/build.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fbuild.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/build.rs"}, {"sha": "f4a4aab844c1475cc9d30cdbf2d48e0fe493a722", "filename": "src/librustc_middle/dep_graph/dep_node.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fdep_graph%2Fdep_node.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/dep_graph/dep_node.rs"}, {"sha": "f56df19bfb0617e1ac89f2799015c02dda05c3c3", "filename": "src/librustc_middle/dep_graph/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fdep_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fdep_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fdep_graph%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/dep_graph/mod.rs"}, {"sha": "4c144a54d6345ef9c9b7c3d07134ef71192ade8b", "filename": "src/librustc_middle/hir/exports.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fhir%2Fexports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fhir%2Fexports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fhir%2Fexports.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/hir/exports.rs"}, {"sha": "7024e86f95d06a169dabcd2675c3cad5d6b7cb03", "filename": "src/librustc_middle/hir/map/blocks.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fhir%2Fmap%2Fblocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fhir%2Fmap%2Fblocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fhir%2Fmap%2Fblocks.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/hir/map/blocks.rs"}, {"sha": "70ea856498de4def00c12ea80b1e381f7e1df649", "filename": "src/librustc_middle/hir/map/collector.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fhir%2Fmap%2Fcollector.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/hir/map/collector.rs"}, {"sha": "e8ce13e06e9f55b62a36e666d14a7ac56d4d2fd3", "filename": "src/librustc_middle/hir/map/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fhir%2Fmap%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/hir/map/mod.rs"}, {"sha": "ce8e1f48daa77dcf5c0e925b90e743c3a7dca14b", "filename": "src/librustc_middle/hir/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fhir%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/hir/mod.rs"}, {"sha": "d58aa383667e45afc1846953cc6f8934f2839434", "filename": "src/librustc_middle/ich/hcx.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fich%2Fhcx.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ich/hcx.rs"}, {"sha": "f668cc99754f4e2265c20841b490fbcb75cafd91", "filename": "src/librustc_middle/ich/impls_hir.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fich%2Fimpls_hir.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ich/impls_hir.rs"}, {"sha": "c5a4b53b10df85487663ba4d1bb238ff21aea3ea", "filename": "src/librustc_middle/ich/impls_syntax.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fich%2Fimpls_syntax.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ich/impls_syntax.rs"}, {"sha": "226277e440a78d47b30082cb7b8e9af2b0e89e8b", "filename": "src/librustc_middle/ich/impls_ty.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fich%2Fimpls_ty.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,5 +1,5 @@\n //! This module contains `HashStable` implementations for various data types\n-//! from rustc::ty in no particular order.\n+//! from `rustc_middle::ty` in no particular order.\n \n use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::middle::region;", "previous_filename": "src/librustc/ich/impls_ty.rs"}, {"sha": "516e3ed979c7ca48271a6ed41b19f6016fb95db4", "filename": "src/librustc_middle/ich/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fich%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fich%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fich%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ich/mod.rs"}, {"sha": "5f7e8c849653c50f904f9e1ae45181f132f1308c", "filename": "src/librustc_middle/infer/canonical.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Finfer%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Finfer%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Finfer%2Fcanonical.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/infer/canonical.rs"}, {"sha": "497d3811f281b0af514163f092e46969f40dabc6", "filename": "src/librustc_middle/infer/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Finfer%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/infer/mod.rs"}, {"sha": "e205453a48c535176a9cec03853151f2c41d9127", "filename": "src/librustc_middle/infer/unify_key.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Finfer%2Funify_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Finfer%2Funify_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Finfer%2Funify_key.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/infer/unify_key.rs"}, {"sha": "4ed03fd21ad18b46ad0bb452f57c0ca5c9fd362c", "filename": "src/librustc_middle/lib.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Flib.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -92,5 +92,5 @@ pub mod util {\n     pub mod common;\n }\n \n-// Allows macros to refer to this crate as `::rustc`\n-extern crate self as rustc;\n+// Allows macros to refer to this crate as `::rustc_middle`\n+extern crate self as rustc_middle;", "previous_filename": "src/librustc/lib.rs"}, {"sha": "53061436de07a72d1abf647c451bb061f15f4c6d", "filename": "src/librustc_middle/lint.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Flint.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/lint.rs"}, {"sha": "88ddd96eec8f5e66a61c1582bad4bd5b035d7ed0", "filename": "src/librustc_middle/macros.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmacros.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/macros.rs"}, {"sha": "61b25cc4864465e3ae2fe9abe8c01b24bd2e0527", "filename": "src/librustc_middle/middle/codegen_fn_attrs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fcodegen_fn_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fcodegen_fn_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fcodegen_fn_attrs.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/middle/codegen_fn_attrs.rs"}, {"sha": "012390e8f74b8712477d9e4972966306b16cc4af", "filename": "src/librustc_middle/middle/cstore.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fcstore.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/middle/cstore.rs"}, {"sha": "ee5f822d3134c69267363292b1caab4b78b49b23", "filename": "src/librustc_middle/middle/dependency_format.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fdependency_format.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/middle/dependency_format.rs"}, {"sha": "1f4318fa537514bf33c0726f49e4db3bb188440a", "filename": "src/librustc_middle/middle/exported_symbols.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fexported_symbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fexported_symbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fexported_symbols.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/middle/exported_symbols.rs"}, {"sha": "62ccd94674488277ac66f6b3a405a8394e3fb50d", "filename": "src/librustc_middle/middle/free_region.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Ffree_region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Ffree_region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Ffree_region.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/middle/free_region.rs"}, {"sha": "36560371587a53c8b5d6c4937650604f60e356e1", "filename": "src/librustc_middle/middle/lang_items.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Flang_items.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/middle/lang_items.rs"}, {"sha": "c43c22cd61ba64eb107af9e0ebbc58ef308af0e6", "filename": "src/librustc_middle/middle/limits.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Flimits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Flimits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Flimits.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -5,7 +5,7 @@\n //! this via an attribute on the crate like `#![recursion_limit=\"22\"]`. This pass\n //! just peeks and looks for that attribute.\n \n-use rustc::bug;\n+use crate::bug;\n use rustc_ast::ast;\n use rustc_data_structures::sync::Once;\n use rustc_session::Session;", "previous_filename": "src/librustc/middle/limits.rs"}, {"sha": "464488964afb7b3c17e1c1b1054155d97472b2b0", "filename": "src/librustc_middle/middle/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/middle/mod.rs"}, {"sha": "4756e83b5e9805982b096ea134d47449a5c2cc2d", "filename": "src/librustc_middle/middle/privacy.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fprivacy.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/middle/privacy.rs"}, {"sha": "dd9ab102129e6284c27cba9c744052cc99b7563f", "filename": "src/librustc_middle/middle/region.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fregion.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -293,7 +293,7 @@ pub struct ScopeTree {\n     ///\n     /// Then:\n     ///     1. From the ordering guarantee of HIR visitors (see\n-    ///     `rustc::hir::intravisit`), `D` does not dominate `U`.\n+    ///     `rustc_hir::intravisit`), `D` does not dominate `U`.\n     ///     2. Therefore, `D` is *potentially* storage-dead at `U` (because\n     ///     we might visit `U` without ever getting to `D`).\n     ///     3. However, we guarantee that at each HIR point, each", "previous_filename": "src/librustc/middle/region.rs"}, {"sha": "c21ba1b3bd2db7342785dbf8c0271dd43e60fe3b", "filename": "src/librustc_middle/middle/resolve_lifetime.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fresolve_lifetime.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/middle/resolve_lifetime.rs"}, {"sha": "46525bdedad3554ab6669d0540ba4b5ef3815d13", "filename": "src/librustc_middle/middle/stability.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fstability.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/middle/stability.rs"}, {"sha": "00ecc7a7a0aa1b7c3da43ec8c135a310eaa2f431", "filename": "src/librustc_middle/mir/cache.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fcache.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/cache.rs"}, {"sha": "ada02ceb5cbf3cc910d319039ef80e1ab628fa5c", "filename": "src/librustc_middle/mir/interpret/allocation.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fallocation.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/interpret/allocation.rs"}, {"sha": "c46ab89d0049c8b84a6f073b2b0c47c75acc0349", "filename": "src/librustc_middle/mir/interpret/error.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/interpret/error.rs"}, {"sha": "10c3a06da081063be927307c4606c897325c08b2", "filename": "src/librustc_middle/mir/interpret/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/interpret/mod.rs"}, {"sha": "d22207bd81651bdd0b481f345040a905f2dab4ba", "filename": "src/librustc_middle/mir/interpret/pointer.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fpointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fpointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fpointer.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/interpret/pointer.rs"}, {"sha": "46bf1d9695796a73caca4ca1e7f90d7462545b40", "filename": "src/librustc_middle/mir/interpret/queries.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fqueries.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/interpret/queries.rs"}, {"sha": "bf4ee8488238f2c0e1173041cd7d3058ea7c772f", "filename": "src/librustc_middle/mir/interpret/value.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fvalue.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/interpret/value.rs"}, {"sha": "9ba9d816d0f3f541c887c264504e453716b9edfa", "filename": "src/librustc_middle/mir/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/mod.rs"}, {"sha": "0b64cb479d5598ba10d090432e741f0866d85c1a", "filename": "src/librustc_middle/mir/mono.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmono.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/mono.rs"}, {"sha": "8c81f5227d26099dddde2f9a3b7794aef1dcb424", "filename": "src/librustc_middle/mir/query.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fquery.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/query.rs"}, {"sha": "feb663192671254004096cff7d5212f5099d80e8", "filename": "src/librustc_middle/mir/tcx.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Ftcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Ftcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Ftcx.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/tcx.rs"}, {"sha": "ed8129b1e09a5eacd0302fb94ddd9fa86d9b7ea2", "filename": "src/librustc_middle/mir/traversal.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Ftraversal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Ftraversal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Ftraversal.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/traversal.rs"}, {"sha": "9520f081b6bfbb28bc40f4e99428c3ab09ab21d7", "filename": "src/librustc_middle/mir/type_foldable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Ftype_foldable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Ftype_foldable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Ftype_foldable.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/type_foldable.rs"}, {"sha": "400d15cdc144be6518cc338adee383a6b64eb8f5", "filename": "src/librustc_middle/mir/visit.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fvisit.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/mir/visit.rs"}, {"sha": "c1ece6275092d9265c9d67e47204310e8f5a2b5a", "filename": "src/librustc_middle/query/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fquery%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/query/mod.rs"}, {"sha": "757e0bd3bfbf9e5995ba60c1e9996966248dce78", "filename": "src/librustc_middle/tests.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Ftests.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,6 +1,6 @@\n use super::*;\n \n-// FIXME(#27438): right now the unit tests of librustc don't refer to any actual\n+// FIXME(#27438): right now the unit tests of librustc_middle don't refer to any actual\n //                functions generated in librustc_data_structures (all\n //                references are through generic functions), but statics are\n //                referenced from time to time. Due to this bug we won't", "previous_filename": "src/librustc/tests.rs"}, {"sha": "c129b574fd38a0f6def4cb3a9fa896fde54304f9", "filename": "src/librustc_middle/traits/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Ftraits%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/traits/mod.rs"}, {"sha": "67f4b15f9194dc153946a825ea4d4f1bee6a0782", "filename": "src/librustc_middle/traits/query.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftraits%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftraits%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Ftraits%2Fquery.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/traits/query.rs"}, {"sha": "d316d7659e222b1ef4c3fdb22a2ef92d4d796409", "filename": "src/librustc_middle/traits/select.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Ftraits%2Fselect.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/traits/select.rs"}, {"sha": "1847326a742eb7897b2c83726ad84114da3c91c6", "filename": "src/librustc_middle/traits/specialization_graph.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftraits%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftraits%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Ftraits%2Fspecialization_graph.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/traits/specialization_graph.rs"}, {"sha": "b1fb02a67b3ff3a8447747960d2c2224990524e7", "filename": "src/librustc_middle/traits/structural_impls.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Ftraits%2Fstructural_impls.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/traits/structural_impls.rs"}, {"sha": "35f8eb20475c7f8e328f5edbd33341c8470714a0", "filename": "src/librustc_middle/ty/_match.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2F_match.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/_match.rs"}, {"sha": "851bffc2065c972d89c26a14242faa1a608eb7be", "filename": "src/librustc_middle/ty/adjustment.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fadjustment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fadjustment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fadjustment.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/adjustment.rs"}, {"sha": "5ee8811509098e40a885025d38319784620ed7c5", "filename": "src/librustc_middle/ty/binding.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fbinding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fbinding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fbinding.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/binding.rs"}, {"sha": "31c106cb230b43624466384068b65aebbd1c8480", "filename": "src/librustc_middle/ty/cast.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcast.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/cast.rs"}, {"sha": "cbbc937ed7d31427975605919f0e3459ca1a7494", "filename": "src/librustc_middle/ty/codec.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fcodec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fcodec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcodec.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/codec.rs"}, {"sha": "be889f66228d5ef75429a19f2d29df80b9439af7", "filename": "src/librustc_middle/ty/context.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -6,6 +6,7 @@ use crate::dep_graph::{self, DepConstructor};\n use crate::hir::exports::Export;\n use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::infer::canonical::{Canonical, CanonicalVarInfo, CanonicalVarInfos};\n+use crate::lint::LintDiagnosticBuilder;\n use crate::lint::{struct_lint_level, LintSource};\n use crate::middle;\n use crate::middle::cstore::CrateStoreDyn;\n@@ -38,7 +39,6 @@ use crate::ty::{ExistentialPredicate, InferTy, ParamTy, PolyFnSig, Predicate, Pr\n use crate::ty::{InferConst, ParamConst};\n use crate::ty::{List, TyKind, TyS};\n use crate::util::common::ErrorReported;\n-use rustc::lint::LintDiagnosticBuilder;\n use rustc_ast::ast;\n use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_ast::node_id::NodeMap;", "previous_filename": "src/librustc/ty/context.rs"}, {"sha": "d1eb21e25ffaf0183fb7d3e31fb873ee685b204b", "filename": "src/librustc_middle/ty/diagnostics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fdiagnostics.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/diagnostics.rs"}, {"sha": "4bf08096edeb8e589f25ee24760bbf721ffd9bbf", "filename": "src/librustc_middle/ty/erase_regions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ferase_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ferase_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Ferase_regions.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/erase_regions.rs"}, {"sha": "d0bc0d5fabfae5b83e0fac3990aa3314cb921d94", "filename": "src/librustc_middle/ty/error.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Ferror.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/error.rs"}, {"sha": "2a937d6581d6a3da9f79f5976917dfb21eff0f67", "filename": "src/librustc_middle/ty/fast_reject.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ffast_reject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ffast_reject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Ffast_reject.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/fast_reject.rs"}, {"sha": "5243e1fbf579b70cff52847ceadd1a135b41191a", "filename": "src/librustc_middle/ty/flags.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fflags.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/flags.rs"}, {"sha": "3f4f2407f1e6e2fc9e9b9ebd160f2d04b78035a3", "filename": "src/librustc_middle/ty/fold.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Ffold.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/fold.rs"}, {"sha": "2ab12a4acbfa4affd6c5658da0a614b352f1c9e7", "filename": "src/librustc_middle/ty/free_region_map.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ffree_region_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ffree_region_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Ffree_region_map.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/free_region_map.rs"}, {"sha": "14ead77653c32d696a60e3e06311d29896936c97", "filename": "src/librustc_middle/ty/inhabitedness/def_id_forest.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Finhabitedness%2Fdef_id_forest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Finhabitedness%2Fdef_id_forest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Finhabitedness%2Fdef_id_forest.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/inhabitedness/def_id_forest.rs"}, {"sha": "b166c4dea0c850f1e50259a2044cbdc3fed74c95", "filename": "src/librustc_middle/ty/inhabitedness/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Finhabitedness%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Finhabitedness%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Finhabitedness%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/inhabitedness/mod.rs"}, {"sha": "fcfee0fea85aff4007e82c65acb9e40924a90ac4", "filename": "src/librustc_middle/ty/instance.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Finstance.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/instance.rs"}, {"sha": "bfe9ed200a154e21956bdf142e1062b0ed3330a7", "filename": "src/librustc_middle/ty/layout.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Flayout.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/layout.rs"}, {"sha": "43982439d47c89cdeec728cedd2d75934baee9b6", "filename": "src/librustc_middle/ty/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/mod.rs"}, {"sha": "2f0a57c59eb14abc0d8672ca7b9ee5f19be510ce", "filename": "src/librustc_middle/ty/normalize_erasing_regions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fnormalize_erasing_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fnormalize_erasing_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fnormalize_erasing_regions.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/normalize_erasing_regions.rs"}, {"sha": "9dd96f2f2b507f049f73f44c585acbe05c08727c", "filename": "src/librustc_middle/ty/outlives.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Foutlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Foutlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Foutlives.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/outlives.rs"}, {"sha": "a932f334dde68abba1d8d5902a7f2662b00003b5", "filename": "src/librustc_middle/ty/print/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fprint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fprint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fprint%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/print/mod.rs"}, {"sha": "757a8bd23f62ba7c1e406198e1cb330a338a9bda", "filename": "src/librustc_middle/ty/print/obsolete.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fprint%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fprint%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fprint%2Fobsolete.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -5,9 +5,9 @@\n //! Note: A lot of this could looks very similar to what's already in `ty::print`.\n //! FIXME(eddyb) implement a custom `PrettyPrinter` for this.\n \n-use rustc::bug;\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, Const, Instance, Ty, TyCtxt};\n+use crate::bug;\n+use crate::ty::subst::SubstsRef;\n+use crate::ty::{self, Const, Instance, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use std::fmt::Write;", "previous_filename": "src/librustc/ty/print/obsolete.rs"}, {"sha": "0993b738b44e8c582c62b03de3f891da11998164", "filename": "src/librustc_middle/ty/print/pretty.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -561,7 +561,7 @@ pub trait PrettyPrinter<'tcx>:\n                 // We use verbose printing in 'NO_QUERIES' mode, to\n                 // avoid needing to call `predicates_of`. This should\n                 // only affect certain debug messages (e.g. messages printed\n-                // from `rustc::ty` during the computation of `tcx.predicates_of`),\n+                // from `rustc_middle::ty` during the computation of `tcx.predicates_of`),\n                 // and should have no effect on any compiler output.\n                 if self.tcx().sess.verbose() || NO_QUERIES.with(|q| q.get()) {\n                     p!(write(\"Opaque({:?}, {:?})\", def_id, substs));", "previous_filename": "src/librustc/ty/print/pretty.rs"}, {"sha": "8ec07b9fdeb7844820f565350d72f2b102ea6496", "filename": "src/librustc_middle/ty/query/README.md", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2FREADME.md?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/query/README.md"}, {"sha": "5f7a9e81158e0580809d4133bbde8f60a7471565", "filename": "src/librustc_middle/ty/query/job.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fjob.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/query/job.rs"}, {"sha": "a261e484a85faada4d493a0fc16df0a29f74f62e", "filename": "src/librustc_middle/ty/query/keys.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fkeys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fkeys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fkeys.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/query/keys.rs"}, {"sha": "744237520fbfd07eaec63cd9d517b1a4eae5a8db", "filename": "src/librustc_middle/ty/query/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/query/mod.rs"}, {"sha": "8aecc0e698a8efe4d161b5549de3eb4d5c1b871b", "filename": "src/librustc_middle/ty/query/on_disk_cache.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fon_disk_cache.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/query/on_disk_cache.rs"}, {"sha": "1bb392f436fc6bbe601fa77731ba00543e71317e", "filename": "src/librustc_middle/ty/query/plumbing.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fplumbing.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/query/plumbing.rs"}, {"sha": "e0d3e764dad8396c99ee39760b2624af43b1ce07", "filename": "src/librustc_middle/ty/query/profiling_support.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fprofiling_support.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fprofiling_support.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fprofiling_support.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/query/profiling_support.rs"}, {"sha": "b496bf839ab9e70bcab14cba64c86b2d89e76da2", "filename": "src/librustc_middle/ty/query/stats.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fstats.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/query/stats.rs"}, {"sha": "b01d15c29b2db7612ec265c9529941a222a5f932", "filename": "src/librustc_middle/ty/query/values.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fquery%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fvalues.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/query/values.rs"}, {"sha": "5ff77d073d388bd7c7c01306d82fd0be6f397502", "filename": "src/librustc_middle/ty/relate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Frelate.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/relate.rs"}, {"sha": "224e76845d708ad729370a7140980b9b08945485", "filename": "src/librustc_middle/ty/steal.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fsteal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fsteal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fsteal.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/steal.rs"}, {"sha": "429791d09a49c00ebe07cd5c3ada237c36f149cf", "filename": "src/librustc_middle/ty/structural_impls.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fstructural_impls.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/structural_impls.rs"}, {"sha": "57df50dc1a05dd5f3aa78c37526aafba6502e9a0", "filename": "src/librustc_middle/ty/sty.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fsty.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1238,7 +1238,7 @@ pub type Region<'tcx> = &'tcx RegionKind;\n ///\n /// The scope regions are related to one another based on the AST\n /// structure. (See `RegionRelations` type, and particularly the\n-/// `rustc::middle::region::ScopeTree`.)\n+/// `rustc_middle::middle::region::ScopeTree`.)\n ///\n /// Note that inference variables and bound regions are not included\n /// in this diagram. In the case of inference variables, they should", "previous_filename": "src/librustc/ty/sty.rs"}, {"sha": "0f4485a705046dff5d33017a6fd09b8edb99d338", "filename": "src/librustc_middle/ty/subst.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fsubst.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/subst.rs"}, {"sha": "ed9054fcffd91bc404a90b131f037578fa123eb7", "filename": "src/librustc_middle/ty/trait_def.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ftrait_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Ftrait_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Ftrait_def.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/trait_def.rs"}, {"sha": "dab367a6639ed84d92d8dc4bf9ee6b1c136303a3", "filename": "src/librustc_middle/ty/util.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Futil.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/util.rs"}, {"sha": "da08fbcf14432f384a097ccec4c13f569b1b85cb", "filename": "src/librustc_middle/ty/walk.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Fty%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fwalk.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/ty/walk.rs"}, {"sha": "54cd8a29f947416cb4baccd920f05f0977bcb1d5", "filename": "src/librustc_middle/util/bug.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Futil%2Fbug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Futil%2Fbug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Futil%2Fbug.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/util/bug.rs"}, {"sha": "19b43bfd162415089209b4c3a37f5742d021504c", "filename": "src/librustc_middle/util/common.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Futil%2Fcommon.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/util/common.rs"}, {"sha": "9a9fb203c625e3d84846cddafa8fe3c8e7a38225", "filename": "src/librustc_middle/util/common/tests.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Futil%2Fcommon%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_middle%2Futil%2Fcommon%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Futil%2Fcommon%2Ftests.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "previous_filename": "src/librustc/util/common/tests.rs"}, {"sha": "f9b195e92eb9b97919a01e66735f1fef3cb0aa3f", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -16,7 +16,7 @@ itertools = \"0.8\"\n log = \"0.4\"\n log_settings = \"0.1.1\"\n polonius-engine = \"0.12.0\"\n-rustc = { path = \"../librustc\" }\n+rustc_middle = { path = \"../librustc_middle\" }\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "0ade0829ec306b95ada1ae985b296a84defe90dc", "filename": "src/librustc_mir/borrow_check/borrow_set.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -3,13 +3,13 @@ use crate::borrow_check::path_utils::allow_two_phase_borrow;\n use crate::borrow_check::place_ext::PlaceExt;\n use crate::dataflow::indexes::BorrowIndex;\n use crate::dataflow::move_paths::MoveData;\n-use rustc::mir::traversal;\n-use rustc::mir::visit::{MutatingUseContext, NonUseContext, PlaceContext, Visitor};\n-use rustc::mir::{self, Body, Local, Location, ReadOnlyBodyAndCache};\n-use rustc::ty::{RegionVid, TyCtxt};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::traversal;\n+use rustc_middle::mir::visit::{MutatingUseContext, NonUseContext, PlaceContext, Visitor};\n+use rustc_middle::mir::{self, Body, Local, Location, ReadOnlyBodyAndCache};\n+use rustc_middle::ty::{RegionVid, TyCtxt};\n use std::fmt;\n use std::ops::Index;\n "}, {"sha": "c7f395885a557ac81483bb11b82f3db610603696", "filename": "src/librustc_mir/borrow_check/constraint_generation.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,13 +1,13 @@\n-use rustc::mir::visit::TyContext;\n-use rustc::mir::visit::Visitor;\n-use rustc::mir::{\n+use rustc_infer::infer::InferCtxt;\n+use rustc_middle::mir::visit::TyContext;\n+use rustc_middle::mir::visit::Visitor;\n+use rustc_middle::mir::{\n     BasicBlock, BasicBlockData, Body, Local, Location, Place, PlaceRef, ProjectionElem, Rvalue,\n     SourceInfo, Statement, StatementKind, Terminator, TerminatorKind, UserTypeProjection,\n };\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, RegionVid, Ty};\n-use rustc_infer::infer::InferCtxt;\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, RegionVid, Ty};\n \n use crate::borrow_check::{\n     borrow_set::BorrowSet, facts::AllFacts, location::LocationTable, nll::ToRegionVid,"}, {"sha": "f3f6b8c10da7ce1d47949d5acc341b4bf5f3b605", "filename": "src/librustc_mir/borrow_check/constraints/graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fgraph.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n-use rustc::mir::ConstraintCategory;\n-use rustc::ty::RegionVid;\n use rustc_data_structures::graph;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::RegionVid;\n use rustc_span::DUMMY_SP;\n \n use crate::borrow_check::{"}, {"sha": "3772b7d8f986db68d79db028e181c9f8c6558dff", "filename": "src/librustc_mir/borrow_check/constraints/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n-use rustc::mir::ConstraintCategory;\n-use rustc::ty::RegionVid;\n use rustc_data_structures::graph::scc::Sccs;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::RegionVid;\n use std::fmt;\n use std::ops::Index;\n "}, {"sha": "428c3b44f630e0bbf2336d0a5e3b9fec985a4110", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,15 +1,15 @@\n-use rustc::mir::{\n-    self, AggregateKind, BindingForm, BorrowKind, ClearCrossCrate, ConstraintCategory,\n-    FakeReadCause, Local, LocalDecl, LocalInfo, LocalKind, Location, Operand, Place, PlaceRef,\n-    ProjectionElem, Rvalue, Statement, StatementKind, TerminatorKind, VarBindingForm,\n-};\n-use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{AsyncGeneratorKind, GeneratorKind};\n use rustc_index::vec::Idx;\n+use rustc_middle::mir::{\n+    self, AggregateKind, BindingForm, BorrowKind, ClearCrossCrate, ConstraintCategory,\n+    FakeReadCause, Local, LocalDecl, LocalInfo, LocalKind, Location, Operand, Place, PlaceRef,\n+    ProjectionElem, Rvalue, Statement, StatementKind, TerminatorKind, VarBindingForm,\n+};\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::Span;\n use rustc_trait_selection::traits::error_reporting::suggest_constraining_type_param;\n@@ -1541,7 +1541,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n     /// Describe the reason for the fake borrow that was assigned to `place`.\n     fn classify_immutable_section(&self, place: &Place<'tcx>) -> Option<&'static str> {\n-        use rustc::mir::visit::Visitor;\n+        use rustc_middle::mir::visit::Visitor;\n         struct FakeReadCauseFinder<'a, 'tcx> {\n             place: &'a Place<'tcx>,\n             cause: Option<FakeReadCause>,\n@@ -1821,7 +1821,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                 for (index, argument) in sig.inputs().skip_binder().iter().enumerate() {\n                     if let ty::Ref(argument_region, _, _) = argument.kind {\n                         if argument_region == return_region {\n-                            // Need to use the `rustc::ty` types to compare against the\n+                            // Need to use the `rustc_middle::ty` types to compare against the\n                             // `return_region`. Then use the `rustc_hir` type to get only\n                             // the lifetime span.\n                             if let hir::TyKind::Rptr(lifetime, _) = &fn_decl.inputs[index].kind {"}, {"sha": "ca42ac805ec72266fe0cb2acf2814debe7310170", "filename": "src/librustc_mir/borrow_check/diagnostics/explain_borrow.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,16 +2,16 @@\n \n use std::collections::VecDeque;\n \n-use rustc::mir::{\n-    Body, CastKind, ConstraintCategory, FakeReadCause, Local, Location, Operand, Place, Rvalue,\n-    Statement, StatementKind, TerminatorKind,\n-};\n-use rustc::ty::adjustment::PointerCast;\n-use rustc::ty::{self, RegionVid, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_index::vec::IndexVec;\n use rustc_infer::infer::NLLRegionVariableOrigin;\n+use rustc_middle::mir::{\n+    Body, CastKind, ConstraintCategory, FakeReadCause, Local, Location, Operand, Place, Rvalue,\n+    Statement, StatementKind, TerminatorKind,\n+};\n+use rustc_middle::ty::adjustment::PointerCast;\n+use rustc_middle::ty::{self, RegionVid, TyCtxt};\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n "}, {"sha": "6c6bde8ae2cbb89564504e8326e8105001332efb", "filename": "src/librustc_mir/borrow_check/diagnostics/find_use.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Ffind_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Ffind_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Ffind_use.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -6,10 +6,10 @@ use crate::borrow_check::{\n     region_infer::{Cause, RegionInferenceContext},\n };\n use crate::util::liveness::{self, DefUse};\n-use rustc::mir::visit::{MirVisitable, PlaceContext, Visitor};\n-use rustc::mir::{Body, Local, Location};\n-use rustc::ty::{RegionVid, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_middle::mir::visit::{MirVisitable, PlaceContext, Visitor};\n+use rustc_middle::mir::{Body, Local, Location};\n+use rustc_middle::ty::{RegionVid, TyCtxt};\n \n crate fn find<'tcx>(\n     body: &Body<'tcx>,"}, {"sha": "2991f29949aa0f4ac40c327592f7f27cdd046649", "filename": "src/librustc_mir/borrow_check/diagnostics/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,17 +1,17 @@\n //! Borrow checker diagnostics.\n \n-use rustc::mir::{\n-    AggregateKind, Constant, Field, Local, LocalInfo, LocalKind, Location, Operand, Place,\n-    PlaceRef, ProjectionElem, Rvalue, Statement, StatementKind, Terminator, TerminatorKind,\n-};\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::print::Print;\n-use rustc::ty::{self, DefIdTree, Ty, TyCtxt};\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir as hir;\n use rustc_hir::def::Namespace;\n use rustc_hir::def_id::DefId;\n use rustc_hir::GeneratorKind;\n+use rustc_middle::mir::{\n+    AggregateKind, Constant, Field, Local, LocalInfo, LocalKind, Location, Operand, Place,\n+    PlaceRef, ProjectionElem, Rvalue, Statement, StatementKind, Terminator, TerminatorKind,\n+};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::print::Print;\n+use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt};\n use rustc_span::Span;\n \n use super::borrow_set::BorrowData;"}, {"sha": "3c198dc74ce85018fbd096f64ec87bec8e161e21", "filename": "src/librustc_mir/borrow_check/diagnostics/move_errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,6 +1,6 @@\n-use rustc::mir::*;\n-use rustc::ty;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty;\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::{Span, Symbol};\n "}, {"sha": "5d6d287b72a3904e6728b989900480b170a1e8cc", "filename": "src/librustc_mir/borrow_check/diagnostics/mutability_errors.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n-use rustc::mir::{self, ClearCrossCrate, Local, LocalInfo, Location};\n-use rustc::mir::{Mutability, Place, PlaceRef, ProjectionElem};\n-use rustc::ty::{self, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::Node;\n use rustc_index::vec::Idx;\n+use rustc_middle::mir::{self, ClearCrossCrate, Local, LocalInfo, Location};\n+use rustc_middle::mir::{Mutability, Place, PlaceRef, ProjectionElem};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::symbol::kw;\n use rustc_span::Span;"}, {"sha": "dd970d800fba0907a68174a2d2d6b6289a00e91d", "filename": "src/librustc_mir/borrow_check/diagnostics/outlives_suggestion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -4,9 +4,9 @@\n use std::collections::BTreeMap;\n \n use log::debug;\n-use rustc::ty::RegionVid;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::DiagnosticBuilder;\n+use rustc_middle::ty::RegionVid;\n \n use smallvec::SmallVec;\n "}, {"sha": "98c0542f9c0dc31323378206200d64dca5cc7079", "filename": "src/librustc_mir/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,12 +1,12 @@\n //! Error reporting machinery for lifetime errors.\n \n-use rustc::mir::ConstraintCategory;\n-use rustc::ty::{self, RegionVid, Ty};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_infer::infer::{\n     error_reporting::nice_region_error::NiceRegionError,\n     error_reporting::unexpected_hidden_region_diagnostic, NLLRegionVariableOrigin,\n };\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::{self, RegionVid, Ty};\n use rustc_span::symbol::kw;\n use rustc_span::Span;\n "}, {"sha": "a085c2f7f69c906b2a1b27eae44bbd4c81efbfeb", "filename": "src/librustc_mir/borrow_check/diagnostics/region_name.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,11 +1,11 @@\n use std::fmt::{self, Display};\n \n-use rustc::ty::print::RegionHighlightMode;\n-use rustc::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc::ty::{self, RegionVid, Ty};\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n+use rustc_middle::ty::print::RegionHighlightMode;\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::{self, RegionVid, Ty};\n use rustc_span::symbol::kw;\n use rustc_span::{symbol::Symbol, Span, DUMMY_SP};\n "}, {"sha": "a850b85e9bbaef80809f1e48b2812c02691b435b", "filename": "src/librustc_mir/borrow_check/diagnostics/var_name.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,8 +1,8 @@\n use crate::borrow_check::Upvar;\n use crate::borrow_check::{nll::ToRegionVid, region_infer::RegionInferenceContext};\n-use rustc::mir::{Body, Local};\n-use rustc::ty::{RegionVid, TyCtxt};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_middle::mir::{Body, Local};\n+use rustc_middle::ty::{RegionVid, TyCtxt};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n "}, {"sha": "6d6b94ecf644026f70e30da8d874c6d300517d6d", "filename": "src/librustc_mir/borrow_check/facts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Ffacts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Ffacts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ffacts.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,9 +2,9 @@ use crate::borrow_check::location::{LocationIndex, LocationTable};\n use crate::dataflow::indexes::{BorrowIndex, MovePathIndex};\n use polonius_engine::AllFacts as PoloniusFacts;\n use polonius_engine::Atom;\n-use rustc::mir::Local;\n-use rustc::ty::{RegionVid, TyCtxt};\n use rustc_index::vec::Idx;\n+use rustc_middle::mir::Local;\n+use rustc_middle::ty::{RegionVid, TyCtxt};\n use std::error::Error;\n use std::fmt::Debug;\n use std::fs::{self, File};"}, {"sha": "1639b7262b0059bdba0b83a2fc90be3bdb737f75", "filename": "src/librustc_mir/borrow_check/invalidation.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,10 +1,10 @@\n-use rustc::mir::visit::Visitor;\n-use rustc::mir::TerminatorKind;\n-use rustc::mir::{BasicBlock, Body, Location, Place, ReadOnlyBodyAndCache, Rvalue};\n-use rustc::mir::{BorrowKind, Mutability, Operand};\n-use rustc::mir::{Statement, StatementKind};\n-use rustc::ty::TyCtxt;\n use rustc_data_structures::graph::dominators::Dominators;\n+use rustc_middle::mir::visit::Visitor;\n+use rustc_middle::mir::TerminatorKind;\n+use rustc_middle::mir::{BasicBlock, Body, Location, Place, ReadOnlyBodyAndCache, Rvalue};\n+use rustc_middle::mir::{BorrowKind, Mutability, Operand};\n+use rustc_middle::mir::{Statement, StatementKind};\n+use rustc_middle::ty::TyCtxt;\n \n use crate::dataflow::indexes::BorrowIndex;\n \n@@ -153,7 +153,7 @@ impl<'cx, 'tcx> Visitor<'tcx> for InvalidationGenerator<'cx, 'tcx> {\n             }\n             TerminatorKind::Assert { ref cond, expected: _, ref msg, target: _, cleanup: _ } => {\n                 self.consume_operand(location, cond);\n-                use rustc::mir::AssertKind;\n+                use rustc_middle::mir::AssertKind;\n                 if let AssertKind::BoundsCheck { ref len, ref index } = *msg {\n                     self.consume_operand(location, len);\n                     self.consume_operand(location, index);"}, {"sha": "375ff72679f8f72a2c8abef9395349594f23be43", "filename": "src/librustc_mir/borrow_check/location.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::{BasicBlock, Body, Location};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_middle::mir::{BasicBlock, Body, Location};\n \n /// Maps between a MIR Location, which identifies a particular\n /// statement within a basic block, to a \"rich location\", which"}, {"sha": "d4baa5d809a22eb774e51049eae8f398e2fc761f", "filename": "src/librustc_mir/borrow_check/member_constraints.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fmember_constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fmember_constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmember_constraints.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,8 +1,8 @@\n-use crate::rustc::ty::{self, Ty};\n-use rustc::infer::MemberConstraint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::infer::MemberConstraint;\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::Span;\n use std::hash::Hash;\n use std::ops::Index;\n@@ -71,7 +71,7 @@ impl<'tcx> MemberConstraintSet<'tcx, ty::RegionVid> {\n     /// Pushes a member constraint into the set.\n     ///\n     /// The input member constraint `m_c` is in the form produced by\n-    /// the the `rustc::infer` code.\n+    /// the the `rustc_middle::infer` code.\n     ///\n     /// The `to_region_vid` callback fn is used to convert the regions\n     /// within into `RegionVid` format -- it typically consults the"}, {"sha": "0aeabdb4dca9d5a01541226eb83787ed5a8e89c8", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,14 +1,5 @@\n //! This query borrow-checks the MIR to (further) ensure it is not broken.\n \n-use rustc::mir::{\n-    read_only, traversal, Body, BodyAndCache, ClearCrossCrate, Local, Location, Mutability,\n-    Operand, Place, PlaceElem, PlaceRef, ReadOnlyBodyAndCache,\n-};\n-use rustc::mir::{AggregateKind, BasicBlock, BorrowCheckResult, BorrowKind};\n-use rustc::mir::{Field, ProjectionElem, Promoted, Rvalue, Statement, StatementKind};\n-use rustc::mir::{Terminator, TerminatorKind};\n-use rustc::ty::query::Providers;\n-use rustc::ty::{self, RegionVid, TyCtxt};\n use rustc_ast::ast::Name;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::graph::dominators::Dominators;\n@@ -18,6 +9,15 @@ use rustc_hir::{def_id::DefId, HirId, Node};\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;\n use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n+use rustc_middle::mir::{\n+    read_only, traversal, Body, BodyAndCache, ClearCrossCrate, Local, Location, Mutability,\n+    Operand, Place, PlaceElem, PlaceRef, ReadOnlyBodyAndCache,\n+};\n+use rustc_middle::mir::{AggregateKind, BasicBlock, BorrowCheckResult, BorrowKind};\n+use rustc_middle::mir::{Field, ProjectionElem, Promoted, Rvalue, Statement, StatementKind};\n+use rustc_middle::mir::{Terminator, TerminatorKind};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, RegionVid, TyCtxt};\n use rustc_session::lint::builtin::{MUTABLE_BORROW_RESERVATION_CONFLICT, UNUSED_MUT};\n use rustc_span::{Span, DUMMY_SP};\n \n@@ -670,7 +670,7 @@ impl<'cx, 'tcx> dataflow::ResultsVisitor<'cx, 'tcx> for MirBorrowckCtxt<'cx, 'tc\n             }\n             TerminatorKind::Assert { ref cond, expected: _, ref msg, target: _, cleanup: _ } => {\n                 self.consume_operand(loc, (cond, span), flow_state);\n-                use rustc::mir::AssertKind;\n+                use rustc_middle::mir::AssertKind;\n                 if let AssertKind::BoundsCheck { ref len, ref index } = *msg {\n                     self.consume_operand(loc, (len, span), flow_state);\n                     self.consume_operand(loc, (index, span), flow_state);"}, {"sha": "83e017c31373c0055f4ec0f2b7b7ff5b028ec89f", "filename": "src/librustc_mir/borrow_check/nll.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,15 +1,15 @@\n //! The entry point of the NLL borrow checker.\n \n-use rustc::mir::{\n-    BasicBlock, Body, BodyAndCache, ClosureOutlivesSubject, ClosureRegionRequirements, LocalKind,\n-    Location, Promoted, ReadOnlyBodyAndCache,\n-};\n-use rustc::ty::{self, RegionKind, RegionVid};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Diagnostic;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::IndexVec;\n use rustc_infer::infer::InferCtxt;\n+use rustc_middle::mir::{\n+    BasicBlock, Body, BodyAndCache, ClosureOutlivesSubject, ClosureRegionRequirements, LocalKind,\n+    Location, Promoted, ReadOnlyBodyAndCache,\n+};\n+use rustc_middle::ty::{self, RegionKind, RegionVid};\n use rustc_span::symbol::sym;\n use std::env;\n use std::fmt::Debug;"}, {"sha": "aa5065300eae9825683c4604878eddfc9b2f6bad", "filename": "src/librustc_mir/borrow_check/path_utils.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -2,10 +2,10 @@ use crate::borrow_check::borrow_set::{BorrowData, BorrowSet, TwoPhaseActivation}\n use crate::borrow_check::places_conflict;\n use crate::borrow_check::AccessDepth;\n use crate::dataflow::indexes::BorrowIndex;\n-use rustc::mir::BorrowKind;\n-use rustc::mir::{BasicBlock, Body, Location, Place};\n-use rustc::ty::TyCtxt;\n use rustc_data_structures::graph::dominators::Dominators;\n+use rustc_middle::mir::BorrowKind;\n+use rustc_middle::mir::{BasicBlock, Body, Location, Place};\n+use rustc_middle::ty::TyCtxt;\n \n /// Returns `true` if the borrow represented by `kind` is\n /// allowed to be split into separate Reservation and"}, {"sha": "e53f50326d3d230b382dc3d3218fa073a028cf1d", "filename": "src/librustc_mir/borrow_check/place_ext.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,8 +1,8 @@\n use crate::borrow_check::borrow_set::LocalsStateAtExit;\n-use rustc::mir::ProjectionElem;\n-use rustc::mir::{Body, Mutability, Place};\n-use rustc::ty::{self, TyCtxt};\n use rustc_hir as hir;\n+use rustc_middle::mir::ProjectionElem;\n+use rustc_middle::mir::{Body, Mutability, Place};\n+use rustc_middle::ty::{self, TyCtxt};\n \n /// Extension methods for the `Place` type.\n crate trait PlaceExt<'tcx> {"}, {"sha": "876c9728d00553862c14eec87e167cf54cc090a8", "filename": "src/librustc_mir/borrow_check/places_conflict.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n use crate::borrow_check::ArtificialField;\n use crate::borrow_check::Overlap;\n use crate::borrow_check::{AccessDepth, Deep, Shallow};\n-use rustc::mir::{Body, BorrowKind, Local, Place, PlaceElem, PlaceRef, ProjectionElem};\n-use rustc::ty::{self, TyCtxt};\n use rustc_hir as hir;\n+use rustc_middle::mir::{Body, BorrowKind, Local, Place, PlaceElem, PlaceRef, ProjectionElem};\n+use rustc_middle::ty::{self, TyCtxt};\n use std::cmp::max;\n \n /// When checking if a place conflicts with another place, this enum is used to influence decisions"}, {"sha": "e3d0cdbd18820768c67ef487bbd135bf74bfabeb", "filename": "src/librustc_mir/borrow_check/prefixes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -9,9 +9,9 @@\n \n use super::MirBorrowckCtxt;\n \n-use rustc::mir::{Place, PlaceRef, ProjectionElem, ReadOnlyBodyAndCache};\n-use rustc::ty::{self, TyCtxt};\n use rustc_hir as hir;\n+use rustc_middle::mir::{Place, PlaceRef, ProjectionElem, ReadOnlyBodyAndCache};\n+use rustc_middle::ty::{self, TyCtxt};\n \n pub trait IsPrefixOf<'tcx> {\n     fn is_prefix_of(&self, other: PlaceRef<'tcx>) -> bool;"}, {"sha": "125110216aada2add8378c0dcabdfc48916ecbef", "filename": "src/librustc_mir/borrow_check/region_infer/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,11 +1,6 @@\n use std::collections::VecDeque;\n use std::rc::Rc;\n \n-use rustc::mir::{\n-    Body, ClosureOutlivesRequirement, ClosureOutlivesSubject, ClosureRegionRequirements,\n-    ConstraintCategory, Local, Location,\n-};\n-use rustc::ty::{self, subst::SubstsRef, RegionVid, Ty, TyCtxt, TypeFoldable};\n use rustc_data_structures::binary_search_util;\n use rustc_data_structures::frozen::Frozen;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -16,6 +11,11 @@ use rustc_index::vec::IndexVec;\n use rustc_infer::infer::canonical::QueryOutlivesConstraint;\n use rustc_infer::infer::region_constraints::{GenericKind, VarInfos, VerifyBound};\n use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin, RegionVariableOrigin};\n+use rustc_middle::mir::{\n+    Body, ClosureOutlivesRequirement, ClosureOutlivesSubject, ClosureRegionRequirements,\n+    ConstraintCategory, Local, Location,\n+};\n+use rustc_middle::ty::{self, subst::SubstsRef, RegionVid, Ty, TyCtxt, TypeFoldable};\n use rustc_span::Span;\n \n use crate::borrow_check::{\n@@ -202,7 +202,7 @@ pub(crate) enum Cause {\n ///\n /// For more information about this translation, see\n /// `InferCtxt::process_registered_region_obligations` and\n-/// `InferCtxt::type_must_outlive` in `rustc::infer::outlives`.\n+/// `InferCtxt::type_must_outlive` in `rustc_middle::infer::outlives`.\n #[derive(Clone, Debug)]\n pub struct TypeTest<'tcx> {\n     /// The type `T` that must outlive the region."}, {"sha": "7e352bfba77bc0b18a233f9137332939de9f4e97", "filename": "src/librustc_mir/borrow_check/region_infer/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,7 +1,7 @@\n-use rustc::ty::{self, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::InferCtxt;\n+use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_span::Span;\n use rustc_trait_selection::opaque_types::InferCtxtExt;\n "}, {"sha": "5d345a6e63d6b1c8394abd53452dfcfe03676742", "filename": "src/librustc_mir/borrow_check/region_infer/reverse_sccs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Freverse_sccs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Freverse_sccs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Freverse_sccs.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,10 +1,10 @@\n use crate::borrow_check::constraints::ConstraintSccIndex;\n use crate::borrow_check::RegionInferenceContext;\n use itertools::Itertools;\n-use rustc::ty::RegionVid;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::graph::vec_graph::VecGraph;\n use rustc_data_structures::graph::WithSuccessors;\n+use rustc_middle::ty::RegionVid;\n use std::ops::Range;\n use std::rc::Rc;\n "}, {"sha": "5310fd4abafe59475e0d21d9dda1b5fc4a64d138", "filename": "src/librustc_mir/borrow_check/region_infer/values.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n-use rustc::mir::{BasicBlock, Body, Location, ReadOnlyBodyAndCache};\n-use rustc::ty::{self, RegionVid};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_index::bit_set::{HybridBitSet, SparseBitMatrix};\n use rustc_index::vec::Idx;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::{BasicBlock, Body, Location, ReadOnlyBodyAndCache};\n+use rustc_middle::ty::{self, RegionVid};\n use std::fmt::Debug;\n use std::rc::Rc;\n "}, {"sha": "a1d7bc1462f95c2f6eb459e3bd9026c075867353", "filename": "src/librustc_mir/borrow_check/renumber.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,9 +1,9 @@\n-use rustc::mir::visit::{MutVisitor, TyContext};\n-use rustc::mir::{BodyAndCache, Location, PlaceElem, Promoted};\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_index::vec::IndexVec;\n use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n+use rustc_middle::mir::visit::{MutVisitor, TyContext};\n+use rustc_middle::mir::{BodyAndCache, Location, PlaceElem, Promoted};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n \n /// Replaces all free regions appearing in the MIR with fresh\n /// inference variables, returning the number of variables created."}, {"sha": "8e4f44e8195a84c2176f2c6be0cbf37384b46a1f", "filename": "src/librustc_mir/borrow_check/type_check/constraint_conversion.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,12 +1,12 @@\n-use rustc::mir::ConstraintCategory;\n-use rustc::ty::subst::GenericArgKind;\n-use rustc::ty::{self, TyCtxt};\n use rustc_infer::infer::canonical::QueryOutlivesConstraint;\n use rustc_infer::infer::canonical::QueryRegionConstraints;\n use rustc_infer::infer::outlives::env::RegionBoundPairs;\n use rustc_infer::infer::outlives::obligations::{TypeOutlives, TypeOutlivesDelegate};\n use rustc_infer::infer::region_constraints::{GenericKind, VerifyBound};\n use rustc_infer::infer::{self, InferCtxt, SubregionOrigin};\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::subst::GenericArgKind;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::DUMMY_SP;\n \n use crate::borrow_check::{"}, {"sha": "0583295bfca776e303f9f9f454faedc1ba42fff4", "filename": "src/librustc_mir/borrow_check/type_check/free_region_relations.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -1,13 +1,13 @@\n-use rustc::mir::ConstraintCategory;\n-use rustc::traits::query::OutlivesBound;\n-use rustc::ty::free_region_map::FreeRegionRelations;\n-use rustc::ty::{self, RegionVid, Ty, TyCtxt};\n use rustc_data_structures::frozen::Frozen;\n use rustc_data_structures::transitive_relation::TransitiveRelation;\n use rustc_infer::infer::canonical::QueryRegionConstraints;\n use rustc_infer::infer::outlives;\n use rustc_infer::infer::region_constraints::GenericKind;\n use rustc_infer::infer::InferCtxt;\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::traits::query::OutlivesBound;\n+use rustc_middle::ty::free_region_map::FreeRegionRelations;\n+use rustc_middle::ty::{self, RegionVid, Ty, TyCtxt};\n use rustc_span::DUMMY_SP;\n use rustc_trait_selection::traits::query::type_op::{self, TypeOp};\n use std::rc::Rc;"}, {"sha": "83ee46acdc45bb98517d9011d924a89a67eb1902", "filename": "src/librustc_mir/borrow_check/type_check/input_output.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8926bb497d9b127eb318aea5aed0e745d8381591/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs?ref=8926bb497d9b127eb318aea5aed0e745d8381591", "patch": "@@ -7,9 +7,9 @@\n //! `RETURN_PLACE` the MIR arguments) are always fully normalized (and\n //! contain revealed `impl Trait` values).\n \n-use rustc::mir::*;\n-use rustc::ty::Ty;\n use rustc_infer::infer::LateBoundRegionConversionTime;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::Ty;\n \n use rustc_index::vec::Idx;\n use rustc_span::Span;"}]}