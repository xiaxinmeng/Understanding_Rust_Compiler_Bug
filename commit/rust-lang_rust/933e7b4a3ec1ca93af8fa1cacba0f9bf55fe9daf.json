{"sha": "933e7b4a3ec1ca93af8fa1cacba0f9bf55fe9daf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzM2U3YjRhM2VjMWNhOTNhZjhmYTFjYWNiYTBmOWJmNTVmZTlkYWY=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-09T01:17:18Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-13T22:03:47Z"}, "message": "librustc_llvm: use unboxed closures", "tree": {"sha": "e3d4b04b83290997139b60f3ded1c7c15c0668f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3d4b04b83290997139b60f3ded1c7c15c0668f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/933e7b4a3ec1ca93af8fa1cacba0f9bf55fe9daf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/933e7b4a3ec1ca93af8fa1cacba0f9bf55fe9daf", "html_url": "https://github.com/rust-lang/rust/commit/933e7b4a3ec1ca93af8fa1cacba0f9bf55fe9daf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/933e7b4a3ec1ca93af8fa1cacba0f9bf55fe9daf/comments", "author": null, "committer": null, "parents": [{"sha": "3739a2427bc66dc9a8ea4cb34bffee2fba6d107c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3739a2427bc66dc9a8ea4cb34bffee2fba6d107c", "html_url": "https://github.com/rust-lang/rust/commit/3739a2427bc66dc9a8ea4cb34bffee2fba6d107c"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "7d8338ba976dd7091d75e0887fcdb80c158695a3", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/933e7b4a3ec1ca93af8fa1cacba0f9bf55fe9daf/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/933e7b4a3ec1ca93af8fa1cacba0f9bf55fe9daf/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=933e7b4a3ec1ca93af8fa1cacba0f9bf55fe9daf", "patch": "@@ -23,6 +23,7 @@\n \n #![feature(globs)]\n #![feature(link_args)]\n+#![feature(unboxed_closures)]\n \n extern crate libc;\n \n@@ -2206,7 +2207,7 @@ pub unsafe extern \"C\" fn rust_llvm_string_write_impl(sr: RustStringRef,\n     (*sr).borrow_mut().push_all(slice);\n }\n \n-pub fn build_string(f: |RustStringRef|) -> Option<String> {\n+pub fn build_string<F>(f: F) -> Option<String> where F: FnOnce(RustStringRef){\n     let mut buf = RefCell::new(Vec::new());\n     f(&mut buf as RustStringRepr as RustStringRef);\n     String::from_utf8(buf.into_inner()).ok()"}]}