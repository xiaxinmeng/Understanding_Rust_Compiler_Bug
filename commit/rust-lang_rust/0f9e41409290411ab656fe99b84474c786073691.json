{"sha": "0f9e41409290411ab656fe99b84474c786073691", "node_id": "C_kwDOAAsO6NoAKDBmOWU0MTQwOTI5MDQxMWFiNjU2ZmU5OWI4NDQ3NGM3ODYwNzM2OTE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-06T03:30:58Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-13T17:48:55Z"}, "message": "nit: docs", "tree": {"sha": "d6574ed9950db8dca145bb37eb878358806ebcf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6574ed9950db8dca145bb37eb878358806ebcf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f9e41409290411ab656fe99b84474c786073691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f9e41409290411ab656fe99b84474c786073691", "html_url": "https://github.com/rust-lang/rust/commit/0f9e41409290411ab656fe99b84474c786073691", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f9e41409290411ab656fe99b84474c786073691/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b19a2c119a7764ec81a122c4d6257715462e956", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b19a2c119a7764ec81a122c4d6257715462e956", "html_url": "https://github.com/rust-lang/rust/commit/4b19a2c119a7764ec81a122c4d6257715462e956"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "27de48c1f83454e78f93baea50359551e127af32", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0f9e41409290411ab656fe99b84474c786073691/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f9e41409290411ab656fe99b84474c786073691/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=0f9e41409290411ab656fe99b84474c786073691", "patch": "@@ -1148,14 +1148,23 @@ impl<'tcx, T: IntoIterator> Binder<'tcx, T> {\n #[derive(HashStable, TypeFoldable, TypeVisitable, Lift)]\n pub struct AliasTy<'tcx> {\n     /// The parameters of the associated or opaque item.\n+    ///\n+    /// For a projection, these are the substitutions for the trait and the\n+    /// GAT substitutions, if there are any.\n+    ///\n+    /// For RPIT the substitutions are for the generics of the function,\n+    /// while for TAIT it is used for the generic parameters of the alias.\n     pub substs: SubstsRef<'tcx>,\n \n     /// The `DefId` of the `TraitItem` for the associated type `N` if this is a projection,\n     /// or the `OpaqueType` item if this is an opaque.\n     ///\n-    /// Note that this is not the `DefId` of the `TraitRef` containing this\n-    /// associated type, which is in `tcx.associated_item(item_def_id).container`,\n-    /// aka. `tcx.parent(item_def_id).unwrap()`.\n+    /// During codegen, `tcx.type_of(def_id)` can be used to get the type of the\n+    /// underlying type if the type is an opaque.\n+    ///\n+    /// Note that if this is an associated type, this is not the `DefId` of the\n+    /// `TraitRef` containing this associated type, which is in `tcx.associated_item(def_id).container`,\n+    /// aka. `tcx.parent(def_id)`.\n     pub def_id: DefId,\n }\n "}]}