{"sha": "8e6f69afc9b0943003ce51a53d1f59611e6601a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNmY2OWFmYzliMDk0MzAwM2NlNTFhNTNkMWY1OTYxMWU2NjAxYTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-16T04:40:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-16T04:40:53Z"}, "message": "Auto merge of #77962 - bugadani:arena2, r=Mark-Simulacrum\n\nRemove arena's dependency on `rustc_data_structures`\n\n`rustc_arena` currently has a dependency on `rustc_data_structures` because of a trivial \"don't inline me\" function. This PR copies that function and removes the dependency.", "tree": {"sha": "131cfe3d84a3123f7ae6d089fdf45d051f0ccb49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/131cfe3d84a3123f7ae6d089fdf45d051f0ccb49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e6f69afc9b0943003ce51a53d1f59611e6601a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e6f69afc9b0943003ce51a53d1f59611e6601a3", "html_url": "https://github.com/rust-lang/rust/commit/8e6f69afc9b0943003ce51a53d1f59611e6601a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e6f69afc9b0943003ce51a53d1f59611e6601a3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bd740a8f17d75168b683bcfb077b6e450047df5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bd740a8f17d75168b683bcfb077b6e450047df5", "html_url": "https://github.com/rust-lang/rust/commit/9bd740a8f17d75168b683bcfb077b6e450047df5"}, {"sha": "52ff31a7ebfab8d0b1f5d28fab917150a5f3814d", "url": "https://api.github.com/repos/rust-lang/rust/commits/52ff31a7ebfab8d0b1f5d28fab917150a5f3814d", "html_url": "https://github.com/rust-lang/rust/commit/52ff31a7ebfab8d0b1f5d28fab917150a5f3814d"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "5ca804cb739ebfa0732bf26f82b86a8369f2d8ce", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8e6f69afc9b0943003ce51a53d1f59611e6601a3/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8e6f69afc9b0943003ce51a53d1f59611e6601a3/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8e6f69afc9b0943003ce51a53d1f59611e6601a3", "patch": "@@ -3368,7 +3368,6 @@ dependencies = [\n name = \"rustc_arena\"\n version = \"0.0.0\"\n dependencies = [\n- \"rustc_data_structures\",\n  \"smallvec 1.4.2\",\n ]\n "}, {"sha": "29caa852ed47eb7db0c6dab7e47e5c2dae46de7d", "filename": "compiler/rustc_arena/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8e6f69afc9b0943003ce51a53d1f59611e6601a3/compiler%2Frustc_arena%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8e6f69afc9b0943003ce51a53d1f59611e6601a3/compiler%2Frustc_arena%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2FCargo.toml?ref=8e6f69afc9b0943003ce51a53d1f59611e6601a3", "patch": "@@ -5,5 +5,4 @@ version = \"0.0.0\"\n edition = \"2018\"\n \n [dependencies]\n-rustc_data_structures = { path = \"../rustc_data_structures\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "c051c607ff217b84600b1c77c223affdeacc82a8", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8e6f69afc9b0943003ce51a53d1f59611e6601a3/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e6f69afc9b0943003ce51a53d1f59611e6601a3/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=8e6f69afc9b0943003ce51a53d1f59611e6601a3", "patch": "@@ -16,7 +16,6 @@\n #![feature(maybe_uninit_slice)]\n #![cfg_attr(test, feature(test))]\n \n-use rustc_data_structures::cold_path;\n use smallvec::SmallVec;\n \n use std::alloc::Layout;\n@@ -27,6 +26,12 @@ use std::mem::{self, MaybeUninit};\n use std::ptr;\n use std::slice;\n \n+#[inline(never)]\n+#[cold]\n+pub fn cold_path<F: FnOnce() -> R, R>(f: F) -> R {\n+    f()\n+}\n+\n /// An arena that can hold objects of only one type.\n pub struct TypedArena<T> {\n     /// A pointer to the next object to be allocated."}]}