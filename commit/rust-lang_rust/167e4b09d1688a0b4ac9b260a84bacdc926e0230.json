{"sha": "167e4b09d1688a0b4ac9b260a84bacdc926e0230", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2N2U0YjA5ZDE2ODhhMGI0YWM5YjI2MGE4NGJhY2RjOTI2ZTAyMzA=", "commit": {"author": {"name": "gentoo90", "email": "gentoo90@gmail.com", "date": "2017-05-30T08:14:25Z"}, "committer": {"name": "gentoo90", "email": "gentoo90@gmail.com", "date": "2017-05-30T08:17:05Z"}, "message": "Fix 'invalid literal for int()' exception in pretty-printers\n\nSome pointers values include additional info,\nso they can't be parsed with int().", "tree": {"sha": "0274b025595120c971a804861c650430efbc52c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0274b025595120c971a804861c650430efbc52c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/167e4b09d1688a0b4ac9b260a84bacdc926e0230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/167e4b09d1688a0b4ac9b260a84bacdc926e0230", "html_url": "https://github.com/rust-lang/rust/commit/167e4b09d1688a0b4ac9b260a84bacdc926e0230", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/167e4b09d1688a0b4ac9b260a84bacdc926e0230/comments", "author": {"login": "gentoo90", "id": 1297574, "node_id": "MDQ6VXNlcjEyOTc1NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1297574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gentoo90", "html_url": "https://github.com/gentoo90", "followers_url": "https://api.github.com/users/gentoo90/followers", "following_url": "https://api.github.com/users/gentoo90/following{/other_user}", "gists_url": "https://api.github.com/users/gentoo90/gists{/gist_id}", "starred_url": "https://api.github.com/users/gentoo90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gentoo90/subscriptions", "organizations_url": "https://api.github.com/users/gentoo90/orgs", "repos_url": "https://api.github.com/users/gentoo90/repos", "events_url": "https://api.github.com/users/gentoo90/events{/privacy}", "received_events_url": "https://api.github.com/users/gentoo90/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gentoo90", "id": 1297574, "node_id": "MDQ6VXNlcjEyOTc1NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1297574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gentoo90", "html_url": "https://github.com/gentoo90", "followers_url": "https://api.github.com/users/gentoo90/followers", "following_url": "https://api.github.com/users/gentoo90/following{/other_user}", "gists_url": "https://api.github.com/users/gentoo90/gists{/gist_id}", "starred_url": "https://api.github.com/users/gentoo90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gentoo90/subscriptions", "organizations_url": "https://api.github.com/users/gentoo90/orgs", "repos_url": "https://api.github.com/users/gentoo90/repos", "events_url": "https://api.github.com/users/gentoo90/events{/privacy}", "received_events_url": "https://api.github.com/users/gentoo90/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac33d2cbfbe103cb9dda7cc31eda85fcd8ca039d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac33d2cbfbe103cb9dda7cc31eda85fcd8ca039d", "html_url": "https://github.com/rust-lang/rust/commit/ac33d2cbfbe103cb9dda7cc31eda85fcd8ca039d"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "2ad16b50d3f8e1ab10f7b00e61ffdb69107e99e0", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/167e4b09d1688a0b4ac9b260a84bacdc926e0230/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/167e4b09d1688a0b4ac9b260a84bacdc926e0230/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=167e4b09d1688a0b4ac9b260a84bacdc926e0230", "patch": "@@ -78,7 +78,8 @@ def get_child_at_index(self, index):\n \n     def as_integer(self):\n         if self.gdb_val.type.code == gdb.TYPE_CODE_PTR:\n-            return int(str(self.gdb_val), 0)\n+            as_str = str(self.gdb_val).split()[0]\n+            return int(as_str, 0)\n         return int(self.gdb_val)\n \n     def get_wrapped_value(self):"}]}