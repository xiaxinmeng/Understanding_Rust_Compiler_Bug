{"sha": "de35c297bf7464e891ada4899470b60aa60db87f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMzVjMjk3YmY3NDY0ZTg5MWFkYTQ4OTk0NzBiNjBhYTYwZGI4N2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-07T19:04:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-07T19:04:00Z"}, "message": "Auto merge of #6694 - matthiaskrgr:lintcheck-cfg, r=Manishearth\n\nlintcheck: add a cmdline option --crates-toml <TOML PATH> to override crate sources file to use.\n\nFixes #6691\n\nchangelog: lintcheck: add --crates-toml  cmdline option to override default crates.toml file.", "tree": {"sha": "6016d4c7253976afb7a980ba6fb3e08ce3d3bfe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6016d4c7253976afb7a980ba6fb3e08ce3d3bfe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de35c297bf7464e891ada4899470b60aa60db87f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de35c297bf7464e891ada4899470b60aa60db87f", "html_url": "https://github.com/rust-lang/rust/commit/de35c297bf7464e891ada4899470b60aa60db87f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de35c297bf7464e891ada4899470b60aa60db87f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1ce78f0b2871763fea2bc39194a691bc35c9d29", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1ce78f0b2871763fea2bc39194a691bc35c9d29", "html_url": "https://github.com/rust-lang/rust/commit/c1ce78f0b2871763fea2bc39194a691bc35c9d29"}, {"sha": "6f3eeac83c801434bd36e2435c9fafab8af5576c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f3eeac83c801434bd36e2435c9fafab8af5576c", "html_url": "https://github.com/rust-lang/rust/commit/6f3eeac83c801434bd36e2435c9fafab8af5576c"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "3fc7dcb7d4b8bf90996b1504ea0deb2d44c1476f", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de35c297bf7464e891ada4899470b60aa60db87f/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de35c297bf7464e891ada4899470b60aa60db87f/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=de35c297bf7464e891ada4899470b60aa60db87f", "patch": "@@ -192,8 +192,8 @@ fn build_clippy() {\n }\n \n // get a list of CrateSources we want to check from a \"lintcheck_crates.toml\" file.\n-fn read_crates() -> Vec<CrateSource> {\n-    let toml_path = PathBuf::from(\"clippy_dev/lintcheck_crates.toml\");\n+fn read_crates(toml_path: Option<&str>) -> Vec<CrateSource> {\n+    let toml_path = PathBuf::from(toml_path.unwrap_or(\"clippy_dev/lintcheck_crates.toml\"));\n     let toml_content: String =\n         std::fs::read_to_string(&toml_path).unwrap_or_else(|_| panic!(\"Failed to read {}\", toml_path.display()));\n     let crate_list: CrateList =\n@@ -288,7 +288,7 @@ pub fn run(clap_config: &ArgMatches) {\n     // download and extract the crates, then run clippy on them and collect clippys warnings\n     // flatten into one big list of warnings\n \n-    let crates = read_crates();\n+    let crates = read_crates(clap_config.value_of(\"crates-toml\"));\n \n     let clippy_warnings: Vec<ClippyWarning> = if let Some(only_one_crate) = clap_config.value_of(\"only\") {\n         // if we don't have the specified crate in the .toml, throw an error"}, {"sha": "5dbd46935a59a88732bcfae41ed9d76914f6a389", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/de35c297bf7464e891ada4899470b60aa60db87f/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de35c297bf7464e891ada4899470b60aa60db87f/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=de35c297bf7464e891ada4899470b60aa60db87f", "patch": "@@ -62,6 +62,13 @@ fn get_clap_config<'a>() -> ArgMatches<'a> {\n                 .value_name(\"CRATE\")\n                 .long(\"only\")\n                 .help(\"only process a single crate of the list\"),\n+        )\n+        .arg(\n+            Arg::with_name(\"crates-toml\")\n+                .takes_value(true)\n+                .value_name(\"CRATES-SOURCES-TOML-PATH\")\n+                .long(\"crates-toml\")\n+                .help(\"set the path for a crates.toml where lintcheck should read the sources from\"),\n         );\n \n     let app = App::new(\"Clippy developer tooling\")"}]}