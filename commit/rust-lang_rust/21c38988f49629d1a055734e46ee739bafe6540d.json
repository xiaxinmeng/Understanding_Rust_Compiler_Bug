{"sha": "21c38988f49629d1a055734e46ee739bafe6540d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYzM4OTg4ZjQ5NjI5ZDFhMDU1NzM0ZTQ2ZWU3MzliYWZlNjU0MGQ=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-02-23T21:31:21Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-02-23T21:34:17Z"}, "message": "Two more tests", "tree": {"sha": "38c2e7b3fed14da549d56129cb5dda68b535a0c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38c2e7b3fed14da549d56129cb5dda68b535a0c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21c38988f49629d1a055734e46ee739bafe6540d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21c38988f49629d1a055734e46ee739bafe6540d", "html_url": "https://github.com/rust-lang/rust/commit/21c38988f49629d1a055734e46ee739bafe6540d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21c38988f49629d1a055734e46ee739bafe6540d/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f753a6ef0252689930fbfdf39859bf80c0388955", "url": "https://api.github.com/repos/rust-lang/rust/commits/f753a6ef0252689930fbfdf39859bf80c0388955", "html_url": "https://github.com/rust-lang/rust/commit/f753a6ef0252689930fbfdf39859bf80c0388955"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "6ad65523833a941530e7ba3388a207a4dc84aeec", "filename": "src/test/compile-fail/closure-no-fn.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/21c38988f49629d1a055734e46ee739bafe6540d/src%2Ftest%2Fcompile-fail%2Fclosure-no-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c38988f49629d1a055734e46ee739bafe6540d/src%2Ftest%2Fcompile-fail%2Fclosure-no-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-no-fn.rs?ref=21c38988f49629d1a055734e46ee739bafe6540d", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Ensure that capturing closures are never coerced to fns\n+// Especially interesting as non-capturing closures can be.\n+\n+fn main() {\n+    let mut a = 0u8;\n+    let foo :fn(u8) -> u8 = |v: u8| { a += v; a };\n+    //~^ ERROR mismatched types\n+    let b = 0u8;\n+    let bar :fn() -> u8 = || { b };\n+    //~^ ERROR mismatched types\n+    let baz :fn() -> u8 = || { b } as fn() -> u8;\n+    //~^ ERROR mismatched types\n+    //~^^ ERROR non-scalar cast\n+}"}, {"sha": "20ed24f025b8965e465b05f3e8e2046a221e6eb6", "filename": "src/test/compile-fail/feature-gate-closure_to_fn_coercion.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/21c38988f49629d1a055734e46ee739bafe6540d/src%2Ftest%2Fcompile-fail%2Ffeature-gate-closure_to_fn_coercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c38988f49629d1a055734e46ee739bafe6540d/src%2Ftest%2Fcompile-fail%2Ffeature-gate-closure_to_fn_coercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-closure_to_fn_coercion.rs?ref=21c38988f49629d1a055734e46ee739bafe6540d", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-stage0: new feature, remove this when SNAP\n+// revisions: a b\n+\n+#[cfg(a)]\n+mod a {\n+    const FOO :fn(u8) -> u8 = |v: u8| { v };\n+    //[a]~^ ERROR non-capturing closure to fn coercion is experimental\n+    //[a]~^^ ERROR mismatched types\n+\n+    const BAR: [fn(&mut u32); 1] = [\n+        |v: &mut u32| *v += 1,\n+    //[a]~^ ERROR non-capturing closure to fn coercion is experimental\n+    //[a]~^^ ERROR mismatched types\n+    ];\n+}\n+\n+#[cfg(b)]\n+mod b {\n+    fn func_specific() -> (fn() -> u32) {\n+        || return 42\n+        //[b]~^ ERROR non-capturing closure to fn coercion is experimental\n+        //[b]~^^ ERROR mismatched types\n+    }\n+    fn foo() {\n+        // Items\n+        assert_eq!(func_specific()(), 42);\n+        let foo :fn(u8) -> u8 = |v: u8| { v };\n+        //[b]~^ ERROR non-capturing closure to fn coercion is experimental\n+        //[b]~^^ ERROR mismatched types\n+    }\n+\n+}\n+\n+\n+"}]}