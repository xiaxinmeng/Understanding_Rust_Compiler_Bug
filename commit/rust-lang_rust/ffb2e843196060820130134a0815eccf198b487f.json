{"sha": "ffb2e843196060820130134a0815eccf198b487f", "node_id": "C_kwDOAAsO6NoAKGZmYjJlODQzMTk2MDYwODIwMTMwMTM0YTA4MTVlY2NmMTk4YjQ4N2Y", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2023-01-13T15:05:16Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2023-01-13T15:05:16Z"}, "message": "Playground.crate_name String -> Symbol", "tree": {"sha": "b6cd6208facc40245805c3411c8a316ba1a2824e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6cd6208facc40245805c3411c8a316ba1a2824e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffb2e843196060820130134a0815eccf198b487f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb2e843196060820130134a0815eccf198b487f", "html_url": "https://github.com/rust-lang/rust/commit/ffb2e843196060820130134a0815eccf198b487f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffb2e843196060820130134a0815eccf198b487f/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81b637b6f2b410e81fb47919c8b3817979ec7073", "url": "https://api.github.com/repos/rust-lang/rust/commits/81b637b6f2b410e81fb47919c8b3817979ec7073", "html_url": "https://github.com/rust-lang/rust/commit/81b637b6f2b410e81fb47919c8b3817979ec7073"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "4ff67fe1551dd019f638bc79ce4ee6460047e6bf", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ffb2e843196060820130134a0815eccf198b487f/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffb2e843196060820130134a0815eccf198b487f/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=ffb2e843196060820130134a0815eccf198b487f", "patch": "@@ -30,7 +30,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::HirId;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::edition::Edition;\n-use rustc_span::Span;\n+use rustc_span::{Span, Symbol};\n \n use once_cell::sync::Lazy;\n use std::borrow::Cow;\n@@ -198,7 +198,7 @@ fn slugify(c: char) -> Option<char> {\n \n #[derive(Clone, Debug)]\n pub struct Playground {\n-    pub crate_name: Option<String>,\n+    pub crate_name: Option<Symbol>,\n     pub url: String,\n }\n \n@@ -290,7 +290,7 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'_, 'a, I> {\n                 .map(|l| map_line(l).for_code())\n                 .intersperse(\"\\n\".into())\n                 .collect::<String>();\n-            let krate = krate.as_ref().map(|s| &**s);\n+            let krate = krate.as_ref().map(|s| s.as_str());\n             let (test, _, _) =\n                 doctest::make_test(&test, krate, false, &Default::default(), edition, None);\n             let channel = if test.contains(\"#![feature(\") { \"&amp;version=nightly\" } else { \"\" };"}, {"sha": "9f266568769c07fa63d1a3b8d49d5f1a181d773c", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ffb2e843196060820130134a0815eccf198b487f/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffb2e843196060820130134a0815eccf198b487f/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=ffb2e843196060820130134a0815eccf198b487f", "patch": "@@ -464,8 +464,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         // If user passed in `--playground-url` arg, we fill in crate name here\n         let mut playground = None;\n         if let Some(url) = playground_url {\n-            playground =\n-                Some(markdown::Playground { crate_name: Some(krate.name(tcx).to_string()), url });\n+            playground = Some(markdown::Playground { crate_name: Some(krate.name(tcx)), url });\n         }\n         let mut layout = layout::Layout {\n             logo: String::new(),\n@@ -491,7 +490,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n                 }\n                 (sym::html_playground_url, Some(s)) => {\n                     playground = Some(markdown::Playground {\n-                        crate_name: Some(krate.name(tcx).to_string()),\n+                        crate_name: Some(krate.name(tcx)),\n                         url: s.to_string(),\n                     });\n                 }"}]}