{"sha": "d8516178e51e495579b32bfdf6630079a4ffdf42", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4NTE2MTc4ZTUxZTQ5NTU3OWIzMmJmZGY2NjMwMDc5YTRmZmRmNDI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-06-09T13:50:20Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-06-09T18:44:04Z"}, "message": "Pass ty params to visit::visit_fn", "tree": {"sha": "0d9a08679d548d71db1a56892402fb7967f0a9fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d9a08679d548d71db1a56892402fb7967f0a9fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8516178e51e495579b32bfdf6630079a4ffdf42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8516178e51e495579b32bfdf6630079a4ffdf42", "html_url": "https://github.com/rust-lang/rust/commit/d8516178e51e495579b32bfdf6630079a4ffdf42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8516178e51e495579b32bfdf6630079a4ffdf42/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1819fb74714df5b72720367ecb90590ed3ac226", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1819fb74714df5b72720367ecb90590ed3ac226", "html_url": "https://github.com/rust-lang/rust/commit/d1819fb74714df5b72720367ecb90590ed3ac226"}], "stats": {"total": 69, "additions": 50, "deletions": 19}, "files": [{"sha": "d535749112377eca4fa4d3b28654cb7830f75915", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8516178e51e495579b32bfdf6630079a4ffdf42/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8516178e51e495579b32bfdf6630079a4ffdf42/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=d8516178e51e495579b32bfdf6630079a4ffdf42", "patch": "@@ -35,8 +35,8 @@ fn check_crate(@ty::ctxt tcx, resolve::def_map dm, &@ast::crate crate) {\n     visit::visit_crate(*crate, [], visit::vtor(v));\n }\n \n-fn visit_fn(&ast::_fn f, &span sp, &ident name, &ast::def_id d_id,\n-            &ast::ann a, &scope sc, &vt[scope] v) {\n+fn visit_fn(&ast::_fn f, &vec[ast::ty_param] tp, &span sp, &ident name,\n+            &ast::def_id d_id, &ast::ann a, &scope sc, &vt[scope] v) {\n     visit::visit_fn_decl(f.decl, sc, v);\n     vt(v).visit_block(f.body, [], v);\n }"}, {"sha": "48901800e95619d70d698c8be7fcc34e8cf620d9", "filename": "src/comp/middle/visit.rs", "status": "modified", "additions": 48, "deletions": 17, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/d8516178e51e495579b32bfdf6630079a4ffdf42/src%2Fcomp%2Fmiddle%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8516178e51e495579b32bfdf6630079a4ffdf42/src%2Fcomp%2Fmiddle%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fvisit.rs?ref=d8516178e51e495579b32bfdf6630079a4ffdf42", "patch": "@@ -14,6 +14,7 @@ fn vt[E](&vt[E] x) -> visitor[E] {\n \n type visitor[E] =\n     @rec(fn(&_mod m, &span sp, &E e, &vt[E] v) visit_mod,\n+         fn(&@view_item v, &E e, &vt[E] v)     visit_view_item,\n          fn(&@native_item i, &E e, &vt[E] v)   visit_native_item,\n          fn(&@item i, &E e, &vt[E] v)          visit_item,\n          fn(&block b, &E e, &vt[E] v)          visit_block,\n@@ -23,12 +24,12 @@ type visitor[E] =\n          fn(&@decl d, &E e, &vt[E] v)          visit_decl,\n          fn(&@expr ex, &E e, &vt[E] v)         visit_expr,\n          fn(&@ty t, &E e, &vt[E] v)            visit_ty,\n-         fn(&_fn f, &span sp, &ident name, \n-            &def_id d_id, &ann a,\n-            &E e, &vt[E] v)                    visit_fn);\n+         fn(&_fn f, &vec[ty_param] tp, &span sp, &ident name, &def_id d_id,\n+            &ann a, &E e, &vt[E] v)            visit_fn);\n \n fn default_visitor[E]() -> visitor[E] {\n     ret @rec(visit_mod = bind visit_mod[E](_, _, _, _),\n+             visit_view_item = bind visit_view_item[E](_, _, _),\n              visit_native_item = bind visit_native_item[E](_, _, _),\n              visit_item = bind visit_item[E](_, _, _),\n              visit_block = bind visit_block[E](_, _, _),\n@@ -38,32 +39,63 @@ fn default_visitor[E]() -> visitor[E] {\n              visit_decl = bind visit_decl[E](_, _, _),\n              visit_expr = bind visit_expr[E](_, _, _),\n              visit_ty = bind visit_ty[E](_, _, _),\n-             visit_fn = bind visit_fn[E](_, _, _, _, _, _, _));\n+             visit_fn = bind visit_fn[E](_, _, _, _, _, _, _, _));\n }\n \n fn visit_crate[E](&crate c, &E e, &vt[E] v) {\n     vt(v).visit_mod(c.node.module, c.span, e, v);\n }\n \n+fn visit_crate_directive[E](&@crate_directive cd, &E e, &vt[E] v) {\n+    alt (cd.node) {\n+        case (cdir_let(_, ?ex, ?cdirs)) {\n+            vt(v).visit_expr(ex, e, v);\n+            for (@crate_directive cdir in cdirs) {\n+                visit_crate_directive(cdir, e, v);\n+            }\n+        }\n+        case (cdir_src_mod(_, _)) {}\n+        case (cdir_dir_mod(_, _, ?cdirs)) {\n+            for (@crate_directive cdir in cdirs) {\n+                visit_crate_directive(cdir, e, v);\n+            }\n+        }\n+        case (cdir_view_item(?vi)) {\n+            vt(v).visit_view_item(vi, e, v);\n+        }\n+        case (cdir_meta(_,_)) {}\n+        case (cdir_syntax(_)) {}\n+        case (cdir_auth(_, _)) {}\n+    }\n+}\n+\n fn visit_mod[E](&_mod m, &span sp, &E e, &vt[E] v) {\n+    for (@view_item vi in m.view_items) {\n+        vt(v).visit_view_item(vi, e, v);\n+    }\n     for (@item i in m.items) {\n         vt(v).visit_item(i, e, v);\n     }\n }\n \n+fn visit_view_item[E](&@view_item vi, &E e, &vt[E] v) {}\n+\n fn visit_item[E](&@item i, &E e, &vt[E] v) {\n     alt (i.node) {\n         case (item_const(_, ?t, ?ex, _, _)) {\n             vt(v).visit_ty(t, e, v);\n             vt(v).visit_expr(ex, e, v);\n         }\n-        case (item_fn(?nm, ?f, _, ?d, ?a)) {\n-            vt(v).visit_fn(f, i.span, nm, d, a, e, v);\n+        case (item_fn(?nm, ?f, ?tp, ?d, ?a)) {\n+            vt(v).visit_fn(f, tp, i.span, nm, d, a, e, v);\n         }\n         case (item_mod(_, ?m, _)) {\n             vt(v).visit_mod(m, i.span, e, v);\n         }\n         case (item_native_mod(_, ?nm, _)) {\n+            for (@view_item vi in nm.view_items) {\n+                vt(v).visit_view_item(vi, e, v);\n+            }\n             for (@native_item ni in nm.items) {\n                 vt(v).visit_native_item(ni, e, v);\n             }\n@@ -83,13 +115,13 @@ fn visit_item[E](&@item i, &E e, &vt[E] v) {\n                 vt(v).visit_ty(f.ty, e, v);\n             }\n             for (@method m in ob.methods) {\n-                vt(v).visit_fn(m.node.meth, m.span, m.node.ident, m.node.id,\n-                           m.node.ann, e, v);\n+                vt(v).visit_fn(m.node.meth, [], m.span, m.node.ident,\n+                               m.node.id, m.node.ann, e, v);\n             }\n             alt (ob.dtor) {\n                 case (none) {}\n                 case (some(?m)) {\n-                    vt(v).visit_fn(m.node.meth, m.span, m.node.ident,\n+                    vt(v).visit_fn(m.node.meth, [], m.span, m.node.ident,\n                                    m.node.id, m.node.ann, e, v);\n                 }\n             }\n@@ -142,9 +174,8 @@ fn visit_ty[E](&@ty t, &E e, &vt[E] v) {\n fn visit_pat[E](&@pat p, &E e, &vt[E] v) {\n     alt (p.node) {\n         case (pat_tag(?path, ?children, _)) {\n-            for (@pat child in children) {\n-                vt(v).visit_pat(child, e, v);\n-            }\n+            for (@ty tp in path.node.types) { vt(v).visit_ty(tp, e, v); }\n+            for (@pat child in children) { vt(v).visit_pat(child, e, v); }\n         }\n         case (_) {}\n     }\n@@ -166,8 +197,8 @@ fn visit_fn_decl[E](&fn_decl fd, &E e, &vt[E] v) {\n     vt(v).visit_ty(fd.output, e, v);\n }\n \n-fn visit_fn[E](&_fn f, &span sp, &ident i, &def_id d, &ann a,\n-               &E e, &vt[E] v) {\n+fn visit_fn[E](&_fn f, &vec[ty_param] tp, &span sp, &ident i, &def_id d,\n+               &ann a, &E e, &vt[E] v) {\n     visit_fn_decl(f.decl, e, v);\n     vt(v).visit_block(f.body, e, v);\n }\n@@ -181,7 +212,7 @@ fn visit_stmt[E](&@stmt s, &E e, &vt[E] v) {\n     alt (s.node) {\n         case (stmt_decl(?d, _)) { vt(v).visit_decl(d, e, v); }\n         case (stmt_expr(?ex, _)) { vt(v).visit_expr(ex, e, v); }\n-        case (stmt_crate_directive(?cdir)) {}\n+        case (stmt_crate_directive(?cd)) { visit_crate_directive(cd, e, v); }\n     }\n }\n \n@@ -359,8 +390,8 @@ fn visit_expr[E](&@expr ex, &E e, &vt[E] v) {\n                 }\n             }\n             for (@method m in anon_obj.methods) {\n-                vt(v).visit_fn(m.node.meth, m.span, m.node.ident, \n-                           m.node.id, m.node.ann, e, v);\n+                vt(v).visit_fn(m.node.meth, [], m.span, m.node.ident, \n+                               m.node.id, m.node.ann, e, v);\n             }\n         }\n     }"}]}