{"sha": "d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZjFiYTg5Y2U3ZWJiNzU4OWU2OTkwM2I2ZjNjOTJmYjliNWQyZmE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-09-27T09:10:25Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-09-27T09:10:25Z"}, "message": "fix matching on chars\n\nfixes #63", "tree": {"sha": "260a662acef7f9dbce7502ad0a56403ceb866d9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/260a662acef7f9dbce7502ad0a56403ceb866d9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJX6jeBAAoJEFbW7qD8Z6xGmc8P/j+G6IDG0gEaCZTJVbtoiB+P\ncQOfsvvyk9QyTssl/Y21vxRpM0A3RQQZNs7r/iUtdW5zSg22hesVduFiNrL+wdnZ\nKQvS8TL7cpTu9ob5yel1sGAp/N5atEmSV72TPl62xLytQRS/h2eZckBPS8P1ldkc\naP/TSnOF+cozfTudJfX8WNp+vwXmbixBJ5pubwj8JGYcq1obs8feYPUMpYUhJYO2\nwTMVnqlPNimrpC2b9Sl9hOBnlz9OzqL2dxrKIiq2YbBu9F5brZLk1Md12cBqp1lf\nqq0AzYlWYUuibQqKjKxl37rH7ftcQjJu5ck4/9nDv1zXdabb0UxJEDx9aU45XePP\nvHUKJ7APZeOZPAjTT+IO46AFw72a1h/dNmoNUig1+5/SYz8cdGL/c7WLr8HKV8WV\nRwtkw4oZIcRzFbnlvDwmTTPg4Xfxo1rcf6yzXMGYK6sjjIyEyaGfPBw6C7U8qQ0S\n/i2MclrJ3E8nfkKm4fpYI2E8IxK+zyGzGsvSsvdr5nheCsHlIx+Vtk5FgHfpRK8Y\nwAJSOYzX9rP4cgtjSYyuNgjD6S9/wb8UTi3spv0tztbPM+nHMJLFBxYIq9VKeeuJ\nvWe3s9NSGVfeWm8iSybAIzz+4brXC1jOmzVbEnLOJ3LnTtZMbbdTjPD5d4f/MLfG\nIELIYRdrq/qgkmIiBMx+\n=ZvIT\n-----END PGP SIGNATURE-----", "payload": "tree 260a662acef7f9dbce7502ad0a56403ceb866d9c\nparent 10ab168db92a6ac4460dbe588a78feb16200c5b3\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1474967425 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1474967425 +0200\n\nfix matching on chars\n\nfixes #63"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa", "html_url": "https://github.com/rust-lang/rust/commit/d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10ab168db92a6ac4460dbe588a78feb16200c5b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/10ab168db92a6ac4460dbe588a78feb16200c5b3", "html_url": "https://github.com/rust-lang/rust/commit/10ab168db92a6ac4460dbe588a78feb16200c5b3"}], "stats": {"total": 50, "additions": 34, "deletions": 16}, "files": [{"sha": "2189a15cfafff16014528b933ec22a78a47c77bf", "filename": "src/interpreter/terminator/mod.rs", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa/src%2Finterpreter%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa/src%2Finterpreter%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fterminator%2Fmod.rs?ref=d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa", "patch": "@@ -1,5 +1,4 @@\n use rustc::hir::def_id::DefId;\n-use rustc::middle::const_val::ConstVal;\n use rustc::mir::repr as mir;\n use rustc::traits::{self, Reveal};\n use rustc::ty::fold::TypeFoldable;\n@@ -45,26 +44,16 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             SwitchInt { ref discr, ref values, ref targets, .. } => {\n                 let discr_ptr = self.eval_lvalue(discr)?.to_ptr();\n                 let discr_ty = self.lvalue_ty(discr);\n-                let discr_size = self\n-                    .type_layout(discr_ty)\n-                    .size(&self.tcx.data_layout)\n-                    .bytes() as usize;\n-                let discr_val = self.memory.read_uint(discr_ptr, discr_size)?;\n-                if let ty::TyChar = discr_ty.sty {\n-                    if ::std::char::from_u32(discr_val as u32).is_none() {\n-                        return Err(EvalError::InvalidChar(discr_val as u64));\n-                    }\n-                }\n+                let discr_val = self.read_value(discr_ptr, discr_ty)?;\n+                let discr_prim = self.value_to_primval(discr_val, discr_ty)?;\n \n                 // Branch to the `otherwise` case by default, if no match is found.\n                 let mut target_block = targets[targets.len() - 1];\n \n                 for (index, const_val) in values.iter().enumerate() {\n-                    let val = match const_val {\n-                        &ConstVal::Integral(i) => i.to_u64_unchecked(),\n-                        _ => bug!(\"TerminatorKind::SwitchInt branch constant was not an integer\"),\n-                    };\n-                    if discr_val == val {\n+                    let val = self.const_to_value(const_val)?;\n+                    let prim = self.value_to_primval(val, discr_ty)?;\n+                    if discr_prim == prim {\n                         target_block = targets[index];\n                         break;\n                     }"}, {"sha": "568a1a1c881827779d837912424f78d57abb7acc", "filename": "tests/run-pass/match_slice.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa/tests%2Frun-pass%2Fmatch_slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa/tests%2Frun-pass%2Fmatch_slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmatch_slice.rs?ref=d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+    let x = \"hello\";\n+    match x {\n+        \"foo\" => {},\n+        \"bar\" => {},\n+        _ => {},\n+    }\n+}"}, {"sha": "7ba68e6b239c0f3fcf0efdf80f123b5c5bddb1c4", "filename": "tests/run-pass/rust-lang-org.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa/tests%2Frun-pass%2Frust-lang-org.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa/tests%2Frun-pass%2Frust-lang-org.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Frust-lang-org.rs?ref=d6f1ba89ce7ebb7589e69903b6f3c92fb9b5d2fa", "patch": "@@ -0,0 +1,21 @@\n+// This code is editable and runnable!\n+fn main() {\n+    // A simple integer calculator:\n+    // `+` or `-` means add or subtract by 1\n+    // `*` or `/` means multiply or divide by 2\n+\n+    let program = \"+ + * - /\";\n+    let mut accumulator = 0;\n+\n+    for token in program.chars() {\n+        match token {\n+            '+' => accumulator += 1,\n+            '-' => accumulator -= 1,\n+            '*' => accumulator *= 2,\n+            '/' => accumulator /= 2,\n+            _ => { /* ignore everything else */ }\n+        }\n+    }\n+\n+    assert_eq!(accumulator, 1);\n+}"}]}