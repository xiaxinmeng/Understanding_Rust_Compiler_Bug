{"sha": "262ace528425e6e22ccc0a5afd6321a566ab18d7", "node_id": "C_kwDOAAsO6NoAKDI2MmFjZTUyODQyNWU2ZTIyY2NjMGE1YWZkNjMyMWE1NjZhYjE4ZDc", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-04T12:53:46Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-04T12:53:46Z"}, "message": "Avoid from_immediate_or_packed_pair in ThreadLocalRef codegen", "tree": {"sha": "ba16d612a8dce1d9637bafd0c821dc7935cd5663", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba16d612a8dce1d9637bafd0c821dc7935cd5663"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/262ace528425e6e22ccc0a5afd6321a566ab18d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/262ace528425e6e22ccc0a5afd6321a566ab18d7", "html_url": "https://github.com/rust-lang/rust/commit/262ace528425e6e22ccc0a5afd6321a566ab18d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/262ace528425e6e22ccc0a5afd6321a566ab18d7/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2e0db93e7befa23eacb42a121f64c1eb659e8bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2e0db93e7befa23eacb42a121f64c1eb659e8bb", "html_url": "https://github.com/rust-lang/rust/commit/b2e0db93e7befa23eacb42a121f64c1eb659e8bb"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "23196c8cbaea1ebf4f3d9c9e9d82ab681d9aa5b6", "filename": "compiler/rustc_codegen_ssa/src/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/262ace528425e6e22ccc0a5afd6321a566ab18d7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/262ace528425e6e22ccc0a5afd6321a566ab18d7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs?ref=262ace528425e6e22ccc0a5afd6321a566ab18d7", "patch": "@@ -462,7 +462,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 assert!(bx.cx().tcx().is_static(def_id));\n                 let static_ = bx.get_static(def_id);\n                 let layout = bx.layout_of(bx.cx().tcx().static_ptr_ty(def_id));\n-                OperandRef::from_immediate_or_packed_pair(bx, static_, layout)\n+                OperandRef { val: OperandValue::Immediate(static_), layout }\n             }\n             mir::Rvalue::Use(ref operand) => self.codegen_operand(bx, operand),\n             mir::Rvalue::Repeat(..) | mir::Rvalue::Aggregate(..) => {"}]}