{"sha": "d485a511d011aca349c7cda97775392981bf5d5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0ODVhNTExZDAxMWFjYTM0OWM3Y2RhOTc3NzUzOTI5ODFiZjVkNWY=", "commit": {"author": {"name": "Michael Neumann", "email": "mneumann@ntecs.de", "date": "2016-01-12T19:39:22Z"}, "committer": {"name": "Michael Neumann", "email": "mneumann@ntecs.de", "date": "2016-01-12T19:39:22Z"}, "message": "Recognize #[thread_local] on extern static. Fixes #30795.\n\nThis will correctly add the thread_local attribute to the external static\nvariable \"errno\":\n\n    extern {\n         #[thread_local]\n         static errno: c_int;\n    }\n\nBefore this commit, the thread_local attribute is ignored.", "tree": {"sha": "716798eea81f00bfa23592fb397c1d92935b53ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/716798eea81f00bfa23592fb397c1d92935b53ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d485a511d011aca349c7cda97775392981bf5d5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d485a511d011aca349c7cda97775392981bf5d5f", "html_url": "https://github.com/rust-lang/rust/commit/d485a511d011aca349c7cda97775392981bf5d5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d485a511d011aca349c7cda97775392981bf5d5f/comments", "author": {"login": "mneumann", "id": 34112, "node_id": "MDQ6VXNlcjM0MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/34112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mneumann", "html_url": "https://github.com/mneumann", "followers_url": "https://api.github.com/users/mneumann/followers", "following_url": "https://api.github.com/users/mneumann/following{/other_user}", "gists_url": "https://api.github.com/users/mneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mneumann/subscriptions", "organizations_url": "https://api.github.com/users/mneumann/orgs", "repos_url": "https://api.github.com/users/mneumann/repos", "events_url": "https://api.github.com/users/mneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/mneumann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mneumann", "id": 34112, "node_id": "MDQ6VXNlcjM0MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/34112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mneumann", "html_url": "https://github.com/mneumann", "followers_url": "https://api.github.com/users/mneumann/followers", "following_url": "https://api.github.com/users/mneumann/following{/other_user}", "gists_url": "https://api.github.com/users/mneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mneumann/subscriptions", "organizations_url": "https://api.github.com/users/mneumann/orgs", "repos_url": "https://api.github.com/users/mneumann/repos", "events_url": "https://api.github.com/users/mneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/mneumann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cffc9b1951f5e51ad19bf3b854f7afa8073aadb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cffc9b1951f5e51ad19bf3b854f7afa8073aadb", "html_url": "https://github.com/rust-lang/rust/commit/7cffc9b1951f5e51ad19bf3b854f7afa8073aadb"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "01ce9d51746db1f98a43215ea7ef91af5262051e", "filename": "src/librustc_trans/trans/foreign.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d485a511d011aca349c7cda97775392981bf5d5f/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d485a511d011aca349c7cda97775392981bf5d5f/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs?ref=d485a511d011aca349c7cda97775392981bf5d5f", "patch": "@@ -40,6 +40,7 @@ use syntax::attr;\n use syntax::codemap::Span;\n use syntax::parse::token::{InternedString, special_idents};\n use syntax::ast;\n+use syntax::attr::AttrMetaMethods;\n \n use rustc_front::print::pprust;\n use rustc_front::hir;\n@@ -119,8 +120,8 @@ pub fn register_static(ccx: &CrateContext,\n     let llty = type_of::type_of(ccx, ty);\n \n     let ident = link_name(foreign_item);\n-    match attr::first_attr_value_str_by_name(&foreign_item.attrs,\n-                                             \"linkage\") {\n+    let c = match attr::first_attr_value_str_by_name(&foreign_item.attrs,\n+                                                     \"linkage\") {\n         // If this is a static with a linkage specified, then we need to handle\n         // it a little specially. The typesystem prevents things like &T and\n         // extern \"C\" fn() from being non-null, so we can't just declare a\n@@ -165,7 +166,16 @@ pub fn register_static(ccx: &CrateContext,\n         }\n         None => // Generate an external declaration.\n             declare::declare_global(ccx, &ident[..], llty),\n+    };\n+\n+    // Handle thread-local external statics.\n+    for attr in foreign_item.attrs.iter() {\n+        if attr.check_name(\"thread_local\") {\n+            llvm::set_thread_local(c, true);\n+        }\n     }\n+\n+    return c;\n }\n \n // only use this for foreign function ABIs and glue, use `get_extern_rust_fn` for Rust functions"}]}