{"sha": "2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlODNjNmQxMTRkY2Y0OWM5M2RiZDdmYmFhOWNhM2Q4YjY3YzU0ZTg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-30T15:56:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-30T15:56:55Z"}, "message": "Rollup merge of #66889 - dtolnay:fmt6, r=rkruppe\n\nMake python-generated source files compatible with rustfmt\n\nThis PR adjusts the generators for src/libcore/num/dec2flt/table.rs, src/libcore/unicode/printable.rs, and src/libcore/unicode/tables.rs to make it so running `rustfmt` on the generated files no longer needs to apply any changes.\n\nThis involves tweaking the python scripts where reasonable to better match rustfmt's style, and adding `#[rustfmt::skip]` to big constant tables that there's no point having rustfmt rewrap.\n\nr? @Dylan-DPC", "tree": {"sha": "41142e0088cbbcfc968da5e6dc5577b817f74e5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41142e0088cbbcfc968da5e6dc5577b817f74e5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd4pFHCRBK7hj4Ov3rIwAAdHIIAKjkD9kYc5OPKzqiU5L4LDkk\neU0oF6sp+pNi/Tskx9IHq03ureN93IXaWHXqn0NBWzoJBRsLc3SxFNYDL9myuo1w\nLvoDxQplkxzTRxNxXSYxCA0U+AvV4N8fYtrwrGmKZM5mZRSfiAEOHl1n1Paow8Rk\ncLgZvg5H9e6XDi1XcFxDy9+JS1Bk6D7ZWMtMgA28UeI0+m/iAWZ5efnmz7GpLAyJ\n4ZgBj2raszwqK2Q1/sToTNCkWSeEt+y/tjZofltPPpTms6qTPIKlW0gTWoXpB3r9\n4+hGqa3Y3Xd02ffL3LA0x/hUECR7gJ4wobBuAb70JiCJ6Muth1gIV1La/y4BH8E=\n=+VVO\n-----END PGP SIGNATURE-----\n", "payload": "tree 41142e0088cbbcfc968da5e6dc5577b817f74e5e\nparent c85f63561e1224cec657bcf1a51d78e762f628e5\nparent 28eb31f8dcfa495e2d0090a7e649d90a2cbef237\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1575129415 +0100\ncommitter GitHub <noreply@github.com> 1575129415 +0100\n\nRollup merge of #66889 - dtolnay:fmt6, r=rkruppe\n\nMake python-generated source files compatible with rustfmt\n\nThis PR adjusts the generators for src/libcore/num/dec2flt/table.rs, src/libcore/unicode/printable.rs, and src/libcore/unicode/tables.rs to make it so running `rustfmt` on the generated files no longer needs to apply any changes.\n\nThis involves tweaking the python scripts where reasonable to better match rustfmt's style, and adding `#[rustfmt::skip]` to big constant tables that there's no point having rustfmt rewrap.\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8", "html_url": "https://github.com/rust-lang/rust/commit/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c85f63561e1224cec657bcf1a51d78e762f628e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c85f63561e1224cec657bcf1a51d78e762f628e5", "html_url": "https://github.com/rust-lang/rust/commit/c85f63561e1224cec657bcf1a51d78e762f628e5"}, {"sha": "28eb31f8dcfa495e2d0090a7e649d90a2cbef237", "url": "https://api.github.com/repos/rust-lang/rust/commits/28eb31f8dcfa495e2d0090a7e649d90a2cbef237", "html_url": "https://github.com/rust-lang/rust/commit/28eb31f8dcfa495e2d0090a7e649d90a2cbef237"}], "stats": {"total": 2551, "additions": 1288, "deletions": 1263}, "files": [{"sha": "85395d2ecdfc75b8e5593a02bda842d413e1b3c5", "filename": "src/etc/dec2flt_table.py", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Fetc%2Fdec2flt_table.py", "raw_url": "https://github.com/rust-lang/rust/raw/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Fetc%2Fdec2flt_table.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fdec2flt_table.py?ref=2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8", "patch": "@@ -111,14 +111,18 @@ def print_proper_powers():\n     print(\"pub const MIN_E: i16 = {};\".format(MIN_E))\n     print(\"pub const MAX_E: i16 = {};\".format(MAX_E))\n     print()\n+    print(\"#[rustfmt::skip]\")\n     typ = \"([u64; {0}], [i16; {0}])\".format(len(powers))\n-    print(\"pub const POWERS: \", typ, \" = ([\", sep='')\n+    print(\"pub const POWERS: \", typ, \" = (\", sep='')\n+    print(\"    [\")\n     for z in powers:\n-        print(\"    0x{:x},\".format(z.sig))\n-    print(\"], [\")\n+        print(\"        0x{:x},\".format(z.sig))\n+    print(\"    ],\")\n+    print(\"    [\")\n     for z in powers:\n-        print(\"    {},\".format(z.exp))\n-    print(\"]);\")\n+        print(\"        {},\".format(z.exp))\n+    print(\"    ],\")\n+    print(\");\")\n \n \n def print_short_powers(num_bits, significand_size):\n@@ -127,6 +131,7 @@ def print_short_powers(num_bits, significand_size):\n     max_e = int(ceil(log(max_sig, 5)))\n     e_range = range(max_e)\n     typ = \"[f{}; {}]\".format(num_bits, len(e_range))\n+    print(\"#[rustfmt::skip]\")\n     print(\"pub const F\", num_bits, \"_SHORT_POWERS: \", typ, \" = [\", sep='')\n     for e in e_range:\n         print(\"    1e{},\".format(e))"}, {"sha": "1bd94ffa04e0e327b011271e294c4b8f5e20ec57", "filename": "src/libcore/num/dec2flt/table.rs", "status": "modified", "additions": 1231, "deletions": 1225, "changes": 2456, "blob_url": "https://github.com/rust-lang/rust/blob/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Flibcore%2Fnum%2Fdec2flt%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Flibcore%2Fnum%2Fdec2flt%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Ftable.rs?ref=2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8", "patch": "@@ -4,1232 +4,1237 @@\n pub const MIN_E: i16 = -305;\n pub const MAX_E: i16 = 305;\n \n-pub const POWERS: ([u64; 611], [i16; 611]) = ([\n-    0xe0b62e2929aba83c,\n-    0x8c71dcd9ba0b4926,\n-    0xaf8e5410288e1b6f,\n-    0xdb71e91432b1a24b,\n-    0x892731ac9faf056f,\n-    0xab70fe17c79ac6ca,\n-    0xd64d3d9db981787d,\n-    0x85f0468293f0eb4e,\n-    0xa76c582338ed2622,\n-    0xd1476e2c07286faa,\n-    0x82cca4db847945ca,\n-    0xa37fce126597973d,\n-    0xcc5fc196fefd7d0c,\n-    0xff77b1fcbebcdc4f,\n-    0x9faacf3df73609b1,\n-    0xc795830d75038c1e,\n-    0xf97ae3d0d2446f25,\n-    0x9becce62836ac577,\n-    0xc2e801fb244576d5,\n-    0xf3a20279ed56d48a,\n-    0x9845418c345644d7,\n-    0xbe5691ef416bd60c,\n-    0xedec366b11c6cb8f,\n-    0x94b3a202eb1c3f39,\n-    0xb9e08a83a5e34f08,\n-    0xe858ad248f5c22ca,\n-    0x91376c36d99995be,\n-    0xb58547448ffffb2e,\n-    0xe2e69915b3fff9f9,\n-    0x8dd01fad907ffc3c,\n-    0xb1442798f49ffb4b,\n-    0xdd95317f31c7fa1d,\n-    0x8a7d3eef7f1cfc52,\n-    0xad1c8eab5ee43b67,\n-    0xd863b256369d4a41,\n-    0x873e4f75e2224e68,\n-    0xa90de3535aaae202,\n-    0xd3515c2831559a83,\n-    0x8412d9991ed58092,\n-    0xa5178fff668ae0b6,\n-    0xce5d73ff402d98e4,\n-    0x80fa687f881c7f8e,\n-    0xa139029f6a239f72,\n-    0xc987434744ac874f,\n-    0xfbe9141915d7a922,\n-    0x9d71ac8fada6c9b5,\n-    0xc4ce17b399107c23,\n-    0xf6019da07f549b2b,\n-    0x99c102844f94e0fb,\n-    0xc0314325637a193a,\n-    0xf03d93eebc589f88,\n-    0x96267c7535b763b5,\n-    0xbbb01b9283253ca3,\n-    0xea9c227723ee8bcb,\n-    0x92a1958a7675175f,\n-    0xb749faed14125d37,\n-    0xe51c79a85916f485,\n-    0x8f31cc0937ae58d3,\n-    0xb2fe3f0b8599ef08,\n-    0xdfbdcece67006ac9,\n-    0x8bd6a141006042be,\n-    0xaecc49914078536d,\n-    0xda7f5bf590966849,\n-    0x888f99797a5e012d,\n-    0xaab37fd7d8f58179,\n-    0xd5605fcdcf32e1d7,\n-    0x855c3be0a17fcd26,\n-    0xa6b34ad8c9dfc070,\n-    0xd0601d8efc57b08c,\n-    0x823c12795db6ce57,\n-    0xa2cb1717b52481ed,\n-    0xcb7ddcdda26da269,\n-    0xfe5d54150b090b03,\n-    0x9efa548d26e5a6e2,\n-    0xc6b8e9b0709f109a,\n-    0xf867241c8cc6d4c1,\n-    0x9b407691d7fc44f8,\n-    0xc21094364dfb5637,\n-    0xf294b943e17a2bc4,\n-    0x979cf3ca6cec5b5b,\n-    0xbd8430bd08277231,\n-    0xece53cec4a314ebe,\n-    0x940f4613ae5ed137,\n-    0xb913179899f68584,\n-    0xe757dd7ec07426e5,\n-    0x9096ea6f3848984f,\n-    0xb4bca50b065abe63,\n-    0xe1ebce4dc7f16dfc,\n-    0x8d3360f09cf6e4bd,\n-    0xb080392cc4349ded,\n-    0xdca04777f541c568,\n-    0x89e42caaf9491b61,\n-    0xac5d37d5b79b6239,\n-    0xd77485cb25823ac7,\n-    0x86a8d39ef77164bd,\n-    0xa8530886b54dbdec,\n-    0xd267caa862a12d67,\n-    0x8380dea93da4bc60,\n-    0xa46116538d0deb78,\n-    0xcd795be870516656,\n-    0x806bd9714632dff6,\n-    0xa086cfcd97bf97f4,\n-    0xc8a883c0fdaf7df0,\n-    0xfad2a4b13d1b5d6c,\n-    0x9cc3a6eec6311a64,\n-    0xc3f490aa77bd60fd,\n-    0xf4f1b4d515acb93c,\n-    0x991711052d8bf3c5,\n-    0xbf5cd54678eef0b7,\n-    0xef340a98172aace5,\n-    0x9580869f0e7aac0f,\n-    0xbae0a846d2195713,\n-    0xe998d258869facd7,\n-    0x91ff83775423cc06,\n-    0xb67f6455292cbf08,\n-    0xe41f3d6a7377eeca,\n-    0x8e938662882af53e,\n-    0xb23867fb2a35b28e,\n-    0xdec681f9f4c31f31,\n-    0x8b3c113c38f9f37f,\n-    0xae0b158b4738705f,\n-    0xd98ddaee19068c76,\n-    0x87f8a8d4cfa417ca,\n-    0xa9f6d30a038d1dbc,\n-    0xd47487cc8470652b,\n-    0x84c8d4dfd2c63f3b,\n-    0xa5fb0a17c777cf0a,\n-    0xcf79cc9db955c2cc,\n-    0x81ac1fe293d599c0,\n-    0xa21727db38cb0030,\n-    0xca9cf1d206fdc03c,\n-    0xfd442e4688bd304b,\n-    0x9e4a9cec15763e2f,\n-    0xc5dd44271ad3cdba,\n-    0xf7549530e188c129,\n-    0x9a94dd3e8cf578ba,\n-    0xc13a148e3032d6e8,\n-    0xf18899b1bc3f8ca2,\n-    0x96f5600f15a7b7e5,\n-    0xbcb2b812db11a5de,\n-    0xebdf661791d60f56,\n-    0x936b9fcebb25c996,\n-    0xb84687c269ef3bfb,\n-    0xe65829b3046b0afa,\n-    0x8ff71a0fe2c2e6dc,\n-    0xb3f4e093db73a093,\n-    0xe0f218b8d25088b8,\n-    0x8c974f7383725573,\n-    0xafbd2350644eead0,\n-    0xdbac6c247d62a584,\n-    0x894bc396ce5da772,\n-    0xab9eb47c81f5114f,\n-    0xd686619ba27255a3,\n-    0x8613fd0145877586,\n-    0xa798fc4196e952e7,\n-    0xd17f3b51fca3a7a1,\n-    0x82ef85133de648c5,\n-    0xa3ab66580d5fdaf6,\n-    0xcc963fee10b7d1b3,\n-    0xffbbcfe994e5c620,\n-    0x9fd561f1fd0f9bd4,\n-    0xc7caba6e7c5382c9,\n-    0xf9bd690a1b68637b,\n-    0x9c1661a651213e2d,\n-    0xc31bfa0fe5698db8,\n-    0xf3e2f893dec3f126,\n-    0x986ddb5c6b3a76b8,\n-    0xbe89523386091466,\n-    0xee2ba6c0678b597f,\n-    0x94db483840b717f0,\n-    0xba121a4650e4ddec,\n-    0xe896a0d7e51e1566,\n-    0x915e2486ef32cd60,\n-    0xb5b5ada8aaff80b8,\n-    0xe3231912d5bf60e6,\n-    0x8df5efabc5979c90,\n-    0xb1736b96b6fd83b4,\n-    0xddd0467c64bce4a1,\n-    0x8aa22c0dbef60ee4,\n-    0xad4ab7112eb3929e,\n-    0xd89d64d57a607745,\n-    0x87625f056c7c4a8b,\n-    0xa93af6c6c79b5d2e,\n-    0xd389b47879823479,\n-    0x843610cb4bf160cc,\n-    0xa54394fe1eedb8ff,\n-    0xce947a3da6a9273e,\n-    0x811ccc668829b887,\n-    0xa163ff802a3426a9,\n-    0xc9bcff6034c13053,\n-    0xfc2c3f3841f17c68,\n-    0x9d9ba7832936edc1,\n-    0xc5029163f384a931,\n-    0xf64335bcf065d37d,\n-    0x99ea0196163fa42e,\n-    0xc06481fb9bcf8d3a,\n-    0xf07da27a82c37088,\n-    0x964e858c91ba2655,\n-    0xbbe226efb628afeb,\n-    0xeadab0aba3b2dbe5,\n-    0x92c8ae6b464fc96f,\n-    0xb77ada0617e3bbcb,\n-    0xe55990879ddcaabe,\n-    0x8f57fa54c2a9eab7,\n-    0xb32df8e9f3546564,\n-    0xdff9772470297ebd,\n-    0x8bfbea76c619ef36,\n-    0xaefae51477a06b04,\n-    0xdab99e59958885c5,\n-    0x88b402f7fd75539b,\n-    0xaae103b5fcd2a882,\n-    0xd59944a37c0752a2,\n-    0x857fcae62d8493a5,\n-    0xa6dfbd9fb8e5b88f,\n-    0xd097ad07a71f26b2,\n-    0x825ecc24c8737830,\n-    0xa2f67f2dfa90563b,\n-    0xcbb41ef979346bca,\n-    0xfea126b7d78186bd,\n-    0x9f24b832e6b0f436,\n-    0xc6ede63fa05d3144,\n-    0xf8a95fcf88747d94,\n-    0x9b69dbe1b548ce7d,\n-    0xc24452da229b021c,\n-    0xf2d56790ab41c2a3,\n-    0x97c560ba6b0919a6,\n-    0xbdb6b8e905cb600f,\n-    0xed246723473e3813,\n-    0x9436c0760c86e30c,\n-    0xb94470938fa89bcf,\n-    0xe7958cb87392c2c3,\n-    0x90bd77f3483bb9ba,\n-    0xb4ecd5f01a4aa828,\n-    0xe2280b6c20dd5232,\n-    0x8d590723948a535f,\n-    0xb0af48ec79ace837,\n-    0xdcdb1b2798182245,\n-    0x8a08f0f8bf0f156b,\n-    0xac8b2d36eed2dac6,\n-    0xd7adf884aa879177,\n-    0x86ccbb52ea94baeb,\n-    0xa87fea27a539e9a5,\n-    0xd29fe4b18e88640f,\n-    0x83a3eeeef9153e89,\n-    0xa48ceaaab75a8e2b,\n-    0xcdb02555653131b6,\n-    0x808e17555f3ebf12,\n-    0xa0b19d2ab70e6ed6,\n-    0xc8de047564d20a8c,\n-    0xfb158592be068d2f,\n-    0x9ced737bb6c4183d,\n-    0xc428d05aa4751e4d,\n-    0xf53304714d9265e0,\n-    0x993fe2c6d07b7fac,\n-    0xbf8fdb78849a5f97,\n-    0xef73d256a5c0f77d,\n-    0x95a8637627989aae,\n-    0xbb127c53b17ec159,\n-    0xe9d71b689dde71b0,\n-    0x9226712162ab070e,\n-    0xb6b00d69bb55c8d1,\n-    0xe45c10c42a2b3b06,\n-    0x8eb98a7a9a5b04e3,\n-    0xb267ed1940f1c61c,\n-    0xdf01e85f912e37a3,\n-    0x8b61313bbabce2c6,\n-    0xae397d8aa96c1b78,\n-    0xd9c7dced53c72256,\n-    0x881cea14545c7575,\n-    0xaa242499697392d3,\n-    0xd4ad2dbfc3d07788,\n-    0x84ec3c97da624ab5,\n-    0xa6274bbdd0fadd62,\n-    0xcfb11ead453994ba,\n-    0x81ceb32c4b43fcf5,\n-    0xa2425ff75e14fc32,\n-    0xcad2f7f5359a3b3e,\n-    0xfd87b5f28300ca0e,\n-    0x9e74d1b791e07e48,\n-    0xc612062576589ddb,\n-    0xf79687aed3eec551,\n-    0x9abe14cd44753b53,\n-    0xc16d9a0095928a27,\n-    0xf1c90080baf72cb1,\n-    0x971da05074da7bef,\n-    0xbce5086492111aeb,\n-    0xec1e4a7db69561a5,\n-    0x9392ee8e921d5d07,\n-    0xb877aa3236a4b449,\n-    0xe69594bec44de15b,\n-    0x901d7cf73ab0acd9,\n-    0xb424dc35095cd80f,\n-    0xe12e13424bb40e13,\n-    0x8cbccc096f5088cc,\n-    0xafebff0bcb24aaff,\n-    0xdbe6fecebdedd5bf,\n-    0x89705f4136b4a597,\n-    0xabcc77118461cefd,\n-    0xd6bf94d5e57a42bc,\n-    0x8637bd05af6c69b6,\n-    0xa7c5ac471b478423,\n-    0xd1b71758e219652c,\n-    0x83126e978d4fdf3b,\n-    0xa3d70a3d70a3d70a,\n-    0xcccccccccccccccd,\n-    0x8000000000000000,\n-    0xa000000000000000,\n-    0xc800000000000000,\n-    0xfa00000000000000,\n-    0x9c40000000000000,\n-    0xc350000000000000,\n-    0xf424000000000000,\n-    0x9896800000000000,\n-    0xbebc200000000000,\n-    0xee6b280000000000,\n-    0x9502f90000000000,\n-    0xba43b74000000000,\n-    0xe8d4a51000000000,\n-    0x9184e72a00000000,\n-    0xb5e620f480000000,\n-    0xe35fa931a0000000,\n-    0x8e1bc9bf04000000,\n-    0xb1a2bc2ec5000000,\n-    0xde0b6b3a76400000,\n-    0x8ac7230489e80000,\n-    0xad78ebc5ac620000,\n-    0xd8d726b7177a8000,\n-    0x878678326eac9000,\n-    0xa968163f0a57b400,\n-    0xd3c21bcecceda100,\n-    0x84595161401484a0,\n-    0xa56fa5b99019a5c8,\n-    0xcecb8f27f4200f3a,\n-    0x813f3978f8940984,\n-    0xa18f07d736b90be5,\n-    0xc9f2c9cd04674edf,\n-    0xfc6f7c4045812296,\n-    0x9dc5ada82b70b59e,\n-    0xc5371912364ce305,\n-    0xf684df56c3e01bc7,\n-    0x9a130b963a6c115c,\n-    0xc097ce7bc90715b3,\n-    0xf0bdc21abb48db20,\n-    0x96769950b50d88f4,\n-    0xbc143fa4e250eb31,\n-    0xeb194f8e1ae525fd,\n-    0x92efd1b8d0cf37be,\n-    0xb7abc627050305ae,\n-    0xe596b7b0c643c719,\n-    0x8f7e32ce7bea5c70,\n-    0xb35dbf821ae4f38c,\n-    0xe0352f62a19e306f,\n-    0x8c213d9da502de45,\n-    0xaf298d050e4395d7,\n-    0xdaf3f04651d47b4c,\n-    0x88d8762bf324cd10,\n-    0xab0e93b6efee0054,\n-    0xd5d238a4abe98068,\n-    0x85a36366eb71f041,\n-    0xa70c3c40a64e6c52,\n-    0xd0cf4b50cfe20766,\n-    0x82818f1281ed44a0,\n-    0xa321f2d7226895c8,\n-    0xcbea6f8ceb02bb3a,\n-    0xfee50b7025c36a08,\n-    0x9f4f2726179a2245,\n-    0xc722f0ef9d80aad6,\n-    0xf8ebad2b84e0d58c,\n-    0x9b934c3b330c8577,\n-    0xc2781f49ffcfa6d5,\n-    0xf316271c7fc3908b,\n-    0x97edd871cfda3a57,\n-    0xbde94e8e43d0c8ec,\n-    0xed63a231d4c4fb27,\n-    0x945e455f24fb1cf9,\n-    0xb975d6b6ee39e437,\n-    0xe7d34c64a9c85d44,\n-    0x90e40fbeea1d3a4b,\n-    0xb51d13aea4a488dd,\n-    0xe264589a4dcdab15,\n-    0x8d7eb76070a08aed,\n-    0xb0de65388cc8ada8,\n-    0xdd15fe86affad912,\n-    0x8a2dbf142dfcc7ab,\n-    0xacb92ed9397bf996,\n-    0xd7e77a8f87daf7fc,\n-    0x86f0ac99b4e8dafd,\n-    0xa8acd7c0222311bd,\n-    0xd2d80db02aabd62c,\n-    0x83c7088e1aab65db,\n-    0xa4b8cab1a1563f52,\n-    0xcde6fd5e09abcf27,\n-    0x80b05e5ac60b6178,\n-    0xa0dc75f1778e39d6,\n-    0xc913936dd571c84c,\n-    0xfb5878494ace3a5f,\n-    0x9d174b2dcec0e47b,\n-    0xc45d1df942711d9a,\n-    0xf5746577930d6501,\n-    0x9968bf6abbe85f20,\n-    0xbfc2ef456ae276e9,\n-    0xefb3ab16c59b14a3,\n-    0x95d04aee3b80ece6,\n-    0xbb445da9ca61281f,\n-    0xea1575143cf97227,\n-    0x924d692ca61be758,\n-    0xb6e0c377cfa2e12e,\n-    0xe498f455c38b997a,\n-    0x8edf98b59a373fec,\n-    0xb2977ee300c50fe7,\n-    0xdf3d5e9bc0f653e1,\n-    0x8b865b215899f46d,\n-    0xae67f1e9aec07188,\n-    0xda01ee641a708dea,\n-    0x884134fe908658b2,\n-    0xaa51823e34a7eedf,\n-    0xd4e5e2cdc1d1ea96,\n-    0x850fadc09923329e,\n-    0xa6539930bf6bff46,\n-    0xcfe87f7cef46ff17,\n-    0x81f14fae158c5f6e,\n-    0xa26da3999aef774a,\n-    0xcb090c8001ab551c,\n-    0xfdcb4fa002162a63,\n-    0x9e9f11c4014dda7e,\n-    0xc646d63501a1511e,\n-    0xf7d88bc24209a565,\n-    0x9ae757596946075f,\n-    0xc1a12d2fc3978937,\n-    0xf209787bb47d6b85,\n-    0x9745eb4d50ce6333,\n-    0xbd176620a501fc00,\n-    0xec5d3fa8ce427b00,\n-    0x93ba47c980e98ce0,\n-    0xb8a8d9bbe123f018,\n-    0xe6d3102ad96cec1e,\n-    0x9043ea1ac7e41393,\n-    0xb454e4a179dd1877,\n-    0xe16a1dc9d8545e95,\n-    0x8ce2529e2734bb1d,\n-    0xb01ae745b101e9e4,\n-    0xdc21a1171d42645d,\n-    0x899504ae72497eba,\n-    0xabfa45da0edbde69,\n-    0xd6f8d7509292d603,\n-    0x865b86925b9bc5c2,\n-    0xa7f26836f282b733,\n-    0xd1ef0244af2364ff,\n-    0x8335616aed761f1f,\n-    0xa402b9c5a8d3a6e7,\n-    0xcd036837130890a1,\n-    0x802221226be55a65,\n-    0xa02aa96b06deb0fe,\n-    0xc83553c5c8965d3d,\n-    0xfa42a8b73abbf48d,\n-    0x9c69a97284b578d8,\n-    0xc38413cf25e2d70e,\n-    0xf46518c2ef5b8cd1,\n-    0x98bf2f79d5993803,\n-    0xbeeefb584aff8604,\n-    0xeeaaba2e5dbf6785,\n-    0x952ab45cfa97a0b3,\n-    0xba756174393d88e0,\n-    0xe912b9d1478ceb17,\n-    0x91abb422ccb812ef,\n-    0xb616a12b7fe617aa,\n-    0xe39c49765fdf9d95,\n-    0x8e41ade9fbebc27d,\n-    0xb1d219647ae6b31c,\n-    0xde469fbd99a05fe3,\n-    0x8aec23d680043bee,\n-    0xada72ccc20054aea,\n-    0xd910f7ff28069da4,\n-    0x87aa9aff79042287,\n-    0xa99541bf57452b28,\n-    0xd3fa922f2d1675f2,\n-    0x847c9b5d7c2e09b7,\n-    0xa59bc234db398c25,\n-    0xcf02b2c21207ef2f,\n-    0x8161afb94b44f57d,\n-    0xa1ba1ba79e1632dc,\n-    0xca28a291859bbf93,\n-    0xfcb2cb35e702af78,\n-    0x9defbf01b061adab,\n-    0xc56baec21c7a1916,\n-    0xf6c69a72a3989f5c,\n-    0x9a3c2087a63f6399,\n-    0xc0cb28a98fcf3c80,\n-    0xf0fdf2d3f3c30b9f,\n-    0x969eb7c47859e744,\n-    0xbc4665b596706115,\n-    0xeb57ff22fc0c795a,\n-    0x9316ff75dd87cbd8,\n-    0xb7dcbf5354e9bece,\n-    0xe5d3ef282a242e82,\n-    0x8fa475791a569d11,\n-    0xb38d92d760ec4455,\n-    0xe070f78d3927556b,\n-    0x8c469ab843b89563,\n-    0xaf58416654a6babb,\n-    0xdb2e51bfe9d0696a,\n-    0x88fcf317f22241e2,\n-    0xab3c2fddeeaad25b,\n-    0xd60b3bd56a5586f2,\n-    0x85c7056562757457,\n-    0xa738c6bebb12d16d,\n-    0xd106f86e69d785c8,\n-    0x82a45b450226b39d,\n-    0xa34d721642b06084,\n-    0xcc20ce9bd35c78a5,\n-    0xff290242c83396ce,\n-    0x9f79a169bd203e41,\n-    0xc75809c42c684dd1,\n-    0xf92e0c3537826146,\n-    0x9bbcc7a142b17ccc,\n-    0xc2abf989935ddbfe,\n-    0xf356f7ebf83552fe,\n-    0x98165af37b2153df,\n-    0xbe1bf1b059e9a8d6,\n-    0xeda2ee1c7064130c,\n-    0x9485d4d1c63e8be8,\n-    0xb9a74a0637ce2ee1,\n-    0xe8111c87c5c1ba9a,\n-    0x910ab1d4db9914a0,\n-    0xb54d5e4a127f59c8,\n-    0xe2a0b5dc971f303a,\n-    0x8da471a9de737e24,\n-    0xb10d8e1456105dad,\n-    0xdd50f1996b947519,\n-    0x8a5296ffe33cc930,\n-    0xace73cbfdc0bfb7b,\n-    0xd8210befd30efa5a,\n-    0x8714a775e3e95c78,\n-    0xa8d9d1535ce3b396,\n-    0xd31045a8341ca07c,\n-    0x83ea2b892091e44e,\n-    0xa4e4b66b68b65d61,\n-    0xce1de40642e3f4b9,\n-    0x80d2ae83e9ce78f4,\n-    0xa1075a24e4421731,\n-    0xc94930ae1d529cfd,\n-    0xfb9b7cd9a4a7443c,\n-    0x9d412e0806e88aa6,\n-    0xc491798a08a2ad4f,\n-    0xf5b5d7ec8acb58a3,\n-    0x9991a6f3d6bf1766,\n-    0xbff610b0cc6edd3f,\n-    0xeff394dcff8a948f,\n-    0x95f83d0a1fb69cd9,\n-    0xbb764c4ca7a44410,\n-    0xea53df5fd18d5514,\n-    0x92746b9be2f8552c,\n-    0xb7118682dbb66a77,\n-    0xe4d5e82392a40515,\n-    0x8f05b1163ba6832d,\n-    0xb2c71d5bca9023f8,\n-    0xdf78e4b2bd342cf7,\n-    0x8bab8eefb6409c1a,\n-    0xae9672aba3d0c321,\n-    0xda3c0f568cc4f3e9,\n-    0x8865899617fb1871,\n-    0xaa7eebfb9df9de8e,\n-    0xd51ea6fa85785631,\n-    0x8533285c936b35df,\n-    0xa67ff273b8460357,\n-    0xd01fef10a657842c,\n-    0x8213f56a67f6b29c,\n-    0xa298f2c501f45f43,\n-    0xcb3f2f7642717713,\n-    0xfe0efb53d30dd4d8,\n-    0x9ec95d1463e8a507,\n-    0xc67bb4597ce2ce49,\n-    0xf81aa16fdc1b81db,\n-    0x9b10a4e5e9913129,\n-    0xc1d4ce1f63f57d73,\n-    0xf24a01a73cf2dcd0,\n-    0x976e41088617ca02,\n-    0xbd49d14aa79dbc82,\n-    0xec9c459d51852ba3,\n-    0x93e1ab8252f33b46,\n-    0xb8da1662e7b00a17,\n-    0xe7109bfba19c0c9d,\n-    0x906a617d450187e2,\n-    0xb484f9dc9641e9db,\n-    0xe1a63853bbd26451,\n-    0x8d07e33455637eb3,\n-    0xb049dc016abc5e60,\n-    0xdc5c5301c56b75f7,\n-    0x89b9b3e11b6329bb,\n-    0xac2820d9623bf429,\n-    0xd732290fbacaf134,\n-    0x867f59a9d4bed6c0,\n-    0xa81f301449ee8c70,\n-    0xd226fc195c6a2f8c,\n-    0x83585d8fd9c25db8,\n-    0xa42e74f3d032f526,\n-    0xcd3a1230c43fb26f,\n-    0x80444b5e7aa7cf85,\n-    0xa0555e361951c367,\n-    0xc86ab5c39fa63441,\n-    0xfa856334878fc151,\n-    0x9c935e00d4b9d8d2,\n-    0xc3b8358109e84f07,\n-    0xf4a642e14c6262c9,\n-    0x98e7e9cccfbd7dbe,\n-    0xbf21e44003acdd2d,\n-    0xeeea5d5004981478,\n-    0x95527a5202df0ccb,\n-    0xbaa718e68396cffe,\n-    0xe950df20247c83fd,\n-    0x91d28b7416cdd27e,\n-], [\n-    -1077,\n-    -1073,\n-    -1070,\n-    -1067,\n-    -1063,\n-    -1060,\n-    -1057,\n-    -1053,\n-    -1050,\n-    -1047,\n-    -1043,\n-    -1040,\n-    -1037,\n-    -1034,\n-    -1030,\n-    -1027,\n-    -1024,\n-    -1020,\n-    -1017,\n-    -1014,\n-    -1010,\n-    -1007,\n-    -1004,\n-    -1000,\n-    -997,\n-    -994,\n-    -990,\n-    -987,\n-    -984,\n-    -980,\n-    -977,\n-    -974,\n-    -970,\n-    -967,\n-    -964,\n-    -960,\n-    -957,\n-    -954,\n-    -950,\n-    -947,\n-    -944,\n-    -940,\n-    -937,\n-    -934,\n-    -931,\n-    -927,\n-    -924,\n-    -921,\n-    -917,\n-    -914,\n-    -911,\n-    -907,\n-    -904,\n-    -901,\n-    -897,\n-    -894,\n-    -891,\n-    -887,\n-    -884,\n-    -881,\n-    -877,\n-    -874,\n-    -871,\n-    -867,\n-    -864,\n-    -861,\n-    -857,\n-    -854,\n-    -851,\n-    -847,\n-    -844,\n-    -841,\n-    -838,\n-    -834,\n-    -831,\n-    -828,\n-    -824,\n-    -821,\n-    -818,\n-    -814,\n-    -811,\n-    -808,\n-    -804,\n-    -801,\n-    -798,\n-    -794,\n-    -791,\n-    -788,\n-    -784,\n-    -781,\n-    -778,\n-    -774,\n-    -771,\n-    -768,\n-    -764,\n-    -761,\n-    -758,\n-    -754,\n-    -751,\n-    -748,\n-    -744,\n-    -741,\n-    -738,\n-    -735,\n-    -731,\n-    -728,\n-    -725,\n-    -721,\n-    -718,\n-    -715,\n-    -711,\n-    -708,\n-    -705,\n-    -701,\n-    -698,\n-    -695,\n-    -691,\n-    -688,\n-    -685,\n-    -681,\n-    -678,\n-    -675,\n-    -671,\n-    -668,\n-    -665,\n-    -661,\n-    -658,\n-    -655,\n-    -651,\n-    -648,\n-    -645,\n-    -642,\n-    -638,\n-    -635,\n-    -632,\n-    -628,\n-    -625,\n-    -622,\n-    -618,\n-    -615,\n-    -612,\n-    -608,\n-    -605,\n-    -602,\n-    -598,\n-    -595,\n-    -592,\n-    -588,\n-    -585,\n-    -582,\n-    -578,\n-    -575,\n-    -572,\n-    -568,\n-    -565,\n-    -562,\n-    -558,\n-    -555,\n-    -552,\n-    -549,\n-    -545,\n-    -542,\n-    -539,\n-    -535,\n-    -532,\n-    -529,\n-    -525,\n-    -522,\n-    -519,\n-    -515,\n-    -512,\n-    -509,\n-    -505,\n-    -502,\n-    -499,\n-    -495,\n-    -492,\n-    -489,\n-    -485,\n-    -482,\n-    -479,\n-    -475,\n-    -472,\n-    -469,\n-    -465,\n-    -462,\n-    -459,\n-    -455,\n-    -452,\n-    -449,\n-    -446,\n-    -442,\n-    -439,\n-    -436,\n-    -432,\n-    -429,\n-    -426,\n-    -422,\n-    -419,\n-    -416,\n-    -412,\n-    -409,\n-    -406,\n-    -402,\n-    -399,\n-    -396,\n-    -392,\n-    -389,\n-    -386,\n-    -382,\n-    -379,\n-    -376,\n-    -372,\n-    -369,\n-    -366,\n-    -362,\n-    -359,\n-    -356,\n-    -353,\n-    -349,\n-    -346,\n-    -343,\n-    -339,\n-    -336,\n-    -333,\n-    -329,\n-    -326,\n-    -323,\n-    -319,\n-    -316,\n-    -313,\n-    -309,\n-    -306,\n-    -303,\n-    -299,\n-    -296,\n-    -293,\n-    -289,\n-    -286,\n-    -283,\n-    -279,\n-    -276,\n-    -273,\n-    -269,\n-    -266,\n-    -263,\n-    -259,\n-    -256,\n-    -253,\n-    -250,\n-    -246,\n-    -243,\n-    -240,\n-    -236,\n-    -233,\n-    -230,\n-    -226,\n-    -223,\n-    -220,\n-    -216,\n-    -213,\n-    -210,\n-    -206,\n-    -203,\n-    -200,\n-    -196,\n-    -193,\n-    -190,\n-    -186,\n-    -183,\n-    -180,\n-    -176,\n-    -173,\n-    -170,\n-    -166,\n-    -163,\n-    -160,\n-    -157,\n-    -153,\n-    -150,\n-    -147,\n-    -143,\n-    -140,\n-    -137,\n-    -133,\n-    -130,\n-    -127,\n-    -123,\n-    -120,\n-    -117,\n-    -113,\n-    -110,\n-    -107,\n-    -103,\n-    -100,\n-    -97,\n-    -93,\n-    -90,\n-    -87,\n-    -83,\n-    -80,\n-    -77,\n-    -73,\n-    -70,\n-    -67,\n-    -63,\n-    -60,\n-    -57,\n-    -54,\n-    -50,\n-    -47,\n-    -44,\n-    -40,\n-    -37,\n-    -34,\n-    -30,\n-    -27,\n-    -24,\n-    -20,\n-    -17,\n-    -14,\n-    -10,\n-    -7,\n-    -4,\n-    0,\n-    3,\n-    6,\n-    10,\n-    13,\n-    16,\n-    20,\n-    23,\n-    26,\n-    30,\n-    33,\n-    36,\n-    39,\n-    43,\n-    46,\n-    49,\n-    53,\n-    56,\n-    59,\n-    63,\n-    66,\n-    69,\n-    73,\n-    76,\n-    79,\n-    83,\n-    86,\n-    89,\n-    93,\n-    96,\n-    99,\n-    103,\n-    106,\n-    109,\n-    113,\n-    116,\n-    119,\n-    123,\n-    126,\n-    129,\n-    132,\n-    136,\n-    139,\n-    142,\n-    146,\n-    149,\n-    152,\n-    156,\n-    159,\n-    162,\n-    166,\n-    169,\n-    172,\n-    176,\n-    179,\n-    182,\n-    186,\n-    189,\n-    192,\n-    196,\n-    199,\n-    202,\n-    206,\n-    209,\n-    212,\n-    216,\n-    219,\n-    222,\n-    226,\n-    229,\n-    232,\n-    235,\n-    239,\n-    242,\n-    245,\n-    249,\n-    252,\n-    255,\n-    259,\n-    262,\n-    265,\n-    269,\n-    272,\n-    275,\n-    279,\n-    282,\n-    285,\n-    289,\n-    292,\n-    295,\n-    299,\n-    302,\n-    305,\n-    309,\n-    312,\n-    315,\n-    319,\n-    322,\n-    325,\n-    328,\n-    332,\n-    335,\n-    338,\n-    342,\n-    345,\n-    348,\n-    352,\n-    355,\n-    358,\n-    362,\n-    365,\n-    368,\n-    372,\n-    375,\n-    378,\n-    382,\n-    385,\n-    388,\n-    392,\n-    395,\n-    398,\n-    402,\n-    405,\n-    408,\n-    412,\n-    415,\n-    418,\n-    422,\n-    425,\n-    428,\n-    431,\n-    435,\n-    438,\n-    441,\n-    445,\n-    448,\n-    451,\n-    455,\n-    458,\n-    461,\n-    465,\n-    468,\n-    471,\n-    475,\n-    478,\n-    481,\n-    485,\n-    488,\n-    491,\n-    495,\n-    498,\n-    501,\n-    505,\n-    508,\n-    511,\n-    515,\n-    518,\n-    521,\n-    524,\n-    528,\n-    531,\n-    534,\n-    538,\n-    541,\n-    544,\n-    548,\n-    551,\n-    554,\n-    558,\n-    561,\n-    564,\n-    568,\n-    571,\n-    574,\n-    578,\n-    581,\n-    584,\n-    588,\n-    591,\n-    594,\n-    598,\n-    601,\n-    604,\n-    608,\n-    611,\n-    614,\n-    617,\n-    621,\n-    624,\n-    627,\n-    631,\n-    634,\n-    637,\n-    641,\n-    644,\n-    647,\n-    651,\n-    654,\n-    657,\n-    661,\n-    664,\n-    667,\n-    671,\n-    674,\n-    677,\n-    681,\n-    684,\n-    687,\n-    691,\n-    694,\n-    697,\n-    701,\n-    704,\n-    707,\n-    711,\n-    714,\n-    717,\n-    720,\n-    724,\n-    727,\n-    730,\n-    734,\n-    737,\n-    740,\n-    744,\n-    747,\n-    750,\n-    754,\n-    757,\n-    760,\n-    764,\n-    767,\n-    770,\n-    774,\n-    777,\n-    780,\n-    784,\n-    787,\n-    790,\n-    794,\n-    797,\n-    800,\n-    804,\n-    807,\n-    810,\n-    813,\n-    817,\n-    820,\n-    823,\n-    827,\n-    830,\n-    833,\n-    837,\n-    840,\n-    843,\n-    847,\n-    850,\n-    853,\n-    857,\n-    860,\n-    863,\n-    867,\n-    870,\n-    873,\n-    877,\n-    880,\n-    883,\n-    887,\n-    890,\n-    893,\n-    897,\n-    900,\n-    903,\n-    907,\n-    910,\n-    913,\n-    916,\n-    920,\n-    923,\n-    926,\n-    930,\n-    933,\n-    936,\n-    940,\n-    943,\n-    946,\n-    950,\n-]);\n+#[rustfmt::skip]\n+pub const POWERS: ([u64; 611], [i16; 611]) = (\n+    [\n+        0xe0b62e2929aba83c,\n+        0x8c71dcd9ba0b4926,\n+        0xaf8e5410288e1b6f,\n+        0xdb71e91432b1a24b,\n+        0x892731ac9faf056f,\n+        0xab70fe17c79ac6ca,\n+        0xd64d3d9db981787d,\n+        0x85f0468293f0eb4e,\n+        0xa76c582338ed2622,\n+        0xd1476e2c07286faa,\n+        0x82cca4db847945ca,\n+        0xa37fce126597973d,\n+        0xcc5fc196fefd7d0c,\n+        0xff77b1fcbebcdc4f,\n+        0x9faacf3df73609b1,\n+        0xc795830d75038c1e,\n+        0xf97ae3d0d2446f25,\n+        0x9becce62836ac577,\n+        0xc2e801fb244576d5,\n+        0xf3a20279ed56d48a,\n+        0x9845418c345644d7,\n+        0xbe5691ef416bd60c,\n+        0xedec366b11c6cb8f,\n+        0x94b3a202eb1c3f39,\n+        0xb9e08a83a5e34f08,\n+        0xe858ad248f5c22ca,\n+        0x91376c36d99995be,\n+        0xb58547448ffffb2e,\n+        0xe2e69915b3fff9f9,\n+        0x8dd01fad907ffc3c,\n+        0xb1442798f49ffb4b,\n+        0xdd95317f31c7fa1d,\n+        0x8a7d3eef7f1cfc52,\n+        0xad1c8eab5ee43b67,\n+        0xd863b256369d4a41,\n+        0x873e4f75e2224e68,\n+        0xa90de3535aaae202,\n+        0xd3515c2831559a83,\n+        0x8412d9991ed58092,\n+        0xa5178fff668ae0b6,\n+        0xce5d73ff402d98e4,\n+        0x80fa687f881c7f8e,\n+        0xa139029f6a239f72,\n+        0xc987434744ac874f,\n+        0xfbe9141915d7a922,\n+        0x9d71ac8fada6c9b5,\n+        0xc4ce17b399107c23,\n+        0xf6019da07f549b2b,\n+        0x99c102844f94e0fb,\n+        0xc0314325637a193a,\n+        0xf03d93eebc589f88,\n+        0x96267c7535b763b5,\n+        0xbbb01b9283253ca3,\n+        0xea9c227723ee8bcb,\n+        0x92a1958a7675175f,\n+        0xb749faed14125d37,\n+        0xe51c79a85916f485,\n+        0x8f31cc0937ae58d3,\n+        0xb2fe3f0b8599ef08,\n+        0xdfbdcece67006ac9,\n+        0x8bd6a141006042be,\n+        0xaecc49914078536d,\n+        0xda7f5bf590966849,\n+        0x888f99797a5e012d,\n+        0xaab37fd7d8f58179,\n+        0xd5605fcdcf32e1d7,\n+        0x855c3be0a17fcd26,\n+        0xa6b34ad8c9dfc070,\n+        0xd0601d8efc57b08c,\n+        0x823c12795db6ce57,\n+        0xa2cb1717b52481ed,\n+        0xcb7ddcdda26da269,\n+        0xfe5d54150b090b03,\n+        0x9efa548d26e5a6e2,\n+        0xc6b8e9b0709f109a,\n+        0xf867241c8cc6d4c1,\n+        0x9b407691d7fc44f8,\n+        0xc21094364dfb5637,\n+        0xf294b943e17a2bc4,\n+        0x979cf3ca6cec5b5b,\n+        0xbd8430bd08277231,\n+        0xece53cec4a314ebe,\n+        0x940f4613ae5ed137,\n+        0xb913179899f68584,\n+        0xe757dd7ec07426e5,\n+        0x9096ea6f3848984f,\n+        0xb4bca50b065abe63,\n+        0xe1ebce4dc7f16dfc,\n+        0x8d3360f09cf6e4bd,\n+        0xb080392cc4349ded,\n+        0xdca04777f541c568,\n+        0x89e42caaf9491b61,\n+        0xac5d37d5b79b6239,\n+        0xd77485cb25823ac7,\n+        0x86a8d39ef77164bd,\n+        0xa8530886b54dbdec,\n+        0xd267caa862a12d67,\n+        0x8380dea93da4bc60,\n+        0xa46116538d0deb78,\n+        0xcd795be870516656,\n+        0x806bd9714632dff6,\n+        0xa086cfcd97bf97f4,\n+        0xc8a883c0fdaf7df0,\n+        0xfad2a4b13d1b5d6c,\n+        0x9cc3a6eec6311a64,\n+        0xc3f490aa77bd60fd,\n+        0xf4f1b4d515acb93c,\n+        0x991711052d8bf3c5,\n+        0xbf5cd54678eef0b7,\n+        0xef340a98172aace5,\n+        0x9580869f0e7aac0f,\n+        0xbae0a846d2195713,\n+        0xe998d258869facd7,\n+        0x91ff83775423cc06,\n+        0xb67f6455292cbf08,\n+        0xe41f3d6a7377eeca,\n+        0x8e938662882af53e,\n+        0xb23867fb2a35b28e,\n+        0xdec681f9f4c31f31,\n+        0x8b3c113c38f9f37f,\n+        0xae0b158b4738705f,\n+        0xd98ddaee19068c76,\n+        0x87f8a8d4cfa417ca,\n+        0xa9f6d30a038d1dbc,\n+        0xd47487cc8470652b,\n+        0x84c8d4dfd2c63f3b,\n+        0xa5fb0a17c777cf0a,\n+        0xcf79cc9db955c2cc,\n+        0x81ac1fe293d599c0,\n+        0xa21727db38cb0030,\n+        0xca9cf1d206fdc03c,\n+        0xfd442e4688bd304b,\n+        0x9e4a9cec15763e2f,\n+        0xc5dd44271ad3cdba,\n+        0xf7549530e188c129,\n+        0x9a94dd3e8cf578ba,\n+        0xc13a148e3032d6e8,\n+        0xf18899b1bc3f8ca2,\n+        0x96f5600f15a7b7e5,\n+        0xbcb2b812db11a5de,\n+        0xebdf661791d60f56,\n+        0x936b9fcebb25c996,\n+        0xb84687c269ef3bfb,\n+        0xe65829b3046b0afa,\n+        0x8ff71a0fe2c2e6dc,\n+        0xb3f4e093db73a093,\n+        0xe0f218b8d25088b8,\n+        0x8c974f7383725573,\n+        0xafbd2350644eead0,\n+        0xdbac6c247d62a584,\n+        0x894bc396ce5da772,\n+        0xab9eb47c81f5114f,\n+        0xd686619ba27255a3,\n+        0x8613fd0145877586,\n+        0xa798fc4196e952e7,\n+        0xd17f3b51fca3a7a1,\n+        0x82ef85133de648c5,\n+        0xa3ab66580d5fdaf6,\n+        0xcc963fee10b7d1b3,\n+        0xffbbcfe994e5c620,\n+        0x9fd561f1fd0f9bd4,\n+        0xc7caba6e7c5382c9,\n+        0xf9bd690a1b68637b,\n+        0x9c1661a651213e2d,\n+        0xc31bfa0fe5698db8,\n+        0xf3e2f893dec3f126,\n+        0x986ddb5c6b3a76b8,\n+        0xbe89523386091466,\n+        0xee2ba6c0678b597f,\n+        0x94db483840b717f0,\n+        0xba121a4650e4ddec,\n+        0xe896a0d7e51e1566,\n+        0x915e2486ef32cd60,\n+        0xb5b5ada8aaff80b8,\n+        0xe3231912d5bf60e6,\n+        0x8df5efabc5979c90,\n+        0xb1736b96b6fd83b4,\n+        0xddd0467c64bce4a1,\n+        0x8aa22c0dbef60ee4,\n+        0xad4ab7112eb3929e,\n+        0xd89d64d57a607745,\n+        0x87625f056c7c4a8b,\n+        0xa93af6c6c79b5d2e,\n+        0xd389b47879823479,\n+        0x843610cb4bf160cc,\n+        0xa54394fe1eedb8ff,\n+        0xce947a3da6a9273e,\n+        0x811ccc668829b887,\n+        0xa163ff802a3426a9,\n+        0xc9bcff6034c13053,\n+        0xfc2c3f3841f17c68,\n+        0x9d9ba7832936edc1,\n+        0xc5029163f384a931,\n+        0xf64335bcf065d37d,\n+        0x99ea0196163fa42e,\n+        0xc06481fb9bcf8d3a,\n+        0xf07da27a82c37088,\n+        0x964e858c91ba2655,\n+        0xbbe226efb628afeb,\n+        0xeadab0aba3b2dbe5,\n+        0x92c8ae6b464fc96f,\n+        0xb77ada0617e3bbcb,\n+        0xe55990879ddcaabe,\n+        0x8f57fa54c2a9eab7,\n+        0xb32df8e9f3546564,\n+        0xdff9772470297ebd,\n+        0x8bfbea76c619ef36,\n+        0xaefae51477a06b04,\n+        0xdab99e59958885c5,\n+        0x88b402f7fd75539b,\n+        0xaae103b5fcd2a882,\n+        0xd59944a37c0752a2,\n+        0x857fcae62d8493a5,\n+        0xa6dfbd9fb8e5b88f,\n+        0xd097ad07a71f26b2,\n+        0x825ecc24c8737830,\n+        0xa2f67f2dfa90563b,\n+        0xcbb41ef979346bca,\n+        0xfea126b7d78186bd,\n+        0x9f24b832e6b0f436,\n+        0xc6ede63fa05d3144,\n+        0xf8a95fcf88747d94,\n+        0x9b69dbe1b548ce7d,\n+        0xc24452da229b021c,\n+        0xf2d56790ab41c2a3,\n+        0x97c560ba6b0919a6,\n+        0xbdb6b8e905cb600f,\n+        0xed246723473e3813,\n+        0x9436c0760c86e30c,\n+        0xb94470938fa89bcf,\n+        0xe7958cb87392c2c3,\n+        0x90bd77f3483bb9ba,\n+        0xb4ecd5f01a4aa828,\n+        0xe2280b6c20dd5232,\n+        0x8d590723948a535f,\n+        0xb0af48ec79ace837,\n+        0xdcdb1b2798182245,\n+        0x8a08f0f8bf0f156b,\n+        0xac8b2d36eed2dac6,\n+        0xd7adf884aa879177,\n+        0x86ccbb52ea94baeb,\n+        0xa87fea27a539e9a5,\n+        0xd29fe4b18e88640f,\n+        0x83a3eeeef9153e89,\n+        0xa48ceaaab75a8e2b,\n+        0xcdb02555653131b6,\n+        0x808e17555f3ebf12,\n+        0xa0b19d2ab70e6ed6,\n+        0xc8de047564d20a8c,\n+        0xfb158592be068d2f,\n+        0x9ced737bb6c4183d,\n+        0xc428d05aa4751e4d,\n+        0xf53304714d9265e0,\n+        0x993fe2c6d07b7fac,\n+        0xbf8fdb78849a5f97,\n+        0xef73d256a5c0f77d,\n+        0x95a8637627989aae,\n+        0xbb127c53b17ec159,\n+        0xe9d71b689dde71b0,\n+        0x9226712162ab070e,\n+        0xb6b00d69bb55c8d1,\n+        0xe45c10c42a2b3b06,\n+        0x8eb98a7a9a5b04e3,\n+        0xb267ed1940f1c61c,\n+        0xdf01e85f912e37a3,\n+        0x8b61313bbabce2c6,\n+        0xae397d8aa96c1b78,\n+        0xd9c7dced53c72256,\n+        0x881cea14545c7575,\n+        0xaa242499697392d3,\n+        0xd4ad2dbfc3d07788,\n+        0x84ec3c97da624ab5,\n+        0xa6274bbdd0fadd62,\n+        0xcfb11ead453994ba,\n+        0x81ceb32c4b43fcf5,\n+        0xa2425ff75e14fc32,\n+        0xcad2f7f5359a3b3e,\n+        0xfd87b5f28300ca0e,\n+        0x9e74d1b791e07e48,\n+        0xc612062576589ddb,\n+        0xf79687aed3eec551,\n+        0x9abe14cd44753b53,\n+        0xc16d9a0095928a27,\n+        0xf1c90080baf72cb1,\n+        0x971da05074da7bef,\n+        0xbce5086492111aeb,\n+        0xec1e4a7db69561a5,\n+        0x9392ee8e921d5d07,\n+        0xb877aa3236a4b449,\n+        0xe69594bec44de15b,\n+        0x901d7cf73ab0acd9,\n+        0xb424dc35095cd80f,\n+        0xe12e13424bb40e13,\n+        0x8cbccc096f5088cc,\n+        0xafebff0bcb24aaff,\n+        0xdbe6fecebdedd5bf,\n+        0x89705f4136b4a597,\n+        0xabcc77118461cefd,\n+        0xd6bf94d5e57a42bc,\n+        0x8637bd05af6c69b6,\n+        0xa7c5ac471b478423,\n+        0xd1b71758e219652c,\n+        0x83126e978d4fdf3b,\n+        0xa3d70a3d70a3d70a,\n+        0xcccccccccccccccd,\n+        0x8000000000000000,\n+        0xa000000000000000,\n+        0xc800000000000000,\n+        0xfa00000000000000,\n+        0x9c40000000000000,\n+        0xc350000000000000,\n+        0xf424000000000000,\n+        0x9896800000000000,\n+        0xbebc200000000000,\n+        0xee6b280000000000,\n+        0x9502f90000000000,\n+        0xba43b74000000000,\n+        0xe8d4a51000000000,\n+        0x9184e72a00000000,\n+        0xb5e620f480000000,\n+        0xe35fa931a0000000,\n+        0x8e1bc9bf04000000,\n+        0xb1a2bc2ec5000000,\n+        0xde0b6b3a76400000,\n+        0x8ac7230489e80000,\n+        0xad78ebc5ac620000,\n+        0xd8d726b7177a8000,\n+        0x878678326eac9000,\n+        0xa968163f0a57b400,\n+        0xd3c21bcecceda100,\n+        0x84595161401484a0,\n+        0xa56fa5b99019a5c8,\n+        0xcecb8f27f4200f3a,\n+        0x813f3978f8940984,\n+        0xa18f07d736b90be5,\n+        0xc9f2c9cd04674edf,\n+        0xfc6f7c4045812296,\n+        0x9dc5ada82b70b59e,\n+        0xc5371912364ce305,\n+        0xf684df56c3e01bc7,\n+        0x9a130b963a6c115c,\n+        0xc097ce7bc90715b3,\n+        0xf0bdc21abb48db20,\n+        0x96769950b50d88f4,\n+        0xbc143fa4e250eb31,\n+        0xeb194f8e1ae525fd,\n+        0x92efd1b8d0cf37be,\n+        0xb7abc627050305ae,\n+        0xe596b7b0c643c719,\n+        0x8f7e32ce7bea5c70,\n+        0xb35dbf821ae4f38c,\n+        0xe0352f62a19e306f,\n+        0x8c213d9da502de45,\n+        0xaf298d050e4395d7,\n+        0xdaf3f04651d47b4c,\n+        0x88d8762bf324cd10,\n+        0xab0e93b6efee0054,\n+        0xd5d238a4abe98068,\n+        0x85a36366eb71f041,\n+        0xa70c3c40a64e6c52,\n+        0xd0cf4b50cfe20766,\n+        0x82818f1281ed44a0,\n+        0xa321f2d7226895c8,\n+        0xcbea6f8ceb02bb3a,\n+        0xfee50b7025c36a08,\n+        0x9f4f2726179a2245,\n+        0xc722f0ef9d80aad6,\n+        0xf8ebad2b84e0d58c,\n+        0x9b934c3b330c8577,\n+        0xc2781f49ffcfa6d5,\n+        0xf316271c7fc3908b,\n+        0x97edd871cfda3a57,\n+        0xbde94e8e43d0c8ec,\n+        0xed63a231d4c4fb27,\n+        0x945e455f24fb1cf9,\n+        0xb975d6b6ee39e437,\n+        0xe7d34c64a9c85d44,\n+        0x90e40fbeea1d3a4b,\n+        0xb51d13aea4a488dd,\n+        0xe264589a4dcdab15,\n+        0x8d7eb76070a08aed,\n+        0xb0de65388cc8ada8,\n+        0xdd15fe86affad912,\n+        0x8a2dbf142dfcc7ab,\n+        0xacb92ed9397bf996,\n+        0xd7e77a8f87daf7fc,\n+        0x86f0ac99b4e8dafd,\n+        0xa8acd7c0222311bd,\n+        0xd2d80db02aabd62c,\n+        0x83c7088e1aab65db,\n+        0xa4b8cab1a1563f52,\n+        0xcde6fd5e09abcf27,\n+        0x80b05e5ac60b6178,\n+        0xa0dc75f1778e39d6,\n+        0xc913936dd571c84c,\n+        0xfb5878494ace3a5f,\n+        0x9d174b2dcec0e47b,\n+        0xc45d1df942711d9a,\n+        0xf5746577930d6501,\n+        0x9968bf6abbe85f20,\n+        0xbfc2ef456ae276e9,\n+        0xefb3ab16c59b14a3,\n+        0x95d04aee3b80ece6,\n+        0xbb445da9ca61281f,\n+        0xea1575143cf97227,\n+        0x924d692ca61be758,\n+        0xb6e0c377cfa2e12e,\n+        0xe498f455c38b997a,\n+        0x8edf98b59a373fec,\n+        0xb2977ee300c50fe7,\n+        0xdf3d5e9bc0f653e1,\n+        0x8b865b215899f46d,\n+        0xae67f1e9aec07188,\n+        0xda01ee641a708dea,\n+        0x884134fe908658b2,\n+        0xaa51823e34a7eedf,\n+        0xd4e5e2cdc1d1ea96,\n+        0x850fadc09923329e,\n+        0xa6539930bf6bff46,\n+        0xcfe87f7cef46ff17,\n+        0x81f14fae158c5f6e,\n+        0xa26da3999aef774a,\n+        0xcb090c8001ab551c,\n+        0xfdcb4fa002162a63,\n+        0x9e9f11c4014dda7e,\n+        0xc646d63501a1511e,\n+        0xf7d88bc24209a565,\n+        0x9ae757596946075f,\n+        0xc1a12d2fc3978937,\n+        0xf209787bb47d6b85,\n+        0x9745eb4d50ce6333,\n+        0xbd176620a501fc00,\n+        0xec5d3fa8ce427b00,\n+        0x93ba47c980e98ce0,\n+        0xb8a8d9bbe123f018,\n+        0xe6d3102ad96cec1e,\n+        0x9043ea1ac7e41393,\n+        0xb454e4a179dd1877,\n+        0xe16a1dc9d8545e95,\n+        0x8ce2529e2734bb1d,\n+        0xb01ae745b101e9e4,\n+        0xdc21a1171d42645d,\n+        0x899504ae72497eba,\n+        0xabfa45da0edbde69,\n+        0xd6f8d7509292d603,\n+        0x865b86925b9bc5c2,\n+        0xa7f26836f282b733,\n+        0xd1ef0244af2364ff,\n+        0x8335616aed761f1f,\n+        0xa402b9c5a8d3a6e7,\n+        0xcd036837130890a1,\n+        0x802221226be55a65,\n+        0xa02aa96b06deb0fe,\n+        0xc83553c5c8965d3d,\n+        0xfa42a8b73abbf48d,\n+        0x9c69a97284b578d8,\n+        0xc38413cf25e2d70e,\n+        0xf46518c2ef5b8cd1,\n+        0x98bf2f79d5993803,\n+        0xbeeefb584aff8604,\n+        0xeeaaba2e5dbf6785,\n+        0x952ab45cfa97a0b3,\n+        0xba756174393d88e0,\n+        0xe912b9d1478ceb17,\n+        0x91abb422ccb812ef,\n+        0xb616a12b7fe617aa,\n+        0xe39c49765fdf9d95,\n+        0x8e41ade9fbebc27d,\n+        0xb1d219647ae6b31c,\n+        0xde469fbd99a05fe3,\n+        0x8aec23d680043bee,\n+        0xada72ccc20054aea,\n+        0xd910f7ff28069da4,\n+        0x87aa9aff79042287,\n+        0xa99541bf57452b28,\n+        0xd3fa922f2d1675f2,\n+        0x847c9b5d7c2e09b7,\n+        0xa59bc234db398c25,\n+        0xcf02b2c21207ef2f,\n+        0x8161afb94b44f57d,\n+        0xa1ba1ba79e1632dc,\n+        0xca28a291859bbf93,\n+        0xfcb2cb35e702af78,\n+        0x9defbf01b061adab,\n+        0xc56baec21c7a1916,\n+        0xf6c69a72a3989f5c,\n+        0x9a3c2087a63f6399,\n+        0xc0cb28a98fcf3c80,\n+        0xf0fdf2d3f3c30b9f,\n+        0x969eb7c47859e744,\n+        0xbc4665b596706115,\n+        0xeb57ff22fc0c795a,\n+        0x9316ff75dd87cbd8,\n+        0xb7dcbf5354e9bece,\n+        0xe5d3ef282a242e82,\n+        0x8fa475791a569d11,\n+        0xb38d92d760ec4455,\n+        0xe070f78d3927556b,\n+        0x8c469ab843b89563,\n+        0xaf58416654a6babb,\n+        0xdb2e51bfe9d0696a,\n+        0x88fcf317f22241e2,\n+        0xab3c2fddeeaad25b,\n+        0xd60b3bd56a5586f2,\n+        0x85c7056562757457,\n+        0xa738c6bebb12d16d,\n+        0xd106f86e69d785c8,\n+        0x82a45b450226b39d,\n+        0xa34d721642b06084,\n+        0xcc20ce9bd35c78a5,\n+        0xff290242c83396ce,\n+        0x9f79a169bd203e41,\n+        0xc75809c42c684dd1,\n+        0xf92e0c3537826146,\n+        0x9bbcc7a142b17ccc,\n+        0xc2abf989935ddbfe,\n+        0xf356f7ebf83552fe,\n+        0x98165af37b2153df,\n+        0xbe1bf1b059e9a8d6,\n+        0xeda2ee1c7064130c,\n+        0x9485d4d1c63e8be8,\n+        0xb9a74a0637ce2ee1,\n+        0xe8111c87c5c1ba9a,\n+        0x910ab1d4db9914a0,\n+        0xb54d5e4a127f59c8,\n+        0xe2a0b5dc971f303a,\n+        0x8da471a9de737e24,\n+        0xb10d8e1456105dad,\n+        0xdd50f1996b947519,\n+        0x8a5296ffe33cc930,\n+        0xace73cbfdc0bfb7b,\n+        0xd8210befd30efa5a,\n+        0x8714a775e3e95c78,\n+        0xa8d9d1535ce3b396,\n+        0xd31045a8341ca07c,\n+        0x83ea2b892091e44e,\n+        0xa4e4b66b68b65d61,\n+        0xce1de40642e3f4b9,\n+        0x80d2ae83e9ce78f4,\n+        0xa1075a24e4421731,\n+        0xc94930ae1d529cfd,\n+        0xfb9b7cd9a4a7443c,\n+        0x9d412e0806e88aa6,\n+        0xc491798a08a2ad4f,\n+        0xf5b5d7ec8acb58a3,\n+        0x9991a6f3d6bf1766,\n+        0xbff610b0cc6edd3f,\n+        0xeff394dcff8a948f,\n+        0x95f83d0a1fb69cd9,\n+        0xbb764c4ca7a44410,\n+        0xea53df5fd18d5514,\n+        0x92746b9be2f8552c,\n+        0xb7118682dbb66a77,\n+        0xe4d5e82392a40515,\n+        0x8f05b1163ba6832d,\n+        0xb2c71d5bca9023f8,\n+        0xdf78e4b2bd342cf7,\n+        0x8bab8eefb6409c1a,\n+        0xae9672aba3d0c321,\n+        0xda3c0f568cc4f3e9,\n+        0x8865899617fb1871,\n+        0xaa7eebfb9df9de8e,\n+        0xd51ea6fa85785631,\n+        0x8533285c936b35df,\n+        0xa67ff273b8460357,\n+        0xd01fef10a657842c,\n+        0x8213f56a67f6b29c,\n+        0xa298f2c501f45f43,\n+        0xcb3f2f7642717713,\n+        0xfe0efb53d30dd4d8,\n+        0x9ec95d1463e8a507,\n+        0xc67bb4597ce2ce49,\n+        0xf81aa16fdc1b81db,\n+        0x9b10a4e5e9913129,\n+        0xc1d4ce1f63f57d73,\n+        0xf24a01a73cf2dcd0,\n+        0x976e41088617ca02,\n+        0xbd49d14aa79dbc82,\n+        0xec9c459d51852ba3,\n+        0x93e1ab8252f33b46,\n+        0xb8da1662e7b00a17,\n+        0xe7109bfba19c0c9d,\n+        0x906a617d450187e2,\n+        0xb484f9dc9641e9db,\n+        0xe1a63853bbd26451,\n+        0x8d07e33455637eb3,\n+        0xb049dc016abc5e60,\n+        0xdc5c5301c56b75f7,\n+        0x89b9b3e11b6329bb,\n+        0xac2820d9623bf429,\n+        0xd732290fbacaf134,\n+        0x867f59a9d4bed6c0,\n+        0xa81f301449ee8c70,\n+        0xd226fc195c6a2f8c,\n+        0x83585d8fd9c25db8,\n+        0xa42e74f3d032f526,\n+        0xcd3a1230c43fb26f,\n+        0x80444b5e7aa7cf85,\n+        0xa0555e361951c367,\n+        0xc86ab5c39fa63441,\n+        0xfa856334878fc151,\n+        0x9c935e00d4b9d8d2,\n+        0xc3b8358109e84f07,\n+        0xf4a642e14c6262c9,\n+        0x98e7e9cccfbd7dbe,\n+        0xbf21e44003acdd2d,\n+        0xeeea5d5004981478,\n+        0x95527a5202df0ccb,\n+        0xbaa718e68396cffe,\n+        0xe950df20247c83fd,\n+        0x91d28b7416cdd27e,\n+    ],\n+    [\n+        -1077,\n+        -1073,\n+        -1070,\n+        -1067,\n+        -1063,\n+        -1060,\n+        -1057,\n+        -1053,\n+        -1050,\n+        -1047,\n+        -1043,\n+        -1040,\n+        -1037,\n+        -1034,\n+        -1030,\n+        -1027,\n+        -1024,\n+        -1020,\n+        -1017,\n+        -1014,\n+        -1010,\n+        -1007,\n+        -1004,\n+        -1000,\n+        -997,\n+        -994,\n+        -990,\n+        -987,\n+        -984,\n+        -980,\n+        -977,\n+        -974,\n+        -970,\n+        -967,\n+        -964,\n+        -960,\n+        -957,\n+        -954,\n+        -950,\n+        -947,\n+        -944,\n+        -940,\n+        -937,\n+        -934,\n+        -931,\n+        -927,\n+        -924,\n+        -921,\n+        -917,\n+        -914,\n+        -911,\n+        -907,\n+        -904,\n+        -901,\n+        -897,\n+        -894,\n+        -891,\n+        -887,\n+        -884,\n+        -881,\n+        -877,\n+        -874,\n+        -871,\n+        -867,\n+        -864,\n+        -861,\n+        -857,\n+        -854,\n+        -851,\n+        -847,\n+        -844,\n+        -841,\n+        -838,\n+        -834,\n+        -831,\n+        -828,\n+        -824,\n+        -821,\n+        -818,\n+        -814,\n+        -811,\n+        -808,\n+        -804,\n+        -801,\n+        -798,\n+        -794,\n+        -791,\n+        -788,\n+        -784,\n+        -781,\n+        -778,\n+        -774,\n+        -771,\n+        -768,\n+        -764,\n+        -761,\n+        -758,\n+        -754,\n+        -751,\n+        -748,\n+        -744,\n+        -741,\n+        -738,\n+        -735,\n+        -731,\n+        -728,\n+        -725,\n+        -721,\n+        -718,\n+        -715,\n+        -711,\n+        -708,\n+        -705,\n+        -701,\n+        -698,\n+        -695,\n+        -691,\n+        -688,\n+        -685,\n+        -681,\n+        -678,\n+        -675,\n+        -671,\n+        -668,\n+        -665,\n+        -661,\n+        -658,\n+        -655,\n+        -651,\n+        -648,\n+        -645,\n+        -642,\n+        -638,\n+        -635,\n+        -632,\n+        -628,\n+        -625,\n+        -622,\n+        -618,\n+        -615,\n+        -612,\n+        -608,\n+        -605,\n+        -602,\n+        -598,\n+        -595,\n+        -592,\n+        -588,\n+        -585,\n+        -582,\n+        -578,\n+        -575,\n+        -572,\n+        -568,\n+        -565,\n+        -562,\n+        -558,\n+        -555,\n+        -552,\n+        -549,\n+        -545,\n+        -542,\n+        -539,\n+        -535,\n+        -532,\n+        -529,\n+        -525,\n+        -522,\n+        -519,\n+        -515,\n+        -512,\n+        -509,\n+        -505,\n+        -502,\n+        -499,\n+        -495,\n+        -492,\n+        -489,\n+        -485,\n+        -482,\n+        -479,\n+        -475,\n+        -472,\n+        -469,\n+        -465,\n+        -462,\n+        -459,\n+        -455,\n+        -452,\n+        -449,\n+        -446,\n+        -442,\n+        -439,\n+        -436,\n+        -432,\n+        -429,\n+        -426,\n+        -422,\n+        -419,\n+        -416,\n+        -412,\n+        -409,\n+        -406,\n+        -402,\n+        -399,\n+        -396,\n+        -392,\n+        -389,\n+        -386,\n+        -382,\n+        -379,\n+        -376,\n+        -372,\n+        -369,\n+        -366,\n+        -362,\n+        -359,\n+        -356,\n+        -353,\n+        -349,\n+        -346,\n+        -343,\n+        -339,\n+        -336,\n+        -333,\n+        -329,\n+        -326,\n+        -323,\n+        -319,\n+        -316,\n+        -313,\n+        -309,\n+        -306,\n+        -303,\n+        -299,\n+        -296,\n+        -293,\n+        -289,\n+        -286,\n+        -283,\n+        -279,\n+        -276,\n+        -273,\n+        -269,\n+        -266,\n+        -263,\n+        -259,\n+        -256,\n+        -253,\n+        -250,\n+        -246,\n+        -243,\n+        -240,\n+        -236,\n+        -233,\n+        -230,\n+        -226,\n+        -223,\n+        -220,\n+        -216,\n+        -213,\n+        -210,\n+        -206,\n+        -203,\n+        -200,\n+        -196,\n+        -193,\n+        -190,\n+        -186,\n+        -183,\n+        -180,\n+        -176,\n+        -173,\n+        -170,\n+        -166,\n+        -163,\n+        -160,\n+        -157,\n+        -153,\n+        -150,\n+        -147,\n+        -143,\n+        -140,\n+        -137,\n+        -133,\n+        -130,\n+        -127,\n+        -123,\n+        -120,\n+        -117,\n+        -113,\n+        -110,\n+        -107,\n+        -103,\n+        -100,\n+        -97,\n+        -93,\n+        -90,\n+        -87,\n+        -83,\n+        -80,\n+        -77,\n+        -73,\n+        -70,\n+        -67,\n+        -63,\n+        -60,\n+        -57,\n+        -54,\n+        -50,\n+        -47,\n+        -44,\n+        -40,\n+        -37,\n+        -34,\n+        -30,\n+        -27,\n+        -24,\n+        -20,\n+        -17,\n+        -14,\n+        -10,\n+        -7,\n+        -4,\n+        0,\n+        3,\n+        6,\n+        10,\n+        13,\n+        16,\n+        20,\n+        23,\n+        26,\n+        30,\n+        33,\n+        36,\n+        39,\n+        43,\n+        46,\n+        49,\n+        53,\n+        56,\n+        59,\n+        63,\n+        66,\n+        69,\n+        73,\n+        76,\n+        79,\n+        83,\n+        86,\n+        89,\n+        93,\n+        96,\n+        99,\n+        103,\n+        106,\n+        109,\n+        113,\n+        116,\n+        119,\n+        123,\n+        126,\n+        129,\n+        132,\n+        136,\n+        139,\n+        142,\n+        146,\n+        149,\n+        152,\n+        156,\n+        159,\n+        162,\n+        166,\n+        169,\n+        172,\n+        176,\n+        179,\n+        182,\n+        186,\n+        189,\n+        192,\n+        196,\n+        199,\n+        202,\n+        206,\n+        209,\n+        212,\n+        216,\n+        219,\n+        222,\n+        226,\n+        229,\n+        232,\n+        235,\n+        239,\n+        242,\n+        245,\n+        249,\n+        252,\n+        255,\n+        259,\n+        262,\n+        265,\n+        269,\n+        272,\n+        275,\n+        279,\n+        282,\n+        285,\n+        289,\n+        292,\n+        295,\n+        299,\n+        302,\n+        305,\n+        309,\n+        312,\n+        315,\n+        319,\n+        322,\n+        325,\n+        328,\n+        332,\n+        335,\n+        338,\n+        342,\n+        345,\n+        348,\n+        352,\n+        355,\n+        358,\n+        362,\n+        365,\n+        368,\n+        372,\n+        375,\n+        378,\n+        382,\n+        385,\n+        388,\n+        392,\n+        395,\n+        398,\n+        402,\n+        405,\n+        408,\n+        412,\n+        415,\n+        418,\n+        422,\n+        425,\n+        428,\n+        431,\n+        435,\n+        438,\n+        441,\n+        445,\n+        448,\n+        451,\n+        455,\n+        458,\n+        461,\n+        465,\n+        468,\n+        471,\n+        475,\n+        478,\n+        481,\n+        485,\n+        488,\n+        491,\n+        495,\n+        498,\n+        501,\n+        505,\n+        508,\n+        511,\n+        515,\n+        518,\n+        521,\n+        524,\n+        528,\n+        531,\n+        534,\n+        538,\n+        541,\n+        544,\n+        548,\n+        551,\n+        554,\n+        558,\n+        561,\n+        564,\n+        568,\n+        571,\n+        574,\n+        578,\n+        581,\n+        584,\n+        588,\n+        591,\n+        594,\n+        598,\n+        601,\n+        604,\n+        608,\n+        611,\n+        614,\n+        617,\n+        621,\n+        624,\n+        627,\n+        631,\n+        634,\n+        637,\n+        641,\n+        644,\n+        647,\n+        651,\n+        654,\n+        657,\n+        661,\n+        664,\n+        667,\n+        671,\n+        674,\n+        677,\n+        681,\n+        684,\n+        687,\n+        691,\n+        694,\n+        697,\n+        701,\n+        704,\n+        707,\n+        711,\n+        714,\n+        717,\n+        720,\n+        724,\n+        727,\n+        730,\n+        734,\n+        737,\n+        740,\n+        744,\n+        747,\n+        750,\n+        754,\n+        757,\n+        760,\n+        764,\n+        767,\n+        770,\n+        774,\n+        777,\n+        780,\n+        784,\n+        787,\n+        790,\n+        794,\n+        797,\n+        800,\n+        804,\n+        807,\n+        810,\n+        813,\n+        817,\n+        820,\n+        823,\n+        827,\n+        830,\n+        833,\n+        837,\n+        840,\n+        843,\n+        847,\n+        850,\n+        853,\n+        857,\n+        860,\n+        863,\n+        867,\n+        870,\n+        873,\n+        877,\n+        880,\n+        883,\n+        887,\n+        890,\n+        893,\n+        897,\n+        900,\n+        903,\n+        907,\n+        910,\n+        913,\n+        916,\n+        920,\n+        923,\n+        926,\n+        930,\n+        933,\n+        936,\n+        940,\n+        943,\n+        946,\n+        950,\n+    ],\n+);\n \n+#[rustfmt::skip]\n pub const F32_SHORT_POWERS: [f32; 11] = [\n     1e0,\n     1e1,\n@@ -1244,6 +1249,7 @@ pub const F32_SHORT_POWERS: [f32; 11] = [\n     1e10,\n ];\n \n+#[rustfmt::skip]\n pub const F64_SHORT_POWERS: [f64; 23] = [\n     1e0,\n     1e1,"}, {"sha": "91db6381c9b6670ccc5a69e29feeac257cb017c5", "filename": "src/libcore/unicode/printable.py", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Flibcore%2Funicode%2Fprintable.py", "raw_url": "https://github.com/rust-lang/rust/raw/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Flibcore%2Funicode%2Fprintable.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Fprintable.py?ref=2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8", "patch": "@@ -111,16 +111,19 @@ def compress_normal(normal):\n     return compressed\n \n def print_singletons(uppers, lowers, uppersname, lowersname):\n+    print(\"#[rustfmt::skip]\")\n     print(\"const {}: &[(u8, u8)] = &[\".format(uppersname))\n     for u, c in uppers:\n         print(\"    ({:#04x}, {}),\".format(u, c))\n     print(\"];\")\n+    print(\"#[rustfmt::skip]\")\n     print(\"const {}: &[u8] = &[\".format(lowersname))\n     for i in range(0, len(lowers), 8):\n         print(\"    {}\".format(\" \".join(\"{:#04x},\".format(l) for l in lowers[i:i+8])))\n     print(\"];\")\n \n def print_normal(normal, normalname):\n+    print(\"#[rustfmt::skip]\")\n     print(\"const {}: &[u8] = &[\".format(normalname))\n     for v in normal:\n         print(\"    {}\".format(\" \".join(\"{:#04x},\".format(i) for i in v)))\n@@ -170,8 +173,7 @@ def main():\n // NOTE: The following code was generated by \"src/libcore/unicode/printable.py\",\n //       do not edit directly!\n \n-fn check(x: u16, singletonuppers: &[(u8, u8)], singletonlowers: &[u8],\n-         normal: &[u8]) -> bool {\n+fn check(x: u16, singletonuppers: &[(u8, u8)], singletonlowers: &[u8], normal: &[u8]) -> bool {\n     let xupper = (x >> 8) as u8;\n     let mut lowerstart = 0;\n     for &(upper, lowercount) in singletonuppers {"}, {"sha": "eee9ea52ef0d2e2387c8d6ef43c0682e6f2b8454", "filename": "src/libcore/unicode/printable.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Flibcore%2Funicode%2Fprintable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Flibcore%2Funicode%2Fprintable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Fprintable.rs?ref=2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8", "patch": "@@ -1,8 +1,7 @@\n // NOTE: The following code was generated by \"src/libcore/unicode/printable.py\",\n //       do not edit directly!\n \n-fn check(x: u16, singletonuppers: &[(u8, u8)], singletonlowers: &[u8],\n-         normal: &[u8]) -> bool {\n+fn check(x: u16, singletonuppers: &[(u8, u8)], singletonlowers: &[u8], normal: &[u8]) -> bool {\n     let xupper = (x >> 8) as u8;\n     let mut lowerstart = 0;\n     for &(upper, lowercount) in singletonuppers {\n@@ -70,6 +69,7 @@ pub(crate) fn is_printable(x: char) -> bool {\n     }\n }\n \n+#[rustfmt::skip]\n const SINGLETONS0U: &[(u8, u8)] = &[\n     (0x00, 1),\n     (0x03, 5),\n@@ -113,6 +113,7 @@ const SINGLETONS0U: &[(u8, u8)] = &[\n     (0xfe, 3),\n     (0xff, 9),\n ];\n+#[rustfmt::skip]\n const SINGLETONS0L: &[u8] = &[\n     0xad, 0x78, 0x79, 0x8b, 0x8d, 0xa2, 0x30, 0x57,\n     0x58, 0x8b, 0x8c, 0x90, 0x1c, 0x1d, 0xdd, 0x0e,\n@@ -152,6 +153,7 @@ const SINGLETONS0L: &[u8] = &[\n     0xff, 0x53, 0x67, 0x75, 0xc8, 0xc9, 0xd0, 0xd1,\n     0xd8, 0xd9, 0xe7, 0xfe, 0xff,\n ];\n+#[rustfmt::skip]\n const SINGLETONS1U: &[(u8, u8)] = &[\n     (0x00, 6),\n     (0x01, 1),\n@@ -189,6 +191,7 @@ const SINGLETONS1U: &[(u8, u8)] = &[\n     (0xf9, 6),\n     (0xfa, 2),\n ];\n+#[rustfmt::skip]\n const SINGLETONS1L: &[u8] = &[\n     0x0c, 0x27, 0x3b, 0x3e, 0x4e, 0x4f, 0x8f, 0x9e,\n     0x9e, 0x9f, 0x06, 0x07, 0x09, 0x36, 0x3d, 0x3e,\n@@ -212,6 +215,7 @@ const SINGLETONS1L: &[u8] = &[\n     0xa4, 0xaa, 0xaf, 0xb0, 0xc0, 0xd0, 0x0c, 0x72,\n     0xa3, 0xa4, 0xcb, 0xcc, 0x6e, 0x6f,\n ];\n+#[rustfmt::skip]\n const NORMAL0: &[u8] = &[\n     0x00, 0x20,\n     0x5f, 0x22,\n@@ -355,6 +359,7 @@ const NORMAL0: &[u8] = &[\n     0x1b, 0x03,\n     0x0f, 0x0d,\n ];\n+#[rustfmt::skip]\n const NORMAL1: &[u8] = &[\n     0x5e, 0x22,\n     0x7b, 0x05,"}, {"sha": "3fa125e8fea15fc9921ce35af4660c76554f619c", "filename": "src/libcore/unicode/tables.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Flibcore%2Funicode%2Ftables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Flibcore%2Funicode%2Ftables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Ftables.rs?ref=2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8", "patch": "@@ -2,19 +2,16 @@\n \n #![allow(missing_docs, non_upper_case_globals, non_snake_case, clippy::unreadable_literal)]\n \n-use crate::unicode::version::UnicodeVersion;\n use crate::unicode::bool_trie::{BoolTrie, SmallBoolTrie};\n+use crate::unicode::version::UnicodeVersion;\n \n /// The version of [Unicode](http://www.unicode.org/) that the Unicode parts of\n /// `char` and `str` methods are based on.\n #[unstable(feature = \"unicode_version\", issue = \"49726\")]\n-pub const UNICODE_VERSION: UnicodeVersion = UnicodeVersion {\n-    major: 12,\n-    minor: 1,\n-    micro: 0,\n-    _priv: (),\n-};\n+pub const UNICODE_VERSION: UnicodeVersion =\n+    UnicodeVersion { major: 12, minor: 1, micro: 0, _priv: () };\n pub(crate) mod general_category {\n+    #[rustfmt::skip]\n     const Cc_table: &super::SmallBoolTrie = &super::SmallBoolTrie {\n         r1: &[\n             0, 1, 0\n@@ -28,6 +25,7 @@ pub(crate) mod general_category {\n         Cc_table.lookup(c)\n     }\n \n+    #[rustfmt::skip]\n     const N_table: &super::BoolTrie = &super::BoolTrie {\n         r1: [\n             0x03ff000000000000, 0x0000000000000000, 0x720c000000000000, 0x0000000000000000,\n@@ -138,10 +136,10 @@ pub(crate) mod general_category {\n     pub fn N(c: char) -> bool {\n         N_table.lookup(c)\n     }\n-\n }\n \n pub(crate) mod derived_property {\n+    #[rustfmt::skip]\n     const Alphabetic_table: &super::BoolTrie = &super::BoolTrie {\n         r1: [\n             0x0000000000000000, 0x07fffffe07fffffe, 0x0420040000000000, 0xff7fffffff7fffff,\n@@ -327,6 +325,7 @@ pub(crate) mod derived_property {\n         Alphabetic_table.lookup(c)\n     }\n \n+    #[rustfmt::skip]\n     const Case_Ignorable_table: &super::BoolTrie = &super::BoolTrie {\n         r1: [\n             0x0400408000000000, 0x0000000140000000, 0x0190a10000000000, 0x0000000000000000,\n@@ -464,6 +463,7 @@ pub(crate) mod derived_property {\n         Case_Ignorable_table.lookup(c)\n     }\n \n+    #[rustfmt::skip]\n     const Cased_table: &super::BoolTrie = &super::BoolTrie {\n         r1: [\n             0x0000000000000000, 0x07fffffe07fffffe, 0x0420040000000000, 0xff7fffffff7fffff,\n@@ -565,6 +565,7 @@ pub(crate) mod derived_property {\n         Cased_table.lookup(c)\n     }\n \n+    #[rustfmt::skip]\n     const Grapheme_Extend_table: &super::BoolTrie = &super::BoolTrie {\n         r1: [\n             0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000,\n@@ -689,6 +690,7 @@ pub(crate) mod derived_property {\n         Grapheme_Extend_table.lookup(c)\n     }\n \n+    #[rustfmt::skip]\n     const Lowercase_table: &super::BoolTrie = &super::BoolTrie {\n         r1: [\n             0x0000000000000000, 0x07fffffe00000000, 0x0420040000000000, 0xff7fffff80000000,\n@@ -789,6 +791,7 @@ pub(crate) mod derived_property {\n         Lowercase_table.lookup(c)\n     }\n \n+    #[rustfmt::skip]\n     const Uppercase_table: &super::BoolTrie = &super::BoolTrie {\n         r1: [\n             0x0000000000000000, 0x0000000007fffffe, 0x0000000000000000, 0x000000007f7fffff,\n@@ -889,10 +892,10 @@ pub(crate) mod derived_property {\n     pub fn Uppercase(c: char) -> bool {\n         Uppercase_table.lookup(c)\n     }\n-\n }\n \n pub(crate) mod property {\n+    #[rustfmt::skip]\n     const White_Space_table: &super::SmallBoolTrie = &super::SmallBoolTrie {\n         r1: &[\n             0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n@@ -912,20 +915,19 @@ pub(crate) mod property {\n     pub fn White_Space(c: char) -> bool {\n         White_Space_table.lookup(c)\n     }\n-\n }\n \n pub(crate) mod conversions {\n     pub fn to_lower(c: char) -> [char; 3] {\n         match bsearch_case_table(c, to_lowercase_table) {\n-            None        => [c, '\\0', '\\0'],\n+            None => [c, '\\0', '\\0'],\n             Some(index) => to_lowercase_table[index].1,\n         }\n     }\n \n     pub fn to_upper(c: char) -> [char; 3] {\n         match bsearch_case_table(c, to_uppercase_table) {\n-            None        => [c, '\\0', '\\0'],\n+            None => [c, '\\0', '\\0'],\n             Some(index) => to_uppercase_table[index].1,\n         }\n     }\n@@ -934,6 +936,7 @@ pub(crate) mod conversions {\n         table.binary_search_by(|&(key, _)| key.cmp(&c)).ok()\n     }\n \n+    #[rustfmt::skip]\n     const to_lowercase_table: &[(char, [char; 3])] = &[\n         ('\\u{41}', ['\\u{61}', '\\0', '\\0']), ('\\u{42}', ['\\u{62}', '\\0', '\\0']), ('\\u{43}',\n         ['\\u{63}', '\\0', '\\0']), ('\\u{44}', ['\\u{64}', '\\0', '\\0']), ('\\u{45}', ['\\u{65}', '\\0',\n@@ -1558,6 +1561,7 @@ pub(crate) mod conversions {\n         ('\\u{1e920}', ['\\u{1e942}', '\\0', '\\0']), ('\\u{1e921}', ['\\u{1e943}', '\\0', '\\0'])\n     ];\n \n+    #[rustfmt::skip]\n     const to_uppercase_table: &[(char, [char; 3])] = &[\n         ('\\u{61}', ['\\u{41}', '\\0', '\\0']), ('\\u{62}', ['\\u{42}', '\\0', '\\0']), ('\\u{63}',\n         ['\\u{43}', '\\0', '\\0']), ('\\u{64}', ['\\u{44}', '\\0', '\\0']), ('\\u{65}', ['\\u{45}', '\\0',\n@@ -2228,5 +2232,4 @@ pub(crate) mod conversions {\n         ('\\u{1e940}', ['\\u{1e91e}', '\\0', '\\0']), ('\\u{1e941}', ['\\u{1e91f}', '\\0', '\\0']),\n         ('\\u{1e942}', ['\\u{1e920}', '\\0', '\\0']), ('\\u{1e943}', ['\\u{1e921}', '\\0', '\\0'])\n     ];\n-\n }"}, {"sha": "97df92a56da66ea2b0527a35d4a5eb28f6457390", "filename": "src/libcore/unicode/unicode.py", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Flibcore%2Funicode%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8/src%2Flibcore%2Funicode%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Funicode.py?ref=2e83c6d114dcf49c93dbd7fbaa9ca3d8b67c54e8", "patch": "@@ -81,8 +81,8 @@ class UnicodeFiles(object):\n \n #![allow(missing_docs, non_upper_case_globals, non_snake_case, clippy::unreadable_literal)]\n \n-use crate::unicode::version::UnicodeVersion;\n use crate::unicode::bool_trie::{{BoolTrie, SmallBoolTrie}};\n+use crate::unicode::version::UnicodeVersion;\n \"\"\".format(year=datetime.datetime.now().year)\n \n # Mapping taken from Table 12 from:\n@@ -555,6 +555,8 @@ def generate_table(\n     if is_pub:\n         pub_string = \"pub \"\n \n+    yield \"\\n\"\n+    yield \"    #[rustfmt::skip]\\n\"\n     yield \"    %sconst %s: %s = &[\\n\" % (pub_string, name, decl_type)\n \n     data = []\n@@ -568,7 +570,7 @@ def generate_table(\n     for table_line in generate_table_lines(\"\".join(data).split(\",\"), 8):\n         yield table_line\n \n-    yield \"\\n    ];\\n\\n\"\n+    yield \"\\n    ];\\n\"\n \n \n def compute_trie(raw_data, chunk_size):\n@@ -634,6 +636,9 @@ def generate_bool_trie(name, codepoint_ranges, is_pub=False):\n     pub_string = \"\"\n     if is_pub:\n         pub_string = \"pub \"\n+\n+    yield \"\\n\"\n+    yield \"    #[rustfmt::skip]\\n\"\n     yield \"    %sconst %s: &super::BoolTrie = &super::BoolTrie {\\n\" % (pub_string, name)\n     yield \"        r1: [\\n\"\n     data = (\"0x%016x\" % chunk for chunk in chunks[:0x800 // chunk_size])\n@@ -678,7 +683,7 @@ def generate_bool_trie(name, codepoint_ranges, is_pub=False):\n         yield fragment\n     yield \"\\n        ],\\n\"\n \n-    yield \"    };\\n\\n\"\n+    yield \"    };\\n\"\n \n \n def generate_small_bool_trie(name, codepoint_ranges, is_pub=False):\n@@ -700,6 +705,8 @@ def generate_small_bool_trie(name, codepoint_ranges, is_pub=False):\n     if is_pub:\n         pub_string = \"pub \"\n \n+    yield \"\\n\"\n+    yield \"    #[rustfmt::skip]\\n\"\n     yield (\"    %sconst %s: &super::SmallBoolTrie = &super::SmallBoolTrie {\\n\"\n            % (pub_string, name))\n \n@@ -717,7 +724,7 @@ def generate_small_bool_trie(name, codepoint_ranges, is_pub=False):\n         yield fragment\n     yield \"\\n        ],\\n\"\n \n-    yield \"    };\\n\\n\"\n+    yield \"    };\\n\"\n \n \n def generate_property_module(mod, grouped_categories, category_subset):\n@@ -726,7 +733,7 @@ def generate_property_module(mod, grouped_categories, category_subset):\n     Generate Rust code for module defining properties.\n     \"\"\"\n \n-    yield \"pub(crate) mod %s {\\n\" % mod\n+    yield \"pub(crate) mod %s {\" % mod\n     for cat in sorted(category_subset):\n         if cat in (\"Cc\", \"White_Space\"):\n             generator = generate_small_bool_trie(\"%s_table\" % cat, grouped_categories[cat])\n@@ -736,9 +743,10 @@ def generate_property_module(mod, grouped_categories, category_subset):\n         for fragment in generator:\n             yield fragment\n \n+        yield \"\\n\"\n         yield \"    pub fn %s(c: char) -> bool {\\n\" % cat\n         yield \"        %s_table.lookup(c)\\n\" % cat\n-        yield \"    }\\n\\n\"\n+        yield \"    }\\n\"\n \n     yield \"}\\n\\n\"\n \n@@ -753,21 +761,21 @@ def generate_conversions_module(unicode_data):\n     yield \"\"\"\n     pub fn to_lower(c: char) -> [char; 3] {\n         match bsearch_case_table(c, to_lowercase_table) {\n-            None        => [c, '\\\\0', '\\\\0'],\n+            None => [c, '\\\\0', '\\\\0'],\n             Some(index) => to_lowercase_table[index].1,\n         }\n     }\n \n     pub fn to_upper(c: char) -> [char; 3] {\n         match bsearch_case_table(c, to_uppercase_table) {\n-            None        => [c, '\\\\0', '\\\\0'],\n+            None => [c, '\\\\0', '\\\\0'],\n             Some(index) => to_uppercase_table[index].1,\n         }\n     }\n \n     fn bsearch_case_table(c: char, table: &[(char, [char; 3])]) -> Option<usize> {\n         table.binary_search_by(|&(key, _)| key.cmp(&c)).ok()\n-    }\\n\\n\"\"\"\n+    }\\n\"\"\"\n \n     decl_type = \"&[(char, [char; 3])]\"\n     format_conversion = lambda x: \"({},[{},{},{}])\".format(*(\n@@ -827,13 +835,9 @@ def main():\n     /// The version of [Unicode](http://www.unicode.org/) that the Unicode parts of\n     /// `char` and `str` methods are based on.\n     #[unstable(feature = \"unicode_version\", issue = \"49726\")]\n-    pub const UNICODE_VERSION: UnicodeVersion = UnicodeVersion {{\n-        major: {version.major},\n-        minor: {version.minor},\n-        micro: {version.micro},\n-        _priv: (),\n-    }};\n-    \"\"\").format(version=unicode_version)\n+    pub const UNICODE_VERSION: UnicodeVersion =\n+        UnicodeVersion {{ major: {v.major}, minor: {v.minor}, micro: {v.micro}, _priv: () }};\n+    \"\"\").format(v=unicode_version)\n     buf.write(unicode_version_notice)\n \n     get_path = lambda f: get_unicode_file_path(unicode_version, f)"}]}