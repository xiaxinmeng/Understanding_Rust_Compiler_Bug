{"sha": "e7420fbbae85a62a62163a2ac5c947b76a8eb62d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NDIwZmJiYWU4NWE2MmE2MjE2M2EyYWM1Yzk0N2I3NmE4ZWI2MmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-15T18:01:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-15T18:01:03Z"}, "message": "Auto merge of #33620 - eddyb:oops-static-is-not-fn, r=dotdash\n\nmir: always allow &mut [...] in static mut regardless of the array length.", "tree": {"sha": "3d7bda9d966eac91a44de8d7f1cfcf9c68b39047", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d7bda9d966eac91a44de8d7f1cfcf9c68b39047"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7420fbbae85a62a62163a2ac5c947b76a8eb62d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7420fbbae85a62a62163a2ac5c947b76a8eb62d", "html_url": "https://github.com/rust-lang/rust/commit/e7420fbbae85a62a62163a2ac5c947b76a8eb62d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7420fbbae85a62a62163a2ac5c947b76a8eb62d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f58fb776a74a44f4fcc2cb57084d33c55530aa4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f58fb776a74a44f4fcc2cb57084d33c55530aa4", "html_url": "https://github.com/rust-lang/rust/commit/9f58fb776a74a44f4fcc2cb57084d33c55530aa4"}, {"sha": "55aae6f48e8248342288ec3bfe2be0e0c370ee98", "url": "https://api.github.com/repos/rust-lang/rust/commits/55aae6f48e8248342288ec3bfe2be0e0c370ee98", "html_url": "https://github.com/rust-lang/rust/commit/55aae6f48e8248342288ec3bfe2be0e0c370ee98"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "2e4400c834f2325a1ce689eddc842a44af107efc", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7420fbbae85a62a62163a2ac5c947b76a8eb62d/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7420fbbae85a62a62163a2ac5c947b76a8eb62d/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=e7420fbbae85a62a62163a2ac5c947b76a8eb62d", "patch": "@@ -652,9 +652,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n                     // In theory, any zero-sized value could be borrowed\n                     // mutably without consequences. However, only &mut []\n                     // is allowed right now, and only in functions.\n-                    let allow = if let ty::TyArray(_, 0) = ty.sty {\n-                        self.mode == Mode::Fn\n-                    } else if self.mode == Mode::StaticMut {\n+                    let allow = if self.mode == Mode::StaticMut {\n                         // Inside a `static mut`, &mut [...] is also allowed.\n                         match ty.sty {\n                             ty::TyArray(..) | ty::TySlice(_) => {\n@@ -665,6 +663,8 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n                             }\n                             _ => false\n                         }\n+                    } else if let ty::TyArray(_, 0) = ty.sty {\n+                        self.mode == Mode::Fn\n                     } else {\n                         false\n                     };"}, {"sha": "1cfe5bdaebb7f338b293ed84e79131c7b5d89cbb", "filename": "src/test/run-pass/check-static-mut-slices.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e7420fbbae85a62a62163a2ac5c947b76a8eb62d/src%2Ftest%2Frun-pass%2Fcheck-static-mut-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7420fbbae85a62a62163a2ac5c947b76a8eb62d/src%2Ftest%2Frun-pass%2Fcheck-static-mut-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcheck-static-mut-slices.rs?ref=e7420fbbae85a62a62163a2ac5c947b76a8eb62d", "patch": "@@ -12,6 +12,7 @@\n \n \n static mut TEST: &'static mut [isize] = &mut [1];\n+static mut EMPTY: &'static mut [isize] = &mut [];\n \n pub fn main() {\n     unsafe {"}]}