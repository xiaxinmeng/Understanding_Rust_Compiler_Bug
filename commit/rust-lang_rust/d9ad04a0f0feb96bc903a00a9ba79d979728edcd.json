{"sha": "d9ad04a0f0feb96bc903a00a9ba79d979728edcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5YWQwNGEwZjBmZWI5NmJjOTAzYTAwYTliYTc5ZDk3OTcyOGVkY2Q=", "commit": {"author": {"name": "Denys Otrishko", "email": "shishugi@gmail.com", "date": "2019-07-17T06:55:15Z"}, "committer": {"name": "Denys Otrishko", "email": "shishugi@gmail.com", "date": "2019-07-17T13:59:07Z"}, "message": "rustc_typeck: extract common placeholder type diagnostic code", "tree": {"sha": "f08b8d5367c13ee079389cb624342d399efdb54e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f08b8d5367c13ee079389cb624342d399efdb54e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9ad04a0f0feb96bc903a00a9ba79d979728edcd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEPTkowzwjbi/kT/hRt45kt1W3k4MFAl0vKasACgkQt45kt1W3\nk4M4Mw/6A6CZZ7TX/gB7nmlKbX5xp+aVy1BH/sSd2Uszu3Br3teWzxHy3a7ND3bn\n+QZC+FQRU2cfHFbAfE6k8CZAazOkShdU9B6rr4NazZk2w5WWUchOhDADTdZ99KIj\nzW0ik1Dxt767Wkkex6QexNgNScjtRYuDUOtcd+6OHO9xkxevEcmdOLvU2tajTAyB\nNLMzOKHT0AP/Gq11oXon8FjRn1JfmU3Zca4zQIfNACwpsOj1oUmsxTjOJHrlcvqS\nHGffAZPMVar2VLpK1pXPEaEL5rVPlXlromSzM8R+OggeNwleCsRSk6K4TRc087L4\nzCqTew99QZaT9EsuNlC3MmViULWE0UI61TXDzZrTFKJIZlsw6eA/MRVXwtFBuUQ6\nYa+KyMJP4OxGqsIO9UdYx9LagPUbZX0SXdjP+b6VxjMGYiz9IelAjry6lN0r8euB\najnc9j45Tp7BCb94KFK8S3bFZ5oAiJ84EvJ4wiCP+Jp1TFwuHlaMWomYU9nOHwbg\nNqHzePuk2/Uu1y8wpmIvxy+kbBEoq3lt3Cwi7H/ETLz3fLLGcFeyIWsmzHqcRTjG\nYX6Lc38k0pvZ1QP8FTMeuxSen+yrKMc5eMUhD/4S4UOeMtp+l+EbWHBnPo8/h6rb\nE6JqxYv3RLd09O9vCMP/swNraaQ7M6xSLpZKFiiW+6ZLT0SPHuQ=\n=bwoG\n-----END PGP SIGNATURE-----", "payload": "tree f08b8d5367c13ee079389cb624342d399efdb54e\nparent d56128d2919132aceaf74cc3c68a4554f5445fce\nauthor Denys Otrishko <shishugi@gmail.com> 1563346515 +0300\ncommitter Denys Otrishko <shishugi@gmail.com> 1563371947 +0300\n\nrustc_typeck: extract common placeholder type diagnostic code\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9ad04a0f0feb96bc903a00a9ba79d979728edcd", "html_url": "https://github.com/rust-lang/rust/commit/d9ad04a0f0feb96bc903a00a9ba79d979728edcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9ad04a0f0feb96bc903a00a9ba79d979728edcd/comments", "author": {"login": "lundibundi", "id": 9109612, "node_id": "MDQ6VXNlcjkxMDk2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/9109612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lundibundi", "html_url": "https://github.com/lundibundi", "followers_url": "https://api.github.com/users/lundibundi/followers", "following_url": "https://api.github.com/users/lundibundi/following{/other_user}", "gists_url": "https://api.github.com/users/lundibundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/lundibundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lundibundi/subscriptions", "organizations_url": "https://api.github.com/users/lundibundi/orgs", "repos_url": "https://api.github.com/users/lundibundi/repos", "events_url": "https://api.github.com/users/lundibundi/events{/privacy}", "received_events_url": "https://api.github.com/users/lundibundi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lundibundi", "id": 9109612, "node_id": "MDQ6VXNlcjkxMDk2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/9109612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lundibundi", "html_url": "https://github.com/lundibundi", "followers_url": "https://api.github.com/users/lundibundi/followers", "following_url": "https://api.github.com/users/lundibundi/following{/other_user}", "gists_url": "https://api.github.com/users/lundibundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/lundibundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lundibundi/subscriptions", "organizations_url": "https://api.github.com/users/lundibundi/orgs", "repos_url": "https://api.github.com/users/lundibundi/repos", "events_url": "https://api.github.com/users/lundibundi/events{/privacy}", "received_events_url": "https://api.github.com/users/lundibundi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d56128d2919132aceaf74cc3c68a4554f5445fce", "url": "https://api.github.com/repos/rust-lang/rust/commits/d56128d2919132aceaf74cc3c68a4554f5445fce", "html_url": "https://github.com/rust-lang/rust/commit/d56128d2919132aceaf74cc3c68a4554f5445fce"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "7b24d5157373d1cb78a902d91c072ad775e873ed", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d9ad04a0f0feb96bc903a00a9ba79d979728edcd/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9ad04a0f0feb96bc903a00a9ba79d979728edcd/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=d9ad04a0f0feb96bc903a00a9ba79d979728edcd", "patch": "@@ -160,6 +160,16 @@ impl Visitor<'tcx> for CollectItemTypesVisitor<'tcx> {\n ///////////////////////////////////////////////////////////////////////////\n // Utility types and common code for the above passes.\n \n+fn bad_placeholder_type(tcx: TyCtxt<'tcx>, span: Span) -> errors::DiagnosticBuilder<'tcx> {\n+    let mut diag = tcx.sess.struct_span_err_with_code(\n+        span,\n+        \"the type placeholder `_` is not allowed within types on item signatures\",\n+        DiagnosticId::Error(\"E0121\".into()),\n+    );\n+    diag.span_label(span, \"not allowed in type signatures\");\n+    diag\n+}\n+\n impl ItemCtxt<'tcx> {\n     pub fn new(tcx: TyCtxt<'tcx>, item_def_id: DefId) -> ItemCtxt<'tcx> {\n         ItemCtxt { tcx, item_def_id }\n@@ -191,12 +201,7 @@ impl AstConv<'tcx> for ItemCtxt<'tcx> {\n     }\n \n     fn ty_infer(&self, _: Option<&ty::GenericParamDef>, span: Span) -> Ty<'tcx> {\n-        self.tcx().sess.struct_span_err_with_code(\n-            span,\n-            \"the type placeholder `_` is not allowed within types on item signatures\",\n-            DiagnosticId::Error(\"E0121\".into()),\n-        ).span_label(span, \"not allowed in type signatures\")\n-         .emit();\n+        bad_placeholder_type(self.tcx(), span).emit();\n \n         self.tcx().types.err\n     }\n@@ -207,12 +212,7 @@ impl AstConv<'tcx> for ItemCtxt<'tcx> {\n         _: Option<&ty::GenericParamDef>,\n         span: Span,\n     ) -> &'tcx Const<'tcx> {\n-        self.tcx().sess.struct_span_err_with_code(\n-            span,\n-            \"the const placeholder `_` is not allowed within types on item signatures\",\n-            DiagnosticId::Error(\"E0121\".into()),\n-        ).span_label(span, \"not allowed in type signatures\")\n-         .emit();\n+        bad_placeholder_type(self.tcx(), span).emit();\n \n         self.tcx().consts.err\n     }"}]}