{"sha": "f56fb51a8bd9b65936abcd4515fff9bced1208da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1NmZiNTFhOGJkOWI2NTkzNmFiY2Q0NTE1ZmZmOWJjZWQxMjA4ZGE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-07T12:46:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-07T12:46:56Z"}, "message": "Rollup merge of #70846 - tmiasko:compiler-builtins-codegen-units, r=alexcrichton\n\nKeep codegen units unmerged when building compiler builtins\n\nMake it possible to control how mono items are partitioned into code generation\nunits, when compiling the compiler builtins, by retaining the original partitioning.\n\nHelps with #48625, #61063, #67960, #70489.\n\nr? @alexcrichton", "tree": {"sha": "cb9e2eee1f8b6ab076c757a2c784a964c30c4435", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb9e2eee1f8b6ab076c757a2c784a964c30c4435"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f56fb51a8bd9b65936abcd4515fff9bced1208da", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJejHZACRBK7hj4Ov3rIwAAdHIIAGRfh+WVxqaiY+GCPMKprTq8\nokONRpC6By4/erPOgi9ZIx+UxHPSaSyZmcd7/VOedcqRT0CNNf9fu35qVXt8v2vl\n2LupX0YXmnZR0T4E4eVJt9djxqhr1cXM2XMsML9LQsbK4GNH7dsqtRBEXj1nPGcv\nUPGOI7xfLS2iNu+34EKhBoK0qFVR6k9CzmLQ/hunHviaLcvPQPURS9EJQyi0RK3D\np0z/PeR1oLz6jx8ZWTHeGZ6xlZdvLr6ck3etVSQ7iJiAqisjp/IciWaoUkyN3Ly1\n3o2awodbN98SjmGlHTQ24+6OFPXS8mzhbn/gcyNXMklhz7cw2EjT9y1TAChanK4=\n=qG9c\n-----END PGP SIGNATURE-----\n", "payload": "tree cb9e2eee1f8b6ab076c757a2c784a964c30c4435\nparent f2c59bd603568fe3c8d1ed1d3c41b556ec73a145\nparent c8b83babf358cd3094fb05a65889a6d017a81d96\nauthor Dylan DPC <dylan.dpc@gmail.com> 1586263616 +0200\ncommitter GitHub <noreply@github.com> 1586263616 +0200\n\nRollup merge of #70846 - tmiasko:compiler-builtins-codegen-units, r=alexcrichton\n\nKeep codegen units unmerged when building compiler builtins\n\nMake it possible to control how mono items are partitioned into code generation\nunits, when compiling the compiler builtins, by retaining the original partitioning.\n\nHelps with #48625, #61063, #67960, #70489.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f56fb51a8bd9b65936abcd4515fff9bced1208da", "html_url": "https://github.com/rust-lang/rust/commit/f56fb51a8bd9b65936abcd4515fff9bced1208da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f56fb51a8bd9b65936abcd4515fff9bced1208da/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2c59bd603568fe3c8d1ed1d3c41b556ec73a145", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2c59bd603568fe3c8d1ed1d3c41b556ec73a145", "html_url": "https://github.com/rust-lang/rust/commit/f2c59bd603568fe3c8d1ed1d3c41b556ec73a145"}, {"sha": "c8b83babf358cd3094fb05a65889a6d017a81d96", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8b83babf358cd3094fb05a65889a6d017a81d96", "html_url": "https://github.com/rust-lang/rust/commit/c8b83babf358cd3094fb05a65889a6d017a81d96"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "44aa9a710b65343629f21bc4def713aef493a2f2", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f56fb51a8bd9b65936abcd4515fff9bced1208da/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f56fb51a8bd9b65936abcd4515fff9bced1208da/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=f56fb51a8bd9b65936abcd4515fff9bced1208da", "patch": "@@ -455,11 +455,18 @@ fn default_visibility(tcx: TyCtxt<'_>, id: DefId, is_generic: bool) -> Visibilit\n fn merge_codegen_units<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     initial_partitioning: &mut PreInliningPartitioning<'tcx>,\n-    target_cgu_count: usize,\n+    mut target_cgu_count: usize,\n ) {\n     assert!(target_cgu_count >= 1);\n     let codegen_units = &mut initial_partitioning.codegen_units;\n \n+    if tcx.is_compiler_builtins(LOCAL_CRATE) {\n+        // Compiler builtins require some degree of control over how mono items\n+        // are partitioned into compilation units. Provide it by keeping the\n+        // original partitioning when compiling the compiler builtins crate.\n+        target_cgu_count = codegen_units.len();\n+    }\n+\n     // Note that at this point in time the `codegen_units` here may not be in a\n     // deterministic order (but we know they're deterministically the same set).\n     // We want this merging to produce a deterministic ordering of codegen units"}, {"sha": "25195743b04007360ab92f5e8cf6d337ee021333", "filename": "src/test/codegen-units/partitioning/compiler-builtins.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f56fb51a8bd9b65936abcd4515fff9bced1208da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fcompiler-builtins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f56fb51a8bd9b65936abcd4515fff9bced1208da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fcompiler-builtins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fcompiler-builtins.rs?ref=f56fb51a8bd9b65936abcd4515fff9bced1208da", "patch": "@@ -0,0 +1,40 @@\n+// Verifies that during compiler_builtins compilation the codegen units are kept\n+// unmerged. Even when only a single codegen unit is requested with -Ccodegen-units=1.\n+//\n+// compile-flags: -Zprint-mono-items=eager -Ccodegen-units=1\n+\n+#![compiler_builtins]\n+#![crate_type=\"lib\"]\n+#![feature(compiler_builtins)]\n+\n+mod atomics {\n+    //~ MONO_ITEM fn compiler_builtins::atomics[0]::sync_1[0] @@ compiler_builtins-cgu.0[External]\n+    #[no_mangle]\n+    pub extern \"C\" fn sync_1() {}\n+\n+    //~ MONO_ITEM fn compiler_builtins::atomics[0]::sync_2[0] @@ compiler_builtins-cgu.0[External]\n+    #[no_mangle]\n+    pub extern \"C\" fn sync_2() {}\n+\n+    //~ MONO_ITEM fn compiler_builtins::atomics[0]::sync_3[0] @@ compiler_builtins-cgu.0[External]\n+    #[no_mangle]\n+    pub extern \"C\" fn sync_3() {}\n+}\n+\n+mod x {\n+    //~ MONO_ITEM fn compiler_builtins::x[0]::x[0] @@ compiler_builtins-cgu.1[External]\n+    #[no_mangle]\n+    pub extern \"C\" fn x() {}\n+}\n+\n+mod y {\n+    //~ MONO_ITEM fn compiler_builtins::y[0]::y[0] @@ compiler_builtins-cgu.2[External]\n+    #[no_mangle]\n+    pub extern \"C\" fn y() {}\n+}\n+\n+mod z {\n+    //~ MONO_ITEM fn compiler_builtins::z[0]::z[0] @@ compiler_builtins-cgu.3[External]\n+    #[no_mangle]\n+    pub extern \"C\" fn z() {}\n+}"}]}