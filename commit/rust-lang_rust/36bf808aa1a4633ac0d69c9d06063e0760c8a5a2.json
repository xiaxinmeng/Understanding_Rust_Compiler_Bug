{"sha": "36bf808aa1a4633ac0d69c9d06063e0760c8a5a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2YmY4MDhhYTFhNDYzM2FjMGQ2OWM5ZDA2MDYzZTA3NjBjOGE1YTI=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-16T20:54:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-16T20:54:58Z"}, "message": "Rollup merge of #86341 - LingMan:ret_val, r=davidtwco\n\nStop returning a value from `report_assert_as_lint`\n\nThis function only ever returns `None`. Make that explicity by not returning a value at all.\n\n`@rustbot` modify labels +C-cleanup +T-compiler", "tree": {"sha": "72b334bf89132ca057b05c6b04a703cd2064403d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72b334bf89132ca057b05c6b04a703cd2064403d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36bf808aa1a4633ac0d69c9d06063e0760c8a5a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgymUjCRBK7hj4Ov3rIwAAAOQIAFYqBe8bPG0JL1/w7yGaohHQ\nl7bjlCUZk6JXnwHu8UZrvWtL/4oXp4iUl8Z8kcy6lMB9Rkpq2p3peyukYAnXC+49\nTTDWDe9m7GfCyEM3ABeluZs9W4YxDWAMePHbbzLfhYoNA1VHSK9R8x186Mnav118\nHQCqleA63zFJUxyEQVwJ4GlOpCLInWlZnmwrjsnKCRiv9b/IAJCcEPWlbphlmOH4\n5J2QT5QYR9wJeNMlM1Fm5Ginv4uM5IW84mYRbGRGLi4HUJGuWlwssFDYexaM81td\nrnepRQrWEuwdJPeDtWb9ruwActAy4s7hig/er20U7osWY7aVRxMrtvQhgicN1A8=\n=inIU\n-----END PGP SIGNATURE-----\n", "payload": "tree 72b334bf89132ca057b05c6b04a703cd2064403d\nparent 4e9dc76d36b58601b56e629affe56972e3a63ecb\nparent e42d5eed314463c751836e452769991b5d71e30b\nauthor Yuki Okushi <jtitor@2k36.org> 1623876898 +0900\ncommitter GitHub <noreply@github.com> 1623876898 +0900\n\nRollup merge of #86341 - LingMan:ret_val, r=davidtwco\n\nStop returning a value from `report_assert_as_lint`\n\nThis function only ever returns `None`. Make that explicity by not returning a value at all.\n\n`@rustbot` modify labels +C-cleanup +T-compiler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36bf808aa1a4633ac0d69c9d06063e0760c8a5a2", "html_url": "https://github.com/rust-lang/rust/commit/36bf808aa1a4633ac0d69c9d06063e0760c8a5a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36bf808aa1a4633ac0d69c9d06063e0760c8a5a2/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e9dc76d36b58601b56e629affe56972e3a63ecb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e9dc76d36b58601b56e629affe56972e3a63ecb", "html_url": "https://github.com/rust-lang/rust/commit/4e9dc76d36b58601b56e629affe56972e3a63ecb"}, {"sha": "e42d5eed314463c751836e452769991b5d71e30b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e42d5eed314463c751836e452769991b5d71e30b", "html_url": "https://github.com/rust-lang/rust/commit/e42d5eed314463c751836e452769991b5d71e30b"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "73a0f5537c3b39739f298d322499db75138ce1af", "filename": "compiler/rustc_mir/src/transform/const_prop.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/36bf808aa1a4633ac0d69c9d06063e0760c8a5a2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36bf808aa1a4633ac0d69c9d06063e0760c8a5a2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs?ref=36bf808aa1a4633ac0d69c9d06063e0760c8a5a2", "patch": "@@ -528,14 +528,14 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n         source_info: SourceInfo,\n         message: &'static str,\n         panic: AssertKind<impl std::fmt::Debug>,\n-    ) -> Option<()> {\n-        let lint_root = self.lint_root(source_info)?;\n-        self.tcx.struct_span_lint_hir(lint, lint_root, source_info.span, |lint| {\n-            let mut err = lint.build(message);\n-            err.span_label(source_info.span, format!(\"{:?}\", panic));\n-            err.emit()\n-        });\n-        None\n+    ) {\n+        if let Some(lint_root) = self.lint_root(source_info) {\n+            self.tcx.struct_span_lint_hir(lint, lint_root, source_info.span, |lint| {\n+                let mut err = lint.build(message);\n+                err.span_label(source_info.span, format!(\"{:?}\", panic));\n+                err.emit()\n+            });\n+        }\n     }\n \n     fn check_unary_op(\n@@ -557,7 +557,8 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                 source_info,\n                 \"this arithmetic operation will overflow\",\n                 AssertKind::OverflowNeg(val.to_const_int()),\n-            )?;\n+            );\n+            return None;\n         }\n \n         Some(())\n@@ -602,7 +603,8 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                         },\n                         r.to_const_int(),\n                     ),\n-                )?;\n+                );\n+                return None;\n             }\n         }\n \n@@ -617,7 +619,8 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                     source_info,\n                     \"this arithmetic operation will overflow\",\n                     AssertKind::Overflow(op, l.to_const_int(), r.to_const_int()),\n-                )?;\n+                );\n+                return None;\n             }\n         }\n         Some(())"}]}