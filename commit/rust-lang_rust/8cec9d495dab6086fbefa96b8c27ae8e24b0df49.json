{"sha": "8cec9d495dab6086fbefa96b8c27ae8e24b0df49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZWM5ZDQ5NWRhYjYwODZmYmVmYTk2YjhjMjdhZThlMjRiMGRmNDk=", "commit": {"author": {"name": "Paolo Falabella", "email": "paolo.falabella@gmail.com", "date": "2014-07-04T16:48:58Z"}, "committer": {"name": "Paolo Falabella", "email": "paolo.falabella@gmail.com", "date": "2014-07-05T18:50:03Z"}, "message": "Added num::Signed implementation to Ratio (squashed)", "tree": {"sha": "38459d5d54c8fa746ec125ee494ce03cdaa12384", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38459d5d54c8fa746ec125ee494ce03cdaa12384"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cec9d495dab6086fbefa96b8c27ae8e24b0df49", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cec9d495dab6086fbefa96b8c27ae8e24b0df49", "html_url": "https://github.com/rust-lang/rust/commit/8cec9d495dab6086fbefa96b8c27ae8e24b0df49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cec9d495dab6086fbefa96b8c27ae8e24b0df49/comments", "author": {"login": "pfalabella", "id": 1331706, "node_id": "MDQ6VXNlcjEzMzE3MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1331706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfalabella", "html_url": "https://github.com/pfalabella", "followers_url": "https://api.github.com/users/pfalabella/followers", "following_url": "https://api.github.com/users/pfalabella/following{/other_user}", "gists_url": "https://api.github.com/users/pfalabella/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfalabella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfalabella/subscriptions", "organizations_url": "https://api.github.com/users/pfalabella/orgs", "repos_url": "https://api.github.com/users/pfalabella/repos", "events_url": "https://api.github.com/users/pfalabella/events{/privacy}", "received_events_url": "https://api.github.com/users/pfalabella/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pfalabella", "id": 1331706, "node_id": "MDQ6VXNlcjEzMzE3MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1331706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfalabella", "html_url": "https://github.com/pfalabella", "followers_url": "https://api.github.com/users/pfalabella/followers", "following_url": "https://api.github.com/users/pfalabella/following{/other_user}", "gists_url": "https://api.github.com/users/pfalabella/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfalabella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfalabella/subscriptions", "organizations_url": "https://api.github.com/users/pfalabella/orgs", "repos_url": "https://api.github.com/users/pfalabella/repos", "events_url": "https://api.github.com/users/pfalabella/events{/privacy}", "received_events_url": "https://api.github.com/users/pfalabella/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36d7d746c8366d78b332cffdff85318e709b38ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/36d7d746c8366d78b332cffdff85318e709b38ca", "html_url": "https://github.com/rust-lang/rust/commit/36d7d746c8366d78b332cffdff85318e709b38ca"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "1792f282eca701a89faea064ac4dcf05795a8e1e", "filename": "src/libnum/rational.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/8cec9d495dab6086fbefa96b8c27ae8e24b0df49/src%2Flibnum%2Frational.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cec9d495dab6086fbefa96b8c27ae8e24b0df49/src%2Flibnum%2Frational.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Frational.rs?ref=8cec9d495dab6086fbefa96b8c27ae8e24b0df49", "patch": "@@ -15,6 +15,7 @@ use Integer;\n use std::cmp;\n use std::fmt;\n use std::from_str::FromStr;\n+use std::num;\n use std::num::{Zero, One, ToStrRadix, FromStrRadix};\n use bigint::{BigInt, BigUint, Sign, Plus, Minus};\n \n@@ -273,6 +274,36 @@ impl<T: Clone + Integer + PartialOrd>\n impl<T: Clone + Integer + PartialOrd>\n     Num for Ratio<T> {}\n \n+impl<T: Clone + Integer + PartialOrd>\n+    num::Signed for Ratio<T> {\n+    #[inline]\n+    fn abs(&self) -> Ratio<T> {\n+        if self.is_negative() { -self.clone() } else { self.clone() }\n+    }\n+\n+    #[inline]\n+    fn abs_sub(&self, other: &Ratio<T>) -> Ratio<T> {\n+        if *self <= *other { Zero::zero() } else { *self - *other }\n+    }\n+\n+    #[inline]\n+    fn signum(&self) -> Ratio<T> {\n+        if *self > Zero::zero() {\n+            num::one()\n+        } else if self.is_zero() {\n+            num::zero()\n+        } else {\n+            - num::one::<Ratio<T>>()\n+        }\n+    }\n+\n+    #[inline]\n+    fn is_positive(&self) -> bool { *self > Zero::zero() }\n+\n+    #[inline]\n+    fn is_negative(&self) -> bool { *self < Zero::zero() }\n+}\n+\n /* String conversions */\n impl<T: fmt::Show + Eq + One> fmt::Show for Ratio<T> {\n     /// Renders as `numer/denom`. If denom=1, renders as numer.\n@@ -338,6 +369,7 @@ mod test {\n     use super::{Ratio, Rational, BigRational};\n     use std::num::{Zero, One, FromStrRadix, FromPrimitive, ToStrRadix};\n     use std::from_str::FromStr;\n+    use std::num;\n \n     pub static _0 : Rational = Ratio { numer: 0, denom: 1};\n     pub static _1 : Rational = Ratio { numer: 1, denom: 1};\n@@ -672,4 +704,16 @@ mod test {\n         assert_eq!(Ratio::from_float(f64::INFINITY), None);\n         assert_eq!(Ratio::from_float(f64::NEG_INFINITY), None);\n     }\n+\n+    #[test]\n+    fn test_signed() {\n+        assert_eq!(_neg1_2.abs(), _1_2);\n+        assert_eq!(_3_2.abs_sub(&_1_2), _1);\n+        assert_eq!(_1_2.abs_sub(&_3_2), Zero::zero());\n+        assert_eq!(_1_2.signum(), One::one());\n+        assert_eq!(_neg1_2.signum(), - num::one::<Ratio<int>>());\n+        assert!(_neg1_2.is_negative());\n+        assert!(! _neg1_2.is_positive());\n+        assert!(! _1_2.is_negative());\n+    }\n }"}]}