{"sha": "cd5168b7cd9ae02029226f9384e78b2151a883ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNTE2OGI3Y2Q5YWUwMjAyOTIyNmY5Mzg0ZTc4YjIxNTFhODgzZWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T04:45:05Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:30Z"}, "message": "librustc: De-`@mut` `FunctionContext::llself`", "tree": {"sha": "070775dde5d5882d29374db1bfae08ba56583315", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/070775dde5d5882d29374db1bfae08ba56583315"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd5168b7cd9ae02029226f9384e78b2151a883ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd5168b7cd9ae02029226f9384e78b2151a883ed", "html_url": "https://github.com/rust-lang/rust/commit/cd5168b7cd9ae02029226f9384e78b2151a883ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd5168b7cd9ae02029226f9384e78b2151a883ed/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd6a2236e1b57050729071c6178d5c3937a38141", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd6a2236e1b57050729071c6178d5c3937a38141", "html_url": "https://github.com/rust-lang/rust/commit/bd6a2236e1b57050729071c6178d5c3937a38141"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "80044af1ea39e6ca12a178880116e74b32e9539c", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cd5168b7cd9ae02029226f9384e78b2151a883ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd5168b7cd9ae02029226f9384e78b2151a883ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=cd5168b7cd9ae02029226f9384e78b2151a883ed", "patch": "@@ -1689,7 +1689,7 @@ pub fn new_fn_ctxt_w_id(ccx: @CrateContext,\n           entry_bcx: None,\n           alloca_insert_pt: Cell::new(None),\n           llreturn: Cell::new(None),\n-          llself: None,\n+          llself: Cell::new(None),\n           personality: None,\n           caller_expects_out_pointer: uses_outptr,\n           llargs: RefCell::new(HashMap::new()),\n@@ -1760,11 +1760,11 @@ pub fn create_llargs_for_fn_args(cx: @mut FunctionContext,\n \n     match self_arg {\n       impl_self(tt, self_mode) => {\n-        cx.llself = Some(ValSelfData {\n+        cx.llself.set(Some(ValSelfData {\n             v: cx.llenv.get(),\n             t: tt,\n             is_copy: self_mode == ty::ByCopy\n-        });\n+        }));\n       }\n       no_self => ()\n     }\n@@ -1788,7 +1788,7 @@ pub fn copy_args_to_allocas(fcx: @mut FunctionContext,\n     let _icx = push_ctxt(\"copy_args_to_allocas\");\n     let mut bcx = bcx;\n \n-    match fcx.llself {\n+    match fcx.llself.get() {\n         Some(slf) => {\n             let self_val = if slf.is_copy\n                     && datum::appropriate_mode(bcx.ccx(), slf.t).is_by_value() {\n@@ -1800,7 +1800,7 @@ pub fn copy_args_to_allocas(fcx: @mut FunctionContext,\n                 PointerCast(bcx, slf.v, type_of(bcx.ccx(), slf.t).ptr_to())\n             };\n \n-            fcx.llself = Some(ValSelfData {v: self_val, ..slf});\n+            fcx.llself.set(Some(ValSelfData {v: self_val, ..slf}));\n             add_clean(bcx, self_val, slf.t);\n \n             if fcx.ccx.sess.opts.extra_debuginfo {"}, {"sha": "17e3286e26bb8b9ea297c2b8b3a3eef53ea8937f", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd5168b7cd9ae02029226f9384e78b2151a883ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd5168b7cd9ae02029226f9384e78b2151a883ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=cd5168b7cd9ae02029226f9384e78b2151a883ed", "patch": "@@ -229,7 +229,7 @@ pub struct FunctionContext {\n     // NB: This is the type of the self *variable*, not the self *type*. The\n     // self type is set only for default methods, while the self variable is\n     // set for all methods.\n-    llself: Option<ValSelfData>,\n+    llself: Cell<Option<ValSelfData>>,\n     // The a value alloca'd for calls to upcalls.rust_personality. Used when\n     // outputting the resume instruction.\n     personality: Option<ValueRef>,"}, {"sha": "04392fa9042305f909fc53eec9dd903fa4a46953", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd5168b7cd9ae02029226f9384e78b2151a883ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd5168b7cd9ae02029226f9384e78b2151a883ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=cd5168b7cd9ae02029226f9384e78b2151a883ed", "patch": "@@ -1108,8 +1108,8 @@ pub fn trans_local_var(bcx: @Block, def: ast::Def) -> Datum {\n             take_local(bcx, lllocals.get(), nid)\n         }\n         ast::DefSelf(nid, _) => {\n-            let self_info: ValSelfData = match bcx.fcx.llself {\n-                Some(ref self_info) => *self_info,\n+            let self_info: ValSelfData = match bcx.fcx.llself.get() {\n+                Some(self_info) => self_info,\n                 None => {\n                     bcx.sess().bug(format!(\n                         \"trans_local_var: reference to self \\"}]}