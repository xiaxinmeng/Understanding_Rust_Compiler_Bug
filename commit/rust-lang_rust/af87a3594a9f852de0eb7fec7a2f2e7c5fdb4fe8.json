{"sha": "af87a3594a9f852de0eb7fec7a2f2e7c5fdb4fe8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmODdhMzU5NGE5Zjg1MmRlMGViN2ZlYzdhMmYyZTdjNWZkYjRmZTg=", "commit": {"author": {"name": "Cl\u00e9ment RENAULT", "email": "crenault@vente-privee.com", "date": "2018-07-09T12:50:54Z"}, "committer": {"name": "Cl\u00e9ment RENAULT", "email": "crenault@vente-privee.com", "date": "2018-07-09T12:50:54Z"}, "message": "Add a basic test to `Option::replace`", "tree": {"sha": "305670a0121fb74be6fb6156e28626cf5ec7b82f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/305670a0121fb74be6fb6156e28626cf5ec7b82f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af87a3594a9f852de0eb7fec7a2f2e7c5fdb4fe8", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEWAVdgiVhAxK66v+bnzaJD/uCP4UFAltDWi4ACgkQnzaJD/uC\nP4X4+A//YQsJWm/tjX0ABvuA7IC4h8t/rPHhvGPmr8PFf0ju7Vd9d7O1mbMrmSwM\nLfaD/nbNYqedFW+IrkX38+/eyVUe1kL2EOeNtjAHQxHZ8BidD7y6dXJ9KKrShFpZ\nDPNKp1BxiGL6dSOMoJvAGDdjPUVj2faFRSPov6a5FNk1J4ogu8OLc8qbdOOQtrUu\n0lf4BVk9bFT/m+bhKL1GrNhfO81ugmAeEnGhE2hKzk1tS0ryEK1vdJLJl/iFNh8c\nYaXRN9UDv4X1w35lismeDbGcMfHzB4x8epSN35wrG2GUnuVJ2rzus9oKvlLqNREc\nF1CwIK3UzJ8BgZjEe1A5hbztt5AYo9PS8I8xDch0NEnnY6DUuNic5YPKtqZFOeNw\nG+tCCjlXQReQxhIl2Dxzy3xKJ55BLNbXWWW7oNbnAitVwfktNaX9naC2i6MyNA9e\ne9D7DN2RYsZXriJw5QR2vjvrFF8PS7+4X/4OlZgJruVhSUTAG4N7X0qkddOpOueb\nFHpnPOLRAjpur4zKyLEOIGBlXDAl9J6QRuNXW+DisXwwBAwesuFz4EGMq8kvQoD2\nmaX/hNjAsB12lmrVWOG56D8GO2kQDBu18PzhXRVqyf1Fr44vWNVLcjDNJ6XeLCxI\n0jCzSLmyEjZ0o6HPxmqjUxrlVaF44lLwiuyfDW+/3WdXxrfDym4=\n=7CgR\n-----END PGP SIGNATURE-----", "payload": "tree 305670a0121fb74be6fb6156e28626cf5ec7b82f\nparent 603553458639cd65f3cc75b9b74f8176af81aa2b\nauthor Cl\u00e9ment RENAULT <crenault@vente-privee.com> 1531140654 +0200\ncommitter Cl\u00e9ment RENAULT <crenault@vente-privee.com> 1531140654 +0200\n\nAdd a basic test to `Option::replace`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af87a3594a9f852de0eb7fec7a2f2e7c5fdb4fe8", "html_url": "https://github.com/rust-lang/rust/commit/af87a3594a9f852de0eb7fec7a2f2e7c5fdb4fe8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af87a3594a9f852de0eb7fec7a2f2e7c5fdb4fe8/comments", "author": null, "committer": null, "parents": [{"sha": "603553458639cd65f3cc75b9b74f8176af81aa2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/603553458639cd65f3cc75b9b74f8176af81aa2b", "html_url": "https://github.com/rust-lang/rust/commit/603553458639cd65f3cc75b9b74f8176af81aa2b"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "ca7db6e4639a522cd1b9c35b6f686f3fd1f261c4", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/af87a3594a9f852de0eb7fec7a2f2e7c5fdb4fe8/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af87a3594a9f852de0eb7fec7a2f2e7c5fdb4fe8/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=af87a3594a9f852de0eb7fec7a2f2e7c5fdb4fe8", "patch": "@@ -44,6 +44,7 @@\n #![feature(reverse_bits)]\n #![feature(iterator_find_map)]\n #![feature(slice_internals)]\n+#![feature(option_replace)]\n \n extern crate core;\n extern crate test;"}, {"sha": "bc3e61a4f541f71f86d62aaee68119b9888d7102", "filename": "src/libcore/tests/option.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/af87a3594a9f852de0eb7fec7a2f2e7c5fdb4fe8/src%2Flibcore%2Ftests%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af87a3594a9f852de0eb7fec7a2f2e7c5fdb4fe8/src%2Flibcore%2Ftests%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Foption.rs?ref=af87a3594a9f852de0eb7fec7a2f2e7c5fdb4fe8", "patch": "@@ -297,3 +297,18 @@ fn test_try() {\n     }\n     assert_eq!(try_option_err(), Err(NoneError));\n }\n+\n+#[test]\n+fn test_replace() {\n+    let mut x = Some(2);\n+    let old = x.replace(5);\n+\n+    assert_eq!(x, Some(5));\n+    assert_eq!(old, Some(2));\n+\n+    let mut x = None;\n+    let old = x.replace(3);\n+\n+    assert_eq!(x, Some(3));\n+    assert_eq!(old, None);\n+}"}]}