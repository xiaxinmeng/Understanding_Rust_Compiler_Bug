{"sha": "194f1ca3f12f6240e9eb63051eef8eba7dce4853", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NGYxY2EzZjEyZjYyNDBlOWViNjMwNTFlZWY4ZWJhN2RjZTQ4NTM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-02-09T06:18:35Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-02-09T11:29:53Z"}, "message": "Check if we're not in stable to allow compile_fail option in rustdoc --test", "tree": {"sha": "0b8abf19e557340e08f157e35b956a297e3204bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b8abf19e557340e08f157e35b956a297e3204bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/194f1ca3f12f6240e9eb63051eef8eba7dce4853", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/194f1ca3f12f6240e9eb63051eef8eba7dce4853", "html_url": "https://github.com/rust-lang/rust/commit/194f1ca3f12f6240e9eb63051eef8eba7dce4853", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/194f1ca3f12f6240e9eb63051eef8eba7dce4853/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed6b575648f366f46b5ba8d63c8abe26ada3a1be", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed6b575648f366f46b5ba8d63c8abe26ada3a1be", "html_url": "https://github.com/rust-lang/rust/commit/ed6b575648f366f46b5ba8d63c8abe26ada3a1be"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "66f01b30f78bb7fb262315019dacbbdca396dc45", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/194f1ca3f12f6240e9eb63051eef8eba7dce4853/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/194f1ca3f12f6240e9eb63051eef8eba7dce4853/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=194f1ca3f12f6240e9eb63051eef8eba7dce4853", "patch": "@@ -34,6 +34,7 @@ use std::ffi::CString;\n use std::fmt;\n use std::slice;\n use std::str;\n+use std::env;\n \n use html::render::derive_id;\n use html::toc::TocBuilder;\n@@ -439,6 +440,18 @@ pub fn find_testable_code(doc: &str, tests: &mut ::test::Collector) {\n     }\n }\n \n+fn get_unstable_features_setting() -> bool {\n+    // Check if we can activate compile_fail option or not.\n+    //\n+    // It is done to ensure that it won't be used out-of-tree\n+    // because it's not ready yet for production.\n+    match (option_env!(\"CFG_BOOTSTRAP_KEY\"),\n+           env::var(\"RUSTC_BOOTSTRAP_KEY\").ok()) {\n+        (Some(ref cfg), Some(ref r_key)) => cfg == r_key,\n+        _ => false,\n+    }\n+}\n+\n #[derive(Eq, PartialEq, Clone, Debug)]\n struct LangString {\n     should_panic: bool,\n@@ -465,6 +478,7 @@ impl LangString {\n         let mut seen_rust_tags = false;\n         let mut seen_other_tags = false;\n         let mut data = LangString::all_false();\n+        let allow_compile_fail = get_unstable_features_setting();\n \n         let tokens = string.split(|c: char|\n             !(c == '_' || c == '-' || c.is_alphanumeric())\n@@ -473,13 +487,20 @@ impl LangString {\n         for token in tokens {\n             match token {\n                 \"\" => {},\n-                \"should_panic\" => { data.should_panic = true; seen_rust_tags = true; },\n+                \"should_panic\" => {\n+                    data.should_panic = true;\n+                    seen_rust_tags = true;\n+                    data.no_run = true;\n+                },\n                 \"no_run\" => { data.no_run = true; seen_rust_tags = true; },\n                 \"ignore\" => { data.ignore = true; seen_rust_tags = true; },\n                 \"rust\" => { data.rust = true; seen_rust_tags = true; },\n                 \"test_harness\" => { data.test_harness = true; seen_rust_tags = true; },\n-                \"compile_fail\" => { data.compile_fail = true; seen_rust_tags = true;\n-                                    data.no_run = true; },\n+                \"compile_fail\" if allow_compile_fail => {\n+                    data.compile_fail = true;\n+                    seen_rust_tags = true;\n+                    data.no_run = true;\n+                },\n                 _ => { seen_other_tags = true }\n             }\n         }"}]}