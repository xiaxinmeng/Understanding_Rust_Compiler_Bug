{"sha": "9cb10cdc9a9f89c4efd2678c1843f17c7064d175", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYjEwY2RjOWE5Zjg5YzRlZmQyNjc4YzE4NDNmMTdjNzA2NGQxNzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-22T08:36:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-22T08:36:45Z"}, "message": "Auto merge of #1593 - rust-lang:test, r=RalfJung\n\nfix './miri test'", "tree": {"sha": "e49a42b39e5ff7ccf31af15e40a57a2f6940cef6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e49a42b39e5ff7ccf31af15e40a57a2f6940cef6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cb10cdc9a9f89c4efd2678c1843f17c7064d175", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cb10cdc9a9f89c4efd2678c1843f17c7064d175", "html_url": "https://github.com/rust-lang/rust/commit/9cb10cdc9a9f89c4efd2678c1843f17c7064d175", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cb10cdc9a9f89c4efd2678c1843f17c7064d175/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce31a12f36e55922ab195822871a677b16dab333", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce31a12f36e55922ab195822871a677b16dab333", "html_url": "https://github.com/rust-lang/rust/commit/ce31a12f36e55922ab195822871a677b16dab333"}, {"sha": "80c4b5d6741745803f86c8a96389001e3cf617ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/80c4b5d6741745803f86c8a96389001e3cf617ca", "html_url": "https://github.com/rust-lang/rust/commit/80c4b5d6741745803f86c8a96389001e3cf617ca"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "ac44c48d6214a702ebdb434011e12a2d6b42fa52", "filename": "tests/compiletest.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9cb10cdc9a9f89c4efd2678c1843f17c7064d175/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cb10cdc9a9f89c4efd2678c1843f17c7064d175/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=9cb10cdc9a9f89c4efd2678c1843f17c7064d175", "patch": "@@ -24,10 +24,10 @@ fn run_tests(mode: &str, path: &str, target: &str) {\n     } else {\n         flags.push(\"-Dwarnings -Dunused\".to_owned()); // overwrite the -Aunused in compiletest-rs\n     }\n-    if let Ok(sysroot) = std::env::var(\"MIRI_SYSROOT\") {\n+    if let Ok(sysroot) = env::var(\"MIRI_SYSROOT\") {\n         flags.push(format!(\"--sysroot {}\", sysroot));\n     }\n-    if let Ok(extra_flags) = std::env::var(\"MIRIFLAGS\") {\n+    if let Ok(extra_flags) = env::var(\"MIRIFLAGS\") {\n         flags.push(extra_flags);\n     }\n \n@@ -80,14 +80,16 @@ fn get_host() -> String {\n }\n \n fn get_target() -> String {\n-    std::env::var(\"MIRI_TEST_TARGET\").unwrap_or_else(|_| get_host())\n+    env::var(\"MIRI_TEST_TARGET\").unwrap_or_else(|_| get_host())\n }\n \n fn test_runner(_tests: &[&()]) {\n     // Add a test env var to do environment communication tests.\n-    std::env::set_var(\"MIRI_ENV_VAR_TEST\", \"0\");\n+    env::set_var(\"MIRI_ENV_VAR_TEST\", \"0\");\n     // Let the tests know where to store temp files (they might run for a different target, which can make this hard to find).\n-    std::env::set_var(\"MIRI_TEMP\", std::env::temp_dir());\n+    env::set_var(\"MIRI_TEMP\", env::temp_dir());\n+    // Panic tests expect backtraces to be printed.\n+    env::set_var(\"RUST_BACKTRACE\", \"1\");\n \n     let target = get_target();\n     miri_pass(\"tests/run-pass\", &target);"}]}