{"sha": "b149b9d19bb4dfbda4145b2667d87168da1e57d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNDliOWQxOWJiNGRmYmRhNDE0NWIyNjY3ZDg3MTY4ZGExZTU3ZDY=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-06-09T17:39:21Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-07-08T14:42:48Z"}, "message": "trans: Set COMDAT section for weak symbols so that Windows can handle them.", "tree": {"sha": "a57f4b13fa2dfe97cc6b27fc2e94e39b694646cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a57f4b13fa2dfe97cc6b27fc2e94e39b694646cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b149b9d19bb4dfbda4145b2667d87168da1e57d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b149b9d19bb4dfbda4145b2667d87168da1e57d6", "html_url": "https://github.com/rust-lang/rust/commit/b149b9d19bb4dfbda4145b2667d87168da1e57d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b149b9d19bb4dfbda4145b2667d87168da1e57d6/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c27a3c6d597ce5ecd1b71e99e48075e625e7b27", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c27a3c6d597ce5ecd1b71e99e48075e625e7b27", "html_url": "https://github.com/rust-lang/rust/commit/4c27a3c6d597ce5ecd1b71e99e48075e625e7b27"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "b992ba362a98321ef64505b7858cff6f021b85ff", "filename": "src/librustc_trans/closure.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b149b9d19bb4dfbda4145b2667d87168da1e57d6/src%2Flibrustc_trans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b149b9d19bb4dfbda4145b2667d87168da1e57d6/src%2Flibrustc_trans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fclosure.rs?ref=b149b9d19bb4dfbda4145b2667d87168da1e57d6", "patch": "@@ -212,6 +212,7 @@ pub fn trans_closure_expr<'a, 'tcx>(dest: Dest<'a, 'tcx>,\n \n     let llfn = get_or_create_closure_declaration(ccx, closure_def_id, closure_substs);\n     llvm::SetLinkage(llfn, llvm::WeakODRLinkage);\n+    llvm::SetUniqueComdat(ccx.llmod(), llfn);\n \n     // Get the type of this closure. Use the current `param_substs` as\n     // the closure substitutions. This makes sense because the closure"}, {"sha": "b9700f2cacfc2083e545094a807a01288f2a4073", "filename": "src/librustc_trans/trans_item.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b149b9d19bb4dfbda4145b2667d87168da1e57d6/src%2Flibrustc_trans%2Ftrans_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b149b9d19bb4dfbda4145b2667d87168da1e57d6/src%2Flibrustc_trans%2Ftrans_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans_item.rs?ref=b149b9d19bb4dfbda4145b2667d87168da1e57d6", "patch": "@@ -190,9 +190,13 @@ impl<'a, 'tcx> TransItem<'tcx> {\n             }) => {\n                 let lldecl = declare::declare_fn(ccx, symbol_name, mono_ty);\n                 llvm::SetLinkage(lldecl, linkage);\n-                attributes::from_fn_attrs(ccx, attrs, lldecl);\n                 base::set_link_section(ccx, lldecl, attrs);\n+                if linkage == llvm::LinkOnceODRLinkage ||\n+                   linkage == llvm::WeakODRLinkage {\n+                    llvm::SetUniqueComdat(ccx.llmod(), lldecl);\n+                }\n \n+                attributes::from_fn_attrs(ccx, attrs, lldecl);\n                 ccx.instances().borrow_mut().insert(instance, lldecl);\n             }\n             _ => bug!(\"Invalid item for TransItem::Fn: `{:?}`\", map_node)\n@@ -223,6 +227,10 @@ impl<'a, 'tcx> TransItem<'tcx> {\n         assert!(declare::get_defined_value(ccx, symbol_name).is_none());\n         let llfn = declare::declare_cfn(ccx, symbol_name, llfnty);\n         llvm::SetLinkage(llfn, linkage);\n+        if linkage == llvm::LinkOnceODRLinkage ||\n+           linkage == llvm::WeakODRLinkage {\n+            llvm::SetUniqueComdat(ccx.llmod(), llfn);\n+        }\n         attributes::set_frame_pointer_elimination(ccx, llfn);\n         ccx.drop_glues().borrow_mut().insert(dg, (llfn, fn_ty));\n     }"}]}