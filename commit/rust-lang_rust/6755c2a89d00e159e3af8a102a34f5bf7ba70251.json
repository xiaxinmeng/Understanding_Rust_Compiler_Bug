{"sha": "6755c2a89d00e159e3af8a102a34f5bf7ba70251", "node_id": "C_kwDOAAsO6NoAKDY3NTVjMmE4OWQwMGUxNTllM2FmOGExMDJhMzRmNWJmN2JhNzAyNTE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-10-13T00:41:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-13T00:41:25Z"}, "message": "Rollup merge of #102641 - eholk:dyn-star-box, r=compiler-errors\n\nSupport casting boxes to dyn*\n\nBoxes have a pointer type at codegen time which LLVM does not allow to be transparently converted to an integer. Work around this by inserting a `ptrtoint` instruction if the argument is a pointer.\n\nr? ``@compiler-errors``\n\nFixes #102427", "tree": {"sha": "375a59502b20b5221fe5220b124fddb4d60c60ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/375a59502b20b5221fe5220b124fddb4d60c60ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6755c2a89d00e159e3af8a102a34f5bf7ba70251", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjR161CRBK7hj4Ov3rIwAAfPoIAC7HsKIRMDkWbrycgYj3GtHb\n2RqmXDst9ItVSNcLn8vRDZidc0Ry9Y8q17ubav1undqcUHOMeAY9OBellZc+Kr91\nbk+zLuxg0OozXQ639C6Vij/W0gJi2IKSlDpbk8oEmrWT34+lIvcAkWdi0RTUIFLL\nhuEDYnFcPVUQbz2/FMLRYd8ClPssa2d5acEHx4bUYROX0powkVlKCXkDunmn2hle\nAeDBAtIzFdvO9amQsybhwGpgEZRkTMa6IE4Opr+1GTBJYncrFxeyAtxhnfpdYDDA\nh+J3oJICM3bvHzSWqtpZV0H8Wg2UYx37e3PBb+96iiANmcNun2+cBNsMF2uyf6s=\n=junX\n-----END PGP SIGNATURE-----\n", "payload": "tree 375a59502b20b5221fe5220b124fddb4d60c60ef\nparent 0938e1680daf66ca6aad428aedf9a920a0dab5ad\nparent 8b2c3ebb86b0f9a1d218daa0bd94096170233b74\nauthor Yuki Okushi <jtitor@2k36.org> 1665621685 +0900\ncommitter GitHub <noreply@github.com> 1665621685 +0900\n\nRollup merge of #102641 - eholk:dyn-star-box, r=compiler-errors\n\nSupport casting boxes to dyn*\n\nBoxes have a pointer type at codegen time which LLVM does not allow to be transparently converted to an integer. Work around this by inserting a `ptrtoint` instruction if the argument is a pointer.\n\nr? ``@compiler-errors``\n\nFixes #102427\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6755c2a89d00e159e3af8a102a34f5bf7ba70251", "html_url": "https://github.com/rust-lang/rust/commit/6755c2a89d00e159e3af8a102a34f5bf7ba70251", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6755c2a89d00e159e3af8a102a34f5bf7ba70251/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0938e1680daf66ca6aad428aedf9a920a0dab5ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/0938e1680daf66ca6aad428aedf9a920a0dab5ad", "html_url": "https://github.com/rust-lang/rust/commit/0938e1680daf66ca6aad428aedf9a920a0dab5ad"}, {"sha": "8b2c3ebb86b0f9a1d218daa0bd94096170233b74", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b2c3ebb86b0f9a1d218daa0bd94096170233b74", "html_url": "https://github.com/rust-lang/rust/commit/8b2c3ebb86b0f9a1d218daa0bd94096170233b74"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "4ed99df1e81697a8116474939642a20837a6f88d", "filename": "compiler/rustc_codegen_ssa/src/mir/rvalue.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6755c2a89d00e159e3af8a102a34f5bf7ba70251/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6755c2a89d00e159e3af8a102a34f5bf7ba70251/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs?ref=6755c2a89d00e159e3af8a102a34f5bf7ba70251", "patch": "@@ -14,6 +14,7 @@ use rustc_middle::ty::cast::{CastTy, IntTy};\n use rustc_middle::ty::layout::{HasTyCtxt, LayoutOf};\n use rustc_middle::ty::{self, adjustment::PointerCast, Instance, Ty, TyCtxt};\n use rustc_span::source_map::{Span, DUMMY_SP};\n+use rustc_target::abi::Size;\n \n impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n     #[instrument(level = \"trace\", skip(self, bx))]\n@@ -285,6 +286,14 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                                 bug!(\"Only valid to do a DynStar cast into a DynStar type\")\n                             };\n                         let vtable = get_vtable(bx.cx(), source.ty(self.mir, bx.tcx()), trait_ref);\n+                        let vtable = bx.pointercast(vtable, bx.cx().type_ptr_to(bx.cx().type_isize()));\n+                        // FIXME(dyn-star): this is probably not the best way to check if this is\n+                        // a pointer, and really we should ensure that the value is a suitable\n+                        // pointer earlier in the compilation process.\n+                        let data = match operand.layout.pointee_info_at(bx.cx(), Size::ZERO) {\n+                            Some(_) => bx.ptrtoint(data, bx.cx().type_isize()),\n+                            None => data,\n+                        };\n                         OperandValue::Pair(data, vtable)\n                     }\n                     mir::CastKind::Pointer("}, {"sha": "d1f1819d9f35f1e49f8fb9a1aa86b463f32e8458", "filename": "src/test/ui/dyn-star/box.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6755c2a89d00e159e3af8a102a34f5bf7ba70251/src%2Ftest%2Fui%2Fdyn-star%2Fbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6755c2a89d00e159e3af8a102a34f5bf7ba70251/src%2Ftest%2Fui%2Fdyn-star%2Fbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Fbox.rs?ref=6755c2a89d00e159e3af8a102a34f5bf7ba70251", "patch": "@@ -0,0 +1,17 @@\n+// run-pass\n+// compile-flags: -C opt-level=0\n+\n+#![feature(dyn_star)]\n+#![allow(incomplete_features)]\n+\n+use std::fmt::Display;\n+\n+fn make_dyn_star() -> dyn* Display {\n+    Box::new(42) as dyn* Display\n+}\n+\n+fn main() {\n+    let x = make_dyn_star();\n+\n+    println!(\"{x}\");\n+}"}]}