{"sha": "56533d9e872084454bb5dbfacb49df64f145fa9d", "node_id": "C_kwDOAAsO6NoAKDU2NTMzZDllODcyMDg0NDU0YmI1ZGJmYWNiNDlkZjY0ZjE0NWZhOWQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-10-20T20:38:10Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-11-28T20:09:45Z"}, "message": "Take a LocalDefId in expect_*item.", "tree": {"sha": "00070738301c0a3cf62af9962ee7c146c322dc92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00070738301c0a3cf62af9962ee7c146c322dc92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56533d9e872084454bb5dbfacb49df64f145fa9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56533d9e872084454bb5dbfacb49df64f145fa9d", "html_url": "https://github.com/rust-lang/rust/commit/56533d9e872084454bb5dbfacb49df64f145fa9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56533d9e872084454bb5dbfacb49df64f145fa9d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c8b644d0d7d6fcd56db2184d4b5622d9e50ca37", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c8b644d0d7d6fcd56db2184d4b5622d9e50ca37", "html_url": "https://github.com/rust-lang/rust/commit/3c8b644d0d7d6fcd56db2184d4b5622d9e50ca37"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "94b35ad88af2d605243fb06db7379633d43bb15b", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56533d9e872084454bb5dbfacb49df64f145fa9d/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56533d9e872084454bb5dbfacb49df64f145fa9d/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=56533d9e872084454bb5dbfacb49df64f145fa9d", "patch": "@@ -3,7 +3,6 @@ use clippy_utils::paths;\n use clippy_utils::ty::{implements_trait, is_copy};\n use clippy_utils::{get_trait_def_id, is_automatically_derived, is_lint_allowed, match_def_path};\n use if_chain::if_chain;\n-use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{walk_expr, walk_fn, walk_item, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::{\n     BlockCheckMode, BodyId, Expr, ExprKind, FnDecl, HirId, Impl, Item, ItemKind, TraitRef, UnsafeSource, Unsafety,\n@@ -343,11 +342,6 @@ fn check_unsafe_derive_deserialize<'tcx>(\n     trait_ref: &TraitRef<'_>,\n     ty: Ty<'tcx>,\n ) {\n-    fn item_from_def_id<'tcx>(cx: &LateContext<'tcx>, def_id: DefId) -> &'tcx Item<'tcx> {\n-        let hir_id = cx.tcx.hir().local_def_id_to_hir_id(def_id.expect_local());\n-        cx.tcx.hir().expect_item(hir_id)\n-    }\n-\n     fn has_unsafe<'tcx>(cx: &LateContext<'tcx>, item: &'tcx Item<'_>) -> bool {\n         let mut visitor = UnsafeVisitor { cx, has_unsafe: false };\n         walk_item(&mut visitor, item);\n@@ -363,7 +357,7 @@ fn check_unsafe_derive_deserialize<'tcx>(\n         if !is_lint_allowed(cx, UNSAFE_DERIVE_DESERIALIZE, adt_hir_id);\n         if cx.tcx.inherent_impls(def.did)\n             .iter()\n-            .map(|imp_did| item_from_def_id(cx, *imp_did))\n+            .map(|imp_did| cx.tcx.hir().expect_item(imp_did.expect_local()))\n             .any(|imp| has_unsafe(cx, imp));\n         then {\n             span_lint_and_help("}, {"sha": "e46739fea34beb1b70e1f8c0d6a68d5d834bc592", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56533d9e872084454bb5dbfacb49df64f145fa9d/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56533d9e872084454bb5dbfacb49df64f145fa9d/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=56533d9e872084454bb5dbfacb49df64f145fa9d", "patch": "@@ -1939,7 +1939,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n             return;\n         }\n         let name = impl_item.ident.name.as_str();\n-        let parent = cx.tcx.hir().get_parent_item(impl_item.hir_id());\n+        let parent = cx.tcx.hir().get_parent_did(impl_item.hir_id());\n         let item = cx.tcx.hir().expect_item(parent);\n         let self_ty = cx.tcx.type_of(item.def_id);\n "}, {"sha": "2ea97eb88f783558076b8655f62b0444723d4701", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56533d9e872084454bb5dbfacb49df64f145fa9d/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56533d9e872084454bb5dbfacb49df64f145fa9d/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=56533d9e872084454bb5dbfacb49df64f145fa9d", "patch": "@@ -279,8 +279,8 @@ impl<'tcx> LateLintPass<'tcx> for NonCopyConst {\n \n     fn check_impl_item(&mut self, cx: &LateContext<'tcx>, impl_item: &'tcx ImplItem<'_>) {\n         if let ImplItemKind::Const(hir_ty, body_id) = &impl_item.kind {\n-            let item_hir_id = cx.tcx.hir().get_parent_node(impl_item.hir_id());\n-            let item = cx.tcx.hir().expect_item(item_hir_id);\n+            let item_def_id = cx.tcx.hir().get_parent_did(impl_item.hir_id());\n+            let item = cx.tcx.hir().expect_item(item_def_id);\n \n             match &item.kind {\n                 ItemKind::Impl(Impl {"}, {"sha": "9390378d789cdddec8c5b27f5156843e7366169d", "filename": "clippy_lints/src/self_named_constructors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56533d9e872084454bb5dbfacb49df64f145fa9d/clippy_lints%2Fsrc%2Fself_named_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56533d9e872084454bb5dbfacb49df64f145fa9d/clippy_lints%2Fsrc%2Fself_named_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fself_named_constructors.rs?ref=56533d9e872084454bb5dbfacb49df64f145fa9d", "patch": "@@ -50,7 +50,7 @@ impl<'tcx> LateLintPass<'tcx> for SelfNamedConstructors {\n             _ => return,\n         }\n \n-        let parent = cx.tcx.hir().get_parent_item(impl_item.hir_id());\n+        let parent = cx.tcx.hir().get_parent_did(impl_item.hir_id());\n         let item = cx.tcx.hir().expect_item(parent);\n         let self_ty = cx.tcx.type_of(item.def_id);\n         let ret_ty = return_ty(cx, impl_item.hir_id());"}, {"sha": "c961f995667952343e846eeee07c36b68cb214a5", "filename": "clippy_lints/src/unused_self.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56533d9e872084454bb5dbfacb49df64f145fa9d/clippy_lints%2Fsrc%2Funused_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56533d9e872084454bb5dbfacb49df64f145fa9d/clippy_lints%2Fsrc%2Funused_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_self.rs?ref=56533d9e872084454bb5dbfacb49df64f145fa9d", "patch": "@@ -41,7 +41,7 @@ impl<'tcx> LateLintPass<'tcx> for UnusedSelf {\n         if impl_item.span.from_expansion() {\n             return;\n         }\n-        let parent = cx.tcx.hir().get_parent_item(impl_item.hir_id());\n+        let parent = cx.tcx.hir().get_parent_did(impl_item.hir_id());\n         let parent_item = cx.tcx.hir().expect_item(parent);\n         let assoc_item = cx.tcx.associated_item(impl_item.def_id);\n         if_chain! {"}]}