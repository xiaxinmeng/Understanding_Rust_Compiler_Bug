{"sha": "01da61a9bf1e1e7079bee0609ed944646c99c2a0", "node_id": "C_kwDOAAsO6NoAKDAxZGE2MWE5YmYxZTFlNzA3OWJlZTA2MDllZDk0NDY0NmM5OWMyYTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-03T12:20:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-03T12:20:53Z"}, "message": "Rollup merge of #101365 - matthiaskrgr:clones2, r=fee1-dead\n\nremove redundant clones", "tree": {"sha": "cd4cdf87c354eee7b8dc34a9f80eb7b816d981b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd4cdf87c354eee7b8dc34a9f80eb7b816d981b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01da61a9bf1e1e7079bee0609ed944646c99c2a0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjE0alCRBK7hj4Ov3rIwAAcfwIAAHD45/uoURuiDKEC7bjqR+F\npV/tulSFf5ur7hENtLiusbb4o5WE9GNO3sgsiBzmhyjn/EDm0pRl1uhoPBgEBpsH\nvSDPsQPBvVOzFHnp6vYdV1PEVBlD+f8SxB1Ph87aVNChJXKcEjvpEIaCppatCdN/\nt9Zv0/stSZCVgGksej+L+Bs1XH64SneCyY2bTGKzXe4nJbBD1nopO8NYM5pYd76D\nFz+vbcItzXihNo2+A6kYnGgnVPXowKBgG7mIAuDPnMWbP1KQrJoR5KbLWep6JjHx\nWYqZWIXo+Wp4fP/l29O4ysYYhqwuDa2Bz/uNwRbLgRxhgtPlmM9qnmbIGI+gy4Y=\n=NWE2\n-----END PGP SIGNATURE-----\n", "payload": "tree cd4cdf87c354eee7b8dc34a9f80eb7b816d981b4\nparent 3c2780cf16658c62371fd2a0047b5280a1a076fe\nparent 57198b549f20a63650113b11b806f535a9d35fbb\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1662207653 +0200\ncommitter GitHub <noreply@github.com> 1662207653 +0200\n\nRollup merge of #101365 - matthiaskrgr:clones2, r=fee1-dead\n\nremove redundant clones\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01da61a9bf1e1e7079bee0609ed944646c99c2a0", "html_url": "https://github.com/rust-lang/rust/commit/01da61a9bf1e1e7079bee0609ed944646c99c2a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01da61a9bf1e1e7079bee0609ed944646c99c2a0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c2780cf16658c62371fd2a0047b5280a1a076fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c2780cf16658c62371fd2a0047b5280a1a076fe", "html_url": "https://github.com/rust-lang/rust/commit/3c2780cf16658c62371fd2a0047b5280a1a076fe"}, {"sha": "57198b549f20a63650113b11b806f535a9d35fbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/57198b549f20a63650113b11b806f535a9d35fbb", "html_url": "https://github.com/rust-lang/rust/commit/57198b549f20a63650113b11b806f535a9d35fbb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2e58605cf19b00f431b93025dc5ff34a97aa79f9", "filename": "compiler/rustc_parse/src/parser/attr_wrapper.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01da61a9bf1e1e7079bee0609ed944646c99c2a0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fattr_wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01da61a9bf1e1e7079bee0609ed944646c99c2a0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fattr_wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fattr_wrapper.rs?ref=01da61a9bf1e1e7079bee0609ed944646c99c2a0", "patch": "@@ -52,7 +52,7 @@ impl AttrWrapper {\n     // Prepend `self.attrs` to `attrs`.\n     // FIXME: require passing an NT to prevent misuse of this method\n     pub(crate) fn prepend_to_nt_inner(self, attrs: &mut AttrVec) {\n-        let mut self_attrs = self.attrs.clone();\n+        let mut self_attrs = self.attrs;\n         std::mem::swap(attrs, &mut self_attrs);\n         attrs.extend(self_attrs);\n     }"}, {"sha": "5c0c023c64e58e92222ededbf2445acea15fb7c4", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01da61a9bf1e1e7079bee0609ed944646c99c2a0/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01da61a9bf1e1e7079bee0609ed944646c99c2a0/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=01da61a9bf1e1e7079bee0609ed944646c99c2a0", "patch": "@@ -486,7 +486,7 @@ impl FromWithTcx<clean::Type> for Type {\n             },\n             QPath(box clean::QPathData { assoc, self_type, trait_, .. }) => Type::QualifiedPath {\n                 name: assoc.name.to_string(),\n-                args: Box::new(assoc.args.clone().into_tcx(tcx)),\n+                args: Box::new(assoc.args.into_tcx(tcx)),\n                 self_type: Box::new(self_type.into_tcx(tcx)),\n                 trait_: trait_.into_tcx(tcx),\n             },"}]}