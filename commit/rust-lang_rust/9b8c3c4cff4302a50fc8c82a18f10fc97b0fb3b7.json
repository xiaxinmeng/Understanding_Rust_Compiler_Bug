{"sha": "9b8c3c4cff4302a50fc8c82a18f10fc97b0fb3b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliOGMzYzRjZmY0MzAyYTUwZmM4YzgyYTE4ZjEwZmM5N2IwZmIzYjc=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-01-16T21:13:58Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-01-16T21:13:58Z"}, "message": "[rustbuild] Rebuild std after changes to codegen backends\n\nUse `clear_if_dirty` on std for backend changes, just as we do for\nchanges to rustc itself, so new codegen is correctly applied to all\nlater compiler stages.\n\nFixes #48298.", "tree": {"sha": "e6ae684cfdbb953f6b6b36b874b9868607708b4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6ae684cfdbb953f6b6b36b874b9868607708b4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b8c3c4cff4302a50fc8c82a18f10fc97b0fb3b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b8c3c4cff4302a50fc8c82a18f10fc97b0fb3b7", "html_url": "https://github.com/rust-lang/rust/commit/9b8c3c4cff4302a50fc8c82a18f10fc97b0fb3b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b8c3c4cff4302a50fc8c82a18f10fc97b0fb3b7/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceb2512144d1fc26330e85fb9d41c22ba1866259", "url": "https://api.github.com/repos/rust-lang/rust/commits/ceb2512144d1fc26330e85fb9d41c22ba1866259", "html_url": "https://github.com/rust-lang/rust/commit/ceb2512144d1fc26330e85fb9d41c22ba1866259"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "31adab64f609d242cf5833a98ab67b031bbb9507", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9b8c3c4cff4302a50fc8c82a18f10fc97b0fb3b7/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b8c3c4cff4302a50fc8c82a18f10fc97b0fb3b7/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=9b8c3c4cff4302a50fc8c82a18f10fc97b0fb3b7", "patch": "@@ -660,6 +660,15 @@ impl<'a> Builder<'a> {\n         }\n     }\n \n+    /// Get the paths to all of the compiler's codegen backends.\n+    fn codegen_backends(&self, compiler: Compiler) -> impl Iterator<Item = PathBuf> {\n+        fs::read_dir(self.sysroot_codegen_backends(compiler))\n+            .into_iter()\n+            .flatten()\n+            .filter_map(Result::ok)\n+            .map(|entry| entry.path())\n+    }\n+\n     pub fn rustdoc(&self, host: Interned<String>) -> PathBuf {\n         self.ensure(tool::Rustdoc { host })\n     }\n@@ -750,6 +759,9 @@ impl<'a> Builder<'a> {\n             match mode {\n                 Mode::Std => {\n                     self.clear_if_dirty(&my_out, &self.rustc(compiler));\n+                    for backend in self.codegen_backends(compiler) {\n+                        self.clear_if_dirty(&my_out, &backend);\n+                    }\n                 },\n                 Mode::Test => {\n                     self.clear_if_dirty(&my_out, &libstd_stamp);"}]}