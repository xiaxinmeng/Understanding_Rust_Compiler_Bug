{"sha": "394ac1aae4d8b23b65a2165b2cf00c66936cd437", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NGFjMWFhZTRkOGIyM2I2NWEyMTY1YjJjZjAwYzY2OTM2Y2Q0Mzc=", "commit": {"author": {"name": "Philipp Br\u00fcschweiler", "email": "blei42@gmail.com", "date": "2013-06-03T11:31:43Z"}, "committer": {"name": "Philipp Br\u00fcschweiler", "email": "blei42@gmail.com", "date": "2013-06-03T11:31:43Z"}, "message": "resolve: don't resolve paths that point to non-static methods\n\nFixes #6698", "tree": {"sha": "2a7b9a012f0af8ae0d723aaaaebeed24e0f9a19a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a7b9a012f0af8ae0d723aaaaebeed24e0f9a19a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/394ac1aae4d8b23b65a2165b2cf00c66936cd437", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/394ac1aae4d8b23b65a2165b2cf00c66936cd437", "html_url": "https://github.com/rust-lang/rust/commit/394ac1aae4d8b23b65a2165b2cf00c66936cd437", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/394ac1aae4d8b23b65a2165b2cf00c66936cd437/comments", "author": {"login": "Blei", "id": 52674, "node_id": "MDQ6VXNlcjUyNjc0", "avatar_url": "https://avatars.githubusercontent.com/u/52674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Blei", "html_url": "https://github.com/Blei", "followers_url": "https://api.github.com/users/Blei/followers", "following_url": "https://api.github.com/users/Blei/following{/other_user}", "gists_url": "https://api.github.com/users/Blei/gists{/gist_id}", "starred_url": "https://api.github.com/users/Blei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Blei/subscriptions", "organizations_url": "https://api.github.com/users/Blei/orgs", "repos_url": "https://api.github.com/users/Blei/repos", "events_url": "https://api.github.com/users/Blei/events{/privacy}", "received_events_url": "https://api.github.com/users/Blei/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Blei", "id": 52674, "node_id": "MDQ6VXNlcjUyNjc0", "avatar_url": "https://avatars.githubusercontent.com/u/52674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Blei", "html_url": "https://github.com/Blei", "followers_url": "https://api.github.com/users/Blei/followers", "following_url": "https://api.github.com/users/Blei/following{/other_user}", "gists_url": "https://api.github.com/users/Blei/gists{/gist_id}", "starred_url": "https://api.github.com/users/Blei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Blei/subscriptions", "organizations_url": "https://api.github.com/users/Blei/orgs", "repos_url": "https://api.github.com/users/Blei/repos", "events_url": "https://api.github.com/users/Blei/events{/privacy}", "received_events_url": "https://api.github.com/users/Blei/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45441e046b5de6216fe799bdb4d2d49dfe1bb1d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/45441e046b5de6216fe799bdb4d2d49dfe1bb1d3", "html_url": "https://github.com/rust-lang/rust/commit/45441e046b5de6216fe799bdb4d2d49dfe1bb1d3"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "db98407cc55bb0d9476732843be2e0d14a0f44b8", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/394ac1aae4d8b23b65a2165b2cf00c66936cd437/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/394ac1aae4d8b23b65a2165b2cf00c66936cd437/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=394ac1aae4d8b23b65a2165b2cf00c66936cd437", "patch": "@@ -4595,7 +4595,7 @@ impl Resolver {\n         }\n \n         let name = *path.idents.last();\n-        match self.resolve_definition_of_name_in_module(containing_module,\n+        let def = match self.resolve_definition_of_name_in_module(containing_module,\n                                                         name,\n                                                         namespace,\n                                                         xray) {\n@@ -4604,9 +4604,28 @@ impl Resolver {\n                 return None;\n             }\n             ChildNameDefinition(def) | ImportNameDefinition(def) => {\n-                return Some(def);\n+                def\n             }\n-        }\n+        };\n+        match containing_module.kind {\n+            TraitModuleKind | ImplModuleKind => {\n+                match self.method_map.find(&name) {\n+                    Some(s) => {\n+                        match containing_module.def_id {\n+                            Some(def_id) if s.contains(&def_id) => {\n+                                debug!(\"containing module was a trait or impl \\\n+                                        and name was a method -> not resolved\");\n+                                return None;\n+                            },\n+                            _ => (),\n+                        }\n+                    },\n+                    None => (),\n+                }\n+            },\n+            _ => (),\n+        };\n+        return Some(def);\n     }\n \n     /// Invariant: This must be called only during main resolution, not during"}]}