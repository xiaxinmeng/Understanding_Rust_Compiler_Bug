{"sha": "6f838b4d4ad954eda685235b807cb6e5c44a8b14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmODM4YjRkNGFkOTU0ZWRhNjg1MjM1YjgwN2NiNmU1YzQ0YThiMTQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-06-27T12:30:57Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-06-28T07:41:05Z"}, "message": "ci: Move most builders to Azure Pipelines\n\nThis commit disables all builders on Travis and almost all builders on\nAppVeyor now that they're all running on Azure Pipelines. There is one\nremaining builder on AppVeyor which hasn't been migrated yet due to a\ntest failure on Azure, which we'll be debugging soon. One remaining\nbuilder is left on Travis which is the tools builder whenever a\nsubmodule is changed, but we'll probably turn that off soon since it's\njust for PRs.\n\nThe other major change in this PR is that the auto builders on Azure are\nnow configured with \"real\" prod credentials which should cause them to\npublish all artifacts into the official CI buckets.", "tree": {"sha": "11de08eac9fb6fb6ad3cee3b3a3a4d95af185ce6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11de08eac9fb6fb6ad3cee3b3a3a4d95af185ce6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f838b4d4ad954eda685235b807cb6e5c44a8b14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f838b4d4ad954eda685235b807cb6e5c44a8b14", "html_url": "https://github.com/rust-lang/rust/commit/6f838b4d4ad954eda685235b807cb6e5c44a8b14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f838b4d4ad954eda685235b807cb6e5c44a8b14/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6b5d229c1ddd7659af82109377aa8a3568f68a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6b5d229c1ddd7659af82109377aa8a3568f68a1", "html_url": "https://github.com/rust-lang/rust/commit/a6b5d229c1ddd7659af82109377aa8a3568f68a1"}], "stats": {"total": 374, "additions": 4, "deletions": 370}, "files": [{"sha": "8035feeeefb9764137f78223d740226b1450ef3f", "filename": ".azure-pipelines/auto.yml", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6f838b4d4ad954eda685235b807cb6e5c44a8b14/.azure-pipelines%2Fauto.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6f838b4d4ad954eda685235b807cb6e5c44a8b14/.azure-pipelines%2Fauto.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Fauto.yml?ref=6f838b4d4ad954eda685235b807cb6e5c44a8b14", "patch": "@@ -7,7 +7,7 @@ trigger:\n   - auto\n \n variables:\n-- group: prod-credentials\n+- group: real-prod-credentials\n \n jobs:\n - job: Linux\n@@ -138,8 +138,9 @@ jobs:\n         IMAGE: x86_64-gnu-full-bootstrap\n       x86_64-gnu-aux:\n         IMAGE: x86_64-gnu-aux\n-      x86_64-gnu-tools:\n-        IMAGE: x86_64-gnu-tools\n+        # FIXME: needs reenabling here rather than Travis\n+      # x86_64-gnu-tools:\n+      #   IMAGE: x86_64-gnu-tools\n       x86_64-gnu-debug:\n         IMAGE: x86_64-gnu-debug\n       x86_64-gnu-nopt:"}, {"sha": "ec90dd3c8fbcc6d0f507332876345f555f3ea25d", "filename": ".travis.yml", "status": "modified", "additions": 0, "deletions": 206, "changes": 206, "blob_url": "https://github.com/rust-lang/rust/blob/6f838b4d4ad954eda685235b807cb6e5c44a8b14/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6f838b4d4ad954eda685235b807cb6e5c44a8b14/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=6f838b4d4ad954eda685235b807cb6e5c44a8b14", "patch": "@@ -19,215 +19,9 @@ env:\n matrix:\n   fast_finish: true\n   include:\n-    # Images used in testing PR and try-build should be run first.\n-    - env: IMAGE=x86_64-gnu-llvm-6.0 RUST_BACKTRACE=1\n-      name: x86_64-gnu-llvm-6.0\n-      if: branch = auto\n-\n-    - env: IMAGE=dist-x86_64-linux DEPLOY=1\n-      name: dist-x86_64-linux\n-      if: branch = auto\n-\n-    # \"alternate\" deployments, these are \"nightlies\" but have LLVM assertions\n-    # turned on, they're deployed to a different location primarily for\n-    # additional testing.\n-    - env: IMAGE=dist-x86_64-linux DEPLOY_ALT=1\n-      name: dist-x86_64-linux-alt\n-      if: branch = auto\n-\n-    - env: >\n-        SCRIPT=\"./x.py dist\"\n-        RUST_CONFIGURE_ARGS=\"--enable-extended --enable-profiler --enable-lldb --set rust.jemalloc\"\n-        SRC=.\n-        DEPLOY_ALT=1\n-        RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n-        MACOSX_DEPLOYMENT_TARGET=10.7\n-        NO_LLVM_ASSERTIONS=1\n-        NO_DEBUG_ASSERTIONS=1\n-      os: osx\n-      osx_image: xcode9.3-moar\n-      name: dist-x86_64-apple-alt\n-      if: branch = auto\n-\n-    # macOS builders. These are placed near the beginning because they are very\n-    # slow to run.\n-\n-    # OSX builders running tests, these run the full test suite.\n-    # NO_DEBUG_ASSERTIONS=1 to make them go faster, but also do have some\n-    # runners that run `//ignore-debug` tests.\n-    #\n-    # Note that the compiler is compiled to target 10.8 here because the Xcode\n-    # version that we're using, 8.2, cannot compile LLVM for OSX 10.7.\n-    - env: >\n-        SCRIPT=\"./x.py test\"\n-        RUST_CONFIGURE_ARGS=\"--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n-        SRC=.\n-        RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n-        MACOSX_DEPLOYMENT_TARGET=10.8\n-        MACOSX_STD_DEPLOYMENT_TARGET=10.7\n-        NO_LLVM_ASSERTIONS=1\n-        NO_DEBUG_ASSERTIONS=1\n-      os: osx\n-      osx_image: xcode9.3-moar\n-      name: x86_64-apple\n-      if: branch = auto\n-\n-    - env: >\n-        SCRIPT=\"./x.py test\"\n-        RUST_CONFIGURE_ARGS=\"--build=i686-apple-darwin --set rust.jemalloc\"\n-        SRC=.\n-        RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n-        MACOSX_DEPLOYMENT_TARGET=10.8\n-        MACOSX_STD_DEPLOYMENT_TARGET=10.7\n-        NO_LLVM_ASSERTIONS=1\n-        NO_DEBUG_ASSERTIONS=1\n-      os: osx\n-      osx_image: xcode9.3-moar\n-      name: i686-apple\n-      if: branch = auto\n-\n-    # OSX builders producing releases. These do not run the full test suite and\n-    # just produce a bunch of artifacts.\n-    #\n-    # Note that these are running in the `xcode7` image instead of the\n-    # `xcode8.2` image as above. That's because we want to build releases for\n-    # OSX 10.7 and `xcode7` is the latest Xcode able to compile LLVM for 10.7.\n-    - env: >\n-        SCRIPT=\"./x.py dist\"\n-        RUST_CONFIGURE_ARGS=\"--build=i686-apple-darwin --enable-full-tools --enable-profiler --enable-lldb --set rust.jemalloc\"\n-        SRC=.\n-        DEPLOY=1\n-        RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n-        MACOSX_DEPLOYMENT_TARGET=10.7\n-        NO_LLVM_ASSERTIONS=1\n-        NO_DEBUG_ASSERTIONS=1\n-        DIST_REQUIRE_ALL_TOOLS=1\n-      os: osx\n-      osx_image: xcode9.3-moar\n-      name: dist-i686-apple\n-      if: branch = auto\n-\n-    - env: >\n-        SCRIPT=\"./x.py dist\"\n-        RUST_CONFIGURE_ARGS=\"--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --enable-lldb --set rust.jemalloc\"\n-        SRC=.\n-        DEPLOY=1\n-        RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n-        MACOSX_DEPLOYMENT_TARGET=10.7\n-        NO_LLVM_ASSERTIONS=1\n-        NO_DEBUG_ASSERTIONS=1\n-        DIST_REQUIRE_ALL_TOOLS=1\n-      os: osx\n-      osx_image: xcode9.3-moar\n-      name: dist-x86_64-apple\n-      if: branch = auto\n-\n-    # Linux builders, remaining docker images\n-    - env: IMAGE=arm-android\n-      name: arm-android\n-      if: branch = auto\n-    - env: IMAGE=armhf-gnu\n-      name: armhf-gnu\n-      if: branch = auto\n-    - env: IMAGE=dist-various-1 DEPLOY=1\n-      name: dist-various-1\n-      if: branch = auto\n-    - env: IMAGE=dist-various-2 DEPLOY=1\n-      name: dist-various-2\n-      if: branch = auto\n-    - env: IMAGE=dist-aarch64-linux DEPLOY=1\n-      name: dist-aarch64-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-android DEPLOY=1\n-      name: dist-android\n-      if: branch = auto\n-    - env: IMAGE=dist-arm-linux DEPLOY=1\n-      name: dist-arm-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-armhf-linux DEPLOY=1\n-      name: dist-armhf-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-armv7-linux DEPLOY=1\n-      name: dist-armv7-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-i586-gnu-i586-i686-musl DEPLOY=1\n-      name: dist-i586-gnu-i586-i686-musl\n-      if: branch = auto\n-    - env: IMAGE=dist-i686-freebsd DEPLOY=1\n-      name: dist-i686-freebsd\n-      if: branch = auto\n-    - env: IMAGE=dist-i686-linux DEPLOY=1\n-      name: dist-i686-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-mips-linux DEPLOY=1\n-      name: dist-mips-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-mips64-linux DEPLOY=1\n-      name: dist-mips64-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-mips64el-linux DEPLOY=1\n-      name: dist-mips64el-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-mipsel-linux DEPLOY=1\n-      name: dist-mipsel-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-powerpc-linux DEPLOY=1\n-      name: dist-powerpc-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-powerpc64-linux DEPLOY=1\n-      name: dist-powerpc64-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-powerpc64le-linux DEPLOY=1\n-      name: dist-powerpc64le-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-s390x-linux DEPLOY=1\n-      name: dist-s390x-linux\n-      if: branch = auto\n-    - env: IMAGE=dist-x86_64-freebsd DEPLOY=1\n-      name: dist-x86_64-freebsd\n-      if: branch = auto\n-    - env: IMAGE=dist-x86_64-musl DEPLOY=1\n-      name: dist-x86_64-musl\n-      if: branch = auto\n-    - env: IMAGE=dist-x86_64-netbsd DEPLOY=1\n-      name: dist-x86_64-netbsd\n-      if: branch = auto\n-    - env: IMAGE=asmjs\n-      name: asmjs\n-      if: branch = auto\n-    - env: IMAGE=i686-gnu\n-      name: i686-gnu\n-      if: branch = auto\n-    - env: IMAGE=i686-gnu-nopt\n-      name: i686-gnu-nopt\n-      if: branch = auto\n-    - env: IMAGE=test-various\n-      name: test-various\n-      if: branch = auto\n-    - env: IMAGE=x86_64-gnu\n-      name: x86_64-gnu\n-      if: branch = auto\n-    - env: IMAGE=x86_64-gnu-full-bootstrap\n-      name: x86_64-gnu-full-bootstrap\n-      if: branch = auto\n-    - env: IMAGE=x86_64-gnu-aux\n-      name: x86_64-gnu-aux\n-      if: branch = auto\n     - env: IMAGE=x86_64-gnu-tools\n       name: x86_64-gnu-tools\n       if: branch = auto OR (type = pull_request AND commit_message =~ /(?i:^update.*\\b(rls|rustfmt|clippy|miri|cargo)\\b)/)\n-    - env: IMAGE=x86_64-gnu-debug\n-      name: x86_64-gnu-debug\n-      if: branch = auto\n-    - env: IMAGE=x86_64-gnu-nopt\n-      name: x86_64-gnu-nopt\n-      if: branch = auto\n-    - env: IMAGE=x86_64-gnu-distcheck\n-      name: x86_64-gnu-distcheck\n-      if: branch = auto\n-    - env: IMAGE=mingw-check\n-      name: mingw-check\n-      if: branch = auto\n \n before_install:\n   # We'll use the AWS cli to download/upload cached docker layers as well as"}, {"sha": "ee1511a0394d4f8dd50935fd29f9d65ddc20bf9e", "filename": "appveyor.yml", "status": "modified", "additions": 0, "deletions": 161, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/6f838b4d4ad954eda685235b807cb6e5c44a8b14/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6f838b4d4ad954eda685235b807cb6e5c44a8b14/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=6f838b4d4ad954eda685235b807cb6e5c44a8b14", "patch": "@@ -9,125 +9,12 @@ environment:\n   CARGO_HTTP_CHECK_REVOKE: false\n \n   matrix:\n-  # 32/64 bit MSVC tests\n-  - CI_JOB_NAME: x86_64-msvc\n-    MSYS_BITS: 64\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-profiler\n-    SCRIPT: python x.py test\n-    # FIXME(#59637)\n-    NO_DEBUG_ASSERTIONS: 1\n-    NO_LLVM_ASSERTIONS: 1\n-  - CI_JOB_NAME: i686-msvc-1\n-    MSYS_BITS: 32\n-    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n-    SCRIPT: make ci-subset-1\n-  - CI_JOB_NAME: i686-msvc-2\n-    MSYS_BITS: 32\n-    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n-    SCRIPT: make ci-subset-2\n-\n-  # MSVC aux tests\n-  - CI_JOB_NAME: x86_64-msvc-aux\n-    MSYS_BITS: 64\n-    RUST_CHECK_TARGET: check-aux EXCLUDE_CARGO=1\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n-  - CI_JOB_NAME: x86_64-msvc-cargo\n-    MSYS_BITS: 64\n-    SCRIPT: python x.py test src/tools/cargotest src/tools/cargo\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n-\n   # MSVC tools tests\n   - CI_JOB_NAME: x86_64-msvc-tools\n     MSYS_BITS: 64\n     SCRIPT: src/ci/docker/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstates.json windows\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstates.json --enable-test-miri\n \n-  # 32/64-bit MinGW builds.\n-  #\n-  # We are using MinGW with posix threads since LLVM does not compile with\n-  # the win32 threads version due to missing support for C++'s std::thread.\n-  #\n-  # Instead of relying on the MinGW version installed on appveryor we download\n-  # and install one ourselves so we won't be surprised by changes to appveyor's\n-  # build image.\n-  #\n-  # Finally, note that the downloads below are all in the `rust-lang-ci` S3\n-  # bucket, but they cleraly didn't originate there! The downloads originally\n-  # came from the mingw-w64 SourceForge download site. Unfortunately\n-  # SourceForge is notoriously flaky, so we mirror it on our own infrastructure.\n-  - CI_JOB_NAME: i686-mingw-1\n-    MSYS_BITS: 32\n-    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n-    SCRIPT: make ci-subset-1\n-    MINGW_URL: https://rust-lang-ci2.s3.amazonaws.com/rust-ci-mirror\n-    MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\n-    MINGW_DIR: mingw32\n-    # FIXME(#59637)\n-    NO_DEBUG_ASSERTIONS: 1\n-    NO_LLVM_ASSERTIONS: 1\n-  - CI_JOB_NAME: i686-mingw-2\n-    MSYS_BITS: 32\n-    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n-    SCRIPT: make ci-subset-2\n-    MINGW_URL: https://rust-lang-ci2.s3.amazonaws.com/rust-ci-mirror\n-    MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\n-    MINGW_DIR: mingw32\n-  - CI_JOB_NAME: x86_64-mingw\n-    MSYS_BITS: 64\n-    SCRIPT: python x.py test\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n-    MINGW_URL: https://rust-lang-ci2.s3.amazonaws.com/rust-ci-mirror\n-    MINGW_ARCHIVE: x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z\n-    MINGW_DIR: mingw64\n-    # FIXME(#59637)\n-    NO_DEBUG_ASSERTIONS: 1\n-    NO_LLVM_ASSERTIONS: 1\n-\n-  # 32/64 bit MSVC and GNU deployment\n-  - CI_JOB_NAME: dist-x86_64-msvc\n-    RUST_CONFIGURE_ARGS: >\n-      --build=x86_64-pc-windows-msvc\n-      --target=x86_64-pc-windows-msvc,aarch64-pc-windows-msvc\n-      --enable-full-tools\n-      --enable-profiler\n-    SCRIPT: python x.py dist\n-    DIST_REQUIRE_ALL_TOOLS: 1\n-    DEPLOY: 1\n-  - CI_JOB_NAME: dist-i686-msvc\n-    RUST_CONFIGURE_ARGS: >\n-      --build=i686-pc-windows-msvc\n-      --target=i586-pc-windows-msvc\n-      --enable-full-tools\n-      --enable-profiler\n-    SCRIPT: python x.py dist\n-    DIST_REQUIRE_ALL_TOOLS: 1\n-    DEPLOY: 1\n-  - CI_JOB_NAME: dist-i686-mingw\n-    MSYS_BITS: 32\n-    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-full-tools --enable-profiler\n-    SCRIPT: python x.py dist\n-    MINGW_URL: https://rust-lang-ci2.s3.amazonaws.com/rust-ci-mirror\n-    MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\n-    MINGW_DIR: mingw32\n-    DIST_REQUIRE_ALL_TOOLS: 1\n-    DEPLOY: 1\n-  - CI_JOB_NAME: dist-x86_64-mingw\n-    MSYS_BITS: 64\n-    SCRIPT: python x.py dist\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-full-tools --enable-profiler\n-    MINGW_URL: https://rust-lang-ci2.s3.amazonaws.com/rust-ci-mirror\n-    MINGW_ARCHIVE: x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z\n-    MINGW_DIR: mingw64\n-    DIST_REQUIRE_ALL_TOOLS: 1\n-    DEPLOY: 1\n-\n-  # \"alternate\" deployment, see .travis.yml for more info\n-  - CI_JOB_NAME: dist-x86_64-msvc-alt\n-    MSYS_BITS: 64\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\n-    SCRIPT: python x.py dist\n-    DEPLOY_ALT: 1\n-\n matrix:\n   fast_finish: true\n \n@@ -222,54 +109,6 @@ test_script:\n   - set NO_CCACHE=1\n   - sh src/ci/run.sh\n \n-on_failure:\n-  # Dump crash log\n-  - set PATH=%PATH%;\"C:\\Program Files (x86)\\Windows Kits\\10\\Debuggers\\X64\"\n-  - if exist %LOCALAPPDATA%\\CrashDumps for %%f in (%LOCALAPPDATA%\\CrashDumps\\*) do cdb -c \"k;q\" -G -z \"%%f\"\n-\n branches:\n   only:\n     - auto\n-\n-before_deploy:\n-  - ps: |\n-        New-Item -Path deploy -ItemType directory\n-        Remove-Item -Recurse -Force build\\dist\\doc\n-        Get-ChildItem -Path build\\dist | Move-Item -Destination deploy\n-        Get-ChildItem -Path deploy | Foreach-Object {\n-          Push-AppveyorArtifact $_.FullName -FileName ${env:APPVEYOR_REPO_COMMIT}/$_\n-        }\n-\n-deploy:\n-  - provider: S3\n-    access_key_id: $(AWS_ACCESS_KEY_ID)\n-    secret_access_key: $(AWS_SECRET_ACCESS_KEY)\n-    bucket: rust-lang-ci2\n-    set_public: true\n-    region: us-west-1\n-    artifact: /.*/\n-    folder: rustc-builds\n-    on:\n-      branch: auto\n-      DEPLOY: 1\n-    max_error_retry: 5\n-\n-  # This provider is the same as the one above except that it has a slightly\n-  # different upload directory and a slightly different trigger\n-  - provider: S3\n-    access_key_id: $(AWS_ACCESS_KEY_ID)\n-    secret_access_key: $(AWS_SECRET_ACCESS_KEY)\n-    bucket: rust-lang-ci2\n-    set_public: true\n-    region: us-west-1\n-    artifact: /.*/\n-    folder: rustc-builds-alt\n-    on:\n-      branch: auto\n-      DEPLOY_ALT: 1\n-    max_error_retry: 5\n-\n-# init:\n-#   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))\n-# on_finish:\n-#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))"}]}