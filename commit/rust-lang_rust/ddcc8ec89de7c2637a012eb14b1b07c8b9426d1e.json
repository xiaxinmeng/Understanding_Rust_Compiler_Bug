{"sha": "ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkY2M4ZWM4OWRlN2MyNjM3YTAxMmViMTRiMWIwN2M4Yjk0MjZkMWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-08T21:10:37Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-18T14:08:25Z"}, "message": "move Directory -> parser::module", "tree": {"sha": "1bb245a1bccf07b0d66a391aa941a8a9f3cd703c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bb245a1bccf07b0d66a391aa941a8a9f3cd703c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e", "html_url": "https://github.com/rust-lang/rust/commit/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1ca9969bfb1a69e98dab6ff0413e099532f57f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ca9969bfb1a69e98dab6ff0413e099532f57f2", "html_url": "https://github.com/rust-lang/rust/commit/f1ca9969bfb1a69e98dab6ff0413e099532f57f2"}], "stats": {"total": 47, "additions": 24, "deletions": 23}, "files": [{"sha": "315a1c950d8a6704004beffe8961c8880459cf4d", "filename": "src/librustc_expand/base.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e/src%2Flibrustc_expand%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e/src%2Flibrustc_expand%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbase.rs?ref=ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e", "patch": "@@ -10,7 +10,8 @@ use rustc_attr::{self as attr, Deprecation, HasAttrs, Stability};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::{self, Lrc};\n use rustc_errors::{DiagnosticBuilder, DiagnosticId};\n-use rustc_parse::{self, parser, DirectoryOwnership, MACRO_ARGUMENTS};\n+use rustc_parse::parser::module::DirectoryOwnership;\n+use rustc_parse::{self, parser, MACRO_ARGUMENTS};\n use rustc_session::parse::ParseSess;\n use rustc_span::edition::Edition;\n use rustc_span::hygiene::{AstPass, ExpnData, ExpnId, ExpnKind};"}, {"sha": "46f10ca361440047f76b0013d0df76cf46c433a9", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e", "patch": "@@ -18,10 +18,11 @@ use rustc_attr::{self as attr, is_builtin_attr, HasAttrs};\n use rustc_errors::{Applicability, FatalError, PResult};\n use rustc_feature::Features;\n use rustc_parse::configure;\n-use rustc_parse::parser::module::{parse_external_mod, push_directory};\n+use rustc_parse::parser::module::{\n+    parse_external_mod, push_directory, Directory, DirectoryOwnership,\n+};\n use rustc_parse::parser::Parser;\n use rustc_parse::validate_attr;\n-use rustc_parse::{Directory, DirectoryOwnership};\n use rustc_session::lint::builtin::UNUSED_DOC_COMMENTS;\n use rustc_session::lint::BuiltinLintDiagnostics;\n use rustc_session::parse::{feature_err, ParseSess};"}, {"sha": "70aa8c0074ae9e64b8cd16936df2805415eb40b5", "filename": "src/librustc_parse/lib.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e/src%2Flibrustc_parse%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e/src%2Flibrustc_parse%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flib.rs?ref=ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e", "patch": "@@ -14,7 +14,7 @@ use rustc_errors::{Diagnostic, FatalError, Level, PResult};\n use rustc_session::parse::ParseSess;\n use rustc_span::{FileName, SourceFile, Span};\n \n-use std::path::{Path, PathBuf};\n+use std::path::Path;\n use std::str;\n \n use log::info;\n@@ -29,22 +29,6 @@ pub mod validate_attr;\n #[macro_use]\n pub mod config;\n \n-#[derive(Clone)]\n-pub struct Directory {\n-    pub path: PathBuf,\n-    pub ownership: DirectoryOwnership,\n-}\n-\n-#[derive(Copy, Clone)]\n-pub enum DirectoryOwnership {\n-    Owned {\n-        // None if `mod.rs`, `Some(\"foo\")` if we're in `foo.rs`.\n-        relative: Option<ast::Ident>,\n-    },\n-    UnownedViaBlock,\n-    UnownedViaMod,\n-}\n-\n // A bunch of utility functions of the form `parse_<thing>_from_<source>`\n // where <thing> includes crate, expr, item, stmt, tts, and one that\n // uses a HOF to parse anything, and <source> includes file and"}, {"sha": "e45a26bd441a5992beab021b0a612d5d55f5868d", "filename": "src/librustc_parse/parser/module.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmodule.rs?ref=ddcc8ec89de7c2637a012eb14b1b07c8b9426d1e", "patch": "@@ -1,15 +1,30 @@\n-use crate::{new_sub_parser_from_file, Directory, DirectoryOwnership};\n+use crate::new_sub_parser_from_file;\n \n use rustc_ast::ast::{self, Attribute, Ident, Mod};\n-use rustc_ast::attr;\n-use rustc_ast::token;\n+use rustc_ast::{attr, token};\n use rustc_errors::{struct_span_err, PResult};\n use rustc_session::parse::ParseSess;\n use rustc_span::source_map::{FileName, Span};\n use rustc_span::symbol::sym;\n \n use std::path::{self, Path, PathBuf};\n \n+#[derive(Clone)]\n+pub struct Directory {\n+    pub path: PathBuf,\n+    pub ownership: DirectoryOwnership,\n+}\n+\n+#[derive(Copy, Clone)]\n+pub enum DirectoryOwnership {\n+    Owned {\n+        // None if `mod.rs`, `Some(\"foo\")` if we're in `foo.rs`.\n+        relative: Option<ast::Ident>,\n+    },\n+    UnownedViaBlock,\n+    UnownedViaMod,\n+}\n+\n /// Information about the path to a module.\n // Public for rustfmt usage.\n pub struct ModulePath<'a> {"}]}