{"sha": "4e3f0186d87e1be85bdc1e0bc3074147715e46c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlM2YwMTg2ZDg3ZTFiZTg1YmRjMWUwYmMzMDc0MTQ3NzE1ZTQ2YzM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-08T11:14:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-08T11:14:24Z"}, "message": "Merge #8764\n\n8764: internal: add rust-analyzer version to panic context r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "7b8836ce4318cae86e4a012c4fc716cfc3ab33b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b8836ce4318cae86e4a012c4fc716cfc3ab33b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e3f0186d87e1be85bdc1e0bc3074147715e46c3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJglnKQCRBK7hj4Ov3rIwAAIRcIAItR4WJ69CTVsZjYkYrqgKhP\nrAy0l/gta0qRBWSgxK31VT3+jrp3/XGT9aSON5/Opu1jA+pv0VoYPBmZtSRLGW79\nrTj35i6QBqbi1zlfGB8Toe1K9JRyHAH5/0XNYYMecm4xLjuAAkm3k4TXMBl5zC4t\ninM8SZ96pVQe5KSJLKdNVhl6R0KsfcbYajpcue2HEBE5Si9O7sZDUSLAM/B6PVgo\nkKcUPvR43NtIxA0sQVuM3pMj1i0Ajt+b2dC1MzCaXK7EgQOmVzmwg45FM5zgXLSO\n9MFsN68MiEwzC2Wh0pZgYiPMB8D4AhXokExGkANPx4MYMbAngd4+nlz1SxZ8aY0=\n=V1cc\n-----END PGP SIGNATURE-----\n", "payload": "tree 7b8836ce4318cae86e4a012c4fc716cfc3ab33b5\nparent d43b3bfecbc0fe2ed37a93faf58906e08da6b9e8\nparent f015429c82c2d09a66102e8a21a9553a4fe85cf1\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1620472464 +0000\ncommitter GitHub <noreply@github.com> 1620472464 +0000\n\nMerge #8764\n\n8764: internal: add rust-analyzer version to panic context r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e3f0186d87e1be85bdc1e0bc3074147715e46c3", "html_url": "https://github.com/rust-lang/rust/commit/4e3f0186d87e1be85bdc1e0bc3074147715e46c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e3f0186d87e1be85bdc1e0bc3074147715e46c3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d43b3bfecbc0fe2ed37a93faf58906e08da6b9e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d43b3bfecbc0fe2ed37a93faf58906e08da6b9e8", "html_url": "https://github.com/rust-lang/rust/commit/d43b3bfecbc0fe2ed37a93faf58906e08da6b9e8"}, {"sha": "f015429c82c2d09a66102e8a21a9553a4fe85cf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f015429c82c2d09a66102e8a21a9553a4fe85cf1", "html_url": "https://github.com/rust-lang/rust/commit/f015429c82c2d09a66102e8a21a9553a4fe85cf1"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "baf2199d94f0e5b968445c2ac4c4f3fcd26c343c", "filename": "crates/rust-analyzer/src/dispatch.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4e3f0186d87e1be85bdc1e0bc3074147715e46c3/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e3f0186d87e1be85bdc1e0bc3074147715e46c3/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs?ref=4e3f0186d87e1be85bdc1e0bc3074147715e46c3", "patch": "@@ -33,7 +33,12 @@ impl<'a> RequestDispatcher<'a> {\n         let world = panic::AssertUnwindSafe(&mut *self.global_state);\n \n         let response = panic::catch_unwind(move || {\n-            let _pctx = stdx::panic_context::enter(format!(\"request: {} {:#?}\", R::METHOD, params));\n+            let _pctx = stdx::panic_context::enter(format!(\n+                \"\\nversion: {}\\nrequest: {} {:#?}\",\n+                env!(\"REV\"),\n+                R::METHOD,\n+                params\n+            ));\n             let result = f(world.0, params);\n             result_to_response::<R>(id, result)\n         })\n@@ -61,8 +66,12 @@ impl<'a> RequestDispatcher<'a> {\n             let world = self.global_state.snapshot();\n \n             move || {\n-                let _pctx =\n-                    stdx::panic_context::enter(format!(\"request: {} {:#?}\", R::METHOD, params));\n+                let _pctx = stdx::panic_context::enter(format!(\n+                    \"\\nversion: {}\\nrequest: {} {:#?}\",\n+                    env!(\"REV\"),\n+                    R::METHOD,\n+                    params\n+                ));\n                 let result = f(world, params);\n                 Task::Response(result_to_response::<R>(id, result))\n             }\n@@ -166,7 +175,11 @@ impl<'a> NotificationDispatcher<'a> {\n                 return Ok(self);\n             }\n         };\n-        let _pctx = stdx::panic_context::enter(format!(\"notification: {}\", N::METHOD));\n+        let _pctx = stdx::panic_context::enter(format!(\n+            \"\\nversion: {}\\nnotification: {}\",\n+            env!(\"REV\"),\n+            N::METHOD\n+        ));\n         f(self.global_state, params)?;\n         Ok(self)\n     }"}]}