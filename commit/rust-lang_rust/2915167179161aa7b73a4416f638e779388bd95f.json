{"sha": "2915167179161aa7b73a4416f638e779388bd95f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MTUxNjcxNzkxNjFhYTdiNzNhNDQxNmY2MzhlNzc5Mzg4YmQ5NWY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-19T02:41:50Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-19T02:41:50Z"}, "message": "Cargo fmt and update tests", "tree": {"sha": "8720e2a6d9930d7240e5af08d1fa4d5ba7f1c73b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8720e2a6d9930d7240e5af08d1fa4d5ba7f1c73b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2915167179161aa7b73a4416f638e779388bd95f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2915167179161aa7b73a4416f638e779388bd95f", "html_url": "https://github.com/rust-lang/rust/commit/2915167179161aa7b73a4416f638e779388bd95f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2915167179161aa7b73a4416f638e779388bd95f/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b12fecb6317949a3d51dc1339c3fa0d0f0dae57d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b12fecb6317949a3d51dc1339c3fa0d0f0dae57d", "html_url": "https://github.com/rust-lang/rust/commit/b12fecb6317949a3d51dc1339c3fa0d0f0dae57d"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "a131038eb4e1d7dea9db5f8f4296460479576d6b", "filename": "src/file_lines.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2915167179161aa7b73a4416f638e779388bd95f/src%2Ffile_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2915167179161aa7b73a4416f638e779388bd95f/src%2Ffile_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffile_lines.rs?ref=2915167179161aa7b73a4416f638e779388bd95f", "patch": "@@ -167,9 +167,7 @@ impl FileLines {\n }\n \n /// `FileLines` files iterator.\n-pub struct Files<'a>(\n-    Option<::std::collections::hash_map::Keys<'a, String, Vec<Range>>>,\n-);\n+pub struct Files<'a>(Option<::std::collections::hash_map::Keys<'a, String, Vec<Range>>>);\n \n impl<'a> iter::Iterator for Files<'a> {\n     type Item = &'a String;"}, {"sha": "ad813f6b98ae5ae3baf661f6a8b2779a7a92785c", "filename": "tests/source/configs-fn_call_style-block-trailing-comma.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2915167179161aa7b73a4416f638e779388bd95f/tests%2Fsource%2Fconfigs-fn_call_style-block-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2915167179161aa7b73a4416f638e779388bd95f/tests%2Fsource%2Fconfigs-fn_call_style-block-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_style-block-trailing-comma.rs?ref=2915167179161aa7b73a4416f638e779388bd95f", "patch": "@@ -4,5 +4,5 @@\n // rustfmt should not add trailing comma when rewriting macro. See #1528.\n fn a() {\n     panic!(\"this is a long string that goes past the maximum line length causing rustfmt to insert a comma here:\");\n-    foo(oooptoptoptoptptooptoptoptoptptooptoptoptoptptoptoptoptoptpt());\n+    foo(a, oooptoptoptoptptooptoptoptoptptooptoptoptoptptoptoptoptoptpt());\n }"}, {"sha": "4405f89f2afe64a74eab41129a7926aef887e4ba", "filename": "tests/target/configs-fn_call_style-block-trailing-comma.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2915167179161aa7b73a4416f638e779388bd95f/tests%2Ftarget%2Fconfigs-fn_call_style-block-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2915167179161aa7b73a4416f638e779388bd95f/tests%2Ftarget%2Fconfigs-fn_call_style-block-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_style-block-trailing-comma.rs?ref=2915167179161aa7b73a4416f638e779388bd95f", "patch": "@@ -7,6 +7,7 @@ fn a() {\n         \"this is a long string that goes past the maximum line length causing rustfmt to insert a comma here:\"\n     );\n     foo(\n+        a,\n         oooptoptoptoptptooptoptoptoptptooptoptoptoptptoptoptoptoptpt(),\n     );\n }"}, {"sha": "d2a39b241e1f6d816f3f030cf3879bf7a181bcdc", "filename": "tests/target/enum.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2915167179161aa7b73a4416f638e779388bd95f/tests%2Ftarget%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2915167179161aa7b73a4416f638e779388bd95f/tests%2Ftarget%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fenum.rs?ref=2915167179161aa7b73a4416f638e779388bd95f", "patch": "@@ -170,10 +170,6 @@ enum Loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n \n // #1046\n pub enum Entry<'a, K: 'a, V: 'a> {\n-    Vacant(\n-        #[stable(feature = \"rust1\", since = \"1.0.0\")] VacantEntry<'a, K, V>,\n-    ),\n-    Occupied(\n-        #[stable(feature = \"rust1\", since = \"1.0.0\")] OccupiedEntry<'a, K, V>,\n-    ),\n+    Vacant(#[stable(feature = \"rust1\", since = \"1.0.0\")] VacantEntry<'a, K, V>),\n+    Occupied(#[stable(feature = \"rust1\", since = \"1.0.0\")] OccupiedEntry<'a, K, V>),\n }"}, {"sha": "329890e8b12f6350912a64bdfc45b7c1627b423e", "filename": "tests/target/expr-block.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2915167179161aa7b73a4416f638e779388bd95f/tests%2Ftarget%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2915167179161aa7b73a4416f638e779388bd95f/tests%2Ftarget%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr-block.rs?ref=2915167179161aa7b73a4416f638e779388bd95f", "patch": "@@ -307,9 +307,7 @@ fn combine_block() {\n     };\n \n     match x {\n-        y => func(\n-            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n-        ),\n+        y => func(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),\n         _ => func(\n             x,\n             yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,"}, {"sha": "e262d69b43e6c4ad5cda05abcfe92adc09cb3c1c", "filename": "tests/target/string-lit.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2915167179161aa7b73a4416f638e779388bd95f/tests%2Ftarget%2Fstring-lit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2915167179161aa7b73a4416f638e779388bd95f/tests%2Ftarget%2Fstring-lit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstring-lit.rs?ref=2915167179161aa7b73a4416f638e779388bd95f", "patch": "@@ -25,9 +25,8 @@ formatting\"#;\n \n     filename.replace(\" \", \"\\\\\");\n \n-    let xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = funktion(\n-        \"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\",\n-    );\n+    let xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx =\n+        funktion(\"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\");\n \n     let unicode = \"a\u0310e\u0301o\u0308\u0332\\r\\n\";\n     let unicode2 = \"L\u00f6we \u8001\u864e L\u00e9opard\";"}]}