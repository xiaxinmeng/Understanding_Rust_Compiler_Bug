{"sha": "2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlZDUxNDNjMGVjODhmZTRjZjBlMzUyOGJiNGFjYTExMDU5YzJjODM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-04T12:04:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-04T12:04:31Z"}, "message": "Auto merge of #6111 - flip1995:rustup, r=flip1995\n\nRustup\n\nr? `@ghost`\n\nchangelog: Deprecate [`drop_bounds`] lint. This lint was uplifted to rustc with the same name.", "tree": {"sha": "db64f9940abd04d70ee383e7ab155fbad51a3159", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db64f9940abd04d70ee383e7ab155fbad51a3159"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83", "html_url": "https://github.com/rust-lang/rust/commit/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9408c68c1da55f8a47cb21e761953db30aea3d39", "url": "https://api.github.com/repos/rust-lang/rust/commits/9408c68c1da55f8a47cb21e761953db30aea3d39", "html_url": "https://github.com/rust-lang/rust/commit/9408c68c1da55f8a47cb21e761953db30aea3d39"}, {"sha": "840f7daaadb1222c4355dbb72cabdcf912cb8877", "url": "https://api.github.com/repos/rust-lang/rust/commits/840f7daaadb1222c4355dbb72cabdcf912cb8877", "html_url": "https://github.com/rust-lang/rust/commit/840f7daaadb1222c4355dbb72cabdcf912cb8877"}], "stats": {"total": 132, "additions": 21, "deletions": 111}, "files": [{"sha": "c5884361dff9d313fae87dd86a20281b93defa43", "filename": "clippy_lints/src/deprecated_lints.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeprecated_lints.rs?ref=2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83", "patch": "@@ -163,3 +163,12 @@ declare_deprecated_lint! {\n     pub REGEX_MACRO,\n     \"the regex! macro has been removed from the regex crate in 2018\"\n }\n+\n+declare_deprecated_lint! {\n+    /// **What it does:** Nothing. This lint has been deprecated.\n+    ///\n+    /// **Deprecation reason:** This lint has been uplifted to rustc and is now called\n+    /// `drop_bounds`.\n+    pub DROP_BOUNDS,\n+    \"this lint has been uplifted to rustc and is now called `drop_bounds`\"\n+}"}, {"sha": "ec3b6afa6300f13b76f17e40337b3efaeabfbeec", "filename": "clippy_lints/src/drop_bounds.rs", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/9408c68c1da55f8a47cb21e761953db30aea3d39/clippy_lints%2Fsrc%2Fdrop_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9408c68c1da55f8a47cb21e761953db30aea3d39/clippy_lints%2Fsrc%2Fdrop_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_bounds.rs?ref=9408c68c1da55f8a47cb21e761953db30aea3d39", "patch": "@@ -1,73 +0,0 @@\n-use crate::utils::{match_def_path, paths, span_lint};\n-use if_chain::if_chain;\n-use rustc_hir::{GenericBound, GenericParam, WhereBoundPredicate, WherePredicate};\n-use rustc_lint::{LateContext, LateLintPass};\n-use rustc_session::{declare_lint_pass, declare_tool_lint};\n-\n-declare_clippy_lint! {\n-    /// **What it does:** Checks for generics with `std::ops::Drop` as bounds.\n-    ///\n-    /// **Why is this bad?** `Drop` bounds do not really accomplish anything.\n-    /// A type may have compiler-generated drop glue without implementing the\n-    /// `Drop` trait itself. The `Drop` trait also only has one method,\n-    /// `Drop::drop`, and that function is by fiat not callable in user code.\n-    /// So there is really no use case for using `Drop` in trait bounds.\n-    ///\n-    /// The most likely use case of a drop bound is to distinguish between types\n-    /// that have destructors and types that don't. Combined with specialization,\n-    /// a naive coder would write an implementation that assumed a type could be\n-    /// trivially dropped, then write a specialization for `T: Drop` that actually\n-    /// calls the destructor. Except that doing so is not correct; String, for\n-    /// example, doesn't actually implement Drop, but because String contains a\n-    /// Vec, assuming it can be trivially dropped will leak memory.\n-    ///\n-    /// **Known problems:** None.\n-    ///\n-    /// **Example:**\n-    /// ```rust\n-    /// fn foo<T: Drop>() {}\n-    /// ```\n-    /// Could be written as:\n-    /// ```rust\n-    /// fn foo<T>() {}\n-    /// ```\n-    pub DROP_BOUNDS,\n-    correctness,\n-    \"bounds of the form `T: Drop` are useless\"\n-}\n-\n-const DROP_BOUNDS_SUMMARY: &str = \"bounds of the form `T: Drop` are useless, \\\n-                                   use `std::mem::needs_drop` to detect if a type has drop glue\";\n-\n-declare_lint_pass!(DropBounds => [DROP_BOUNDS]);\n-\n-impl<'tcx> LateLintPass<'tcx> for DropBounds {\n-    fn check_generic_param(&mut self, cx: &LateContext<'tcx>, p: &'tcx GenericParam<'_>) {\n-        for bound in p.bounds.iter() {\n-            lint_bound(cx, bound);\n-        }\n-    }\n-    fn check_where_predicate(&mut self, cx: &LateContext<'tcx>, p: &'tcx WherePredicate<'_>) {\n-        if let WherePredicate::BoundPredicate(WhereBoundPredicate { bounds, .. }) = p {\n-            for bound in *bounds {\n-                lint_bound(cx, bound);\n-            }\n-        }\n-    }\n-}\n-\n-fn lint_bound<'tcx>(cx: &LateContext<'tcx>, bound: &'tcx GenericBound<'_>) {\n-    if_chain! {\n-        if let GenericBound::Trait(t, _) = bound;\n-        if let Some(def_id) = t.trait_ref.path.res.opt_def_id();\n-        if match_def_path(cx, def_id, &paths::DROP_TRAIT);\n-        then {\n-            span_lint(\n-                cx,\n-                DROP_BOUNDS,\n-                t.span,\n-                DROP_BOUNDS_SUMMARY\n-            );\n-        }\n-    }\n-}"}, {"sha": "72ad8d12e6d70c88b1411134391cb0f9060e2691", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83", "patch": "@@ -181,7 +181,6 @@ mod disallowed_method;\n mod doc;\n mod double_comparison;\n mod double_parens;\n-mod drop_bounds;\n mod drop_forget_ref;\n mod duration_subsec;\n mod else_if_without_else;\n@@ -480,6 +479,10 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         \"clippy::regex_macro\",\n         \"the regex! macro has been removed from the regex crate in 2018\",\n     );\n+    store.register_removed(\n+        \"clippy::drop_bounds\",\n+        \"this lint has been uplifted to rustc and is now called `drop_bounds`\",\n+    );\n     // end deprecated lints, do not remove this comment, it\u2019s used in `update_lints`\n \n     // begin register lints, do not remove this comment, it\u2019s used in `update_lints`\n@@ -537,7 +540,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &doc::NEEDLESS_DOCTEST_MAIN,\n         &double_comparison::DOUBLE_COMPARISONS,\n         &double_parens::DOUBLE_PARENS,\n-        &drop_bounds::DROP_BOUNDS,\n         &drop_forget_ref::DROP_COPY,\n         &drop_forget_ref::DROP_REF,\n         &drop_forget_ref::FORGET_COPY,\n@@ -964,7 +966,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box strings::StringLitAsBytes);\n     store.register_late_pass(|| box derive::Derive);\n     store.register_late_pass(|| box types::CharLitAsU8);\n-    store.register_late_pass(|| box drop_bounds::DropBounds);\n     store.register_late_pass(|| box get_last_with_len::GetLastWithLen);\n     store.register_late_pass(|| box drop_forget_ref::DropForgetRef);\n     store.register_late_pass(|| box empty_enum::EmptyEnum);\n@@ -1294,7 +1295,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&doc::NEEDLESS_DOCTEST_MAIN),\n         LintId::of(&double_comparison::DOUBLE_COMPARISONS),\n         LintId::of(&double_parens::DOUBLE_PARENS),\n-        LintId::of(&drop_bounds::DROP_BOUNDS),\n         LintId::of(&drop_forget_ref::DROP_COPY),\n         LintId::of(&drop_forget_ref::DROP_REF),\n         LintId::of(&drop_forget_ref::FORGET_COPY),\n@@ -1728,7 +1728,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&copies::IF_SAME_THEN_ELSE),\n         LintId::of(&derive::DERIVE_HASH_XOR_EQ),\n         LintId::of(&derive::DERIVE_ORD_XOR_PARTIAL_ORD),\n-        LintId::of(&drop_bounds::DROP_BOUNDS),\n         LintId::of(&drop_forget_ref::DROP_COPY),\n         LintId::of(&drop_forget_ref::DROP_REF),\n         LintId::of(&drop_forget_ref::FORGET_COPY),"}, {"sha": "277da9d3f3a275bb87e9796fa59ee62f39a8d69a", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83", "patch": "@@ -31,7 +31,6 @@ pub const DISPLAY_FMT_METHOD: [&str; 4] = [\"core\", \"fmt\", \"Display\", \"fmt\"];\n pub const DISPLAY_TRAIT: [&str; 3] = [\"core\", \"fmt\", \"Display\"];\n pub const DOUBLE_ENDED_ITERATOR: [&str; 4] = [\"core\", \"iter\", \"traits\", \"DoubleEndedIterator\"];\n pub const DROP: [&str; 3] = [\"core\", \"mem\", \"drop\"];\n-pub const DROP_TRAIT: [&str; 4] = [\"core\", \"ops\", \"drop\", \"Drop\"];\n pub const DURATION: [&str; 3] = [\"core\", \"time\", \"Duration\"];\n pub const EARLY_CONTEXT: [&str; 4] = [\"rustc\", \"lint\", \"context\", \"EarlyContext\"];\n pub const EXIT: [&str; 3] = [\"std\", \"process\", \"exit\"];"}, {"sha": "0dba5a71c502d9cb23603a2a9922348d914b1d02", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83", "patch": "@@ -430,13 +430,6 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n         deprecation: None,\n         module: \"double_parens\",\n     },\n-    Lint {\n-        name: \"drop_bounds\",\n-        group: \"correctness\",\n-        desc: \"bounds of the form `T: Drop` are useless\",\n-        deprecation: None,\n-        module: \"drop_bounds\",\n-    },\n     Lint {\n         name: \"drop_copy\",\n         group: \"correctness\","}, {"sha": "9e32fe36ece4dc09426703a7d96d3f250cf9fee7", "filename": "tests/ui/deprecated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/tests%2Fui%2Fdeprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/tests%2Fui%2Fdeprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.rs?ref=2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83", "patch": "@@ -8,5 +8,6 @@\n #[warn(clippy::into_iter_on_array)]\n #[warn(clippy::unused_label)]\n #[warn(clippy::regex_macro)]\n+#[warn(clippy::drop_bounds)]\n \n fn main() {}"}, {"sha": "d3400a7be09fd69214d41e4821c6980d27f2c668", "filename": "tests/ui/deprecated.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/tests%2Fui%2Fdeprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83/tests%2Fui%2Fdeprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.stderr?ref=2ed5143c0ec88fe4cf0e3528bb4aca11059c2c83", "patch": "@@ -60,11 +60,17 @@ error: lint `clippy::regex_macro` has been removed: `the regex! macro has been r\n LL | #[warn(clippy::regex_macro)]\n    |        ^^^^^^^^^^^^^^^^^^^\n \n+error: lint `clippy::drop_bounds` has been removed: `this lint has been uplifted to rustc and is now called `drop_bounds``\n+  --> $DIR/deprecated.rs:11:8\n+   |\n+LL | #[warn(clippy::drop_bounds)]\n+   |        ^^^^^^^^^^^^^^^^^^^\n+\n error: lint `clippy::str_to_string` has been removed: `using `str::to_string` is common even today and specialization will likely happen soon`\n   --> $DIR/deprecated.rs:1:8\n    |\n LL | #[warn(clippy::str_to_string)]\n    |        ^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 11 previous errors\n+error: aborting due to 12 previous errors\n "}, {"sha": "6d6a9dc0783993f4f2e63520c78a23eb5c0f3331", "filename": "tests/ui/drop_bounds.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9408c68c1da55f8a47cb21e761953db30aea3d39/tests%2Fui%2Fdrop_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9408c68c1da55f8a47cb21e761953db30aea3d39/tests%2Fui%2Fdrop_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_bounds.rs?ref=9408c68c1da55f8a47cb21e761953db30aea3d39", "patch": "@@ -1,8 +0,0 @@\n-#![allow(unused)]\n-fn foo<T: Drop>() {}\n-fn bar<T>()\n-where\n-    T: Drop,\n-{\n-}\n-fn main() {}"}, {"sha": "8208c0ed7e3985e6e4059d4373574622f8540fb4", "filename": "tests/ui/drop_bounds.stderr", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9408c68c1da55f8a47cb21e761953db30aea3d39/tests%2Fui%2Fdrop_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9408c68c1da55f8a47cb21e761953db30aea3d39/tests%2Fui%2Fdrop_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_bounds.stderr?ref=9408c68c1da55f8a47cb21e761953db30aea3d39", "patch": "@@ -1,16 +0,0 @@\n-error: bounds of the form `T: Drop` are useless, use `std::mem::needs_drop` to detect if a type has drop glue\n-  --> $DIR/drop_bounds.rs:2:11\n-   |\n-LL | fn foo<T: Drop>() {}\n-   |           ^^^^\n-   |\n-   = note: `#[deny(clippy::drop_bounds)]` on by default\n-\n-error: bounds of the form `T: Drop` are useless, use `std::mem::needs_drop` to detect if a type has drop glue\n-  --> $DIR/drop_bounds.rs:5:8\n-   |\n-LL |     T: Drop,\n-   |        ^^^^\n-\n-error: aborting due to 2 previous errors\n-"}]}