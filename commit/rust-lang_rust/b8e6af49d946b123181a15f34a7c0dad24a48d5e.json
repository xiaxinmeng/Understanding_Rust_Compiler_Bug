{"sha": "b8e6af49d946b123181a15f34a7c0dad24a48d5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZTZhZjQ5ZDk0NmIxMjMxODFhMTVmMzRhN2MwZGFkMjRhNDhkNWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-10T09:52:59Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-10T09:53:32Z"}, "message": "fix setting the manifest path manually when using cargo miri", "tree": {"sha": "eed30168d9c231fa3e900fa8a86cb8c7545986cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eed30168d9c231fa3e900fa8a86cb8c7545986cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8e6af49d946b123181a15f34a7c0dad24a48d5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8e6af49d946b123181a15f34a7c0dad24a48d5e", "html_url": "https://github.com/rust-lang/rust/commit/b8e6af49d946b123181a15f34a7c0dad24a48d5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8e6af49d946b123181a15f34a7c0dad24a48d5e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d767e1f415967a4ff58a2e88905d5c9f9c98453", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d767e1f415967a4ff58a2e88905d5c9f9c98453", "html_url": "https://github.com/rust-lang/rust/commit/4d767e1f415967a4ff58a2e88905d5c9f9c98453"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "8a1a9d0554abef50eece643a6858ff6c1e9f6ee5", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b8e6af49d946b123181a15f34a7c0dad24a48d5e/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8e6af49d946b123181a15f34a7c0dad24a48d5e/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=b8e6af49d946b123181a15f34a7c0dad24a48d5e", "patch": "@@ -75,7 +75,9 @@ fn get_arg_flag_value(name: &str) -> Option<String> {\n \n fn list_targets() -> impl Iterator<Item=cargo_metadata::Target> {\n     // We need to get the manifest, and then the metadata, to enumerate targets.\n-    let manifest_path = get_arg_flag_value(\"--manifest-path\").map(PathBuf::from);\n+    let manifest_path = get_arg_flag_value(\"--manifest-path\").map(|m|\n+        Path::new(&m).canonicalize().unwrap()\n+    );\n \n     let mut metadata = if let Ok(metadata) = cargo_metadata::metadata(\n         manifest_path.as_ref().map(AsRef::as_ref),"}]}