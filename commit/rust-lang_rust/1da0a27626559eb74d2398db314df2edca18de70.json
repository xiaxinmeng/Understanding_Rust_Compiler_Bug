{"sha": "1da0a27626559eb74d2398db314df2edca18de70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYTBhMjc2MjY1NTllYjc0ZDIzOThkYjMxNGRmMmVkY2ExOGRlNzA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-05T13:53:32Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2021-03-09T17:27:23Z"}, "message": "Use `body.block_scopes` in `hir_ty` tests", "tree": {"sha": "9b6760fadd6848fc607802d1fcef94aee0df653c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b6760fadd6848fc607802d1fcef94aee0df653c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1da0a27626559eb74d2398db314df2edca18de70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1da0a27626559eb74d2398db314df2edca18de70", "html_url": "https://github.com/rust-lang/rust/commit/1da0a27626559eb74d2398db314df2edca18de70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1da0a27626559eb74d2398db314df2edca18de70/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cb46a9e8d20a5f843e3a7fa6387779d1ff68c3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cb46a9e8d20a5f843e3a7fa6387779d1ff68c3b", "html_url": "https://github.com/rust-lang/rust/commit/0cb46a9e8d20a5f843e3a7fa6387779d1ff68c3b"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "fc770ea600cd591505f4969199c0964c2b6873fc", "filename": "crates/hir_ty/src/tests.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1da0a27626559eb74d2398db314df2edca18de70/crates%2Fhir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1da0a27626559eb74d2398db314df2edca18de70/crates%2Fhir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests.rs?ref=1da0a27626559eb74d2398db314df2edca18de70", "patch": "@@ -13,7 +13,7 @@ use std::{env, sync::Arc};\n use base_db::{fixture::WithFixture, FileRange, SourceDatabase, SourceDatabaseExt};\n use expect_test::Expect;\n use hir_def::{\n-    body::{BodySourceMap, SyntheticSyntax},\n+    body::{Body, BodySourceMap, SyntheticSyntax},\n     child_by_source::ChildBySource,\n     db::DefDatabase,\n     item_scope::ItemScope,\n@@ -234,13 +234,13 @@ fn visit_module(\n                     let def = it.into();\n                     cb(def);\n                     let body = db.body(def);\n-                    visit_scope(db, crate_def_map, &body.item_scope, cb);\n+                    visit_body(db, &body, cb);\n                 }\n                 AssocItemId::ConstId(it) => {\n                     let def = it.into();\n                     cb(def);\n                     let body = db.body(def);\n-                    visit_scope(db, crate_def_map, &body.item_scope, cb);\n+                    visit_body(db, &body, cb);\n                 }\n                 AssocItemId::TypeAliasId(_) => (),\n             }\n@@ -259,19 +259,19 @@ fn visit_module(\n                     let def = it.into();\n                     cb(def);\n                     let body = db.body(def);\n-                    visit_scope(db, crate_def_map, &body.item_scope, cb);\n+                    visit_body(db, &body, cb);\n                 }\n                 ModuleDefId::ConstId(it) => {\n                     let def = it.into();\n                     cb(def);\n                     let body = db.body(def);\n-                    visit_scope(db, crate_def_map, &body.item_scope, cb);\n+                    visit_body(db, &body, cb);\n                 }\n                 ModuleDefId::StaticId(it) => {\n                     let def = it.into();\n                     cb(def);\n                     let body = db.body(def);\n-                    visit_scope(db, crate_def_map, &body.item_scope, cb);\n+                    visit_body(db, &body, cb);\n                 }\n                 ModuleDefId::TraitId(it) => {\n                     let trait_data = db.trait_data(it);\n@@ -288,6 +288,14 @@ fn visit_module(\n             }\n         }\n     }\n+\n+    fn visit_body(db: &TestDB, body: &Body, cb: &mut dyn FnMut(DefWithBodyId)) {\n+        for def_map in body.block_scopes.iter().filter_map(|block| db.block_def_map(*block)) {\n+            for (mod_id, _) in def_map.modules() {\n+                visit_module(db, &def_map, mod_id, cb);\n+            }\n+        }\n+    }\n }\n \n fn ellipsize(mut text: String, max_len: usize) -> String {"}]}