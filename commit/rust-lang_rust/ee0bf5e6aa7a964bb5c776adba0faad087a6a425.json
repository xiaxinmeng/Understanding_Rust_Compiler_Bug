{"sha": "ee0bf5e6aa7a964bb5c776adba0faad087a6a425", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMGJmNWU2YWE3YTk2NGJiNWM3NzZhZGJhMGZhYWQwODdhNmE0MjU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-17T03:05:00Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-17T04:09:39Z"}, "message": "review comments", "tree": {"sha": "5dd65d917cf7095a5740e36ec608c89b780e8ff0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dd65d917cf7095a5740e36ec608c89b780e8ff0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee0bf5e6aa7a964bb5c776adba0faad087a6a425", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee0bf5e6aa7a964bb5c776adba0faad087a6a425", "html_url": "https://github.com/rust-lang/rust/commit/ee0bf5e6aa7a964bb5c776adba0faad087a6a425", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee0bf5e6aa7a964bb5c776adba0faad087a6a425/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cb91816f24a096a0760a49b6b4095309098e7f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb91816f24a096a0760a49b6b4095309098e7f2", "html_url": "https://github.com/rust-lang/rust/commit/2cb91816f24a096a0760a49b6b4095309098e7f2"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "26a5bdfef7d66b511f6da9c8fb8c2547ca3f95f9", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ee0bf5e6aa7a964bb5c776adba0faad087a6a425/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee0bf5e6aa7a964bb5c776adba0faad087a6a425/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=ee0bf5e6aa7a964bb5c776adba0faad087a6a425", "patch": "@@ -527,19 +527,20 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                    appends the string on the right to the string \\\n                    on the left and may require reallocation. This \\\n                    requires ownership of the string on the left\";\n-        debug!(\"check_str_addition: {:?} + {:?}\", lhs_ty, rhs_ty);\n+\n+        let is_std_string = |ty| &format!(\"{:?}\", ty) == \"std::string::String\";\n+\n         match (&lhs_ty.sty, &rhs_ty.sty) {\n             (&Ref(_, l_ty, _), &Ref(_, r_ty, _)) // &str or &String + &str, &String or &&str\n-            if (l_ty.sty == Str || &format!(\"{:?}\", l_ty) == \"std::string::String\") && (\n-                    r_ty.sty == Str ||\n-                    &format!(\"{:?}\", r_ty) == \"std::string::String\" ||\n-                    &format!(\"{:?}\", rhs_ty) == \"&&str\"\n-                ) =>\n+                if (l_ty.sty == Str || is_std_string(l_ty)) && (\n+                        r_ty.sty == Str || is_std_string(r_ty) ||\n+                        &format!(\"{:?}\", rhs_ty) == \"&&str\"\n+                    ) =>\n             {\n                 if !is_assign { // Do not supply this message if `&str += &str`\n                     err.span_label(\n                         op.span,\n-                        \"`+` can't be used to concatenate two `&str` strings\",\n+                        \"`+` cannot be used to concatenate two `&str` strings\",\n                     );\n                     match source_map.span_to_snippet(lhs_expr.span) {\n                         Ok(lstring) => {\n@@ -566,12 +567,11 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 true\n             }\n             (&Ref(_, l_ty, _), &Adt(..)) // Handle `&str` & `&String` + `String`\n-            if (l_ty.sty == Str || &format!(\"{:?}\", l_ty) == \"std::string::String\") &&\n-                &format!(\"{:?}\", rhs_ty) == \"std::string::String\" =>\n+                if (l_ty.sty == Str || is_std_string(l_ty)) && is_std_string(rhs_ty) =>\n             {\n                 err.span_label(\n                     op.span,\n-                    \"`+` can't be used to concatenate a `&str` with a `String`\",\n+                    \"`+` cannot be used to concatenate a `&str` with a `String`\",\n                 );\n                 match (\n                     source_map.span_to_snippet(lhs_expr.span),"}, {"sha": "7d11a8c8021283fc54c8c3c89e5ca281a5bbe6f7", "filename": "src/test/ui/issues/issue-47377.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee0bf5e6aa7a964bb5c776adba0faad087a6a425/src%2Ftest%2Fui%2Fissues%2Fissue-47377.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee0bf5e6aa7a964bb5c776adba0faad087a6a425/src%2Ftest%2Fui%2Fissues%2Fissue-47377.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47377.stderr?ref=ee0bf5e6aa7a964bb5c776adba0faad087a6a425", "patch": "@@ -4,7 +4,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&str`\n LL |      let _a = b + \", World!\";\n    |               - ^ ---------- &str\n    |               | |\n-   |               | `+` can't be used to concatenate two `&str` strings\n+   |               | `+` cannot be used to concatenate two `&str` strings\n    |               &str\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |"}, {"sha": "89a154c5109d80e0c4b02c28c77a0ff514205827", "filename": "src/test/ui/issues/issue-47380.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee0bf5e6aa7a964bb5c776adba0faad087a6a425/src%2Ftest%2Fui%2Fissues%2Fissue-47380.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee0bf5e6aa7a964bb5c776adba0faad087a6a425/src%2Ftest%2Fui%2Fissues%2Fissue-47380.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47380.stderr?ref=ee0bf5e6aa7a964bb5c776adba0faad087a6a425", "patch": "@@ -4,7 +4,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&str`\n LL |     println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b + \", World!\";\n    |                                      - ^ ---------- &str\n    |                                      | |\n-   |                                      | `+` can't be used to concatenate two `&str` strings\n+   |                                      | `+` cannot be used to concatenate two `&str` strings\n    |                                      &str\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |"}, {"sha": "cdb9c1168d8e7a2f2a5518c7b522b067075c702b", "filename": "src/test/ui/span/issue-39018.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ee0bf5e6aa7a964bb5c776adba0faad087a6a425/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee0bf5e6aa7a964bb5c776adba0faad087a6a425/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr?ref=ee0bf5e6aa7a964bb5c776adba0faad087a6a425", "patch": "@@ -4,7 +4,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&str`\n LL |     let x = \"Hello \" + \"World!\";\n    |             -------- ^ -------- &str\n    |             |        |\n-   |             |        `+` can't be used to concatenate two `&str` strings\n+   |             |        `+` cannot be used to concatenate two `&str` strings\n    |             &str\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |\n@@ -27,7 +27,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&str`\n LL |     let x = \"Hello \" + \"World!\".to_owned();\n    |             -------- ^ ------------------- std::string::String\n    |             |        |\n-   |             |        `+` can't be used to concatenate a `&str` with a `String`\n+   |             |        `+` cannot be used to concatenate a `&str` with a `String`\n    |             &str\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |\n@@ -40,7 +40,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&std::string::Stri\n LL |     let _ = &a + &b;\n    |             -- ^ -- &std::string::String\n    |             |  |\n-   |             |  `+` can't be used to concatenate two `&str` strings\n+   |             |  `+` cannot be used to concatenate two `&str` strings\n    |             &std::string::String\n help: String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |\n@@ -53,7 +53,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&std::string::Stri\n LL |     let _ = &a + b;\n    |             -- ^ - std::string::String\n    |             |  |\n-   |             |  `+` can't be used to concatenate a `&str` with a `String`\n+   |             |  `+` cannot be used to concatenate a `&str` with a `String`\n    |             &std::string::String\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |\n@@ -78,7 +78,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&std::string::Stri\n LL |     let _ = e + b;\n    |             - ^ - std::string::String\n    |             | |\n-   |             | `+` can't be used to concatenate a `&str` with a `String`\n+   |             | `+` cannot be used to concatenate a `&str` with a `String`\n    |             &std::string::String\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |\n@@ -91,7 +91,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&std::string::Stri\n LL |     let _ = e + &b;\n    |             - ^ -- &std::string::String\n    |             | |\n-   |             | `+` can't be used to concatenate two `&str` strings\n+   |             | `+` cannot be used to concatenate two `&str` strings\n    |             &std::string::String\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |\n@@ -104,7 +104,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&std::string::Stri\n LL |     let _ = e + d;\n    |             - ^ - &str\n    |             | |\n-   |             | `+` can't be used to concatenate two `&str` strings\n+   |             | `+` cannot be used to concatenate two `&str` strings\n    |             &std::string::String\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |\n@@ -117,7 +117,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&std::string::Stri\n LL |     let _ = e + &d;\n    |             - ^ -- &&str\n    |             | |\n-   |             | `+` can't be used to concatenate two `&str` strings\n+   |             | `+` cannot be used to concatenate two `&str` strings\n    |             &std::string::String\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |\n@@ -150,7 +150,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&str`\n LL |     let _ = c + &d;\n    |             - ^ -- &&str\n    |             | |\n-   |             | `+` can't be used to concatenate two `&str` strings\n+   |             | `+` cannot be used to concatenate two `&str` strings\n    |             &str\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |\n@@ -163,7 +163,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&str`\n LL |     let _ = c + d;\n    |             - ^ - &str\n    |             | |\n-   |             | `+` can't be used to concatenate two `&str` strings\n+   |             | `+` cannot be used to concatenate two `&str` strings\n    |             &str\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |"}, {"sha": "3e53cdc4d98ca36c8d9ad606d833cf772704847b", "filename": "src/test/ui/str/str-concat-on-double-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee0bf5e6aa7a964bb5c776adba0faad087a6a425/src%2Ftest%2Fui%2Fstr%2Fstr-concat-on-double-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee0bf5e6aa7a964bb5c776adba0faad087a6a425/src%2Ftest%2Fui%2Fstr%2Fstr-concat-on-double-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstr%2Fstr-concat-on-double-ref.stderr?ref=ee0bf5e6aa7a964bb5c776adba0faad087a6a425", "patch": "@@ -4,7 +4,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&std::string::Stri\n LL |     let c = a + b;\n    |             - ^ - &str\n    |             | |\n-   |             | `+` can't be used to concatenate two `&str` strings\n+   |             | `+` cannot be used to concatenate two `&str` strings\n    |             &std::string::String\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |"}]}