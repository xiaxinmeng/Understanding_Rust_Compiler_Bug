{"sha": "c410d685294e73a944f3e7cfe403f415a0cff849", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MTBkNjg1Mjk0ZTczYTk0NGYzZTdjZmU0MDNmNDE1YTBjZmY4NDk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-20T01:41:17Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-20T01:41:44Z"}, "message": "rustboot: Say when a binary operator is unimplemented rather than asserting in trans", "tree": {"sha": "5b4e7296273f3200c6bc6963b0b3acdb5bf65b69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b4e7296273f3200c6bc6963b0b3acdb5bf65b69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c410d685294e73a944f3e7cfe403f415a0cff849", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c410d685294e73a944f3e7cfe403f415a0cff849", "html_url": "https://github.com/rust-lang/rust/commit/c410d685294e73a944f3e7cfe403f415a0cff849", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c410d685294e73a944f3e7cfe403f415a0cff849/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3352fab59ba39194b2efd7e478aa1fbbfe0de8d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3352fab59ba39194b2efd7e478aa1fbbfe0de8d1", "html_url": "https://github.com/rust-lang/rust/commit/3352fab59ba39194b2efd7e478aa1fbbfe0de8d1"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "58cccb9922cc2373736f48605f3979b0556e3adf", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c410d685294e73a944f3e7cfe403f415a0cff849/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c410d685294e73a944f3e7cfe403f415a0cff849/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=c410d685294e73a944f3e7cfe403f415a0cff849", "patch": "@@ -2578,8 +2578,13 @@ let trans_visitor\n     in\n       match expr with\n           Ast.EXPR_binary (binop, a, b) ->\n-            assert (is_prim_type (simplified_ty (atom_type cx a)));\n-            assert (is_prim_type (simplified_ty (atom_type cx b)));\n+            if not (is_prim_type (simplified_ty (atom_type cx a))) ||\n+                not (is_prim_type (simplified_ty (atom_type cx b))) then\n+              unimpl None \"application of binary operator %a to operands of \\\n+                type %s and %s\"\n+                Ast.sprintf_binop binop\n+                (pretty_ty_str cx (Ast.sprintf_ty ()) (atom_type cx a))\n+                (pretty_ty_str cx (Ast.sprintf_ty ()) (atom_type cx b));\n             trans_binary binop (trans_atom a) (trans_atom b)\n \n         | Ast.EXPR_unary (unop, a) ->"}]}