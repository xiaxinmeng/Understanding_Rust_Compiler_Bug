{"sha": "b2c74ab82b4d95db69f54558929f83fb5dea043d", "node_id": "C_kwDOAAsO6NoAKGIyYzc0YWI4MmI0ZDk1ZGI2OWY1NDU1ODkyOWY4M2ZiNWRlYTA0M2Q", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-09-26T10:59:22Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-11-17T08:37:30Z"}, "message": "add support for running binaries with remote-test-client on run-make", "tree": {"sha": "3989628551cdb613d362f221d1206c88aba52d26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3989628551cdb613d362f221d1206c88aba52d26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2c74ab82b4d95db69f54558929f83fb5dea043d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmN18soACgkQzXazX3c0\ndp78WA/+JP8sbL4SIYfece03kjKITtqj+NBp+Rn39z1Lpvcu1Lv2vFBH9C6PC6vh\nWAR7QcjtOHYMtLZU0PcbVGEiNFrWfNfikuAnt6ZeP/iTJYEavzAO+YE38E/al87m\niikdhIV4xQ64WS5uMweb9KAP6bY4mSn0/en5xDYs6DHc8c9EhSUuZOeHulUdEqYY\nBnCxAIL98c7NGBZGXvVwkBU8ATe+bSoQ9OA97vT5aBfN5JopYelkAqyPRNDV6AAf\nenteHqmdyY2cYuBrLkabu2Go4+jnf4iE4PIwMEYymvzuR0KNRSq5ypHHvIxHO2Aa\nwKnyIVpC/gtZ3wG1cX1ekn7xYpWeVcSQwIqJAmPDAkjFhaQWNHx01MmaiS/n7WYy\nyalUNrmy+gCNXs0WcdZUEYAHgQwgaC6guvE9JFkY+s5jGWpuNCB+VX9mI0tKSJya\nZogNn7BcHmAGrGdafV5rpwqFjsuxq+1dRNjOwnql1bJcSyLszYvwPZagRJKNtsQW\nO6JgJ1jF29FvZngwL+Ay3997/MPJgtjf3gr+Dvu+39TxlWDHFgk42+DtkAB10NHN\n7TF+9aDKx+g7q08yTU/uFw+niGOWxP7Ca2weVIRcTg79SxbRGMdiqDh7HoSSHS9B\ngneMDgNAGljeMqqVIRNa/8vUAdhX6XlnCNO7Bt5hOyx/R858Ejw=\n=KQs3\n-----END PGP SIGNATURE-----", "payload": "tree 3989628551cdb613d362f221d1206c88aba52d26\nparent 9340e5c1b9dee53fd32a18f7bfb54faabfe00b7b\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1664189962 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1668674250 +0100\n\nadd support for running binaries with remote-test-client on run-make\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c74ab82b4d95db69f54558929f83fb5dea043d", "html_url": "https://github.com/rust-lang/rust/commit/b2c74ab82b4d95db69f54558929f83fb5dea043d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2c74ab82b4d95db69f54558929f83fb5dea043d/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9340e5c1b9dee53fd32a18f7bfb54faabfe00b7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9340e5c1b9dee53fd32a18f7bfb54faabfe00b7b", "html_url": "https://github.com/rust-lang/rust/commit/9340e5c1b9dee53fd32a18f7bfb54faabfe00b7b"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "80e6704e0d082559dc9bc292a73e6093f14a90f4", "filename": "src/test/run-make-fulldeps/tools.mk", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b2c74ab82b4d95db69f54558929f83fb5dea043d/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b2c74ab82b4d95db69f54558929f83fb5dea043d/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk?ref=b2c74ab82b4d95db69f54558929f83fb5dea043d", "patch": "@@ -40,6 +40,17 @@ endif\n # e.g. for `$(CC) -o $(RUN_BINFILE)`.\n RUN_BINFILE = $(TMPDIR)/$(1)\n \n+# Invoke the generated binary on the remote machine if a test address is\n+# provided, otherwise run it on the current host.\n+ifdef TEST_DEVICE_ADDR\n+# FIXME: if a test requires additional files, this will need to be changed to\n+# also push them (by changing the 0 to the number of additional files, and\n+# providing the path of the additional files as the last arguments).\n+EXECUTE = $(REMOTE_TEST_CLIENT) run 0 $(RUN_BINFILE)\n+else\n+EXECUTE = $(RUN_BINFILE)\n+endif\n+\n # RUN and FAIL are basic way we will invoke the generated binary.  On\n # non-windows platforms, they set the LD_LIBRARY_PATH environment\n # variable before running the binary.\n@@ -50,16 +61,16 @@ BIN = $(1)\n UNAME = $(shell uname)\n \n ifeq ($(UNAME),Darwin)\n-RUN = $(TARGET_RPATH_ENV) $(RUN_BINFILE)\n-FAIL = $(TARGET_RPATH_ENV) $(RUN_BINFILE) && exit 1 || exit 0\n+RUN = $(TARGET_RPATH_ENV) $(EXECUTE)\n+FAIL = $(TARGET_RPATH_ENV) $(EXECUTE) && exit 1 || exit 0\n DYLIB_GLOB = lib$(1)*.dylib\n DYLIB = $(TMPDIR)/lib$(1).dylib\n STATICLIB = $(TMPDIR)/lib$(1).a\n STATICLIB_GLOB = lib$(1)*.a\n else\n ifdef IS_WINDOWS\n-RUN = PATH=\"$(PATH):$(TARGET_RPATH_DIR)\" $(RUN_BINFILE)\n-FAIL = PATH=\"$(PATH):$(TARGET_RPATH_DIR)\" $(RUN_BINFILE) && exit 1 || exit 0\n+RUN = PATH=\"$(PATH):$(TARGET_RPATH_DIR)\" $(EXECUTE)\n+FAIL = PATH=\"$(PATH):$(TARGET_RPATH_DIR)\" $(EXECUTE) && exit 1 || exit 0\n DYLIB_GLOB = $(1)*.dll\n DYLIB = $(TMPDIR)/$(1).dll\n ifdef IS_MSVC\n@@ -73,8 +84,8 @@ endif\n BIN = $(1).exe\n LLVM_FILECHECK := $(shell cygpath -u \"$(LLVM_FILECHECK)\")\n else\n-RUN = $(TARGET_RPATH_ENV) $(RUN_BINFILE)\n-FAIL = $(TARGET_RPATH_ENV) $(RUN_BINFILE) && exit 1 || exit 0\n+RUN = $(TARGET_RPATH_ENV) $(EXECUTE)\n+FAIL = $(TARGET_RPATH_ENV) $(EXECUTE) && exit 1 || exit 0\n DYLIB_GLOB = lib$(1)*.so\n DYLIB = $(TMPDIR)/lib$(1).so\n STATICLIB = $(TMPDIR)/lib$(1).a"}, {"sha": "ebce0283fbaf1c1bd55016060ea231d9c0031d05", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2c74ab82b4d95db69f54558929f83fb5dea043d/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2c74ab82b4d95db69f54558929f83fb5dea043d/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=b2c74ab82b4d95db69f54558929f83fb5dea043d", "patch": "@@ -2987,6 +2987,10 @@ impl<'test> TestCx<'test> {\n             cmd.env(\"LLVM_BIN_DIR\", llvm_bin_dir);\n         }\n \n+        if let Some(ref remote_test_client) = self.config.remote_test_client {\n+            cmd.env(\"REMOTE_TEST_CLIENT\", remote_test_client);\n+        }\n+\n         // We don't want RUSTFLAGS set from the outside to interfere with\n         // compiler flags set in the test cases:\n         cmd.env_remove(\"RUSTFLAGS\");"}]}