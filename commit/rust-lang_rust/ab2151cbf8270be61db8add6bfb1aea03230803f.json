{"sha": "ab2151cbf8270be61db8add6bfb1aea03230803f", "node_id": "C_kwDOAAsO6NoAKGFiMjE1MWNiZjgyNzBiZTYxZGI4YWRkNmJmYjFhZWEwMzIzMDgwM2Y", "commit": {"author": {"name": "Evan Jones", "email": "ej@evanjones.ca", "date": "2022-12-17T18:43:08Z"}, "committer": {"name": "Evan Jones", "email": "ej@evanjones.ca", "date": "2022-12-17T18:43:08Z"}, "message": "std::fmt: Use args directly in example code\n\nThe lint \"clippy::uninlined_format_args\" recommends inline\nvariables in format strings. Fix two places in the docs that do\nnot do this. I noticed this because I copy/pasted one example in\nto my project, then noticed this lint error. This fixes:\n\nerror: variables can be used directly in the `format!` string\n  --> src/main.rs:30:22\n   |\n30 |         let string = format!(\"{:.*}\", decimals, magnitude);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: variables can be used directly in the `format!` string\n  --> src/main.rs:39:2\n   |\n39 |  write!(&mut io::stdout(), \"{}\", args).unwrap();", "tree": {"sha": "af54afd2be12f3a02e71ad7a8783ecfe8221c143", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af54afd2be12f3a02e71ad7a8783ecfe8221c143"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab2151cbf8270be61db8add6bfb1aea03230803f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab2151cbf8270be61db8add6bfb1aea03230803f", "html_url": "https://github.com/rust-lang/rust/commit/ab2151cbf8270be61db8add6bfb1aea03230803f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab2151cbf8270be61db8add6bfb1aea03230803f/comments", "author": {"login": "evanj", "id": 675151, "node_id": "MDQ6VXNlcjY3NTE1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/675151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evanj", "html_url": "https://github.com/evanj", "followers_url": "https://api.github.com/users/evanj/followers", "following_url": "https://api.github.com/users/evanj/following{/other_user}", "gists_url": "https://api.github.com/users/evanj/gists{/gist_id}", "starred_url": "https://api.github.com/users/evanj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evanj/subscriptions", "organizations_url": "https://api.github.com/users/evanj/orgs", "repos_url": "https://api.github.com/users/evanj/repos", "events_url": "https://api.github.com/users/evanj/events{/privacy}", "received_events_url": "https://api.github.com/users/evanj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "evanj", "id": 675151, "node_id": "MDQ6VXNlcjY3NTE1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/675151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evanj", "html_url": "https://github.com/evanj", "followers_url": "https://api.github.com/users/evanj/followers", "following_url": "https://api.github.com/users/evanj/following{/other_user}", "gists_url": "https://api.github.com/users/evanj/gists{/gist_id}", "starred_url": "https://api.github.com/users/evanj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evanj/subscriptions", "organizations_url": "https://api.github.com/users/evanj/orgs", "repos_url": "https://api.github.com/users/evanj/repos", "events_url": "https://api.github.com/users/evanj/events{/privacy}", "received_events_url": "https://api.github.com/users/evanj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65c53c3bb6190319e210c94164b05a17997073f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/65c53c3bb6190319e210c94164b05a17997073f2", "html_url": "https://github.com/rust-lang/rust/commit/65c53c3bb6190319e210c94164b05a17997073f2"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "eadb35cb96d422cfcdc84250b820b7cef65ea54c", "filename": "library/alloc/src/fmt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab2151cbf8270be61db8add6bfb1aea03230803f/library%2Falloc%2Fsrc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab2151cbf8270be61db8add6bfb1aea03230803f/library%2Falloc%2Fsrc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Ffmt.rs?ref=ab2151cbf8270be61db8add6bfb1aea03230803f", "patch": "@@ -419,7 +419,7 @@\n //!         // documentation for details, and the function `pad` can be used\n //!         // to pad strings.\n //!         let decimals = f.precision().unwrap_or(3);\n-//!         let string = format!(\"{:.*}\", decimals, magnitude);\n+//!         let string = format!(\"{magnitude:.decimals$}\");\n //!         f.pad_integral(true, \"\", &string)\n //!     }\n //! }\n@@ -518,7 +518,7 @@\n //! write!(&mut some_writer, \"{}\", format_args!(\"print with a {}\", \"macro\"));\n //!\n //! fn my_fmt_fn(args: fmt::Arguments) {\n-//!     write!(&mut io::stdout(), \"{}\", args);\n+//!     write!(&mut io::stdout(), \"{args}\");\n //! }\n //! my_fmt_fn(format_args!(\", or a {} too\", \"function\"));\n //! ```"}]}