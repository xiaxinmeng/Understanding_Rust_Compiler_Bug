{"sha": "6b741a7194c4de975083743f3d49fd3ab24ff74c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNzQxYTcxOTRjNGRlOTc1MDgzNzQzZjNkNDlmZDNhYjI0ZmY3NGM=", "commit": {"author": {"name": "Connor Brewster", "email": "brewsterc@my.caspercollege.edu", "date": "2016-01-11T05:06:06Z"}, "committer": {"name": "Connor Brewster", "email": "brewsterc@my.caspercollege.edu", "date": "2016-01-11T05:06:06Z"}, "message": "Where clause is on same line as fn if fn is empty fix-#760\nonly applies if fn_empty_single_line is set to true", "tree": {"sha": "803ec18dd16a32de91bc019ffc5e46dc085467f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/803ec18dd16a32de91bc019ffc5e46dc085467f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b741a7194c4de975083743f3d49fd3ab24ff74c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b741a7194c4de975083743f3d49fd3ab24ff74c", "html_url": "https://github.com/rust-lang/rust/commit/6b741a7194c4de975083743f3d49fd3ab24ff74c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b741a7194c4de975083743f3d49fd3ab24ff74c/comments", "author": {"login": "cbrewster", "id": 9086315, "node_id": "MDQ6VXNlcjkwODYzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9086315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbrewster", "html_url": "https://github.com/cbrewster", "followers_url": "https://api.github.com/users/cbrewster/followers", "following_url": "https://api.github.com/users/cbrewster/following{/other_user}", "gists_url": "https://api.github.com/users/cbrewster/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbrewster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbrewster/subscriptions", "organizations_url": "https://api.github.com/users/cbrewster/orgs", "repos_url": "https://api.github.com/users/cbrewster/repos", "events_url": "https://api.github.com/users/cbrewster/events{/privacy}", "received_events_url": "https://api.github.com/users/cbrewster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbrewster", "id": 9086315, "node_id": "MDQ6VXNlcjkwODYzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9086315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbrewster", "html_url": "https://github.com/cbrewster", "followers_url": "https://api.github.com/users/cbrewster/followers", "following_url": "https://api.github.com/users/cbrewster/following{/other_user}", "gists_url": "https://api.github.com/users/cbrewster/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbrewster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbrewster/subscriptions", "organizations_url": "https://api.github.com/users/cbrewster/orgs", "repos_url": "https://api.github.com/users/cbrewster/repos", "events_url": "https://api.github.com/users/cbrewster/events{/privacy}", "received_events_url": "https://api.github.com/users/cbrewster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b236819f7222c43749e500970b52ee671d68a67a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b236819f7222c43749e500970b52ee671d68a67a", "html_url": "https://github.com/rust-lang/rust/commit/b236819f7222c43749e500970b52ee671d68a67a"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "efe3a86e3a5650026ac9be4847e64e5a4e4a5254", "filename": "src/items.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6b741a7194c4de975083743f3d49fd3ab24ff74c/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b741a7194c4de975083743f3d49fd3ab24ff74c/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=6b741a7194c4de975083743f3d49fd3ab24ff74c", "patch": "@@ -21,6 +21,7 @@ use comment::{FindUncommented, contains_comment};\n use visitor::FmtVisitor;\n use rewrite::{Rewrite, RewriteContext};\n use config::{Config, BlockIndentStyle, Density, ReturnIndent, BraceStyle, StructLitStyle};\n+use syntax::codemap;\n \n use syntax::{ast, abi};\n use syntax::codemap::{Span, BytePos, mk_sp};\n@@ -180,6 +181,10 @@ impl<'a> FmtVisitor<'a> {\n         let mut newline_brace = newline_for_brace(self.config, &generics.where_clause);\n         let context = self.get_context();\n \n+        let block_snippet = self.snippet(codemap::mk_sp(block.span.lo, block.span.hi));\n+        let is_block_empty = block_snippet[1..block_snippet.len() - 1].trim().is_empty() &&\n+                             context.config.fn_empty_single_line;\n+\n         let (mut result, force_newline_brace) = try_opt!(rewrite_fn_base(&context,\n                                                                          indent,\n                                                                          ident,\n@@ -192,7 +197,7 @@ impl<'a> FmtVisitor<'a> {\n                                                                          vis,\n                                                                          span,\n                                                                          newline_brace,\n-                                                                         true));\n+                                                                         !is_block_empty));\n \n         if self.config.fn_brace_style != BraceStyle::AlwaysNextLine && !result.contains('\\n') {\n             newline_brace = false;\n@@ -1196,7 +1201,7 @@ fn rewrite_fn_base(context: &RewriteContext,\n                            (context.config.fn_args_layout == StructLitStyle::Block &&\n                             ret_str.is_empty()) ||\n                            (context.config.where_density == Density::CompressedIfEmpty &&\n-                            !has_body) {\n+                            !has_body && !result.contains('\\n')) {\n         Density::Compressed\n     } else {\n         Density::Tall\n@@ -1213,6 +1218,12 @@ fn rewrite_fn_base(context: &RewriteContext,\n                                                          where_density,\n                                                          \"{\",\n                                                          Some(span.hi)));\n+\n+    if last_line_width(&result) + where_clause_str.len() > context.config.max_width &&\n+       !where_clause_str.contains('\\n') {\n+        result.push('\\n');\n+    }\n+\n     result.push_str(&where_clause_str);\n \n     Some((result, force_new_line_for_brace))"}, {"sha": "6d7f764d28002150f69a6e58e1cbccafce703263", "filename": "tests/source/fn-single-line.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b741a7194c4de975083743f3d49fd3ab24ff74c/tests%2Fsource%2Ffn-single-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b741a7194c4de975083743f3d49fd3ab24ff74c/tests%2Fsource%2Ffn-single-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-single-line.rs?ref=6b741a7194c4de975083743f3d49fd3ab24ff74c", "patch": "@@ -74,3 +74,6 @@ trait CoolTypes {\n trait CoolerTypes { fn dummy(&self) { \n }\n }\n+\n+fn Foo<T>() where T: Bar {\n+}"}, {"sha": "049206b60c8b21b6c859308125f062e6fa2f87d0", "filename": "tests/target/fn-single-line.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b741a7194c4de975083743f3d49fd3ab24ff74c/tests%2Ftarget%2Ffn-single-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b741a7194c4de975083743f3d49fd3ab24ff74c/tests%2Ftarget%2Ffn-single-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-single-line.rs?ref=6b741a7194c4de975083743f3d49fd3ab24ff74c", "patch": "@@ -61,3 +61,5 @@ trait CoolTypes {\n trait CoolerTypes {\n     fn dummy(&self) {}\n }\n+\n+fn Foo<T>() where T: Bar {}"}, {"sha": "02600f43f2a695195d427019269bc56fcdae6d05", "filename": "tests/target/fn.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6b741a7194c4de975083743f3d49fd3ab24ff74c/tests%2Ftarget%2Ffn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b741a7194c4de975083743f3d49fd3ab24ff74c/tests%2Ftarget%2Ffn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn.rs?ref=6b741a7194c4de975083743f3d49fd3ab24ff74c", "patch": "@@ -2,17 +2,9 @@\n \n fn foo(a: AAAA, b: BBB, c: CCC) -> RetType {}\n \n-fn foo(a: AAAA, b: BBB /* some, weird, inline comment */, c: CCC) -> RetType\n-    where T: Blah\n-{\n+fn foo(a: AAAA, b: BBB /* some, weird, inline comment */, c: CCC) -> RetType where T: Blah {}\n \n-}\n-\n-fn foo(a: AAA /* (comment) */)\n-    where T: Blah\n-{\n-\n-}\n+fn foo(a: AAA /* (comment) */) where T: Blah {}\n \n fn foo(a: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,\n        b: BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)\n@@ -35,10 +27,7 @@ fn foo<U, T>(a: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,\n fn foo<U: Fn(A) -> B /* paren inside generics */>() {}\n \n impl Foo {\n-    fn with_no_errors<T, F>(&mut self, f: F) -> T\n-        where F: FnOnce(&mut Resolver) -> T\n-    {\n-    }\n+    fn with_no_errors<T, F>(&mut self, f: F) -> T where F: FnOnce(&mut Resolver) -> T {}\n \n     fn foo(mut self, mut bar: u32) {}\n "}]}