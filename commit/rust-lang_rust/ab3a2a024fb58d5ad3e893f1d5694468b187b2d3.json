{"sha": "ab3a2a024fb58d5ad3e893f1d5694468b187b2d3", "node_id": "C_kwDOAAsO6NoAKGFiM2EyYTAyNGZiNThkNWFkM2U4OTNmMWQ1Njk0NDY4YjE4N2IyZDM", "commit": {"author": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2022-03-29T13:31:42Z"}, "committer": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2022-06-15T08:16:48Z"}, "message": "Unify copying data from enclave to userspace", "tree": {"sha": "74ce1323ffd7f67b2588d2f40e27260205e86e8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74ce1323ffd7f67b2588d2f40e27260205e86e8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab3a2a024fb58d5ad3e893f1d5694468b187b2d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab3a2a024fb58d5ad3e893f1d5694468b187b2d3", "html_url": "https://github.com/rust-lang/rust/commit/ab3a2a024fb58d5ad3e893f1d5694468b187b2d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab3a2a024fb58d5ad3e893f1d5694468b187b2d3/comments", "author": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddb6cc85243ac4761fbc32a407b10216544fe57b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddb6cc85243ac4761fbc32a407b10216544fe57b", "html_url": "https://github.com/rust-lang/rust/commit/ddb6cc85243ac4761fbc32a407b10216544fe57b"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "9a64b7e4b150c7a77b1dde0f9c09ca4d98eb0f0a", "filename": "library/std/src/sys/sgx/abi/usercalls/alloc.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab3a2a024fb58d5ad3e893f1d5694468b187b2d3/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3a2a024fb58d5ad3e893f1d5694468b187b2d3/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs?ref=ab3a2a024fb58d5ad3e893f1d5694468b187b2d3", "patch": "@@ -225,13 +225,9 @@ where\n     /// Copies `val` into freshly allocated space in user memory.\n     pub fn new_from_enclave(val: &T) -> Self {\n         unsafe {\n-            let ret = Self::new_uninit_bytes(mem::size_of_val(val));\n-            ptr::copy(\n-                val as *const T as *const u8,\n-                ret.0.as_ptr() as *mut u8,\n-                mem::size_of_val(val),\n-            );\n-            ret\n+            let mut user = Self::new_uninit_bytes(mem::size_of_val(val));\n+            user.copy_from_enclave(val);\n+            user\n         }\n     }\n "}]}