{"sha": "d77b5857c2420666e84dcd433f254e000e2843aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3N2I1ODU3YzI0MjA2NjZlODRkY2Q0MzNmMjU0ZTAwMGUyODQzYWE=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-21T10:46:17Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-21T10:46:17Z"}, "message": "Merge #867\n\n867: This moves the parser to separate crate r=matklad a=matklad\n\nThat makes parser independent form both the token and the tree representation. \n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "416e333019e349bf4ee369f2548d9e6f6a9c67e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/416e333019e349bf4ee369f2548d9e6f6a9c67e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d77b5857c2420666e84dcd433f254e000e2843aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d77b5857c2420666e84dcd433f254e000e2843aa", "html_url": "https://github.com/rust-lang/rust/commit/d77b5857c2420666e84dcd433f254e000e2843aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d77b5857c2420666e84dcd433f254e000e2843aa/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "18b0c509f77a8e06141fee6668532cced1ebf5d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/18b0c509f77a8e06141fee6668532cced1ebf5d8", "html_url": "https://github.com/rust-lang/rust/commit/18b0c509f77a8e06141fee6668532cced1ebf5d8"}, {"sha": "46179230a05331b1debd4dfa3bb197fa38d92347", "url": "https://api.github.com/repos/rust-lang/rust/commits/46179230a05331b1debd4dfa3bb197fa38d92347", "html_url": "https://github.com/rust-lang/rust/commit/46179230a05331b1debd4dfa3bb197fa38d92347"}], "stats": {"total": 201, "additions": 127, "deletions": 74}, "files": [{"sha": "f09cf98c88203e52b90a24178569dd502fcb6c6f", "filename": "Cargo.lock", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -1071,6 +1071,13 @@ dependencies = [\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"ra_parser\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"drop_bomb 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"ra_project_model\"\n version = \"0.1.0\"\n@@ -1093,6 +1100,7 @@ dependencies = [\n  \"drop_bomb 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ra_parser 0.1.0\",\n  \"ra_text_edit 0.1.0\",\n  \"rowan 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smol_str 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\","}, {"sha": "b110e2bc6d3b7914c79499574d479273c8b849bc", "filename": "crates/ra_parser/Cargo.toml", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2FCargo.toml?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -0,0 +1,9 @@\n+[package]\n+edition = \"2018\"\n+name = \"ra_parser\"\n+version = \"0.1.0\"\n+authors = [\"rust-analyzer developers\"]\n+publish = false\n+\n+[dependencies]\n+drop_bomb = \"0.1.4\""}, {"sha": "d6e8454d43daa22f24ee778702410db78e953003", "filename": "crates/ra_parser/src/event.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fevent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fevent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fevent.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -10,8 +10,8 @@\n use std::mem;\n \n use crate::{\n+    ParseError, TreeSink,\n     SyntaxKind::{self, *},\n-    parsing::{ParseError, TreeSink},\n };\n \n /// `Parser` produces a flat list of `Event`s.\n@@ -84,7 +84,7 @@ impl Event {\n }\n \n /// Generate the syntax tree with the control of events.\n-pub(super) fn process(sink: &mut impl TreeSink, mut events: Vec<Event>) {\n+pub(super) fn process(sink: &mut dyn TreeSink, mut events: Vec<Event>) {\n     let mut forward_parents = Vec::new();\n \n     for i in 0..events.len() {", "previous_filename": "crates/ra_syntax/src/parsing/event.rs"}, {"sha": "15aab6c6fcd544294d37301a751dde8c4517c543", "filename": "crates/ra_parser/src/grammar.rs", "status": "renamed", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -38,20 +38,18 @@ mod types;\n \n use crate::{\n     SyntaxKind::{self, *},\n-    parsing::{\n-        token_set::TokenSet,\n-        parser::{CompletedMarker, Marker, Parser}\n-    },\n+    TokenSet,\n+    parser::{CompletedMarker, Marker, Parser},\n };\n \n-pub(super) fn root(p: &mut Parser) {\n+pub(crate) fn root(p: &mut Parser) {\n     let m = p.start();\n     p.eat(SHEBANG);\n     items::mod_contents(p, false);\n     m.complete(p, SOURCE_FILE);\n }\n \n-pub(super) fn reparser(\n+pub(crate) fn reparser(\n     node: SyntaxKind,\n     first_child: Option<SyntaxKind>,\n     parent: Option<SyntaxKind>,", "previous_filename": "crates/ra_syntax/src/parsing/grammar.rs"}, {"sha": "cd30e8a450c6192c9a9ef5ba3fec3a211db84646", "filename": "crates/ra_parser/src/grammar/attributes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fattributes.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/attributes.rs"}, {"sha": "d5a4f4d7b94bab8abaee0c485aab46dcad7817c9", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/expressions.rs"}, {"sha": "e74305b6a94c222dd0c6e47ef816f295b04f33e4", "filename": "crates/ra_parser/src/grammar/expressions/atom.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/expressions/atom.rs"}, {"sha": "4b962c1f37f989d42942ed7d7b5ed896bd5a79ef", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/items.rs"}, {"sha": "5a5852f83ad4658a1cae37ffe48c68af3b412b25", "filename": "crates/ra_parser/src/grammar/items/consts.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/items/consts.rs"}, {"sha": "ff9b38f9c25d8dd28968a18c12049b69820b0354", "filename": "crates/ra_parser/src/grammar/items/nominal.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/items/nominal.rs"}, {"sha": "d5a8ccd98e2b636da839e898cafd27586054d5eb", "filename": "crates/ra_parser/src/grammar/items/traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/items/traits.rs"}, {"sha": "5111d37ebda00819e9fbf57c7325d1d4a0b8aff2", "filename": "crates/ra_parser/src/grammar/items/use_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/items/use_item.rs"}, {"sha": "185386569aa01014c70627823de2fa9cddfb965e", "filename": "crates/ra_parser/src/grammar/params.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/params.rs"}, {"sha": "33a11886cb3085c50c0f5fb7dffcc5052bdb37a5", "filename": "crates/ra_parser/src/grammar/paths.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/paths.rs"}, {"sha": "9d7da639d5e812828fd18428bc48c3b4d78ca11c", "filename": "crates/ra_parser/src/grammar/patterns.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/patterns.rs"}, {"sha": "f889419c51d22281271fc0838c397856cbe92251", "filename": "crates/ra_parser/src/grammar/type_args.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_args.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/type_args.rs"}, {"sha": "40f99868206e84bb6b6f5d982aabb71b2e4b4ccf", "filename": "crates/ra_parser/src/grammar/type_params.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/type_params.rs"}, {"sha": "adc189a292d5d319c32734a771d6c4010435724f", "filename": "crates/ra_parser/src/grammar/types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/grammar/types.rs"}, {"sha": "7931b5189fa02682b3c5fef4bff290eef6d579a5", "filename": "crates/ra_parser/src/lib.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Flib.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -0,0 +1,64 @@\n+#[macro_use]\n+mod token_set;\n+mod syntax_kind;\n+mod event;\n+mod parser;\n+mod grammar;\n+\n+pub(crate) use token_set::TokenSet;\n+\n+pub use syntax_kind::SyntaxKind;\n+\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub struct ParseError(pub String);\n+\n+/// `TreeSink` abstracts details of a particular syntax tree implementation.\n+pub trait TreeSink {\n+    /// Adds new leaf to the current branch.\n+    fn leaf(&mut self, kind: SyntaxKind, n_tokens: u8);\n+\n+    /// Start new branch and make it current.\n+    fn start_branch(&mut self, kind: SyntaxKind, root: bool);\n+\n+    /// Finish current branch and restore previous\n+    /// branch as current.\n+    fn finish_branch(&mut self, root: bool);\n+\n+    fn error(&mut self, error: ParseError);\n+}\n+\n+/// `TokenSource` abstracts the source of the tokens parser operates one.\n+///\n+/// Hopefully this will allow us to treat text and token trees in the same way!\n+pub trait TokenSource {\n+    fn token_kind(&self, pos: usize) -> SyntaxKind;\n+    fn is_token_joint_to_next(&self, pos: usize) -> bool;\n+    fn is_keyword(&self, pos: usize, kw: &str) -> bool;\n+}\n+\n+pub fn parse(token_source: &dyn TokenSource, tree_sink: &mut dyn TreeSink) {\n+    let mut p = parser::Parser::new(token_source);\n+    grammar::root(&mut p);\n+    let events = p.finish();\n+    event::process(tree_sink, events);\n+}\n+\n+pub struct Reparser(fn(&mut parser::Parser));\n+\n+impl Reparser {\n+    pub fn for_node(\n+        node: SyntaxKind,\n+        first_child: Option<SyntaxKind>,\n+        parent: Option<SyntaxKind>,\n+    ) -> Option<Reparser> {\n+        grammar::reparser(node, first_child, parent).map(Reparser)\n+    }\n+\n+    pub fn parse(self, token_source: &dyn TokenSource, tree_sink: &mut dyn TreeSink) {\n+        let Reparser(r) = self;\n+        let mut p = parser::Parser::new(token_source);\n+        r(&mut p);\n+        let events = p.finish();\n+        event::process(tree_sink, events);\n+    }\n+}"}, {"sha": "a18458148a98fd656b3159233f87254a3cfa8526", "filename": "crates/ra_parser/src/parser.rs", "status": "renamed", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fparser.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -4,11 +4,8 @@ use drop_bomb::DropBomb;\n \n use crate::{\n     SyntaxKind::{self, ERROR, EOF, TOMBSTONE},\n-    parsing::{\n-        TokenSource, ParseError,\n-        token_set::TokenSet,\n-        event::Event,\n-    },\n+    TokenSource, ParseError, TokenSet,\n+    event::Event,\n };\n \n /// `Parser` struct provides the low-level API for", "previous_filename": "crates/ra_syntax/src/parsing/parser.rs"}, {"sha": "a2353317f8715b7f954005049e8e93a886597a32", "filename": "crates/ra_parser/src/syntax_kind.rs", "status": "renamed", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fsyntax_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fsyntax_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -2,8 +2,6 @@ mod generated;\n \n use std::fmt;\n \n-use crate::SyntaxKind::*;\n-\n pub use self::generated::SyntaxKind;\n \n impl fmt::Debug for SyntaxKind {\n@@ -20,7 +18,7 @@ pub(crate) struct SyntaxInfo {\n impl SyntaxKind {\n     pub fn is_trivia(self) -> bool {\n         match self {\n-            WHITESPACE | COMMENT => true,\n+            SyntaxKind::WHITESPACE | SyntaxKind::COMMENT => true,\n             _ => false,\n         }\n     }", "previous_filename": "crates/ra_syntax/src/syntax_kinds.rs"}, {"sha": "1d8f988aed0b24d6d3970f5dd20529e33e3e37f3", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -568,7 +568,7 @@ impl SyntaxKind {\n             EOF => &SyntaxInfo { name: \"EOF\" },\n         }\n     }\n-    pub(crate) fn from_keyword(ident: &str) -> Option<SyntaxKind> {\n+    pub fn from_keyword(ident: &str) -> Option<SyntaxKind> {\n         let kw = match ident {\n             \"use\" => USE_KW,\n             \"fn\" => FN_KW,\n@@ -610,7 +610,7 @@ impl SyntaxKind {\n         Some(kw)\n     }\n \n-    pub(crate) fn from_char(c: char) -> Option<SyntaxKind> {\n+    pub fn from_char(c: char) -> Option<SyntaxKind> {\n         let tok = match c {\n             ';' => SEMI,\n             ',' => COMMA,", "previous_filename": "crates/ra_syntax/src/syntax_kinds/generated.rs"}, {"sha": "f241a21a0eb86cc6118b84be85c701282adef37d", "filename": "crates/ra_parser/src/syntax_kind/generated.rs.tera", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs.tera", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs.tera", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs.tera?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -74,7 +74,7 @@ impl SyntaxKind {\n             EOF => &SyntaxInfo { name: \"EOF\" },\n         }\n     }\n-    pub(crate) fn from_keyword(ident: &str) -> Option<SyntaxKind> {\n+    pub fn from_keyword(ident: &str) -> Option<SyntaxKind> {\n         let kw = match ident {\n {%- for kw in keywords %}\n             \"{{kw}}\" => {{kw | upper}}_KW,\n@@ -84,7 +84,7 @@ impl SyntaxKind {\n         Some(kw)\n     }\n \n-    pub(crate) fn from_char(c: char) -> Option<SyntaxKind> {\n+    pub fn from_char(c: char) -> Option<SyntaxKind> {\n         let tok = match c {\n {%- for t in single_byte_tokens %}\n             '{{t.0}}' => {{t.1}},", "previous_filename": "crates/ra_syntax/src/syntax_kinds/generated.rs.tera"}, {"sha": "24152a38ad5c9e52bb6987cee3bbb6a1518b901a", "filename": "crates/ra_parser/src/token_set.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Ftoken_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_parser%2Fsrc%2Ftoken_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Ftoken_set.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "previous_filename": "crates/ra_syntax/src/parsing/token_set.rs"}, {"sha": "7e70dad3fff18eeaabef6a473332b9a46bc10666", "filename": "crates/ra_syntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2FCargo.toml?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -21,6 +21,7 @@ text_unit = { version = \"0.1.6\", features = [\"serde\"] }\n smol_str = { version = \"0.1.9\", features = [\"serde\"] }\n \n ra_text_edit = { path = \"../ra_text_edit\" }\n+ra_parser = { path = \"../ra_parser\" }\n \n [dev-dependencies]\n test_utils = { path = \"../test_utils\" }"}, {"sha": "c788bddec827083f0ab12bfab4858ee17fbb68fa", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -16,7 +16,6 @@\n #![allow(missing_docs)]\n //#![warn(unreachable_pub)] // rust-lang/rust#47816\n \n-mod syntax_kinds;\n mod syntax_node;\n mod syntax_text;\n mod syntax_error;\n@@ -31,9 +30,9 @@ pub mod ast;\n pub mod utils;\n \n pub use rowan::{SmolStr, TextRange, TextUnit};\n+pub use ra_parser::SyntaxKind;\n pub use crate::{\n     ast::AstNode,\n-    syntax_kinds::SyntaxKind,\n     syntax_error::{SyntaxError, SyntaxErrorKind, Location},\n     syntax_text::SyntaxText,\n     syntax_node::{Direction,  SyntaxNode, WalkEvent, TreeArc},"}, {"sha": "0a11600e19f11552ee1b7bb65ee80890ae39a7fd", "filename": "crates/ra_syntax/src/parsing.rs", "status": "modified", "additions": 5, "deletions": 27, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -1,50 +1,28 @@\n-#[macro_use]\n-mod token_set;\n mod builder;\n mod lexer;\n-mod event;\n mod input;\n-mod parser;\n-mod grammar;\n mod reparsing;\n \n+use ra_parser::{parse, ParseError};\n+\n use crate::{\n     SyntaxKind, SyntaxError,\n     parsing::{\n         builder::TreeBuilder,\n         input::ParserInput,\n-        event::process,\n-        parser::Parser,\n     },\n     syntax_node::GreenNode,\n };\n \n pub use self::lexer::{tokenize, Token};\n \n-#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct ParseError(pub String);\n-\n pub(crate) use self::reparsing::incremental_reparse;\n \n pub(crate) fn parse_text(text: &str) -> (GreenNode, Vec<SyntaxError>) {\n     let tokens = tokenize(&text);\n-    let tree_sink = TreeBuilder::new(text, &tokens);\n-    parse_with(tree_sink, text, &tokens, grammar::root)\n-}\n-\n-fn parse_with<S: TreeSink>(\n-    mut tree_sink: S,\n-    text: &str,\n-    tokens: &[Token],\n-    f: fn(&mut Parser),\n-) -> S::Tree {\n-    let events = {\n-        let input = ParserInput::new(text, &tokens);\n-        let mut p = Parser::new(&input);\n-        f(&mut p);\n-        p.finish()\n-    };\n-    process(&mut tree_sink, events);\n+    let token_source = ParserInput::new(text, &tokens);\n+    let mut tree_sink = TreeBuilder::new(text, &tokens);\n+    parse(&token_source, &mut tree_sink);\n     tree_sink.finish()\n }\n "}, {"sha": "0775b090061c7e730bff3680fcfca16fba9ab66e", "filename": "crates/ra_syntax/src/parsing/builder.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fbuilder.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -1,7 +1,9 @@\n+use ra_parser::{TreeSink, ParseError};\n+\n use crate::{\n     SmolStr, SyntaxError, SyntaxErrorKind, TextUnit, TextRange,\n     SyntaxKind::{self, *},\n-    parsing::{TreeSink, ParseError, Token},\n+    parsing::Token,\n     syntax_node::{GreenNode, RaTypes},\n };\n \n@@ -17,8 +19,6 @@ pub(crate) struct TreeBuilder<'a> {\n }\n \n impl<'a> TreeSink for TreeBuilder<'a> {\n-    type Tree = (GreenNode, Vec<SyntaxError>);\n-\n     fn leaf(&mut self, kind: SyntaxKind, n_tokens: u8) {\n         self.eat_trivias();\n         let n_tokens = n_tokens as usize;\n@@ -65,10 +65,6 @@ impl<'a> TreeSink for TreeBuilder<'a> {\n         let error = SyntaxError::new(SyntaxErrorKind::ParseError(error), self.text_pos);\n         self.errors.push(error)\n     }\n-\n-    fn finish(self) -> (GreenNode, Vec<SyntaxError>) {\n-        (self.inner.finish(), self.errors)\n-    }\n }\n \n impl<'a> TreeBuilder<'a> {\n@@ -82,6 +78,11 @@ impl<'a> TreeBuilder<'a> {\n             inner: GreenNodeBuilder::new(),\n         }\n     }\n+\n+    pub(super) fn finish(self) -> (GreenNode, Vec<SyntaxError>) {\n+        (self.inner.finish(), self.errors)\n+    }\n+\n     fn eat_trivias(&mut self) {\n         while let Some(&token) = self.tokens.get(self.token_pos) {\n             if !token.kind.is_trivia() {"}, {"sha": "58be795bc302515b3e8e6c87e8ece2df084b2170", "filename": "crates/ra_syntax/src/parsing/input.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Fparsing%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Fparsing%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Finput.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -1,9 +1,8 @@\n+use ra_parser::TokenSource;\n+\n use crate::{\n     SyntaxKind, SyntaxKind::EOF, TextRange, TextUnit,\n-    parsing::{\n-        TokenSource,\n-        lexer::Token,\n-    },\n+    parsing::lexer::Token,\n };\n \n impl<'t> TokenSource for ParserInput<'t> {"}, {"sha": "ffcb512adf8ddc1a98cf32f07595b94659373b07", "filename": "crates/ra_syntax/src/parsing/reparsing.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -1,18 +1,18 @@\n+use ra_text_edit::AtomTextEdit;\n+use ra_parser::Reparser;\n+\n use crate::{\n     SyntaxKind::*, TextRange, TextUnit,\n     algo,\n     syntax_node::{GreenNode, SyntaxNode},\n     syntax_error::SyntaxError,\n     parsing::{\n-        grammar, parse_with,\n+        input::ParserInput,\n         builder::TreeBuilder,\n-        parser::Parser,\n         lexer::{tokenize, Token},\n     }\n };\n \n-use ra_text_edit::AtomTextEdit;\n-\n pub(crate) fn incremental_reparse(\n     node: &SyntaxNode,\n     edit: &AtomTextEdit,\n@@ -61,8 +61,10 @@ fn reparse_block<'node>(\n     if !is_balanced(&tokens) {\n         return None;\n     }\n-    let tree_sink = TreeBuilder::new(&text, &tokens);\n-    let (green, new_errors) = parse_with(tree_sink, &text, &tokens, reparser);\n+    let token_source = ParserInput::new(&text, &tokens);\n+    let mut tree_sink = TreeBuilder::new(&text, &tokens);\n+    reparser.parse(&token_source, &mut tree_sink);\n+    let (green, new_errors) = tree_sink.finish();\n     Some((node, green, new_errors))\n }\n \n@@ -78,15 +80,12 @@ fn is_contextual_kw(text: &str) -> bool {\n     }\n }\n \n-fn find_reparsable_node(\n-    node: &SyntaxNode,\n-    range: TextRange,\n-) -> Option<(&SyntaxNode, fn(&mut Parser))> {\n+fn find_reparsable_node(node: &SyntaxNode, range: TextRange) -> Option<(&SyntaxNode, Reparser)> {\n     let node = algo::find_covering_node(node, range);\n     node.ancestors().find_map(|node| {\n         let first_child = node.first_child().map(|it| it.kind());\n         let parent = node.parent().map(|it| it.kind());\n-        grammar::reparser(node.kind(), first_child, parent).map(|r| (node, r))\n+        Reparser::for_node(node.kind(), first_child, parent).map(|r| (node, r))\n     })\n }\n "}, {"sha": "bdd4317422e100deb76000d069da48104ce4d696", "filename": "crates/ra_syntax/src/syntax_error.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -1,6 +1,8 @@\n use std::fmt;\n \n-use crate::{TextRange, TextUnit, parsing::ParseError};\n+use ra_parser::ParseError;\n+\n+use crate::{TextRange, TextUnit};\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct SyntaxError {"}, {"sha": "3c23ed76e00f653b4016e4af4e239b18e2521659", "filename": "crates/tools/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Ftools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77b5857c2420666e84dcd433f254e000e2843aa/crates%2Ftools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Flib.rs?ref=d77b5857c2420666e84dcd433f254e000e2843aa", "patch": "@@ -14,11 +14,11 @@ pub use teraron::{Mode, Overwrite, Verify};\n pub type Result<T> = std::result::Result<T, failure::Error>;\n \n pub const GRAMMAR: &str = \"crates/ra_syntax/src/grammar.ron\";\n-const GRAMMAR_DIR: &str = \"crates/ra_syntax/src/parsing/grammar\";\n+const GRAMMAR_DIR: &str = \"crates/ra_parser/src/grammar\";\n const OK_INLINE_TESTS_DIR: &str = \"crates/ra_syntax/tests/data/parser/inline/ok\";\n const ERR_INLINE_TESTS_DIR: &str = \"crates/ra_syntax/tests/data/parser/inline/err\";\n \n-pub const SYNTAX_KINDS: &str = \"crates/ra_syntax/src/syntax_kinds/generated.rs.tera\";\n+pub const SYNTAX_KINDS: &str = \"crates/ra_parser/src/syntax_kind/generated.rs.tera\";\n pub const AST: &str = \"crates/ra_syntax/src/ast/generated.rs.tera\";\n const TOOLCHAIN: &str = \"stable\";\n "}]}