{"sha": "db57e67452c00a18ac68845717c5c20e3db77888", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNTdlNjc0NTJjMDBhMThhYzY4ODQ1NzE3YzVjMjBlM2RiNzc4ODg=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-29T09:28:50Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-29T09:35:56Z"}, "message": "Support `cfg_attr` on `path` attributes", "tree": {"sha": "229da4cd358e16875005cdf51083616c51a7843a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/229da4cd358e16875005cdf51083616c51a7843a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db57e67452c00a18ac68845717c5c20e3db77888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db57e67452c00a18ac68845717c5c20e3db77888", "html_url": "https://github.com/rust-lang/rust/commit/db57e67452c00a18ac68845717c5c20e3db77888", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db57e67452c00a18ac68845717c5c20e3db77888/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea0dc9297283daff6486807f43e190b4eb561412", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea0dc9297283daff6486807f43e190b4eb561412", "html_url": "https://github.com/rust-lang/rust/commit/ea0dc9297283daff6486807f43e190b4eb561412"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "36a4568b693bef467c24e21be05810fe6483149e", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db57e67452c00a18ac68845717c5c20e3db77888/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db57e67452c00a18ac68845717c5c20e3db77888/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=db57e67452c00a18ac68845717c5c20e3db77888", "patch": "@@ -33,7 +33,7 @@ impl<'a> StripUnconfigured<'a> {\n         if self.in_cfg(node.attrs()) { Some(node) } else { None }\n     }\n \n-    fn process_cfg_attrs<T: HasAttrs>(&mut self, node: T) -> T {\n+    pub fn process_cfg_attrs<T: HasAttrs>(&mut self, node: T) -> T {\n         node.map_attrs(|attrs| {\n             attrs.into_iter().filter_map(|attr| self.process_cfg_attr(attr)).collect()\n         })"}, {"sha": "db101e459dbcafcc0827b34bbf3034a4a847dc72", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/db57e67452c00a18ac68845717c5c20e3db77888/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db57e67452c00a18ac68845717c5c20e3db77888/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=db57e67452c00a18ac68845717c5c20e3db77888", "patch": "@@ -5301,15 +5301,22 @@ impl<'a> Parser<'a> {\n \n     /// Parse a `mod <foo> { ... }` or `mod <foo>;` item\n     fn parse_item_mod(&mut self, outer_attrs: &[Attribute]) -> PResult<'a, ItemInfo> {\n+        let outer_attrs = ::config::StripUnconfigured {\n+            config: &self.cfg,\n+            sess: self.sess,\n+            should_test: false, // irrelevant\n+            features: None, // don't perform gated feature checking\n+        }.process_cfg_attrs(outer_attrs.to_owned());\n+\n         let id_span = self.span;\n         let id = self.parse_ident()?;\n         if self.check(&token::Semi) {\n             self.bump();\n             // This mod is in an external file. Let's go get it!\n-            let (m, attrs) = self.eval_src_mod(id, outer_attrs, id_span)?;\n+            let (m, attrs) = self.eval_src_mod(id, &outer_attrs, id_span)?;\n             Ok((id, m, Some(attrs)))\n         } else {\n-            self.push_mod_path(id, outer_attrs);\n+            self.push_mod_path(id, &outer_attrs);\n             self.expect(&token::OpenDelim(token::Brace))?;\n             let mod_inner_lo = self.span.lo;\n             let attrs = self.parse_inner_attributes()?;"}]}