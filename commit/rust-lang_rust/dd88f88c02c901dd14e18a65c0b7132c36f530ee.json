{"sha": "dd88f88c02c901dd14e18a65c0b7132c36f530ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkODhmODhjMDJjOTAxZGQxNGUxOGE2NWMwYjcxMzJjMzZmNTMwZWU=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-06-02T20:06:17Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-06-03T00:44:15Z"}, "message": "Copy changes from HashMap over to BTreeMap.", "tree": {"sha": "64495b2f32dbb5ad8a383aee948cb0bab5076449", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64495b2f32dbb5ad8a383aee948cb0bab5076449"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd88f88c02c901dd14e18a65c0b7132c36f530ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd88f88c02c901dd14e18a65c0b7132c36f530ee", "html_url": "https://github.com/rust-lang/rust/commit/dd88f88c02c901dd14e18a65c0b7132c36f530ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd88f88c02c901dd14e18a65c0b7132c36f530ee/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a86f556ee37c13047f966c35effab8b334b7de67", "url": "https://api.github.com/repos/rust-lang/rust/commits/a86f556ee37c13047f966c35effab8b334b7de67", "html_url": "https://github.com/rust-lang/rust/commit/a86f556ee37c13047f966c35effab8b334b7de67"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "9b6f91c039feaa471360c47a83fa452d2cd95694", "filename": "src/liballoc/btree/map.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/dd88f88c02c901dd14e18a65c0b7132c36f530ee/src%2Fliballoc%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd88f88c02c901dd14e18a65c0b7132c36f530ee/src%2Fliballoc%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fmap.rs?ref=dd88f88c02c901dd14e18a65c0b7132c36f530ee", "patch": "@@ -2369,6 +2369,11 @@ impl<'a, K: Ord, V> OccupiedEntry<'a, K, V> {\n \n     /// Gets a mutable reference to the value in the entry.\n     ///\n+    /// If you need a reference to the `OccupiedEntry` which may outlive the\n+    /// destruction of the `Entry` value, see [`into_mut`].\n+    ///\n+    /// [`into_mut`]: #method.into_mut\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -2380,9 +2385,13 @@ impl<'a, K: Ord, V> OccupiedEntry<'a, K, V> {\n     ///\n     /// assert_eq!(map[\"poneyland\"], 12);\n     /// if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {\n-    ///      *o.get_mut() += 10;\n+    ///     *o.get_mut() += 10;\n+    ///     assert_eq!(*o.get(), 22);\n+    ///\n+    ///     // We can use the same Entry multiple times.\n+    ///     *o.get_mut() += 2;\n     /// }\n-    /// assert_eq!(map[\"poneyland\"], 22);\n+    /// assert_eq!(map[\"poneyland\"], 24);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn get_mut(&mut self) -> &mut V {\n@@ -2391,6 +2400,10 @@ impl<'a, K: Ord, V> OccupiedEntry<'a, K, V> {\n \n     /// Converts the entry into a mutable reference to its value.\n     ///\n+    /// If you need multiple references to the `OccupiedEntry`, see [`get_mut`].\n+    ///\n+    /// [`get_mut`]: #method.get_mut\n+    ///\n     /// # Examples\n     ///\n     /// ```"}]}