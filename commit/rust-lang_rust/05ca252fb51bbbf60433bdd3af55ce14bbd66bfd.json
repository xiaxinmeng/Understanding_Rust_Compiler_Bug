{"sha": "05ca252fb51bbbf60433bdd3af55ce14bbd66bfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1Y2EyNTJmYjUxYmJiZjYwNDMzYmRkM2FmNTVjZTE0YmJkNjZiZmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-30T07:05:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-30T07:05:12Z"}, "message": "remove ast_editor.rs", "tree": {"sha": "3f1b50838de801f487c811df3c9a7e7b0c229ba7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f1b50838de801f487c811df3c9a7e7b0c229ba7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05ca252fb51bbbf60433bdd3af55ce14bbd66bfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05ca252fb51bbbf60433bdd3af55ce14bbd66bfd", "html_url": "https://github.com/rust-lang/rust/commit/05ca252fb51bbbf60433bdd3af55ce14bbd66bfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05ca252fb51bbbf60433bdd3af55ce14bbd66bfd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "054c53aeb9a9e29d1c06fa183da263037aa62572", "url": "https://api.github.com/repos/rust-lang/rust/commits/054c53aeb9a9e29d1c06fa183da263037aa62572", "html_url": "https://github.com/rust-lang/rust/commit/054c53aeb9a9e29d1c06fa183da263037aa62572"}], "stats": {"total": 75, "additions": 16, "deletions": 59}, "files": [{"sha": "39ff512335bc8114590ab6610d7a89ac54a57d9a", "filename": "crates/ra_assists/src/assists/move_bounds.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/05ca252fb51bbbf60433bdd3af55ce14bbd66bfd/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05ca252fb51bbbf60433bdd3af55ce14bbd66bfd/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_bounds.rs?ref=05ca252fb51bbbf60433bdd3af55ce14bbd66bfd", "patch": "@@ -1,11 +1,11 @@\n use hir::db::HirDatabase;\n use ra_syntax::{\n-    ast::{self, make, AstNode, NameOwner, TypeBoundsOwner},\n+    ast::{self, edit, make, AstNode, NameOwner, TypeBoundsOwner},\n     SyntaxElement,\n     SyntaxKind::*,\n };\n \n-use crate::{ast_editor::AstEditor, Assist, AssistCtx, AssistId};\n+use crate::{Assist, AssistCtx, AssistId};\n \n pub(crate) fn move_bounds_to_where_clause(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n     let type_param_list = ctx.node_at_offset::<ast::TypeParamList>()?;\n@@ -43,9 +43,8 @@ pub(crate) fn move_bounds_to_where_clause(mut ctx: AssistCtx<impl HirDatabase>)\n                     (type_param, without_bounds)\n                 });\n \n-            let mut ast_editor = AstEditor::new(type_param_list.clone());\n-            ast_editor.replace_descendants(new_params);\n-            ast_editor.into_text_edit(edit.text_edit_builder());\n+            let new_type_param_list = edit::replace_descendants(&type_param_list, new_params);\n+            edit.replace_ast(type_param_list.clone(), new_type_param_list);\n \n             let where_clause = {\n                 let predicates = type_param_list.type_params().filter_map(build_predicate);"}, {"sha": "69abf28a1e687ed12240cde40bfb967955ea59ef", "filename": "crates/ra_assists/src/ast_editor.rs", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/054c53aeb9a9e29d1c06fa183da263037aa62572/crates%2Fra_assists%2Fsrc%2Fast_editor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/054c53aeb9a9e29d1c06fa183da263037aa62572/crates%2Fra_assists%2Fsrc%2Fast_editor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fast_editor.rs?ref=054c53aeb9a9e29d1c06fa183da263037aa62572", "patch": "@@ -1,53 +0,0 @@\n-use std::{iter, ops::RangeInclusive};\n-\n-use ra_syntax::{\n-    algo,\n-    ast::{self, TypeBoundsOwner},\n-    AstNode, SyntaxElement,\n-};\n-use ra_text_edit::TextEditBuilder;\n-use rustc_hash::FxHashMap;\n-\n-pub struct AstEditor<N: AstNode> {\n-    original_ast: N,\n-    ast: N,\n-}\n-\n-impl<N: AstNode> AstEditor<N> {\n-    pub fn new(node: N) -> AstEditor<N>\n-    where\n-        N: Clone,\n-    {\n-        AstEditor { original_ast: node.clone(), ast: node }\n-    }\n-\n-    pub fn into_text_edit(self, builder: &mut TextEditBuilder) {\n-        algo::diff(&self.original_ast.syntax(), self.ast().syntax()).into_text_edit(builder)\n-    }\n-\n-    pub fn ast(&self) -> &N {\n-        &self.ast\n-    }\n-\n-    pub fn replace_descendants<T: AstNode>(\n-        &mut self,\n-        replacement_map: impl Iterator<Item = (T, T)>,\n-    ) -> &mut Self {\n-        let map = replacement_map\n-            .map(|(from, to)| (from.syntax().clone().into(), to.syntax().clone().into()))\n-            .collect::<FxHashMap<_, _>>();\n-        let new_syntax = algo::replace_descendants(self.ast.syntax(), &map);\n-        self.ast = N::cast(new_syntax).unwrap();\n-        self\n-    }\n-\n-    #[must_use]\n-    fn replace_children(\n-        &self,\n-        to_delete: RangeInclusive<SyntaxElement>,\n-        mut to_insert: impl Iterator<Item = SyntaxElement>,\n-    ) -> N {\n-        let new_syntax = algo::replace_children(self.ast().syntax(), to_delete, &mut to_insert);\n-        N::cast(new_syntax).unwrap()\n-    }\n-}"}, {"sha": "91b2a1dcefb870815040e7becbc313b62b0390ba", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/05ca252fb51bbbf60433bdd3af55ce14bbd66bfd/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05ca252fb51bbbf60433bdd3af55ce14bbd66bfd/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=05ca252fb51bbbf60433bdd3af55ce14bbd66bfd", "patch": "@@ -7,7 +7,6 @@\n \n mod assist_ctx;\n mod marks;\n-pub mod ast_editor;\n \n use hir::db::HirDatabase;\n use itertools::Itertools;"}, {"sha": "d0857d88b28c77696cfdde9514ea40219caac8e6", "filename": "crates/ra_syntax/src/ast/edit.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/05ca252fb51bbbf60433bdd3af55ce14bbd66bfd/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05ca252fb51bbbf60433bdd3af55ce14bbd66bfd/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs?ref=05ca252fb51bbbf60433bdd3af55ce14bbd66bfd", "patch": "@@ -4,6 +4,7 @@\n use std::{iter, ops::RangeInclusive};\n \n use arrayvec::ArrayVec;\n+use rustc_hash::FxHashMap;\n \n use crate::{\n     algo,\n@@ -216,6 +217,17 @@ fn strip_attrs_and_docs_inner(mut node: SyntaxNode) -> SyntaxNode {\n     node\n }\n \n+pub fn replace_descendants<N: AstNode, D: AstNode>(\n+    parent: &N,\n+    replacement_map: impl Iterator<Item = (D, D)>,\n+) -> N {\n+    let map = replacement_map\n+        .map(|(from, to)| (from.syntax().clone().into(), to.syntax().clone().into()))\n+        .collect::<FxHashMap<_, _>>();\n+    let new_syntax = algo::replace_descendants(parent.syntax(), &map);\n+    N::cast(new_syntax).unwrap()\n+}\n+\n // Note this is copy-pasted from fmt. It seems like fmt should be a separate\n // crate, but basic tree building should be this crate. However, tree building\n // might want to call into fmt..."}]}