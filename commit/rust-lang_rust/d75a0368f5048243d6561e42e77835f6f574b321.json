{"sha": "d75a0368f5048243d6561e42e77835f6f574b321", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NWEwMzY4ZjUwNDgyNDNkNjU2MWU0MmU3NzgzNWY2ZjU3NGIzMjE=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-16T06:20:09Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-16T06:20:09Z"}, "message": "Merge #536\n\n536: Introduce variable semicolon block expr r=matklad a=yerke\n\nFix for https://github.com/rust-analyzer/rust-analyzer/issues/504\r\n\r\nFeels a bit hacky...\n\nCo-authored-by: Yerkebulan Tulibergenov <yerkebulan@gmail.com>", "tree": {"sha": "17ffe16abbf568232e50696d8dcfbd798eef7009", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17ffe16abbf568232e50696d8dcfbd798eef7009"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d75a0368f5048243d6561e42e77835f6f574b321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d75a0368f5048243d6561e42e77835f6f574b321", "html_url": "https://github.com/rust-lang/rust/commit/d75a0368f5048243d6561e42e77835f6f574b321", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d75a0368f5048243d6561e42e77835f6f574b321/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "68d320a680b5df802b2c3e7dad5d890e3309ed60", "url": "https://api.github.com/repos/rust-lang/rust/commits/68d320a680b5df802b2c3e7dad5d890e3309ed60", "html_url": "https://github.com/rust-lang/rust/commit/68d320a680b5df802b2c3e7dad5d890e3309ed60"}, {"sha": "67ddd3359817f0a1254005e4c2dc921eed5e7ad9", "url": "https://api.github.com/repos/rust-lang/rust/commits/67ddd3359817f0a1254005e4c2dc921eed5e7ad9", "html_url": "https://github.com/rust-lang/rust/commit/67ddd3359817f0a1254005e4c2dc921eed5e7ad9"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "3e4434c237991740ab8d8c46911264a0428229f0", "filename": "crates/ra_ide_api_light/src/assists/introduce_variable.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d75a0368f5048243d6561e42e77835f6f574b321/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fintroduce_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75a0368f5048243d6561e42e77835f6f574b321/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fintroduce_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fintroduce_variable.rs?ref=d75a0368f5048243d6561e42e77835f6f574b321", "patch": "@@ -20,12 +20,16 @@ pub fn introduce_variable<'a>(ctx: AssistCtx) -> Option<Assist> {\n \n         buf.push_str(\"let var_name = \");\n         expr.syntax().text().push_to(&mut buf);\n-        let is_full_stmt = if let Some(expr_stmt) = ast::ExprStmt::cast(anchor_stmt) {\n+        let full_stmt = ast::ExprStmt::cast(anchor_stmt);\n+        let is_full_stmt = if let Some(expr_stmt) = full_stmt {\n             Some(expr.syntax()) == expr_stmt.expr().map(|e| e.syntax())\n         } else {\n             false\n         };\n         if is_full_stmt {\n+            if !full_stmt.unwrap().has_semi() {\n+                buf.push_str(\";\");\n+            }\n             edit.replace(expr.syntax().range(), buf);\n         } else {\n             buf.push_str(\";\");\n@@ -141,4 +145,20 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn test_introduce_var_block_expr_second_to_last() {\n+        check_assist_range(\n+            introduce_variable,\n+            \"\n+fn foo() {\n+    <|>{ let x = 0; x }<|>\n+    something_else();\n+}\",\n+            \"\n+fn foo() {\n+    let <|>var_name = { let x = 0; x };\n+    something_else();\n+}\",\n+        );\n+    }\n }"}, {"sha": "000cfb981a91381d050c27182ae83f9ba4b67a2d", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d75a0368f5048243d6561e42e77835f6f574b321/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75a0368f5048243d6561e42e77835f6f574b321/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=d75a0368f5048243d6561e42e77835f6f574b321", "patch": "@@ -296,6 +296,15 @@ impl IfExpr {\n     }\n }\n \n+impl ExprStmt {\n+    pub fn has_semi(&self) -> bool {\n+        match self.syntax().last_child() {\n+            None => false,\n+            Some(node) => node.kind() == SEMI,\n+        }\n+    }\n+}\n+\n #[derive(Debug, Clone, Copy, PartialEq, Eq)]\n pub enum PathSegmentKind<'a> {\n     Name(&'a NameRef),"}]}