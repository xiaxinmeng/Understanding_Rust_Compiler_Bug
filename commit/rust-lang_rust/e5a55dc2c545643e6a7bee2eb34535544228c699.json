{"sha": "e5a55dc2c545643e6a7bee2eb34535544228c699", "node_id": "C_kwDOAAsO6NoAKGU1YTU1ZGMyYzU0NTY0M2U2YTdiZWUyZWIzNDUzNTU0NDIyOGM2OTk", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-19T08:59:11Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-19T08:59:11Z"}, "message": "Prefer if cfg!.", "tree": {"sha": "18773a1b554d9852472adc93ec47ad26ecbcfcd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18773a1b554d9852472adc93ec47ad26ecbcfcd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5a55dc2c545643e6a7bee2eb34535544228c699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5a55dc2c545643e6a7bee2eb34535544228c699", "html_url": "https://github.com/rust-lang/rust/commit/e5a55dc2c545643e6a7bee2eb34535544228c699", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5a55dc2c545643e6a7bee2eb34535544228c699/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e866af1f720ed487fb08bd40b69d7a4e168519c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e866af1f720ed487fb08bd40b69d7a4e168519c", "html_url": "https://github.com/rust-lang/rust/commit/0e866af1f720ed487fb08bd40b69d7a4e168519c"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "bebd9723740f8106605b050bef334df6ab02677d", "filename": "compiler/rustc_mir_transform/src/const_prop.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e5a55dc2c545643e6a7bee2eb34535544228c699/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5a55dc2c545643e6a7bee2eb34535544228c699/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs?ref=e5a55dc2c545643e6a7bee2eb34535544228c699", "patch": "@@ -989,12 +989,13 @@ impl<'tcx> MutVisitor<'tcx> for ConstPropagator<'_, 'tcx> {\n         self.ecx.machine.written_only_inside_own_block_locals =\n             written_only_inside_own_block_locals;\n \n-        #[cfg(debug_assertions)]\n-        for (local, &mode) in self.ecx.machine.can_const_prop.iter_enumerated() {\n-            match mode {\n-                ConstPropMode::FullConstProp => {}\n-                ConstPropMode::NoPropagation | ConstPropMode::OnlyInsideOwnBlock => {\n-                    self.ensure_not_propagated(local);\n+        if cfg!(debug_assertions) {\n+            for (local, &mode) in self.ecx.machine.can_const_prop.iter_enumerated() {\n+                match mode {\n+                    ConstPropMode::FullConstProp => {}\n+                    ConstPropMode::NoPropagation | ConstPropMode::OnlyInsideOwnBlock => {\n+                        self.ensure_not_propagated(local);\n+                    }\n                 }\n             }\n         }"}, {"sha": "45bd98f39d2ba9a433488116d612235b46d0ceda", "filename": "compiler/rustc_mir_transform/src/const_prop_lint.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e5a55dc2c545643e6a7bee2eb34535544228c699/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5a55dc2c545643e6a7bee2eb34535544228c699/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs?ref=e5a55dc2c545643e6a7bee2eb34535544228c699", "patch": "@@ -708,12 +708,13 @@ impl<'tcx> Visitor<'tcx> for ConstPropagator<'_, 'tcx> {\n         self.ecx.machine.written_only_inside_own_block_locals =\n             written_only_inside_own_block_locals;\n \n-        #[cfg(debug_assertions)]\n-        for (local, &mode) in self.ecx.machine.can_const_prop.iter_enumerated() {\n-            match mode {\n-                ConstPropMode::FullConstProp => {}\n-                ConstPropMode::NoPropagation | ConstPropMode::OnlyInsideOwnBlock => {\n-                    self.ensure_not_propagated(local);\n+        if cfg!(debug_assertions) {\n+            for (local, &mode) in self.ecx.machine.can_const_prop.iter_enumerated() {\n+                match mode {\n+                    ConstPropMode::FullConstProp => {}\n+                    ConstPropMode::NoPropagation | ConstPropMode::OnlyInsideOwnBlock => {\n+                        self.ensure_not_propagated(local);\n+                    }\n                 }\n             }\n         }"}]}