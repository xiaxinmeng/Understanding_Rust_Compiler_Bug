{"sha": "a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "node_id": "C_kwDOAAsO6NoAKGE4YTQwZWE5YTQ5NDdhN2I0NjQyMTU2NDUxN2VlMmFhNGUzNzExZjA", "commit": {"author": {"name": "Mukund Lakshman", "email": "yaymukund@gmail.com", "date": "2021-10-01T10:17:15Z"}, "committer": {"name": "Mukund Lakshman", "email": "yaymukund@gmail.com", "date": "2021-10-04T09:01:04Z"}, "message": "librustdoc: Use correct heading levels.\n\n- Avoid multiple <h1>s on a page.\n- The <h#> tags should follow a semantic hierarchy.\n- Cap at h6 (no h7)", "tree": {"sha": "b636e1f880c0f4aa70866dbc99e60621b2e80664", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b636e1f880c0f4aa70866dbc99e60621b2e80664"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "html_url": "https://github.com/rust-lang/rust/commit/a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/comments", "author": null, "committer": null, "parents": [{"sha": "e737694a4d66b01308b73d4559a35b43e414faf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e737694a4d66b01308b73d4559a35b43e414faf9", "html_url": "https://github.com/rust-lang/rust/commit/e737694a4d66b01308b73d4559a35b43e414faf9"}], "stats": {"total": 265, "additions": 147, "deletions": 118}, "files": [{"sha": "cd6e15f581f3b8d158f66f27be97ce9a9322633e", "filename": "compiler/rustc_error_codes/src/error_codes/E0001.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0001.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0001.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0001.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n This error suggests that the expression arm corresponding to the noted pattern\n will never be reached as for all possible values of the expression being"}, {"sha": "4e7aa7fb9ed818a0226c2826f34ebabc45ff28e0", "filename": "compiler/rustc_error_codes/src/error_codes/E0002.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0002.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0002.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0002.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n This error indicates that an empty match expression is invalid because the type\n it is matching on is non-empty (there exist values of this type). In safe code"}, {"sha": "d30de4af0eb3736fffd7c3fb0df03db65c06f775", "filename": "compiler/rustc_error_codes/src/error_codes/E0007.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0007.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0007.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0007.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n This error indicates that the bindings in a match arm would require a value to\n be moved into more than one location, thus violating unique ownership. Code"}, {"sha": "6aab44cb4d6eccdec847b73df956428de0616170", "filename": "compiler/rustc_error_codes/src/error_codes/E0009.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0009.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0009.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0009.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n In a pattern, all values that don't implement the `Copy` trait have to be bound\n the same way. The goal here is to avoid binding simultaneously by-move and"}, {"sha": "27ae8f098987a3f764573bc7dbb0bb8ff0b78ab3", "filename": "compiler/rustc_error_codes/src/error_codes/E0014.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0014.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0014.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0014.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n Constants can only be initialized by a constant value or, in a future\n version of Rust, a call to a const function. This error indicates the use"}, {"sha": "39c16bc438fea331484345884b3de21157ad8d5f", "filename": "compiler/rustc_error_codes/src/error_codes/E0073.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0073.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0073.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0073.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n You cannot define a struct (or enum) `Foo` that requires an instance of `Foo`\n in order to make a new `Foo` value. This is because there would be no way a"}, {"sha": "026acac99e74fb786af27a4f83af3b42fd8a5369", "filename": "compiler/rustc_error_codes/src/error_codes/E0074.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0074.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0074.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0074.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n When using the `#[simd]` attribute on a tuple struct, the components of the\n tuple struct must all be of a concrete, nongeneric type so the compiler can"}, {"sha": "cd2da0469bb639c2118710cbd01a83bed7d68721", "filename": "compiler/rustc_error_codes/src/error_codes/E0087.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0087.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0087.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0087.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n Too many type arguments were supplied for a function. For example:\n "}, {"sha": "6b565507ce4a39ff8aa72204bba2426f399d47c7", "filename": "compiler/rustc_error_codes/src/error_codes/E0088.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0088.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0088.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0088.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n You gave too many lifetime arguments. Erroneous code example:\n "}, {"sha": "b78f95f266c19373b7beec101ab1cf220acb8c36", "filename": "compiler/rustc_error_codes/src/error_codes/E0089.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0089.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0089.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0089.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n Too few type arguments were supplied for a function. For example:\n "}, {"sha": "7b07a86dc25a4b60905129a4f38ce712d4c0ba3b", "filename": "compiler/rustc_error_codes/src/error_codes/E0090.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0090.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0090.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0090.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n You gave too few lifetime arguments. Example:\n "}, {"sha": "91f599ff1dcfbcdf43431076202ee1c96bda5b10", "filename": "compiler/rustc_error_codes/src/error_codes/E0110.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0110.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0110.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0110.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n You tried to provide a lifetime to a type which doesn't need it.\n See `E0109` for more details."}, {"sha": "0a74558e75b05584e23d723b2cedcea89381ca49", "filename": "compiler/rustc_error_codes/src/error_codes/E0136.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0136.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0136.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0136.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n More than one `main` function was found.\n "}, {"sha": "ba6f02add94941470e1b0016b653bdab2ecb4099", "filename": "compiler/rustc_error_codes/src/error_codes/E0137.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0137.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0137.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0137.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n More than one function was declared with the `#[main]` attribute.\n "}, {"sha": "e7ad2a6f44dc1ad89134b38a920e5461855f2f95", "filename": "compiler/rustc_error_codes/src/error_codes/E0139.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0139.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0139.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0139.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n There are various restrictions on transmuting between types in Rust; for example\n types being transmuted must have the same size. To apply all these restrictions,"}, {"sha": "9c954839eee6bf14fc012b5b4e415e6e66973e5e", "filename": "compiler/rustc_error_codes/src/error_codes/E0154.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0154.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0154.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0154.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n Imports (`use` statements) are not allowed after non-item statements, such as\n variable declarations and expression statements."}, {"sha": "2e0f387e3521f464621bc8a3d8baf3415f3d6d79", "filename": "compiler/rustc_error_codes/src/error_codes/E0162.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0162.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0162.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0162.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n An `if let` pattern attempts to match the pattern, and enters the body if the\n match was successful. If the match is irrefutable (when it cannot fail to"}, {"sha": "3222b7a87eb659741abe6a34a1d75096730dc74c", "filename": "compiler/rustc_error_codes/src/error_codes/E0165.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0165.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0165.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0165.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n A `while let` pattern attempts to match the pattern, and enters the body if the\n match was successful. If the match is irrefutable (when it cannot fail to"}, {"sha": "6e7ebbaddf921e0dfb8a779d83276a27f2a5ae7e", "filename": "compiler/rustc_error_codes/src/error_codes/E0193.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0193.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0193.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0193.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n `where` clauses must use generic type parameters: it does not make sense to use\n them otherwise. An example causing this error:"}, {"sha": "07bbd1f68347b2c7f183d6aa8e97be8802b139dd", "filename": "compiler/rustc_error_codes/src/error_codes/E0205.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0205.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0205.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0205.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n An attempt to implement the `Copy` trait for an enum failed because one of the\n variants does not implement `Copy`. To fix this, you must implement `Copy` for"}, {"sha": "2485367e097128b929b72f5fec0f61b319f78909", "filename": "compiler/rustc_error_codes/src/error_codes/E0211.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0211.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0211.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0211.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n You used a function or type which doesn't fit the requirements for where it was\n used. Erroneous code examples:"}, {"sha": "ef4a837ec21725bcc5819b3b0620dedcfd1930c3", "filename": "compiler/rustc_error_codes/src/error_codes/E0243.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0243.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0243.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0243.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n This error indicates that not enough type parameters were found in a type or\n trait."}, {"sha": "31c5b4542e28fe02f3435181f6bec4bdecd40eae", "filename": "compiler/rustc_error_codes/src/error_codes/E0244.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0244.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0244.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0244.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n This error indicates that too many type parameters were found in a type or\n trait."}, {"sha": "7b048db5ece3ea20bf90bcf22f93cd250b019a1c", "filename": "compiler/rustc_error_codes/src/error_codes/E0251.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0251.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0251.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0251.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n Two items of the same name cannot be imported without rebinding one of the\n items under a new local name."}, {"sha": "1b518b1615b64e24f3cc4fe186604efcbfd09e0f", "filename": "compiler/rustc_error_codes/src/error_codes/E0256.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0256.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0256.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0256.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n You can't import a type or module when the name of the item being imported is\n the same as another type or submodule defined in the module."}, {"sha": "2d8ead0b0181ce9671814e74afc02f03628c4d16", "filename": "compiler/rustc_error_codes/src/error_codes/E0281.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0281.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0281.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0281.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n You tried to supply a type which doesn't implement some trait in a location\n which expected that trait. This error typically occurs when working with"}, {"sha": "001e0f3089e15e8292b2d46b5a6ef698cb25e1e6", "filename": "compiler/rustc_error_codes/src/error_codes/E0297.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0297.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0297.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0297.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n Patterns used to bind names must be irrefutable. That is, they must guarantee\n that a name will be extracted in all cases. Instead of pattern matching the"}, {"sha": "7b1e02051dc4e4c1be4a8e07ae79b6ac5e6939c5", "filename": "compiler/rustc_error_codes/src/error_codes/E0301.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0301.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0301.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0301.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n Mutable borrows are not allowed in pattern guards, because matching cannot have\n side effects. Side effects could alter the matched object or the environment"}, {"sha": "c56500fcebce8db79a453a8d3ee52a014b1a2941", "filename": "compiler/rustc_error_codes/src/error_codes/E0302.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0302.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0302.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0302.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n Assignments are not allowed in pattern guards, because matching cannot have\n side effects. Side effects could alter the matched object or the environment"}, {"sha": "750b766f5bfdf04dd19801f622a030d9b2b3b9d9", "filename": "compiler/rustc_error_codes/src/error_codes/E0303.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0303.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0303.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0303.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n Sub-bindings, e.g. `ref x @ Some(ref y)` are now allowed under\n `#![feature(bindings_after_at)]` and checked to make sure that"}, {"sha": "36114316e880388665ccd4c197d7dc9c21fdc01f", "filename": "compiler/rustc_error_codes/src/error_codes/E0329.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0329.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0329.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0329.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n An attempt was made to access an associated constant through either a generic\n type parameter or `Self`. This is not supported yet. An example causing this"}, {"sha": "309eb2b59eb97c5dff08b9e448c181720cfd06a0", "filename": "compiler/rustc_error_codes/src/error_codes/E0383.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0383.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0383.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0383.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n This error occurs when an attempt is made to partially reinitialize a\n structure that is currently uninitialized."}, {"sha": "5e45a2b40cefad5161aafc67b2d79f4d33114fac", "filename": "compiler/rustc_error_codes/src/error_codes/E0386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0386.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0386.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0386.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n This error occurs when an attempt is made to mutate the target of a mutable\n reference stored inside an immutable container."}, {"sha": "ddc838bdca1b31e52ecda6df4099e6c15f0cfacd", "filename": "compiler/rustc_error_codes/src/error_codes/E0387.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0387.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0387.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0387.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n This error occurs when an attempt is made to mutate or mutably reference data\n that a closure has captured immutably."}, {"sha": "13ef94a48553bebda460687abcedfc985b7640db", "filename": "compiler/rustc_error_codes/src/error_codes/E0388.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0388.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0388.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0388.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1 +1 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler."}, {"sha": "19bb6ec4081319a37b840feb64198cef8d8eaaf0", "filename": "compiler/rustc_error_codes/src/error_codes/E0389.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0389.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0389.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0389.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n An attempt was made to mutate data using a non-mutable reference. This\n commonly occurs when attempting to assign to a non-mutable reference of a"}, {"sha": "12e0eb1a5d5dd32f5a43211544f264afe54ac7ad", "filename": "compiler/rustc_error_codes/src/error_codes/E0398.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0398.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0398.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0398.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n In Rust 1.3, the default object lifetime bounds are expected to change, as\n described in [RFC 1156]. You are getting a warning because the compiler"}, {"sha": "c3e9616c60698bafdea77b811939c0812b236d67", "filename": "compiler/rustc_error_codes/src/error_codes/E0399.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0399.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0399.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0399.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler\n+### Note: this error code is no longer emitted by the compiler\n \n You implemented a trait, overriding one or more of its associated types but did\n not reimplement its default methods."}, {"sha": "85e965c4eee623a2e60ba6998326ac2b0ab768d0", "filename": "compiler/rustc_error_codes/src/error_codes/E0439.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0439.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0439.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0439.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n The length of the platform-intrinsic function `simd_shuffle` wasn't specified.\n "}, {"sha": "e880ff4637da71acd83e71b43d9f823db90b2fda", "filename": "compiler/rustc_error_codes/src/error_codes/E0447.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0447.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0447.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0447.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n The `pub` keyword was used inside a function.\n "}, {"sha": "f4bd184188824ed2d2885444869748767ab9f167", "filename": "compiler/rustc_error_codes/src/error_codes/E0448.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0448.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0448.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0448.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n The `pub` keyword was used inside a public enum.\n "}, {"sha": "12004996384a27045140a4dddb51cbd5c041a226", "filename": "compiler/rustc_error_codes/src/error_codes/E0497.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0497.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0497.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0497.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n A stability attribute was used outside of the standard library.\n "}, {"sha": "640cfad656f717a2e814086a7df4eff80a746b95", "filename": "compiler/rustc_error_codes/src/error_codes/E0504.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0504.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0504.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0504.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n This error occurs when an attempt is made to move a borrowed variable into a\n closure."}, {"sha": "96fbb5e410ae7350836810335d84f763377dcfb9", "filename": "compiler/rustc_error_codes/src/error_codes/E0595.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0595.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0595.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0595.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n Closures cannot mutate immutable captured variables.\n "}, {"sha": "d33154058dd3709dd72dd070e880deaf0df43a17", "filename": "compiler/rustc_error_codes/src/error_codes/E0619.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0619.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0619.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0619.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n The type-checker needed to know the type of an expression, but that type had not\n yet been inferred."}, {"sha": "f6e8a4042ed35943b4dc708e99b21f23c5ac6f58", "filename": "compiler/rustc_error_codes/src/error_codes/E0633.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0633.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0633.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0633.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n The `unwind` attribute was malformed.\n "}, {"sha": "db5e088cc501ef8d0b9b13df51fdcaec75dc992e", "filename": "compiler/rustc_error_codes/src/error_codes/E0665.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0665.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0665.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0665.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n The `Default` trait was derived on an enum.\n "}, {"sha": "a68273f752e733fcbb740be81bb4d4703d858cf5", "filename": "compiler/rustc_error_codes/src/error_codes/E0671.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0671.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0671.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0671.md?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,4 +1,4 @@\n-#### Note: this error code is no longer emitted by the compiler.\n+### Note: this error code is no longer emitted by the compiler.\n \n Const parameters cannot depend on type parameters.\n The following is therefore invalid:"}, {"sha": "1fd5e2d5ef67eaed881cf8bbdaa5b7e9fd69bb0c", "filename": "src/librustdoc/externalfiles.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fexternalfiles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fexternalfiles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fexternalfiles.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -39,14 +39,14 @@ impl ExternalHtml {\n         let bc = format!(\n             \"{}{}\",\n             bc,\n-            Markdown(&m_bc, &[], id_map, codes, edition, playground).into_string()\n+            Markdown(&m_bc, &[], id_map, codes, edition, playground, 0).into_string()\n         );\n         let ac = load_external_files(after_content, diag)?;\n         let m_ac = load_external_files(md_after_content, diag)?;\n         let ac = format!(\n             \"{}{}\",\n             ac,\n-            Markdown(&m_ac, &[], id_map, codes, edition, playground).into_string()\n+            Markdown(&m_ac, &[], id_map, codes, edition, playground, 0).into_string()\n         );\n         Some(ExternalHtml { in_header: ih, before_content: bc, after_content: ac })\n     }"}, {"sha": "56b580a05188c8a928ca2ac577ee32096eebbcd0", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -12,7 +12,7 @@\n //!\n //! let s = \"My *markdown* _text_\";\n //! let mut id_map = IdMap::new();\n-//! let md = Markdown(s, &[], &mut id_map, ErrorCodes::Yes, Edition::Edition2015, &None);\n+//! let md = Markdown(s, &[], &mut id_map, ErrorCodes::Yes, Edition::Edition2015, &None, 0);\n //! let html = md.into_string();\n //! // ... something using html\n //! ```\n@@ -47,6 +47,8 @@ use pulldown_cmark::{\n #[cfg(test)]\n mod tests;\n \n+const MAX_HEADER_LEVEL: u32 = 6;\n+\n /// Options for rendering Markdown in the main body of documentation.\n pub(crate) fn main_body_opts() -> Options {\n     Options::ENABLE_TABLES\n@@ -78,6 +80,7 @@ pub struct Markdown<'a>(\n     /// Default edition to use when parsing doctests (to add a `fn main`).\n     pub Edition,\n     pub &'a Option<Playground>,\n+    pub u32,\n );\n /// A tuple struct like `Markdown` that renders the markdown with a table of contents.\n crate struct MarkdownWithToc<'a>(\n@@ -489,11 +492,12 @@ struct HeadingLinks<'a, 'b, 'ids, I> {\n     toc: Option<&'b mut TocBuilder>,\n     buf: VecDeque<SpannedEvent<'a>>,\n     id_map: &'ids mut IdMap,\n+    level: u32,\n }\n \n impl<'a, 'b, 'ids, I> HeadingLinks<'a, 'b, 'ids, I> {\n-    fn new(iter: I, toc: Option<&'b mut TocBuilder>, ids: &'ids mut IdMap) -> Self {\n-        HeadingLinks { inner: iter, toc, buf: VecDeque::new(), id_map: ids }\n+    fn new(iter: I, toc: Option<&'b mut TocBuilder>, ids: &'ids mut IdMap, level: u32) -> Self {\n+        HeadingLinks { inner: iter, toc, buf: VecDeque::new(), id_map: ids, level }\n     }\n }\n \n@@ -530,6 +534,7 @@ impl<'a, 'b, 'ids, I: Iterator<Item = SpannedEvent<'a>>> Iterator\n                 self.buf.push_front((Event::Html(format!(\"{} \", sec).into()), 0..0));\n             }\n \n+            let level = std::cmp::min(level + self.level + 1, MAX_HEADER_LEVEL);\n             self.buf.push_back((Event::Html(format!(\"</a></h{}>\", level).into()), 0..0));\n \n             let start_tags = format!(\n@@ -1005,7 +1010,7 @@ impl LangString {\n \n impl Markdown<'_> {\n     pub fn into_string(self) -> String {\n-        let Markdown(md, links, mut ids, codes, edition, playground) = self;\n+        let Markdown(md, links, mut ids, codes, edition, playground, level) = self;\n \n         // This is actually common enough to special-case\n         if md.is_empty() {\n@@ -1026,7 +1031,7 @@ impl Markdown<'_> {\n \n         let mut s = String::with_capacity(md.len() * 3 / 2);\n \n-        let p = HeadingLinks::new(p, None, &mut ids);\n+        let p = HeadingLinks::new(p, None, &mut ids, level);\n         let p = Footnotes::new(p);\n         let p = LinkReplacer::new(p.map(|(ev, _)| ev), links);\n         let p = TableWrapper::new(p);\n@@ -1048,7 +1053,7 @@ impl MarkdownWithToc<'_> {\n         let mut toc = TocBuilder::new();\n \n         {\n-            let p = HeadingLinks::new(p, Some(&mut toc), &mut ids);\n+            let p = HeadingLinks::new(p, Some(&mut toc), &mut ids, 0);\n             let p = Footnotes::new(p);\n             let p = TableWrapper::new(p.map(|(ev, _)| ev));\n             let p = CodeBlocks::new(p, codes, edition, playground);\n@@ -1077,7 +1082,7 @@ impl MarkdownHtml<'_> {\n \n         let mut s = String::with_capacity(md.len() * 3 / 2);\n \n-        let p = HeadingLinks::new(p, None, &mut ids);\n+        let p = HeadingLinks::new(p, None, &mut ids, 0);\n         let p = Footnotes::new(p);\n         let p = TableWrapper::new(p.map(|(ev, _)| ev));\n         let p = CodeBlocks::new(p, codes, edition, playground);\n@@ -1295,7 +1300,7 @@ crate fn markdown_links(md: &str) -> Vec<MarkdownLink> {\n     // There's no need to thread an IdMap through to here because\n     // the IDs generated aren't going to be emitted anywhere.\n     let mut ids = IdMap::new();\n-    let iter = Footnotes::new(HeadingLinks::new(p, None, &mut ids));\n+    let iter = Footnotes::new(HeadingLinks::new(p, None, &mut ids, 0));\n \n     for ev in iter {\n         if let Event::Start(Tag::Link(kind, dest, _)) = ev.0 {"}, {"sha": "c6af7e5847c522f1d5bd03d3727ed190686797f2", "filename": "src/librustdoc/html/markdown/tests.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -147,33 +147,33 @@ fn test_lang_string_tokenizer() {\n fn test_header() {\n     fn t(input: &str, expect: &str) {\n         let mut map = IdMap::new();\n-        let output =\n-            Markdown(input, &[], &mut map, ErrorCodes::Yes, DEFAULT_EDITION, &None).into_string();\n+        let output = Markdown(input, &[], &mut map, ErrorCodes::Yes, DEFAULT_EDITION, &None, 0)\n+            .into_string();\n         assert_eq!(output, expect, \"original: {}\", input);\n     }\n \n     t(\n         \"# Foo bar\",\n-        \"<h1 id=\\\"foo-bar\\\" class=\\\"section-header\\\"><a href=\\\"#foo-bar\\\">Foo bar</a></h1>\",\n+        \"<h2 id=\\\"foo-bar\\\" class=\\\"section-header\\\"><a href=\\\"#foo-bar\\\">Foo bar</a></h2>\",\n     );\n     t(\n         \"## Foo-bar_baz qux\",\n-        \"<h2 id=\\\"foo-bar_baz-qux\\\" class=\\\"section-header\\\">\\\n-         <a href=\\\"#foo-bar_baz-qux\\\">Foo-bar_baz qux</a></h2>\",\n+        \"<h3 id=\\\"foo-bar_baz-qux\\\" class=\\\"section-header\\\">\\\n+         <a href=\\\"#foo-bar_baz-qux\\\">Foo-bar_baz qux</a></h3>\",\n     );\n     t(\n         \"### **Foo** *bar* baz!?!& -_qux_-%\",\n-        \"<h3 id=\\\"foo-bar-baz--qux-\\\" class=\\\"section-header\\\">\\\n+        \"<h4 id=\\\"foo-bar-baz--qux-\\\" class=\\\"section-header\\\">\\\n             <a href=\\\"#foo-bar-baz--qux-\\\"><strong>Foo</strong> \\\n             <em>bar</em> baz!?!&amp; -<em>qux</em>-%</a>\\\n-         </h3>\",\n+         </h4>\",\n     );\n     t(\n         \"#### **Foo?** & \\\\*bar?!*  _`baz`_ \u2764 #qux\",\n-        \"<h4 id=\\\"foo--bar--baz--qux\\\" class=\\\"section-header\\\">\\\n+        \"<h5 id=\\\"foo--bar--baz--qux\\\" class=\\\"section-header\\\">\\\n              <a href=\\\"#foo--bar--baz--qux\\\"><strong>Foo?</strong> &amp; *bar?!*  \\\n              <em><code>baz</code></em> \u2764 #qux</a>\\\n-         </h4>\",\n+         </h5>\",\n     );\n }\n \n@@ -182,39 +182,39 @@ fn test_header_ids_multiple_blocks() {\n     let mut map = IdMap::new();\n     fn t(map: &mut IdMap, input: &str, expect: &str) {\n         let output =\n-            Markdown(input, &[], map, ErrorCodes::Yes, DEFAULT_EDITION, &None).into_string();\n+            Markdown(input, &[], map, ErrorCodes::Yes, DEFAULT_EDITION, &None, 0).into_string();\n         assert_eq!(output, expect, \"original: {}\", input);\n     }\n \n     t(\n         &mut map,\n         \"# Example\",\n-        \"<h1 id=\\\"example\\\" class=\\\"section-header\\\"><a href=\\\"#example\\\">Example</a></h1>\",\n+        \"<h2 id=\\\"example\\\" class=\\\"section-header\\\"><a href=\\\"#example\\\">Example</a></h2>\",\n     );\n     t(\n         &mut map,\n         \"# Panics\",\n-        \"<h1 id=\\\"panics\\\" class=\\\"section-header\\\"><a href=\\\"#panics\\\">Panics</a></h1>\",\n+        \"<h2 id=\\\"panics\\\" class=\\\"section-header\\\"><a href=\\\"#panics\\\">Panics</a></h2>\",\n     );\n     t(\n         &mut map,\n         \"# Example\",\n-        \"<h1 id=\\\"example-1\\\" class=\\\"section-header\\\"><a href=\\\"#example-1\\\">Example</a></h1>\",\n+        \"<h2 id=\\\"example-1\\\" class=\\\"section-header\\\"><a href=\\\"#example-1\\\">Example</a></h2>\",\n     );\n     t(\n         &mut map,\n         \"# Main\",\n-        \"<h1 id=\\\"main-1\\\" class=\\\"section-header\\\"><a href=\\\"#main-1\\\">Main</a></h1>\",\n+        \"<h2 id=\\\"main-1\\\" class=\\\"section-header\\\"><a href=\\\"#main-1\\\">Main</a></h2>\",\n     );\n     t(\n         &mut map,\n         \"# Example\",\n-        \"<h1 id=\\\"example-2\\\" class=\\\"section-header\\\"><a href=\\\"#example-2\\\">Example</a></h1>\",\n+        \"<h2 id=\\\"example-2\\\" class=\\\"section-header\\\"><a href=\\\"#example-2\\\">Example</a></h2>\",\n     );\n     t(\n         &mut map,\n         \"# Panics\",\n-        \"<h1 id=\\\"panics-1\\\" class=\\\"section-header\\\"><a href=\\\"#panics-1\\\">Panics</a></h1>\",\n+        \"<h2 id=\\\"panics-1\\\" class=\\\"section-header\\\"><a href=\\\"#panics-1\\\">Panics</a></h2>\",\n     );\n }\n "}, {"sha": "69f39bb58a853216a65aef9bc96b091c9e90f792", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 38, "deletions": 14, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -471,19 +471,35 @@ fn settings(root_path: &str, suffix: &str, themes: &[StylePath]) -> Result<Strin\n }\n \n fn document(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, parent: Option<&clean::Item>) {\n+    document_at_level(w, cx, item, parent, 0)\n+}\n+\n+fn document_at_level(\n+    w: &mut Buffer,\n+    cx: &Context<'_>,\n+    item: &clean::Item,\n+    parent: Option<&clean::Item>,\n+    level: u32,\n+) {\n     if let Some(ref name) = item.name {\n         info!(\"Documenting {}\", name);\n     }\n     document_item_info(w, cx, item, parent);\n     if parent.is_none() {\n-        document_full_collapsible(w, item, cx);\n+        document_full_collapsible(w, item, cx, level);\n     } else {\n-        document_full(w, item, cx);\n+        document_full(w, item, cx, level);\n     }\n }\n \n /// Render md_text as markdown.\n-fn render_markdown(w: &mut Buffer, cx: &Context<'_>, md_text: &str, links: Vec<RenderedLink>) {\n+fn render_markdown(\n+    w: &mut Buffer,\n+    cx: &Context<'_>,\n+    md_text: &str,\n+    links: Vec<RenderedLink>,\n+    level: u32,\n+) {\n     let mut ids = cx.id_map.borrow_mut();\n     write!(\n         w,\n@@ -494,7 +510,8 @@ fn render_markdown(w: &mut Buffer, cx: &Context<'_>, md_text: &str, links: Vec<R\n             &mut ids,\n             cx.shared.codes,\n             cx.shared.edition(),\n-            &cx.shared.playground\n+            &cx.shared.playground,\n+            level\n         )\n         .into_string()\n     )\n@@ -531,15 +548,21 @@ fn document_short(\n     }\n }\n \n-fn document_full_collapsible(w: &mut Buffer, item: &clean::Item, cx: &Context<'_>) {\n-    document_full_inner(w, item, cx, true);\n+fn document_full_collapsible(w: &mut Buffer, item: &clean::Item, cx: &Context<'_>, level: u32) {\n+    document_full_inner(w, item, cx, true, level);\n }\n \n-fn document_full(w: &mut Buffer, item: &clean::Item, cx: &Context<'_>) {\n-    document_full_inner(w, item, cx, false);\n+fn document_full(w: &mut Buffer, item: &clean::Item, cx: &Context<'_>, level: u32) {\n+    document_full_inner(w, item, cx, false, level);\n }\n \n-fn document_full_inner(w: &mut Buffer, item: &clean::Item, cx: &Context<'_>, is_collapsible: bool) {\n+fn document_full_inner(\n+    w: &mut Buffer,\n+    item: &clean::Item,\n+    cx: &Context<'_>,\n+    is_collapsible: bool,\n+    level: u32,\n+) {\n     if let Some(s) = cx.shared.maybe_collapsed_doc_value(item) {\n         debug!(\"Doc block: =====\\n{}\\n=====\", s);\n         if is_collapsible {\n@@ -549,10 +572,10 @@ fn document_full_inner(w: &mut Buffer, item: &clean::Item, cx: &Context<'_>, is_\n                      <span>Expand description</span>\\\n                 </summary>\",\n             );\n-            render_markdown(w, cx, &s, item.links(cx));\n+            render_markdown(w, cx, &s, item.links(cx), level);\n             w.write_str(\"</details>\");\n         } else {\n-            render_markdown(w, cx, &s, item.links(cx));\n+            render_markdown(w, cx, &s, item.links(cx), level);\n         }\n     }\n }\n@@ -1321,7 +1344,7 @@ fn render_impl(\n                         // because impls can't have a stability.\n                         if item.doc_value().is_some() {\n                             document_item_info(&mut info_buffer, cx, it, Some(parent));\n-                            document_full(&mut doc_buffer, item, cx);\n+                            document_full(&mut doc_buffer, item, cx, 0);\n                             short_documented = false;\n                         } else {\n                             // In case the item isn't documented,\n@@ -1339,7 +1362,7 @@ fn render_impl(\n                 } else {\n                     document_item_info(&mut info_buffer, cx, item, Some(parent));\n                     if rendering_params.show_def_docs {\n-                        document_full(&mut doc_buffer, item, cx);\n+                        document_full(&mut doc_buffer, item, cx, 3);\n                         short_documented = false;\n                     }\n                 }\n@@ -1579,7 +1602,8 @@ fn render_impl(\n                     &mut ids,\n                     cx.shared.codes,\n                     cx.shared.edition(),\n-                    &cx.shared.playground\n+                    &cx.shared.playground,\n+                    0\n                 )\n                 .into_string()\n             );"}, {"sha": "59a6925d8b459d1bfdc17579f05f24a6fa37613b", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -16,10 +16,10 @@ use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_target::abi::{Layout, Primitive, TagEncoding, Variants};\n \n use super::{\n-    collect_paths_for_type, document, ensure_trailing_slash, item_ty_to_strs, notable_traits_decl,\n-    render_assoc_item, render_assoc_items, render_attributes_in_code, render_attributes_in_pre,\n-    render_impl, render_stability_since_raw, write_srclink, AssocItemLink, Context,\n-    ImplRenderingParameters,\n+    collect_paths_for_type, document, document_at_level, ensure_trailing_slash, item_ty_to_strs,\n+    notable_traits_decl, render_assoc_item, render_assoc_items, render_attributes_in_code,\n+    render_attributes_in_pre, render_impl, render_stability_since_raw, write_srclink,\n+    AssocItemLink, Context, ImplRenderingParameters,\n };\n use crate::clean::{self, GetDefId};\n use crate::formats::item_type::ItemType;\n@@ -626,7 +626,7 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n         let item_type = m.type_();\n         let id = cx.derive_id(format!(\"{}.{}\", item_type, name));\n         let mut content = Buffer::empty_from(w);\n-        document(&mut content, cx, m, Some(t));\n+        document_at_level(&mut content, cx, m, Some(t), 3);\n         let toggled = !content.is_empty();\n         if toggled {\n             write!(w, \"<details class=\\\"rustdoc-toggle\\\" open><summary>\");"}, {"sha": "925d76956ab773c0253e987a5bc0c30d4ed32aff", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -126,7 +126,7 @@ h2 {\n h3 {\n \tfont-size: 1.3em;\n }\n-h1, h2, h3, h4 {\n+h1, h2, h3, h4, h5, h6 {\n \tfont-weight: 500;\n \tmargin: 20px 0 15px 0;\n \tpadding-bottom: 6px;\n@@ -179,7 +179,7 @@ div.impl-items > div {\n \tpadding-left: 0;\n }\n \n-h1, h2, h3, h4,\n+h1, h2, h3, h4, h5, h6,\n .sidebar, a.source, .search-input, .search-results .result-name,\n .content table td:first-child > a,\n .item-left > a,\n@@ -501,21 +501,20 @@ nav.sub {\n \twhite-space: pre-wrap;\n }\n \n-.docblock h1, .docblock h2, .docblock h3, .docblock h4, .docblock h5 {\n+.docblock h1, .docblock h2, .docblock h3, .docblock h4, .docblock h5, .docblock h6 {\n \tborder-bottom: 1px solid;\n }\n \n-.top-doc .docblock h1 { font-size: 1.3em; }\n-.top-doc .docblock h2 { font-size: 1.15em; }\n-.top-doc .docblock h3,\n+.top-doc .docblock h2 { font-size: 1.3em; }\n+.top-doc .docblock h3 { font-size: 1.15em; }\n .top-doc .docblock h4,\n-.top-doc .docblock h5 {\n+.top-doc .docblock h5,\n+.top-doc .docblock h6 {\n \tfont-size: 1em;\n }\n \n-.docblock h1 { font-size: 1em; }\n-.docblock h2 { font-size: 0.95em; }\n-.docblock h3, .docblock h4, .docblock h5 { font-size: 0.9em; }\n+.docblock h5 { font-size: 1em; }\n+.docblock h6 { font-size: 0.95em; }\n \n .docblock {\n \tmargin-left: 24px;"}, {"sha": "0fb4f95acdf34f097e4aeeee5192110ab5d78472", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -136,7 +136,7 @@ pre, .rustdoc.source .example-wrap {\n \tborder-right: 1px solid #ffb44c;\n }\n \n-.docblock h1, .docblock h2, .docblock h3, .docblock h4, .docblock h5 {\n+.docblock h2, .docblock h3, .docblock h4, .docblock h5, .docblock h6 {\n \tborder-bottom-color: #5c6773;\n }\n "}, {"sha": "4fb6f7b38bbf22e34f58531a22139afc1bfcc8f8", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -93,7 +93,7 @@ pre, .rustdoc.source .example-wrap {\n \tbackground-color: #0a042f !important;\n }\n \n-.docblock h1, .docblock h2, .docblock h3, .docblock h4, .docblock h5 {\n+.docblock h2, .docblock h3, .docblock h4, .docblock h5, .docblock h6 {\n \tborder-bottom-color: #DDD;\n }\n "}, {"sha": "62134f025c82ad9bfdfdf755c6a61b17d5cfcee3", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -93,7 +93,7 @@ pre, .rustdoc.source .example-wrap {\n \tbackground-color: #f6fdb0 !important;\n }\n \n-.docblock h1, .docblock h2, .docblock h3, .docblock h4, .docblock h5 {\n+.docblock h2, .docblock h3, .docblock h4, .docblock h5, .docblock h6 {\n \tborder-bottom-color: #ddd;\n }\n "}, {"sha": "82e6231782c1e3a61c6823a3599ff5a032279b22", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -70,7 +70,7 @@ crate fn render<P: AsRef<Path>>(\n     let text = if !options.markdown_no_toc {\n         MarkdownWithToc(text, &mut ids, error_codes, edition, &playground).into_string()\n     } else {\n-        Markdown(text, &[], &mut ids, error_codes, edition, &playground).into_string()\n+        Markdown(text, &[], &mut ids, error_codes, edition, &playground, 0).into_string()\n     };\n \n     let err = write!("}, {"sha": "3f8e16882911ae3195db0a21e0311d3c956bcc63", "filename": "src/test/rustdoc/external-cross.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftest%2Frustdoc%2Fexternal-cross.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftest%2Frustdoc%2Fexternal-cross.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fexternal-cross.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -6,5 +6,5 @@\n extern crate external_cross;\n \n // @has host/struct.NeedMoreDocs.html\n-// @has - '//h1' 'Cross-crate imported docs'\n+// @has - '//h2' 'Cross-crate imported docs'\n pub use external_cross::NeedMoreDocs;"}, {"sha": "bd322d67a370d4ddbca64ffd4373a7195e43c510", "filename": "src/test/rustdoc/external-doc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftest%2Frustdoc%2Fexternal-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftest%2Frustdoc%2Fexternal-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fexternal-doc.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,14 +1,14 @@\n // @has external_doc/struct.IncludeStrDocs.html\n-// @has - '//h1' 'External Docs'\n-// @has - '//h2' 'Inline Docs'\n+// @has - '//h2' 'External Docs'\n+// @has - '//h3' 'Inline Docs'\n #[doc = include_str!(\"auxiliary/external-doc.md\")]\n /// ## Inline Docs\n pub struct IncludeStrDocs;\n \n macro_rules! dir { () => { \"auxiliary\" } }\n \n // @has external_doc/struct.EagerExpansion.html\n-// @has - '//h1' 'External Docs'\n+// @has - '//h2' 'External Docs'\n #[doc = include_str!(concat!(dir!(), \"/external-doc.md\"))]\n /// ## Inline Docs\n pub struct EagerExpansion;"}, {"sha": "4944f8157014ed4a7562635f366ee1aaad8b541b", "filename": "src/test/rustdoc/issue-42760.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftest%2Frustdoc%2Fissue-42760.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftest%2Frustdoc%2Fissue-42760.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-42760.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -1,5 +1,5 @@\n // @has issue_42760/struct.NonGen.html\n-// @has - '//h1' 'Example'\n+// @has - '//h2' 'Example'\n \n /// Item docs.\n ///"}, {"sha": "17c44eab091a6fc79cde810baff664ff5ff4f45f", "filename": "src/test/rustdoc/short-docblock.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftest%2Frustdoc%2Fshort-docblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftest%2Frustdoc%2Fshort-docblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fshort-docblock.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -2,7 +2,7 @@\n \n // @has foo/index.html '//*[@class=\"item-right docblock-short\"]/p' 'fooo'\n // @!has foo/index.html '//*[@class=\"item-right docblock-short\"]/p/h1' 'fooo'\n-// @has foo/fn.foo.html '//h1[@id=\"fooo\"]/a[@href=\"#fooo\"]' 'fooo'\n+// @has foo/fn.foo.html '//h2[@id=\"fooo\"]/a[@href=\"#fooo\"]' 'fooo'\n \n /// # fooo\n ///\n@@ -11,7 +11,7 @@ pub fn foo() {}\n \n // @has foo/index.html '//*[@class=\"item-right docblock-short\"]/p' 'mooood'\n // @!has foo/index.html '//*[@class=\"item-right docblock-short\"]/p/h2' 'mooood'\n-// @has foo/foo/index.html '//h2[@id=\"mooood\"]/a[@href=\"#mooood\"]' 'mooood'\n+// @has foo/foo/index.html '//h3[@id=\"mooood\"]/a[@href=\"#mooood\"]' 'mooood'\n \n /// ## mooood\n ///"}, {"sha": "7ae5bd699457919018fce65274c802c68c393511", "filename": "src/test/rustdoc/smart-punct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftest%2Frustdoc%2Fsmart-punct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftest%2Frustdoc%2Fsmart-punct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsmart-punct.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -21,7 +21,7 @@\n //! ```\n \n // @has \"foo/index.html\" \"//p\" \"This is the \u201cstart\u201d of the \u2018document\u2019! How\u2019d you know that \u201cit\u2019s\u201d the start?\"\n-// @has \"foo/index.html\" \"//h1\" \"Header with \u201csmart punct\u2019\u201d\"\n+// @has \"foo/index.html\" \"//h2\" \"Header with \u201csmart punct\u2019\u201d\"\n // @has \"foo/index.html\" '//a[@href=\"https://www.rust-lang.org\"]' \"link with \u201csmart punct\u2019\u201d \u2013 yessiree!\"\n // @has \"foo/index.html\" '//code' \"this inline code -- it shouldn't have \\\"smart punct\\\"\"\n // @has \"foo/index.html\" '//pre' \"let x = \\\"don't smart-punct me -- please!\\\";\""}, {"sha": "1ba283b178120985e606fb072bb4dfc15e9f1cdc", "filename": "src/tools/error_index_generator/main.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fmain.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -125,7 +125,8 @@ impl Formatter for HTMLFormatter {\n                         &mut id_map,\n                         ErrorCodes::Yes,\n                         DEFAULT_EDITION,\n-                        &Some(playground)\n+                        &Some(playground),\n+                        0\n                     )\n                     .into_string()\n                 )?"}, {"sha": "ae169d383b273edbf35729623e790a187108f238", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a40ea9a4947a7b46421564517ee2aa4e3711f0/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=a8a40ea9a4947a7b46421564517ee2aa4e3711f0", "patch": "@@ -49,7 +49,7 @@ fn check_error_code_explanation(\n             } else if s.contains(\"compile-fail\") {\n                 invalid_compile_fail_format = true;\n             }\n-        } else if s.starts_with(\"#### Note: this error code is no longer emitted by the compiler\") {\n+        } else if s.starts_with(\"### Note: this error code is no longer emitted by the compiler\") {\n             if !found_error_code {\n                 error_codes.get_mut(&err_code).map(|x| x.has_test = true);\n                 found_error_code = true;\n@@ -64,7 +64,7 @@ fn check_if_error_code_is_test_in_explanation(f: &str, err_code: &str) -> bool {\n \n     for line in f.lines() {\n         let s = line.trim();\n-        if s.starts_with(\"#### Note: this error code is no longer emitted by the compiler\") {\n+        if s.starts_with(\"### Note: this error code is no longer emitted by the compiler\") {\n             return true;\n         }\n         if s.starts_with(\"```\") {"}]}