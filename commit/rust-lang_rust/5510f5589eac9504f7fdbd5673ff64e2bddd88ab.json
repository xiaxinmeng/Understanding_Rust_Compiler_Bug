{"sha": "5510f5589eac9504f7fdbd5673ff64e2bddd88ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MTBmNTU4OWVhYzk1MDRmN2ZkYmQ1NjczZmY2NGUyYmRkZDg4YWI=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-17T22:43:06Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-21T11:20:46Z"}, "message": "Use appropriate constructor for const slices", "tree": {"sha": "52c8cbf097cba33fb5006744b3c2ea9e54982163", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52c8cbf097cba33fb5006744b3c2ea9e54982163"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5510f5589eac9504f7fdbd5673ff64e2bddd88ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5510f5589eac9504f7fdbd5673ff64e2bddd88ab", "html_url": "https://github.com/rust-lang/rust/commit/5510f5589eac9504f7fdbd5673ff64e2bddd88ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5510f5589eac9504f7fdbd5673ff64e2bddd88ab/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa4a4d3edaf48e9a08f6357765eef8714b424cdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa4a4d3edaf48e9a08f6357765eef8714b424cdf", "html_url": "https://github.com/rust-lang/rust/commit/fa4a4d3edaf48e9a08f6357765eef8714b424cdf"}], "stats": {"total": 48, "additions": 23, "deletions": 25}, "files": [{"sha": "5fcaeca28a05be5aa333332c4ae1c7381acb2355", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5510f5589eac9504f7fdbd5673ff64e2bddd88ab/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5510f5589eac9504f7fdbd5673ff64e2bddd88ab/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=5510f5589eac9504f7fdbd5673ff64e2bddd88ab", "patch": "@@ -747,7 +747,7 @@ impl<'tcx> Constructor<'tcx> {\n                     .iter()\n                     .filter_map(|c: &Constructor<'_>| match c {\n                         Slice(slice) => Some(*slice),\n-                        // FIXME(#65413): We ignore `ConstantValue`s here.\n+                        // FIXME(oli-obk): implement `deref` for `ConstValue`\n                         ConstantValue(..) => None,\n                         _ => bug!(\"bad slice pattern constructor {:?}\", c),\n                     })\n@@ -1771,7 +1771,19 @@ fn pat_constructor<'tcx>(\n             if let Some(int_range) = IntRange::from_const(tcx, param_env, value, pat.span) {\n                 Some(IntRange(int_range))\n             } else {\n-                Some(ConstantValue(value))\n+                match (value.val, &value.ty.kind) {\n+                    (_, ty::Array(_, n)) => {\n+                        let len = n.eval_usize(tcx, param_env);\n+                        Some(Slice(Slice { array_len: Some(len), kind: FixedLen(len) }))\n+                    }\n+                    (ty::ConstKind::Value(ConstValue::Slice { start, end, .. }), ty::Slice(_)) => {\n+                        let len = (end - start) as u64;\n+                        Some(Slice(Slice { array_len: None, kind: FixedLen(len) }))\n+                    }\n+                    // FIXME(oli-obk): implement `deref` for `ConstValue`\n+                    // (ty::ConstKind::Value(ConstValue::ByRef { .. }), ty::Slice(_)) => { ... }\n+                    _ => Some(ConstantValue(value)),\n+                }\n             }\n         }\n         PatKind::Range(PatRange { lo, hi, end }) => {"}, {"sha": "6c54c938bf110af6dd5ed07c3a1536f20d627990", "filename": "src/test/ui/pattern/usefulness/65413-constants-and-slices-exhaustiveness.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5510f5589eac9504f7fdbd5673ff64e2bddd88ab/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2F65413-constants-and-slices-exhaustiveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5510f5589eac9504f7fdbd5673ff64e2bddd88ab/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2F65413-constants-and-slices-exhaustiveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2F65413-constants-and-slices-exhaustiveness.rs?ref=5510f5589eac9504f7fdbd5673ff64e2bddd88ab", "patch": "@@ -1,3 +1,4 @@\n+// check-pass\n #![feature(slice_patterns)]\n #![deny(unreachable_patterns)]\n \n@@ -8,8 +9,7 @@ fn main() {\n     match x {\n         &[] => {}\n         &[1..=255] => {}\n-        // this shouldn't be unreachable\n-        C0 => {} //~ unreachable pattern\n+        C0 => {}\n         &[_, _, ..] => {}\n     }\n }"}, {"sha": "74421b4085c61528859f8c55242e8344de0a9dfd", "filename": "src/test/ui/pattern/usefulness/65413-constants-and-slices-exhaustiveness.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fa4a4d3edaf48e9a08f6357765eef8714b424cdf/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2F65413-constants-and-slices-exhaustiveness.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa4a4d3edaf48e9a08f6357765eef8714b424cdf/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2F65413-constants-and-slices-exhaustiveness.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2F65413-constants-and-slices-exhaustiveness.stderr?ref=fa4a4d3edaf48e9a08f6357765eef8714b424cdf", "patch": "@@ -1,14 +0,0 @@\n-error: unreachable pattern\n-  --> $DIR/65413-constants-and-slices-exhaustiveness.rs:12:9\n-   |\n-LL |         C0 => {}\n-   |         ^^\n-   |\n-note: lint level defined here\n-  --> $DIR/65413-constants-and-slices-exhaustiveness.rs:2:9\n-   |\n-LL | #![deny(unreachable_patterns)]\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to previous error\n-"}, {"sha": "539aa854f9e6b9ad7ca1b2ebee870f48fb7c4686", "filename": "src/test/ui/pattern/usefulness/match-byte-array-patterns-2.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5510f5589eac9504f7fdbd5673ff64e2bddd88ab/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-byte-array-patterns-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5510f5589eac9504f7fdbd5673ff64e2bddd88ab/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-byte-array-patterns-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-byte-array-patterns-2.stderr?ref=5510f5589eac9504f7fdbd5673ff64e2bddd88ab", "patch": "@@ -1,16 +1,16 @@\n-error[E0004]: non-exhaustive patterns: `&[..]` not covered\n+error[E0004]: non-exhaustive patterns: `&[0u8..=64u8, _, _, _]` and `&[66u8..=std::u8::MAX, _, _, _]` not covered\n   --> $DIR/match-byte-array-patterns-2.rs:4:11\n    |\n LL |     match buf {\n-   |           ^^^ pattern `&[..]` not covered\n+   |           ^^^ patterns `&[0u8..=64u8, _, _, _]` and `&[66u8..=std::u8::MAX, _, _, _]` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: `&[..]` not covered\n+error[E0004]: non-exhaustive patterns: `&[]`, `&[_]`, `&[_, _]` and 2 more not covered\n   --> $DIR/match-byte-array-patterns-2.rs:10:11\n    |\n LL |     match buf {\n-   |           ^^^ pattern `&[..]` not covered\n+   |           ^^^ patterns `&[]`, `&[_]`, `&[_, _]` and 2 more not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n "}, {"sha": "41ba2cc4501c089a540a7260071cd88e6ed51b6c", "filename": "src/test/ui/pattern/usefulness/slice-patterns-exhaustiveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5510f5589eac9504f7fdbd5673ff64e2bddd88ab/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5510f5589eac9504f7fdbd5673ff64e2bddd88ab/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.rs?ref=5510f5589eac9504f7fdbd5673ff64e2bddd88ab", "patch": "@@ -97,7 +97,7 @@ fn main() {\n     }\n     const CONST1: &[bool; 1] = &[true];\n     match s1 {\n-    //~^ ERROR `&[..]` not covered\n+    //~^ ERROR `&[false]` not covered\n         CONST1 => {}\n     }\n     match s1 {"}, {"sha": "8cb342f33dfa0d917f94f585aedfec03b2db38e4", "filename": "src/test/ui/pattern/usefulness/slice-patterns-exhaustiveness.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5510f5589eac9504f7fdbd5673ff64e2bddd88ab/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5510f5589eac9504f7fdbd5673ff64e2bddd88ab/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.stderr?ref=5510f5589eac9504f7fdbd5673ff64e2bddd88ab", "patch": "@@ -118,11 +118,11 @@ LL |     match s {\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: `&[..]` not covered\n+error[E0004]: non-exhaustive patterns: `&[false]` not covered\n   --> $DIR/slice-patterns-exhaustiveness.rs:99:11\n    |\n LL |     match s1 {\n-   |           ^^ pattern `&[..]` not covered\n+   |           ^^ pattern `&[false]` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n "}]}