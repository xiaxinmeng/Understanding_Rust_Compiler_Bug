{"sha": "0750cf79f9d30686581b9772d9ea61eed727d37e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NTBjZjc5ZjlkMzA2ODY1ODFiOTc3MmQ5ZWE2MWVlZDcyN2QzN2U=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-23T09:18:35Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-23T17:58:49Z"}, "message": "Rollup merge of #22688 - tshepang:use-new-slicing-syntax, r=alexcrichton", "tree": {"sha": "0ebd9641e7dfc392c779aac246906a55f681956e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ebd9641e7dfc392c779aac246906a55f681956e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0750cf79f9d30686581b9772d9ea61eed727d37e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0750cf79f9d30686581b9772d9ea61eed727d37e", "html_url": "https://github.com/rust-lang/rust/commit/0750cf79f9d30686581b9772d9ea61eed727d37e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0750cf79f9d30686581b9772d9ea61eed727d37e/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5aee931ca5e03e777664793b80f4447a2475063c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5aee931ca5e03e777664793b80f4447a2475063c", "html_url": "https://github.com/rust-lang/rust/commit/5aee931ca5e03e777664793b80f4447a2475063c"}, {"sha": "23fe16eab18f7fa7fe7e91a2ff7c7c712cff4bfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/23fe16eab18f7fa7fe7e91a2ff7c7c712cff4bfc", "html_url": "https://github.com/rust-lang/rust/commit/23fe16eab18f7fa7fe7e91a2ff7c7c712cff4bfc"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "3c116aa860bca9c10c1cf285832dde4f028ca07b", "filename": "src/rustbook/book.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0750cf79f9d30686581b9772d9ea61eed727d37e/src%2Frustbook%2Fbook.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0750cf79f9d30686581b9772d9ea61eed727d37e/src%2Frustbook%2Fbook.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fbook.rs?ref=0750cf79f9d30686581b9772d9ea61eed727d37e", "patch": "@@ -50,14 +50,14 @@ impl<'a> Iterator for BookItems<'a> {\n \n                 let mut section = \"\".to_string();\n                 for &(_, idx) in &self.stack {\n-                    section.push_str(&(idx + 1).to_string()[]);\n+                    section.push_str(&(idx + 1).to_string()[..]);\n                     section.push('.');\n                 }\n-                section.push_str(&(self.cur_idx + 1).to_string()[]);\n+                section.push_str(&(self.cur_idx + 1).to_string()[..]);\n                 section.push('.');\n \n                 self.stack.push((self.cur_items, self.cur_idx));\n-                self.cur_items = &cur.children[];\n+                self.cur_items = &cur.children[..];\n                 self.cur_idx = 0;\n                 return Some((section, cur))\n             }\n@@ -68,7 +68,7 @@ impl<'a> Iterator for BookItems<'a> {\n impl Book {\n     pub fn iter(&self) -> BookItems {\n         BookItems {\n-            cur_items: &self.chapters[],\n+            cur_items: &self.chapters[..],\n             cur_idx: 0,\n             stack: Vec::new(),\n         }"}, {"sha": "9f35bdaa367e5ee5d6d31d4f517cbfecdbc31cbe", "filename": "src/rustbook/build.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0750cf79f9d30686581b9772d9ea61eed727d37e/src%2Frustbook%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0750cf79f9d30686581b9772d9ea61eed727d37e/src%2Frustbook%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fbuild.rs?ref=0750cf79f9d30686581b9772d9ea61eed727d37e", "patch": "@@ -40,7 +40,7 @@ fn write_toc(book: &Book, path_to_root: &Path, out: &mut Writer) -> IoResult<()>\n                   path_to_root: &Path,\n                   out: &mut Writer) -> IoResult<()> {\n         for (i, item) in items.iter().enumerate() {\n-            try!(walk_item(item, &format!(\"{}{}.\", section, i + 1)[], path_to_root, out));\n+            try!(walk_item(item, &format!(\"{}{}.\", section, i + 1)[..], path_to_root, out));\n         }\n         Ok(())\n     }\n@@ -54,7 +54,7 @@ fn write_toc(book: &Book, path_to_root: &Path, out: &mut Writer) -> IoResult<()>\n                  item.title));\n         if !item.children.is_empty() {\n             try!(writeln!(out, \"<ul class='section'>\"));\n-            let _ = walk_items(&item.children[], section, path_to_root, out);\n+            let _ = walk_items(&item.children[..], section, path_to_root, out);\n             try!(writeln!(out, \"</ul>\"));\n         }\n         try!(writeln!(out, \"</li>\"));\n@@ -64,7 +64,7 @@ fn write_toc(book: &Book, path_to_root: &Path, out: &mut Writer) -> IoResult<()>\n \n     try!(writeln!(out, \"<div id='toc' class='mobile-hidden'>\"));\n     try!(writeln!(out, \"<ul class='chapter'>\"));\n-    try!(walk_items(&book.chapters[], \"\", path_to_root, out));\n+    try!(walk_items(&book.chapters[..], \"\", path_to_root, out));\n     try!(writeln!(out, \"</ul>\"));\n     try!(writeln!(out, \"</div>\"));\n \n@@ -178,7 +178,7 @@ impl Subcommand for Build {\n             Err(errors) => {\n                 let n = errors.len();\n                 for err in errors {\n-                    term.err(&format!(\"error: {}\", err)[]);\n+                    term.err(&format!(\"error: {}\", err)[..]);\n                 }\n \n                 Err(box format!(\"{} errors occurred\", n) as Box<Error>)"}, {"sha": "68e4ba54d94c168fdf5c22305288056dd2a93c48", "filename": "src/rustbook/main.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0750cf79f9d30686581b9772d9ea61eed727d37e/src%2Frustbook%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0750cf79f9d30686581b9772d9ea61eed727d37e/src%2Frustbook%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fmain.rs?ref=0750cf79f9d30686581b9772d9ea61eed727d37e", "patch": "@@ -53,16 +53,16 @@ fn main() {\n     if cmd.len() <= 1 {\n         help::usage()\n     } else {\n-        match subcommand::parse_name(&cmd[1][]) {\n+        match subcommand::parse_name(&cmd[1][..]) {\n             Some(mut subcmd) => {\n                 match subcmd.parse_args(cmd.tail()) {\n                     Ok(_) => {\n                         match subcmd.execute(&mut term) {\n                             Ok(_) => (),\n                             Err(err) => {\n-                                term.err(&format!(\"error: {}\", err.description())[]);\n+                                term.err(&format!(\"error: {}\", err.description())[..]);\n                                 err.detail().map(|detail| {\n-                                    term.err(&format!(\"detail: {}\", detail)[]);\n+                                    term.err(&format!(\"detail: {}\", detail)[..]);\n                                 });\n                             }\n                         }"}, {"sha": "bff366163dc2f974f6c95792a1a7e5e534ac80c9", "filename": "src/rustbook/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0750cf79f9d30686581b9772d9ea61eed727d37e/src%2Frustbook%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0750cf79f9d30686581b9772d9ea61eed727d37e/src%2Frustbook%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Ftest.rs?ref=0750cf79f9d30686581b9772d9ea61eed727d37e", "patch": "@@ -50,8 +50,8 @@ impl Subcommand for Test {\n                         Ok(output) => {\n                             if !output.status.success() {\n                                 term.err(&format!(\"{}\\n{}\",\n-                                         String::from_utf8_lossy(&output.output[]),\n-                                         String::from_utf8_lossy(&output.error[]))[]);\n+                                         String::from_utf8_lossy(&output.output[..]),\n+                                         String::from_utf8_lossy(&output.error[..]))[..]);\n                                 return Err(box \"Some tests failed.\" as Box<Error>);\n                             }\n "}]}