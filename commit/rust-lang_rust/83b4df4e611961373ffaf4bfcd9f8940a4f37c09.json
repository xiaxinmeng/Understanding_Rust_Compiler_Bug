{"sha": "83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "node_id": "C_kwDOAAsO6NoAKDgzYjRkZjRlNjExOTYxMzczZmZhZjRiZmNkOWY4OTQwYTRmMzdjMDk", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-04-29T12:57:26Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-05-05T19:44:48Z"}, "message": "Add feature gate", "tree": {"sha": "85d737c61f42bb70cef306a56292c83abcf25ab9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85d737c61f42bb70cef306a56292c83abcf25ab9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "html_url": "https://github.com/rust-lang/rust/commit/83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eb29c7f49c2d99e9bfc778f30984f7fdcf5fc08", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eb29c7f49c2d99e9bfc778f30984f7fdcf5fc08", "html_url": "https://github.com/rust-lang/rust/commit/5eb29c7f49c2d99e9bfc778f30984f7fdcf5fc08"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "3d5056d82c56c4c8c3e96f2c9a39e81290cd0fe7", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "patch": "@@ -603,6 +603,7 @@ pub fn check_crate(krate: &ast::Crate, sess: &Session) {\n     gate_all!(yeet_expr, \"`do yeet` expression is experimental\");\n     gate_all!(dyn_star, \"`dyn*` trait objects are experimental\");\n     gate_all!(const_closures, \"const closures are experimental\");\n+    gate_all!(builtin_syntax, \"`builtin #` syntax is unstable\");\n \n     if !visitor.features.negative_bounds {\n         for &span in spans.get(&sym::negative_bounds).iter().copied().flatten() {"}, {"sha": "a797dd94404c18dd1ba2b92c5903028e648a36a2", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "patch": "@@ -313,6 +313,8 @@ declare_features! (\n     (active, async_closure, \"1.37.0\", Some(62290), None),\n     /// Allows async functions to be declared, implemented, and used in traits.\n     (active, async_fn_in_trait, \"1.66.0\", Some(91611), None),\n+    /// Allows builtin # foo() syntax\n+    (active, builtin_syntax, \"CURRENT_RUSTC_VERSION\", Some(110680), None),\n     /// Allows `c\"foo\"` literals.\n     (active, c_str_literals, \"CURRENT_RUSTC_VERSION\", Some(105723), None),\n     /// Treat `extern \"C\"` function as nounwind."}, {"sha": "c1095512bd45d069af2d5715da37ad97e7b39217", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "patch": "@@ -1782,6 +1782,7 @@ impl<'a> Parser<'a> {\n                 .into_diagnostic(&self.sess.span_diagnostic);\n             return Err(err);\n         };\n+        self.sess.gated_spans.gate(sym::builtin_syntax, ident.span);\n         self.bump();\n \n         self.expect(&TokenKind::OpenDelim(Delimiter::Parenthesis))?;"}, {"sha": "832bb5a96bc3db5f5b8dc81884d29894d0c6b795", "filename": "tests/ui/feature-gates/feature-gate-builtin_syntax.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/tests%2Fui%2Ffeature-gates%2Ffeature-gate-builtin_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/tests%2Fui%2Ffeature-gates%2Ffeature-gate-builtin_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffeature-gates%2Ffeature-gate-builtin_syntax.rs?ref=83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "patch": "@@ -0,0 +1,7 @@\n+struct Foo {\n+    v: u8,\n+    w: u8,\n+}\n+fn main() {\n+    builtin # offset_of(Foo, v); //~ ERROR `builtin #` syntax is unstable\n+}"}, {"sha": "3bc7848f66dd305cb17bdd4e040ff11797a74083", "filename": "tests/ui/feature-gates/feature-gate-builtin_syntax.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/tests%2Fui%2Ffeature-gates%2Ffeature-gate-builtin_syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/tests%2Fui%2Ffeature-gates%2Ffeature-gate-builtin_syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffeature-gates%2Ffeature-gate-builtin_syntax.stderr?ref=83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: `builtin #` syntax is unstable\n+  --> $DIR/feature-gate-builtin_syntax.rs:6:15\n+   |\n+LL |     builtin # offset_of(Foo, v);\n+   |               ^^^^^^^^^\n+   |\n+   = note: see issue #110680 <https://github.com/rust-lang/rust/issues/110680> for more information\n+   = help: add `#![feature(builtin_syntax)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "1be9899887b4abe9c1daffd8967835c5ab4aa8c0", "filename": "tests/ui/offset-of/offset-of-builtin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/tests%2Fui%2Foffset-of%2Foffset-of-builtin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/tests%2Fui%2Foffset-of%2Foffset-of-builtin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-builtin.rs?ref=83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "patch": "@@ -1,9 +1,9 @@\n+#![feature(builtin_syntax)]\n+\n // For the exposed macro we already test these errors in the other files,\n // but this test helps to make sure the builtin construct also errors.\n // This has the same examples as offset-of-arg-count.rs\n \n-\n-\n fn main() {\n     builtin # offset_of(NotEnoughArguments); //~ ERROR expected one of\n }"}, {"sha": "897dab8ec50aea16381bd143b0207dad181ca2b8", "filename": "tests/ui/parser/builtin-syntax.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/tests%2Fui%2Fparser%2Fbuiltin-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/tests%2Fui%2Fparser%2Fbuiltin-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fbuiltin-syntax.rs?ref=83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "patch": "@@ -1,3 +1,5 @@\n+#![feature(builtin_syntax)]\n+\n fn main() {\n     builtin # foobar(); //~ ERROR unknown `builtin #` construct\n }"}, {"sha": "ee3764a62216ae3033100fecdba9c598b33f0dbd", "filename": "tests/ui/parser/builtin-syntax.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/tests%2Fui%2Fparser%2Fbuiltin-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83b4df4e611961373ffaf4bfcd9f8940a4f37c09/tests%2Fui%2Fparser%2Fbuiltin-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fbuiltin-syntax.stderr?ref=83b4df4e611961373ffaf4bfcd9f8940a4f37c09", "patch": "@@ -1,11 +1,11 @@\n error: unknown `builtin #` construct `foobar`\n-  --> $DIR/builtin-syntax.rs:2:5\n+  --> $DIR/builtin-syntax.rs:4:5\n    |\n LL |     builtin # foobar();\n    |     ^^^^^^^^^^^^^^^^\n \n error: expected identifier after `builtin #`\n-  --> $DIR/builtin-syntax.rs:6:15\n+  --> $DIR/builtin-syntax.rs:8:15\n    |\n LL |     builtin # {}();\n    |               ^"}]}