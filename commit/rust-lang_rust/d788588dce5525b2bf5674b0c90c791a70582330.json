{"sha": "d788588dce5525b2bf5674b0c90c791a70582330", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ODg1ODhkY2U1NTI1YjJiZjU2NzRiMGM5MGM3OTFhNzA1ODIzMzA=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-02-06T00:14:42Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-02-07T18:49:58Z"}, "message": "Feature-gate #![no_std]\n\nFixes #21833.\n\n[breaking-change]", "tree": {"sha": "e16e924890a8401365911044b158d6de266e4054", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e16e924890a8401365911044b158d6de266e4054"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d788588dce5525b2bf5674b0c90c791a70582330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d788588dce5525b2bf5674b0c90c791a70582330", "html_url": "https://github.com/rust-lang/rust/commit/d788588dce5525b2bf5674b0c90c791a70582330", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d788588dce5525b2bf5674b0c90c791a70582330/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67350bc8681d6df212817644cad7c748039a6238", "url": "https://api.github.com/repos/rust-lang/rust/commits/67350bc8681d6df212817644cad7c748039a6238", "html_url": "https://github.com/rust-lang/rust/commit/67350bc8681d6df212817644cad7c748039a6238"}], "stats": {"total": 98, "additions": 76, "deletions": 22}, "files": [{"sha": "15ae686d9653957ea0d21f9e80093db7f58edde4", "filename": "src/doc/reference.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -2467,6 +2467,12 @@ The currently implemented features of the reference compiler are:\n \n * `associated_types` - Allows type aliases in traits. Experimental.\n \n+* `no_std` - Allows the `#![no_std]` crate attribute, which disables the implicit\n+             `extern crate std`. This typically requires use of the unstable APIs\n+             behind the libstd \"facade\", such as libcore and libcollections. It\n+             may also cause problems when using syntax extensions, including\n+             `#[derive]`.\n+\n If a feature is promoted to a language feature, then all existing programs will\n start to receive compilation warnings about #[feature] directives which enabled\n the new feature (because the directive is no longer necessary). However, if a"}, {"sha": "b364d00f95c20b493640f3bd2e6d8f2cba024c44", "filename": "src/doc/trpl/unsafe.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Fdoc%2Ftrpl%2Funsafe.md", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Fdoc%2Ftrpl%2Funsafe.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Funsafe.md?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -433,6 +433,7 @@ attribute attached to the crate.\n ```ignore\n // a minimal library\n #![crate_type=\"lib\"]\n+#![feature(no_std)]\n #![no_std]\n # // fn main() {} tricked you, rustdoc!\n ```\n@@ -446,8 +447,8 @@ The function marked `#[start]` is passed the command line parameters\n in the same format as C:\n \n ```\n+#![feature(lang_items, start, no_std)]\n #![no_std]\n-#![feature(lang_items, start)]\n \n // Pull in the system libc library for what crt0.o likely requires\n extern crate libc;\n@@ -473,6 +474,7 @@ correct ABI and the correct name, which requires overriding the\n compiler's name mangling too:\n \n ```ignore\n+#![feature(no_std)]\n #![no_std]\n #![no_main]\n #![feature(lang_items, start)]\n@@ -528,8 +530,8 @@ As an example, here is a program that will calculate the dot product of two\n vectors provided from C, using idiomatic Rust practices.\n \n ```\n+#![feature(lang_items, start, no_std)]\n #![no_std]\n-#![feature(lang_items, start)]\n \n # extern crate libc;\n extern crate core;\n@@ -652,8 +654,8 @@ and one for deallocation. A freestanding program that uses the `Box`\n sugar for dynamic allocations via `malloc` and `free`:\n \n ```\n+#![feature(lang_items, box_syntax, start, no_std)]\n #![no_std]\n-#![feature(lang_items, box_syntax, start)]\n \n extern crate libc;\n "}, {"sha": "81391fd63eb85cb2a14532dc2409a41ab088ab42", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -65,6 +65,7 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/nightly/\")]\n \n+#![feature(no_std)]\n #![no_std]\n #![feature(lang_items, unsafe_destructor)]\n #![feature(box_syntax)]"}, {"sha": "f220724c42e098f6ea1308777282da47bfea9ab4", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -33,6 +33,7 @@\n #![cfg_attr(test, feature(test))]\n #![cfg_attr(test, allow(deprecated))] // rand\n \n+#![feature(no_std)]\n #![no_std]\n \n #[macro_use]"}, {"sha": "df4942b509b4c347440e6d57c7dad56422b817cf", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -56,6 +56,7 @@\n        html_root_url = \"http://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n+#![feature(no_std)]\n #![no_std]\n #![allow(raw_pointer_derive)]\n #![deny(missing_docs)]"}, {"sha": "38d5c5eb27ae2d449739d8cceca055067fad4ad1", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -16,6 +16,7 @@\n #![cfg_attr(not(feature = \"cargo-build\"), staged_api)]\n #![cfg_attr(not(feature = \"cargo-build\"), feature(core))]\n #![feature(int_uint)]\n+#![feature(no_std)]\n #![no_std]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\","}, {"sha": "4113718cfd15b92989dd8e86d894883470a3e3e1", "filename": "src/librand/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibrand%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibrand%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Flib.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -23,6 +23,7 @@\n        html_root_url = \"http://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n #![feature(int_uint)]\n+#![feature(no_std)]\n #![no_std]\n #![unstable(feature = \"rand\")]\n #![feature(staged_api)]"}, {"sha": "370a5d48decaec85298da73575468e6a98efb5f0", "filename": "src/librustc_bitflags/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibrustc_bitflags%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibrustc_bitflags%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_bitflags%2Flib.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -12,6 +12,7 @@\n #![feature(staged_api)]\n #![staged_api]\n #![crate_type = \"rlib\"]\n+#![feature(no_std)]\n #![no_std]\n #![unstable(feature = \"rustc_private\")]\n "}, {"sha": "9df9025846201b4b2172a2a2ab908580fd12c9cb", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -43,7 +43,7 @@ struct RH<'a> {\n     sub: &'a [RH<'a>]\n }\n \n-static EMPTY_SOURCE_STR: &'static str = \"#![no_std]\";\n+static EMPTY_SOURCE_STR: &'static str = \"#![feature(no_std)] #![no_std]\";\n \n struct ExpectErrorEmitter {\n     messages: Vec<String>"}, {"sha": "2a523356f62c0de011e5864eba3503e0d46a6b5a", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -124,6 +124,7 @@\n #![cfg_attr(test, feature(test))]\n \n // Don't link to std. We are std.\n+#![feature(no_std)]\n #![no_std]\n \n #![deny(missing_docs)]"}, {"sha": "c8ab46ff8fd338f9621c0f797f0786315abea3a6", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -122,7 +122,10 @@ static KNOWN_FEATURES: &'static [(&'static str, &'static str, Status)] = &[\n     (\"staged_api\", \"1.0.0\", Active),\n \n     // Allows using items which are missing stability attributes\n-    (\"unmarked_api\", \"1.0.0\", Active)\n+    (\"unmarked_api\", \"1.0.0\", Active),\n+\n+    // Allows using #![no_std]\n+    (\"no_std\", \"1.0.0\", Active),\n ];\n \n enum Status {\n@@ -466,6 +469,11 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                               attr.span,\n                               \"language items are subject to change\");\n         }\n+\n+        if attr.check_name(\"no_std\") {\n+            self.gate_feature(\"no_std\", attr.span,\n+                              \"no_std is experimental\");\n+        }\n     }\n \n     fn visit_pat(&mut self, pattern: &ast::Pat) {"}, {"sha": "54c8fcd205b8f7e5b05affff65ce279530445c41", "filename": "src/libunicode/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibunicode%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Flibunicode%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunicode%2Flib.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -29,6 +29,7 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n+#![feature(no_std)]\n #![no_std]\n #![feature(slicing_syntax)]\n #![feature(int_uint)]"}, {"sha": "834667968c85bdd3cb623701249d3cf5bc6df2bc", "filename": "src/test/auxiliary/lang-item-public.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fauxiliary%2Flang-item-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fauxiliary%2Flang-item-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flang-item-public.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(no_std)]\n #![no_std]\n #![feature(lang_items)]\n "}, {"sha": "d830aef54f5ef0ff825d56f1ba83ff3e43ddea18", "filename": "src/test/auxiliary/no_std_crate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fauxiliary%2Fno_std_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fauxiliary%2Fno_std_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fno_std_crate.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(no_std)]\n #![no_std]\n \n pub fn foo() {}"}, {"sha": "fa254cb91ad53e87ee17fb4ede2e84d8c126419a", "filename": "src/test/auxiliary/weak-lang-items.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fauxiliary%2Fweak-lang-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fauxiliary%2Fweak-lang-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fweak-lang-items.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -13,6 +13,7 @@\n // This aux-file will require the eh_personality function to be codegen'd, but\n // it hasn't been defined just yet. Make sure we don't explode.\n \n+#![feature(no_std)]\n #![no_std]\n #![crate_type = \"rlib\"]\n "}, {"sha": "621f5ec9660fca6aff50caf0bf144f62f0b0b008", "filename": "src/test/compile-fail/associated-types-ICE-when-projecting-out-of-err.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fassociated-types-ICE-when-projecting-out-of-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fassociated-types-ICE-when-projecting-out-of-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-types-ICE-when-projecting-out-of-err.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -13,6 +13,7 @@\n \n #![crate_type = \"lib\"]\n #![feature(lang_items)]\n+#![feature(no_std)]\n #![no_std]\n \n #[lang=\"sized\"]"}, {"sha": "c91849ca53e1a780f2cba3bfafcf960ecc0a4ca5", "filename": "src/test/compile-fail/bad-mid-path-type-params.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fbad-mid-path-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fbad-mid-path-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-mid-path-type-params.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -10,6 +10,7 @@\n \n // ignore-tidy-linelength\n \n+#![feature(no_std)]\n #![no_std]\n #![feature(lang_items)]\n "}, {"sha": "f82e7f3e36a8ac7bbd7cce6b52606ddff2b5c19b", "filename": "src/test/compile-fail/derive-no-std-not-supported.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fderive-no-std-not-supported.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fderive-no-std-not-supported.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderive-no-std-not-supported.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(no_std)]\n #![no_std]\n \n extern crate core;"}, {"sha": "893ba8a8a86e8b5fd5b2fe2ff43c6eb579f3c3c0", "filename": "src/test/compile-fail/gated-no-std.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fgated-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fgated-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-no-std.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2105 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![no_std] //~ ERROR no_std is experimental\n+\n+fn main() {}"}, {"sha": "14601e67a77c1c77a86391940ab74a47eb0e8820", "filename": "src/test/compile-fail/issue-19660.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fissue-19660.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fissue-19660.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-19660.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -10,7 +10,7 @@\n \n // error-pattern: requires `copy` lang_item\n \n-#![feature(lang_items, start)]\n+#![feature(lang_items, start, no_std)]\n #![no_std]\n \n #[lang = \"sized\"]"}, {"sha": "c7426fc6fc1b06cb3f36511390f7166bd02de36f", "filename": "src/test/compile-fail/lang-item-missing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Flang-item-missing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Flang-item-missing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flang-item-missing.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -13,8 +13,8 @@\n \n // error-pattern: requires `sized` lang_item\n \n+#![feature(start, no_std)]\n #![no_std]\n-#![feature(start)]\n \n #[start]\n fn start(argc: isize, argv: *const *const u8) -> isize {"}, {"sha": "e91e6efd1cbf07407b56460e907e16e6b0298b72", "filename": "src/test/compile-fail/lint-dead-code-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(no_std)]\n #![no_std]\n #![allow(unused_variables)]\n #![allow(non_camel_case_types)]"}, {"sha": "7ebbcc2809a5802a42cfc4d598ed1171c2038703", "filename": "src/test/compile-fail/privacy1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fprivacy1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fprivacy1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy1.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(lang_items, start)]\n+#![feature(lang_items, start, no_std)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n #[lang=\"sized\"]"}, {"sha": "7b4a2a3595bf701a5f5353009021aab92b0c9d16", "filename": "src/test/compile-fail/privacy2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(start)]\n+#![feature(start, no_std)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n // Test to make sure that globs don't leak in regular `use` statements."}, {"sha": "8c9de1fa25ce784f2b00af2ea95816170a5bbcda", "filename": "src/test/compile-fail/privacy3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(start)]\n+#![feature(start, no_std)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n // Test to make sure that private items imported through globs remain private"}, {"sha": "bcb46663aa849da96e36e45d9275453948cdbff0", "filename": "src/test/compile-fail/privacy4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(lang_items, start)]\n+#![feature(lang_items, start, no_std)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n #[lang = \"sized\"] pub trait Sized {}"}, {"sha": "74c2c6e584b437184c642b1d46e9d25b87dcc165", "filename": "src/test/compile-fail/regions-bounded-method-type-parameters-trait-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fregions-bounded-method-type-parameters-trait-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fregions-bounded-method-type-parameters-trait-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-bounded-method-type-parameters-trait-bound.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(lang_items, no_std)]\n #![no_std]\n-#![feature(lang_items)]\n \n // Check that explicit region bounds are allowed on the various\n // nominal types (but not on other types) and that they are type"}, {"sha": "3b8312a30190c2b1317a5e3710881b01f4070601", "filename": "src/test/compile-fail/regions-struct-not-wf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fregions-struct-not-wf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fregions-struct-not-wf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-struct-not-wf.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -10,6 +10,7 @@\n \n // Various examples of structs whose fields are not well-formed.\n \n+#![feature(no_std)]\n #![no_std]\n #![allow(dead_code)]\n "}, {"sha": "7d252604883d6e12eb185e249389150a8c93ea2a", "filename": "src/test/compile-fail/required-lang-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Frequired-lang-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Frequired-lang-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frequired-lang-item.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(lang_items)]\n+#![feature(lang_items, no_std)]\n #![no_std]\n \n #[lang=\"sized\"] pub trait Sized {}"}, {"sha": "42df43934a89cd19499ccbea68bf528b32f3f4a8", "filename": "src/test/compile-fail/weak-lang-item.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -13,6 +13,7 @@\n // error-pattern: language item required, but not found: `stack_exhausted`\n // error-pattern: language item required, but not found: `eh_personality`\n \n+#![feature(no_std)]\n #![no_std]\n \n extern crate core;"}, {"sha": "60660d482742dfbbf0711db3110c92c2ad5eb9a9", "filename": "src/test/pretty/issue-4264.pp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fpretty%2Fissue-4264.pp", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Fpretty%2Fissue-4264.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue-4264.pp?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -1,3 +1,4 @@\n+#![feature(no_std)]\n #![no_std]\n #[prelude_import]\n use std::prelude::v1::*;"}, {"sha": "8695ab58e5fe597748b5d503076038e61461a9b1", "filename": "src/test/run-make/mismatching-target-triples/bar.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fmismatching-target-triples%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fmismatching-target-triples%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmismatching-target-triples%2Fbar.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -7,5 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+#![feature(no_std)]\n #![no_std]\n extern crate foo;"}, {"sha": "afd4f298a97ddc600357cf4167670acbdf40811e", "filename": "src/test/run-make/mismatching-target-triples/foo.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fmismatching-target-triples%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fmismatching-target-triples%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmismatching-target-triples%2Ffoo.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -7,5 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+#![feature(no_std)]\n #![no_std]\n #![crate_type = \"lib\"]"}, {"sha": "0bec6148189a908ea43df5f599c278c5f76236db", "filename": "src/test/run-make/no-duplicate-libs/bar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Fbar.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(lang_items, no_std)]\n #![no_std]\n-#![feature(lang_items)]\n #![crate_type = \"dylib\"]\n \n extern crate libc;"}, {"sha": "9e8afdc5696ed6dd604cd78a4acc655ad207517d", "filename": "src/test/run-make/no-duplicate-libs/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Ffoo.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(lang_items, no_std)]\n #![no_std]\n-#![feature(lang_items)]\n #![crate_type = \"dylib\"]\n \n extern crate libc;"}, {"sha": "6aff4c9b3d5a3c1cb03d52fe67281ae870d51b2c", "filename": "src/test/run-make/pretty-expanded-hygiene/input.pp.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.pp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.pp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.pp.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // minimal junk\n+#![feature(no_std)]\n #![no_std]\n \n "}, {"sha": "a46fa12ac05201c595ab0f215c6d662b29abad52", "filename": "src/test/run-make/pretty-expanded-hygiene/input.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // minimal junk\n+#![feature(no_std)]\n #![no_std]\n \n macro_rules! foo {"}, {"sha": "834a2adf01fd3075bfa44ef33454e2504f68f3fd", "filename": "src/test/run-make/simd-ffi/simd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fsimd-ffi%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Fsimd-ffi%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsimd-ffi%2Fsimd.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -12,6 +12,7 @@\n #![crate_type = \"lib\"]\n // we can compile to a variety of platforms, because we don't need\n // cross-compiled standard libraries.\n+#![feature(no_std)]\n #![no_std]\n \n #![feature(simd, simd_ffi, link_llvm_intrinsics, lang_items)]"}, {"sha": "365fc039a4ec37a6f8a2f93da4d6d437ecea7dc2", "filename": "src/test/run-make/target-specs/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Ftarget-specs%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-make%2Ftarget-specs%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftarget-specs%2Ffoo.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(lang_items)]\n+#![feature(lang_items, no_std)]\n #![no_std]\n \n #[lang=\"copy\"]"}, {"sha": "d3034c2d48529dfa21ed85c3fc4a4627a521b6c4", "filename": "src/test/run-pass/derive-no-std.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fderive-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fderive-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderive-no-std.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(no_std)]\n #![no_std]\n \n extern crate core;"}, {"sha": "30c2aec33ad1ba51de99485c0fe4fc2b946b435c", "filename": "src/test/run-pass/for-loop-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Ffor-loop-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Ffor-loop-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffor-loop-no-std.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(lang_items, start, no_std)]\n #![no_std]\n-#![feature(lang_items, start)]\n \n extern crate \"std\" as other;\n "}, {"sha": "44d80490e693bec8fa37366ca99a57ac6edb8f15", "filename": "src/test/run-pass/format-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-no-std.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(lang_items, start, no_std)]\n #![no_std]\n-#![feature(lang_items, start)]\n \n extern crate \"std\" as other;\n "}, {"sha": "350ec68a7d1495347ffe02ba11595b627cdb5ef9", "filename": "src/test/run-pass/lang-item-public.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Flang-item-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Flang-item-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flang-item-public.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -12,8 +12,8 @@\n // ignore-android\n // ignore-windows #13361\n \n+#![feature(lang_items, start, no_std)]\n #![no_std]\n-#![feature(lang_items, start)]\n \n extern crate \"lang-item-public\" as lang_lib;\n "}, {"sha": "f5f34607aff7b8955a8e0081915c83604503c253", "filename": "src/test/run-pass/no-std-xcrate2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fno-std-xcrate2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fno-std-xcrate2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fno-std-xcrate2.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -16,6 +16,7 @@\n // This tests that libraries built with #[no_std] can be linked to crates with\n // #[no_std] and actually run.\n \n+#![feature(no_std)]\n #![no_std]\n \n extern crate no_std_crate;"}, {"sha": "197890c1277126c1e607c3d4e555dbd7012bdba5", "filename": "src/test/run-pass/smallest-hello-world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -12,8 +12,8 @@\n \n // Smallest \"hello world\" with a libc runtime\n \n+#![feature(intrinsics, lang_items, start, no_std)]\n #![no_std]\n-#![feature(intrinsics, lang_items, start)]\n \n extern crate libc;\n "}, {"sha": "65a392e63c51001007737b1046f3dc31f692871f", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -10,7 +10,7 @@\n // except according to those terms.\n \n #![allow(unused_imports)]\n-#![feature(start)]\n+#![feature(start, no_std)]\n #![no_std]\n \n extern crate std;"}, {"sha": "47b87fce2abaf7b6d0669241a75ad48902178a73", "filename": "src/test/run-pass/vec-macro-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d788588dce5525b2bf5674b0c90c791a70582330/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs?ref=d788588dce5525b2bf5674b0c90c791a70582330", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(lang_items, start)]\n+#![feature(lang_items, start, no_std)]\n #![no_std]\n \n extern crate \"std\" as other;"}]}