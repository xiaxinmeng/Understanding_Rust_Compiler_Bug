{"sha": "c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MWNmMzBlOWQwYTVhZTQ3ZTk0NGZkOGVlMjdlZGE5Y2U4MTVlZTE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-16T06:44:53Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-16T07:58:43Z"}, "message": "Strip unconfigured nodes from decorator-generated AST", "tree": {"sha": "68c843f906df68211f11e624a5effc5fdb57cbf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68c843f906df68211f11e624a5effc5fdb57cbf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1", "html_url": "https://github.com/rust-lang/rust/commit/c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83d283b67bbc668e1ab262b3f199c046567e9954", "url": "https://api.github.com/repos/rust-lang/rust/commits/83d283b67bbc668e1ab262b3f199c046567e9954", "html_url": "https://github.com/rust-lang/rust/commit/83d283b67bbc668e1ab262b3f199c046567e9954"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "776c71822cd597a0b3c70b4ec4c25fe6145f4388", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1", "patch": "@@ -95,6 +95,16 @@ impl Annotatable {\n             _ => panic!(\"expected Item\")\n         }\n     }\n+\n+    pub fn fold_with<F: Folder>(self, folder: &mut F) -> SmallVector<Self> {\n+        match self {\n+            Annotatable::Item(item) => folder.fold_item(item).map(Annotatable::Item),\n+            Annotatable::ImplItem(item) =>\n+                folder.fold_impl_item(item.unwrap()).map(|item| Annotatable::ImplItem(P(item))),\n+            Annotatable::TraitItem(item) =>\n+                folder.fold_trait_item(item.unwrap()).map(|item| Annotatable::TraitItem(P(item))),\n+        }\n+    }\n }\n \n // A more flexible ItemDecorator."}, {"sha": "a0ee21664294942d1cc839bdbf656eaffd8f4316", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1", "patch": "@@ -839,16 +839,18 @@ fn expand_decorators(a: Annotatable,\n                         }\n                     });\n \n-                    // we'd ideally decorator_items.push_all(expand_annotatable(ann, fld)),\n-                    // but that double-mut-borrows fld\n                     let mut items: SmallVector<Annotatable> = SmallVector::zero();\n                     dec.expand(fld.cx,\n                                attr.span,\n                                &attr.node.value,\n                                &a,\n                                &mut |ann| items.push(ann));\n-                    decorator_items.extend(items.into_iter()\n-                        .flat_map(|ann| expand_annotatable(ann, fld).into_iter()));\n+\n+                    for item in items {\n+                        for configured_item in item.fold_with(&mut fld.strip_unconfigured()) {\n+                            decorator_items.extend(expand_annotatable(configured_item, fld));\n+                        }\n+                    }\n \n                     fld.cx.bt_pop();\n                 }"}, {"sha": "78395462fb50fc26099f6cb830749def8fc5e829", "filename": "src/libsyntax/util/small_vector.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1/src%2Flibsyntax%2Futil%2Fsmall_vector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1/src%2Flibsyntax%2Futil%2Fsmall_vector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fsmall_vector.rs?ref=c41cf30e9d0a5ae47e944fd8ee27eda9ce815ee1", "patch": "@@ -136,6 +136,15 @@ impl<T> SmallVector<T> {\n     }\n \n     pub fn is_empty(&self) -> bool { self.len() == 0 }\n+\n+    pub fn map<U, F: FnMut(T) -> U>(self, mut f: F) -> SmallVector<U> {\n+        let repr = match self.repr {\n+            Zero => Zero,\n+            One(t) => One(f(t)),\n+            Many(vec) => Many(vec.into_iter().map(f).collect()),\n+        };\n+        SmallVector { repr: repr }\n+    }\n }\n \n impl<T> IntoIterator for SmallVector<T> {"}]}