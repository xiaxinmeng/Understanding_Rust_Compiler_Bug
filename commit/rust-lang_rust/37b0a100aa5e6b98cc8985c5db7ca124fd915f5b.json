{"sha": "37b0a100aa5e6b98cc8985c5db7ca124fd915f5b", "node_id": "C_kwDOAAsO6NoAKDM3YjBhMTAwYWE1ZTZiOThjYzg5ODVjNWRiN2NhMTI0ZmQ5MTVmNWI", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-11-25T13:50:41Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-11-25T13:50:41Z"}, "message": "rustbuild: Don't build doc::SharedAssets when building JSON docs.", "tree": {"sha": "64ecef1d6e1b32a627db5c796e6b4f103e8d3219", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64ecef1d6e1b32a627db5c796e6b4f103e8d3219"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37b0a100aa5e6b98cc8985c5db7ca124fd915f5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37b0a100aa5e6b98cc8985c5db7ca124fd915f5b", "html_url": "https://github.com/rust-lang/rust/commit/37b0a100aa5e6b98cc8985c5db7ca124fd915f5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37b0a100aa5e6b98cc8985c5db7ca124fd915f5b/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41e0363055ade59584cff667c79f64937e6ef3f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/41e0363055ade59584cff667c79f64937e6ef3f9", "html_url": "https://github.com/rust-lang/rust/commit/41e0363055ade59584cff667c79f64937e6ef3f9"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "2c6fd1e1d4dd4e19edd1a10c3f9b09bd9afec634", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37b0a100aa5e6b98cc8985c5db7ca124fd915f5b/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37b0a100aa5e6b98cc8985c5db7ca124fd915f5b/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=37b0a100aa5e6b98cc8985c5db7ca124fd915f5b", "patch": "@@ -458,7 +458,9 @@ impl Step for Std {\n \n         t!(fs::create_dir_all(&out));\n \n-        builder.ensure(SharedAssets { target: self.target });\n+        if self.format == DocumentationFormat::HTML {\n+            builder.ensure(SharedAssets { target: self.target });\n+        }\n \n         let index_page = builder.src.join(\"src/doc/index.md\").into_os_string();\n         let mut extra_args = match self.format {"}]}