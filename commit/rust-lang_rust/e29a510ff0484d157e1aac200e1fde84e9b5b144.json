{"sha": "e29a510ff0484d157e1aac200e1fde84e9b5b144", "node_id": "C_kwDOAAsO6NoAKGUyOWE1MTBmZjA0ODRkMTU3ZTFhYWMyMDBlMWZkZTg0ZTliNWIxNDQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-06T12:27:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-06T12:27:44Z"}, "message": "Rollup merge of #105318 - compiler-errors:issue-105304, r=jackh726\n\nMake `get_impl_future_output_ty` work with AFIT\n\nFixes #105304", "tree": {"sha": "14a301d4361ae7a9c057ba608eff7c9eb8e2cb5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14a301d4361ae7a9c057ba608eff7c9eb8e2cb5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e29a510ff0484d157e1aac200e1fde84e9b5b144", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjjzVACRBK7hj4Ov3rIwAADc0IAKOuFTLZXJ+EVdqHb5HZ4tjy\nZ7S6Ob7ndqeQIhaOB45SZU6fJ0Ef/IDJ2tUjdqxfPTHTsaZWvVi3apPXCxyKbgjS\nc3NsK0oPKkz2sMX1TAKtmZjoXV/VqpNbgDWvALbQL3SrsNNRYlPD4YbZQgtAOnPb\nJog78rVkTyD9jQ1wJ0brtq/7yxKmrRoPHbR4D1atqxX2mbw7CGIDmLyFAnIp8Qkb\nzDeiBEdnAbX3gYM+AXA5coQFtIQj64e8/nlAuuZZg7jNiGgHECx9MK3AoCSx9rdm\nTQNt8ki4Xzrbwoy8OpEqHxi2dAfEpL6Nifdh30RMJl1ueB4Jos1wpUcvGIH2W30=\n=XsPx\n-----END PGP SIGNATURE-----\n", "payload": "tree 14a301d4361ae7a9c057ba608eff7c9eb8e2cb5e\nparent 61189b6ae3c5ccc8a38be18aad7ef75c253d7c28\nparent da929fa63c7a9687de708587f170cbe7f874a495\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670329664 +0100\ncommitter GitHub <noreply@github.com> 1670329664 +0100\n\nRollup merge of #105318 - compiler-errors:issue-105304, r=jackh726\n\nMake `get_impl_future_output_ty` work with AFIT\n\nFixes #105304\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e29a510ff0484d157e1aac200e1fde84e9b5b144", "html_url": "https://github.com/rust-lang/rust/commit/e29a510ff0484d157e1aac200e1fde84e9b5b144", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e29a510ff0484d157e1aac200e1fde84e9b5b144/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61189b6ae3c5ccc8a38be18aad7ef75c253d7c28", "url": "https://api.github.com/repos/rust-lang/rust/commits/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28", "html_url": "https://github.com/rust-lang/rust/commit/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28"}, {"sha": "da929fa63c7a9687de708587f170cbe7f874a495", "url": "https://api.github.com/repos/rust-lang/rust/commits/da929fa63c7a9687de708587f170cbe7f874a495", "html_url": "https://github.com/rust-lang/rust/commit/da929fa63c7a9687de708587f170cbe7f874a495"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "3256ca1fb20fbaff5fd3effea13ae9db8d415082", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e29a510ff0484d157e1aac200e1fde84e9b5b144/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e29a510ff0484d157e1aac200e1fde84e9b5b144/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=e29a510ff0484d157e1aac200e1fde84e9b5b144", "patch": "@@ -341,7 +341,15 @@ pub fn unexpected_hidden_region_diagnostic<'tcx>(\n \n impl<'tcx> InferCtxt<'tcx> {\n     pub fn get_impl_future_output_ty(&self, ty: Ty<'tcx>) -> Option<Ty<'tcx>> {\n-        let ty::Opaque(def_id, substs) = *ty.kind() else { return None; };\n+        let (def_id, substs) = match *ty.kind() {\n+            ty::Opaque(def_id, substs) => (def_id, substs),\n+            ty::Projection(data)\n+                if self.tcx.def_kind(data.item_def_id) == DefKind::ImplTraitPlaceholder =>\n+            {\n+                (data.item_def_id, data.substs)\n+            }\n+            _ => return None,\n+        };\n \n         let future_trait = self.tcx.require_lang_item(LangItem::Future, None);\n         let item_def_id = self.tcx.associated_item_def_ids(future_trait)[0];"}, {"sha": "3446761d119da5aa2ca703d8ee427324158e9633", "filename": "src/test/ui/async-await/in-trait/return-type-suggestion.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e29a510ff0484d157e1aac200e1fde84e9b5b144/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e29a510ff0484d157e1aac200e1fde84e9b5b144/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.rs?ref=e29a510ff0484d157e1aac200e1fde84e9b5b144", "patch": "@@ -0,0 +1,14 @@\n+// edition: 2021\n+\n+#![feature(async_fn_in_trait)]\n+//~^ WARN the feature `async_fn_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n+\n+trait A {\n+    async fn e() {\n+        Ok(())\n+        //~^ ERROR mismatched types\n+        //~| HELP consider using a semicolon here\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "5a9b15e54a00869b35f5cb2974ad29d28b109ffe", "filename": "src/test/ui/async-await/in-trait/return-type-suggestion.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e29a510ff0484d157e1aac200e1fde84e9b5b144/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e29a510ff0484d157e1aac200e1fde84e9b5b144/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Freturn-type-suggestion.stderr?ref=e29a510ff0484d157e1aac200e1fde84e9b5b144", "patch": "@@ -0,0 +1,23 @@\n+warning: the feature `async_fn_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/return-type-suggestion.rs:3:12\n+   |\n+LL | #![feature(async_fn_in_trait)]\n+   |            ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0308]: mismatched types\n+  --> $DIR/return-type-suggestion.rs:8:9\n+   |\n+LL |         Ok(())\n+   |         ^^^^^^- help: consider using a semicolon here: `;`\n+   |         |\n+   |         expected `()`, found enum `Result`\n+   |\n+   = note: expected unit type `()`\n+                   found enum `Result<(), _>`\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0308`."}]}