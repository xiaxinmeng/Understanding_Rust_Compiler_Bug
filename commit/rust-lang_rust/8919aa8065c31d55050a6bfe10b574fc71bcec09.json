{"sha": "8919aa8065c31d55050a6bfe10b574fc71bcec09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MTlhYTgwNjVjMzFkNTUwNTBhNmJmZTEwYjU3NGZjNzFiY2VjMDk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-17T14:17:01Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-17T14:17:01Z"}, "message": "implement accessors for IndexExpr", "tree": {"sha": "ad96d02591e3c629ac35b3cb32591fd9da06af1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad96d02591e3c629ac35b3cb32591fd9da06af1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8919aa8065c31d55050a6bfe10b574fc71bcec09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8919aa8065c31d55050a6bfe10b574fc71bcec09", "html_url": "https://github.com/rust-lang/rust/commit/8919aa8065c31d55050a6bfe10b574fc71bcec09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8919aa8065c31d55050a6bfe10b574fc71bcec09/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd4c083e429d055190fa830bd2216915fe634b98", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4c083e429d055190fa830bd2216915fe634b98", "html_url": "https://github.com/rust-lang/rust/commit/fd4c083e429d055190fa830bd2216915fe634b98"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "20e3902094052edcc2ff0ad5efdc68c0812e2c42", "filename": "crates/ra_syntax/src/ast/expr_extensions.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8919aa8065c31d55050a6bfe10b574fc71bcec09/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8919aa8065c31d55050a6bfe10b574fc71bcec09/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs?ref=8919aa8065c31d55050a6bfe10b574fc71bcec09", "patch": "@@ -195,6 +195,15 @@ impl ast::BinExpr {\n     }\n }\n \n+impl ast::IndexExpr {\n+    pub fn base(&self) -> Option<ast::Expr> {\n+        children(self).nth(0)\n+    }\n+    pub fn index(&self) -> Option<ast::Expr> {\n+        children(self).nth(1)\n+    }\n+}\n+\n pub enum ArrayExprKind {\n     Repeat { initializer: Option<ast::Expr>, repeat: Option<ast::Expr> },\n     ElementList(AstChildren<ast::Expr>),"}]}