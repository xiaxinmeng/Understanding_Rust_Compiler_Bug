{"sha": "6b0b81b098835615d40028680c46d005cfaa9eab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMGI4MWIwOTg4MzU2MTVkNDAwMjg2ODBjNDZkMDA1Y2ZhYTllYWI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-25T11:05:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-25T11:05:09Z"}, "message": "Rollup merge of #85361 - bjorn3:rustdoc_target_json_path_canonicalize, r=jyn514\n\nUse TargetTriple::from_path in rustdoc\n\nThis fixes the problem reported in https://github.com/Rust-for-Linux/linux/pull/272 where rustdoc requires the absolute path of a target spec json instead of accepting a relative path like rustc.", "tree": {"sha": "427c61d78d9d86f45d43659b16620638b32d8101", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/427c61d78d9d86f45d43659b16620638b32d8101"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b0b81b098835615d40028680c46d005cfaa9eab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgrNnnCRBK7hj4Ov3rIwAA10AIAHRDOU1QXRH9TcvNK1f+aDJE\n5+YjYf3OLVuhbrQK2UhjdBhyDZcr7l83uEP9Ug20BWzL/B0Ah05rDPHLN1vd3iWc\n/HSAGBErpUut/LDgtXQy6Cq2921xpM7FMXSKJEyWAMA3E++SYHovpBqTk3JluFG5\nLZcI2P5H6wRI3W5DRFAfLhiJp3Xx61Xq5K0R6o9N0apEFhOIy25yV9ObiinzUNxf\nrogRzfcxRaOK/TGZJO/E/Ob+J6+aCDw+nH54pyaeuTmKA/9egG0zTxDCVQKqqdTq\nqXAKkenWqRIpooE6fzGks2clXaLDNEjMbA64RTFlsenrvdZJjXJGLtXgOgJtVCY=\n=eDb9\n-----END PGP SIGNATURE-----\n", "payload": "tree 427c61d78d9d86f45d43659b16620638b32d8101\nparent a7890c7952bdc9445eb6c63dc671fa7a1ab0260d\nparent 6afc1f45164b1c7fdbd7c70b1de603ce95c84446\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1621940709 +0200\ncommitter GitHub <noreply@github.com> 1621940709 +0200\n\nRollup merge of #85361 - bjorn3:rustdoc_target_json_path_canonicalize, r=jyn514\n\nUse TargetTriple::from_path in rustdoc\n\nThis fixes the problem reported in https://github.com/Rust-for-Linux/linux/pull/272 where rustdoc requires the absolute path of a target spec json instead of accepting a relative path like rustc.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b0b81b098835615d40028680c46d005cfaa9eab", "html_url": "https://github.com/rust-lang/rust/commit/6b0b81b098835615d40028680c46d005cfaa9eab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b0b81b098835615d40028680c46d005cfaa9eab/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7890c7952bdc9445eb6c63dc671fa7a1ab0260d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7890c7952bdc9445eb6c63dc671fa7a1ab0260d", "html_url": "https://github.com/rust-lang/rust/commit/a7890c7952bdc9445eb6c63dc671fa7a1ab0260d"}, {"sha": "6afc1f45164b1c7fdbd7c70b1de603ce95c84446", "url": "https://api.github.com/repos/rust-lang/rust/commits/6afc1f45164b1c7fdbd7c70b1de603ce95c84446", "html_url": "https://github.com/rust-lang/rust/commit/6afc1f45164b1c7fdbd7c70b1de603ce95c84446"}], "stats": {"total": 73, "additions": 62, "deletions": 11}, "files": [{"sha": "1c6fad2ae8e1cb66e29a3e7237fa1867d1d9fd7c", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6b0b81b098835615d40028680c46d005cfaa9eab/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b0b81b098835615d40028680c46d005cfaa9eab/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=6b0b81b098835615d40028680c46d005cfaa9eab", "patch": "@@ -1507,7 +1507,10 @@ fn collect_print_requests(\n     prints\n }\n \n-fn parse_target_triple(matches: &getopts::Matches, error_format: ErrorOutputType) -> TargetTriple {\n+pub fn parse_target_triple(\n+    matches: &getopts::Matches,\n+    error_format: ErrorOutputType,\n+) -> TargetTriple {\n     match matches.opt_str(\"target\") {\n         Some(target) if target.ends_with(\".json\") => {\n             let path = Path::new(&target);"}, {"sha": "6e1fdf67a652fc762d38221d7ef9e81944b4c6f0", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6b0b81b098835615d40028680c46d005cfaa9eab/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b0b81b098835615d40028680c46d005cfaa9eab/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=6b0b81b098835615d40028680c46d005cfaa9eab", "patch": "@@ -6,8 +6,10 @@ use std::path::PathBuf;\n use std::str::FromStr;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_session::config::{self, parse_crate_types_from_list, parse_externs, CrateType};\n-use rustc_session::config::{get_cmd_lint_options, host_triple, nightly_options};\n+use rustc_session::config::{\n+    self, parse_crate_types_from_list, parse_externs, parse_target_triple, CrateType,\n+};\n+use rustc_session::config::{get_cmd_lint_options, nightly_options};\n use rustc_session::config::{CodegenOptions, DebuggingOptions, ErrorOutputType, Externs};\n use rustc_session::getopts;\n use rustc_session::lint::Level;\n@@ -562,14 +564,7 @@ impl Options {\n             }\n         }\n \n-        let target =\n-            matches.opt_str(\"target\").map_or(TargetTriple::from_triple(host_triple()), |target| {\n-                if target.ends_with(\".json\") {\n-                    TargetTriple::TargetPath(PathBuf::from(target))\n-                } else {\n-                    TargetTriple::TargetTriple(target)\n-                }\n-            });\n+        let target = parse_target_triple(matches, error_format);\n \n         let show_coverage = matches.opt_present(\"show-coverage\");\n "}, {"sha": "6d0bc4186f229206f98a812312ad161730d31860", "filename": "src/test/run-make-fulldeps/rustdoc-target-spec-json-path/Makefile", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6b0b81b098835615d40028680c46d005cfaa9eab/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/6b0b81b098835615d40028680c46d005cfaa9eab/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2FMakefile?ref=6b0b81b098835615d40028680c46d005cfaa9eab", "patch": "@@ -0,0 +1,9 @@\n+include ../tools.mk\n+\n+# Test that rustdoc will properly canonicalize the target spec json path just like rustc\n+\n+OUTPUT_DIR := \"$(TMPDIR)/rustdoc-target-spec-json-path\"\n+\n+all:\n+\t$(RUSTC) --crate-type lib dummy_core.rs --target target.json\n+\t$(RUSTDOC) -o $(OUTPUT_DIR) -L $(TMPDIR) my_crate.rs --target target.json"}, {"sha": "da27b7f3463da5e12803a2d12850aa88fbc21401", "filename": "src/test/run-make-fulldeps/rustdoc-target-spec-json-path/dummy_core.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b0b81b098835615d40028680c46d005cfaa9eab/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Fdummy_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b0b81b098835615d40028680c46d005cfaa9eab/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Fdummy_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Fdummy_core.rs?ref=6b0b81b098835615d40028680c46d005cfaa9eab", "patch": "@@ -0,0 +1,2 @@\n+#![feature(no_core)]\n+#![no_core]"}, {"sha": "12aa0822084751bffed522614f6f13f571f76435", "filename": "src/test/run-make-fulldeps/rustdoc-target-spec-json-path/my_crate.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b0b81b098835615d40028680c46d005cfaa9eab/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Fmy_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b0b81b098835615d40028680c46d005cfaa9eab/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Fmy_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Fmy_crate.rs?ref=6b0b81b098835615d40028680c46d005cfaa9eab", "patch": "@@ -0,0 +1,3 @@\n+#![feature(no_core)]\n+#![no_core]\n+extern crate dummy_core;"}, {"sha": "58e924a9895c85b7687780a562e52ffde7101414", "filename": "src/test/run-make-fulldeps/rustdoc-target-spec-json-path/target.json", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/6b0b81b098835615d40028680c46d005cfaa9eab/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Ftarget.json", "raw_url": "https://github.com/rust-lang/rust/raw/6b0b81b098835615d40028680c46d005cfaa9eab/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Ftarget.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Ftarget.json?ref=6b0b81b098835615d40028680c46d005cfaa9eab", "patch": "@@ -0,0 +1,39 @@\n+{\n+  \"arch\": \"x86_64\",\n+  \"cpu\": \"x86-64\",\n+  \"crt-static-respected\": true,\n+  \"data-layout\": \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\",\n+  \"dynamic-linking\": true,\n+  \"env\": \"gnu\",\n+  \"executables\": true,\n+  \"has-elf-tls\": true,\n+  \"has-rpath\": true,\n+  \"is-builtin\": true,\n+  \"linker-is-gnu\": true,\n+  \"llvm-target\": \"x86_64-unknown-linux-gnu\",\n+  \"max-atomic-width\": 64,\n+  \"os\": \"linux\",\n+  \"position-independent-executables\": true,\n+  \"pre-link-args\": {\n+    \"gcc\": [\n+      \"-m64\"\n+    ]\n+  },\n+  \"relro-level\": \"full\",\n+  \"stack-probes\": {\n+    \"kind\": \"inline-or-call\",\n+    \"min-llvm-version-for-inline\": [\n+      11,\n+      0,\n+      1\n+    ]\n+  },\n+  \"supported-sanitizers\": [\n+    \"address\",\n+    \"leak\",\n+    \"memory\",\n+    \"thread\"\n+  ],\n+  \"target-family\": \"unix\",\n+  \"target-pointer-width\": \"64\"\n+}"}]}