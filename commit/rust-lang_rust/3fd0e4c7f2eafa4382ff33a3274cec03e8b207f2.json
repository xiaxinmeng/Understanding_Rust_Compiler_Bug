{"sha": "3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZDBlNGM3ZjJlYWZhNDM4MmZmMzNhMzI3NGNlYzAzZThiMjA3ZjI=", "commit": {"author": {"name": "Srinivas Reddy Thatiparthy", "email": "thatiparthysreenivas@gmail.com", "date": "2016-05-27T20:55:16Z"}, "committer": {"name": "Srinivas Reddy Thatiparthy", "email": "thatiparthysreenivas@gmail.com", "date": "2016-05-27T20:55:16Z"}, "message": "rustfmt liballoc folder", "tree": {"sha": "b1e49d44350cc71af150d272b6e04159f1e9a5e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1e49d44350cc71af150d272b6e04159f1e9a5e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2", "html_url": "https://github.com/rust-lang/rust/commit/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2/comments", "author": {"login": "srinivasreddy", "id": 198396, "node_id": "MDQ6VXNlcjE5ODM5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/198396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinivasreddy", "html_url": "https://github.com/srinivasreddy", "followers_url": "https://api.github.com/users/srinivasreddy/followers", "following_url": "https://api.github.com/users/srinivasreddy/following{/other_user}", "gists_url": "https://api.github.com/users/srinivasreddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinivasreddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinivasreddy/subscriptions", "organizations_url": "https://api.github.com/users/srinivasreddy/orgs", "repos_url": "https://api.github.com/users/srinivasreddy/repos", "events_url": "https://api.github.com/users/srinivasreddy/events{/privacy}", "received_events_url": "https://api.github.com/users/srinivasreddy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "srinivasreddy", "id": 198396, "node_id": "MDQ6VXNlcjE5ODM5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/198396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinivasreddy", "html_url": "https://github.com/srinivasreddy", "followers_url": "https://api.github.com/users/srinivasreddy/followers", "following_url": "https://api.github.com/users/srinivasreddy/following{/other_user}", "gists_url": "https://api.github.com/users/srinivasreddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinivasreddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinivasreddy/subscriptions", "organizations_url": "https://api.github.com/users/srinivasreddy/orgs", "repos_url": "https://api.github.com/users/srinivasreddy/repos", "events_url": "https://api.github.com/users/srinivasreddy/events{/privacy}", "received_events_url": "https://api.github.com/users/srinivasreddy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab7c35fa0fcd725cdc207487b760d85fd07ecdd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab7c35fa0fcd725cdc207487b760d85fd07ecdd7", "html_url": "https://github.com/rust-lang/rust/commit/ab7c35fa0fcd725cdc207487b760d85fd07ecdd7"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "729d9218a2960f85c8fd5a3c4d20832b9df9127e", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2", "patch": "@@ -72,7 +72,7 @@\n use boxed::Box;\n \n use core::sync::atomic;\n-use core::sync::atomic::Ordering::{Relaxed, Release, Acquire, SeqCst};\n+use core::sync::atomic::Ordering::{Acquire, Relaxed, Release, SeqCst};\n use core::borrow;\n use core::fmt;\n use core::cmp::Ordering;\n@@ -85,7 +85,7 @@ use core::ops::CoerceUnsized;\n use core::ptr::{self, Shared};\n use core::marker::Unsize;\n use core::hash::{Hash, Hasher};\n-use core::{usize, isize};\n+use core::{isize, usize};\n use core::convert::From;\n use heap::deallocate;\n \n@@ -608,11 +608,13 @@ impl<T> Weak<T> {\n     #[stable(feature = \"downgraded_weak\", since = \"1.10.0\")]\n     pub fn new() -> Weak<T> {\n         unsafe {\n-            Weak { ptr: Shared::new(Box::into_raw(box ArcInner {\n-                strong: atomic::AtomicUsize::new(0),\n-                weak: atomic::AtomicUsize::new(1),\n-                data: uninitialized(),\n-            }))}\n+            Weak {\n+                ptr: Shared::new(Box::into_raw(box ArcInner {\n+                    strong: atomic::AtomicUsize::new(0),\n+                    weak: atomic::AtomicUsize::new(1),\n+                    data: uninitialized(),\n+                })),\n+            }\n         }\n     }\n }\n@@ -655,7 +657,9 @@ impl<T: ?Sized> Weak<T> {\n \n             // See comments in `Arc::clone` for why we do this (for `mem::forget`).\n             if n > MAX_REFCOUNT {\n-                unsafe { abort(); }\n+                unsafe {\n+                    abort();\n+                }\n             }\n \n             // Relaxed is valid for the same reason it is on Arc's Clone impl\n@@ -946,7 +950,7 @@ mod tests {\n     use std::mem::drop;\n     use std::ops::Drop;\n     use std::option::Option;\n-    use std::option::Option::{Some, None};\n+    use std::option::Option::{None, Some};\n     use std::sync::atomic;\n     use std::sync::atomic::Ordering::{Acquire, SeqCst};\n     use std::thread;"}, {"sha": "51523ca8dc601126d8dafdb2a50d52cd103b962f", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2", "patch": "@@ -64,7 +64,7 @@ use core::hash::{self, Hash};\n use core::marker::{self, Unsize};\n use core::mem;\n use core::ops::{CoerceUnsized, Deref, DerefMut};\n-use core::ops::{Placer, Boxed, Place, InPlace, BoxPlace};\n+use core::ops::{BoxPlace, Boxed, InPlace, Place, Placer};\n use core::ptr::{self, Unique};\n use core::raw::TraitObject;\n use core::convert::From;\n@@ -535,7 +535,8 @@ pub trait FnBox<A> {\n \n #[unstable(feature = \"fnbox\",\n            reason = \"will be deprecated if and when Box<FnOnce> becomes usable\", issue = \"28796\")]\n-impl<A, F> FnBox<A> for F where F: FnOnce<A>\n+impl<A, F> FnBox<A> for F\n+    where F: FnOnce<A>\n {\n     type Output = F::Output;\n "}, {"sha": "8d68ce3c1f6e2ebfa406c81a15cb50c478df4139", "filename": "src/liballoc/boxed_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2/src%2Fliballoc%2Fboxed_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2/src%2Fliballoc%2Fboxed_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed_test.rs?ref=3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2", "patch": "@@ -12,7 +12,7 @@\n \n use core::any::Any;\n use core::ops::Deref;\n-use core::result::Result::{Ok, Err};\n+use core::result::Result::{Err, Ok};\n use core::clone::Clone;\n \n use std::boxed::Box;"}, {"sha": "bfed8a8e83a5a4dc25f6211c7bdb82cd4dd73691", "filename": "src/liballoc/heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2/src%2Fliballoc%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2/src%2Fliballoc%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fheap.rs?ref=3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2", "patch": "@@ -17,7 +17,7 @@\n \n use core::{isize, usize};\n #[cfg(not(test))]\n-use core::intrinsics::{size_of, min_align_of};\n+use core::intrinsics::{min_align_of, size_of};\n \n #[allow(improper_ctypes)]\n extern \"C\" {"}, {"sha": "cf4fb459bc1044bf490f291a37bbfa0bdb6ef3b9", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=3fd0e4c7f2eafa4382ff33a3274cec03e8b207f2", "patch": "@@ -159,11 +159,11 @@ use core::borrow;\n use core::cell::Cell;\n use core::cmp::Ordering;\n use core::fmt;\n-use core::hash::{Hasher, Hash};\n-use core::intrinsics::{assume, abort};\n+use core::hash::{Hash, Hasher};\n+use core::intrinsics::{abort, assume};\n use core::marker;\n use core::marker::Unsize;\n-use core::mem::{self, align_of_val, size_of_val, forget, uninitialized};\n+use core::mem::{self, align_of_val, forget, size_of_val, uninitialized};\n use core::ops::Deref;\n use core::ops::CoerceUnsized;\n use core::ptr::{self, Shared};\n@@ -935,7 +935,7 @@ mod tests {\n     use std::boxed::Box;\n     use std::cell::RefCell;\n     use std::option::Option;\n-    use std::option::Option::{Some, None};\n+    use std::option::Option::{None, Some};\n     use std::result::Result::{Err, Ok};\n     use std::mem::drop;\n     use std::clone::Clone;"}]}