{"sha": "0d17de89bac0aed983298f0e6f6b93eab2c5b833", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMTdkZTg5YmFjMGFlZDk4MzI5OGYwZTZmNmI5M2VhYjJjNWI4MzM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-08T13:45:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-08T13:45:32Z"}, "message": "Rollup merge of #65176 - nnethercote:rm-query-macros, r=michaelwoerister\n\nRemove query-related macros\n\nThe query system has a few macros that only have one or two call sites, and I find they hurt readability. This PR removes them.\n\nr? @michaelwoerister", "tree": {"sha": "b1545897f2e5b726c83ff8ee45eb9a8941df542f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1545897f2e5b726c83ff8ee45eb9a8941df542f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d17de89bac0aed983298f0e6f6b93eab2c5b833", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdnJL8CRBK7hj4Ov3rIwAAdHIIAFmn96wgEql3sX9D/0Y9GFgq\nYGgHtaEHZu5EUOjJdpnycR6YlovKjO2FAURdE0PUGfnQSnvkXSgpagNp82nD+eiB\nGqKclLwhV8B+QT9QBnhEEcTN08P/HXTjfEwHsmouIzJ9mJA5NKMtVp4zmiY1tvt+\nYjZGNnjpMp25morjTcJW3YEO8NCRRuMQbaIOHjPgfauI3jKaJnp6OQyVNy/0uFyQ\n+rEpr0fgvvlbfVDapnh0TPlVeRI225fAVMvWxRxM5RCV99bbFCD6MGoLqL6Y9Mfn\nhVtt89DVgBxc9icgEKIusZA7+xPcJfYk8LU/4jWb6m58KsxMloCVw27mjv1Nu4g=\n=qDJ1\n-----END PGP SIGNATURE-----\n", "payload": "tree b1545897f2e5b726c83ff8ee45eb9a8941df542f\nparent f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111\nparent 9267d9fe5b1f99f98da83a90e84de706cf8cc150\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1570542332 +0200\ncommitter GitHub <noreply@github.com> 1570542332 +0200\n\nRollup merge of #65176 - nnethercote:rm-query-macros, r=michaelwoerister\n\nRemove query-related macros\n\nThe query system has a few macros that only have one or two call sites, and I find they hurt readability. This PR removes them.\n\nr? @michaelwoerister\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d17de89bac0aed983298f0e6f6b93eab2c5b833", "html_url": "https://github.com/rust-lang/rust/commit/0d17de89bac0aed983298f0e6f6b93eab2c5b833", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d17de89bac0aed983298f0e6f6b93eab2c5b833/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111", "html_url": "https://github.com/rust-lang/rust/commit/f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111"}, {"sha": "9267d9fe5b1f99f98da83a90e84de706cf8cc150", "url": "https://api.github.com/repos/rust-lang/rust/commits/9267d9fe5b1f99f98da83a90e84de706cf8cc150", "html_url": "https://github.com/rust-lang/rust/commit/9267d9fe5b1f99f98da83a90e84de706cf8cc150"}], "stats": {"total": 51, "additions": 18, "deletions": 33}, "files": [{"sha": "58133539d9ac359e846b7d7a273ff9d1a0bb9fc1", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 13, "deletions": 32, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/0d17de89bac0aed983298f0e6f6b93eab2c5b833/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d17de89bac0aed983298f0e6f6b93eab2c5b833/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=0d17de89bac0aed983298f0e6f6b93eab2c5b833", "patch": "@@ -1183,37 +1183,6 @@ pub fn force_from_dep_node(tcx: TyCtxt<'_>, dep_node: &DepNode) -> bool {\n         return false\n     }\n \n-    macro_rules! def_id {\n-        () => {\n-            if let Some(def_id) = dep_node.extract_def_id(tcx) {\n-                def_id\n-            } else {\n-                // Return from the whole function.\n-                return false\n-            }\n-        }\n-    };\n-\n-    macro_rules! krate {\n-        () => { (def_id!()).krate }\n-    };\n-\n-    macro_rules! force_ex {\n-        ($tcx:expr, $query:ident, $key:expr) => {\n-            {\n-                $tcx.force_query::<crate::ty::query::queries::$query<'_>>(\n-                    $key,\n-                    DUMMY_SP,\n-                    *dep_node\n-                );\n-            }\n-        }\n-    };\n-\n-    macro_rules! force {\n-        ($query:ident, $key:expr) => { force_ex!(tcx, $query, $key) }\n-    };\n-\n     rustc_dep_node_force!([dep_node, tcx]\n         // These are inputs that are expected to be pre-allocated and that\n         // should therefore always be red or green already.\n@@ -1232,7 +1201,19 @@ pub fn force_from_dep_node(tcx: TyCtxt<'_>, dep_node: &DepNode) -> bool {\n             bug!(\"force_from_dep_node: encountered {:?}\", dep_node)\n         }\n \n-        DepKind::Analysis => { force!(analysis, krate!()); }\n+        DepKind::Analysis => {\n+            let def_id = if let Some(def_id) = dep_node.extract_def_id(tcx) {\n+                def_id\n+            } else {\n+                // Return from the whole function.\n+                return false\n+            };\n+            tcx.force_query::<crate::ty::query::queries::analysis<'_>>(\n+                def_id.krate,\n+                DUMMY_SP,\n+                *dep_node\n+            );\n+        }\n     );\n \n     true"}, {"sha": "139e1b554cf90a2597a6ec606404b8034b3ceba0", "filename": "src/librustc_macros/src/query.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0d17de89bac0aed983298f0e6f6b93eab2c5b833/src%2Flibrustc_macros%2Fsrc%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d17de89bac0aed983298f0e6f6b93eab2c5b833/src%2Flibrustc_macros%2Fsrc%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fquery.rs?ref=0d17de89bac0aed983298f0e6f6b93eab2c5b833", "patch": "@@ -495,7 +495,11 @@ pub fn rustc_queries(input: TokenStream) -> TokenStream {\n                 dep_node_force_stream.extend(quote! {\n                     DepKind::#name => {\n                         if let Some(key) = RecoverKey::recover($tcx, $dep_node) {\n-                            force_ex!($tcx, #name, key);\n+                            $tcx.force_query::<crate::ty::query::queries::#name<'_>>(\n+                                key,\n+                                DUMMY_SP,\n+                                *$dep_node\n+                            );\n                         } else {\n                             return false;\n                         }"}]}