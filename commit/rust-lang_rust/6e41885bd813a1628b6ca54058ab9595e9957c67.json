{"sha": "6e41885bd813a1628b6ca54058ab9595e9957c67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNDE4ODViZDgxM2ExNjI4YjZjYTU0MDU4YWI5NTk1ZTk5NTdjNjc=", "commit": {"author": {"name": "Timon Van Overveldt", "email": "timonvo@gmail.com", "date": "2016-03-19T21:53:40Z"}, "committer": {"name": "Timon Van Overveldt", "email": "timonvo@gmail.com", "date": "2016-04-05T04:15:37Z"}, "message": "Fix backtraces on ARM EHABI.\n\nBefore this patch, our rust_eh_personality_catch routine would cut\nbacktracing short at the __rust_try function, due to it not handling\nthe _US_FORCE_UNWIND bit properly, which is passed by libunwind\nimplementations on ARM EHABI.\n\nExamples of where the _US_FORCE_UNWIND bit is passed to the PR:\n- GCC's libunwind: https://github.com/gcc-mirror/gcc/blob/f1717362de1e56fe1ffab540289d7d0c6ed48b20/libgcc/unwind-arm-common.inc#L590\n- LLVM's libunwind: https://github.com/llvm-mirror/libunwind/blob/61278584b5c84c422ff5da10f46c3235c54636c9/src/UnwindLevel1-gcc-ext.c#L153", "tree": {"sha": "ec3e2aa2a0064b5c4a149b22f12805269a0fdedf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec3e2aa2a0064b5c4a149b22f12805269a0fdedf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e41885bd813a1628b6ca54058ab9595e9957c67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e41885bd813a1628b6ca54058ab9595e9957c67", "html_url": "https://github.com/rust-lang/rust/commit/6e41885bd813a1628b6ca54058ab9595e9957c67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e41885bd813a1628b6ca54058ab9595e9957c67/comments", "author": {"login": "timonvo", "id": 364229, "node_id": "MDQ6VXNlcjM2NDIyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/364229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timonvo", "html_url": "https://github.com/timonvo", "followers_url": "https://api.github.com/users/timonvo/followers", "following_url": "https://api.github.com/users/timonvo/following{/other_user}", "gists_url": "https://api.github.com/users/timonvo/gists{/gist_id}", "starred_url": "https://api.github.com/users/timonvo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timonvo/subscriptions", "organizations_url": "https://api.github.com/users/timonvo/orgs", "repos_url": "https://api.github.com/users/timonvo/repos", "events_url": "https://api.github.com/users/timonvo/events{/privacy}", "received_events_url": "https://api.github.com/users/timonvo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "timonvo", "id": 364229, "node_id": "MDQ6VXNlcjM2NDIyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/364229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timonvo", "html_url": "https://github.com/timonvo", "followers_url": "https://api.github.com/users/timonvo/followers", "following_url": "https://api.github.com/users/timonvo/following{/other_user}", "gists_url": "https://api.github.com/users/timonvo/gists{/gist_id}", "starred_url": "https://api.github.com/users/timonvo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timonvo/subscriptions", "organizations_url": "https://api.github.com/users/timonvo/orgs", "repos_url": "https://api.github.com/users/timonvo/repos", "events_url": "https://api.github.com/users/timonvo/events{/privacy}", "received_events_url": "https://api.github.com/users/timonvo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "600dc3552ffcdff014cc770e98a67b674496d10a", "url": "https://api.github.com/repos/rust-lang/rust/commits/600dc3552ffcdff014cc770e98a67b674496d10a", "html_url": "https://github.com/rust-lang/rust/commit/600dc3552ffcdff014cc770e98a67b674496d10a"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "da7a340af351525ac6a766722b9d921b7295d66d", "filename": "src/libstd/sys/common/unwind/gcc.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6e41885bd813a1628b6ca54058ab9595e9957c67/src%2Flibstd%2Fsys%2Fcommon%2Funwind%2Fgcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e41885bd813a1628b6ca54058ab9595e9957c67/src%2Flibstd%2Fsys%2Fcommon%2Funwind%2Fgcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Funwind%2Fgcc.rs?ref=6e41885bd813a1628b6ca54058ab9595e9957c67", "patch": "@@ -224,8 +224,13 @@ pub mod eabi {\n         context: *mut uw::_Unwind_Context\n     ) -> uw::_Unwind_Reason_Code\n     {\n+        // Backtraces on ARM will call the personality routine with\n+        // state == _US_VIRTUAL_UNWIND_FRAME | _US_FORCE_UNWIND. In those cases\n+        // we want to continue unwinding the stack, otherwise all our backtraces\n+        // would end at __rust_try.\n         if (state as c_int & uw::_US_ACTION_MASK as c_int)\n-                           == uw::_US_VIRTUAL_UNWIND_FRAME as c_int { // search phase\n+                           == uw::_US_VIRTUAL_UNWIND_FRAME as c_int\n+               && (state as c_int & uw::_US_FORCE_UNWIND as c_int) == 0 { // search phase\n             uw::_URC_HANDLER_FOUND // catch!\n         }\n         else { // cleanup phase"}]}