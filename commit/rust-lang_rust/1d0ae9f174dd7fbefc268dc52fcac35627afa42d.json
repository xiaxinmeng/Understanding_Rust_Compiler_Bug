{"sha": "1d0ae9f174dd7fbefc268dc52fcac35627afa42d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMGFlOWYxNzRkZDdmYmVmYzI2OGRjNTJmY2FjMzU2MjdhZmE0MmQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-18T22:32:34Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-19T01:57:06Z"}, "message": "Generate shortcut links", "tree": {"sha": "460edc82ccc8d72b8f5d68e14b2c453ddd608992", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/460edc82ccc8d72b8f5d68e14b2c453ddd608992"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d0ae9f174dd7fbefc268dc52fcac35627afa42d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d0ae9f174dd7fbefc268dc52fcac35627afa42d", "html_url": "https://github.com/rust-lang/rust/commit/1d0ae9f174dd7fbefc268dc52fcac35627afa42d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d0ae9f174dd7fbefc268dc52fcac35627afa42d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f60aeec5d564cf3ca0628db55abb8c62276e102f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f60aeec5d564cf3ca0628db55abb8c62276e102f", "html_url": "https://github.com/rust-lang/rust/commit/f60aeec5d564cf3ca0628db55abb8c62276e102f"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "66fe2280aef7ef8cb14d0954f8f1fb74686b3284", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1d0ae9f174dd7fbefc268dc52fcac35627afa42d/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d0ae9f174dd7fbefc268dc52fcac35627afa42d/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=1d0ae9f174dd7fbefc268dc52fcac35627afa42d", "patch": "@@ -591,7 +591,15 @@ impl<'a> fmt::Display for Markdown<'a> {\n         opts.insert(OPTION_ENABLE_TABLES);\n         opts.insert(OPTION_ENABLE_FOOTNOTES);\n \n-        let p = Parser::new_ext(md, opts);\n+        let replacer = |_: &str, s: &str| {\n+            if let Some(&(_, ref replace)) = links.into_iter().find(|link| &*link.0 == s) {\n+                Some((replace.clone(), s.to_owned()))\n+            } else {\n+                None\n+            }\n+        };\n+\n+        let p = Parser::new_with_broken_link_callback(md, opts, Some(&replacer));\n \n         let mut s = String::with_capacity(md.len() * 3 / 2);\n \n@@ -662,7 +670,16 @@ impl<'a> fmt::Display for MarkdownSummaryLine<'a> {\n         // This is actually common enough to special-case\n         if md.is_empty() { return Ok(()) }\n \n-        let p = Parser::new(md);\n+        let replacer = |_: &str, s: &str| {\n+            if let Some(&(_, ref replace)) = links.into_iter().find(|link| &*link.0 == s) {\n+                Some((replace.clone(), s.to_owned()))\n+            } else {\n+                None\n+            }\n+        };\n+\n+        let p = Parser::new_with_broken_link_callback(md, Options::empty(),\n+                                                      Some(&replacer));\n \n         let mut s = String::new();\n "}]}