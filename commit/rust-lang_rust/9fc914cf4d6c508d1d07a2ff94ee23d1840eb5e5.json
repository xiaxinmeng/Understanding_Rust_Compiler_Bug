{"sha": "9fc914cf4d6c508d1d07a2ff94ee23d1840eb5e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmYzkxNGNmNGQ2YzUwOGQxZDA3YTJmZjk0ZWUyM2QxODQwZWI1ZTU=", "commit": {"author": {"name": "Kampfkarren", "email": "boynedmaster@gmail.com", "date": "2018-12-13T17:37:00Z"}, "committer": {"name": "Kampfkarren", "email": "boynedmaster@gmail.com", "date": "2018-12-13T17:37:00Z"}, "message": "Remove DUMMY_SP", "tree": {"sha": "6278657adc1594b6d775e189bc49af6e64a5e7f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6278657adc1594b6d775e189bc49af6e64a5e7f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fc914cf4d6c508d1d07a2ff94ee23d1840eb5e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fc914cf4d6c508d1d07a2ff94ee23d1840eb5e5", "html_url": "https://github.com/rust-lang/rust/commit/9fc914cf4d6c508d1d07a2ff94ee23d1840eb5e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fc914cf4d6c508d1d07a2ff94ee23d1840eb5e5/comments", "author": {"login": "Kampfkarren", "id": 3190756, "node_id": "MDQ6VXNlcjMxOTA3NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3190756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kampfkarren", "html_url": "https://github.com/Kampfkarren", "followers_url": "https://api.github.com/users/Kampfkarren/followers", "following_url": "https://api.github.com/users/Kampfkarren/following{/other_user}", "gists_url": "https://api.github.com/users/Kampfkarren/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kampfkarren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kampfkarren/subscriptions", "organizations_url": "https://api.github.com/users/Kampfkarren/orgs", "repos_url": "https://api.github.com/users/Kampfkarren/repos", "events_url": "https://api.github.com/users/Kampfkarren/events{/privacy}", "received_events_url": "https://api.github.com/users/Kampfkarren/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kampfkarren", "id": 3190756, "node_id": "MDQ6VXNlcjMxOTA3NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3190756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kampfkarren", "html_url": "https://github.com/Kampfkarren", "followers_url": "https://api.github.com/users/Kampfkarren/followers", "following_url": "https://api.github.com/users/Kampfkarren/following{/other_user}", "gists_url": "https://api.github.com/users/Kampfkarren/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kampfkarren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kampfkarren/subscriptions", "organizations_url": "https://api.github.com/users/Kampfkarren/orgs", "repos_url": "https://api.github.com/users/Kampfkarren/repos", "events_url": "https://api.github.com/users/Kampfkarren/events{/privacy}", "received_events_url": "https://api.github.com/users/Kampfkarren/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "616395f40b54d4340348f6b811d5fe2497761f30", "url": "https://api.github.com/repos/rust-lang/rust/commits/616395f40b54d4340348f6b811d5fe2497761f30", "html_url": "https://github.com/rust-lang/rust/commit/616395f40b54d4340348f6b811d5fe2497761f30"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fdaa21f6c55efe30f6dad48069e835a44505b8bc", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9fc914cf4d6c508d1d07a2ff94ee23d1840eb5e5/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fc914cf4d6c508d1d07a2ff94ee23d1840eb5e5/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=9fc914cf4d6c508d1d07a2ff94ee23d1840eb5e5", "patch": "@@ -24,7 +24,7 @@ use crate::rustc_target::spec::abi::Abi;\n use crate::rustc_typeck::hir_ty_to_ty;\n use crate::syntax::ast::{FloatTy, IntTy, UintTy};\n use crate::syntax::errors::DiagnosticBuilder;\n-use crate::syntax::source_map::{DUMMY_SP, Span};\n+use crate::syntax::source_map::Span;\n use crate::utils::paths;\n use crate::utils::{\n     clip, comparisons, differing_macro_contexts, higher, in_constant, in_macro, int_bits, last_path_segment,\n@@ -288,7 +288,7 @@ fn check_ty(cx: &LateContext<'_, '_>, ast_ty: &hir::Ty, is_local: bool) {\n                         let def = cx.tables.qpath_def(ty_qpath, ty.hir_id);\n                         if let Some(def_id) = opt_def_id(def);\n                         let boxed_type = cx.tcx.type_of(def_id);\n-                        if boxed_type.is_sized(cx.tcx.at(DUMMY_SP), cx.param_env);\n+                        if boxed_type.is_sized(cx.tcx.at(ty.span), cx.param_env);\n                         then {\n                             span_lint_and_sugg(\n                                 cx,"}]}