{"sha": "60dfe8ceed39f7c89c1153655e17a5c6c0f56155", "node_id": "C_kwDOAAsO6NoAKDYwZGZlOGNlZWQzOWY3Yzg5YzExNTM2NTVlMTdhNWM2YzBmNTYxNTU", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-21T15:57:16Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-21T15:57:16Z"}, "message": "Replace a few String instances with SmolStr in completions", "tree": {"sha": "37515d03a86df7ca00f1cce669574d55c86fbc17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37515d03a86df7ca00f1cce669574d55c86fbc17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60dfe8ceed39f7c89c1153655e17a5c6c0f56155", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60dfe8ceed39f7c89c1153655e17a5c6c0f56155", "html_url": "https://github.com/rust-lang/rust/commit/60dfe8ceed39f7c89c1153655e17a5c6c0f56155", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60dfe8ceed39f7c89c1153655e17a5c6c0f56155/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "html_url": "https://github.com/rust-lang/rust/commit/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97"}], "stats": {"total": 58, "additions": 29, "deletions": 29}, "files": [{"sha": "653515fec21d67cc2d1bd06459baa392ae5ab785", "filename": "crates/ide_completion/src/render/builder_ext.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60dfe8ceed39f7c89c1153655e17a5c6c0f56155/crates%2Fide_completion%2Fsrc%2Frender%2Fbuilder_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60dfe8ceed39f7c89c1153655e17a5c6c0f56155/crates%2Fide_completion%2Fsrc%2Frender%2Fbuilder_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fbuilder_ext.rs?ref=60dfe8ceed39f7c89c1153655e17a5c6c0f56155", "patch": "@@ -1,6 +1,7 @@\n //! Extensions for `Builder` structure required for item rendering.\n \n use itertools::Itertools;\n+use syntax::SmolStr;\n \n use crate::{context::PathKind, item::Builder, patterns::ImmediateLocation, CompletionContext};\n \n@@ -56,7 +57,7 @@ impl Builder {\n     pub(super) fn add_call_parens(\n         &mut self,\n         ctx: &CompletionContext,\n-        name: String,\n+        name: SmolStr,\n         params: Params,\n     ) -> &mut Builder {\n         if !self.should_add_parens(ctx) {"}, {"sha": "4c276a9afed0e7e9a4417ae985b16c9945243afa", "filename": "crates/ide_completion/src/render/enum_variant.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/60dfe8ceed39f7c89c1153655e17a5c6c0f56155/crates%2Fide_completion%2Fsrc%2Frender%2Fenum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60dfe8ceed39f7c89c1153655e17a5c6c0f56155/crates%2Fide_completion%2Fsrc%2Frender%2Fenum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fenum_variant.rs?ref=60dfe8ceed39f7c89c1153655e17a5c6c0f56155", "patch": "@@ -5,6 +5,7 @@ use std::iter;\n use hir::{db::HirDatabase, HasAttrs, HirDisplay, StructKind};\n use ide_db::SymbolKind;\n use itertools::Itertools;\n+use syntax::SmolStr;\n \n use crate::{\n     item::{CompletionItem, ImportEdit},\n@@ -48,10 +49,10 @@ fn render(\n             false,\n         ),\n     };\n+    let qualified_name = qualified_name.to_string();\n+    let short_qualified_name: SmolStr = short_qualified_name.to_string().into();\n \n-    // FIXME: ModPath::to_smol_str()?\n-    let mut item =\n-        CompletionItem::new(SymbolKind::Variant, ctx.source_range(), qualified_name.to_string());\n+    let mut item = CompletionItem::new(SymbolKind::Variant, ctx.source_range(), qualified_name);\n     item.set_documentation(variant.docs(db))\n         .set_deprecated(ctx.is_deprecated(variant))\n         .detail(detail(db, variant, variant_kind));\n@@ -60,8 +61,6 @@ fn render(\n         item.add_import(import_to_add);\n     }\n \n-    // FIXME: ModPath::to_smol_str()?\n-    let short_qualified_name = short_qualified_name.to_string();\n     if variant_kind == hir::StructKind::Tuple {\n         cov_mark::hit!(inserts_parens_for_tuple_enums);\n         let params = Params::Anonymous(variant.fields(db).len());"}, {"sha": "bd46e1fefbb0eed3320cb7eb4e818731771bd406", "filename": "crates/ide_completion/src/render/function.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/60dfe8ceed39f7c89c1153655e17a5c6c0f56155/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60dfe8ceed39f7c89c1153655e17a5c6c0f56155/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs?ref=60dfe8ceed39f7c89c1153655e17a5c6c0f56155", "patch": "@@ -52,10 +52,9 @@ fn render(\n     let name = local_name.unwrap_or_else(|| func.name(db));\n     let params = params(completion, func, &func_type);\n \n-    // FIXME: SmolStr?\n     let call = match &func_type {\n-        FuncType::Method(Some(receiver)) => format!(\"{}.{}\", receiver, &name),\n-        _ => name.to_string(),\n+        FuncType::Method(Some(receiver)) => format!(\"{}.{}\", receiver, &name).into(),\n+        _ => name.to_smol_str(),\n     };\n     let mut item = CompletionItem::new(\n         if func.self_param(db).is_some() {\n@@ -66,23 +65,6 @@ fn render(\n         ctx.source_range(),\n         call.clone(),\n     );\n-    item.set_documentation(ctx.docs(func))\n-        .set_deprecated(ctx.is_deprecated(func) || ctx.is_deprecated_assoc_item(func))\n-        .detail(detail(db, func))\n-        .add_call_parens(completion, call.clone(), params);\n-\n-    if import_to_add.is_none() {\n-        if let Some(actm) = func.as_assoc_item(db) {\n-            if let Some(trt) = actm.containing_trait_or_trait_impl(db) {\n-                item.trait_name(trt.name(db).to_smol_str());\n-            }\n-        }\n-    }\n-\n-    if let Some(import_to_add) = import_to_add {\n-        item.add_import(import_to_add);\n-    }\n-    item.lookup_by(name.to_smol_str());\n \n     let ret_type = func.ret_type(db);\n     item.set_relevance(CompletionRelevance {\n@@ -100,6 +82,24 @@ fn render(\n         }\n     }\n \n+    item.set_documentation(ctx.docs(func))\n+        .set_deprecated(ctx.is_deprecated(func) || ctx.is_deprecated_assoc_item(func))\n+        .detail(detail(db, func))\n+        .add_call_parens(completion, call, params);\n+\n+    if import_to_add.is_none() {\n+        if let Some(actm) = func.as_assoc_item(db) {\n+            if let Some(trt) = actm.containing_trait_or_trait_impl(db) {\n+                item.trait_name(trt.name(db).to_smol_str());\n+            }\n+        }\n+    }\n+\n+    if let Some(import_to_add) = import_to_add {\n+        item.add_import(import_to_add);\n+    }\n+    item.lookup_by(name.to_smol_str());\n+\n     item.build()\n }\n "}, {"sha": "5bfb4349edcecae0d8453c671bc10d3c03a65045", "filename": "crates/ide_completion/src/render/type_alias.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/60dfe8ceed39f7c89c1153655e17a5c6c0f56155/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60dfe8ceed39f7c89c1153655e17a5c6c0f56155/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs?ref=60dfe8ceed39f7c89c1153655e17a5c6c0f56155", "patch": "@@ -2,6 +2,7 @@\n \n use hir::{AsAssocItem, HirDisplay};\n use ide_db::SymbolKind;\n+use syntax::SmolStr;\n \n use crate::{item::CompletionItem, render::RenderContext};\n \n@@ -28,11 +29,10 @@ fn render(\n ) -> Option<CompletionItem> {\n     let db = ctx.db();\n \n-    // FIXME: smolstr?\n     let name = if with_eq {\n-        format!(\"{} = \", type_alias.name(db))\n+        SmolStr::from_iter([&*type_alias.name(db).to_smol_str(), \" = \"])\n     } else {\n-        type_alias.name(db).to_string()\n+        type_alias.name(db).to_smol_str()\n     };\n     let detail = type_alias.display(db).to_string();\n "}]}