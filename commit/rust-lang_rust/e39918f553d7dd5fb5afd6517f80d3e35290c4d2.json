{"sha": "e39918f553d7dd5fb5afd6517f80d3e35290c4d2", "node_id": "C_kwDOAAsO6NoAKGUzOTkxOGY1NTNkN2RkNWZiNWFmZDY1MTdmODBkM2UzNTI5MGM0ZDI", "commit": {"author": {"name": "fprasx", "email": "felix725@gmail.com", "date": "2022-08-08T15:05:18Z"}, "committer": {"name": "fprasx", "email": "felix725@gmail.com", "date": "2022-08-08T15:05:18Z"}, "message": "Corrected order of printing op and `=`", "tree": {"sha": "8ed05e37318c6ca264b3b17e2ee010941776d74d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ed05e37318c6ca264b3b17e2ee010941776d74d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e39918f553d7dd5fb5afd6517f80d3e35290c4d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e39918f553d7dd5fb5afd6517f80d3e35290c4d2", "html_url": "https://github.com/rust-lang/rust/commit/e39918f553d7dd5fb5afd6517f80d3e35290c4d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e39918f553d7dd5fb5afd6517f80d3e35290c4d2/comments", "author": {"login": "fprasx", "id": 91577249, "node_id": "U_kgDOBXVboQ", "avatar_url": "https://avatars.githubusercontent.com/u/91577249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fprasx", "html_url": "https://github.com/fprasx", "followers_url": "https://api.github.com/users/fprasx/followers", "following_url": "https://api.github.com/users/fprasx/following{/other_user}", "gists_url": "https://api.github.com/users/fprasx/gists{/gist_id}", "starred_url": "https://api.github.com/users/fprasx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fprasx/subscriptions", "organizations_url": "https://api.github.com/users/fprasx/orgs", "repos_url": "https://api.github.com/users/fprasx/repos", "events_url": "https://api.github.com/users/fprasx/events{/privacy}", "received_events_url": "https://api.github.com/users/fprasx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fprasx", "id": 91577249, "node_id": "U_kgDOBXVboQ", "avatar_url": "https://avatars.githubusercontent.com/u/91577249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fprasx", "html_url": "https://github.com/fprasx", "followers_url": "https://api.github.com/users/fprasx/followers", "following_url": "https://api.github.com/users/fprasx/following{/other_user}", "gists_url": "https://api.github.com/users/fprasx/gists{/gist_id}", "starred_url": "https://api.github.com/users/fprasx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fprasx/subscriptions", "organizations_url": "https://api.github.com/users/fprasx/orgs", "repos_url": "https://api.github.com/users/fprasx/repos", "events_url": "https://api.github.com/users/fprasx/events{/privacy}", "received_events_url": "https://api.github.com/users/fprasx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49700e46366bfe7958204877b4edcf74987ec508", "url": "https://api.github.com/repos/rust-lang/rust/commits/49700e46366bfe7958204877b4edcf74987ec508", "html_url": "https://github.com/rust-lang/rust/commit/49700e46366bfe7958204877b4edcf74987ec508"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8f7b3fb600879eeaa35dad0b6be2fc1ef67b3206", "filename": "crates/syntax/src/ast/operators.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e39918f553d7dd5fb5afd6517f80d3e35290c4d2/crates%2Fsyntax%2Fsrc%2Fast%2Foperators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e39918f553d7dd5fb5afd6517f80d3e35290c4d2/crates%2Fsyntax%2Fsrc%2Fast%2Foperators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Foperators.rs?ref=e39918f553d7dd5fb5afd6517f80d3e35290c4d2", "patch": "@@ -111,10 +111,10 @@ impl fmt::Display for BinaryOp {\n             BinaryOp::ArithOp(op) => fmt::Display::fmt(op, f),\n             BinaryOp::CmpOp(op) => fmt::Display::fmt(op, f),\n             BinaryOp::Assignment { op } => {\n-                f.write_str(\"=\")?;\n                 if let Some(op) = op {\n                     fmt::Display::fmt(op, f)?;\n                 }\n+                f.write_str(\"=\")?;\n                 Ok(())\n             }\n         }"}]}