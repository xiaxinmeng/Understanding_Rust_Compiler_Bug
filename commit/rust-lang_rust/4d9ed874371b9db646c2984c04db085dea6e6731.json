{"sha": "4d9ed874371b9db646c2984c04db085dea6e6731", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkOWVkODc0MzcxYjlkYjY0NmMyOTg0YzA0ZGIwODVkZWE2ZTY3MzE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-12-20T13:21:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-20T13:21:54Z"}, "message": "Rollup merge of #46751 - michaelwoerister:c-incremental, r=alexcrichton\n\nincr.comp.: Add `-C incremental` in addition to `-Z incremental`\n\nThis PR adds a stable commandline option for invoking incremental compilation.\n\nr? @alexcrichton", "tree": {"sha": "424b63fa02c211b6b34aa1e689aaac9194c45cb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/424b63fa02c211b6b34aa1e689aaac9194c45cb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d9ed874371b9db646c2984c04db085dea6e6731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d9ed874371b9db646c2984c04db085dea6e6731", "html_url": "https://github.com/rust-lang/rust/commit/4d9ed874371b9db646c2984c04db085dea6e6731", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d9ed874371b9db646c2984c04db085dea6e6731/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76e2cc56e2f514d7f53871121ef0c826b445a772", "url": "https://api.github.com/repos/rust-lang/rust/commits/76e2cc56e2f514d7f53871121ef0c826b445a772", "html_url": "https://github.com/rust-lang/rust/commit/76e2cc56e2f514d7f53871121ef0c826b445a772"}, {"sha": "796264b6dfa6161e9a3f2c6fa7af830e9ed848df", "url": "https://api.github.com/repos/rust-lang/rust/commits/796264b6dfa6161e9a3f2c6fa7af830e9ed848df", "html_url": "https://github.com/rust-lang/rust/commit/796264b6dfa6161e9a3f2c6fa7af830e9ed848df"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "a1cf38ae336d21243af97ee5203717e033bd0ceb", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4d9ed874371b9db646c2984c04db085dea6e6731/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d9ed874371b9db646c2984c04db085dea6e6731/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=4d9ed874371b9db646c2984c04db085dea6e6731", "patch": "@@ -1013,6 +1013,8 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n         \"set the threshold for inlining a function (default: 225)\"),\n     panic: Option<PanicStrategy> = (None, parse_panic_strategy,\n         [TRACKED], \"panic strategy to compile crate with\"),\n+    incremental: Option<String> = (None, parse_opt_string, [UNTRACKED],\n+          \"enable incremental compilation\"),\n }\n \n options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n@@ -1663,7 +1665,24 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n         early_error(error_format, \"Value for codegen units must be a positive nonzero integer\");\n     }\n \n-    if cg.lto && debugging_opts.incremental.is_some() {\n+    let incremental = match (&debugging_opts.incremental, &cg.incremental) {\n+        (&Some(ref path1), &Some(ref path2)) => {\n+            if path1 != path2 {\n+                early_error(error_format,\n+                    &format!(\"conflicting paths for `-Z incremental` and \\\n+                              `-C incremental` specified: {} versus {}\",\n+                              path1,\n+                              path2));\n+            } else {\n+                Some(path1)\n+            }\n+        }\n+        (&Some(ref path), &None) => Some(path),\n+        (&None, &Some(ref path)) => Some(path),\n+        (&None, &None) => None,\n+    }.map(|m| PathBuf::from(m));\n+\n+    if cg.lto && incremental.is_some() {\n         early_error(error_format, \"can't perform LTO when compiling incrementally\");\n     }\n \n@@ -1837,8 +1856,6 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n \n     let crate_name = matches.opt_str(\"crate-name\");\n \n-    let incremental = debugging_opts.incremental.as_ref().map(|m| PathBuf::from(m));\n-\n     (Options {\n         crate_types,\n         optimize: opt_level,\n@@ -2581,6 +2598,9 @@ mod tests {\n         opts.cg.save_temps = true;\n         assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n \n+        opts.cg.incremental = Some(String::from(\"abc\"));\n+        assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n+\n \n         // Make sure changing a [TRACKED] option changes the hash\n         opts = reference.clone();"}, {"sha": "ea68925705f521cb598d823ddd8578e3311f928b", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d9ed874371b9db646c2984c04db085dea6e6731/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d9ed874371b9db646c2984c04db085dea6e6731/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=4d9ed874371b9db646c2984c04db085dea6e6731", "patch": "@@ -1024,7 +1024,7 @@ fn collect_and_partition_translation_items<'a, 'tcx>(\n \n     assert_symbols_are_distinct(tcx, items.iter());\n \n-    let strategy = if tcx.sess.opts.debugging_opts.incremental.is_some() {\n+    let strategy = if tcx.sess.opts.incremental.is_some() {\n         PartitioningStrategy::PerModule\n     } else {\n         PartitioningStrategy::FixedUnitCount(tcx.sess.codegen_units())"}, {"sha": "3aee88136a1ff1ab6488b68ea1521483d157dd04", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d9ed874371b9db646c2984c04db085dea6e6731/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d9ed874371b9db646c2984c04db085dea6e6731/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=4d9ed874371b9db646c2984c04db085dea6e6731", "patch": "@@ -1506,7 +1506,7 @@ impl<'test> TestCx<'test> {\n \n         if let Some(ref incremental_dir) = self.props.incremental_dir {\n             rustc.args(&[\n-                \"-Z\",\n+                \"-C\",\n                 &format!(\"incremental={}\", incremental_dir.display()),\n             ]);\n             rustc.args(&[\"-Z\", \"incremental-verify-ich\"]);"}]}