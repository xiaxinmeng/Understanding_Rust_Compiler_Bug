{"sha": "f530f90b56969ba0d2f269f843f01c4a9386d20c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MzBmOTBiNTY5NjliYTBkMmYyNjlmODQzZjAxYzRhOTM4NmQyMGM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-26T00:13:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-26T00:13:31Z"}, "message": "Rollup merge of #61173 - fabric-and-ink:minor-cleanup, r=varkor\n\nAuto-derive Encode and Decode implementations of DefPathTable\n\nSee https://github.com/rust-lang/rust/pull/60647#discussion_r283394682", "tree": {"sha": "8ef6f13f806c2d6eff3013dcd0c2cc8750cb9e5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ef6f13f806c2d6eff3013dcd0c2cc8750cb9e5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f530f90b56969ba0d2f269f843f01c4a9386d20c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc6dorCRBK7hj4Ov3rIwAAdHIIADhrj6HnakPbK4RhtY2gshap\n7SwWnB9dYHkjpVmbFaHYFZCi+ISymXTavqn0/2ggrnfbf/dWJ/af8SOFp6/rYASq\nbbLYH2iI+ell6uoLgYqvS5fQ/h/1yyAWQ+vZcn7x8heBDPUioqOIR/K3YTew0m8Y\nAeFIHbI+ClRL8Px0RcvLQzJKudlcL+xFdKic/+ztoSlwhKgJmB1yYuTw2Huzl/Rr\ndwC9ut4O1L7uEVfSEswwG5HPZDxv/KHSKO9Pdt4Vp34cwyL3bUT7poqPrBeR8Xsn\n/CBkjGFP1X3i6S3xF/T6OVc5kSb9OyyKcED2ij7ODHRcH5ANAu2vLAvI9zI+xxE=\n=PwEZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 8ef6f13f806c2d6eff3013dcd0c2cc8750cb9e5f\nparent 7b8b23ceba37dc4df79af21c5058553db4f03a81\nparent a5e9d8240ece4a1a14178b7de15d2a874aef6d10\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1558829611 +0200\ncommitter GitHub <noreply@github.com> 1558829611 +0200\n\nRollup merge of #61173 - fabric-and-ink:minor-cleanup, r=varkor\n\nAuto-derive Encode and Decode implementations of DefPathTable\n\nSee https://github.com/rust-lang/rust/pull/60647#discussion_r283394682\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f530f90b56969ba0d2f269f843f01c4a9386d20c", "html_url": "https://github.com/rust-lang/rust/commit/f530f90b56969ba0d2f269f843f01c4a9386d20c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f530f90b56969ba0d2f269f843f01c4a9386d20c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b8b23ceba37dc4df79af21c5058553db4f03a81", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b8b23ceba37dc4df79af21c5058553db4f03a81", "html_url": "https://github.com/rust-lang/rust/commit/7b8b23ceba37dc4df79af21c5058553db4f03a81"}, {"sha": "a5e9d8240ece4a1a14178b7de15d2a874aef6d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e9d8240ece4a1a14178b7de15d2a874aef6d10", "html_url": "https://github.com/rust-lang/rust/commit/a5e9d8240ece4a1a14178b7de15d2a874aef6d10"}], "stats": {"total": 26, "additions": 1, "deletions": 25}, "files": [{"sha": "2324c3f04284ff33483b490f92280ebc07a1afc8", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f530f90b56969ba0d2f269f843f01c4a9386d20c/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f530f90b56969ba0d2f269f843f01c4a9386d20c/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=f530f90b56969ba0d2f269f843f01c4a9386d20c", "patch": "@@ -10,7 +10,6 @@ use crate::ich::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::indexed_vec::{IndexVec};\n use rustc_data_structures::stable_hasher::StableHasher;\n-use serialize::{Encodable, Decodable, Encoder, Decoder};\n use crate::session::CrateDisambiguator;\n use std::borrow::Borrow;\n use std::fmt::Write;\n@@ -25,14 +24,13 @@ use crate::util::nodemap::NodeMap;\n /// Internally the DefPathTable holds a tree of DefKeys, where each DefKey\n /// stores the DefIndex of its parent.\n /// There is one DefPathTable for each crate.\n-#[derive(Clone, Default)]\n+#[derive(Clone, Default, RustcDecodable, RustcEncodable)]\n pub struct DefPathTable {\n     index_to_key: Vec<DefKey>,\n     def_path_hashes: Vec<DefPathHash>,\n }\n \n impl DefPathTable {\n-\n     fn allocate(&mut self,\n                 key: DefKey,\n                 def_path_hash: DefPathHash)\n@@ -86,28 +84,6 @@ impl DefPathTable {\n     }\n }\n \n-\n-impl Encodable for DefPathTable {\n-    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n-        // Index to key\n-        self.index_to_key.encode(s)?;\n-\n-        // DefPath hashes\n-        self.def_path_hashes.encode(s)?;\n-\n-        Ok(())\n-    }\n-}\n-\n-impl Decodable for DefPathTable {\n-    fn decode<D: Decoder>(d: &mut D) -> Result<DefPathTable, D::Error> {\n-        Ok(DefPathTable {\n-            index_to_key: Decodable::decode(d)?,\n-            def_path_hashes : Decodable::decode(d)?,\n-        })\n-    }\n-}\n-\n /// The definition table containing node definitions.\n /// It holds the `DefPathTable` for local `DefId`s/`DefPath`s and it also stores a\n /// mapping from `NodeId`s to local `DefId`s."}]}