{"sha": "1c5b53be1c5ea2f95b1b3e4327c69f14127a923c", "node_id": "C_kwDOAAsO6NoAKDFjNWI1M2JlMWM1ZWEyZjk1YjFiM2U0MzI3YzY5ZjE0MTI3YTkyM2M", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-20T18:59:52Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-20T18:59:52Z"}, "message": "Avoid going through the happy path in case of non-fn builtin calls", "tree": {"sha": "3f76c224e03ba4cc5948941dfad1842d5a188cdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f76c224e03ba4cc5948941dfad1842d5a188cdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c5b53be1c5ea2f95b1b3e4327c69f14127a923c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c5b53be1c5ea2f95b1b3e4327c69f14127a923c", "html_url": "https://github.com/rust-lang/rust/commit/1c5b53be1c5ea2f95b1b3e4327c69f14127a923c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c5b53be1c5ea2f95b1b3e4327c69f14127a923c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1ef038ae401d8ee7611b2f9fb2aec3af4e9241f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ef038ae401d8ee7611b2f9fb2aec3af4e9241f", "html_url": "https://github.com/rust-lang/rust/commit/f1ef038ae401d8ee7611b2f9fb2aec3af4e9241f"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "4ec71a78a003146d8a8da6c45b9eddcfea4608d3", "filename": "compiler/rustc_hir_typeck/src/callee.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1c5b53be1c5ea2f95b1b3e4327c69f14127a923c/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c5b53be1c5ea2f95b1b3e4327c69f14127a923c/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs?ref=1c5b53be1c5ea2f95b1b3e4327c69f14127a923c", "patch": "@@ -4,7 +4,7 @@ use super::{Expectation, FnCtxt, TupleArgumentsFlag};\n \n use crate::type_error_struct;\n use rustc_ast::util::parser::PREC_POSTFIX;\n-use rustc_errors::{struct_span_err, Applicability, Diagnostic, StashKey};\n+use rustc_errors::{struct_span_err, Applicability, Diagnostic, ErrorGuaranteed, StashKey};\n use rustc_hir as hir;\n use rustc_hir::def::{self, CtorKind, Namespace, Res};\n use rustc_hir::def_id::DefId;\n@@ -424,21 +424,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     }\n                 }\n \n-                self.report_invalid_callee(call_expr, callee_expr, callee_ty, arg_exprs);\n-\n-                // This is the \"default\" function signature, used in case of error.\n-                // In that case, we check each argument against \"error\" in order to\n-                // set up all the node type bindings.\n-                (\n-                    ty::Binder::dummy(self.tcx.mk_fn_sig(\n-                        self.err_args(arg_exprs.len()).into_iter(),\n-                        self.tcx.ty_error(),\n-                        false,\n-                        hir::Unsafety::Normal,\n-                        abi::Abi::Rust,\n-                    )),\n-                    None,\n-                )\n+                let err = self.report_invalid_callee(call_expr, callee_expr, callee_ty, arg_exprs);\n+\n+                return self.tcx.ty_error_with_guaranteed(err);\n             }\n         };\n \n@@ -591,7 +579,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         callee_expr: &'tcx hir::Expr<'tcx>,\n         callee_ty: Ty<'tcx>,\n         arg_exprs: &'tcx [hir::Expr<'tcx>],\n-    ) {\n+    ) -> ErrorGuaranteed {\n         let mut unit_variant = None;\n         if let hir::ExprKind::Path(qpath) = &callee_expr.kind\n             && let Res::Def(def::DefKind::Ctor(kind, CtorKind::Const), _)\n@@ -720,7 +708,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 err.span_label(span, label);\n             }\n         }\n-        err.emit();\n+        err.emit()\n     }\n \n     fn confirm_deferred_closure_call("}]}