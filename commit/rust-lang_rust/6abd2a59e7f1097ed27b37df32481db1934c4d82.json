{"sha": "6abd2a59e7f1097ed27b37df32481db1934c4d82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhYmQyYTU5ZTdmMTA5N2VkMjdiMzdkZjMyNDgxZGIxOTM0YzRkODI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-26T23:45:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-26T23:45:07Z"}, "message": "Rollup merge of #78349 - JohnTitor:issue-75962, r=davidtwco\n\nUse its own `TypeckResults` to avoid ICE\n\nFixes #75962", "tree": {"sha": "818281e7e80bce0e014f35c6ddbd7eb8b466a8a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/818281e7e80bce0e014f35c6ddbd7eb8b466a8a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6abd2a59e7f1097ed27b37df32481db1934c4d82", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfl1+ECRBK7hj4Ov3rIwAAdHIIACwvgCas2Sly8eEIMHNjOmBd\nuabMNwpzrkfad1xko/a7ckPSk4buCC4jGchKhzihC6wlQfjAwwKLswximSrRMPea\n1FQz2OO/N9nhmE9ebeDIZL4bFYG2kAAIxtRH2Pw0FQMTmBg14wepNYdpS82Ffv23\nBIkwBBQVgfHk1ptegkdtcx15ThhIgjM4hETSMFeyFrTU7UJGCI3dG9Zp2kE7EF5v\n9CjgCWtH28uZsTH/TbkrqErYGc8OXUzQX5AJxjR1cBLUWDAJV91dWoA47ffuZrgn\nEfnbuZPAUGqRR3JYvhRzbnig2YY0QmuFSO8WiQMF/MXHcVH4eiDbEzM038V6V9I=\n=deAz\n-----END PGP SIGNATURE-----\n", "payload": "tree 818281e7e80bce0e014f35c6ddbd7eb8b466a8a9\nparent ae5442582d09f21d10c938c1244e8c3964e587c3\nparent 4f345377082ab564cd83d0cb7f805e2a97594366\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1603755907 +0900\ncommitter GitHub <noreply@github.com> 1603755907 +0900\n\nRollup merge of #78349 - JohnTitor:issue-75962, r=davidtwco\n\nUse its own `TypeckResults` to avoid ICE\n\nFixes #75962\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6abd2a59e7f1097ed27b37df32481db1934c4d82", "html_url": "https://github.com/rust-lang/rust/commit/6abd2a59e7f1097ed27b37df32481db1934c4d82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6abd2a59e7f1097ed27b37df32481db1934c4d82/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae5442582d09f21d10c938c1244e8c3964e587c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae5442582d09f21d10c938c1244e8c3964e587c3", "html_url": "https://github.com/rust-lang/rust/commit/ae5442582d09f21d10c938c1244e8c3964e587c3"}, {"sha": "4f345377082ab564cd83d0cb7f805e2a97594366", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f345377082ab564cd83d0cb7f805e2a97594366", "html_url": "https://github.com/rust-lang/rust/commit/4f345377082ab564cd83d0cb7f805e2a97594366"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "48d15370ee320aaf6370555be16b779424b68992", "filename": "compiler/rustc_save_analysis/src/lib.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6abd2a59e7f1097ed27b37df32481db1934c4d82/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abd2a59e7f1097ed27b37df32481db1934c4d82/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs?ref=6abd2a59e7f1097ed27b37df32481db1934c4d82", "patch": "@@ -630,9 +630,14 @@ impl<'tcx> SaveContext<'tcx> {\n             })\n             | Node::Ty(&hir::Ty { kind: hir::TyKind::Path(ref qpath), .. }) => match qpath {\n                 hir::QPath::Resolved(_, path) => path.res,\n-                hir::QPath::TypeRelative(..) | hir::QPath::LangItem(..) => self\n-                    .maybe_typeck_results\n-                    .map_or(Res::Err, |typeck_results| typeck_results.qpath_res(qpath, hir_id)),\n+                hir::QPath::TypeRelative(..) | hir::QPath::LangItem(..) => {\n+                    // #75962: `self.typeck_results` may be different from the `hir_id`'s result.\n+                    if self.tcx.has_typeck_results(hir_id.owner.to_def_id()) {\n+                        self.tcx.typeck(hir_id.owner).qpath_res(qpath, hir_id)\n+                    } else {\n+                        Res::Err\n+                    }\n+                }\n             },\n \n             Node::Binding(&hir::Pat {"}, {"sha": "1bf8160e4c384c0ab6c63527230da34cdc5a2ecb", "filename": "compiler/rustc_save_analysis/src/sig.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6abd2a59e7f1097ed27b37df32481db1934c4d82/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abd2a59e7f1097ed27b37df32481db1934c4d82/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs?ref=6abd2a59e7f1097ed27b37df32481db1934c4d82", "patch": "@@ -262,7 +262,7 @@ impl<'hir> Sig for hir::Ty<'hir> {\n                 } else {\n                     let start = offset + prefix.len() + 5;\n                     let end = start + name.len();\n-                    // FIXME should put the proper path in there, not elipses.\n+                    // FIXME should put the proper path in there, not ellipsis.\n                     Ok(Signature {\n                         text: prefix + \"...::\" + &name,\n                         defs: vec![],\n@@ -272,7 +272,7 @@ impl<'hir> Sig for hir::Ty<'hir> {\n             }\n             hir::TyKind::Path(hir::QPath::TypeRelative(ty, segment)) => {\n                 let nested_ty = ty.make(offset + 1, id, scx)?;\n-                let prefix = format!(\"<{}>::\", nested_ty.text,);\n+                let prefix = format!(\"<{}>::\", nested_ty.text);\n \n                 let name = path_segment_to_string(segment);\n                 let res = scx.get_path_res(id.ok_or(\"Missing id for Path\")?);\n@@ -551,7 +551,7 @@ impl<'hir> Sig for hir::Item<'hir> {\n                 // FIXME where clause\n             }\n             hir::ItemKind::ForeignMod(_) => Err(\"extern mod\"),\n-            hir::ItemKind::GlobalAsm(_) => Err(\"glboal asm\"),\n+            hir::ItemKind::GlobalAsm(_) => Err(\"global asm\"),\n             hir::ItemKind::ExternCrate(_) => Err(\"extern crate\"),\n             hir::ItemKind::OpaqueTy(..) => Err(\"opaque type\"),\n             // FIXME should implement this (e.g., pub use)."}, {"sha": "ef3cb7401128e3a4c303afdaf84759458745daa0", "filename": "src/test/ui/impl-trait/bound-normalization-pass.default.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6abd2a59e7f1097ed27b37df32481db1934c4d82/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6abd2a59e7f1097ed27b37df32481db1934c4d82/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.default.stderr?ref=6abd2a59e7f1097ed27b37df32481db1934c4d82", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/bound-normalization-pass.rs:5:12\n+  --> $DIR/bound-normalization-pass.rs:8:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "src/test/ui/impl-trait/bound-normalization-pass.stderr"}, {"sha": "3e6884ef10fa681154f57e0809e97ba3bed3e9e3", "filename": "src/test/ui/impl-trait/bound-normalization-pass.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6abd2a59e7f1097ed27b37df32481db1934c4d82/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abd2a59e7f1097ed27b37df32481db1934c4d82/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.rs?ref=6abd2a59e7f1097ed27b37df32481db1934c4d82", "patch": "@@ -1,5 +1,8 @@\n // check-pass\n // edition:2018\n+// revisions: default sa\n+//[sa] compile-flags: -Z save-analysis\n+//-^ To make this the regression test for #75962.\n \n #![feature(type_alias_impl_trait)]\n #![feature(impl_trait_in_bindings)]"}, {"sha": "ef3cb7401128e3a4c303afdaf84759458745daa0", "filename": "src/test/ui/impl-trait/bound-normalization-pass.sa.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6abd2a59e7f1097ed27b37df32481db1934c4d82/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.sa.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6abd2a59e7f1097ed27b37df32481db1934c4d82/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.sa.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.sa.stderr?ref=6abd2a59e7f1097ed27b37df32481db1934c4d82", "patch": "@@ -0,0 +1,11 @@\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/bound-normalization-pass.rs:8:12\n+   |\n+LL | #![feature(impl_trait_in_bindings)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n+\n+warning: 1 warning emitted\n+"}]}