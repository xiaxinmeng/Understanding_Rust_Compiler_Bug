{"sha": "6df969f5f4e9dffd19024962e051e6f9f94e9805", "node_id": "C_kwDOAAsO6NoAKDZkZjk2OWY1ZjRlOWRmZmQxOTAyNDk2MmUwNTFlNmY5Zjk0ZTk4MDU", "commit": {"author": {"name": "XFFXFF", "email": "1247714429@qq.com", "date": "2022-06-16T08:43:08Z"}, "committer": {"name": "XFFXFF", "email": "1247714429@qq.com", "date": "2022-06-16T12:34:37Z"}, "message": "the offset used for the completion cursor should always be relative to the original file and not to the marco file", "tree": {"sha": "320a22becb2129fe75973e28a4d8a5374d90cb0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/320a22becb2129fe75973e28a4d8a5374d90cb0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6df969f5f4e9dffd19024962e051e6f9f94e9805", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6df969f5f4e9dffd19024962e051e6f9f94e9805", "html_url": "https://github.com/rust-lang/rust/commit/6df969f5f4e9dffd19024962e051e6f9f94e9805", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6df969f5f4e9dffd19024962e051e6f9f94e9805/comments", "author": {"login": "xffxff", "id": 30254428, "node_id": "MDQ6VXNlcjMwMjU0NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/30254428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xffxff", "html_url": "https://github.com/xffxff", "followers_url": "https://api.github.com/users/xffxff/followers", "following_url": "https://api.github.com/users/xffxff/following{/other_user}", "gists_url": "https://api.github.com/users/xffxff/gists{/gist_id}", "starred_url": "https://api.github.com/users/xffxff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xffxff/subscriptions", "organizations_url": "https://api.github.com/users/xffxff/orgs", "repos_url": "https://api.github.com/users/xffxff/repos", "events_url": "https://api.github.com/users/xffxff/events{/privacy}", "received_events_url": "https://api.github.com/users/xffxff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xffxff", "id": 30254428, "node_id": "MDQ6VXNlcjMwMjU0NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/30254428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xffxff", "html_url": "https://github.com/xffxff", "followers_url": "https://api.github.com/users/xffxff/followers", "following_url": "https://api.github.com/users/xffxff/following{/other_user}", "gists_url": "https://api.github.com/users/xffxff/gists{/gist_id}", "starred_url": "https://api.github.com/users/xffxff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xffxff/subscriptions", "organizations_url": "https://api.github.com/users/xffxff/orgs", "repos_url": "https://api.github.com/users/xffxff/repos", "events_url": "https://api.github.com/users/xffxff/events{/privacy}", "received_events_url": "https://api.github.com/users/xffxff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbf8e122349320f67b32282def871fe95d48f33d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbf8e122349320f67b32282def871fe95d48f33d", "html_url": "https://github.com/rust-lang/rust/commit/fbf8e122349320f67b32282def871fe95d48f33d"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "d624d3757747fe1e1939d80f293a201655f9abbf", "filename": "crates/hir/src/source_analyzer.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6df969f5f4e9dffd19024962e051e6f9f94e9805/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6df969f5f4e9dffd19024962e051e6f9f94e9805/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=6df969f5f4e9dffd19024962e051e6f9f94e9805", "patch": "@@ -67,7 +67,10 @@ impl SourceAnalyzer {\n         let scopes = db.expr_scopes(def);\n         let scope = match offset {\n             None => scope_for(&scopes, &source_map, node),\n-            Some(offset) => scope_for_offset(db, &scopes, &source_map, node.with_value(offset)),\n+            Some(offset) => {\n+                let file_id = node.file_id.original_file(db.upcast());\n+                scope_for_offset(db, &scopes, &source_map, InFile::new(file_id.into(), offset))\n+            }\n         };\n         let resolver = resolver_for_scope(db.upcast(), def, scope);\n         SourceAnalyzer {\n@@ -88,7 +91,10 @@ impl SourceAnalyzer {\n         let scopes = db.expr_scopes(def);\n         let scope = match offset {\n             None => scope_for(&scopes, &source_map, node),\n-            Some(offset) => scope_for_offset(db, &scopes, &source_map, node.with_value(offset)),\n+            Some(offset) => {\n+                let file_id = node.file_id.original_file(db.upcast());\n+                scope_for_offset(db, &scopes, &source_map, InFile::new(file_id.into(), offset))\n+            }\n         };\n         let resolver = resolver_for_scope(db.upcast(), def, scope);\n         SourceAnalyzer { resolver, def: Some((def, body, source_map)), infer: None, file_id }"}, {"sha": "c05a7ad9fa5d0e7910f6e5f4efb1a4cc16b227f0", "filename": "crates/ide-completion/src/tests/expression.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6df969f5f4e9dffd19024962e051e6f9f94e9805/crates%2Fide-completion%2Fsrc%2Ftests%2Fexpression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6df969f5f4e9dffd19024962e051e6f9f94e9805/crates%2Fide-completion%2Fsrc%2Ftests%2Fexpression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Fexpression.rs?ref=6df969f5f4e9dffd19024962e051e6f9f94e9805", "patch": "@@ -513,6 +513,7 @@ fn quux(x: i32) {\n \",\n         expect![[r#\"\n             fn quux(\u2026)   fn(i32)\n+            lc x         i32\n             ma m!(\u2026)     macro_rules! m\n             bt u32\n             kw crate::"}, {"sha": "8943d303b60a58b26c254908cd39624467d40f80", "filename": "crates/ide-completion/src/tests/type_pos.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6df969f5f4e9dffd19024962e051e6f9f94e9805/crates%2Fide-completion%2Fsrc%2Ftests%2Ftype_pos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6df969f5f4e9dffd19024962e051e6f9f94e9805/crates%2Fide-completion%2Fsrc%2Ftests%2Ftype_pos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Ftype_pos.rs?ref=6df969f5f4e9dffd19024962e051e6f9f94e9805", "patch": "@@ -90,11 +90,16 @@ fn x<'lt, T, const C: usize>() -> $0\n }\n \n #[test]\n-fn fn_return_type2() {\n+fn fn_return_type_no_local_items() {\n     check(\n         r#\"\n fn foo() -> B$0 {\n     struct Bar;\n+    enum Baz {}\n+    union Bax {\n+        i: i32,\n+        f: f32\n+    }\n }\n \"#,\n         expect![[r#\""}]}