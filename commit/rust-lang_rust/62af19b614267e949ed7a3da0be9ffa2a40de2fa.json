{"sha": "62af19b614267e949ed7a3da0be9ffa2a40de2fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYWYxOWI2MTQyNjdlOTQ5ZWQ3YTNkYTBiZTlmZmEyYTQwZGUyZmE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-19T08:03:53Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-19T08:03:53Z"}, "message": "More FIXMEs", "tree": {"sha": "8916ae5813b4c0e7dff094df00de51633df2565c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8916ae5813b4c0e7dff094df00de51633df2565c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62af19b614267e949ed7a3da0be9ffa2a40de2fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62af19b614267e949ed7a3da0be9ffa2a40de2fa", "html_url": "https://github.com/rust-lang/rust/commit/62af19b614267e949ed7a3da0be9ffa2a40de2fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62af19b614267e949ed7a3da0be9ffa2a40de2fa/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd426a6ae9b9470bcfee19c251d60b5a2c2c6048", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd426a6ae9b9470bcfee19c251d60b5a2c2c6048", "html_url": "https://github.com/rust-lang/rust/commit/fd426a6ae9b9470bcfee19c251d60b5a2c2c6048"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "f2a115f8f35990b1b3ce4db080234f3e64236d70", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62af19b614267e949ed7a3da0be9ffa2a40de2fa/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62af19b614267e949ed7a3da0be9ffa2a40de2fa/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=62af19b614267e949ed7a3da0be9ffa2a40de2fa", "patch": "@@ -56,6 +56,7 @@ pub struct Memory<'mir, 'tcx, M: Machine<'mir, 'tcx>> {\n     /// the wrong type), so we let the machine override this type.\n     /// Either way, if the machine allows writing to a static, doing so will\n     /// create a copy of the static allocation here.\n+    // FIXME: this should not be public, but interning currently needs access to it\n     pub(super) alloc_map: M::MemoryMap,\n \n     /// To be able to compare pointers with NULL, and to check alignment for accesses"}]}