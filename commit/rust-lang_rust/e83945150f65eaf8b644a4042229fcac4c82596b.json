{"sha": "e83945150f65eaf8b644a4042229fcac4c82596b", "node_id": "C_kwDOAAsO6NoAKGU4Mzk0NTE1MGY2NWVhZjhiNjQ0YTQwNDIyMjlmY2FjNGM4MjU5NmI", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-11T20:37:27Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-11T20:53:24Z"}, "message": "Add new fn to core::fmt::rt::v1::Argument.", "tree": {"sha": "468c105cb121f1e94e32af68e49b2c957b6a9620", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/468c105cb121f1e94e32af68e49b2c957b6a9620"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e83945150f65eaf8b644a4042229fcac4c82596b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e83945150f65eaf8b644a4042229fcac4c82596b", "html_url": "https://github.com/rust-lang/rust/commit/e83945150f65eaf8b644a4042229fcac4c82596b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e83945150f65eaf8b644a4042229fcac4c82596b/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bebf9fe0635ad58bff020b754cd0f24c35291d51", "url": "https://api.github.com/repos/rust-lang/rust/commits/bebf9fe0635ad58bff020b754cd0f24c35291d51", "html_url": "https://github.com/rust-lang/rust/commit/bebf9fe0635ad58bff020b754cd0f24c35291d51"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "e61b89fad5d3b07c4d75c70828af6356bdd09e89", "filename": "library/core/src/fmt/rt/v1.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e83945150f65eaf8b644a4042229fcac4c82596b/library%2Fcore%2Fsrc%2Ffmt%2Frt%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e83945150f65eaf8b644a4042229fcac4c82596b/library%2Fcore%2Fsrc%2Ffmt%2Frt%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Frt%2Fv1.rs?ref=e83945150f65eaf8b644a4042229fcac4c82596b", "patch": "@@ -22,6 +22,19 @@ pub struct FormatSpec {\n     pub width: Count,\n }\n \n+impl Argument {\n+    pub fn new(\n+        position: usize,\n+        fill: char,\n+        align: Alignment,\n+        flags: u32,\n+        precision: Count,\n+        width: Count,\n+    ) -> Self {\n+        Self { position, format: FormatSpec { fill, align, flags, precision, width } }\n+    }\n+}\n+\n /// Possible alignments that can be requested as part of a formatting directive.\n #[cfg_attr(not(bootstrap), lang = \"format_alignment\")]\n #[derive(Copy, Clone, PartialEq, Eq)]"}]}