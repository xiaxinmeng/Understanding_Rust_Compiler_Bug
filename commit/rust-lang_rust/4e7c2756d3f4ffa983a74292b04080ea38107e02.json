{"sha": "4e7c2756d3f4ffa983a74292b04080ea38107e02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlN2MyNzU2ZDNmNGZmYTk4M2E3NDI5MmIwNDA4MGVhMzgxMDdlMDI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-14T14:47:30Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-14T14:47:30Z"}, "message": "Update Configurations.md", "tree": {"sha": "2adf39525b9825ed9e816c1f1f453405cb36793c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2adf39525b9825ed9e816c1f1f453405cb36793c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e7c2756d3f4ffa983a74292b04080ea38107e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e7c2756d3f4ffa983a74292b04080ea38107e02", "html_url": "https://github.com/rust-lang/rust/commit/4e7c2756d3f4ffa983a74292b04080ea38107e02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e7c2756d3f4ffa983a74292b04080ea38107e02/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc543cce0b4548730625a00bd7f3de1f58424a94", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc543cce0b4548730625a00bd7f3de1f58424a94", "html_url": "https://github.com/rust-lang/rust/commit/bc543cce0b4548730625a00bd7f3de1f58424a94"}], "stats": {"total": 180, "additions": 45, "deletions": 135}, "files": [{"sha": "9d74fd0525053f6ecdb0ee402b1e502d5514d72a", "filename": "Configurations.md", "status": "modified", "additions": 45, "deletions": 135, "changes": 180, "blob_url": "https://github.com/rust-lang/rust/blob/4e7c2756d3f4ffa983a74292b04080ea38107e02/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/4e7c2756d3f4ffa983a74292b04080ea38107e02/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=4e7c2756d3f4ffa983a74292b04080ea38107e02", "patch": "@@ -1719,9 +1719,9 @@ Don't reformat out of line modules\n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n \n-## `space_after_bound_colon`\n+## `space_after_colon`\n \n-Leave a space after the colon in a trait or lifetime bound\n+Leave a space after the colon.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n@@ -1730,102 +1730,29 @@ Leave a space after the colon in a trait or lifetime bound\n \n ```rust\n fn lorem<T: Eq>(t: T) {\n-    // body\n-}\n-```\n-\n-#### `false`:\n-\n-```rust\n-fn lorem<T:Eq>(t: T) {\n-    // body\n-}\n-```\n-\n-See also: [`space_before_bound`](#space_before_bound).\n-\n-## `struct_field_align_threshold`\n-\n-The maximum diff of width between struct fields to be aligned with each other.\n-\n-- **Default value** : 0\n-- **Possible values**: any positive integer\n-\n-#### `0` (default):\n-\n-```rust\n-struct Foo {\n-    x: u32,\n-    yy: u32,\n-    zzz: u32,\n-}\n-```\n-\n-#### `20`:\n-\n-```rust\n-struct Foo {\n-    x:   u32,\n-    yy:  u32,\n-    zzz: u32,\n-}\n-```\n-\n-## `space_after_struct_lit_field_colon`\n-\n-Leave a space after the colon in a struct literal field\n-\n-- **Default value**: `true`\n-- **Possible values**: `true`, `false`\n-\n-#### `true` (default):\n-\n-```rust\n-let lorem = Lorem {\n-    ipsum: dolor,\n-    sit: amet,\n-};\n-```\n-\n-#### `false`:\n-\n-```rust\n-let lorem = Lorem {\n-    ipsum:dolor,\n-    sit:amet,\n-};\n-```\n-\n-See also: [`space_before_struct_lit_field_colon`](#space_before_struct_lit_field_colon).\n-\n-## `space_after_type_annotation_colon`\n-\n-Leave a space after the colon in a type annotation\n-\n-- **Default value**: `true`\n-- **Possible values**: `true`, `false`\n-\n-#### `true` (default):\n-\n-```rust\n-fn lorem<T: Eq>(t: T) {\n-    let ipsum: Dolor = sit;\n+    let lorem: Dolor = Lorem {\n+        ipsum: dolor,\n+        sit: amet,\n+    };\n }\n ```\n \n #### `false`:\n \n ```rust\n-fn lorem<T: Eq>(t:T) {\n-    let ipsum:Dolor = sit;\n+fn lorem<T:Eq>(t:T) {\n+    let lorem:Dolor = Lorem {\n+        ipsum:dolor,\n+        sit:amet,\n+    };\n }\n ```\n \n-See also: [`space_before_type_annotation`](#space_before_type_annotation).\n+See also: [`space_before_colon`](#space_before_colon).\n \n-## `space_before_bound`\n+## `space_before_colon`\n \n-Leave a space before the colon in a trait or lifetime bound\n+Leave a space before the colon.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n@@ -1834,71 +1761,54 @@ Leave a space before the colon in a trait or lifetime bound\n \n ```rust\n fn lorem<T: Eq>(t: T) {\n-    let ipsum: Dolor = sit;\n+    let lorem: Dolor = Lorem {\n+        ipsum: dolor,\n+        sit: amet,\n+    };\n }\n ```\n \n #### `true`:\n \n ```rust\n-fn lorem<T : Eq>(t: T) {\n-    let ipsum: Dolor = sit;\n+fn lorem<T : Eq>(t : T) {\n+    let lorem : Dolor = Lorem {\n+        ipsum : dolor,\n+        sit : amet,\n+    };\n }\n ```\n \n-See also: [`space_after_bound_colon`](#space_after_bound_colon).\n-\n-## `space_before_struct_lit_field_colon`\n-\n-Leave a space before the colon in a struct literal field\n-\n-- **Default value**: `false`\n-- **Possible values**: `true`, `false`\n-\n-#### `false` (default):\n-\n-```rust\n-let lorem = Lorem {\n-    ipsum: dolor,\n-    sit: amet,\n-};\n-```\n-\n-#### `true`:\n-\n-```rust\n-let lorem = Lorem {\n-    ipsum : dolor,\n-    sit : amet,\n-};\n-```\n-\n-See also: [`space_after_struct_lit_field_colon`](#space_after_struct_lit_field_colon).\n+See also: [`space_after_colon`](#space_after_colon).\n \n-## `space_before_type_annotation`\n+## `struct_field_align_threshold`\n \n-Leave a space before the colon in a type annotation\n+The maximum diff of width between struct fields to be aligned with each other.\n \n-- **Default value**: `false`\n-- **Possible values**: `true`, `false`\n+- **Default value** : 0\n+- **Possible values**: any positive integer\n \n-#### `false` (default):\n+#### `0` (default):\n \n ```rust\n-fn lorem<T: Eq>(t: T) {\n-    let ipsum: Dolor = sit;\n+struct Foo {\n+    x: u32,\n+    yy: u32,\n+    zzz: u32,\n }\n ```\n \n-#### `true`:\n+#### `20`:\n \n ```rust\n-fn lorem<T: Eq>(t : T) {\n-    let ipsum : Dolor = sit;\n+struct Foo {\n+    x:   u32,\n+    yy:  u32,\n+    zzz: u32,\n }\n ```\n \n-See also: [`space_after_type_annotation_colon`](#space_after_type_annotation_colon).\n+```\n \n ## `spaces_around_ranges`\n \n@@ -1919,7 +1829,7 @@ let lorem = 0..10;\n let lorem = 0 .. 10;\n ```\n \n-## `spaces_within_angle_brackets`\n+## `spaces_within_parens_and_brackets`\n \n Put spaces within non-empty generic arguments\n \n@@ -1942,9 +1852,9 @@ fn lorem< T: Eq >(t: T) {\n }\n ```\n \n-See also: [`spaces_within_parens`](#spaces_within_parens), [`spaces_within_square_brackets`](#spaces_within_square_brackets).\n+See also: [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets), [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets).\n \n-## `spaces_within_parens`\n+## `spaces_within_parens_and_brackets`\n \n Put spaces within non-empty parentheses\n \n@@ -1967,9 +1877,9 @@ fn lorem<T: Eq>( t: T ) {\n }\n ```\n \n-See also: [`spaces_within_angle_brackets`](#spaces_within_angle_brackets), [`spaces_within_square_brackets`](#spaces_within_square_brackets).\n+See also: [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets), [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets).\n \n-## `spaces_within_square_brackets`\n+## `spaces_within_parens_and_brackets`\n \n Put spaces within non-empty square brackets\n \n@@ -1988,7 +1898,7 @@ let lorem: [usize; 2] = [ipsum, dolor];\n let lorem: [ usize; 2 ] = [ ipsum, dolor ];\n ```\n \n-See also: [`spaces_within_parens`](#spaces_within_parens), [`spaces_within_angle_brackets`](#spaces_within_angle_brackets).\n+See also: [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets), [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets).\n \n ## `struct_lit_multiline_style`\n "}]}