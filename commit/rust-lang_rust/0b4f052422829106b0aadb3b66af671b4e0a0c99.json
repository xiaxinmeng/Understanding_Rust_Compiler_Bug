{"sha": "0b4f052422829106b0aadb3b66af671b4e0a0c99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiNGYwNTI0MjI4MjkxMDZiMGFhZGIzYjY2YWY2NzFiNGUwYTBjOTk=", "commit": {"author": {"name": "Geoffroy Couprie", "email": "geo.couprie@gmail.com", "date": "2013-09-20T13:17:32Z"}, "committer": {"name": "Geoffroy Couprie", "email": "geo.couprie@gmail.com", "date": "2013-10-09T16:36:51Z"}, "message": "Correct code examples for base64 documentation", "tree": {"sha": "49768dc0e286a7c1b7a5e9a34a1458fbf325c490", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49768dc0e286a7c1b7a5e9a34a1458fbf325c490"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b4f052422829106b0aadb3b66af671b4e0a0c99", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b4f052422829106b0aadb3b66af671b4e0a0c99", "html_url": "https://github.com/rust-lang/rust/commit/0b4f052422829106b0aadb3b66af671b4e0a0c99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b4f052422829106b0aadb3b66af671b4e0a0c99/comments", "author": {"login": "Geal", "id": 119296, "node_id": "MDQ6VXNlcjExOTI5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/119296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geal", "html_url": "https://github.com/Geal", "followers_url": "https://api.github.com/users/Geal/followers", "following_url": "https://api.github.com/users/Geal/following{/other_user}", "gists_url": "https://api.github.com/users/Geal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geal/subscriptions", "organizations_url": "https://api.github.com/users/Geal/orgs", "repos_url": "https://api.github.com/users/Geal/repos", "events_url": "https://api.github.com/users/Geal/events{/privacy}", "received_events_url": "https://api.github.com/users/Geal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Geal", "id": 119296, "node_id": "MDQ6VXNlcjExOTI5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/119296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geal", "html_url": "https://github.com/Geal", "followers_url": "https://api.github.com/users/Geal/followers", "following_url": "https://api.github.com/users/Geal/following{/other_user}", "gists_url": "https://api.github.com/users/Geal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geal/subscriptions", "organizations_url": "https://api.github.com/users/Geal/orgs", "repos_url": "https://api.github.com/users/Geal/repos", "events_url": "https://api.github.com/users/Geal/events{/privacy}", "received_events_url": "https://api.github.com/users/Geal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e505d4c3535d6e0af1070b1b50ec8db4c2eca827", "url": "https://api.github.com/repos/rust-lang/rust/commits/e505d4c3535d6e0af1070b1b50ec8db4c2eca827", "html_url": "https://github.com/rust-lang/rust/commit/e505d4c3535d6e0af1070b1b50ec8db4c2eca827"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "5d9c38c954304bbdd0f460aa6b2f5446f9347c0e", "filename": "src/libextra/base64.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0b4f052422829106b0aadb3b66af671b4e0a0c99/src%2Flibextra%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b4f052422829106b0aadb3b66af671b4e0a0c99/src%2Flibextra%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fbase64.rs?ref=0b4f052422829106b0aadb3b66af671b4e0a0c99", "patch": "@@ -64,11 +64,11 @@ impl<'self> ToBase64 for &'self [u8] {\n      *\n      * ```rust\n      * extern mod extra;\n-     * use extra::base64::{ToBase64, standard};\n+     * use extra::base64::{ToBase64, STANDARD};\n      *\n      * fn main () {\n-     *     let str = [52,32].to_base64(standard);\n-     *     println!(\"{}\", str);\n+     *     let str = [52,32].to_base64(STANDARD);\n+     *     println!(\"base 64 output: {}\", str);\n      * }\n      * ```\n      */\n@@ -172,16 +172,19 @@ impl<'self> FromBase64 for &'self str {\n      *\n      * ```rust\n      * extern mod extra;\n-     * use extra::base64::{ToBase64, FromBase64, standard};\n+     * use extra::base64::{ToBase64, FromBase64, STANDARD};\n      * use std::str;\n      *\n      * fn main () {\n-     *     let hello_str = \"Hello, World\".to_base64(standard);\n-     *     println!(\"{}\", hello_str);\n-     *     let bytes = hello_str.from_base64();\n-     *     println!(\"{:?}\", bytes);\n-     *     let result_str = str::from_utf8(bytes);\n-     *     println!(\"{}\", result_str);\n+     *     let hello_str = bytes!(\"Hello, World\").to_base64(STANDARD);\n+     *     println!(\"base64 output: {}\", hello_str);\n+     *     let res = hello_str.from_base64();\n+     *     if res.is_ok() {\n+     *       let optBytes = str::from_utf8_opt(res.unwrap());\n+     *       if optBytes.is_some() {\n+     *         println!(\"decoded from base64: {}\", optBytes.unwrap());\n+     *       }\n+     *     }\n      * }\n      * ```\n      */"}]}