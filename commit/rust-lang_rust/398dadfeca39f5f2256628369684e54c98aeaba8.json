{"sha": "398dadfeca39f5f2256628369684e54c98aeaba8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5OGRhZGZlY2EzOWY1ZjIyNTY2MjgzNjk2ODRlNTRjOThhZWFiYTg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-19T08:03:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-19T08:04:59Z"}, "message": "rustdoc: Write the full path to each mod", "tree": {"sha": "fe13cd6924048e7f26a8e0fcf3b2eda610f27d6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe13cd6924048e7f26a8e0fcf3b2eda610f27d6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/398dadfeca39f5f2256628369684e54c98aeaba8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/398dadfeca39f5f2256628369684e54c98aeaba8", "html_url": "https://github.com/rust-lang/rust/commit/398dadfeca39f5f2256628369684e54c98aeaba8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/398dadfeca39f5f2256628369684e54c98aeaba8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42e5d451b7c3aacf6e6a589f4e67e23eda4cd3ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/42e5d451b7c3aacf6e6a589f4e67e23eda4cd3ad", "html_url": "https://github.com/rust-lang/rust/commit/42e5d451b7c3aacf6e6a589f4e67e23eda4cd3ad"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "8a7d389865abf76c35bba20094ca25eccfdfb2fe", "filename": "src/rustdoc/gen.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/398dadfeca39f5f2256628369684e54c98aeaba8/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/398dadfeca39f5f2256628369684e54c98aeaba8/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=398dadfeca39f5f2256628369684e54c98aeaba8", "patch": "@@ -63,10 +63,17 @@ fn write_mod(\n     ctxt: ctxt,\n     moddoc: doc::moddoc\n ) {\n-    write_header(ctxt, h2, #fmt(\"Module `%s`\", moddoc.name));\n+    let fullpath = str::connect(moddoc.path + [moddoc.name], \"::\");\n+    write_header(ctxt, h2, #fmt(\"Module `%s`\", fullpath));\n     write_mod_contents(ctxt, moddoc);\n }\n \n+#[test]\n+fn should_write_full_path_to_mod() {\n+    let markdown = test::render(\"mod a { mod b { mod c { } } }\");\n+    assert str::contains(markdown, \"## Module `a::b::c`\");\n+}\n+\n fn write_mod_contents(\n     ctxt: ctxt,\n     doc: doc::moddoc\n@@ -238,6 +245,7 @@ mod test {\n     fn render(source: str) -> str {\n         let srv = astsrv::mk_srv_from_str(source);\n         let doc = extract::from_srv(srv, \"\");\n+        let doc = path_pass::mk_pass()(srv, doc);\n         let doc = attr_pass::mk_pass()(srv, doc);\n         let doc = tystr_pass::mk_pass()(srv, doc);\n         let markdown = write_markdown_str(doc);"}]}