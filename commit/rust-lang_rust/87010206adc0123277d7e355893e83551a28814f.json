{"sha": "87010206adc0123277d7e355893e83551a28814f", "node_id": "C_kwDOAAsO6NoAKDg3MDEwMjA2YWRjMDEyMzI3N2Q3ZTM1NTg5M2U4MzU1MWEyODgxNGY", "commit": {"author": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-09-26T18:48:56Z"}, "committer": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-09-26T19:52:02Z"}, "message": "2229: Consume IfLet expr", "tree": {"sha": "6586cfcc521edab4a22995ece59b1f1b6ed67845", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6586cfcc521edab4a22995ece59b1f1b6ed67845"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87010206adc0123277d7e355893e83551a28814f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87010206adc0123277d7e355893e83551a28814f", "html_url": "https://github.com/rust-lang/rust/commit/87010206adc0123277d7e355893e83551a28814f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87010206adc0123277d7e355893e83551a28814f/comments", "author": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac8dd1b2f24dc62c962172b27433106b4e84dc62", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac8dd1b2f24dc62c962172b27433106b4e84dc62", "html_url": "https://github.com/rust-lang/rust/commit/ac8dd1b2f24dc62c962172b27433106b4e84dc62"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "b5c4d6ac261670f7905fe16d521505bdeb544971", "filename": "compiler/rustc_typeck/src/expr_use_visitor.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87010206adc0123277d7e355893e83551a28814f/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87010206adc0123277d7e355893e83551a28814f/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs?ref=87010206adc0123277d7e355893e83551a28814f", "patch": "@@ -619,6 +619,8 @@ impl<'a, 'tcx> ExprUseVisitor<'a, 'tcx> {\n \n         if let Some(hir::Guard::If(ref e)) = arm.guard {\n             self.consume_expr(e)\n+        } else if let Some(hir::Guard::IfLet(_, ref e)) = arm.guard {\n+            self.consume_expr(e)\n         }\n \n         self.consume_expr(&arm.body);"}, {"sha": "a4cbbc1d25a8e79162208f2f148396b32363a4e8", "filename": "src/test/ui/closures/2229_closure_analysis/issue-88118-2.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/87010206adc0123277d7e355893e83551a28814f/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87010206adc0123277d7e355893e83551a28814f/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.rs?ref=87010206adc0123277d7e355893e83551a28814f", "patch": "@@ -0,0 +1,21 @@\n+// edition:2021\n+#![feature(if_let_guard)]\n+\n+fn print_error_count(registry: &Registry) {\n+    |x: &Registry| {\n+        match &x {\n+            Registry if let _ = registry.try_find_description() => { }\n+            //~^ WARNING: irrefutable `if let` guard pattern\n+            _ => {}\n+        }\n+    };\n+}\n+\n+struct Registry;\n+impl Registry {\n+    pub fn try_find_description(&self) {\n+        unimplemented!()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "d51f3f0eb7b7dd70c9bcfb48aef09808abd9ae4f", "filename": "src/test/ui/closures/2229_closure_analysis/issue-88118-2.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/87010206adc0123277d7e355893e83551a28814f/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87010206adc0123277d7e355893e83551a28814f/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.stderr?ref=87010206adc0123277d7e355893e83551a28814f", "patch": "@@ -0,0 +1,19 @@\n+warning: irrefutable `if let` guard pattern\n+  --> $DIR/issue-88118-2.rs:7:29\n+   |\n+LL |             Registry if let _ = registry.try_find_description() => { }\n+   |                             ^\n+   |\n+   = note: `#[warn(irrefutable_let_patterns)]` on by default\n+   = note: this pattern will always match, so the guard is useless\n+   = help: consider removing the guard and adding a `let` inside the match arm\n+\n+error[E0507]: cannot move out of `*registry` which is behind a shared reference\n+  --> $DIR/issue-88118-2.rs:7:33\n+   |\n+LL |             Registry if let _ = registry.try_find_description() => { }\n+   |                                 ^^^^^^^^ move occurs because `*registry` has type `Registry`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0507`."}]}