{"sha": "c430fa8084277c9ee36b022dd028ed302b3f5afe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MzBmYTgwODQyNzdjOWVlMzZiMDIyZGQwMjhlZDMwMmIzZjVhZmU=", "commit": {"author": {"name": "toidiu", "email": "toidiu@protonmail.com", "date": "2017-09-09T20:56:12Z"}, "committer": {"name": "toidiu", "email": "toidiu@protonmail.com", "date": "2017-09-09T20:56:12Z"}, "message": "documentation update to demonstrate mutability", "tree": {"sha": "e5dd903c3f59946f1e7deb5ae69d4f7fdf0ee4a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5dd903c3f59946f1e7deb5ae69d4f7fdf0ee4a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c430fa8084277c9ee36b022dd028ed302b3f5afe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c430fa8084277c9ee36b022dd028ed302b3f5afe", "html_url": "https://github.com/rust-lang/rust/commit/c430fa8084277c9ee36b022dd028ed302b3f5afe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c430fa8084277c9ee36b022dd028ed302b3f5afe/comments", "author": null, "committer": null, "parents": [{"sha": "088216fb997c9cb12ce049bbe7975d1f657551ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/088216fb997c9cb12ce049bbe7975d1f657551ca", "html_url": "https://github.com/rust-lang/rust/commit/088216fb997c9cb12ce049bbe7975d1f657551ca"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "e6b28d4d1c2512b0c3f4302f6137ec34c4fd94d8", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c430fa8084277c9ee36b022dd028ed302b3f5afe/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c430fa8084277c9ee36b022dd028ed302b3f5afe/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=c430fa8084277c9ee36b022dd028ed302b3f5afe", "patch": "@@ -362,16 +362,25 @@ impl str {\n     /// # Examples\n     ///\n     /// ```\n-    /// let mut v = String::from(\"\ud83d\uddfb\u2208\ud83c\udf0f\");\n-    ///\n-    /// assert_eq!(Some(\"\ud83d\uddfb\"), v.get_mut(0..4).map(|v| &*v));\n-    ///\n-    /// // indices not on UTF-8 sequence boundaries\n-    /// assert!(v.get_mut(1..).is_none());\n-    /// assert!(v.get_mut(..8).is_none());\n+    /// use std::ascii::AsciiExt;\n     ///\n+    /// let mut v = String::from(\"hello\");\n+    /// // correct length\n+    /// assert!(v.get_mut(0..5).is_some());\n     /// // out of bounds\n     /// assert!(v.get_mut(..42).is_none());\n+    /// assert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n+    ///\n+    /// assert_eq!(\"hello\", v);\n+    /// {\n+    ///     let s = v.get_mut(0..2);\n+    ///     let s = s.map(|s| {\n+    ///         s.make_ascii_uppercase();\n+    ///         &*s\n+    ///     });\n+    ///     assert_eq!(Some(\"HE\"), s);\n+    /// }\n+    /// assert_eq!(\"HEllo\", v);\n     /// ```\n     #[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]\n     #[inline]"}]}