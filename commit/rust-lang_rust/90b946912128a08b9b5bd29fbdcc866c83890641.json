{"sha": "90b946912128a08b9b5bd29fbdcc866c83890641", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYjk0NjkxMjEyOGEwOGI5YjViZDI5ZmJkY2M4NjZjODM4OTA2NDE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-10-05T16:15:52Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-10-05T16:15:52Z"}, "message": "Revert \"Optimize VecDeque::append\"\n\nThis reverts commit 11e488b64fed181820280d494d4fcc157ee1adc5.", "tree": {"sha": "033273b5b8886d88223d4a34baa9b105a9d2e2db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/033273b5b8886d88223d4a34baa9b105a9d2e2db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90b946912128a08b9b5bd29fbdcc866c83890641", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90b946912128a08b9b5bd29fbdcc866c83890641", "html_url": "https://github.com/rust-lang/rust/commit/90b946912128a08b9b5bd29fbdcc866c83890641", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90b946912128a08b9b5bd29fbdcc866c83890641/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a41cfabba83125b212800aa62ebda0c3691ba93", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a41cfabba83125b212800aa62ebda0c3691ba93", "html_url": "https://github.com/rust-lang/rust/commit/9a41cfabba83125b212800aa62ebda0c3691ba93"}], "stats": {"total": 29, "additions": 2, "deletions": 27}, "files": [{"sha": "d49cb9857740d6d096a6e83420522a423d9b1f66", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 2, "deletions": 27, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/90b946912128a08b9b5bd29fbdcc866c83890641/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90b946912128a08b9b5bd29fbdcc866c83890641/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=90b946912128a08b9b5bd29fbdcc866c83890641", "patch": "@@ -202,22 +202,6 @@ impl<T> VecDeque<T> {\n                                  len);\n     }\n \n-    /// Copies all values from `src` to `self`, wrapping around if needed.\n-    /// Assumes capacity is sufficient.\n-    #[inline]\n-    unsafe fn copy_slice(&mut self, src: &[T]) {\n-        let dst_high_ptr = self.ptr().add(self.head);\n-        let dst_high_len = self.cap() - self.head;\n-\n-        let split = cmp::min(src.len(), dst_high_len);\n-        let (src_high, src_low) = src.split_at(split);\n-\n-        ptr::copy_nonoverlapping(src_high.as_ptr(), dst_high_ptr, src_high.len());\n-        ptr::copy_nonoverlapping(src_low.as_ptr(), self.ptr(), src_low.len());\n-\n-        self.head = self.wrap_add(self.head, src.len());\n-    }\n-\n     /// Copies a potentially wrapping block of memory len long from src to dest.\n     /// (abs(dst - src) + len) must be no larger than cap() (There must be at\n     /// most one continuous overlapping region between src and dest).\n@@ -1850,17 +1834,8 @@ impl<T> VecDeque<T> {\n     #[inline]\n     #[stable(feature = \"append\", since = \"1.4.0\")]\n     pub fn append(&mut self, other: &mut Self) {\n-        // Guarantees there is space in `self` for `other\n-        self.reserve(other.len());\n-\n-        unsafe {\n-            let (src_high, src_low) = other.as_slices();\n-            self.copy_slice(src_low);\n-            self.copy_slice(src_high);\n-        }\n-\n-        // Some values now exist in both `other` and `self` but are made inaccessible in `other`.\n-        other.tail = other.head;\n+        // naive impl\n+        self.extend(other.drain(..));\n     }\n \n     /// Retains only the elements specified by the predicate."}]}