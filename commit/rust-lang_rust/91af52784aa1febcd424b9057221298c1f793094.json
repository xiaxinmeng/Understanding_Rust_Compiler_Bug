{"sha": "91af52784aa1febcd424b9057221298c1f793094", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxYWY1Mjc4NGFhMWZlYmNkNDI0YjkwNTcyMjEyOThjMWY3OTMwOTQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-02-13T19:21:22Z"}, "committer": {"name": "Nick Desaulniers", "email": "ndesaulniers@mozilla.com", "date": "2013-02-15T17:25:16Z"}, "message": "Fix windows build error.  `buf` is borrowed by the call to\n`as_mut_buf()` and so we must invoke `slice()` outside of that\ncall.", "tree": {"sha": "57a7a2f6e08742faa6ab8f4fc4a59c515793b4af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57a7a2f6e08742faa6ab8f4fc4a59c515793b4af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91af52784aa1febcd424b9057221298c1f793094", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91af52784aa1febcd424b9057221298c1f793094", "html_url": "https://github.com/rust-lang/rust/commit/91af52784aa1febcd424b9057221298c1f793094", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91af52784aa1febcd424b9057221298c1f793094/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d62a4a52e90cf5d5c1c0229db64e5683dffe732", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d62a4a52e90cf5d5c1c0229db64e5683dffe732", "html_url": "https://github.com/rust-lang/rust/commit/5d62a4a52e90cf5d5c1c0229db64e5683dffe732"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "8f3f02c82e696c7f405bd3a763b7aef8b0fddae4", "filename": "src/libcore/os.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/91af52784aa1febcd424b9057221298c1f793094/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91af52784aa1febcd424b9057221298c1f793094/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=91af52784aa1febcd424b9057221298c1f793094", "patch": "@@ -108,21 +108,24 @@ pub mod win32 {\n             let mut res = None;\n             let mut done = false;\n             while !done {\n-                let mut buf = vec::from_elem(n as uint, 0u16);\n+                let mut k: DWORD = 0;\n+                let buf = vec::cast_to_mut(vec::from_elem(n as uint, 0u16));\n                 do vec::as_mut_buf(buf) |b, _sz| {\n-                    let k : DWORD = f(b, TMPBUF_SZ as DWORD);\n+                    k = f(b, TMPBUF_SZ as DWORD);\n                     if k == (0 as DWORD) {\n                         done = true;\n                     } else if (k == n &&\n                                libc::GetLastError() ==\n                                libc::ERROR_INSUFFICIENT_BUFFER as DWORD) {\n                         n *= (2 as DWORD);\n                     } else {\n-                        let sub = vec::slice(buf, 0u, k as uint);\n-                        res = option::Some(str::from_utf16(sub));\n                         done = true;\n                     }\n                 }\n+                if k != 0 && done {\n+                    let sub = vec::slice(buf, 0u, k as uint);\n+                    res = option::Some(str::from_utf16(sub));\n+                }\n             }\n             return res;\n         }"}]}