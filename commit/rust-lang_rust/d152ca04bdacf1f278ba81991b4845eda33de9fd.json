{"sha": "d152ca04bdacf1f278ba81991b4845eda33de9fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNTJjYTA0YmRhY2YxZjI3OGJhODE5OTFiNDg0NWVkYTMzZGU5ZmQ=", "commit": {"author": {"name": "Kit Freddura", "email": "kitfreddura@gmail.com", "date": "2016-10-02T20:44:23Z"}, "committer": {"name": "Kit Freddura", "email": "kitfreddura@gmail.com", "date": "2016-10-02T20:44:23Z"}, "message": "updated zero_div_zero.rs", "tree": {"sha": "9cb88d507469181ae98f47897a660857ff45767e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cb88d507469181ae98f47897a660857ff45767e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d152ca04bdacf1f278ba81991b4845eda33de9fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d152ca04bdacf1f278ba81991b4845eda33de9fd", "html_url": "https://github.com/rust-lang/rust/commit/d152ca04bdacf1f278ba81991b4845eda33de9fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d152ca04bdacf1f278ba81991b4845eda33de9fd/comments", "author": {"login": "kitfre", "id": 10645601, "node_id": "MDQ6VXNlcjEwNjQ1NjAx", "avatar_url": "https://avatars.githubusercontent.com/u/10645601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kitfre", "html_url": "https://github.com/kitfre", "followers_url": "https://api.github.com/users/kitfre/followers", "following_url": "https://api.github.com/users/kitfre/following{/other_user}", "gists_url": "https://api.github.com/users/kitfre/gists{/gist_id}", "starred_url": "https://api.github.com/users/kitfre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kitfre/subscriptions", "organizations_url": "https://api.github.com/users/kitfre/orgs", "repos_url": "https://api.github.com/users/kitfre/repos", "events_url": "https://api.github.com/users/kitfre/events{/privacy}", "received_events_url": "https://api.github.com/users/kitfre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kitfre", "id": 10645601, "node_id": "MDQ6VXNlcjEwNjQ1NjAx", "avatar_url": "https://avatars.githubusercontent.com/u/10645601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kitfre", "html_url": "https://github.com/kitfre", "followers_url": "https://api.github.com/users/kitfre/followers", "following_url": "https://api.github.com/users/kitfre/following{/other_user}", "gists_url": "https://api.github.com/users/kitfre/gists{/gist_id}", "starred_url": "https://api.github.com/users/kitfre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kitfre/subscriptions", "organizations_url": "https://api.github.com/users/kitfre/orgs", "repos_url": "https://api.github.com/users/kitfre/repos", "events_url": "https://api.github.com/users/kitfre/events{/privacy}", "received_events_url": "https://api.github.com/users/kitfre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab9435a6d4334181c09bd56d55cfdb58b175f606", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab9435a6d4334181c09bd56d55cfdb58b175f606", "html_url": "https://github.com/rust-lang/rust/commit/ab9435a6d4334181c09bd56d55cfdb58b175f606"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "64ec3e5eec704ff1ab478eb61328fbb0fa88ff05", "filename": "clippy_lints/src/zero_div_zero.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d152ca04bdacf1f278ba81991b4845eda33de9fd/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d152ca04bdacf1f278ba81991b4845eda33de9fd/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_div_zero.rs?ref=d152ca04bdacf1f278ba81991b4845eda33de9fd", "patch": "@@ -38,8 +38,8 @@ impl LateLintPass for Pass {\n             // do something like 0.0/(2.0 - 2.0), but it would be nice to warn on that case too.\n             let Some(Constant::Float(ref lhs_value, lhs_width)) = constant_simple(left),\n             let Some(Constant::Float(ref rhs_value, rhs_width)) = constant_simple(right),\n-            let Some(0.0) = lhs_value.parse().ok(),\n-            let Some(0.0) = rhs_value.parse().ok()\n+            let Ok(0.0) = lhs_value.parse(),\n+            let Ok(0.0) = rhs_value.parse()\n         ], {\n             // since we're about to suggest a use of std::f32::NaN or std::f64::NaN,\n             // match the precision of the literals that are given."}]}