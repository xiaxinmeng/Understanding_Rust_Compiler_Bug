{"sha": "042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MjkxN2U2ZTNiYzNjYjA1ZTA4ZTQ4N2VlOGE3ZDBkNGFlM2FmNmI=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-04-29T10:10:42Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-04-29T10:10:42Z"}, "message": "Configuration settings and source maps support", "tree": {"sha": "a6decd4bf82f575d39e13fccdbae626f70850e9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6decd4bf82f575d39e13fccdbae626f70850e9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b", "html_url": "https://github.com/rust-lang/rust/commit/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48d6e828f1878436bb8633a1e7df02a6383d991a", "url": "https://api.github.com/repos/rust-lang/rust/commits/48d6e828f1878436bb8633a1e7df02a6383d991a", "html_url": "https://github.com/rust-lang/rust/commit/48d6e828f1878436bb8633a1e7df02a6383d991a"}], "stats": {"total": 62, "additions": 52, "deletions": 10}, "files": [{"sha": "aa8065171577dae658f1fe866538fcf408add152", "filename": "editors/code/package.json", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b", "patch": "@@ -388,6 +388,25 @@\n                     \"description\": \"Enable Proc macro support, cargo.loadOutDirsFromCheck must be enabled.\",\n                     \"type\": \"boolean\",\n                     \"default\": false\n+                },\n+                \"rust-analyzer.debug.engine\": {\n+                    \"type\": [\n+                        \"null\",\n+                        \"string\"\n+                    ],\n+                    \"enum\": [\n+                        \"ms-vscode.cpptools\",\n+                        \"vadimcn.vscode-lldb\"\n+                    ],\n+                    \"default\": null,\n+                    \"description\": \"Preffered debug engine.\"\n+                },\n+                \"rust-analyzer.debug.sourceFileMap\" : {\n+                    \"type\":\"object\",\n+                    \"description\": \"Optional source file mappings passed to the debug engine.\",\n+                    \"default\": {\n+                        \"<source-path>\": \"<target-path>\"\n+                    }\n                 }\n             }\n         },"}, {"sha": "5999187f4b860ea320f9dc94ce7f5a4540026a9a", "filename": "editors/code/src/cargo.ts", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b/editors%2Fcode%2Fsrc%2Fcargo.ts", "raw_url": "https://github.com/rust-lang/rust/raw/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b/editors%2Fcode%2Fsrc%2Fcargo.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcargo.ts?ref=042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b", "patch": "@@ -1,4 +1,3 @@\n-import { window } from 'vscode';\n import * as cp from 'child_process';\n import * as readline from 'readline';\n "}, {"sha": "befb8b3663f10895aadd91cc4e8b3d85e73d2d40", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b", "patch": "@@ -63,7 +63,7 @@ export function runSingle(ctx: Ctx): Cmd {\n     };\n }\n \n-function getLldbDebugConfig(config: ra.Runnable) : vscode.DebugConfiguration {\n+function getLldbDebugConfig(config: ra.Runnable, sourceFileMap: Record<string, string>): vscode.DebugConfiguration {\n     return {\n         type: \"lldb\",\n         request: \"launch\",\n@@ -72,11 +72,12 @@ function getLldbDebugConfig(config: ra.Runnable) : vscode.DebugConfiguration {\n             args: config.args,\n         },\n         args: config.extraArgs,\n-        cwd: config.cwd\n+        cwd: config.cwd,\n+        sourceMap: sourceFileMap\n     };\n }\n \n-async function getCppvsDebugConfig(config: ra.Runnable) : Promise<vscode.DebugConfiguration> {\n+async function getCppvsDebugConfig(config: ra.Runnable, sourceFileMap: Record<string, string>): Promise<vscode.DebugConfiguration> {\n     let cargo = new Cargo(config.cwd || '.');\n     let executable = await cargo.executableFromArgs(config.args, config.extraArgs);\n \n@@ -87,6 +88,7 @@ async function getCppvsDebugConfig(config: ra.Runnable) : Promise<vscode.DebugCo\n         program: executable,\n         args: config.extraArgs,\n         cwd: config.cwd,\n+        sourceFileMap: sourceFileMap,\n     };\n }\n \n@@ -95,15 +97,30 @@ export function debugSingle(ctx: Ctx): Cmd {\n         const editor = ctx.activeRustEditor;\n         if (!editor) return;\n \n-        const mscpp = vscode.extensions.getExtension(\"ms-vscode.cpptools\");\n-        const lldb = vscode.extensions.getExtension(\"vadimcn.vscode-lldb\");\n+        const lldbId = \"vadimcn.vscode-lldb\";\n+        const cpptoolsId = \"ms-vscode.cpptools\";\n+\n+        let debugEngineId = ctx.config.debug.engine;\n+        let debugEngine = null;\n+        if (!debugEngineId) {\n+            debugEngine = vscode.extensions.getExtension(lldbId);\n+            if (!debugEngine) {\n+                debugEngine = vscode.extensions.getExtension(cpptoolsId);\n+            }\n+        }\n+        else {\n+            debugEngine = vscode.extensions.getExtension(debugEngineId);\n+        }\n \n-        if (!(lldb || mscpp)) {\n-            vscode.window.showErrorMessage(\"Install `vadimcn.vscode-lldb` or `ms-vscode.cpptools` extension for debugging\");\n+        if (!debugEngine) {\n+            vscode.window.showErrorMessage(`Install [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=${lldbId})`\n+            + ` or [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=${cpptoolsId}) extension for debugging.`);\n             return;\n         }\n \n-        const debugConfig = lldb ? getLldbDebugConfig(config) : await getCppvsDebugConfig(config);\n+        const debugConfig = lldbId == debugEngine.id\n+            ? getLldbDebugConfig(config, ctx.config.debug.sourceFileMap)\n+            : await getCppvsDebugConfig(config, ctx.config.debug.sourceFileMap);\n \n         return vscode.debug.startDebugging(undefined, debugConfig);\n     };"}, {"sha": "7764a217943f651dfe3d79fa499df9b02753af25", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=042917e6e3bc3cb05e08e487ee8a7d0d4ae3af6b", "patch": "@@ -92,7 +92,6 @@ export class Config {\n     get askBeforeDownload() { return this.get<boolean>(\"updates.askBeforeDownload\"); }\n     get traceExtension() { return this.get<boolean>(\"trace.extension\"); }\n \n-\n     get inlayHints() {\n         return {\n             typeHints: this.get<boolean>(\"inlayHints.typeHints\"),\n@@ -107,4 +106,12 @@ export class Config {\n             command: this.get<string>(\"checkOnSave.command\"),\n         };\n     }\n+\n+    get debug() {\n+        return {\n+            engine: this.get<null | string>(\"debug.engine\"),\n+            sourceFileMap: this.get<Record<string, string>>(\"debug.sourceFileMap\"),\n+        };\n+    }\n+\n }"}]}