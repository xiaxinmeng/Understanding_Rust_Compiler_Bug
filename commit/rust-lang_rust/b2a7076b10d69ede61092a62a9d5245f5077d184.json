{"sha": "b2a7076b10d69ede61092a62a9d5245f5077d184", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyYTcwNzZiMTBkNjllZGU2MTA5MmE2MmE5ZDUyNDVmNTA3N2QxODQ=", "commit": {"author": {"name": "Cl\u00e9ment Renault", "email": "clement@meilisearch.com", "date": "2020-12-10T18:13:34Z"}, "committer": {"name": "Cl\u00e9ment Renault", "email": "clement@meilisearch.com", "date": "2020-12-10T18:44:37Z"}, "message": "Implement a user friendly Debug on GroupBy and GroupByMut", "tree": {"sha": "eaf063081a48b278c71b4c5094cbcd599cc62c61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eaf063081a48b278c71b4c5094cbcd599cc62c61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2a7076b10d69ede61092a62a9d5245f5077d184", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEAUNXpSBlykwfjB4xkq2k6TXnH6QFAl/SbJUACgkQkq2k6TXn\nH6RdkRAAkxURnE0oZ32b2J4Xt6V98jFRuqBgUBwF94pv4MiDVLQkgjK5AlLldGri\nHRgilBRlaKog6b34Tyl+CxuHH2iuMYklAAouCdCzGFQEUiy8UWm3rTmiEc9uI44O\nH4SA1tGswIjhYfu/D96FUoEgbh4ZhLGOZZo3H9H75EPnS+uOAeT9qhTeGbXNaK5i\nKv776sZcVuv6wrzDp1OycR4UmVlQbbmHcHtgl0aW0VkYW6FwGmxuKyCHSoI9P4k6\nyKKQnYzd22o76YKf/c0/ZZycQbFNcxzXicQp2WZi3kHvTdl8jKlKx7CxY6Dqr3Tt\nA16OFV+LU4WPyQ5FZ+JwkLB8y2J8BHQ3LruAwnbyHdGeQBtdmx9IgnpzQ6j9rMLy\nU4Sj1qf6sF8S/V8/b8dLx3RWrg+6zVfXIPVwN5bsL2josXUumwWNFppIwW2LiOm1\nGerj30Nr6WZ5gIhIMvJ8+dM+HqoJohaOY4rqFMZViLh4ALC/7yWCX9foZqd8UIM5\nLQ7PvAqpZlPABfffKg2V+eYlr+b3NktgGoNtag85Gd5kkVg+sOp0vWBF3F9Qzfwf\n+ltIthzJjAYvE9NUep+uyxa3KNOLD2Rb1Fg1b2+AFCcc/A4Jv5SG3LwFIiKY7sVB\nnXytpNhdoPNNrCsoKvf4jxzgA+wg4OfTto2XVrooT3NXhLHHwto=\n=lyUP\n-----END PGP SIGNATURE-----", "payload": "tree eaf063081a48b278c71b4c5094cbcd599cc62c61\nparent 7952ea5a04aa34dc5441a47f7d4d227193c8fdf6\nauthor Cl\u00e9ment Renault <clement@meilisearch.com> 1607624014 +0100\ncommitter Cl\u00e9ment Renault <clement@meilisearch.com> 1607625877 +0100\n\nImplement a user friendly Debug on GroupBy and GroupByMut\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2a7076b10d69ede61092a62a9d5245f5077d184", "html_url": "https://github.com/rust-lang/rust/commit/b2a7076b10d69ede61092a62a9d5245f5077d184", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2a7076b10d69ede61092a62a9d5245f5077d184/comments", "author": {"login": "Kerollmops", "id": 3610253, "node_id": "MDQ6VXNlcjM2MTAyNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3610253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kerollmops", "html_url": "https://github.com/Kerollmops", "followers_url": "https://api.github.com/users/Kerollmops/followers", "following_url": "https://api.github.com/users/Kerollmops/following{/other_user}", "gists_url": "https://api.github.com/users/Kerollmops/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kerollmops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kerollmops/subscriptions", "organizations_url": "https://api.github.com/users/Kerollmops/orgs", "repos_url": "https://api.github.com/users/Kerollmops/repos", "events_url": "https://api.github.com/users/Kerollmops/events{/privacy}", "received_events_url": "https://api.github.com/users/Kerollmops/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kerollmops", "id": 3610253, "node_id": "MDQ6VXNlcjM2MTAyNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3610253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kerollmops", "html_url": "https://github.com/Kerollmops", "followers_url": "https://api.github.com/users/Kerollmops/followers", "following_url": "https://api.github.com/users/Kerollmops/following{/other_user}", "gists_url": "https://api.github.com/users/Kerollmops/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kerollmops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kerollmops/subscriptions", "organizations_url": "https://api.github.com/users/Kerollmops/orgs", "repos_url": "https://api.github.com/users/Kerollmops/repos", "events_url": "https://api.github.com/users/Kerollmops/events{/privacy}", "received_events_url": "https://api.github.com/users/Kerollmops/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7952ea5a04aa34dc5441a47f7d4d227193c8fdf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6", "html_url": "https://github.com/rust-lang/rust/commit/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "6bb9cf99402eec376f1f44039aff7fb3756f54ef", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b2a7076b10d69ede61092a62a9d5245f5077d184/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2a7076b10d69ede61092a62a9d5245f5077d184/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=b2a7076b10d69ede61092a62a9d5245f5077d184", "patch": "@@ -2976,7 +2976,6 @@ unsafe impl<'a, T> TrustedRandomAccess for IterMut<'a, T> {\n /// [`group_by`]: ../../std/primitive.slice.html#method.group_by\n /// [slices]: ../../std/primitive.slice.html\n #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n-#[derive(Debug)] // FIXME implement Debug to be more user friendly\n pub struct GroupBy<'a, T: 'a, P> {\n     slice: &'a [T],\n     predicate: P,\n@@ -3048,6 +3047,13 @@ where\n #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n impl<'a, T: 'a, P> FusedIterator for GroupBy<'a, T, P> where P: FnMut(&T, &T) -> bool {}\n \n+#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+impl<'a, T: 'a + fmt::Debug, P> fmt::Debug for GroupBy<'a, T, P> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_struct(\"GroupBy\").field(\"slice\", &self.slice).finish()\n+    }\n+}\n+\n /// An iterator over slice in (non-overlapping) mutable chunks separated\n /// by a predicate.\n ///\n@@ -3056,7 +3062,6 @@ impl<'a, T: 'a, P> FusedIterator for GroupBy<'a, T, P> where P: FnMut(&T, &T) ->\n /// [`group_by_mut`]: ../../std/primitive.slice.html#method.group_by_mut\n /// [slices]: ../../std/primitive.slice.html\n #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n-#[derive(Debug)] // FIXME implement Debug to be more user friendly\n pub struct GroupByMut<'a, T: 'a, P> {\n     slice: &'a mut [T],\n     predicate: P,\n@@ -3129,3 +3134,10 @@ where\n \n #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n impl<'a, T: 'a, P> FusedIterator for GroupByMut<'a, T, P> where P: FnMut(&T, &T) -> bool {}\n+\n+#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+impl<'a, T: 'a + fmt::Debug, P> fmt::Debug for GroupByMut<'a, T, P> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_struct(\"GroupByMut\").field(\"slice\", &self.slice).finish()\n+    }\n+}"}]}