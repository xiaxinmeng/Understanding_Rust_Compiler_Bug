{"sha": "518a5a4898799e4b6732ac217f85def83fc462aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOGE1YTQ4OTg3OTllNGI2NzMyYWMyMTdmODVkZWY4M2ZjNDYyYWE=", "commit": {"author": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2018-09-17T16:44:04Z"}, "committer": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2018-10-18T11:06:52Z"}, "message": "Updated RELEASES.md for 1.30.0", "tree": {"sha": "be1224192df0177da2b40440e3296061ff707e9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be1224192df0177da2b40440e3296061ff707e9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/518a5a4898799e4b6732ac217f85def83fc462aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/518a5a4898799e4b6732ac217f85def83fc462aa", "html_url": "https://github.com/rust-lang/rust/commit/518a5a4898799e4b6732ac217f85def83fc462aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/518a5a4898799e4b6732ac217f85def83fc462aa/comments", "author": null, "committer": null, "parents": [{"sha": "e1643a8968753226dab7ab3c9fee826f097550f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1643a8968753226dab7ab3c9fee826f097550f2", "html_url": "https://github.com/rust-lang/rust/commit/e1643a8968753226dab7ab3c9fee826f097550f2"}], "stats": {"total": 126, "additions": 126, "deletions": 0}, "files": [{"sha": "b40897a7509fa8e81a252589d0d5ff88398a8cc4", "filename": "RELEASES.md", "status": "modified", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/518a5a4898799e4b6732ac217f85def83fc462aa/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/518a5a4898799e4b6732ac217f85def83fc462aa/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=518a5a4898799e4b6732ac217f85def83fc462aa", "patch": "@@ -1,3 +1,124 @@\n+Version 1.30.0 (2018-10-25)\n+==========================\n+\n+Language\n+--------\n+- [Procedural macros are now available.][52081] These kinds of macros allow for\n+  more powerful code generation, there is a [new chapter available][proc-macros]\n+  in Rust Programming Language book that goes further in depth.\n+- [You can now use keywords as identifiers using the raw identifiers\n+  syntax (`r#`).][53236] e.g. `let r#bool = true;`\n+- [Using anonymous parameters in traits is now deprecated with a warning and\n+  will be a hard error in the 2018 edition.][53272]\n+- [You can now use `crate` in paths.][54404] This allows you to refer to the\n+  crate root in the path. e.g. `use crate::foo;` refers to `foo` in `src/lib.rs`.\n+- [Using a external crate now no longer requires being prefixed with `::`.][54404]\n+  e.g. previously using a external crate in a module without a use statement\n+  required `let json = ::serde_json::from_str(foo);` can now be written\n+  as `let json = serde_json::from_str(foo);`.\n+- [You can now apply the `#[used]` attribute to static items to prevent the\n+  compiler from optimising them away even if they appear to be unused.][51363]\n+  e.g. `#[used] static FOO: u32 = 1;`\n+- [You can now import and reexport macros from other crates with the `use`\n+  syntax.][50911] Macros exported with `#[macro_export]` are now placed into\n+  the root module of the crate. If your macro relies on calling other local\n+  macros it is recommended to export with the\n+  `#[macro_export(local_inner_macros)]` attribute so that users won't have to\n+  import those macros.\n+- [`mod.rs` files are now optional.][54146] Previously if you had a `foo` module\n+  with a `bar` submodule, you would have `src/foo/mod.rs` and `src/foo/bar.rs`.\n+  Now you can have `src/foo.rs` and `src/foo/bar.rs` to achieve the same effect.\n+- [You can now catch visibility keywords (e.g. `pub`, `pub(crate)`) in macros\n+  using the `vis` specifier.][53370]\n+- [Non-macro attributes now allow all forms of literals not just\n+  strings.][53044] e.g. Previously you would write `#[attr(\"true\")]` you can now\n+  write `#[attr(true)]`.\n+- [You can now specify a function to handle a panic in the Rust runtime with the\n+  `#[panic_handler]` attribute.][51366]\n+\n+Compiler\n+--------\n+- [Added the `riscv32imc-unknown-none-elf` target.][53822]\n+- [Added the `aarch64-unknown-netbsd` target][53165]\n+\n+Libraries\n+---------\n+- [`ManuallyDrop` now allows the inner type to be unsized.][53033]\n+\n+Stabilized APIs\n+---------------\n+- [`Ipv4Addr::BROADCAST`]\n+- [`Ipv4Addr::LOCALHOST`]\n+- [`Ipv4Addr::UNSPECIFIED`]\n+- [`Ipv6Addr::LOCALHOST`]\n+- [`Ipv6Addr::UNSPECIFIED`]\n+- [`Iterator::find_map`]\n+\n+  The following methods are a replacement methods for `trim_left`, `trim_right`,\n+  `trim_left_matches`, and `trim_right_matches`. Which will be deprecated\n+  in 1.33.0.\n+- [`str::trim_end_matches`]\n+- [`str::trim_end`]\n+- [`str::trim_start_matches`]\n+- [`str::trim_start`]\n+\n+Cargo\n+----\n+- [`cargo run` doesn't require specifying a package in workspaces.][cargo/5877]\n+- [`cargo doc` now supports `--message-format=json`.][cargo/5878] This is\n+  equivalent to calling `rustdoc --error-format=json`.\n+- [You can specify which edition to create a project in cargo\n+  with `cargo new --edition`.][cargo/5984] Currently only `2015` is a\n+  valid option.\n+- [Cargo will now provide a progress bar for builds.][cargo/5995]\n+\n+Misc\n+----\n+- [`rustdoc` allows you to specify what edition to treat your code as with the\n+  `--edition` option.][54057]\n+- [`rustdoc` now has the `--color` (Specify whether to output color) and\n+  `--error-format` (Specify error format e.g. `json`) options.][53003]\n+- [We now distribute a `rust-gdbgui` script that invokes `gdbgui` with Rust\n+  debug symbols.][53774]\n+- [Attributes from Rust tools such as `rustfmt` or `clippy` are now\n+  available.][53459] e.g. `#[rustfmt::skip]` will skip formatting the next item.\n+\n+[50911]: https://github.com/rust-lang/rust/pull/50911/\n+[51363]: https://github.com/rust-lang/rust/pull/51363/\n+[51366]: https://github.com/rust-lang/rust/pull/51366/\n+[52081]: https://github.com/rust-lang/rust/pull/52081/\n+[53003]: https://github.com/rust-lang/rust/pull/53003/\n+[53033]: https://github.com/rust-lang/rust/pull/53033/\n+[53044]: https://github.com/rust-lang/rust/pull/53044/\n+[53165]: https://github.com/rust-lang/rust/pull/53165/\n+[53213]: https://github.com/rust-lang/rust/pull/53213/\n+[53236]: https://github.com/rust-lang/rust/pull/53236/\n+[53272]: https://github.com/rust-lang/rust/pull/53272/\n+[53370]: https://github.com/rust-lang/rust/pull/53370/\n+[53459]: https://github.com/rust-lang/rust/pull/53459/\n+[53774]: https://github.com/rust-lang/rust/pull/53774/\n+[53822]: https://github.com/rust-lang/rust/pull/53822/\n+[54057]: https://github.com/rust-lang/rust/pull/54057/\n+[54146]: https://github.com/rust-lang/rust/pull/54146/\n+[54404]: https://github.com/rust-lang/rust/pull/54404/\n+[cargo/5877]: https://github.com/rust-lang/cargo/pull/5877/\n+[cargo/5878]: https://github.com/rust-lang/cargo/pull/5878/\n+[cargo/5984]: https://github.com/rust-lang/cargo/pull/5984/\n+[cargo/5995]: https://github.com/rust-lang/cargo/pull/5995/\n+[proc-macros]: https://doc.rust-lang.org/book/2018-edition/ch19-06-macros.html\n+\n+[`Ipv4Addr::BROADCAST`]: https://doc.rust-lang.org/nightly/std/net/struct.Ipv4Addr.html#associatedconstant.BROADCAST\n+[`Ipv4Addr::LOCALHOST`]: https://doc.rust-lang.org/nightly/std/net/struct.Ipv4Addr.html#associatedconstant.LOCALHOST\n+[`Ipv4Addr::UNSPECIFIED`]: https://doc.rust-lang.org/nightly/std/net/struct.Ipv4Addr.html#associatedconstant.UNSPECIFIED\n+[`Ipv6Addr::LOCALHOST`]: https://doc.rust-lang.org/nightly/std/net/struct.Ipv6Addr.html#associatedconstant.LOCALHOST\n+[`Ipv6Addr::UNSPECIFIED`]: https://doc.rust-lang.org/nightly/std/net/struct.Ipv6Addr.html#associatedconstant.UNSPECIFIED\n+[`Iterator::find_map`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find_map\n+[`str::trim_end_matches`]: https://doc.rust-lang.org/nightly/std/primitive.str.html#method.trim_end_matches\n+[`str::trim_end`]: https://doc.rust-lang.org/nightly/std/primitive.str.html#method.trim_end\n+[`str::trim_start_matches`]: https://doc.rust-lang.org/nightly/std/primitive.str.html#method.trim_start_matches\n+[`str::trim_start`]: https://doc.rust-lang.org/nightly/std/primitive.str.html#method.trim_start\n+\n+\n Version 1.29.2 (2018-10-11)\n ===========================\n \n@@ -6,6 +127,7 @@ Version 1.29.2 (2018-10-11)\n \n [54639]: https://github.com/rust-lang/rust/pull/54639\n \n+\n Version 1.29.1 (2018-09-25)\n ===========================\n \n@@ -19,6 +141,7 @@ Security Notes\n   Thank you to Scott McMurray for responsibily disclosing this vulnerability to\n   us.\n \n+\n Version 1.29.0 (2018-09-13)\n ==========================\n \n@@ -73,7 +196,10 @@ Compatibility Notes\n   Consider using the `home_dir` function from\n   https://crates.io/crates/dirs instead.\n - [`rustc` will no longer silently ignore invalid data in target spec.][52330]\n+- [`cfg` attributes and `--cfg` command line flags are now more\n+  strictly validated.][53893]\n \n+[53893]: https://github.com/rust-lang/rust/pull/53893/\n [52861]: https://github.com/rust-lang/rust/pull/52861/\n [52656]: https://github.com/rust-lang/rust/pull/52656/\n [52239]: https://github.com/rust-lang/rust/pull/52239/"}]}