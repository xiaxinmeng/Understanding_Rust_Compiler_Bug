{"sha": "04a884726a5a332aefd0af96c8d702b0830e5375", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0YTg4NDcyNmE1YTMzMmFlZmQwYWY5NmM4ZDcwMmIwODMwZTUzNzU=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2018-01-23T01:04:24Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2018-01-23T01:04:24Z"}, "message": "rustdoc: Show when traits are auto traits", "tree": {"sha": "231a26451a2f38c7aa082264e5cc5515d0bb828f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/231a26451a2f38c7aa082264e5cc5515d0bb828f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04a884726a5a332aefd0af96c8d702b0830e5375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04a884726a5a332aefd0af96c8d702b0830e5375", "html_url": "https://github.com/rust-lang/rust/commit/04a884726a5a332aefd0af96c8d702b0830e5375", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04a884726a5a332aefd0af96c8d702b0830e5375/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdc18b3067b5bad257ccbe7400e3c4fb617e9e18", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdc18b3067b5bad257ccbe7400e3c4fb617e9e18", "html_url": "https://github.com/rust-lang/rust/commit/fdc18b3067b5bad257ccbe7400e3c4fb617e9e18"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "3cdc558080aa2ae2a6c43b6b2fedbf188f1d8094", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=04a884726a5a332aefd0af96c8d702b0830e5375", "patch": "@@ -146,12 +146,14 @@ pub fn build_external_trait(cx: &DocContext, did: DefId) -> clean::Trait {\n     let generics = filter_non_trait_generics(did, generics);\n     let (generics, supertrait_bounds) = separate_supertrait_bounds(generics);\n     let is_spotlight = load_attrs(cx, did).has_doc_flag(\"spotlight\");\n+    let is_auto = cx.tcx.trait_is_auto(did);\n     clean::Trait {\n         unsafety: cx.tcx.trait_def(did).unsafety,\n         generics,\n         items: trait_items,\n         bounds: supertrait_bounds,\n         is_spotlight,\n+        is_auto,\n     }\n }\n "}, {"sha": "c43aec79447a066f9cf2338d8799036aa101cd35", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=04a884726a5a332aefd0af96c8d702b0830e5375", "patch": "@@ -1523,6 +1523,7 @@ pub struct Trait {\n     pub generics: Generics,\n     pub bounds: Vec<TyParamBound>,\n     pub is_spotlight: bool,\n+    pub is_auto: bool,\n }\n \n impl Clean<Item> for doctree::Trait {\n@@ -1543,11 +1544,21 @@ impl Clean<Item> for doctree::Trait {\n                 generics: self.generics.clean(cx),\n                 bounds: self.bounds.clean(cx),\n                 is_spotlight: is_spotlight,\n+                is_auto: self.is_auto.clean(cx),\n             }),\n         }\n     }\n }\n \n+impl Clean<bool> for hir::IsAuto {\n+    fn clean(&self, _: &DocContext) -> bool {\n+        match *self {\n+            hir::IsAuto::Yes => true,\n+            hir::IsAuto::No => false,\n+        }\n+    }\n+}\n+\n impl Clean<Type> for hir::TraitRef {\n     fn clean(&self, cx: &DocContext) -> Type {\n         resolve_type(cx, self.path.clean(cx), self.ref_id)"}, {"sha": "430236f30c4ef610575713ddc0faf4e2b8ee117f", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=04a884726a5a332aefd0af96c8d702b0830e5375", "patch": "@@ -196,6 +196,7 @@ pub struct Constant {\n }\n \n pub struct Trait {\n+    pub is_auto: hir::IsAuto,\n     pub unsafety: hir::Unsafety,\n     pub name: Name,\n     pub items: hir::HirVec<hir::TraitItem>,"}, {"sha": "fae6f9ec6a3c0d77e6c4e24907b738413641695d", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=04a884726a5a332aefd0af96c8d702b0830e5375", "patch": "@@ -2339,9 +2339,10 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n     // Output the trait definition\n     write!(w, \"<pre class='rust trait'>\")?;\n     render_attributes(w, it)?;\n-    write!(w, \"{}{}trait {}{}{}\",\n+    write!(w, \"{}{}{}trait {}{}{}\",\n            VisSpace(&it.visibility),\n            UnsafetySpace(t.unsafety),\n+           if t.is_auto { \"auto \" } else { \"\" },\n            it.name.as_ref().unwrap(),\n            t.generics,\n            bounds)?;"}, {"sha": "ed69bce11a0dd00605d4bec51a129a0fd8782e7e", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=04a884726a5a332aefd0af96c8d702b0830e5375", "patch": "@@ -494,11 +494,12 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                 };\n                 om.constants.push(s);\n             },\n-            hir::ItemTrait(_, unsafety, ref gen, ref b, ref item_ids) => {\n+            hir::ItemTrait(is_auto, unsafety, ref gen, ref b, ref item_ids) => {\n                 let items = item_ids.iter()\n                                     .map(|ti| self.cx.tcx.hir.trait_item(ti.id).clone())\n                                     .collect();\n                 let t = Trait {\n+                    is_auto,\n                     unsafety,\n                     name,\n                     items,"}, {"sha": "1753c0ebf73539ccab0c2634748d610b116883bd", "filename": "src/test/rustdoc/auto-traits.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Ftest%2Frustdoc%2Fauto-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Ftest%2Frustdoc%2Fauto-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauto-traits.rs?ref=04a884726a5a332aefd0af96c8d702b0830e5375", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:auto-traits.rs\n+\n+#![feature(optin_builtin_traits)]\n+\n+#![crate_name = \"foo\"]\n+\n+extern crate auto_traits;\n+\n+// @has 'foo/trait.Foo.html' '//pre' 'pub unsafe auto trait Foo'\n+pub unsafe auto trait Foo {}\n+\n+// @has 'foo/trait.Bar.html' '//pre' 'pub unsafe auto trait Bar'\n+pub use auto_traits::Bar;"}, {"sha": "70299334b46092dbdb1b8f0342eb87d99d299e83", "filename": "src/test/rustdoc/auxiliary/auto-traits.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Ftest%2Frustdoc%2Fauxiliary%2Fauto-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04a884726a5a332aefd0af96c8d702b0830e5375/src%2Ftest%2Frustdoc%2Fauxiliary%2Fauto-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fauto-traits.rs?ref=04a884726a5a332aefd0af96c8d702b0830e5375", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(optin_builtin_traits)]\n+\n+pub unsafe auto trait Bar {}"}]}