{"sha": "4d71712a4e2226fb14ede5ee69aca8fd482680ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNzE3MTJhNGUyMjI2ZmIxNGVkZTVlZTY5YWNhOGZkNDgyNjgwY2E=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2016-03-31T14:53:12Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2016-04-06T17:49:10Z"}, "message": "Fix LLVM assert when handling bad intrinsic monomorphizations", "tree": {"sha": "7ea3786598511356172601ad6ee973c092ddb218", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ea3786598511356172601ad6ee973c092ddb218"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d71712a4e2226fb14ede5ee69aca8fd482680ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d71712a4e2226fb14ede5ee69aca8fd482680ca", "html_url": "https://github.com/rust-lang/rust/commit/4d71712a4e2226fb14ede5ee69aca8fd482680ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d71712a4e2226fb14ede5ee69aca8fd482680ca/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30a3849f228833f9dc280120126d16aef3a292ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/30a3849f228833f9dc280120126d16aef3a292ba", "html_url": "https://github.com/rust-lang/rust/commit/30a3849f228833f9dc280120126d16aef3a292ba"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "885656a306b1044b1df9c0eb4288f321a00110e9", "filename": "src/librustc_trans/intrinsic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4d71712a4e2226fb14ede5ee69aca8fd482680ca/src%2Flibrustc_trans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d71712a4e2226fb14ede5ee69aca8fd482680ca/src%2Flibrustc_trans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fintrinsic.rs?ref=4d71712a4e2226fb14ede5ee69aca8fd482680ca", "patch": "@@ -658,7 +658,7 @@ pub fn trans_intrinsic_call<'a, 'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n                         tcx.sess, span,\n                         &format!(\"invalid monomorphization of `{}` intrinsic: \\\n                                   expected basic integer type, found `{}`\", name, sty));\n-                        C_null(llret_ty)\n+                        C_nil(ccx)\n                 }\n             }\n \n@@ -681,7 +681,7 @@ pub fn trans_intrinsic_call<'a, 'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n                         tcx.sess, span,\n                         &format!(\"invalid monomorphization of `{}` intrinsic: \\\n                                   expected basic float type, found `{}`\", name, sty));\n-                        C_null(llret_ty)\n+                        C_nil(ccx)\n                 }\n             }\n \n@@ -1454,7 +1454,7 @@ fn generic_simd_intrinsic<'blk, 'tcx, 'a>\n         ($cond: expr, $($fmt: tt)*) => {\n             if !$cond {\n                 emit_error!($($fmt)*);\n-                return C_null(llret_ty)\n+                return C_nil(bcx.ccx())\n             }\n         }\n     }"}, {"sha": "049552aa2d71fdd5015ceb373934aab48bc44930", "filename": "src/test/compile-fail/bad-intrinsic-monomorphization.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/4d71712a4e2226fb14ede5ee69aca8fd482680ca/src%2Ftest%2Fcompile-fail%2Fbad-intrinsic-monomorphization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d71712a4e2226fb14ede5ee69aca8fd482680ca/src%2Ftest%2Fcompile-fail%2Fbad-intrinsic-monomorphization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-intrinsic-monomorphization.rs?ref=4d71712a4e2226fb14ede5ee69aca8fd482680ca", "patch": "@@ -0,0 +1,44 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(repr_simd, platform_intrinsics, rustc_attrs, core_intrinsics)]\n+#![allow(warnings)]\n+\n+// Bad monomorphizations could previously cause LLVM asserts even though the\n+// error was caught in the compiler.\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_add<T>(x: T, y: T) -> T;\n+}\n+\n+use std::intrinsics;\n+\n+#[derive(Copy, Clone)]\n+struct Foo(i64);\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_cttz(v: Foo) -> Foo {\n+    intrinsics::cttz(v)\n+    //~^ ERROR `cttz` intrinsic: expected basic integer type, found `Foo`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_fadd_fast(a: Foo, b: Foo) -> Foo {\n+    intrinsics::fadd_fast(a, b)\n+    //~^ ERROR `fadd_fast` intrinsic: expected basic float type, found `Foo`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_simd_add(a: Foo, b: Foo) -> Foo {\n+    simd_add(a, b)\n+    //~^ ERROR `simd_add` intrinsic: expected SIMD input type, found non-SIMD `Foo`\n+}\n+\n+fn main() {}"}]}