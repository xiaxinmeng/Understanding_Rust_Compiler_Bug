{"sha": "f162438fb3910b3b68f1b0aa664a3a89df1383de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNjI0MzhmYjM5MTBiM2I2OGYxYjBhYTY2NGEzYTg5ZGYxMzgzZGU=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-07-30T09:55:20Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-07-30T09:55:20Z"}, "message": "Revert \"Stabilize to_bytes and from_bytes for integers.\"\n\nThis reverts commit c8f9b84b393915a48253e3edc862c15a9b7152a7.", "tree": {"sha": "b4cbcece0a7011b10dbe1ad01ba01ab4882078bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4cbcece0a7011b10dbe1ad01ba01ab4882078bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f162438fb3910b3b68f1b0aa664a3a89df1383de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f162438fb3910b3b68f1b0aa664a3a89df1383de", "html_url": "https://github.com/rust-lang/rust/commit/f162438fb3910b3b68f1b0aa664a3a89df1383de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f162438fb3910b3b68f1b0aa664a3a89df1383de/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bbcd005b30582d07f1a39dcf50f77b54e055828", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bbcd005b30582d07f1a39dcf50f77b54e055828", "html_url": "https://github.com/rust-lang/rust/commit/7bbcd005b30582d07f1a39dcf50f77b54e055828"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "3bc2861460e1455024c9e1dc06c58d3b8c2de2a7", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f162438fb3910b3b68f1b0aa664a3a89df1383de/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f162438fb3910b3b68f1b0aa664a3a89df1383de/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=f162438fb3910b3b68f1b0aa664a3a89df1383de", "patch": "@@ -1903,10 +1903,12 @@ $EndFeature, \"\n         /// # Examples\n         ///\n         /// ```\n+        /// #![feature(int_to_from_bytes)]\n+        ///\n         /// let bytes = i32::min_value().to_be().to_bytes();\n         /// assert_eq!(bytes, [0x80, 0, 0, 0]);\n         /// ```\n-        #[stable(feature = \"int_to_from_bytes\", since = \"1.29.0\")]\n+        #[unstable(feature = \"int_to_from_bytes\", issue = \"49792\")]\n         #[inline]\n         pub fn to_bytes(self) -> [u8; mem::size_of::<Self>()] {\n             unsafe { mem::transmute(self) }\n@@ -1923,10 +1925,12 @@ $EndFeature, \"\n         /// # Examples\n         ///\n         /// ```\n+        /// #![feature(int_to_from_bytes)]\n+        ///\n         /// let int = i32::from_be(i32::from_bytes([0x80, 0, 0, 0]));\n         /// assert_eq!(int, i32::min_value());\n         /// ```\n-        #[stable(feature = \"int_to_from_bytes\", since = \"1.29.0\")]\n+        #[unstable(feature = \"int_to_from_bytes\", issue = \"49792\")]\n         #[inline]\n         pub fn from_bytes(bytes: [u8; mem::size_of::<Self>()]) -> Self {\n             unsafe { mem::transmute(bytes) }\n@@ -3508,10 +3512,12 @@ $EndFeature, \"\n         /// # Examples\n         ///\n         /// ```\n+        /// #![feature(int_to_from_bytes)]\n+        ///\n         /// let bytes = 0x1234_5678_u32.to_be().to_bytes();\n         /// assert_eq!(bytes, [0x12, 0x34, 0x56, 0x78]);\n         /// ```\n-        #[stable(feature = \"int_to_from_bytes\", since = \"1.29.0\")]\n+        #[unstable(feature = \"int_to_from_bytes\", issue = \"49792\")]\n         #[inline]\n         pub fn to_bytes(self) -> [u8; mem::size_of::<Self>()] {\n             unsafe { mem::transmute(self) }\n@@ -3528,10 +3534,12 @@ $EndFeature, \"\n         /// # Examples\n         ///\n         /// ```\n+        /// #![feature(int_to_from_bytes)]\n+        ///\n         /// let int = u32::from_be(u32::from_bytes([0x12, 0x34, 0x56, 0x78]));\n         /// assert_eq!(int, 0x1234_5678_u32);\n         /// ```\n-        #[stable(feature = \"int_to_from_bytes\", since = \"1.29.0\")]\n+        #[unstable(feature = \"int_to_from_bytes\", issue = \"49792\")]\n         #[inline]\n         pub fn from_bytes(bytes: [u8; mem::size_of::<Self>()]) -> Self {\n             unsafe { mem::transmute(bytes) }"}]}