{"sha": "328d2c76260631aa8da7d0c64eeb95f2592630d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOGQyYzc2MjYwNjMxYWE4ZGE3ZDBjNjRlZWI5NWYyNTkyNjMwZDE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-02-01T11:47:31Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-02-01T12:01:16Z"}, "message": "add lint to check for enums where all variants have the same pre-/postfix", "tree": {"sha": "459b03c203c1156c9963918a7c747cc963837d15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/459b03c203c1156c9963918a7c747cc963837d15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/328d2c76260631aa8da7d0c64eeb95f2592630d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/328d2c76260631aa8da7d0c64eeb95f2592630d1", "html_url": "https://github.com/rust-lang/rust/commit/328d2c76260631aa8da7d0c64eeb95f2592630d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/328d2c76260631aa8da7d0c64eeb95f2592630d1/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd906c043f0569b3500ee8d34ae640977aab0671", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd906c043f0569b3500ee8d34ae640977aab0671", "html_url": "https://github.com/rust-lang/rust/commit/fd906c043f0569b3500ee8d34ae640977aab0671"}], "stats": {"total": 96, "additions": 95, "deletions": 1}, "files": [{"sha": "9b249636c66796f52184345243b3ed75967c2f21", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/328d2c76260631aa8da7d0c64eeb95f2592630d1/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/328d2c76260631aa8da7d0c64eeb95f2592630d1/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=328d2c76260631aa8da7d0c64eeb95f2592630d1", "patch": "@@ -6,7 +6,7 @@ A collection of lints to catch common mistakes and improve your Rust code.\n [Jump to usage instructions](#usage)\n \n ##Lints\n-There are 105 lints included in this crate:\n+There are 106 lints included in this crate:\n \n name                                                                                                           | default | meaning\n ---------------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@@ -30,6 +30,7 @@ name\n [derive_hash_not_eq](https://github.com/Manishearth/rust-clippy/wiki#derive_hash_not_eq)                       | warn    | deriving `Hash` but implementing `PartialEq` explicitly\n [duplicate_underscore_argument](https://github.com/Manishearth/rust-clippy/wiki#duplicate_underscore_argument) | warn    | Function arguments having names which only differ by an underscore\n [empty_loop](https://github.com/Manishearth/rust-clippy/wiki#empty_loop)                                       | warn    | empty `loop {}` detected\n+[enum_variant_names](https://github.com/Manishearth/rust-clippy/wiki#enum_variant_names)                       | warn    | finds enums where all variants share a prefix/postfix\n [eq_op](https://github.com/Manishearth/rust-clippy/wiki#eq_op)                                                 | warn    | equal operands on both sides of a comparison or bitwise combination (e.g. `x == x`)\n [expl_impl_clone_on_copy](https://github.com/Manishearth/rust-clippy/wiki#expl_impl_clone_on_copy)             | warn    | implementing `Clone` explicitly on `Copy` types\n [explicit_counter_loop](https://github.com/Manishearth/rust-clippy/wiki#explicit_counter_loop)                 | warn    | for-looping with an explicit counter when `_.enumerate()` would do"}, {"sha": "bf0025e021cea0703066c6186f8bd89ec3e9ae86", "filename": "src/enum_variants.rs", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/328d2c76260631aa8da7d0c64eeb95f2592630d1/src%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/328d2c76260631aa8da7d0c64eeb95f2592630d1/src%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fenum_variants.rs?ref=328d2c76260631aa8da7d0c64eeb95f2592630d1", "patch": "@@ -0,0 +1,90 @@\n+//! lint on enum variants that are prefixed or suffixed by the same characters\n+\n+use rustc::lint::*;\n+use syntax::attr::*;\n+use syntax::ast::*;\n+use syntax::parse::token::InternedString;\n+\n+use utils::span_help_and_lint;\n+\n+/// **What it does:** Warns on enum variants that are prefixed or suffixed by the same characters\n+///\n+/// **Why is this bad?** Enum variant names should specify their variant, not the enum, too.\n+///\n+/// **Known problems:** None\n+///\n+/// **Example:** enum Cake { BlackForestCake, HummingbirdCake }\n+declare_lint! { pub ENUM_VARIANT_NAMES, Warn,\n+    \"finds enums where all variants share a prefix/postfix\" }\n+\n+pub struct EnumVariantNames;\n+\n+impl LintPass for EnumVariantNames {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(ENUM_VARIANT_NAMES)\n+    }\n+}\n+\n+fn var2str(var: &Variant) -> InternedString {\n+    var.node.name.name.as_str()\n+}\n+\n+fn partial_match(left: &str, right: &str) -> usize {\n+    left.chars().zip(right.chars()).take_while(|&(l, r)| l == r).count()\n+}\n+\n+fn partial_rmatch(left: &str, right: &str) -> usize {\n+    left.chars().rev().zip(right.chars().rev()).take_while(|&(l, r)| l == r).count()\n+}\n+\n+impl EarlyLintPass for EnumVariantNames {\n+    fn check_item(&mut self, cx: &EarlyContext, item: &Item) {\n+        if let ItemEnum(ref def, _) = item.node {\n+            if def.variants.len() < 2 {\n+                return;\n+            }\n+            let first = var2str(&*def.variants[0]);\n+            let mut pre = first.to_string();\n+            let mut post = pre.clone();\n+            for var in &def.variants[1..] {\n+                let name = var2str(var);\n+                let pre_match = partial_match(&pre, &name);\n+                let post_match = partial_rmatch(&post, &name);\n+                pre.truncate(pre_match);\n+                let post_end = post.len() - post_match;\n+                post.drain(..post_end);\n+            }\n+            if let Some(c) = first[pre.len()..].chars().next() {\n+                if !c.is_uppercase() {\n+                    // non camel case prefix\n+                    pre.clear()\n+                }\n+            }\n+            if let Some(c) = first[..(first.len() - post.len())].chars().rev().next() {\n+                if let Some(c1) = post.chars().next() {\n+                    if !c.is_lowercase() || !c1.is_uppercase() {\n+                        // non camel case postfix\n+                        post.clear()\n+                    }\n+                }\n+            }\n+            if pre == \"_\" {\n+                // don't lint on underscores which are meant to allow dead code\n+                pre.clear();\n+            }\n+            let (what, value) = if !pre.is_empty() {\n+                (\"pre\", pre)\n+            } else if !post.is_empty() {\n+                (\"post\", post)\n+            } else {\n+                return\n+            };\n+            span_help_and_lint(cx,\n+                               ENUM_VARIANT_NAMES,\n+                               item.span,\n+                               &format!(\"All variants have the same {}fix: `{}`\", what, value),\n+                               &format!(\"remove the {}fixes and use full paths to \\\n+                                         the variants instead of glob imports\", what));\n+        }\n+    }\n+}"}, {"sha": "15d1db19d97b868e24ed24bf1aa24886543b3208", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/328d2c76260631aa8da7d0c64eeb95f2592630d1/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/328d2c76260631aa8da7d0c64eeb95f2592630d1/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=328d2c76260631aa8da7d0c64eeb95f2592630d1", "patch": "@@ -43,6 +43,7 @@ pub mod ptr_arg;\n pub mod needless_bool;\n pub mod approx_const;\n pub mod eta_reduction;\n+pub mod enum_variants;\n pub mod identity_op;\n pub mod items_after_statements;\n pub mod minmax;\n@@ -93,6 +94,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_late_lint_pass(box misc::TopLevelRefPass);\n     reg.register_late_lint_pass(box misc::CmpNan);\n     reg.register_late_lint_pass(box eq_op::EqOp);\n+    reg.register_early_lint_pass(box enum_variants::EnumVariantNames);\n     reg.register_late_lint_pass(box bit_mask::BitMask);\n     reg.register_late_lint_pass(box ptr_arg::PtrArg);\n     reg.register_late_lint_pass(box needless_bool::NeedlessBool);\n@@ -183,6 +185,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n         derive::DERIVE_HASH_NOT_EQ,\n         derive::EXPL_IMPL_CLONE_ON_COPY,\n         entry::MAP_ENTRY,\n+        enum_variants::ENUM_VARIANT_NAMES,\n         eq_op::EQ_OP,\n         escape::BOXED_LOCAL,\n         eta_reduction::REDUNDANT_CLOSURE,"}]}