{"sha": "0abb7c27acfe3d8491736e09f5e48c6f755c772a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhYmI3YzI3YWNmZTNkODQ5MTczNmUwOWY1ZTQ4YzZmNzU1Yzc3MmE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-17T16:33:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-17T16:33:37Z"}, "message": "Merge #3196\n\n3196: Cleanup imports r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "bbbf059cd41cb48859710155c30d5dac4a657440", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbbf059cd41cb48859710155c30d5dac4a657440"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0abb7c27acfe3d8491736e09f5e48c6f755c772a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeSsBhCRBK7hj4Ov3rIwAAdHIIAI1Lh54vprV0CN5CTSgg+6YF\npOtIhJ5dNa+8n5U62vm8EJEREniwSLavB7faE7EHydhNm0vWCvmmPBkH9U53zPAP\nvx69D+tPVt7Sl0Jqo5Mcf1OlrHh3URC9Pyszu/vctNWqB5cFHB+r/fUMelc0/mCp\nRcpmk0xVoyIJ79tJGLhUoiUNVWytoQGxPokjPwmW53Tm1oRYnFjdRNDI9UpDXUG6\nfpE2bHG/p/uNfZWl4iFO+PC2Gy6oTlVI8DfTm9AXgdVls7LCxaQM2hB+/qZPji7/\naiyHwPAcV9to3I8kwPug1tmh0BNYZ0yCZRtTAPUgkbD+rZQni4/XjATb26Bh8rY=\n=Wvrp\n-----END PGP SIGNATURE-----\n", "payload": "tree bbbf059cd41cb48859710155c30d5dac4a657440\nparent f7b0135c64da13d64fb0add0c96e84289beb07b4\nparent d7be1da8df45027ce18b8af9da68ed98b9a454cc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1581957217 +0000\ncommitter GitHub <noreply@github.com> 1581957217 +0000\n\nMerge #3196\n\n3196: Cleanup imports r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0abb7c27acfe3d8491736e09f5e48c6f755c772a", "html_url": "https://github.com/rust-lang/rust/commit/0abb7c27acfe3d8491736e09f5e48c6f755c772a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0abb7c27acfe3d8491736e09f5e48c6f755c772a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7b0135c64da13d64fb0add0c96e84289beb07b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7b0135c64da13d64fb0add0c96e84289beb07b4", "html_url": "https://github.com/rust-lang/rust/commit/f7b0135c64da13d64fb0add0c96e84289beb07b4"}, {"sha": "d7be1da8df45027ce18b8af9da68ed98b9a454cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7be1da8df45027ce18b8af9da68ed98b9a454cc", "html_url": "https://github.com/rust-lang/rust/commit/d7be1da8df45027ce18b8af9da68ed98b9a454cc"}], "stats": {"total": 265, "additions": 123, "deletions": 142}, "files": [{"sha": "4ae611a6bc0dc5ac286cca510cdd533021503f91", "filename": "Cargo.lock", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0abb7c27acfe3d8491736e09f5e48c6f755c772a/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/0abb7c27acfe3d8491736e09f5e48c6f755c772a/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=0abb7c27acfe3d8491736e09f5e48c6f755c772a", "patch": "@@ -917,21 +917,6 @@ dependencies = [\n  \"test_utils\",\n ]\n \n-[[package]]\n-name = \"ra_batch\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"crossbeam-channel\",\n- \"log\",\n- \"ra_db\",\n- \"ra_hir\",\n- \"ra_ide\",\n- \"ra_project_model\",\n- \"ra_vfs\",\n- \"ra_vfs_glob\",\n- \"rustc-hash\",\n-]\n-\n [[package]]\n name = \"ra_cargo_watch\"\n version = \"0.1.0\"\n@@ -960,18 +945,23 @@ dependencies = [\n name = \"ra_cli\"\n version = \"0.1.0\"\n dependencies = [\n+ \"crossbeam-channel\",\n  \"env_logger\",\n  \"itertools\",\n+ \"log\",\n  \"pico-args\",\n- \"ra_batch\",\n  \"ra_db\",\n  \"ra_hir\",\n  \"ra_hir_def\",\n  \"ra_hir_ty\",\n  \"ra_ide\",\n  \"ra_prof\",\n+ \"ra_project_model\",\n  \"ra_syntax\",\n+ \"ra_vfs\",\n+ \"ra_vfs_glob\",\n  \"rand\",\n+ \"rustc-hash\",\n ]\n \n [[package]]"}, {"sha": "3bf351fe3771ce17670cfb91fced6984b110d967", "filename": "crates/ra_batch/Cargo.toml", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f7b0135c64da13d64fb0add0c96e84289beb07b4/crates%2Fra_batch%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f7b0135c64da13d64fb0add0c96e84289beb07b4/crates%2Fra_batch%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_batch%2FCargo.toml?ref=f7b0135c64da13d64fb0add0c96e84289beb07b4", "patch": "@@ -1,20 +0,0 @@\n-[package]\n-edition = \"2018\"\n-name = \"ra_batch\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n-\n-[lib]\n-doctest = false\n-\n-[dependencies]\n-log = \"0.4.5\"\n-rustc-hash = \"1.0\"\n-crossbeam-channel = \"0.4.0\"\n-\n-ra_vfs = \"0.5.0\"\n-ra_vfs_glob = { path = \"../ra_vfs_glob\" }\n-ra_db = { path = \"../ra_db\" }\n-ra_ide = { path = \"../ra_ide\" }\n-ra_hir = { path = \"../ra_hir\" }\n-ra_project_model = { path = \"../ra_project_model\" }"}, {"sha": "03494a809fde230930a5ef834c8b4d8633fbcce9", "filename": "crates/ra_cli/Cargo.toml", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0abb7c27acfe3d8491736e09f5e48c6f755c772a/crates%2Fra_cli%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0abb7c27acfe3d8491736e09f5e48c6f755c772a/crates%2Fra_cli%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2FCargo.toml?ref=0abb7c27acfe3d8491736e09f5e48c6f755c772a", "patch": "@@ -6,18 +6,23 @@ authors = [\"rust-analyzer developers\"]\n publish = false\n \n [dependencies]\n+crossbeam-channel = \"0.4.0\"\n+env_logger = { version = \"0.7.1\", default-features = false }\n itertools = \"0.8.0\"\n+log = \"0.4.5\"\n pico-args = \"0.3.0\"\n-env_logger = { version = \"0.7.1\", default-features = false }\n rand = { version = \"0.7.0\", features = [\"small_rng\"] }\n+rustc-hash = \"1.0\"\n \n-ra_syntax = { path = \"../ra_syntax\" }\n-ra_ide = { path = \"../ra_ide\" }\n-ra_batch = { path = \"../ra_batch\" }\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n-hir_ty = { path = \"../ra_hir_ty\", package = \"ra_hir_ty\" }\n hir_def = { path = \"../ra_hir_def\", package = \"ra_hir_def\" }\n+hir_ty = { path = \"../ra_hir_ty\", package = \"ra_hir_ty\" }\n ra_db = { path = \"../ra_db\" }\n+ra_ide = { path = \"../ra_ide\" }\n+ra_project_model = { path = \"../ra_project_model\" }\n+ra_syntax = { path = \"../ra_syntax\" }\n+ra_vfs = \"0.5.0\"\n+ra_vfs_glob = { path = \"../ra_vfs_glob\" }\n \n [dependencies.ra_prof]\n path = \"../ra_prof\""}, {"sha": "3f10ed4002b1b0c6d275a016990528bcd3a58049", "filename": "crates/ra_cli/src/analysis_bench.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0abb7c27acfe3d8491736e09f5e48c6f755c772a/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0abb7c27acfe3d8491736e09f5e48c6f755c772a/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs?ref=0abb7c27acfe3d8491736e09f5e48c6f755c772a", "patch": "@@ -13,7 +13,7 @@ use ra_db::{\n };\n use ra_ide::{Analysis, AnalysisChange, AnalysisHost, FilePosition, LineCol};\n \n-use crate::Result;\n+use crate::{load_cargo::load_cargo, Result};\n \n pub(crate) struct Position {\n     path: PathBuf,\n@@ -46,7 +46,7 @@ pub(crate) fn run(verbose: bool, path: &Path, op: Op) -> Result<()> {\n \n     let start = Instant::now();\n     eprint!(\"loading: \");\n-    let (mut host, roots) = ra_batch::load_cargo(path)?;\n+    let (mut host, roots) = load_cargo(path)?;\n     let db = host.raw_database();\n     eprintln!(\"{:?}\\n\", start.elapsed());\n "}, {"sha": "d40f0439199512da710f4251e3037c25bed81ff1", "filename": "crates/ra_cli/src/analysis_stats.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0abb7c27acfe3d8491736e09f5e48c6f755c772a/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0abb7c27acfe3d8491736e09f5e48c6f755c772a/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs?ref=0abb7c27acfe3d8491736e09f5e48c6f755c772a", "patch": "@@ -2,19 +2,18 @@\n \n use std::{collections::HashSet, fmt::Write, path::Path, time::Instant};\n \n-use itertools::Itertools;\n-use rand::{seq::SliceRandom, thread_rng};\n-\n use hir::{\n     db::{DefDatabase, HirDatabase},\n     AssocItem, Crate, HasSource, HirDisplay, ModuleDef,\n };\n use hir_def::FunctionId;\n use hir_ty::{Ty, TypeWalk};\n+use itertools::Itertools;\n use ra_db::SourceDatabaseExt;\n use ra_syntax::AstNode;\n+use rand::{seq::SliceRandom, thread_rng};\n \n-use crate::{progress_report::ProgressReport, Result, Verbosity};\n+use crate::{load_cargo::load_cargo, progress_report::ProgressReport, Result, Verbosity};\n \n pub fn run(\n     verbosity: Verbosity,\n@@ -25,7 +24,7 @@ pub fn run(\n     randomize: bool,\n ) -> Result<()> {\n     let db_load_time = Instant::now();\n-    let (mut host, roots) = ra_batch::load_cargo(path)?;\n+    let (mut host, roots) = load_cargo(path)?;\n     let db = host.raw_database();\n     println!(\"Database loaded, {} roots, {:?}\", roots.len(), db_load_time.elapsed());\n     let analysis_time = Instant::now();"}, {"sha": "d3c4c7d0bb907b52c3ac20cd34894c6296b301a7", "filename": "crates/ra_cli/src/help.rs", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/f7b0135c64da13d64fb0add0c96e84289beb07b4/crates%2Fra_cli%2Fsrc%2Fhelp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b0135c64da13d64fb0add0c96e84289beb07b4/crates%2Fra_cli%2Fsrc%2Fhelp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fhelp.rs?ref=f7b0135c64da13d64fb0add0c96e84289beb07b4", "patch": "@@ -1,75 +0,0 @@\n-//! FIXME: write short doc here\n-\n-pub const GLOBAL_HELP: &str = \"ra-cli\n-\n-USAGE:\n-    ra_cli <SUBCOMMAND>\n-\n-FLAGS:\n-    -h, --help        Prints help information\n-\n-SUBCOMMANDS:\n-    analysis-bench\n-    analysis-stats\n-    highlight\n-    parse\n-    symbols\";\n-\n-pub const ANALYSIS_BENCH_HELP: &str = \"ra_cli-analysis-bench\n-\n-USAGE:\n-    ra_cli analysis-bench [FLAGS] [OPTIONS] [PATH]\n-\n-FLAGS:\n-    -h, --help        Prints help information\n-    -v, --verbose\n-\n-OPTIONS:\n-    --complete <PATH:LINE:COLUMN>    Compute completions at this location\n-    --highlight <PATH>               Hightlight this file\n-\n-ARGS:\n-    <PATH>    Project to analyse\";\n-\n-pub const ANALYSIS_STATS_HELP: &str = \"ra-cli-analysis-stats\n-\n-USAGE:\n-    ra_cli analysis-stats [FLAGS] [OPTIONS] [PATH]\n-\n-FLAGS:\n-    -h, --help            Prints help information\n-        --memory-usage\n-    -v, --verbose\n-    -q, --quiet\n-\n-OPTIONS:\n-    -o <ONLY>\n-\n-ARGS:\n-    <PATH>\";\n-\n-pub const HIGHLIGHT_HELP: &str = \"ra-cli-highlight\n-\n-USAGE:\n-    ra_cli highlight [FLAGS]\n-\n-FLAGS:\n-    -h, --help       Prints help information\n-    -r, --rainbow\";\n-\n-pub const SYMBOLS_HELP: &str = \"ra-cli-symbols\n-\n-USAGE:\n-    ra_cli highlight [FLAGS]\n-\n-FLAGS:\n-    -h, --help    Prints help inforamtion\";\n-\n-pub const PARSE_HELP: &str = \"ra-cli-parse\n-\n-USAGE:\n-    ra_cli parse [FLAGS]\n-\n-FLAGS:\n-    -h, --help       Prints help inforamtion\n-        --no-dump\";"}, {"sha": "2d6433f184a9ed0e5d049d56dcb50e24f2df8caa", "filename": "crates/ra_cli/src/load_cargo.rs", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0abb7c27acfe3d8491736e09f5e48c6f755c772a/crates%2Fra_cli%2Fsrc%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0abb7c27acfe3d8491736e09f5e48c6f755c772a/crates%2Fra_cli%2Fsrc%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fload_cargo.rs?ref=0abb7c27acfe3d8491736e09f5e48c6f755c772a", "patch": "@@ -139,7 +139,8 @@ pub fn load(\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use ra_hir::Crate;\n+\n+    use hir::Crate;\n \n     #[test]\n     fn test_loading_rust_analyzer() {", "previous_filename": "crates/ra_batch/src/lib.rs"}, {"sha": "4a428faff89a44b5dec7515e33392447537f2151", "filename": "crates/ra_cli/src/main.rs", "status": "modified", "additions": 99, "deletions": 17, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/0abb7c27acfe3d8491736e09f5e48c6f755c772a/crates%2Fra_cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0abb7c27acfe3d8491736e09f5e48c6f755c772a/crates%2Fra_cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fmain.rs?ref=0abb7c27acfe3d8491736e09f5e48c6f755c772a", "patch": "@@ -1,8 +1,8 @@\n //! FIXME: write short doc here\n \n+mod load_cargo;\n mod analysis_stats;\n mod analysis_bench;\n-mod help;\n mod progress_report;\n \n use std::{error::Error, fmt::Write, io::Read};\n@@ -40,21 +40,26 @@ impl Verbosity {\n fn main() -> Result<()> {\n     env_logger::try_init()?;\n \n-    let subcommand = match std::env::args_os().nth(1) {\n-        None => {\n-            eprintln!(\"{}\", help::GLOBAL_HELP);\n-            return Ok(());\n-        }\n-        Some(s) => s,\n-    };\n-    let mut matches = Arguments::from_vec(std::env::args_os().skip(2).collect());\n+    let mut matches = Arguments::from_env();\n+    let subcommand = matches.subcommand()?.unwrap_or_default();\n \n-    match &*subcommand.to_string_lossy() {\n+    match subcommand.as_str() {\n         \"parse\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n-                eprintln!(\"{}\", help::PARSE_HELP);\n+                eprintln!(\n+                    \"\\\n+ra-cli-parse\n+\n+USAGE:\n+    ra_cli parse [FLAGS]\n+\n+FLAGS:\n+    -h, --help       Prints help inforamtion\n+        --no-dump\"\n+                );\n                 return Ok(());\n             }\n+\n             let no_dump = matches.contains(\"--no-dump\");\n             matches.finish().or_else(handle_extra_flags)?;\n \n@@ -67,31 +72,73 @@ fn main() -> Result<()> {\n         }\n         \"symbols\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n-                eprintln!(\"{}\", help::SYMBOLS_HELP);\n+                eprintln!(\n+                    \"\\\n+ra-cli-symbols\n+\n+USAGE:\n+    ra_cli highlight [FLAGS]\n+\n+FLAGS:\n+    -h, --help    Prints help inforamtion\"\n+                );\n                 return Ok(());\n             }\n+\n             matches.finish().or_else(handle_extra_flags)?;\n+\n             let file = file()?;\n             for s in file_structure(&file) {\n                 println!(\"{:?}\", s);\n             }\n         }\n         \"highlight\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n-                eprintln!(\"{}\", help::HIGHLIGHT_HELP);\n+                eprintln!(\n+                    \"\\\n+ra-cli-highlight\n+\n+USAGE:\n+    ra_cli highlight [FLAGS]\n+\n+FLAGS:\n+    -h, --help       Prints help information\n+    -r, --rainbow\"\n+                );\n                 return Ok(());\n             }\n+\n             let rainbow_opt = matches.contains([\"-r\", \"--rainbow\"]);\n             matches.finish().or_else(handle_extra_flags)?;\n+\n             let (analysis, file_id) = Analysis::from_single_file(read_stdin()?);\n             let html = analysis.highlight_as_html(file_id, rainbow_opt).unwrap();\n             println!(\"{}\", html);\n         }\n         \"analysis-stats\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n-                eprintln!(\"{}\", help::ANALYSIS_STATS_HELP);\n+                eprintln!(\n+                    \"\\\n+ra-cli-analysis-stats\n+\n+USAGE:\n+    ra_cli analysis-stats [FLAGS] [OPTIONS] [PATH]\n+\n+FLAGS:\n+    -h, --help            Prints help information\n+        --memory-usage\n+    -v, --verbose\n+    -q, --quiet\n+\n+OPTIONS:\n+    -o <ONLY>\n+\n+ARGS:\n+    <PATH>\"\n+                );\n                 return Ok(());\n             }\n+\n             let verbosity = match (\n                 matches.contains([\"-vv\", \"--spammy\"]),\n                 matches.contains([\"-v\", \"--verbose\"]),\n@@ -111,11 +158,11 @@ fn main() -> Result<()> {\n             let path = {\n                 let mut trailing = matches.free()?;\n                 if trailing.len() != 1 {\n-                    eprintln!(\"{}\", help::ANALYSIS_STATS_HELP);\n                     Err(\"Invalid flags\")?;\n                 }\n                 trailing.pop().unwrap()\n             };\n+\n             analysis_stats::run(\n                 verbosity,\n                 memory_usage,\n@@ -127,9 +174,27 @@ fn main() -> Result<()> {\n         }\n         \"analysis-bench\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n-                eprintln!(\"{}\", help::ANALYSIS_BENCH_HELP);\n+                eprintln!(\n+                    \"\\\n+ra_cli-analysis-bench\n+\n+USAGE:\n+    ra_cli analysis-bench [FLAGS] [OPTIONS] [PATH]\n+\n+FLAGS:\n+    -h, --help        Prints help information\n+    -v, --verbose\n+\n+OPTIONS:\n+    --complete <PATH:LINE:COLUMN>    Compute completions at this location\n+    --highlight <PATH>               Hightlight this file\n+\n+ARGS:\n+    <PATH>    Project to analyse\"\n+                );\n                 return Ok(());\n             }\n+\n             let verbose = matches.contains([\"-v\", \"--verbose\"]);\n             let path: String = matches.opt_value_from_str(\"--path\")?.unwrap_or_default();\n             let highlight_path: Option<String> = matches.opt_value_from_str(\"--highlight\")?;\n@@ -144,9 +209,26 @@ fn main() -> Result<()> {\n                 ),\n             };\n             matches.finish().or_else(handle_extra_flags)?;\n+\n             analysis_bench::run(verbose, path.as_ref(), op)?;\n         }\n-        _ => eprintln!(\"{}\", help::GLOBAL_HELP),\n+        _ => eprintln!(\n+            \"\\\n+ra-cli\n+\n+USAGE:\n+    ra_cli <SUBCOMMAND>\n+\n+FLAGS:\n+    -h, --help        Prints help information\n+\n+SUBCOMMANDS:\n+    analysis-bench\n+    analysis-stats\n+    highlight\n+    parse\n+    symbols\"\n+        ),\n     }\n     Ok(())\n }"}, {"sha": "a8ed9793f2010d4d8babd5dcfe639c4f029a49e8", "filename": "xtask/tests/tidy-tests/docs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0abb7c27acfe3d8491736e09f5e48c6f755c772a/xtask%2Ftests%2Ftidy-tests%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0abb7c27acfe3d8491736e09f5e48c6f755c772a/xtask%2Ftests%2Ftidy-tests%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy-tests%2Fdocs.rs?ref=0abb7c27acfe3d8491736e09f5e48c6f755c772a", "patch": "@@ -73,7 +73,6 @@ fn no_docs_comments() {\n     }\n \n     let whitelist = [\n-        \"ra_batch\",\n         \"ra_cli\",\n         \"ra_db\",\n         \"ra_hir\","}]}