{"sha": "76eb077fb298a01137c878a9f10854b44c5edf37", "node_id": "C_kwDOAAsO6NoAKDc2ZWIwNzdmYjI5OGEwMTEzN2M4NzhhOWYxMDg1NGI0NGM1ZWRmMzc", "commit": {"author": {"name": "Yacin Tmimi", "email": "yacintmimi@gmail.com", "date": "2021-12-24T01:22:09Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-12-24T05:04:26Z"}, "message": "Retain qualified path when rewriting struct literals\n\nFixes 5151\n\nDetails about the qualified path are now passed along so that rustfmt\ncan include them when formatting struct literals.", "tree": {"sha": "8369dfc170a07908c6838dcd69949c310eb34317", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8369dfc170a07908c6838dcd69949c310eb34317"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76eb077fb298a01137c878a9f10854b44c5edf37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76eb077fb298a01137c878a9f10854b44c5edf37", "html_url": "https://github.com/rust-lang/rust/commit/76eb077fb298a01137c878a9f10854b44c5edf37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76eb077fb298a01137c878a9f10854b44c5edf37/comments", "author": {"login": "ytmimi", "id": 29028348, "node_id": "MDQ6VXNlcjI5MDI4MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/29028348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytmimi", "html_url": "https://github.com/ytmimi", "followers_url": "https://api.github.com/users/ytmimi/followers", "following_url": "https://api.github.com/users/ytmimi/following{/other_user}", "gists_url": "https://api.github.com/users/ytmimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytmimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytmimi/subscriptions", "organizations_url": "https://api.github.com/users/ytmimi/orgs", "repos_url": "https://api.github.com/users/ytmimi/repos", "events_url": "https://api.github.com/users/ytmimi/events{/privacy}", "received_events_url": "https://api.github.com/users/ytmimi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b2fd9b1329a41702ff2db51426003a37c1db510", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b2fd9b1329a41702ff2db51426003a37c1db510", "html_url": "https://github.com/rust-lang/rust/commit/0b2fd9b1329a41702ff2db51426003a37c1db510"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "c9c8852cd3b56276d223ac6acc1b7ea79b73e643", "filename": "src/expr.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/76eb077fb298a01137c878a9f10854b44c5edf37/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76eb077fb298a01137c878a9f10854b44c5edf37/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=76eb077fb298a01137c878a9f10854b44c5edf37", "patch": "@@ -108,9 +108,21 @@ pub(crate) fn format_expr(\n         ast::ExprKind::Unary(op, ref subexpr) => rewrite_unary_op(context, op, subexpr, shape),\n         ast::ExprKind::Struct(ref struct_expr) => {\n             let ast::StructExpr {\n-                fields, path, rest, ..\n+                qself,\n+                fields,\n+                path,\n+                rest,\n             } = &**struct_expr;\n-            rewrite_struct_lit(context, path, fields, rest, &expr.attrs, expr.span, shape)\n+            rewrite_struct_lit(\n+                context,\n+                path,\n+                qself.as_ref(),\n+                fields,\n+                rest,\n+                &expr.attrs,\n+                expr.span,\n+                shape,\n+            )\n         }\n         ast::ExprKind::Tup(ref items) => {\n             rewrite_tuple(context, items.iter(), expr.span, shape, items.len() == 1)\n@@ -1511,6 +1523,7 @@ fn struct_lit_can_be_aligned(fields: &[ast::ExprField], has_base: bool) -> bool\n fn rewrite_struct_lit<'a>(\n     context: &RewriteContext<'_>,\n     path: &ast::Path,\n+    qself: Option<&ast::QSelf>,\n     fields: &'a [ast::ExprField],\n     struct_rest: &ast::StructRest,\n     attrs: &[ast::Attribute],\n@@ -1527,7 +1540,7 @@ fn rewrite_struct_lit<'a>(\n \n     // 2 = \" {\".len()\n     let path_shape = shape.sub_width(2)?;\n-    let path_str = rewrite_path(context, PathContext::Expr, None, path, path_shape)?;\n+    let path_str = rewrite_path(context, PathContext::Expr, qself, path, path_shape)?;\n \n     let has_base_or_rest = match struct_rest {\n         ast::StructRest::None if fields.is_empty() => return Some(format!(\"{} {{}}\", path_str)),"}, {"sha": "2ed3d936e32aefafb663b2f2da7de0046e0f7203", "filename": "tests/target/issue-5151/minimum_example.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/76eb077fb298a01137c878a9f10854b44c5edf37/tests%2Ftarget%2Fissue-5151%2Fminimum_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76eb077fb298a01137c878a9f10854b44c5edf37/tests%2Ftarget%2Fissue-5151%2Fminimum_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-5151%2Fminimum_example.rs?ref=76eb077fb298a01137c878a9f10854b44c5edf37", "patch": "@@ -0,0 +1,16 @@\n+#![feature(more_qualified_paths)]\n+\n+struct Struct {}\n+\n+trait Trait {\n+    type Type;\n+}\n+\n+impl Trait for Struct {\n+    type Type = Self;\n+}\n+\n+fn main() {\n+    // keep the qualified path details\n+    let _ = <Struct as Trait>::Type {};\n+}"}]}