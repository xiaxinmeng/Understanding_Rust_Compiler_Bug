{"sha": "6b62bf381464f90d177292416a11b2929765a30d", "node_id": "C_kwDOAAsO6NoAKDZiNjJiZjM4MTQ2NGY5MGQxNzcyOTI0MTZhMTFiMjkyOTc2NWEzMGQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-18T23:38:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-18T23:38:41Z"}, "message": "Rollup merge of #91932 - Kixiron:randomize-seed, r=nagisa\n\nAdd user seed to `-Z randomize-layout`\n\nAllows users of -`Z randomize-layout` to provide `-Z layout-seed=<seed>` in order to further randomizing type layout randomization. Extension of [compiler-team/#457](https://github.com/rust-lang/compiler-team/issues/457), allows users to change struct layouts without changing code and hoping that item path hashes change, aiding in detecting layout errors", "tree": {"sha": "3d11919588dfcdafff3c2470734060f4b448f1bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d11919588dfcdafff3c2470734060f4b448f1bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b62bf381464f90d177292416a11b2929765a30d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhvnEBCRBK7hj4Ov3rIwAAQXIIAHEa740k/zVk2ISOUxWV96Xy\nzR1T8S+mQvTvxnpzA5JoeNNTHr3hfaTx50/vkwVqqozC2ceSD3URlpHygaeGbmXp\nYMIRhRdAj25a8B8uDlN61qrKtOuUZPpCHznCwKgAlns8Q7gNfa36HHEfflRaAmaL\nMTjv24TobTFy8SJlVPFr+EB8QVKHN+5OvRVz2tVQeub0WkeMkwgP0DD1+h32EYHB\ns53l1SWiiI29660c14RbIb1ZUvZ2kxQAmGqfHfTyS6p3jk918jhHw8QHFZoap8Di\nzDNsbUGWM6fnLI+4LUJRg+fKBcfUH2eP8Hljh+6oqMs//TX05perPzT5qIFVshU=\n=rdDW\n-----END PGP SIGNATURE-----\n", "payload": "tree 3d11919588dfcdafff3c2470734060f4b448f1bb\nparent 80390871afa96ac21778deed74ab438144548f16\nparent 2af02abd93db9c41d2ee80e4e7562520ae51f24a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639870721 +0100\ncommitter GitHub <noreply@github.com> 1639870721 +0100\n\nRollup merge of #91932 - Kixiron:randomize-seed, r=nagisa\n\nAdd user seed to `-Z randomize-layout`\n\nAllows users of -`Z randomize-layout` to provide `-Z layout-seed=<seed>` in order to further randomizing type layout randomization. Extension of [compiler-team/#457](https://github.com/rust-lang/compiler-team/issues/457), allows users to change struct layouts without changing code and hoping that item path hashes change, aiding in detecting layout errors\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b62bf381464f90d177292416a11b2929765a30d", "html_url": "https://github.com/rust-lang/rust/commit/6b62bf381464f90d177292416a11b2929765a30d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b62bf381464f90d177292416a11b2929765a30d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80390871afa96ac21778deed74ab438144548f16", "url": "https://api.github.com/repos/rust-lang/rust/commits/80390871afa96ac21778deed74ab438144548f16", "html_url": "https://github.com/rust-lang/rust/commit/80390871afa96ac21778deed74ab438144548f16"}, {"sha": "2af02abd93db9c41d2ee80e4e7562520ae51f24a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2af02abd93db9c41d2ee80e4e7562520ae51f24a", "html_url": "https://github.com/rust-lang/rust/commit/2af02abd93db9c41d2ee80e4e7562520ae51f24a"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "727c0ba63cbb64b30511df583c8af65656bc43b7", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6b62bf381464f90d177292416a11b2929765a30d/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b62bf381464f90d177292416a11b2929765a30d/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=6b62bf381464f90d177292416a11b2929765a30d", "patch": "@@ -347,10 +347,6 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n \n         let mut inverse_memory_index: Vec<u32> = (0..fields.len() as u32).collect();\n \n-        // `ReprOptions.layout_seed` is a deterministic seed that we can use to\n-        // randomize field ordering with\n-        let mut rng = Xoshiro128StarStar::seed_from_u64(repr.field_shuffle_seed);\n-\n         let optimize = !repr.inhibit_struct_field_reordering_opt();\n         if optimize {\n             let end =\n@@ -364,6 +360,10 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n             // the field ordering to try and catch some code making assumptions about layouts\n             // we don't guarantee\n             if repr.can_randomize_type_layout() {\n+                // `ReprOptions.layout_seed` is a deterministic seed that we can use to\n+                // randomize field ordering with\n+                let mut rng = Xoshiro128StarStar::seed_from_u64(repr.field_shuffle_seed);\n+\n                 // Shuffle the ordering of the fields\n                 optimizing.shuffle(&mut rng);\n "}, {"sha": "10232dc9cb60e01e44666b26691b43997ff9267e", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6b62bf381464f90d177292416a11b2929765a30d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b62bf381464f90d177292416a11b2929765a30d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=6b62bf381464f90d177292416a11b2929765a30d", "patch": "@@ -1608,9 +1608,9 @@ bitflags! {\n         // the seed stored in `ReprOptions.layout_seed`\n         const RANDOMIZE_LAYOUT   = 1 << 5;\n         // Any of these flags being set prevent field reordering optimisation.\n-        const IS_UNOPTIMISABLE   = ReprFlags::IS_C.bits |\n-                                   ReprFlags::IS_SIMD.bits |\n-                                   ReprFlags::IS_LINEAR.bits;\n+        const IS_UNOPTIMISABLE   = ReprFlags::IS_C.bits\n+                                 | ReprFlags::IS_SIMD.bits\n+                                 | ReprFlags::IS_LINEAR.bits;\n     }\n }\n \n@@ -1640,7 +1640,14 @@ impl ReprOptions {\n \n         // Generate a deterministically-derived seed from the item's path hash\n         // to allow for cross-crate compilation to actually work\n-        let field_shuffle_seed = tcx.def_path_hash(did).0.to_smaller_hash();\n+        let mut field_shuffle_seed = tcx.def_path_hash(did).0.to_smaller_hash();\n+\n+        // If the user defined a custom seed for layout randomization, xor the item's\n+        // path hash with the user defined seed, this will allowing determinism while\n+        // still allowing users to further randomize layout generation for e.g. fuzzing\n+        if let Some(user_seed) = tcx.sess.opts.debugging_opts.layout_seed {\n+            field_shuffle_seed ^= user_seed;\n+        }\n \n         for attr in tcx.get_attrs(did).iter() {\n             for r in attr::find_repr_attrs(&tcx.sess, attr) {"}, {"sha": "9090524c93396f47f72e17e815a7cfd85ff89149", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b62bf381464f90d177292416a11b2929765a30d/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b62bf381464f90d177292416a11b2929765a30d/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=6b62bf381464f90d177292416a11b2929765a30d", "patch": "@@ -1321,6 +1321,8 @@ options! {\n         \"print some statistics about the query system (default: no)\"),\n     randomize_layout: bool = (false, parse_bool, [TRACKED],\n         \"randomize the layout of types (default: no)\"),\n+    layout_seed: Option<u64> = (None, parse_opt_number, [TRACKED],\n+        \"seed layout randomization\"),\n     relax_elf_relocations: Option<bool> = (None, parse_opt_bool, [TRACKED],\n         \"whether ELF relocations can be relaxed\"),\n     relro_level: Option<RelroLevel> = (None, parse_relro_level, [TRACKED],"}]}