{"sha": "9fd203a01e0fe6fb307809fdfdbfcd3bda350cfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZDIwM2EwMWUwZmU2ZmIzMDc4MDlmZGZkYmZjZDNiZGEzNTBjZmM=", "commit": {"author": {"name": "newpavlov", "email": "newpavlov@gmail.com", "date": "2019-08-30T14:30:33Z"}, "committer": {"name": "newpavlov", "email": "newpavlov@gmail.com", "date": "2019-08-30T14:30:33Z"}, "message": "simplify code", "tree": {"sha": "bd7d8326a2a02faf7f555368a24588fd561050b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd7d8326a2a02faf7f555368a24588fd561050b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fd203a01e0fe6fb307809fdfdbfcd3bda350cfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fd203a01e0fe6fb307809fdfdbfcd3bda350cfc", "html_url": "https://github.com/rust-lang/rust/commit/9fd203a01e0fe6fb307809fdfdbfcd3bda350cfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fd203a01e0fe6fb307809fdfdbfcd3bda350cfc/comments", "author": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "127311b75efd47a6f54aca49523c050566fc9823", "url": "https://api.github.com/repos/rust-lang/rust/commits/127311b75efd47a6f54aca49523c050566fc9823", "html_url": "https://github.com/rust-lang/rust/commit/127311b75efd47a6f54aca49523c050566fc9823"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "28a504f19797496e8d30b9d43d700b2d19a5b724", "filename": "src/libstd/sys/wasi/thread.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9fd203a01e0fe6fb307809fdfdbfcd3bda350cfc/src%2Flibstd%2Fsys%2Fwasi%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fd203a01e0fe6fb307809fdfdbfcd3bda350cfc/src%2Flibstd%2Fsys%2Fwasi%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fthread.rs?ref=9fd203a01e0fe6fb307809fdfdbfcd3bda350cfc", "patch": "@@ -46,11 +46,18 @@ impl Thread {\n             type_: wasi::EVENTTYPE_CLOCK,\n             u: wasi::raw::__wasi_subscription_u { clock: clock },\n         }];\n-        let mut out: [wasi::Event; 1] = [unsafe { mem::zeroed() }];\n-        let n = unsafe { wasi::poll_oneoff(&in_, &mut out).unwrap() };\n-        let wasi::Event { userdata, error, type_, .. } = out[0];\n-        match (n, userdata, error) {\n-            (1, CLOCK_ID, 0) if type_ == wasi::EVENTTYPE_CLOCK => {}\n+        let (res, event) = unsafe {\n+            let mut out: [wasi::Event; 1] = mem::zeroed();\n+            let res = wasi::poll_oneoff(&in_, &mut out);\n+            (res, out[0])\n+        };\n+        match (res, event) {\n+            (Ok(1), wasi::Event {\n+                userdata: CLOCK_ID,\n+                error: 0,\n+                type_: wasi::EVENTTYPE_CLOCK,\n+                ..\n+            }) => {}\n             _ => panic!(\"thread::sleep(): unexpected result of poll_oneoff\"),\n         }\n     }"}]}