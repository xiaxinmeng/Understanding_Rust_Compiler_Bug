{"sha": "e066bae56e850b5885cc9b73d44131a27ad68b1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNjZiYWU1NmU4NTBiNTg4NWNjOWI3M2Q0NDEzMWEyN2FkNjhiMWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-01T23:59:03Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-06T19:05:13Z"}, "message": "rustc: Move the interner over to interior vectors", "tree": {"sha": "e5b95261a971489b5218bfbc290a545260cf333f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5b95261a971489b5218bfbc290a545260cf333f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e066bae56e850b5885cc9b73d44131a27ad68b1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e066bae56e850b5885cc9b73d44131a27ad68b1d", "html_url": "https://github.com/rust-lang/rust/commit/e066bae56e850b5885cc9b73d44131a27ad68b1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e066bae56e850b5885cc9b73d44131a27ad68b1d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "717ac3df77a5bddca02391a7bd34be3edb4099fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/717ac3df77a5bddca02391a7bd34be3edb4099fe", "html_url": "https://github.com/rust-lang/rust/commit/717ac3df77a5bddca02391a7bd34be3edb4099fe"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "85acfe019b1c5f1e626520ca074be5e94bc98141", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e066bae56e850b5885cc9b73d44131a27ad68b1d/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e066bae56e850b5885cc9b73d44131a27ad68b1d/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=e066bae56e850b5885cc9b73d44131a27ad68b1d", "patch": "@@ -378,7 +378,7 @@ fn populate_type_store(&ctxt cx) {\n     intern(cx, ty_task, none[str]);\n     intern(cx, ty_type, none[str]);\n     intern(cx, ty_bot, none[str]);\n-    assert (vec::len(cx.ts.vect) == idx_first_others);\n+    assert (ivec::len(cx.ts.vect) == idx_first_others);\n }\n \n fn mk_rcache() -> creader_cache {"}, {"sha": "9717e30d6e6aef0d400b12cf8306dcc7ee4e6645", "filename": "src/comp/syntax/util/interner.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e066bae56e850b5885cc9b73d44131a27ad68b1d/src%2Fcomp%2Fsyntax%2Futil%2Finterner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e066bae56e850b5885cc9b73d44131a27ad68b1d/src%2Fcomp%2Fsyntax%2Futil%2Finterner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Futil%2Finterner.rs?ref=e066bae56e850b5885cc9b73d44131a27ad68b1d", "patch": "@@ -1,7 +1,7 @@\n // An \"interner\" is a data structure that associates values with uint tags and\n // allows bidirectional lookup; i.e. given a value, one can easily find the\n // type, and vice versa.\n-import std::vec;\n+import std::ivec;\n import std::map;\n import std::map::hashmap;\n import std::map::hashfn;\n@@ -12,24 +12,24 @@ import std::option::some;\n \n type interner[T] =\n     rec(hashmap[T, uint] map,\n-        mutable vec[T] vect,\n+        mutable T[] vect,\n         hashfn[T] hasher,\n         eqfn[T] eqer);\n \n fn mk[T](hashfn[T] hasher, eqfn[T] eqer) -> interner[T] {\n     auto m = map::mk_hashmap[T, uint](hasher, eqer);\n-    let vec[T] vect = [];\n-    ret rec(map=m, mutable vect=vect, hasher=hasher, eqer=eqer);\n+    ret rec(map=m, mutable vect=~[], hasher=hasher, eqer=eqer);\n }\n fn intern[T](&interner[T] itr, &T val) -> uint {\n     alt (itr.map.find(val)) {\n         case (some(?idx)) { ret idx; }\n         case (none) {\n-            auto new_idx = vec::len[T](itr.vect);\n+            auto new_idx = ivec::len[T](itr.vect);\n             itr.map.insert(val, new_idx);\n-            itr.vect += [val];\n+            itr.vect += ~[val];\n             ret new_idx;\n         }\n     }\n }\n fn get[T](&interner[T] itr, uint idx) -> T { ret itr.vect.(idx); }\n+"}]}