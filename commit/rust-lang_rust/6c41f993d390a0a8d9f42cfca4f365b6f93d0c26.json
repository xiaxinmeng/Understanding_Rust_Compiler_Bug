{"sha": "6c41f993d390a0a8d9f42cfca4f365b6f93d0c26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNDFmOTkzZDM5MGEwYThkOWY0MmNmY2E0ZjM2NWI2ZjkzZDBjMjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-26T07:31:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-26T07:31:35Z"}, "message": "auto merge of #12547 : jagtalon/rust/jag/rust/tutorial-freezing, r=pnkfelix\n\n- \"Lending an immutable pointer\" might be confusing. It was not discussed why borrowed pointers are immutable in the first place.\r\n- Make it clear that the borrowed pointers are immutable even if the variable was declared with `mut`.\r\n- Make it clear that we cannot even assign anything to the variable while its value is being borrowed.\r\n\r\ntutorial: change \"--\" to an em-dash.\r\n\r\ntutorial: change instances of \"--\" to em-dash.", "tree": {"sha": "7c6f2b7f77df5c55da8c0a32884f0a7685053b3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c6f2b7f77df5c55da8c0a32884f0a7685053b3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c41f993d390a0a8d9f42cfca4f365b6f93d0c26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c41f993d390a0a8d9f42cfca4f365b6f93d0c26", "html_url": "https://github.com/rust-lang/rust/commit/6c41f993d390a0a8d9f42cfca4f365b6f93d0c26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c41f993d390a0a8d9f42cfca4f365b6f93d0c26/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb86913dcf72dcb628d9b5250aabd2da0ca7df49", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb86913dcf72dcb628d9b5250aabd2da0ca7df49", "html_url": "https://github.com/rust-lang/rust/commit/eb86913dcf72dcb628d9b5250aabd2da0ca7df49"}, {"sha": "82747ed93e5af967b691653a56849da2c209d85d", "url": "https://api.github.com/repos/rust-lang/rust/commits/82747ed93e5af967b691653a56849da2c209d85d", "html_url": "https://github.com/rust-lang/rust/commit/82747ed93e5af967b691653a56849da2c209d85d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3c071e9f9994a1877b3c406105924a9da9dfb81b", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6c41f993d390a0a8d9f42cfca4f365b6f93d0c26/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/6c41f993d390a0a8d9f42cfca4f365b6f93d0c26/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=6c41f993d390a0a8d9f42cfca4f365b6f93d0c26", "patch": "@@ -1468,14 +1468,14 @@ For a more in-depth explanation of references and lifetimes, read the\n \n ## Freezing\n \n-Lending an immutable pointer to an object freezes it and prevents mutation.\n+Lending an &-pointer to an object freezes it and prevents mutation\u2014even if the object was declared as `mut`.\n `Freeze` objects have freezing enforced statically at compile-time. An example\n of a non-`Freeze` type is [`RefCell<T>`][refcell].\n \n ~~~~\n let mut x = 5;\n {\n-    let y = &x; // `x` is now frozen, it cannot be modified\n+    let y = &x; // `x` is now frozen. It cannot be modified or re-assigned.\n }\n // `x` is now unfrozen again\n # x = 3;\n@@ -2021,8 +2021,8 @@ C++ templates.\n \n ## Traits\n \n-Within a generic function -- that is, a function parameterized by a\n-type parameter, say, `T` -- the operations we can do on arguments of\n+Within a generic function\u2014that is, a function parameterized by a\n+type parameter, say, `T`\u2014the operations we can do on arguments of\n type `T` are quite limited.  After all, since we don't know what type\n `T` will be instantiated with, we can't safely modify or query values\n of type `T`.  This is where _traits_ come into play. Traits are Rust's"}]}