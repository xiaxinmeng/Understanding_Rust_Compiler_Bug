{"sha": "38a97becdf3e6a6157f6f7ec2d98ade8d8edc193", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YTk3YmVjZGYzZTZhNjE1N2Y2ZjdlYzJkOThhZGU4ZDhlZGMxOTM=", "commit": {"author": {"name": "Felix S Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-05-23T05:50:46Z"}, "committer": {"name": "Felix S Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-05-23T05:50:46Z"}, "message": "Merge pull request #25706 from pnkfelix/remove-diagnostics-gen-and-check\n\nRemove error diagnostics uniqueness check and .json generation.", "tree": {"sha": "a025332b1147c9199e4230df74c5c71897788e94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a025332b1147c9199e4230df74c5c71897788e94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38a97becdf3e6a6157f6f7ec2d98ade8d8edc193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38a97becdf3e6a6157f6f7ec2d98ade8d8edc193", "html_url": "https://github.com/rust-lang/rust/commit/38a97becdf3e6a6157f6f7ec2d98ade8d8edc193", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38a97becdf3e6a6157f6f7ec2d98ade8d8edc193/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3d60aba6c86883c79055c1a3923d4db116b644e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3d60aba6c86883c79055c1a3923d4db116b644e", "html_url": "https://github.com/rust-lang/rust/commit/c3d60aba6c86883c79055c1a3923d4db116b644e"}, {"sha": "deaa1172cf2871e04ca2524b6b553afb143f677a", "url": "https://api.github.com/repos/rust-lang/rust/commits/deaa1172cf2871e04ca2524b6b553afb143f677a", "html_url": "https://github.com/rust-lang/rust/commit/deaa1172cf2871e04ca2524b6b553afb143f677a"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "f3fa4fd908c9f1685710dc3391bc47702712baf3", "filename": "mk/docs.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38a97becdf3e6a6157f6f7ec2d98ade8d8edc193/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/38a97becdf3e6a6157f6f7ec2d98ade8d8edc193/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=38a97becdf3e6a6157f6f7ec2d98ade8d8edc193", "patch": "@@ -77,7 +77,8 @@ ERR_IDX_GEN = $(RPATH_VAR2_T_$(CFG_BUILD)_H_$(CFG_BUILD)) $(ERR_IDX_GEN_EXE)\n \n D := $(S)src/doc\n \n-DOC_TARGETS := trpl style error-index\n+# FIXME (#25705) eventually may want to put error-index target back here.\n+DOC_TARGETS := trpl style\n COMPILER_DOC_TARGETS :=\n DOC_L10N_TARGETS :=\n "}, {"sha": "620ac1280f48c3f037307eec668cd78b2f4bdadd", "filename": "src/libsyntax/diagnostics/plugin.rs", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/38a97becdf3e6a6157f6f7ec2d98ade8d8edc193/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38a97becdf3e6a6157f6f7ec2d98ade8d8edc193/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs?ref=38a97becdf3e6a6157f6f7ec2d98ade8d8edc193", "patch": "@@ -14,7 +14,6 @@ use std::collections::BTreeMap;\n use ast;\n use ast::{Ident, Name, TokenTree};\n use codemap::Span;\n-use diagnostics::metadata::{check_uniqueness, output_metadata, Duplicate};\n use ext::base::{ExtCtxt, MacEager, MacResult};\n use ext::build::AstBuilder;\n use parse::token;\n@@ -148,7 +147,7 @@ pub fn expand_build_diagnostic_array<'cx>(ecx: &'cx mut ExtCtxt,\n                                           token_tree: &[TokenTree])\n                                           -> Box<MacResult+'cx> {\n     assert_eq!(token_tree.len(), 3);\n-    let (crate_name, name) = match (&token_tree[0], &token_tree[2]) {\n+    let (_crate_name, name) = match (&token_tree[0], &token_tree[2]) {\n         (\n             // Crate name.\n             &ast::TtToken(_, token::Ident(ref crate_name, _)),\n@@ -158,21 +157,9 @@ pub fn expand_build_diagnostic_array<'cx>(ecx: &'cx mut ExtCtxt,\n         _ => unreachable!()\n     };\n \n-    // Check uniqueness of errors and output metadata.\n-    with_registered_diagnostics(|diagnostics| {\n-        match check_uniqueness(crate_name, &*diagnostics) {\n-            Ok(Duplicate(err, location)) => {\n-                ecx.span_err(span, &format!(\n-                    \"error {} from `{}' also found in `{}'\",\n-                    err, crate_name, location\n-                ));\n-            },\n-            Ok(_) => (),\n-            Err(e) => panic!(\"{}\", e.description())\n-        }\n-\n-        output_metadata(&*ecx, crate_name, &*diagnostics).ok().expect(\"metadata output error\");\n-    });\n+    // FIXME (#25705): we used to ensure error code uniqueness and\n+    // output error description JSON metadata here, but the approach\n+    // employed was too brittle.\n \n     // Construct the output expression.\n     let (count, expr) ="}]}