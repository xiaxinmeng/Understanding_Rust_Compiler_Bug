{"sha": "8ca3bb8fcd3c3ac8eb232086f6286eb96f4bac79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYTNiYjhmY2QzYzNhYzhlYjIzMjA4NmY2Mjg2ZWI5NmY0YmFjNzk=", "commit": {"author": {"name": "Alexander Gonzalez", "email": "alexfertel97@gmail.com", "date": "2021-07-25T01:54:48Z"}, "committer": {"name": "Alexander Gonzalez", "email": "alexfertel97@gmail.com", "date": "2021-07-27T22:29:22Z"}, "message": "feat: Add the hover_range capability", "tree": {"sha": "630fa60f0912867800296502108ca55fd6368755", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/630fa60f0912867800296502108ca55fd6368755"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ca3bb8fcd3c3ac8eb232086f6286eb96f4bac79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ca3bb8fcd3c3ac8eb232086f6286eb96f4bac79", "html_url": "https://github.com/rust-lang/rust/commit/8ca3bb8fcd3c3ac8eb232086f6286eb96f4bac79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ca3bb8fcd3c3ac8eb232086f6286eb96f4bac79/comments", "author": {"login": "alexfertel", "id": 22298999, "node_id": "MDQ6VXNlcjIyMjk4OTk5", "avatar_url": "https://avatars.githubusercontent.com/u/22298999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexfertel", "html_url": "https://github.com/alexfertel", "followers_url": "https://api.github.com/users/alexfertel/followers", "following_url": "https://api.github.com/users/alexfertel/following{/other_user}", "gists_url": "https://api.github.com/users/alexfertel/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexfertel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexfertel/subscriptions", "organizations_url": "https://api.github.com/users/alexfertel/orgs", "repos_url": "https://api.github.com/users/alexfertel/repos", "events_url": "https://api.github.com/users/alexfertel/events{/privacy}", "received_events_url": "https://api.github.com/users/alexfertel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexfertel", "id": 22298999, "node_id": "MDQ6VXNlcjIyMjk4OTk5", "avatar_url": "https://avatars.githubusercontent.com/u/22298999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexfertel", "html_url": "https://github.com/alexfertel", "followers_url": "https://api.github.com/users/alexfertel/followers", "following_url": "https://api.github.com/users/alexfertel/following{/other_user}", "gists_url": "https://api.github.com/users/alexfertel/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexfertel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexfertel/subscriptions", "organizations_url": "https://api.github.com/users/alexfertel/orgs", "repos_url": "https://api.github.com/users/alexfertel/repos", "events_url": "https://api.github.com/users/alexfertel/events{/privacy}", "received_events_url": "https://api.github.com/users/alexfertel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20c64cc0e6a025179c68cb0e76e4eca5f986271d", "url": "https://api.github.com/repos/rust-lang/rust/commits/20c64cc0e6a025179c68cb0e76e4eca5f986271d", "html_url": "https://github.com/rust-lang/rust/commit/20c64cc0e6a025179c68cb0e76e4eca5f986271d"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "692c3ff676a804ec23bdba2d89e26fbc329873bb", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8ca3bb8fcd3c3ac8eb232086f6286eb96f4bac79/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ca3bb8fcd3c3ac8eb232086f6286eb96f4bac79/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=8ca3bb8fcd3c3ac8eb232086f6286eb96f4bac79", "patch": "@@ -1,7 +1,7 @@\n use either::Either;\n use hir::{AsAssocItem, HasAttrs, HasSource, HirDisplay, Semantics};\n use ide_db::{\n-    base_db::SourceDatabase,\n+    base_db::{FileRange, SourceDatabase},\n     defs::{Definition, NameClass, NameRefClass},\n     helpers::{\n         generated_lints::{CLIPPY_LINTS, DEFAULT_LINTS, FEATURES},\n@@ -12,8 +12,12 @@ use ide_db::{\n use itertools::Itertools;\n use stdx::format_to;\n use syntax::{\n-    algo, ast, display::fn_as_proc_macro_label, match_ast, AstNode, AstToken, Direction,\n-    SyntaxKind::*, SyntaxToken, T,\n+    algo::{self, find_node_at_range},\n+    ast,\n+    display::fn_as_proc_macro_label,\n+    match_ast, AstNode, AstToken, Direction,\n+    SyntaxKind::*,\n+    SyntaxToken, T,\n };\n \n use crate::{\n@@ -246,6 +250,24 @@ pub(crate) fn hover_range(\n     range: FileRange,\n     config: &HoverConfig,\n ) -> Option<RangeInfo<HoverResult>> {\n+    let sema = hir::Semantics::new(db);\n+    let file = sema.parse(range.file_id).syntax().clone();\n+    let expr = find_node_at_range::<ast::Expr>(&file, range.range)?;\n+    let ty = sema.type_of_expr(&expr)?;\n+\n+    if ty.is_unknown() {\n+        return None;\n+    }\n+\n+    let mut res = HoverResult::default();\n+\n+    res.markup = if config.markdown() {\n+        Markup::fenced_block(&ty.display(db))\n+    } else {\n+        ty.display(db).to_string().into()\n+    };\n+\n+    Some(RangeInfo::new(range.range, res))\n }\n \n fn show_implementations_action(db: &RootDatabase, def: Definition) -> Option<HoverAction> {"}, {"sha": "6fae4b04a40d47e79a7987f40b5e63a324859bed", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8ca3bb8fcd3c3ac8eb232086f6286eb96f4bac79/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ca3bb8fcd3c3ac8eb232086f6286eb96f4bac79/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=8ca3bb8fcd3c3ac8eb232086f6286eb96f4bac79", "patch": "@@ -873,24 +873,25 @@ pub(crate) fn handle_hover(\n     let file_id = from_proto::file_id(&snap, &params.text_document.uri)?;\n     let range = from_proto::file_range(&snap, params.text_document, params.range)?;\n \n-    let info = if range.end - range.start == 1 {\n+    let info = if range.range.is_empty() {\n         // It's a hover over a position\n         match snap\n             .analysis\n-            .hover(&snap.config.hover(), FilePosition { file_id, offset: range.start })?\n+            .hover(&snap.config.hover(), FilePosition { file_id, offset: range.range.start() })?\n         {\n             None => return Ok(None),\n             Some(info) => info,\n         }\n     } else {\n         // It's a hover over a range\n+        log::info!(\"Triggered range hover\");\n         match snap.analysis.hover_range(&snap.config.hover(), range)? {\n             None => return Ok(None),\n             Some(info) => info,\n         }\n     };\n \n-    let line_index = snap.file_line_index(position.file_id)?;\n+    let line_index = snap.file_line_index(range.file_id)?;\n     let range = to_proto::range(&line_index, info.range);\n     let hover = lsp_ext::Hover {\n         hover: lsp_types::Hover {"}]}