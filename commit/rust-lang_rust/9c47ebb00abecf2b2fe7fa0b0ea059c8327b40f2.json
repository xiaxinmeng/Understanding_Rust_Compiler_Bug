{"sha": "9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNDdlYmIwMGFiZWNmMmIyZmU3ZmEwYjBlYTA1OWM4MzI3YjQwZjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-19T07:38:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-19T07:38:24Z"}, "message": "Auto merge of #25550 - sfackler:derive-debug-unsized, r=alexcrichton\n\nCloses #25394", "tree": {"sha": "493b85963a6c35be14df7e7673d9b213eae63206", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/493b85963a6c35be14df7e7673d9b213eae63206"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2", "html_url": "https://github.com/rust-lang/rust/commit/9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b301e02f37127da993dd2cf370aa1066d48b042e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b301e02f37127da993dd2cf370aa1066d48b042e", "html_url": "https://github.com/rust-lang/rust/commit/b301e02f37127da993dd2cf370aa1066d48b042e"}, {"sha": "1973ee479d83f06aea2366963d5ec092d8c591dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1973ee479d83f06aea2366963d5ec092d8c591dc", "html_url": "https://github.com/rust-lang/rust/commit/1973ee479d83f06aea2366963d5ec092d8c591dc"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "9dcbd2d1f702bc26bc29f2a9ee960576a783649f", "filename": "src/libsyntax/ext/deriving/show.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs?ref=9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2", "patch": "@@ -75,6 +75,7 @@ fn show_substructure(cx: &mut ExtCtxt, span: Span,\n \n     match *substr.fields {\n         Struct(ref fields) | EnumMatching(_, _, ref fields) => {\n+\n             if fields.is_empty() || fields[0].name.is_none() {\n                 // tuple struct/\"normal\" variant\n                 expr = cx.expr_method_call(span,\n@@ -83,11 +84,14 @@ fn show_substructure(cx: &mut ExtCtxt, span: Span,\n                                            vec![name]);\n \n                 for field in fields {\n+                    // Use double indirection to make sure this works for unsized types\n+                    let field = cx.expr_addr_of(field.span, field.self_.clone());\n+                    let field = cx.expr_addr_of(field.span, field);\n+\n                     expr = cx.expr_method_call(span,\n                                                expr,\n                                                token::str_to_ident(\"field\"),\n-                                               vec![cx.expr_addr_of(field.span,\n-                                                                    field.self_.clone())]);\n+                                               vec![field]);\n                 }\n             } else {\n                 // normal struct/struct variant\n@@ -100,12 +104,14 @@ fn show_substructure(cx: &mut ExtCtxt, span: Span,\n                     let name = cx.expr_lit(field.span, ast::Lit_::LitStr(\n                             token::get_ident(field.name.clone().unwrap()),\n                             ast::StrStyle::CookedStr));\n+\n+                    // Use double indirection to make sure this works for unsized types\n+                    let field = cx.expr_addr_of(field.span, field.self_.clone());\n+                    let field = cx.expr_addr_of(field.span, field);\n                     expr = cx.expr_method_call(span,\n                                                expr,\n                                                token::str_to_ident(\"field\"),\n-                                               vec![name,\n-                                                    cx.expr_addr_of(field.span,\n-                                                                    field.self_.clone())]);\n+                                               vec![name, field]);\n                 }\n             }\n         }"}, {"sha": "c42de6fdf3408c31bac87ae0bf9e88ca40e885c5", "filename": "src/test/run-pass/issue-25394.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2/src%2Ftest%2Frun-pass%2Fissue-25394.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2/src%2Ftest%2Frun-pass%2Fissue-25394.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-25394.rs?ref=9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[derive(Debug)]\n+struct Row<T>([T]);\n+\n+fn main() {}"}]}