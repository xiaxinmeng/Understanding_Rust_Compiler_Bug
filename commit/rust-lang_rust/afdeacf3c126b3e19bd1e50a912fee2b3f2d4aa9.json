{"sha": "afdeacf3c126b3e19bd1e50a912fee2b3f2d4aa9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZGVhY2YzYzEyNmIzZTE5YmQxZTUwYTkxMmZlZTJiM2YyZDRhYTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-18T16:52:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-18T16:52:52Z"}, "message": "Remove dead code", "tree": {"sha": "6e0df109f2af60ee3cbf3dea13938e72e1ce1e69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e0df109f2af60ee3cbf3dea13938e72e1ce1e69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afdeacf3c126b3e19bd1e50a912fee2b3f2d4aa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afdeacf3c126b3e19bd1e50a912fee2b3f2d4aa9", "html_url": "https://github.com/rust-lang/rust/commit/afdeacf3c126b3e19bd1e50a912fee2b3f2d4aa9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afdeacf3c126b3e19bd1e50a912fee2b3f2d4aa9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d33fc26e05c573f536e02afbffc354fa4f4a35f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d33fc26e05c573f536e02afbffc354fa4f4a35f3", "html_url": "https://github.com/rust-lang/rust/commit/d33fc26e05c573f536e02afbffc354fa4f4a35f3"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "7302cf0f187f6a436f0ee8873a540593052c9dfe", "filename": "crates/ra_hir_def/src/path.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/afdeacf3c126b3e19bd1e50a912fee2b3f2d4aa9/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afdeacf3c126b3e19bd1e50a912fee2b3f2d4aa9/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath.rs?ref=afdeacf3c126b3e19bd1e50a912fee2b3f2d4aa9", "patch": "@@ -130,11 +130,6 @@ impl Path {\n         Path { type_anchor: None, mod_path: name_ref.as_name().into(), generic_args: vec![None] }\n     }\n \n-    /// `true` if this path is just a standalone `self`\n-    pub fn is_self(&self) -> bool {\n-        self.mod_path.is_self()\n-    }\n-\n     pub fn kind(&self) -> &PathKind {\n         &self.mod_path.kind\n     }"}]}