{"sha": "b9cf6a33d2b5c0006f780c01bcaae4047551eb75", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5Y2Y2YTMzZDJiNWMwMDA2Zjc4MGMwMWJjYWFlNDA0NzU1MWViNzU=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-06-28T11:52:37Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-29T05:03:37Z"}, "message": "iterator: UnfoldrIterator::new should have function argument last\n\nTo match Rust conventions and enable use of `do` etc, make sure the\nclosure is the last argument to the `new` method.", "tree": {"sha": "c0b109725190d3b0f74dc01bbb1b349dc23c9441", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0b109725190d3b0f74dc01bbb1b349dc23c9441"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9cf6a33d2b5c0006f780c01bcaae4047551eb75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9cf6a33d2b5c0006f780c01bcaae4047551eb75", "html_url": "https://github.com/rust-lang/rust/commit/b9cf6a33d2b5c0006f780c01bcaae4047551eb75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9cf6a33d2b5c0006f780c01bcaae4047551eb75/comments", "author": null, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee7307e6cb9e942fc1ef27109bfbc6fbf730ee3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee7307e6cb9e942fc1ef27109bfbc6fbf730ee3c", "html_url": "https://github.com/rust-lang/rust/commit/ee7307e6cb9e942fc1ef27109bfbc6fbf730ee3c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "765bf3b36f2850b833995f84b31d5446cac9b026", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9cf6a33d2b5c0006f780c01bcaae4047551eb75/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9cf6a33d2b5c0006f780c01bcaae4047551eb75/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=b9cf6a33d2b5c0006f780c01bcaae4047551eb75", "patch": "@@ -983,7 +983,7 @@ impl<'self, A, St> UnfoldrIterator<'self, A, St> {\n     /// Creates a new iterator with the specified closure as the \"iterator\n     /// function\" and an initial state to eventually pass to the iterator\n     #[inline]\n-    pub fn new<'a>(f: &'a fn(&mut St) -> Option<A>, initial_state: St)\n+    pub fn new<'a>(initial_state: St, f: &'a fn(&mut St) -> Option<A>)\n         -> UnfoldrIterator<'a, A, St> {\n         UnfoldrIterator {\n             f: f,\n@@ -1174,7 +1174,7 @@ mod tests {\n             }\n         }\n \n-        let mut it = UnfoldrIterator::new(count, 0);\n+        let mut it = UnfoldrIterator::new(0, count);\n         let mut i = 0;\n         for it.advance |counted| {\n             assert_eq!(counted, i);"}, {"sha": "7fcae90a8d1177d28fb8eb40f906fc5602cbb9df", "filename": "src/test/run-pass/unfoldr-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9cf6a33d2b5c0006f780c01bcaae4047551eb75/src%2Ftest%2Frun-pass%2Funfoldr-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9cf6a33d2b5c0006f780c01bcaae4047551eb75/src%2Ftest%2Frun-pass%2Funfoldr-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funfoldr-cross-crate.rs?ref=b9cf6a33d2b5c0006f780c01bcaae4047551eb75", "patch": "@@ -24,7 +24,7 @@ fn main() {\n         }\n     }\n \n-    let mut it = UnfoldrIterator::new(count, 0);\n+    let mut it = UnfoldrIterator::new(0, count);\n     let mut i = 0;\n     for it.advance |counted| {\n         assert_eq!(counted, i);"}]}