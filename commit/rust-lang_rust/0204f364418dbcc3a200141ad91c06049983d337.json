{"sha": "0204f364418dbcc3a200141ad91c06049983d337", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMDRmMzY0NDE4ZGJjYzNhMjAwMTQxYWQ5MWMwNjA0OTk4M2QzMzc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-25T01:48:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-25T01:48:24Z"}, "message": "Rollup merge of #64428 - GuillaumeGomez:error-explanation-E0524, r=Centril\n\nError explanation e0524\n\nPart of https://github.com/rust-lang/rust/issues/61137", "tree": {"sha": "10a27b8b02879c9180a750d3ec6fd26fd036549f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10a27b8b02879c9180a750d3ec6fd26fd036549f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0204f364418dbcc3a200141ad91c06049983d337", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdisdoCRBK7hj4Ov3rIwAAdHIIAJYb4q8+xQspmXY+PAcjjIBb\nUVFnEIpVGZmyjZQ6tRb0rX+MyDGbRyiiFcYwN33r12z3H+eavTXz32uLGBr2PSHD\n51fwhHvTahuyl0SeFqL+2Gc6qiFsjXMnuCu0dodh+nuTYwSGWLUdUF5Lp5PVjsUG\ne7FoXE1eEkJUAI7w7bTn9SyVr87BwqImzAYKieH8KvyUI/W7JpejB4AUQXafND3x\n8sRCRB/LJf+cHFHl+cIYkJUJ2Z0IhN71iCseKQd6uMBmfpxinteH9UbYRsH/uOBS\nlZzVgaFUofSZsGI/fSWFsjqgWTQYC8SUErFZoASgJRajS7Heu0So/gXu/Nx7EYs=\n=ZuVm\n-----END PGP SIGNATURE-----\n", "payload": "tree 10a27b8b02879c9180a750d3ec6fd26fd036549f\nparent 40fae88fa82db350f1233b9b93df0be30e6579bc\nparent d2b873b06706e97dc54317b8c0ad8f9efa1c3b70\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569376104 +0200\ncommitter GitHub <noreply@github.com> 1569376104 +0200\n\nRollup merge of #64428 - GuillaumeGomez:error-explanation-E0524, r=Centril\n\nError explanation e0524\n\nPart of https://github.com/rust-lang/rust/issues/61137\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0204f364418dbcc3a200141ad91c06049983d337", "html_url": "https://github.com/rust-lang/rust/commit/0204f364418dbcc3a200141ad91c06049983d337", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0204f364418dbcc3a200141ad91c06049983d337/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40fae88fa82db350f1233b9b93df0be30e6579bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/40fae88fa82db350f1233b9b93df0be30e6579bc", "html_url": "https://github.com/rust-lang/rust/commit/40fae88fa82db350f1233b9b93df0be30e6579bc"}, {"sha": "d2b873b06706e97dc54317b8c0ad8f9efa1c3b70", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2b873b06706e97dc54317b8c0ad8f9efa1c3b70", "html_url": "https://github.com/rust-lang/rust/commit/d2b873b06706e97dc54317b8c0ad8f9efa1c3b70"}], "stats": {"total": 83, "additions": 72, "deletions": 11}, "files": [{"sha": "196bcf147f8f81ad2abc6b489a539b22598768f4", "filename": "src/librustc_mir/error_codes.rs", "status": "modified", "additions": 63, "deletions": 1, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/0204f364418dbcc3a200141ad91c06049983d337/src%2Flibrustc_mir%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0204f364418dbcc3a200141ad91c06049983d337/src%2Flibrustc_mir%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ferror_codes.rs?ref=0204f364418dbcc3a200141ad91c06049983d337", "patch": "@@ -1993,6 +1993,69 @@ fn get_owned_iterator() -> IntoIter<i32> {\n ```\n \"##,\n \n+E0524: r##\"\n+A variable which requires unique access is being used in more than one closure\n+at the same time.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0524\n+fn set(x: &mut isize) {\n+    *x += 4;\n+}\n+\n+fn dragoooon(x: &mut isize) {\n+    let mut c1 = || set(x);\n+    let mut c2 = || set(x); // error!\n+\n+    c2();\n+    c1();\n+}\n+```\n+\n+To solve this issue, multiple solutions are available. First, is it required\n+for this variable to be used in more than one closure at a time? If it is the\n+case, use reference counted types such as `Rc` (or `Arc` if it runs\n+concurrently):\n+\n+```\n+use std::rc::Rc;\n+use std::cell::RefCell;\n+\n+fn set(x: &mut isize) {\n+    *x += 4;\n+}\n+\n+fn dragoooon(x: &mut isize) {\n+    let x = Rc::new(RefCell::new(x));\n+    let y = Rc::clone(&x);\n+    let mut c1 = || { let mut x2 = x.borrow_mut(); set(&mut x2); };\n+    let mut c2 = || { let mut x2 = y.borrow_mut(); set(&mut x2); }; // ok!\n+\n+    c2();\n+    c1();\n+}\n+```\n+\n+If not, just run closures one at a time:\n+\n+```\n+fn set(x: &mut isize) {\n+    *x += 4;\n+}\n+\n+fn dragoooon(x: &mut isize) {\n+    { // This block isn't necessary since non-lexical lifetimes, it's just to\n+      // make it more clear.\n+        let mut c1 = || set(&mut *x);\n+        c1();\n+    } // `c1` has been dropped here so we're free to use `x` again!\n+    let mut c2 = || set(&mut *x);\n+    c2();\n+}\n+```\n+\"##,\n+\n E0595: r##\"\n #### Note: this error code is no longer emitted by the compiler.\n \n@@ -2393,7 +2456,6 @@ There are some known bugs that trigger this message.\n //  E0385, // {} in an aliasable location\n     E0493, // destructors cannot be evaluated at compile-time\n     E0521, // borrowed data escapes outside of closure\n-    E0524, // two closures require unique access to `..` at the same time\n     E0526, // shuffle indices are not constant\n     E0594, // cannot assign to {}\n //  E0598, // lifetime of {} is too short to guarantee its contents can be..."}, {"sha": "d7e187a2b39580ba2927e5deb330d1473d57b2da", "filename": "src/test/ui/borrowck/borrowck-closures-mut-of-imm.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0204f364418dbcc3a200141ad91c06049983d337/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-mut-of-imm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0204f364418dbcc3a200141ad91c06049983d337/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-mut-of-imm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-mut-of-imm.rs?ref=0204f364418dbcc3a200141ad91c06049983d337", "patch": "@@ -1,10 +1,6 @@\n // Tests that two closures cannot simultaneously have mutable\n // and immutable access to the variable. Issue #6801.\n \n-fn get(x: &isize) -> isize {\n-    *x\n-}\n-\n fn set(x: &mut isize) {\n     *x = 4;\n }"}, {"sha": "784b903a5896acd1eb37d8ee87ecbfe50714fe37", "filename": "src/test/ui/borrowck/borrowck-closures-mut-of-imm.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0204f364418dbcc3a200141ad91c06049983d337/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-mut-of-imm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0204f364418dbcc3a200141ad91c06049983d337/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-mut-of-imm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-mut-of-imm.stderr?ref=0204f364418dbcc3a200141ad91c06049983d337", "patch": "@@ -1,17 +1,17 @@\n error[E0596]: cannot borrow `*x` as mutable, as it is behind a `&` reference\n-  --> $DIR/borrowck-closures-mut-of-imm.rs:13:25\n+  --> $DIR/borrowck-closures-mut-of-imm.rs:9:25\n    |\n LL |     let mut c1 = || set(&mut *x);\n    |                         ^^^^^^^ cannot borrow as mutable\n \n error[E0596]: cannot borrow `*x` as mutable, as it is behind a `&` reference\n-  --> $DIR/borrowck-closures-mut-of-imm.rs:15:25\n+  --> $DIR/borrowck-closures-mut-of-imm.rs:11:25\n    |\n LL |     let mut c2 = || set(&mut *x);\n    |                         ^^^^^^^ cannot borrow as mutable\n \n error[E0524]: two closures require unique access to `x` at the same time\n-  --> $DIR/borrowck-closures-mut-of-imm.rs:15:18\n+  --> $DIR/borrowck-closures-mut-of-imm.rs:11:18\n    |\n LL |     let mut c1 = || set(&mut *x);\n    |                  --           - first borrow occurs due to use of `x` in closure\n@@ -28,4 +28,5 @@ LL |     c2(); c1();\n \n error: aborting due to 3 previous errors\n \n-For more information about this error, try `rustc --explain E0596`.\n+Some errors have detailed explanations: E0524, E0596.\n+For more information about an error, try `rustc --explain E0524`."}, {"sha": "471173e595f4793cf3eec4844783c114a18d600f", "filename": "src/test/ui/borrowck/borrowck-closures-mut-of-mut.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0204f364418dbcc3a200141ad91c06049983d337/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-mut-of-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0204f364418dbcc3a200141ad91c06049983d337/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-mut-of-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-mut-of-mut.stderr?ref=0204f364418dbcc3a200141ad91c06049983d337", "patch": "@@ -15,3 +15,4 @@ LL |     c2(); c1();\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0524`."}, {"sha": "2ed08b83c58b98a4d552a94ac47cf54c95853da2", "filename": "src/test/ui/borrowck/borrowck-closures-unique.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0204f364418dbcc3a200141ad91c06049983d337/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-unique.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0204f364418dbcc3a200141ad91c06049983d337/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-unique.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-unique.stderr?ref=0204f364418dbcc3a200141ad91c06049983d337", "patch": "@@ -50,4 +50,5 @@ LL |     let c1 = |y: &'static mut isize| x = y;\n \n error: aborting due to 4 previous errors\n \n-For more information about this error, try `rustc --explain E0500`.\n+Some errors have detailed explanations: E0500, E0524.\n+For more information about an error, try `rustc --explain E0500`."}, {"sha": "0b15d9bcfe68c0d169e0b925d9bae179b185b582", "filename": "src/test/ui/nll/closures-in-loops.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0204f364418dbcc3a200141ad91c06049983d337/src%2Ftest%2Fui%2Fnll%2Fclosures-in-loops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0204f364418dbcc3a200141ad91c06049983d337/src%2Ftest%2Fui%2Fnll%2Fclosures-in-loops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosures-in-loops.stderr?ref=0204f364418dbcc3a200141ad91c06049983d337", "patch": "@@ -27,5 +27,5 @@ LL |         v.push(|| *x = String::new());\n \n error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0382, E0499.\n+Some errors have detailed explanations: E0382, E0499, E0524.\n For more information about an error, try `rustc --explain E0382`."}]}