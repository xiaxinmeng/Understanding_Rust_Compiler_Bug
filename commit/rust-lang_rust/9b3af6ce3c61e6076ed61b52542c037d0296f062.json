{"sha": "9b3af6ce3c61e6076ed61b52542c037d0296f062", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliM2FmNmNlM2M2MWU2MDc2ZWQ2MWI1MjU0MmMwMzdkMDI5NmYwNjI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-31T16:55:54Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-31T16:55:54Z"}, "message": "rewrite `write_mir_fn_graphviz` to cope with non-global tcx", "tree": {"sha": "dcb3fc8aeeb01e33f7cd8c681a18bfdb82dc6b48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcb3fc8aeeb01e33f7cd8c681a18bfdb82dc6b48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b3af6ce3c61e6076ed61b52542c037d0296f062", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b3af6ce3c61e6076ed61b52542c037d0296f062", "html_url": "https://github.com/rust-lang/rust/commit/9b3af6ce3c61e6076ed61b52542c037d0296f062", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b3af6ce3c61e6076ed61b52542c037d0296f062/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9fb792d7c259b76e51c1cbd6a7e5f9cee27ff99", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9fb792d7c259b76e51c1cbd6a7e5f9cee27ff99", "html_url": "https://github.com/rust-lang/rust/commit/d9fb792d7c259b76e51c1cbd6a7e5f9cee27ff99"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "b72823dff2bdc7f834d3c40c8bce2e34d46baf69", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9b3af6ce3c61e6076ed61b52542c037d0296f062/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b3af6ce3c61e6076ed61b52542c037d0296f062/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=9b3af6ce3c61e6076ed61b52542c037d0296f062", "patch": "@@ -25,6 +25,7 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(placement_in_syntax)]\n #![feature(collection_placement)]\n #![feature(nonzero)]\n+#![feature(underscore_lifetimes)]\n \n #[macro_use]\n extern crate bitflags;"}, {"sha": "a38d317b823b234959a6cf96b37734b082b66947", "filename": "src/librustc_mir/util/graphviz.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9b3af6ce3c61e6076ed61b52542c037d0296f062/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b3af6ce3c61e6076ed61b52542c037d0296f062/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs?ref=9b3af6ce3c61e6076ed61b52542c037d0296f062", "patch": "@@ -21,10 +21,10 @@ use rustc_data_structures::indexed_vec::Idx;\n use super::pretty::dump_mir_def_ids;\n \n /// Write a graphviz DOT graph of a list of MIRs.\n-pub fn write_mir_graphviz<'a, 'tcx, W>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                                       single: Option<DefId>,\n-                                       w: &mut W)\n-                                       -> io::Result<()>\n+pub fn write_mir_graphviz<'tcx, W>(tcx: TyCtxt<'_, '_, 'tcx>,\n+                                   single: Option<DefId>,\n+                                   w: &mut W)\n+                                   -> io::Result<()>\n     where W: Write\n {\n     for def_id in dump_mir_def_ids(tcx, single) {\n@@ -36,10 +36,10 @@ pub fn write_mir_graphviz<'a, 'tcx, W>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n }\n \n /// Write a graphviz DOT graph of the MIR.\n-pub fn write_mir_fn_graphviz<'a, 'tcx, W>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                                        nodeid: NodeId,\n-                                        mir: &Mir,\n-                                        w: &mut W) -> io::Result<()>\n+pub fn write_mir_fn_graphviz<'tcx, W>(tcx: TyCtxt<'_, '_, 'tcx>,\n+                                      nodeid: NodeId,\n+                                      mir: &Mir,\n+                                      w: &mut W) -> io::Result<()>\n     where W: Write\n {\n     writeln!(w, \"digraph Mir_{} {{\", nodeid)?;\n@@ -137,11 +137,11 @@ fn write_edges<W: Write>(source: BasicBlock, mir: &Mir, w: &mut W) -> io::Result\n /// Write the graphviz DOT label for the overall graph. This is essentially a block of text that\n /// will appear below the graph, showing the type of the `fn` this MIR represents and the types of\n /// all the variables and temporaries.\n-fn write_graph_label<'a, 'tcx, W: Write>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                                         nid: NodeId,\n-                                         mir: &Mir,\n-                                         w: &mut W)\n-                                         -> io::Result<()> {\n+fn write_graph_label<'a, 'gcx, 'tcx, W: Write>(tcx: TyCtxt<'a, 'gcx, 'tcx>,\n+                                               nid: NodeId,\n+                                               mir: &Mir,\n+                                               w: &mut W)\n+                                               -> io::Result<()> {\n     write!(w, \"    label=<fn {}(\", dot::escape_html(&tcx.node_path_str(nid)))?;\n \n     // fn argument types."}]}