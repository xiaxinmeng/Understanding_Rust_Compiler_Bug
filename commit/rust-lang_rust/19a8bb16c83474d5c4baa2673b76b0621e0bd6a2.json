{"sha": "19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "node_id": "C_kwDOAAsO6NoAKDE5YThiYjE2YzgzNDc0ZDVjNGJhYTI2NzNiNzZiMDYyMWUwYmQ2YTI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-25T16:55:30Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-13T18:22:55Z"}, "message": "Generalize operation.", "tree": {"sha": "daaa31ee5d0007acab6ff335d468aa35b14ce505", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/daaa31ee5d0007acab6ff335d468aa35b14ce505"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "html_url": "https://github.com/rust-lang/rust/commit/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63ce733fe272e6ead8f9536754f002c93883651a", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ce733fe272e6ead8f9536754f002c93883651a", "html_url": "https://github.com/rust-lang/rust/commit/63ce733fe272e6ead8f9536754f002c93883651a"}], "stats": {"total": 250, "additions": 127, "deletions": 123}, "files": [{"sha": "1f37f03cff1ca9c022e3a853e17fb7f35eb842f9", "filename": "compiler/rustc_mir_transform/src/remove_zsts.rs", "status": "modified", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_zsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_zsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_zsts.rs?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -110,21 +110,34 @@ impl<'tcx> MutVisitor<'tcx> for Replacer<'_, 'tcx> {\n     }\n \n     fn visit_statement(&mut self, statement: &mut Statement<'tcx>, loc: Location) {\n-        if let StatementKind::Assign(box (place, _)) | StatementKind::Deinit(box place) =\n-            statement.kind\n-        {\n-            let place_ty = place.ty(self.local_decls, self.tcx).ty;\n-            if self.known_to_be_zst(place_ty)\n-                && self.tcx.consider_optimizing(|| {\n-                    format!(\n-                        \"RemoveZsts - Place: {:?} SourceInfo: {:?}\",\n-                        place, statement.source_info\n-                    )\n-                })\n-            {\n-                statement.make_nop();\n+        let place_for_ty = match statement.kind {\n+            StatementKind::Assign(box (place, ref rvalue)) => {\n+                rvalue.is_safe_to_remove().then_some(place)\n+            }\n+            StatementKind::Deinit(box place)\n+            | StatementKind::SetDiscriminant { box place, variant_index: _ }\n+            | StatementKind::AscribeUserType(box (place, _), _)\n+            | StatementKind::Retag(_, box place)\n+            | StatementKind::PlaceMention(box place)\n+            | StatementKind::FakeRead(box (_, place)) => Some(place),\n+            StatementKind::StorageLive(local) | StatementKind::StorageDead(local) => {\n+                Some(local.into())\n             }\n+            StatementKind::Coverage(_)\n+            | StatementKind::Intrinsic(_)\n+            | StatementKind::Nop\n+            | StatementKind::ConstEvalCounter => None,\n+        };\n+        if let Some(place_for_ty) = place_for_ty\n+            && let ty = place_for_ty.ty(self.local_decls, self.tcx).ty\n+            && self.known_to_be_zst(ty)\n+            && self.tcx.consider_optimizing(|| {\n+                format!(\"RemoveZsts - Place: {:?} SourceInfo: {:?}\", place_for_ty, statement.source_info)\n+            })\n+        {\n+            statement.make_nop();\n+        } else {\n+            self.super_statement(statement, loc);\n         }\n-        self.super_statement(statement, loc);\n     }\n }"}, {"sha": "7e77c18d5758ee8c5930c1c07c4e16f9245e69aa", "filename": "tests/mir-opt/const_prop/control_flow_simplification.hello.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -14,7 +14,6 @@\n       }\n   \n       bb1: {\n-          StorageLive(_2);                 // scope 0 at $SRC_DIR/std/src/panic.rs:LL:COL\n           _2 = begin_panic::<&str>(const \"explicit panic\"); // scope 0 at $SRC_DIR/std/src/panic.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/std/src/panic.rs:LL:COL"}, {"sha": "e31c2bc39388be10c706214f6f33331f77ffd9c3", "filename": "tests/mir-opt/const_prop/invalid_constant.main.RemoveZsts.diff", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Finvalid_constant.main.RemoveZsts.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Finvalid_constant.main.RemoveZsts.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Finvalid_constant.main.RemoveZsts.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -47,21 +47,27 @@\n           _3 = [move _4];                  // scope 1 at $DIR/invalid_constant.rs:+13:24: +13:60\n           StorageDead(_4);                 // scope 1 at $DIR/invalid_constant.rs:+13:59: +13:60\n           StorageDead(_5);                 // scope 1 at $DIR/invalid_constant.rs:+13:60: +13:61\n-          StorageLive(_6);                 // scope 3 at $DIR/invalid_constant.rs:+20:9: +20:31\n-          StorageLive(_7);                 // scope 3 at $DIR/invalid_constant.rs:+20:35: +20:73\n+-         StorageLive(_6);                 // scope 3 at $DIR/invalid_constant.rs:+20:9: +20:31\n+-         StorageLive(_7);                 // scope 3 at $DIR/invalid_constant.rs:+20:35: +20:73\n++         nop;                             // scope 3 at $DIR/invalid_constant.rs:+20:9: +20:31\n++         nop;                             // scope 3 at $DIR/invalid_constant.rs:+20:35: +20:73\n           StorageLive(_8);                 // scope 6 at $DIR/invalid_constant.rs:+20:44: +20:65\n           _8 = NoVariants { int: const 0_u32 }; // scope 6 at $DIR/invalid_constant.rs:+20:44: +20:65\n -         _7 = (_8.1: Empty);              // scope 6 at $DIR/invalid_constant.rs:+20:44: +20:71\n -         _6 = [move _7];                  // scope 3 at $DIR/invalid_constant.rs:+20:34: +20:74\n+-         StorageDead(_7);                 // scope 3 at $DIR/invalid_constant.rs:+20:73: +20:74\n +         nop;                             // scope 6 at $DIR/invalid_constant.rs:+20:44: +20:71\n +         nop;                             // scope 3 at $DIR/invalid_constant.rs:+20:34: +20:74\n-          StorageDead(_7);                 // scope 3 at $DIR/invalid_constant.rs:+20:73: +20:74\n++         nop;                             // scope 3 at $DIR/invalid_constant.rs:+20:73: +20:74\n           StorageDead(_8);                 // scope 3 at $DIR/invalid_constant.rs:+20:74: +20:75\n-          StorageLive(_9);                 // scope 5 at $DIR/invalid_constant.rs:+24:9: +24:22\n+-         StorageLive(_9);                 // scope 5 at $DIR/invalid_constant.rs:+24:9: +24:22\n -         _0 = const ();                   // scope 0 at $DIR/invalid_constant.rs:+0:11: +27:2\n+-         StorageDead(_9);                 // scope 5 at $DIR/invalid_constant.rs:+27:1: +27:2\n+-         StorageDead(_6);                 // scope 3 at $DIR/invalid_constant.rs:+27:1: +27:2\n++         nop;                             // scope 5 at $DIR/invalid_constant.rs:+24:9: +24:22\n +         nop;                             // scope 0 at $DIR/invalid_constant.rs:+0:11: +27:2\n-          StorageDead(_9);                 // scope 5 at $DIR/invalid_constant.rs:+27:1: +27:2\n-          StorageDead(_6);                 // scope 3 at $DIR/invalid_constant.rs:+27:1: +27:2\n++         nop;                             // scope 5 at $DIR/invalid_constant.rs:+27:1: +27:2\n++         nop;                             // scope 3 at $DIR/invalid_constant.rs:+27:1: +27:2\n           StorageDead(_3);                 // scope 1 at $DIR/invalid_constant.rs:+27:1: +27:2\n           StorageDead(_1);                 // scope 0 at $DIR/invalid_constant.rs:+27:1: +27:2\n           return;                          // scope 0 at $DIR/invalid_constant.rs:+27:2: +27:2"}, {"sha": "a4f9003e1401eaa4ced15b9785ae05e90f172df0", "filename": "tests/mir-opt/const_prop/issue_66971.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Fissue_66971.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Fissue_66971.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fissue_66971.main.ConstProp.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -7,7 +7,6 @@\n       let mut _2: ((), u8, u8);            // in scope 0 at $DIR/issue_66971.rs:+1:12: +1:22\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/issue_66971.rs:+1:5: +1:23\n           StorageLive(_2);                 // scope 0 at $DIR/issue_66971.rs:+1:12: +1:22\n           _2 = (const (), const 0_u8, const 0_u8); // scope 0 at $DIR/issue_66971.rs:+1:12: +1:22\n           _1 = encode(move _2) -> bb1;     // scope 0 at $DIR/issue_66971.rs:+1:5: +1:23\n@@ -18,7 +17,6 @@\n   \n       bb1: {\n           StorageDead(_2);                 // scope 0 at $DIR/issue_66971.rs:+1:22: +1:23\n-          StorageDead(_1);                 // scope 0 at $DIR/issue_66971.rs:+1:23: +1:24\n           return;                          // scope 0 at $DIR/issue_66971.rs:+2:2: +2:2\n       }\n   }"}, {"sha": "f456a321204989d74c172b6aa781b4737f5bc741", "filename": "tests/mir-opt/const_prop/issue_67019.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -8,7 +8,6 @@\n       let mut _3: (u8, u8);                // in scope 0 at $DIR/issue_67019.rs:+1:11: +1:17\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/issue_67019.rs:+1:5: +1:20\n           StorageLive(_2);                 // scope 0 at $DIR/issue_67019.rs:+1:10: +1:19\n           StorageLive(_3);                 // scope 0 at $DIR/issue_67019.rs:+1:11: +1:17\n -         _3 = (const 1_u8, const 2_u8);   // scope 0 at $DIR/issue_67019.rs:+1:11: +1:17\n@@ -23,7 +22,6 @@\n   \n       bb1: {\n           StorageDead(_2);                 // scope 0 at $DIR/issue_67019.rs:+1:19: +1:20\n-          StorageDead(_1);                 // scope 0 at $DIR/issue_67019.rs:+1:20: +1:21\n           return;                          // scope 0 at $DIR/issue_67019.rs:+2:2: +2:2\n       }\n   }"}, {"sha": "1151caaabbc1275ee0481a8c3caed00049d70e58", "filename": "tests/mir-opt/const_prop/scalar_literal_propagation.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Fscalar_literal_propagation.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Fscalar_literal_propagation.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fscalar_literal_propagation.main.ConstProp.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -12,7 +12,6 @@\n   \n       bb0: {\n           _1 = const 1_u32;                // scope 0 at $DIR/scalar_literal_propagation.rs:+1:13: +1:14\n-          StorageLive(_2);                 // scope 1 at $DIR/scalar_literal_propagation.rs:+2:5: +2:15\n -         _2 = consume(_1) -> bb1;         // scope 1 at $DIR/scalar_literal_propagation.rs:+2:5: +2:15\n +         _2 = consume(const 1_u32) -> bb1; // scope 1 at $DIR/scalar_literal_propagation.rs:+2:5: +2:15\n                                            // mir::Constant\n@@ -21,7 +20,6 @@\n       }\n   \n       bb1: {\n-          StorageDead(_2);                 // scope 1 at $DIR/scalar_literal_propagation.rs:+2:15: +2:16\n           return;                          // scope 0 at $DIR/scalar_literal_propagation.rs:+3:2: +3:2\n       }\n   }"}, {"sha": "d370abce45a473caef323513c9b3e3b01361c132", "filename": "tests/mir-opt/const_prop/tuple_literal_propagation.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.main.ConstProp.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -13,15 +13,13 @@\n       bb0: {\n -         _1 = (const 1_u32, const 2_u32); // scope 0 at $DIR/tuple_literal_propagation.rs:+1:13: +1:19\n +         _1 = const (1_u32, 2_u32);       // scope 0 at $DIR/tuple_literal_propagation.rs:+1:13: +1:19\n-          StorageLive(_2);                 // scope 1 at $DIR/tuple_literal_propagation.rs:+3:5: +3:15\n           _2 = consume(_1) -> bb1;         // scope 1 at $DIR/tuple_literal_propagation.rs:+3:5: +3:15\n                                            // mir::Constant\n                                            // + span: $DIR/tuple_literal_propagation.rs:5:5: 5:12\n                                            // + literal: Const { ty: fn((u32, u32)) {consume}, val: Value(<ZST>) }\n       }\n   \n       bb1: {\n-          StorageDead(_2);                 // scope 1 at $DIR/tuple_literal_propagation.rs:+3:15: +3:16\n           return;                          // scope 0 at $DIR/tuple_literal_propagation.rs:+4:2: +4:2\n       }\n   }"}, {"sha": "ed290063a930545cba8d4bbd7e1adf4f20a5b262", "filename": "tests/mir-opt/inline/asm_unwind.main.Inline.diff", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Fasm_unwind.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Fasm_unwind.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finline%2Fasm_unwind.main.Inline.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -19,21 +19,21 @@\n -                                          // mir::Constant\n -                                          // + span: $DIR/asm_unwind.rs:21:5: 21:8\n -                                          // + literal: Const { ty: fn() {foo}, val: Value(<ZST>) }\n-+         StorageLive(_2);                 // scope 1 at $DIR/asm_unwind.rs:15:9: 15:11\n-+         asm!(\"\", options(MAY_UNWIND)) -> [return: bb1, unwind: bb3]; // scope 3 at $DIR/asm_unwind.rs:16:14: 16:54\n++         StorageLive(_2);                 // scope 0 at $DIR/asm_unwind.rs:+1:5: +1:10\n++         asm!(\"\", options(MAY_UNWIND)) -> [return: bb2, unwind: bb3]; // scope 3 at $DIR/asm_unwind.rs:16:14: 16:54\n       }\n   \n       bb1: {\n-+         drop(_2) -> bb2;                 // scope 1 at $DIR/asm_unwind.rs:17:1: 17:2\n-+     }\n-+ \n-+     bb2: {\n-+         StorageDead(_2);                 // scope 1 at $DIR/asm_unwind.rs:17:1: 17:2\n++         StorageDead(_2);                 // scope 0 at $DIR/asm_unwind.rs:+1:5: +1:10\n           StorageDead(_1);                 // scope 0 at $DIR/asm_unwind.rs:+1:10: +1:11\n           _0 = const ();                   // scope 0 at $DIR/asm_unwind.rs:+0:15: +2:2\n           return;                          // scope 0 at $DIR/asm_unwind.rs:+2:2: +2:2\n +     }\n + \n++     bb2: {\n++         drop(_2) -> bb1;                 // scope 1 at $DIR/asm_unwind.rs:17:1: 17:2\n++     }\n++ \n +     bb3 (cleanup): {\n +         drop(_2) -> bb4;                 // scope 1 at $DIR/asm_unwind.rs:17:1: 17:2\n +     }"}, {"sha": "20d313aecf5880f04a79381bf75aa7752078ccf9", "filename": "tests/mir-opt/inline/cycle.g.Inline.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Fcycle.g.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Fcycle.g.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finline%2Fcycle.g.Inline.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -25,7 +25,7 @@\n -                                          // mir::Constant\n                                            // + span: $DIR/cycle.rs:12:7: 12:11\n                                            // + literal: Const { ty: fn() {main}, val: Value(<ZST>) }\n-+         StorageLive(_3);                 // scope 1 at $DIR/cycle.rs:6:5: 6:8\n++         StorageLive(_3);                 // scope 0 at $DIR/cycle.rs:+1:5: +1:12\n +         StorageLive(_4);                 // scope 1 at $DIR/cycle.rs:6:5: 6:6\n +         _4 = &_2;                        // scope 1 at $DIR/cycle.rs:6:5: 6:6\n +         StorageLive(_5);                 // scope 1 at $DIR/cycle.rs:6:5: 6:8\n@@ -34,6 +34,7 @@\n       }\n   \n       bb1: {\n++         StorageDead(_3);                 // scope 0 at $DIR/cycle.rs:+1:5: +1:12\n +         StorageDead(_2);                 // scope 0 at $DIR/cycle.rs:+1:5: +1:12\n           StorageDead(_1);                 // scope 0 at $DIR/cycle.rs:+1:12: +1:13\n           _0 = const ();                   // scope 0 at $DIR/cycle.rs:+0:8: +2:2\n@@ -51,7 +52,6 @@\n +     bb4: {\n +         StorageDead(_5);                 // scope 1 at $DIR/cycle.rs:6:5: 6:8\n +         StorageDead(_4);                 // scope 1 at $DIR/cycle.rs:6:7: 6:8\n-+         StorageDead(_3);                 // scope 1 at $DIR/cycle.rs:6:8: 6:9\n +         drop(_2) -> bb1;                 // scope 1 at $DIR/cycle.rs:7:1: 7:2\n       }\n   }"}, {"sha": "dacc5f4be9d7fb5b47465586113f58c02cc77680", "filename": "tests/mir-opt/inline/cycle.main.Inline.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Fcycle.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Fcycle.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finline%2Fcycle.main.Inline.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -25,7 +25,7 @@\n -                                          // mir::Constant\n                                            // + span: $DIR/cycle.rs:17:7: 17:8\n                                            // + literal: Const { ty: fn() {g}, val: Value(<ZST>) }\n-+         StorageLive(_3);                 // scope 1 at $DIR/cycle.rs:6:5: 6:8\n++         StorageLive(_3);                 // scope 0 at $DIR/cycle.rs:+1:5: +1:9\n +         StorageLive(_4);                 // scope 1 at $DIR/cycle.rs:6:5: 6:6\n +         _4 = &_2;                        // scope 1 at $DIR/cycle.rs:6:5: 6:6\n +         StorageLive(_5);                 // scope 1 at $DIR/cycle.rs:6:5: 6:8\n@@ -34,6 +34,7 @@\n       }\n   \n       bb1: {\n++         StorageDead(_3);                 // scope 0 at $DIR/cycle.rs:+1:5: +1:9\n +         StorageDead(_2);                 // scope 0 at $DIR/cycle.rs:+1:5: +1:9\n           StorageDead(_1);                 // scope 0 at $DIR/cycle.rs:+1:9: +1:10\n           _0 = const ();                   // scope 0 at $DIR/cycle.rs:+0:11: +2:2\n@@ -51,7 +52,6 @@\n +     bb4: {\n +         StorageDead(_5);                 // scope 1 at $DIR/cycle.rs:6:5: 6:8\n +         StorageDead(_4);                 // scope 1 at $DIR/cycle.rs:6:7: 6:8\n-+         StorageDead(_3);                 // scope 1 at $DIR/cycle.rs:6:8: 6:9\n +         drop(_2) -> bb1;                 // scope 1 at $DIR/cycle.rs:7:1: 7:2\n       }\n   }"}, {"sha": "dd1f253cb47dd46f15dec6ba20fcf89ad839bfea", "filename": "tests/mir-opt/inline/exponential_runtime.main.Inline.diff", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Fexponential_runtime.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Fexponential_runtime.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finline%2Fexponential_runtime.main.Inline.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -18,9 +18,13 @@\n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22\n -         _1 = <() as G>::call() -> bb1;   // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22\n-+         StorageLive(_2);                 // scope 1 at $DIR/exponential_runtime.rs:73:9: 73:25\n-+         StorageLive(_5);                 // scope 2 at $DIR/exponential_runtime.rs:61:9: 61:25\n-+         _5 = <() as E>::call() -> bb3;   // scope 2 at $DIR/exponential_runtime.rs:61:9: 61:25\n++         StorageLive(_2);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22\n++         StorageLive(_3);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22\n++         StorageLive(_4);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22\n++         StorageLive(_5);                 // scope 1 at $DIR/exponential_runtime.rs:73:9: 73:25\n++         StorageLive(_6);                 // scope 1 at $DIR/exponential_runtime.rs:73:9: 73:25\n++         StorageLive(_7);                 // scope 1 at $DIR/exponential_runtime.rs:73:9: 73:25\n++         _5 = <() as E>::call() -> bb4;   // scope 2 at $DIR/exponential_runtime.rs:61:9: 61:25\n                                            // mir::Constant\n -                                          // + span: $DIR/exponential_runtime.rs:86:5: 86:20\n -                                          // + literal: Const { ty: fn() {<() as G>::call}, val: Value(<ZST>) }\n@@ -29,47 +33,43 @@\n       }\n   \n       bb1: {\n-+         StorageDead(_3);                 // scope 1 at $DIR/exponential_runtime.rs:74:25: 74:26\n-+         StorageLive(_4);                 // scope 1 at $DIR/exponential_runtime.rs:75:9: 75:25\n-+         _4 = <() as F>::call() -> bb2;   // scope 1 at $DIR/exponential_runtime.rs:75:9: 75:25\n-+                                          // mir::Constant\n-+                                          // + span: $DIR/exponential_runtime.rs:75:9: 75:23\n-+                                          // + literal: Const { ty: fn() {<() as F>::call}, val: Value(<ZST>) }\n-+     }\n-+ \n-+     bb2: {\n-+         StorageDead(_4);                 // scope 1 at $DIR/exponential_runtime.rs:75:25: 75:26\n++         StorageDead(_4);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22\n++         StorageDead(_3);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22\n++         StorageDead(_2);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22\n           StorageDead(_1);                 // scope 0 at $DIR/exponential_runtime.rs:+1:22: +1:23\n           _0 = const ();                   // scope 0 at $DIR/exponential_runtime.rs:+0:11: +2:2\n           return;                          // scope 0 at $DIR/exponential_runtime.rs:+2:2: +2:2\n +     }\n + \n++     bb2: {\n++         StorageDead(_7);                 // scope 1 at $DIR/exponential_runtime.rs:73:9: 73:25\n++         StorageDead(_6);                 // scope 1 at $DIR/exponential_runtime.rs:73:9: 73:25\n++         StorageDead(_5);                 // scope 1 at $DIR/exponential_runtime.rs:73:9: 73:25\n++         _3 = <() as F>::call() -> bb3;   // scope 1 at $DIR/exponential_runtime.rs:74:9: 74:25\n++                                          // mir::Constant\n++                                          // + span: $DIR/exponential_runtime.rs:74:9: 74:23\n++                                          // + literal: Const { ty: fn() {<() as F>::call}, val: Value(<ZST>) }\n++     }\n++ \n +     bb3: {\n-+         StorageDead(_5);                 // scope 2 at $DIR/exponential_runtime.rs:61:25: 61:26\n-+         StorageLive(_6);                 // scope 2 at $DIR/exponential_runtime.rs:62:9: 62:25\n-+         _6 = <() as E>::call() -> bb4;   // scope 2 at $DIR/exponential_runtime.rs:62:9: 62:25\n++         _4 = <() as F>::call() -> bb1;   // scope 1 at $DIR/exponential_runtime.rs:75:9: 75:25\n +                                          // mir::Constant\n-+                                          // + span: $DIR/exponential_runtime.rs:62:9: 62:23\n-+                                          // + literal: Const { ty: fn() {<() as E>::call}, val: Value(<ZST>) }\n++                                          // + span: $DIR/exponential_runtime.rs:75:9: 75:23\n++                                          // + literal: Const { ty: fn() {<() as F>::call}, val: Value(<ZST>) }\n +     }\n + \n +     bb4: {\n-+         StorageDead(_6);                 // scope 2 at $DIR/exponential_runtime.rs:62:25: 62:26\n-+         StorageLive(_7);                 // scope 2 at $DIR/exponential_runtime.rs:63:9: 63:25\n-+         _7 = <() as E>::call() -> bb5;   // scope 2 at $DIR/exponential_runtime.rs:63:9: 63:25\n++         _6 = <() as E>::call() -> bb5;   // scope 2 at $DIR/exponential_runtime.rs:62:9: 62:25\n +                                          // mir::Constant\n-+                                          // + span: $DIR/exponential_runtime.rs:63:9: 63:23\n++                                          // + span: $DIR/exponential_runtime.rs:62:9: 62:23\n +                                          // + literal: Const { ty: fn() {<() as E>::call}, val: Value(<ZST>) }\n +     }\n + \n +     bb5: {\n-+         StorageDead(_7);                 // scope 2 at $DIR/exponential_runtime.rs:63:25: 63:26\n-+         StorageDead(_2);                 // scope 1 at $DIR/exponential_runtime.rs:73:25: 73:26\n-+         StorageLive(_3);                 // scope 1 at $DIR/exponential_runtime.rs:74:9: 74:25\n-+         _3 = <() as F>::call() -> bb1;   // scope 1 at $DIR/exponential_runtime.rs:74:9: 74:25\n++         _7 = <() as E>::call() -> bb2;   // scope 2 at $DIR/exponential_runtime.rs:63:9: 63:25\n +                                          // mir::Constant\n-+                                          // + span: $DIR/exponential_runtime.rs:74:9: 74:23\n-+                                          // + literal: Const { ty: fn() {<() as F>::call}, val: Value(<ZST>) }\n++                                          // + span: $DIR/exponential_runtime.rs:63:9: 63:23\n++                                          // + literal: Const { ty: fn() {<() as E>::call}, val: Value(<ZST>) }\n       }\n   }\n   "}, {"sha": "0215b3d93f9e38ed4af14b181ac7644010a50f6a", "filename": "tests/mir-opt/inline/inline_cycle.two.Inline.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Finline_cycle.two.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Finline_cycle.two.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finline%2Finline_cycle.two.Inline.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -24,15 +24,15 @@\n -                                          // mir::Constant\n                                            // + span: $DIR/inline_cycle.rs:49:10: 49:11\n                                            // + literal: Const { ty: fn() {f}, val: Value(<ZST>) }\n-+         StorageLive(_3);                 // scope 1 at $DIR/inline_cycle.rs:54:5: 54:8\n++         StorageLive(_3);                 // scope 0 at $DIR/inline_cycle.rs:+1:5: +1:12\n +         StorageLive(_4);                 // scope 1 at $DIR/inline_cycle.rs:54:5: 54:8\n +         _4 = const ();                   // scope 1 at $DIR/inline_cycle.rs:54:5: 54:8\n +         _3 = move _2() -> bb1;           // scope 2 at $SRC_DIR/core/src/ops/function.rs:LL:COL\n       }\n   \n       bb1: {\n +         StorageDead(_4);                 // scope 1 at $DIR/inline_cycle.rs:54:5: 54:8\n-+         StorageDead(_3);                 // scope 1 at $DIR/inline_cycle.rs:54:8: 54:9\n++         StorageDead(_3);                 // scope 0 at $DIR/inline_cycle.rs:+1:5: +1:12\n +         StorageDead(_2);                 // scope 0 at $DIR/inline_cycle.rs:+1:5: +1:12\n           StorageDead(_1);                 // scope 0 at $DIR/inline_cycle.rs:+1:12: +1:13\n           _0 = const ();                   // scope 0 at $DIR/inline_cycle.rs:+0:10: +2:2"}, {"sha": "4f22ad43700ac27e783bea4682f95e4e87abc22b", "filename": "tests/mir-opt/inline/inline_diverging.g.Inline.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Finline_diverging.g.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Finline_diverging.g.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finline%2Finline_diverging.g.Inline.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -34,7 +34,7 @@\n       bb2: {\n           StorageLive(_6);                 // scope 0 at $DIR/inline_diverging.rs:+4:9: +4:16\n -         _6 = panic();                    // scope 0 at $DIR/inline_diverging.rs:+4:9: +4:16\n-+         StorageLive(_7);                 // scope 1 at $SRC_DIR/std/src/panic.rs:LL:COL\n++         StorageLive(_7);                 // scope 0 at $DIR/inline_diverging.rs:+4:9: +4:16\n +         _7 = begin_panic::<&str>(const \"explicit panic\"); // scope 1 at $SRC_DIR/std/src/panic.rs:LL:COL\n                                            // mir::Constant\n -                                          // + span: $DIR/inline_diverging.rs:16:9: 16:14"}, {"sha": "abe26bd8ce363a820e0ad2937e31801d9e4f89af", "filename": "tests/mir-opt/inline/inline_options.main.Inline.after.mir", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Finline_options.main.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Finline%2Finline_options.main.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finline%2Finline_options.main.Inline.after.mir?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -21,35 +21,35 @@ fn main() -> () {\n     bb1: {\n         StorageDead(_1);                 // scope 0 at $DIR/inline_options.rs:+1:18: +1:19\n         StorageLive(_2);                 // scope 0 at $DIR/inline_options.rs:+2:5: +2:21\n-        StorageLive(_3);                 // scope 1 at $DIR/inline_options.rs:16:23: 16:26\n-        _3 = g() -> bb2;                 // scope 1 at $DIR/inline_options.rs:16:23: 16:26\n+        StorageLive(_3);                 // scope 0 at $DIR/inline_options.rs:+2:5: +2:21\n+        StorageLive(_4);                 // scope 0 at $DIR/inline_options.rs:+2:5: +2:21\n+        StorageLive(_5);                 // scope 0 at $DIR/inline_options.rs:+2:5: +2:21\n+        _3 = g() -> bb3;                 // scope 1 at $DIR/inline_options.rs:16:23: 16:26\n                                          // mir::Constant\n                                          // + span: $DIR/inline_options.rs:16:23: 16:24\n                                          // + literal: Const { ty: fn() {g}, val: Value(<ZST>) }\n     }\n \n     bb2: {\n-        StorageDead(_3);                 // scope 1 at $DIR/inline_options.rs:16:26: 16:27\n-        StorageLive(_4);                 // scope 1 at $DIR/inline_options.rs:16:28: 16:31\n-        _4 = g() -> bb3;                 // scope 1 at $DIR/inline_options.rs:16:28: 16:31\n-                                         // mir::Constant\n-                                         // + span: $DIR/inline_options.rs:16:28: 16:29\n-                                         // + literal: Const { ty: fn() {g}, val: Value(<ZST>) }\n+        StorageDead(_5);                 // scope 0 at $DIR/inline_options.rs:+2:5: +2:21\n+        StorageDead(_4);                 // scope 0 at $DIR/inline_options.rs:+2:5: +2:21\n+        StorageDead(_3);                 // scope 0 at $DIR/inline_options.rs:+2:5: +2:21\n+        StorageDead(_2);                 // scope 0 at $DIR/inline_options.rs:+2:21: +2:22\n+        _0 = const ();                   // scope 0 at $DIR/inline_options.rs:+0:11: +3:2\n+        return;                          // scope 0 at $DIR/inline_options.rs:+3:2: +3:2\n     }\n \n     bb3: {\n-        StorageDead(_4);                 // scope 1 at $DIR/inline_options.rs:16:31: 16:32\n-        StorageLive(_5);                 // scope 1 at $DIR/inline_options.rs:16:33: 16:36\n-        _5 = g() -> bb4;                 // scope 1 at $DIR/inline_options.rs:16:33: 16:36\n+        _4 = g() -> bb4;                 // scope 1 at $DIR/inline_options.rs:16:28: 16:31\n                                          // mir::Constant\n-                                         // + span: $DIR/inline_options.rs:16:33: 16:34\n+                                         // + span: $DIR/inline_options.rs:16:28: 16:29\n                                          // + literal: Const { ty: fn() {g}, val: Value(<ZST>) }\n     }\n \n     bb4: {\n-        StorageDead(_5);                 // scope 1 at $DIR/inline_options.rs:16:36: 16:37\n-        StorageDead(_2);                 // scope 0 at $DIR/inline_options.rs:+2:21: +2:22\n-        _0 = const ();                   // scope 0 at $DIR/inline_options.rs:+0:11: +3:2\n-        return;                          // scope 0 at $DIR/inline_options.rs:+3:2: +3:2\n+        _5 = g() -> bb2;                 // scope 1 at $DIR/inline_options.rs:16:33: 16:36\n+                                         // mir::Constant\n+                                         // + span: $DIR/inline_options.rs:16:33: 16:34\n+                                         // + literal: Const { ty: fn() {g}, val: Value(<ZST>) }\n     }\n }"}, {"sha": "7031c3f3e6990835593b4719285d03d9f55038a9", "filename": "tests/mir-opt/intrinsic_asserts.generic.InstCombine.diff", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fintrinsic_asserts.generic.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fintrinsic_asserts.generic.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fintrinsic_asserts.generic.InstCombine.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -8,33 +8,33 @@\n       let _3: ();                          // in scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:60\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/intrinsic_asserts.rs:+1:5: +1:46\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+1:5: +1:46\n           _1 = assert_inhabited::<T>() -> bb1; // scope 0 at $DIR/intrinsic_asserts.rs:+1:5: +1:46\n                                            // mir::Constant\n                                            // + span: $DIR/intrinsic_asserts.rs:25:5: 25:44\n                                            // + literal: Const { ty: extern \"rust-intrinsic\" fn() {assert_inhabited::<T>}, val: Value(<ZST>) }\n       }\n   \n       bb1: {\n-          StorageDead(_1);                 // scope 0 at $DIR/intrinsic_asserts.rs:+1:46: +1:47\n-          StorageLive(_2);                 // scope 0 at $DIR/intrinsic_asserts.rs:+2:5: +2:47\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+1:46: +1:47\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+2:5: +2:47\n           _2 = assert_zero_valid::<T>() -> bb2; // scope 0 at $DIR/intrinsic_asserts.rs:+2:5: +2:47\n                                            // mir::Constant\n                                            // + span: $DIR/intrinsic_asserts.rs:26:5: 26:45\n                                            // + literal: Const { ty: extern \"rust-intrinsic\" fn() {assert_zero_valid::<T>}, val: Value(<ZST>) }\n       }\n   \n       bb2: {\n-          StorageDead(_2);                 // scope 0 at $DIR/intrinsic_asserts.rs:+2:47: +2:48\n-          StorageLive(_3);                 // scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:60\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+2:47: +2:48\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:60\n           _3 = assert_mem_uninitialized_valid::<T>() -> bb3; // scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:60\n                                            // mir::Constant\n                                            // + span: $DIR/intrinsic_asserts.rs:27:5: 27:58\n                                            // + literal: Const { ty: extern \"rust-intrinsic\" fn() {assert_mem_uninitialized_valid::<T>}, val: Value(<ZST>) }\n       }\n   \n       bb3: {\n-          StorageDead(_3);                 // scope 0 at $DIR/intrinsic_asserts.rs:+3:60: +3:61\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+3:60: +3:61\n           nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+0:21: +4:2\n           return;                          // scope 0 at $DIR/intrinsic_asserts.rs:+4:2: +4:2\n       }"}, {"sha": "4caa9971fef8076a6011f447ba9c3107f358215e", "filename": "tests/mir-opt/intrinsic_asserts.panics.InstCombine.diff", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fintrinsic_asserts.panics.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fintrinsic_asserts.panics.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fintrinsic_asserts.panics.InstCombine.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -8,7 +8,7 @@\n       let _3: ();                          // in scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:62\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/intrinsic_asserts.rs:+1:5: +1:50\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+1:5: +1:50\n -         _1 = assert_inhabited::<Never>() -> bb1; // scope 0 at $DIR/intrinsic_asserts.rs:+1:5: +1:50\n +         _1 = assert_inhabited::<Never>(); // scope 0 at $DIR/intrinsic_asserts.rs:+1:5: +1:50\n                                            // mir::Constant\n@@ -17,8 +17,8 @@\n       }\n   \n       bb1: {\n-          StorageDead(_1);                 // scope 0 at $DIR/intrinsic_asserts.rs:+1:50: +1:51\n-          StorageLive(_2);                 // scope 0 at $DIR/intrinsic_asserts.rs:+2:5: +2:49\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+1:50: +1:51\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+2:5: +2:49\n -         _2 = assert_zero_valid::<&u8>() -> bb2; // scope 0 at $DIR/intrinsic_asserts.rs:+2:5: +2:49\n +         _2 = assert_zero_valid::<&u8>(); // scope 0 at $DIR/intrinsic_asserts.rs:+2:5: +2:49\n                                            // mir::Constant\n@@ -28,8 +28,8 @@\n       }\n   \n       bb2: {\n-          StorageDead(_2);                 // scope 0 at $DIR/intrinsic_asserts.rs:+2:49: +2:50\n-          StorageLive(_3);                 // scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:62\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+2:49: +2:50\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:62\n -         _3 = assert_mem_uninitialized_valid::<&u8>() -> bb3; // scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:62\n +         _3 = assert_mem_uninitialized_valid::<&u8>(); // scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:62\n                                            // mir::Constant\n@@ -39,7 +39,7 @@\n       }\n   \n       bb3: {\n-          StorageDead(_3);                 // scope 0 at $DIR/intrinsic_asserts.rs:+3:62: +3:63\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+3:62: +3:63\n           nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+0:17: +4:2\n           return;                          // scope 0 at $DIR/intrinsic_asserts.rs:+4:2: +4:2\n       }"}, {"sha": "b0bec95736971b58fbf86ad907430aa71035d718", "filename": "tests/mir-opt/intrinsic_asserts.removable.InstCombine.diff", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fintrinsic_asserts.removable.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fintrinsic_asserts.removable.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fintrinsic_asserts.removable.InstCombine.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -8,7 +8,7 @@\n       let _3: ();                          // in scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:61\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/intrinsic_asserts.rs:+1:5: +1:47\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+1:5: +1:47\n -         _1 = assert_inhabited::<()>() -> bb1; // scope 0 at $DIR/intrinsic_asserts.rs:+1:5: +1:47\n -                                          // mir::Constant\n -                                          // + span: $DIR/intrinsic_asserts.rs:7:5: 7:45\n@@ -17,8 +17,8 @@\n       }\n   \n       bb1: {\n-          StorageDead(_1);                 // scope 0 at $DIR/intrinsic_asserts.rs:+1:47: +1:48\n-          StorageLive(_2);                 // scope 0 at $DIR/intrinsic_asserts.rs:+2:5: +2:48\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+1:47: +1:48\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+2:5: +2:48\n -         _2 = assert_zero_valid::<u8>() -> bb2; // scope 0 at $DIR/intrinsic_asserts.rs:+2:5: +2:48\n -                                          // mir::Constant\n -                                          // + span: $DIR/intrinsic_asserts.rs:8:5: 8:46\n@@ -27,8 +27,8 @@\n       }\n   \n       bb2: {\n-          StorageDead(_2);                 // scope 0 at $DIR/intrinsic_asserts.rs:+2:48: +2:49\n-          StorageLive(_3);                 // scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:61\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+2:48: +2:49\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:61\n -         _3 = assert_mem_uninitialized_valid::<u8>() -> bb3; // scope 0 at $DIR/intrinsic_asserts.rs:+3:5: +3:61\n -                                          // mir::Constant\n -                                          // + span: $DIR/intrinsic_asserts.rs:9:5: 9:59\n@@ -37,7 +37,7 @@\n       }\n   \n       bb3: {\n-          StorageDead(_3);                 // scope 0 at $DIR/intrinsic_asserts.rs:+3:61: +3:62\n+          nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+3:61: +3:62\n           nop;                             // scope 0 at $DIR/intrinsic_asserts.rs:+0:20: +4:2\n           return;                          // scope 0 at $DIR/intrinsic_asserts.rs:+4:2: +4:2\n       }"}, {"sha": "abb89b91dd36d71f29cc4aed88c82a025eb45f93", "filename": "tests/mir-opt/issue_76432.test.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fissue_76432.test.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fissue_76432.test.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fissue_76432.test.SimplifyComparisonIntegral.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -42,7 +42,6 @@\n       }\n   \n       bb1: {\n-          StorageLive(_15);                // scope 1 at $SRC_DIR/core/src/panic.rs:LL:COL\n           _15 = core::panicking::panic(const \"internal error: entered unreachable code\"); // scope 1 at $SRC_DIR/core/src/panic.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/panic.rs:LL:COL"}, {"sha": "6e28fb61b6bd731551cd7d72edd76a2dc8ec329f", "filename": "tests/mir-opt/issues/issue_59352.num_to_digit.PreCodegen.after.mir", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fissues%2Fissue_59352.num_to_digit.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fissues%2Fissue_59352.num_to_digit.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fissues%2Fissue_59352.num_to_digit.PreCodegen.after.mir?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -66,7 +66,6 @@ fn num_to_digit(_1: char) -> u32 {\n     }\n \n     bb6: {\n-        StorageLive(_8);                 // scope 3 at $SRC_DIR/core/src/option.rs:LL:COL\n         _8 = core::panicking::panic(const \"called `Option::unwrap()` on a `None` value\"); // scope 3 at $SRC_DIR/core/src/option.rs:LL:COL\n                                          // mir::Constant\n                                          // + span: $SRC_DIR/core/src/option.rs:LL:COL"}, {"sha": "adfc6b2731c1a545149cfe2683dd7cfcface1f50", "filename": "tests/mir-opt/lower_intrinsics_e2e.f_u64.PreCodegen.after.mir", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Flower_intrinsics_e2e.f_u64.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Flower_intrinsics_e2e.f_u64.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Flower_intrinsics_e2e.f_u64.PreCodegen.after.mir?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -12,15 +12,13 @@ fn f_u64() -> () {\n \n     bb0: {\n         StorageLive(_1);                 // scope 0 at $DIR/lower_intrinsics_e2e.rs:+1:5: +1:21\n-        StorageLive(_2);                 // scope 1 at $DIR/lower_intrinsics_e2e.rs:23:9: 23:21\n         _2 = f_non_zst::<u64>(const 0_u64) -> bb1; // scope 1 at $DIR/lower_intrinsics_e2e.rs:23:9: 23:21\n                                          // mir::Constant\n                                          // + span: $DIR/lower_intrinsics_e2e.rs:23:9: 23:18\n                                          // + literal: Const { ty: fn(u64) {f_non_zst::<u64>}, val: Value(<ZST>) }\n     }\n \n     bb1: {\n-        StorageDead(_2);                 // scope 1 at $DIR/lower_intrinsics_e2e.rs:23:21: 23:22\n         StorageDead(_1);                 // scope 0 at $DIR/lower_intrinsics_e2e.rs:+1:5: +1:21\n         return;                          // scope 0 at $DIR/lower_intrinsics_e2e.rs:+2:2: +2:2\n     }"}, {"sha": "302ca09aac4b2efeb5c7a659429124a76b44a8b9", "filename": "tests/mir-opt/lower_intrinsics_e2e.f_unit.PreCodegen.after.mir", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Flower_intrinsics_e2e.f_unit.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Flower_intrinsics_e2e.f_unit.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Flower_intrinsics_e2e.f_unit.PreCodegen.after.mir?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -10,15 +10,13 @@ fn f_unit() -> () {\n     }\n \n     bb0: {\n-        StorageLive(_1);                 // scope 1 at $DIR/lower_intrinsics_e2e.rs:21:9: 21:17\n         _1 = f_zst::<()>(const ()) -> bb1; // scope 1 at $DIR/lower_intrinsics_e2e.rs:21:9: 21:17\n                                          // mir::Constant\n                                          // + span: $DIR/lower_intrinsics_e2e.rs:21:9: 21:14\n                                          // + literal: Const { ty: fn(()) {f_zst::<()>}, val: Value(<ZST>) }\n     }\n \n     bb1: {\n-        StorageDead(_1);                 // scope 1 at $DIR/lower_intrinsics_e2e.rs:21:17: 21:18\n         return;                          // scope 0 at $DIR/lower_intrinsics_e2e.rs:+2:2: +2:2\n     }\n }"}, {"sha": "7713649c5b96b07ec58bbbc1f82aaf519cd9f1de", "filename": "tests/mir-opt/remove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fremove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fremove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fremove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -11,7 +11,7 @@\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:5: +1:12\n+          nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+1:5: +1:12\n           StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:10: +1:11\n           _3 = move _1;                    // scope 0 at $DIR/remove_unneeded_drops.rs:+1:10: +1:11\n           drop(_3) -> [return: bb2, unwind: bb1]; // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n@@ -23,7 +23,7 @@\n   \n       bb2: {\n           StorageDead(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:11: +1:12\n-          StorageDead(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:12: +1:13\n+          nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+1:12: +1:13\n           nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+0:32: +2:2\n           return;                          // scope 0 at $DIR/remove_unneeded_drops.rs:+2:2: +2:2\n       }"}, {"sha": "533db4051ef1fbcc64084e523ba255846fad31a7", "filename": "tests/mir-opt/remove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fremove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fremove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fremove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -11,7 +11,7 @@\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:5: +1:12\n+          nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+1:5: +1:12\n           StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:10: +1:11\n           _3 = move _1;                    // scope 0 at $DIR/remove_unneeded_drops.rs:+1:10: +1:11\n           drop(_3) -> [return: bb2, unwind: bb1]; // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n@@ -23,7 +23,7 @@\n   \n       bb2: {\n           StorageDead(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:11: +1:12\n-          StorageDead(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:12: +1:13\n+          nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+1:12: +1:13\n           nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+0:27: +2:2\n           return;                          // scope 0 at $DIR/remove_unneeded_drops.rs:+2:2: +2:2\n       }"}, {"sha": "04a2d54e9a19baaca5467b7543a5f3c63ccdaff2", "filename": "tests/mir-opt/remove_unneeded_drops.opt.RemoveUnneededDrops.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -11,15 +11,15 @@\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:5: +1:12\n+-         nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+1:5: +1:12\n           StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:10: +1:11\n           _3 = _1;                         // scope 0 at $DIR/remove_unneeded_drops.rs:+1:10: +1:11\n -         drop(_3) -> bb1;                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n -     }\n - \n -     bb1: {\n           StorageDead(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:11: +1:12\n-          StorageDead(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:12: +1:13\n+-         nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+1:12: +1:13\n -         nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+0:17: +2:2\n           return;                          // scope 0 at $DIR/remove_unneeded_drops.rs:+2:2: +2:2\n       }"}, {"sha": "782d0c6c5f267e6be877be922e0d6eeb2a890e1b", "filename": "tests/mir-opt/remove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -11,15 +11,15 @@\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:5: +1:12\n+-         nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+1:5: +1:12\n           StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:10: +1:11\n           _3 = _1;                         // scope 0 at $DIR/remove_unneeded_drops.rs:+1:10: +1:11\n -         drop(_3) -> bb1;                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n -     }\n - \n -     bb1: {\n           StorageDead(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:11: +1:12\n-          StorageDead(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:+1:12: +1:13\n+-         nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+1:12: +1:13\n -         nop;                             // scope 0 at $DIR/remove_unneeded_drops.rs:+0:36: +2:2\n           return;                          // scope 0 at $DIR/remove_unneeded_drops.rs:+2:2: +2:2\n       }"}, {"sha": "edd86ef0aa97a5bfab4484492e8553eecd4f1edd", "filename": "tests/mir-opt/remove_zsts.get_union.RemoveZsts.diff", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fremove_zsts.get_union.RemoveZsts.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fremove_zsts.get_union.RemoveZsts.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fremove_zsts.get_union.RemoveZsts.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -6,12 +6,14 @@\n       let mut _1: ();                      // in scope 0 at $DIR/remove_zsts.rs:+1:14: +1:16\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/remove_zsts.rs:+1:14: +1:16\n+-         StorageLive(_1);                 // scope 0 at $DIR/remove_zsts.rs:+1:14: +1:16\n -         _1 = ();                         // scope 0 at $DIR/remove_zsts.rs:+1:14: +1:16\n -         _0 = Foo { x: move _1 };         // scope 0 at $DIR/remove_zsts.rs:+1:5: +1:18\n+-         StorageDead(_1);                 // scope 0 at $DIR/remove_zsts.rs:+1:17: +1:18\n++         nop;                             // scope 0 at $DIR/remove_zsts.rs:+1:14: +1:16\n +         nop;                             // scope 0 at $DIR/remove_zsts.rs:+1:14: +1:16\n +         _0 = Foo { x: const () };        // scope 0 at $DIR/remove_zsts.rs:+1:5: +1:18\n-          StorageDead(_1);                 // scope 0 at $DIR/remove_zsts.rs:+1:17: +1:18\n++         nop;                             // scope 0 at $DIR/remove_zsts.rs:+1:17: +1:18\n           return;                          // scope 0 at $DIR/remove_zsts.rs:+2:2: +2:2\n       }\n   }"}, {"sha": "ac79e72701344366c3f82bee1054e23ebe664f0c", "filename": "tests/mir-opt/simplify_if.main.SimplifyConstCondition-after-const-prop.diff", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fsimplify_if.main.SimplifyConstCondition-after-const-prop.diff", "raw_url": "https://github.com/rust-lang/rust/raw/19a8bb16c83474d5c4baa2673b76b0621e0bd6a2/tests%2Fmir-opt%2Fsimplify_if.main.SimplifyConstCondition-after-const-prop.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fsimplify_if.main.SimplifyConstCondition-after-const-prop.diff?ref=19a8bb16c83474d5c4baa2673b76b0621e0bd6a2", "patch": "@@ -14,15 +14,13 @@\n       }\n   \n       bb1: {\n-          StorageLive(_2);                 // scope 0 at $DIR/simplify_if.rs:+2:9: +2:15\n           _2 = noop() -> bb2;              // scope 0 at $DIR/simplify_if.rs:+2:9: +2:15\n                                            // mir::Constant\n                                            // + span: $DIR/simplify_if.rs:7:9: 7:13\n                                            // + literal: Const { ty: fn() {noop}, val: Value(<ZST>) }\n       }\n   \n       bb2: {\n-          StorageDead(_2);                 // scope 0 at $DIR/simplify_if.rs:+2:15: +2:16\n           goto -> bb4;                     // scope 0 at $DIR/simplify_if.rs:+1:5: +3:6\n       }\n   "}]}