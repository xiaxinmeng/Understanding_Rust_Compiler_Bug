{"sha": "5dc29e189b979756839171e84e8f2a39f57f2793", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkYzI5ZTE4OWI5Nzk3NTY4MzkxNzFlODRlOGYyYTM5ZjU3ZjI3OTM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-27T16:33:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-27T16:33:18Z"}, "message": "Rollup merge of #83559 - m-ou-se:rwlock-guard-debug-fix, r=jackh726\n\nFix Debug implementation for RwLock{Read,Write}Guard.\n\nThis would attempt to print the Debug representation of the lock that the guard has locked, which will try to lock again, fail, and just print `\"<locked>\"` unhelpfully.\n\nAfter this change, this just prints the contents of the mutex, like the other smart pointers (and MutexGuard) do.\n\nMutexGuard had this problem too: https://github.com/rust-lang/rust/issues/57702", "tree": {"sha": "f078f73d0c39eb58345d2cb8f316881698b5ec0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f078f73d0c39eb58345d2cb8f316881698b5ec0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dc29e189b979756839171e84e8f2a39f57f2793", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgX15PCRBK7hj4Ov3rIwAAdHIIAGDIROkchUmv3UYbFT7wXddU\nPE1tHhxUguUk6ZuA4C9VZKpy7eW9lvdHZl5+0yEmY2hAMgWzuR9MnUqoWN+R08ft\n3rUWESF0gBhzCCssjcmJRptRUoAyTtSPMs5aqCdMF5KFQVWCFNRahwndbySopj/k\nsAeX/Bb3L2yN2zvTPo1PlTTClnH7nbPYQEWuW6zDczRn3jBux2hg1rRbZTHLRJ49\n8ZYnyDlhszs/wHuyp7eL3MPlcB+/JzbzSCBD348udJ3ed+t+J1r0KN/wLdNrIHgU\n/ZyWopZFEsejknZPVe9/hsjpYcENA4IpAinKZOk7vIm+gtJsi7MFy6SXn2jqaYo=\n=oB68\n-----END PGP SIGNATURE-----\n", "payload": "tree f078f73d0c39eb58345d2cb8f316881698b5ec0c\nparent 53cc8065a001e0a488b15e39ada2c01012549988\nparent d73015397dc43eb8067644ab2bbb1c2203c795d4\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1616862798 +0900\ncommitter GitHub <noreply@github.com> 1616862798 +0900\n\nRollup merge of #83559 - m-ou-se:rwlock-guard-debug-fix, r=jackh726\n\nFix Debug implementation for RwLock{Read,Write}Guard.\n\nThis would attempt to print the Debug representation of the lock that the guard has locked, which will try to lock again, fail, and just print `\"<locked>\"` unhelpfully.\n\nAfter this change, this just prints the contents of the mutex, like the other smart pointers (and MutexGuard) do.\n\nMutexGuard had this problem too: https://github.com/rust-lang/rust/issues/57702\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dc29e189b979756839171e84e8f2a39f57f2793", "html_url": "https://github.com/rust-lang/rust/commit/5dc29e189b979756839171e84e8f2a39f57f2793", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dc29e189b979756839171e84e8f2a39f57f2793/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53cc8065a001e0a488b15e39ada2c01012549988", "url": "https://api.github.com/repos/rust-lang/rust/commits/53cc8065a001e0a488b15e39ada2c01012549988", "html_url": "https://github.com/rust-lang/rust/commit/53cc8065a001e0a488b15e39ada2c01012549988"}, {"sha": "d73015397dc43eb8067644ab2bbb1c2203c795d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d73015397dc43eb8067644ab2bbb1c2203c795d4", "html_url": "https://github.com/rust-lang/rust/commit/d73015397dc43eb8067644ab2bbb1c2203c795d4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c6c753b103fc50026877fae3bf83a26c98350d21", "filename": "library/std/src/sync/rwlock.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5dc29e189b979756839171e84e8f2a39f57f2793/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dc29e189b979756839171e84e8f2a39f57f2793/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs?ref=5dc29e189b979756839171e84e8f2a39f57f2793", "patch": "@@ -473,7 +473,7 @@ impl<'rwlock, T: ?Sized> RwLockWriteGuard<'rwlock, T> {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<T: fmt::Debug> fmt::Debug for RwLockReadGuard<'_, T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"RwLockReadGuard\").field(\"lock\", &self.lock).finish()\n+        (**self).fmt(f)\n     }\n }\n \n@@ -487,7 +487,7 @@ impl<T: ?Sized + fmt::Display> fmt::Display for RwLockReadGuard<'_, T> {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<T: fmt::Debug> fmt::Debug for RwLockWriteGuard<'_, T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"RwLockWriteGuard\").field(\"lock\", &self.lock).finish()\n+        (**self).fmt(f)\n     }\n }\n "}]}