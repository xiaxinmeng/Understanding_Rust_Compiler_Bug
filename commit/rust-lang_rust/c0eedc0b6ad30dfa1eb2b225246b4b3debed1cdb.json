{"sha": "c0eedc0b6ad30dfa1eb2b225246b4b3debed1cdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZWVkYzBiNmFkMzBkZmExZWIyYjIyNTI0NmI0YjNkZWJlZDFjZGI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-06T22:37:29Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-14T07:48:13Z"}, "message": "Address review comments\n\n- remove unused args\n- Fix formatting\n- Improve naming\n- Fix typo", "tree": {"sha": "9a7cfc7ed7fbcdf9b03d812c98d922226d6af92a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a7cfc7ed7fbcdf9b03d812c98d922226d6af92a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0eedc0b6ad30dfa1eb2b225246b4b3debed1cdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0eedc0b6ad30dfa1eb2b225246b4b3debed1cdb", "html_url": "https://github.com/rust-lang/rust/commit/c0eedc0b6ad30dfa1eb2b225246b4b3debed1cdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0eedc0b6ad30dfa1eb2b225246b4b3debed1cdb/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "341eb6d6f5c636575a42a5d3d75739755c17aade", "url": "https://api.github.com/repos/rust-lang/rust/commits/341eb6d6f5c636575a42a5d3d75739755c17aade", "html_url": "https://github.com/rust-lang/rust/commit/341eb6d6f5c636575a42a5d3d75739755c17aade"}], "stats": {"total": 50, "additions": 21, "deletions": 29}, "files": [{"sha": "59c650d94cdcf16d26a8ab8ad0c818139374b3b2", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c0eedc0b6ad30dfa1eb2b225246b4b3debed1cdb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0eedc0b6ad30dfa1eb2b225246b4b3debed1cdb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=c0eedc0b6ad30dfa1eb2b225246b4b3debed1cdb", "patch": "@@ -2212,9 +2212,14 @@ impl<'test> TestCx<'test> {\n         proc_res.fatal(None, || ());\n     }\n \n-    fn fatal_proc_rec_with_ctx(&self, err: &str, proc_res: &ProcRes, ctx: impl FnOnce(Self)) -> ! {\n+    fn fatal_proc_rec_with_ctx(\n+        &self,\n+        err: &str,\n+        proc_res: &ProcRes,\n+        on_failure: impl FnOnce(Self),\n+    ) -> ! {\n         self.error(err);\n-        proc_res.fatal(None, || ctx(*self));\n+        proc_res.fatal(None, || on_failure(*self));\n     }\n \n     // codegen tests (using FileCheck)\n@@ -2376,7 +2381,7 @@ impl<'test> TestCx<'test> {\n             .wait()\n             .unwrap();\n         if !status.success() {\n-            self.fatal(\"failed to run tidy - is installed?\");\n+            self.fatal(\"failed to run tidy - is it installed?\");\n         }\n         let status = Command::new(tidy).arg(&compare_dir).spawn().unwrap().wait().unwrap();\n         if !status.success() {\n@@ -3653,7 +3658,7 @@ pub struct ProcRes {\n }\n \n impl ProcRes {\n-    pub fn fatal(&self, err: Option<&str>, ctx: impl FnOnce()) -> ! {\n+    pub fn fatal(&self, err: Option<&str>, on_failure: impl FnOnce()) -> ! {\n         if let Some(e) = err {\n             println!(\"\\nerror: {}\", e);\n         }\n@@ -3675,7 +3680,7 @@ impl ProcRes {\n             json::extract_rendered(&self.stdout),\n             json::extract_rendered(&self.stderr),\n         );\n-        ctx();\n+        on_failure();\n         // Use resume_unwind instead of panic!() to prevent a panic message + backtrace from\n         // compiletest, which is unnecessary noise.\n         std::panic::resume_unwind(Box::new(()));"}, {"sha": "b31957058e8c15fa1285788c247269a53acfcff3", "filename": "src/tools/compiletest/tidy-rustdoc.sh", "status": "modified", "additions": 11, "deletions": 24, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c0eedc0b6ad30dfa1eb2b225246b4b3debed1cdb/src%2Ftools%2Fcompiletest%2Ftidy-rustdoc.sh", "raw_url": "https://github.com/rust-lang/rust/raw/c0eedc0b6ad30dfa1eb2b225246b4b3debed1cdb/src%2Ftools%2Fcompiletest%2Ftidy-rustdoc.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Ftidy-rustdoc.sh?ref=c0eedc0b6ad30dfa1eb2b225246b4b3debed1cdb", "patch": "@@ -5,30 +5,17 @@ set -euo pipefail\n indir=\"${1:?Missing argument 1: input directory}\"\n \n tidy () {\n-  {\n-    # new-inline-tags is workaround for:\n-    #   https://github.com/rust-lang/stdarch/issues/945\n-    #   https://github.com/rust-lang/mdBook/issues/1372\n-    command tidy \\\n-        --indent yes \\\n-        --indent-spaces 2 \\\n-        --wrap 0 \\\n-        --show-warnings no \\\n-        --markup yes \\\n-        --quiet yes \\\n-        --new-inline-tags 'c t' \\\n-        \"$@\" \\\n-        >/dev/null \\\n-    || {\n-      # tidy exits with code 1 if there were any warnings :facepalm:\n-      status=$?\n-      if [ $status != 0 ] && [ $status != 1 ]\n-      then\n-        echo \"While tidying $1\" >&2\n-        exit 1\n-      fi\n-    }\n-  } | sed -E 's/#[0-9]+(-[0-9]+)?/#line/g'\n+  command tidy \\\n+      --indent yes \\\n+      --indent-spaces 2 \\\n+      --wrap 0 \\\n+      --show-warnings no \\\n+      --markup yes \\\n+      --quiet yes \\\n+      \"$@\" \\\n+      >/dev/null \\\n+  # tidy exits with code 1 if there were any warnings\n+  || [ $? -eq 1 ]\n }\n \n find \"$indir\" -type f -name '*.html' -print0 \\"}]}