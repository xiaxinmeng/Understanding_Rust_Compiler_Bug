{"sha": "32a5abc6fe0f705210a9697804f20fe4f32a4160", "node_id": "C_kwDOAAsO6NoAKDMyYTVhYmM2ZmUwZjcwNTIxMGE5Njk3ODA0ZjIwZmU0ZjMyYTQxNjA", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-10-04T16:05:48Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-10-04T16:05:48Z"}, "message": "Make `proc_macro_derive_resolution_fallback` a future-breakage lint\n\nWhen `cargo report future-incompatibilities` is stabilized\n(see #71249), this will cause dependencies that trigger\nthis lint to be included in the report.", "tree": {"sha": "7913e0381ec54e561986c2990731719f902813b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7913e0381ec54e561986c2990731719f902813b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32a5abc6fe0f705210a9697804f20fe4f32a4160", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmFbJsEACgkQtAh+UQ6Y\nsWS0QxAAryeNKv16zpP6/1dKTIwTuuwzZgseC4paz8uNt7K1slsyoYPYNomeYNB7\ntSp7QrEYgghCNx8bi9jW8QMgHpJ57Gj0ay9AbZwrg5m1tx7CmF4BaD3qOYhfS4sd\norOo59Nki0iIuFIGhlzFzvqIe5NCrBzDDgC0IAm39s7i9JW7gm+oY9vE6cAqVsJ1\nt3YiohySD+ZPPcL4k7X7ETwcPwmz0ANhLDHK9DNTUWqYDL0Z29GKzSIHdnPvqCnO\nq2DrfLyGi+QHac1oPsB5PpIFVfc8GVS69ptTs4aL7O5Y8miBlq4op0LnsrADZyiK\nYTbKw2so0/3vYZClwkihs//cOCLdNP5PcH+PzBhmW4qNMAj8AQ0g8la/kR3mfVKr\nVuUDp4s4rm5UYY/sEwFYWeXWxcvK/gZA9bfMvsnosoYmGn48zlBPefn3h1CNi0IG\nvIOaAhXRiwYOeendeGLPiM+AO4iyOMEj+ArfDQELzsRYgr9ZGqIRBOY2PiA31Tpc\nn5EQAqdkk/xm2beO+fe4EQTs1IIEP0nnMcyhEKYrQuREHaMiXo01q9OZZP5P/I3V\nQyoq/TkCa1TgZMlZfN5VZnBG26PtOwon7wyUYSaPWMV4kFA/aZIW7z2m9CVnUN+E\nrJLDEvUuwHXElhm+DeDSYyDl3+cxez83SHEF0UUjb4pf32KFObI=\n=+yNP\n-----END PGP SIGNATURE-----", "payload": "tree 7913e0381ec54e561986c2990731719f902813b5\nparent 175b8db73bfd078b4bcd3c28c8d6f51d5895ebf3\nauthor Aaron Hill <aa1ronham@gmail.com> 1633363548 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1633363548 -0500\n\nMake `proc_macro_derive_resolution_fallback` a future-breakage lint\n\nWhen `cargo report future-incompatibilities` is stabilized\n(see #71249), this will cause dependencies that trigger\nthis lint to be included in the report.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32a5abc6fe0f705210a9697804f20fe4f32a4160", "html_url": "https://github.com/rust-lang/rust/commit/32a5abc6fe0f705210a9697804f20fe4f32a4160", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32a5abc6fe0f705210a9697804f20fe4f32a4160/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "175b8db73bfd078b4bcd3c28c8d6f51d5895ebf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/175b8db73bfd078b4bcd3c28c8d6f51d5895ebf3", "html_url": "https://github.com/rust-lang/rust/commit/175b8db73bfd078b4bcd3c28c8d6f51d5895ebf3"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "9d56bc193fb2958c6531583d51578fed3970b5d3", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/32a5abc6fe0f705210a9697804f20fe4f32a4160/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32a5abc6fe0f705210a9697804f20fe4f32a4160/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=32a5abc6fe0f705210a9697804f20fe4f32a4160", "patch": "@@ -1960,6 +1960,7 @@ declare_lint! {\n     \"detects proc macro derives using inaccessible names from parent modules\",\n     @future_incompatible = FutureIncompatibleInfo {\n         reference: \"issue #83583 <https://github.com/rust-lang/rust/issues/83583>\",\n+        reason: FutureIncompatibilityReason::FutureReleaseErrorReportNow,\n     };\n }\n "}, {"sha": "d6fd4baeb5ece7de355a3627c32bb13024ef8a58", "filename": "src/test/ui/proc-macro/generate-mod.stderr", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/32a5abc6fe0f705210a9697804f20fe4f32a4160/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32a5abc6fe0f705210a9697804f20fe4f32a4160/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr?ref=32a5abc6fe0f705210a9697804f20fe4f32a4160", "patch": "@@ -82,3 +82,75 @@ LL |     #[derive(generate_mod::CheckDerive)]\n error: aborting due to 4 previous errors; 4 warnings emitted\n \n For more information about this error, try `rustc --explain E0412`.\n+Future incompatibility report: Future breakage diagnostic:\n+warning: cannot find type `FromOutside` in this scope\n+  --> $DIR/generate-mod.rs:16:10\n+   |\n+LL | #[derive(generate_mod::CheckDerive)]\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+   = note: `#[warn(proc_macro_derive_resolution_fallback)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+Future breakage diagnostic:\n+warning: cannot find type `OuterDerive` in this scope\n+  --> $DIR/generate-mod.rs:16:10\n+   |\n+LL | #[derive(generate_mod::CheckDerive)]\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+Future breakage diagnostic:\n+warning: cannot find type `FromOutside` in this scope\n+  --> $DIR/generate-mod.rs:23:14\n+   |\n+LL |     #[derive(generate_mod::CheckDerive)]\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+Future breakage diagnostic:\n+warning: cannot find type `OuterDerive` in this scope\n+  --> $DIR/generate-mod.rs:23:14\n+   |\n+LL |     #[derive(generate_mod::CheckDerive)]\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+Future breakage diagnostic:\n+warning: cannot find type `FromOutside` in this scope\n+  --> $DIR/generate-mod.rs:30:10\n+   |\n+LL | #[derive(generate_mod::CheckDeriveLint)] // OK, lint is suppressed\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+note: the lint level is defined here\n+  --> $DIR/generate-mod.rs:30:10\n+   |\n+LL | #[derive(generate_mod::CheckDeriveLint)] // OK, lint is suppressed\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDeriveLint` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+Future breakage diagnostic:\n+warning: cannot find type `OuterDeriveLint` in this scope\n+  --> $DIR/generate-mod.rs:30:10\n+   |\n+LL | #[derive(generate_mod::CheckDeriveLint)] // OK, lint is suppressed\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDeriveLint` (in Nightly builds, run with -Z macro-backtrace for more info)\n+"}]}