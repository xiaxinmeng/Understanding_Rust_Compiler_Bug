{"sha": "32304d14a1a5e316615028ffd7bcfcff682fbe56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMzA0ZDE0YTFhNWUzMTY2MTUwMjhmZmQ3YmNmY2ZmNjgyZmJlNTY=", "commit": {"author": {"name": "Alexandru Macovei", "email": "alexnmaco@gmail.com", "date": "2021-03-30T21:55:18Z"}, "committer": {"name": "Alexandru Macovei", "email": "alexnmaco@gmail.com", "date": "2021-04-06T13:01:31Z"}, "message": "Use Box'es to reduce the size of hir_def::expr::Pat from 112 to 64 bytes on 64bit", "tree": {"sha": "4dda8757645c339a0ea6a926456ce7edf4ec4de7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dda8757645c339a0ea6a926456ce7edf4ec4de7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32304d14a1a5e316615028ffd7bcfcff682fbe56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32304d14a1a5e316615028ffd7bcfcff682fbe56", "html_url": "https://github.com/rust-lang/rust/commit/32304d14a1a5e316615028ffd7bcfcff682fbe56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32304d14a1a5e316615028ffd7bcfcff682fbe56/comments", "author": {"login": "alexmaco", "id": 24556329, "node_id": "MDQ6VXNlcjI0NTU2MzI5", "avatar_url": "https://avatars.githubusercontent.com/u/24556329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmaco", "html_url": "https://github.com/alexmaco", "followers_url": "https://api.github.com/users/alexmaco/followers", "following_url": "https://api.github.com/users/alexmaco/following{/other_user}", "gists_url": "https://api.github.com/users/alexmaco/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmaco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmaco/subscriptions", "organizations_url": "https://api.github.com/users/alexmaco/orgs", "repos_url": "https://api.github.com/users/alexmaco/repos", "events_url": "https://api.github.com/users/alexmaco/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmaco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexmaco", "id": 24556329, "node_id": "MDQ6VXNlcjI0NTU2MzI5", "avatar_url": "https://avatars.githubusercontent.com/u/24556329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmaco", "html_url": "https://github.com/alexmaco", "followers_url": "https://api.github.com/users/alexmaco/followers", "following_url": "https://api.github.com/users/alexmaco/following{/other_user}", "gists_url": "https://api.github.com/users/alexmaco/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmaco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmaco/subscriptions", "organizations_url": "https://api.github.com/users/alexmaco/orgs", "repos_url": "https://api.github.com/users/alexmaco/repos", "events_url": "https://api.github.com/users/alexmaco/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmaco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb1f544e2479addd5957688e297ea04ddf0cf249", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb1f544e2479addd5957688e297ea04ddf0cf249", "html_url": "https://github.com/rust-lang/rust/commit/fb1f544e2479addd5957688e297ea04ddf0cf249"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "1e743e5d5a39434cd23aeb4e147c923d3ce7d677", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/32304d14a1a5e316615028ffd7bcfcff682fbe56/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32304d14a1a5e316615028ffd7bcfcff682fbe56/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=32304d14a1a5e316615028ffd7bcfcff682fbe56", "patch": "@@ -759,7 +759,7 @@ impl ExprCollector<'_> {\n                 }\n             }\n             ast::Pat::TupleStructPat(p) => {\n-                let path = p.path().and_then(|path| self.expander.parse_path(path));\n+                let path = p.path().and_then(|path| self.expander.parse_path(path)).map(Box::new);\n                 let (args, ellipsis) = self.collect_tuple_pat(p.fields());\n                 Pat::TupleStruct { path, args, ellipsis }\n             }\n@@ -769,7 +769,7 @@ impl ExprCollector<'_> {\n                 Pat::Ref { pat, mutability }\n             }\n             ast::Pat::PathPat(p) => {\n-                let path = p.path().and_then(|path| self.expander.parse_path(path));\n+                let path = p.path().and_then(|path| self.expander.parse_path(path)).map(Box::new);\n                 path.map(Pat::Path).unwrap_or(Pat::Missing)\n             }\n             ast::Pat::OrPat(p) => {\n@@ -783,7 +783,7 @@ impl ExprCollector<'_> {\n             }\n             ast::Pat::WildcardPat(_) => Pat::Wild,\n             ast::Pat::RecordPat(p) => {\n-                let path = p.path().and_then(|path| self.expander.parse_path(path));\n+                let path = p.path().and_then(|path| self.expander.parse_path(path)).map(Box::new);\n                 let args: Vec<_> = p\n                     .record_pat_field_list()\n                     .expect(\"every struct should have a field list\")"}, {"sha": "62a28bdba7fdf5860570040da011b65611995dff", "filename": "crates/hir_def/src/expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/32304d14a1a5e316615028ffd7bcfcff682fbe56/crates%2Fhir_def%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32304d14a1a5e316615028ffd7bcfcff682fbe56/crates%2Fhir_def%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fexpr.rs?ref=32304d14a1a5e316615028ffd7bcfcff682fbe56", "patch": "@@ -412,13 +412,13 @@ pub enum Pat {\n     Wild,\n     Tuple { args: Vec<PatId>, ellipsis: Option<usize> },\n     Or(Vec<PatId>),\n-    Record { path: Option<Path>, args: Vec<RecordFieldPat>, ellipsis: bool },\n+    Record { path: Option<Box<Path>>, args: Vec<RecordFieldPat>, ellipsis: bool },\n     Range { start: ExprId, end: ExprId },\n     Slice { prefix: Vec<PatId>, slice: Option<PatId>, suffix: Vec<PatId> },\n-    Path(Path),\n+    Path(Box<Path>),\n     Lit(ExprId),\n     Bind { mode: BindingAnnotation, name: Name, subpat: Option<PatId> },\n-    TupleStruct { path: Option<Path>, args: Vec<PatId>, ellipsis: Option<usize> },\n+    TupleStruct { path: Option<Box<Path>>, args: Vec<PatId>, ellipsis: Option<usize> },\n     Ref { pat: PatId, mutability: Mutability },\n     Box { inner: PatId },\n     ConstBlock(ExprId),"}, {"sha": "b528ff8bad74a62bafeab1b186203b67bbdb3db7", "filename": "crates/hir_def/src/path.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/32304d14a1a5e316615028ffd7bcfcff682fbe56/crates%2Fhir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32304d14a1a5e316615028ffd7bcfcff682fbe56/crates%2Fhir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fpath.rs?ref=32304d14a1a5e316615028ffd7bcfcff682fbe56", "patch": "@@ -289,6 +289,12 @@ impl From<Name> for Path {\n     }\n }\n \n+impl From<Name> for Box<Path> {\n+    fn from(name: Name) -> Box<Path> {\n+        Box::new(Path::from(name))\n+    }\n+}\n+\n impl From<Name> for ModPath {\n     fn from(name: Name) -> ModPath {\n         ModPath::from_segments(PathKind::Plain, iter::once(name))"}, {"sha": "afaf6b28ba12115606fb83c9965570ce6e90d9be", "filename": "crates/hir_ty/src/infer/pat.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32304d14a1a5e316615028ffd7bcfcff682fbe56/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32304d14a1a5e316615028ffd7bcfcff682fbe56/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs?ref=32304d14a1a5e316615028ffd7bcfcff682fbe56", "patch": "@@ -174,15 +174,15 @@ impl<'a> InferenceContext<'a> {\n                 TyKind::Ref(mutability, subty).intern(&Interner)\n             }\n             Pat::TupleStruct { path: p, args: subpats, ellipsis } => self.infer_tuple_struct_pat(\n-                p.as_ref(),\n+                p.as_deref(),\n                 subpats,\n                 expected,\n                 default_bm,\n                 pat,\n                 *ellipsis,\n             ),\n             Pat::Record { path: p, args: fields, ellipsis: _ } => {\n-                self.infer_record_pat(p.as_ref(), fields, expected, default_bm, pat)\n+                self.infer_record_pat(p.as_deref(), fields, expected, default_bm, pat)\n             }\n             Pat::Path(path) => {\n                 // FIXME use correct resolver for the surrounding expression"}]}