{"sha": "af1548f58f2a9a356a7c122f2fba25c816492a91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMTU0OGY1OGYyYTlhMzU2YTdjMTIyZjJmYmEyNWM4MTY0OTJhOTE=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-10-27T12:45:02Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-10-27T13:47:56Z"}, "message": "Don't expand macro in single_match suggestion", "tree": {"sha": "88d67912c51934527b608c28f7aa6e44ba1a1c83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88d67912c51934527b608c28f7aa6e44ba1a1c83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af1548f58f2a9a356a7c122f2fba25c816492a91", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlvUbIwACgkQtvoGpuDi\nZlvM/g//TTke6koMRh4XVYpT/zl69MgRBjVGrxMwtz8JTlTedxr04NbkPFp9VqWY\nO4wT3asgoGubSXM2eOPYyA7c6nXxmFbPBz3DYqmNKpvk0ih9wTIkAxIwiKjSdevA\n8puNp56g9eF8mkuxTGUHsPYELRjRfJ3uv9GPGzDSYWdCaOXXMq2MtGB4qxAh+/t1\nsS+XlRnLVSmniArLCw3eDLXUGPhoKqLRQrRT3nk5vF7Y9ppVhRskzuqaRSywrtKp\nFRtaJCum5r705kqbzmDNJPeVpfq3Zo1jrY0J7EdWAql5si6Sh4BmBNEw+N7dW5ER\nCvAJF6oPRNjFgp5LdGsSDtQ+t09f82VoEywz9nLKpZ0bG8XmqlAGFMNRozHVYM2R\nRF0RUNLunGuo59yK5PaseBaypdb6kq4i7SvkBeQwIoLHRnD5yNUVHAhnNKT11l+r\nLvVimwbzxbqhZorp10Dn2cT4y/aN/oiJ4aN7IPoEKNVHh4akbc42pW6wsYqWO58X\nKmsnbIyNtOL8B2RAQ48oDlXbyU1kE2v8KtQFQ5ELYCHxSjD0F+dhu/7mu3oW4YgM\nYZSp6yss7mETt5uhQLAtAfSdcsLtxaDNk6r7le5e9IjZ3sr/QdVNWmeMZ/aaqBNF\n3SBMsQpi95eeudzt89jE2fLs0mLQvCCcXvepMdLtyvKzQDVYhJQ=\n=E7U8\n-----END PGP SIGNATURE-----", "payload": "tree 88d67912c51934527b608c28f7aa6e44ba1a1c83\nparent aa7bcb9074f3a7235e43d1da910d80248e53357d\nauthor Philipp Hansch <dev@phansch.net> 1540644302 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1540648076 +0200\n\nDon't expand macro in single_match suggestion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af1548f58f2a9a356a7c122f2fba25c816492a91", "html_url": "https://github.com/rust-lang/rust/commit/af1548f58f2a9a356a7c122f2fba25c816492a91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af1548f58f2a9a356a7c122f2fba25c816492a91/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa7bcb9074f3a7235e43d1da910d80248e53357d", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa7bcb9074f3a7235e43d1da910d80248e53357d", "html_url": "https://github.com/rust-lang/rust/commit/aa7bcb9074f3a7235e43d1da910d80248e53357d"}], "stats": {"total": 71, "additions": 48, "deletions": 23}, "files": [{"sha": "4a704c3d52ece894c0e4a8991cd28d7f02d5f841", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/af1548f58f2a9a356a7c122f2fba25c816492a91/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1548f58f2a9a356a7c122f2fba25c816492a91/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=af1548f58f2a9a356a7c122f2fba25c816492a91", "patch": "@@ -19,7 +19,8 @@ use crate::syntax::ast::LitKind;\n use crate::syntax::source_map::Span;\n use crate::utils::paths;\n use crate::utils::{expr_block, is_allowed, is_expn_of, match_qpath, match_type, multispan_sugg,\n-            remove_blocks, snippet, span_lint_and_sugg, span_lint_and_then, span_note_and_lint, walk_ptrs_ty};\n+            remove_blocks, snippet, span_lint_and_sugg, span_lint_and_then,\n+            span_note_and_lint, walk_ptrs_ty};\n use crate::utils::sugg::Sugg;\n use crate::consts::{constant, Constant};\n use crate::rustc_errors::Applicability;"}, {"sha": "72a6bda26c36b41676dadab8d4a12cdafaf18bb8", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/af1548f58f2a9a356a7c122f2fba25c816492a91/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1548f58f2a9a356a7c122f2fba25c816492a91/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=af1548f58f2a9a356a7c122f2fba25c816492a91", "patch": "@@ -406,7 +406,10 @@ pub fn expr_block<'a, 'b, T: LintContext<'b>>(\n ) -> Cow<'a, str> {\n     let code = snippet_block(cx, expr.span, default);\n     let string = option.unwrap_or_default();\n-    if let ExprKind::Block(_, _) = expr.node {\n+    if in_macro(expr.span) {\n+        Cow::Owned(format!(\"{{ {} }}\", snippet_with_macro_callsite(cx, expr.span, default)))\n+    }\n+    else if let ExprKind::Block(_, _) = expr.node {\n         Cow::Owned(format!(\"{}{}\", code, string))\n     } else if string.is_empty() {\n         Cow::Owned(format!(\"{{ {} }}\", code))"}, {"sha": "b5f1f2ab0e731dcbf82f48c836847f5d9dadb06c", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af1548f58f2a9a356a7c122f2fba25c816492a91/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af1548f58f2a9a356a7c122f2fba25c816492a91/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=af1548f58f2a9a356a7c122f2fba25c816492a91", "patch": "@@ -33,7 +33,7 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 51 | |         &(v, 1) => println!(\"{}\", v),\n 52 | |         _ => println!(\"none\"),\n 53 | |     }\n-   | |_____^ help: try this: `if let &(v, 1) = tup { $ crate :: io :: _print ( format_args_nl ! ( $ ( $ arg ) * ) ) ; } else { $ crate :: io :: _print ( format_args_nl ! ( $ ( $ arg ) * ) ) ; }`\n+   | |_____^ help: try this: `if let &(v, 1) = tup { println!(\"{}\", v) } else { println!(\"none\") }`\n \n error: you don't need to add `&` to all patterns\n   --> $DIR/matches.rs:50:5"}, {"sha": "dca68e179e7425ac06a0baa0e30733e74d78b4dc", "filename": "tests/ui/single_match.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/af1548f58f2a9a356a7c122f2fba25c816492a91/tests%2Fui%2Fsingle_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1548f58f2a9a356a7c122f2fba25c816492a91/tests%2Fui%2Fsingle_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.rs?ref=af1548f58f2a9a356a7c122f2fba25c816492a91", "patch": "@@ -23,6 +23,15 @@ fn single_match(){\n         _ => ()\n     };\n \n+    let x = Some(1u8);\n+    match x {\n+        // Note the missing block braces.\n+        // We suggest `if let Some(y) = x { .. }` because the macro\n+        // is expanded before we can do anything.\n+        Some(y) => println!(\"{:?}\", y),\n+        _ => ()\n+    }\n+\n     let z = (1u8,1u8);\n     match z {\n         (2...3, 7...9) => dummy(),"}, {"sha": "df614ad201d1d3642163c18eec00ea398ff6a97d", "filename": "tests/ui/single_match.stderr", "status": "modified", "additions": 32, "deletions": 20, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/af1548f58f2a9a356a7c122f2fba25c816492a91/tests%2Fui%2Fsingle_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af1548f58f2a9a356a7c122f2fba25c816492a91/tests%2Fui%2Fsingle_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.stderr?ref=af1548f58f2a9a356a7c122f2fba25c816492a91", "patch": "@@ -12,38 +12,50 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/single_match.rs:27:5\n    |\n-27 | /     match z {\n-28 | |         (2...3, 7...9) => dummy(),\n-29 | |         _ => {}\n-30 | |     };\n+27 | /     match x {\n+28 | |         // Note the missing block braces.\n+29 | |         // We suggest `if let Some(y) = x { .. }` because the macro\n+30 | |         // is expanded before we can do anything.\n+31 | |         Some(y) => println!(\"{:?}\", y),\n+32 | |         _ => ()\n+33 | |     }\n+   | |_____^ help: try this: `if let Some(y) = x { println!(\"{:?}\", y) }`\n+\n+error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n+  --> $DIR/single_match.rs:36:5\n+   |\n+36 | /     match z {\n+37 | |         (2...3, 7...9) => dummy(),\n+38 | |         _ => {}\n+39 | |     };\n    | |_____^ help: try this: `if let (2...3, 7...9) = z { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:53:5\n+  --> $DIR/single_match.rs:62:5\n    |\n-53 | /     match x {\n-54 | |         Some(y) => dummy(),\n-55 | |         None => ()\n-56 | |     };\n+62 | /     match x {\n+63 | |         Some(y) => dummy(),\n+64 | |         None => ()\n+65 | |     };\n    | |_____^ help: try this: `if let Some(y) = x { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:58:5\n+  --> $DIR/single_match.rs:67:5\n    |\n-58 | /     match y {\n-59 | |         Ok(y) => dummy(),\n-60 | |         Err(..) => ()\n-61 | |     };\n+67 | /     match y {\n+68 | |         Ok(y) => dummy(),\n+69 | |         Err(..) => ()\n+70 | |     };\n    | |_____^ help: try this: `if let Ok(y) = y { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:65:5\n+  --> $DIR/single_match.rs:74:5\n    |\n-65 | /     match c {\n-66 | |         Cow::Borrowed(..) => dummy(),\n-67 | |         Cow::Owned(..) => (),\n-68 | |     };\n+74 | /     match c {\n+75 | |         Cow::Borrowed(..) => dummy(),\n+76 | |         Cow::Owned(..) => (),\n+77 | |     };\n    | |_____^ help: try this: `if let Cow::Borrowed(..) = c { dummy() }`\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 6 previous errors\n "}]}