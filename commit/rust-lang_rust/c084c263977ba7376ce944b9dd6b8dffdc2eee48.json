{"sha": "c084c263977ba7376ce944b9dd6b8dffdc2eee48", "node_id": "C_kwDOAAsO6NoAKGMwODRjMjYzOTc3YmE3Mzc2Y2U5NDRiOWRkNmI4ZGZmZGMyZWVlNDg", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2022-10-05T21:18:22Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2022-10-08T09:00:13Z"}, "message": "Split slice part of feature(half_open_range_patterns) to [...]_in_slices", "tree": {"sha": "1586b6bd19f7b9a3a2c83c2b5e45caf86138985b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1586b6bd19f7b9a3a2c83c2b5e45caf86138985b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c084c263977ba7376ce944b9dd6b8dffdc2eee48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c084c263977ba7376ce944b9dd6b8dffdc2eee48", "html_url": "https://github.com/rust-lang/rust/commit/c084c263977ba7376ce944b9dd6b8dffdc2eee48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c084c263977ba7376ce944b9dd6b8dffdc2eee48/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a688a0305fad9219505a8f2576446510601bafe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a688a0305fad9219505a8f2576446510601bafe8", "html_url": "https://github.com/rust-lang/rust/commit/a688a0305fad9219505a8f2576446510601bafe8"}], "stats": {"total": 71, "additions": 63, "deletions": 8}, "files": [{"sha": "0b033e9384ce0c2be6d4dd41f66a8978c39bf51f", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -461,7 +461,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     if let PatKind::Range(Some(_), None, Spanned { .. }) = inner_pat.kind {\n                         gate_feature_post!(\n                             &self,\n-                            half_open_range_patterns,\n+                            half_open_range_patterns_in_slices,\n                             pat.span,\n                             \"`X..` patterns in slices are experimental\"\n                         );\n@@ -589,7 +589,10 @@ pub fn check_crate(krate: &ast::Crate, sess: &Session) {\n     gate_all!(generators, \"yield syntax is experimental\");\n     gate_all!(raw_ref_op, \"raw address of syntax is experimental\");\n     gate_all!(const_trait_impl, \"const trait impls are experimental\");\n-    gate_all!(half_open_range_patterns, \"half-open range patterns are unstable\");\n+    gate_all!(\n+        half_open_range_patterns_in_slices,\n+        \"half-open range patterns in slices are unstable\"\n+    );\n     gate_all!(inline_const, \"inline-const is experimental\");\n     gate_all!(inline_const_pat, \"inline-const in pattern position is experimental\");\n     gate_all!(associated_const_equality, \"associated const equality is incomplete\");"}, {"sha": "48c40eae662ed2d68a5b4af3c711d74982df67f3", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -414,6 +414,8 @@ declare_features! (\n     (incomplete, generic_const_exprs, \"1.56.0\", Some(76560), None),\n     /// Allows using `..X`, `..=X`, `...X`, and `X..` as a pattern.\n     (active, half_open_range_patterns, \"1.41.0\", Some(67264), None),\n+    /// Allows using `..=X` as a patterns in slices.\n+    (active, half_open_range_patterns_in_slices, \"CURRENT_RUSTC_VERSION\", Some(67264), None),\n     /// Allows `if let` guard in match arms.\n     (active, if_let_guard, \"1.47.0\", Some(51114), None),\n     /// Allows using imported `main` function"}, {"sha": "fe4fd33bdbacdfcd2bca077b1c5d2f316d7f65dd", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -785,6 +785,7 @@ symbols! {\n         globs,\n         gt,\n         half_open_range_patterns,\n+        half_open_range_patterns_in_slices,\n         hash,\n         hexagon_target_feature,\n         hidden,"}, {"sha": "56a1a97df16295082700551e1feb373a5d71bbdb", "filename": "src/doc/unstable-book/src/language-features/half-open-range-patterns-in-slices.md", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fhalf-open-range-patterns-in-slices.md", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fhalf-open-range-patterns-in-slices.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fhalf-open-range-patterns-in-slices.md?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -0,0 +1,30 @@\n+# `half_open_range_patterns_in_slices`\n+\n+The tracking issue for this feature is: [#67264]\n+It is part of the `exclusive_range_pattern` feature,\n+tracked at [#37854].\n+\n+[#67264]: https://github.com/rust-lang/rust/issues/67264\n+[#37854]: https://github.com/rust-lang/rust/issues/37854\n+-----\n+\n+This feature allow using top-level half-open range patterns in slices.\n+\n+```rust\n+#![feature(half_open_range_patterns_in_slices)]\n+#![feature(exclusive_range_pattern)]\n+\n+fn main() {\n+    let xs = [13, 1, 5, 2, 3, 1, 21, 8];\n+    let [a @ 3.., b @ ..3, c @ 4..6, ..] = xs else { return; };\n+}\n+```\n+\n+Note that this feature is not required if the patterns are wrapped between parenthesis.\n+\n+```rust\n+fn main() {\n+    let xs = [13, 1];\n+    let [(a @ 3..), c] = xs else { return; };\n+}\n+```"}, {"sha": "bf4f14f4d5a118efed7bce1f31450ff4565a1796", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static_cross_crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static_cross_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static_cross_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static_cross_crate.rs?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -1,7 +1,7 @@\n // compile-flags: -Zunleash-the-miri-inside-of-you\n // aux-build:static_cross_crate.rs\n // stderr-per-bitwidth\n-#![feature(exclusive_range_pattern, half_open_range_patterns)]\n+#![feature(exclusive_range_pattern, half_open_range_patterns_in_slices)]\n \n extern crate static_cross_crate;\n "}, {"sha": "b2e9ffb57727ea4c8dee6d7d56fc9c201b66354c", "filename": "src/test/ui/half-open-range-patterns/exclusive_range_pattern_syntax_collision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision.rs?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -1,4 +1,4 @@\n-#![feature(half_open_range_patterns)]\n+#![feature(half_open_range_patterns_in_slices)]\n #![feature(exclusive_range_pattern)]\n \n fn main() {"}, {"sha": "20f4d8f882a75d928475a4e966671f0f8532e246", "filename": "src/test/ui/half-open-range-patterns/exclusive_range_pattern_syntax_collision2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision2.rs?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -1,4 +1,4 @@\n-#![feature(half_open_range_patterns)]\n+#![feature(half_open_range_patterns_in_slices)]\n #![feature(exclusive_range_pattern)]\n \n fn main() {"}, {"sha": "dac973473490eff3e1a9e3d709deaa77a6f5c735", "filename": "src/test/ui/half-open-range-patterns/feature-gate-half-open-range-patterns-in-slices.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Ffeature-gate-half-open-range-patterns-in-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Ffeature-gate-half-open-range-patterns-in-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Ffeature-gate-half-open-range-patterns-in-slices.rs?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -0,0 +1,7 @@\n+#![feature(exclusive_range_pattern)]\n+\n+fn main() {\n+    let xs = [13, 1, 5, 2, 3, 1, 21, 8];\n+    let [a @ 3.., b @ ..3, c @ 4..6, ..] = xs;\n+    //~^ `X..` patterns in slices are experimental\n+}"}, {"sha": "ee5b0e11c66fa367ebbf862c2d1d74ee2eea29bb", "filename": "src/test/ui/half-open-range-patterns/feature-gate-half-open-range-patterns-in-slices.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Ffeature-gate-half-open-range-patterns-in-slices.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Ffeature-gate-half-open-range-patterns-in-slices.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Ffeature-gate-half-open-range-patterns-in-slices.stderr?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: `X..` patterns in slices are experimental\n+  --> $DIR/feature-gate-half-open-range-patterns-in-slices.rs:5:10\n+   |\n+LL |     let [a @ 3.., b @ ..3, c @ 4..6, ..] = xs;\n+   |          ^^^^^^^\n+   |\n+   = note: see issue #67264 <https://github.com/rust-lang/rust/issues/67264> for more information\n+   = help: add `#![feature(half_open_range_patterns_in_slices)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "d54cbfbf4bbf908464e09ece3ff5417138c133e5", "filename": "src/test/ui/half-open-range-patterns/slice_pattern_syntax_problem0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fslice_pattern_syntax_problem0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fslice_pattern_syntax_problem0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fslice_pattern_syntax_problem0.rs?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -1,4 +1,4 @@\n-#![feature(half_open_range_patterns)]\n+#![feature(half_open_range_patterns_in_slices)]\n #![feature(exclusive_range_pattern)]\n \n fn main() {"}, {"sha": "a9f7a90dede1f392c84c7cfd2c452acc68524542", "filename": "src/test/ui/half-open-range-patterns/slice_pattern_syntax_problem1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fslice_pattern_syntax_problem1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fslice_pattern_syntax_problem1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fslice_pattern_syntax_problem1.stderr?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -14,7 +14,7 @@ LL |     let [a @ 3.., b @ ..3, c @ 4..6, ..] = xs;\n    |          ^^^^^^^\n    |\n    = note: see issue #67264 <https://github.com/rust-lang/rust/issues/67264> for more information\n-   = help: add `#![feature(half_open_range_patterns)]` to the crate attributes to enable\n+   = help: add `#![feature(half_open_range_patterns_in_slices)]` to the crate attributes to enable\n \n error[E0658]: exclusive range pattern syntax is experimental\n   --> $DIR/slice_pattern_syntax_problem1.rs:4:23"}, {"sha": "baac570dd8a9d5344de4b12f7fd9a77571efe1e9", "filename": "src/test/ui/match/issue-92100.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fmatch%2Fissue-92100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c084c263977ba7376ce944b9dd6b8dffdc2eee48/src%2Ftest%2Fui%2Fmatch%2Fissue-92100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fissue-92100.rs?ref=c084c263977ba7376ce944b9dd6b8dffdc2eee48", "patch": "@@ -1,4 +1,4 @@\n-#![feature(half_open_range_patterns)]\n+#![feature(half_open_range_patterns_in_slices)]\n \n fn main() {\n     match [1, 2] {"}]}