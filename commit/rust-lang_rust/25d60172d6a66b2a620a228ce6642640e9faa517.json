{"sha": "25d60172d6a66b2a620a228ce6642640e9faa517", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZDYwMTcyZDZhNjZiMmE2MjBhMjI4Y2U2NjQyNjQwZTlmYWE1MTc=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-31T11:34:22Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-31T12:02:46Z"}, "message": "Don't consider references to nullary tag variants lvals in kind.rs\n\nThis allows us to express option::map with noncopyable type\nparameters, which makes sense, since the type params aren't being\ncopied (none doesn't contain any).", "tree": {"sha": "49671182c1a0691704297adf0f46dc82ffd943a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49671182c1a0691704297adf0f46dc82ffd943a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25d60172d6a66b2a620a228ce6642640e9faa517", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25d60172d6a66b2a620a228ce6642640e9faa517", "html_url": "https://github.com/rust-lang/rust/commit/25d60172d6a66b2a620a228ce6642640e9faa517", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25d60172d6a66b2a620a228ce6642640e9faa517/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9bb58f104400294d00cb821dfe15c19ed1b641d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9bb58f104400294d00cb821dfe15c19ed1b641d", "html_url": "https://github.com/rust-lang/rust/commit/b9bb58f104400294d00cb821dfe15c19ed1b641d"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "c41b093225ca3853d62cad23a0ccf662d5ec1079", "filename": "src/comp/middle/kind.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/25d60172d6a66b2a620a228ce6642640e9faa517/src%2Fcomp%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25d60172d6a66b2a620a228ce6642640e9faa517/src%2Fcomp%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fkind.rs?ref=25d60172d6a66b2a620a228ce6642640e9faa517", "patch": "@@ -215,9 +215,24 @@ fn maybe_copy(cx: ctx, ex: @expr) {\n     check_copy_ex(cx, ex, true);\n }\n \n+fn is_nullary_variant(cx: ctx, ex: @expr) -> bool {\n+    alt ex.node {\n+      expr_path(_) {\n+        alt cx.tcx.def_map.get(ex.id) {\n+          def_variant(edid, vdid) {\n+            vec::len(ty::enum_variant_with_id(cx.tcx, edid, vdid).args) == 0u\n+          }\n+          _ { false }\n+        }\n+      }\n+      _ { false }\n+    }\n+}\n+\n fn check_copy_ex(cx: ctx, ex: @expr, _warn: bool) {\n     if ty::expr_is_lval(cx.method_map, ex) &&\n-       !cx.last_uses.contains_key(ex.id) {\n+       !cx.last_uses.contains_key(ex.id) &&\n+       !is_nullary_variant(cx, ex) {\n         let ty = ty::expr_ty(cx.tcx, ex);\n         check_copy(cx, ty, ex.span);\n         // FIXME turn this on again once vector types are no longer unique."}]}