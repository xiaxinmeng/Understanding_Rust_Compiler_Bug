{"sha": "2d51b78ca9d305552883eea5cf83228f49fefce7", "node_id": "C_kwDOAAsO6NoAKDJkNTFiNzhjYTlkMzA1NTUyODgzZWVhNWNmODMyMjhmNDlmZWZjZTc", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-09-30T18:22:42Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-09-30T18:22:42Z"}, "message": "Rebase fallout.", "tree": {"sha": "41a7461961af67bd8756c915f320202c94725ff3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41a7461961af67bd8756c915f320202c94725ff3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d51b78ca9d305552883eea5cf83228f49fefce7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d51b78ca9d305552883eea5cf83228f49fefce7", "html_url": "https://github.com/rust-lang/rust/commit/2d51b78ca9d305552883eea5cf83228f49fefce7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d51b78ca9d305552883eea5cf83228f49fefce7/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79d14751a3bd9f27dbf5002ab2ca3c001f83afe3", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d14751a3bd9f27dbf5002ab2ca3c001f83afe3", "html_url": "https://github.com/rust-lang/rust/commit/79d14751a3bd9f27dbf5002ab2ca3c001f83afe3"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9f96096574fe158734744768d1cff77ed3f1db20", "filename": "compiler/rustc_codegen_gcc/src/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2d51b78ca9d305552883eea5cf83228f49fefce7/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d51b78ca9d305552883eea5cf83228f49fefce7/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbase.rs?ref=2d51b78ca9d305552883eea5cf83228f49fefce7", "patch": "@@ -7,14 +7,14 @@ use gccjit::{\n     GlobalKind,\n };\n use rustc_middle::dep_graph;\n-use rustc_middle::middle::cstore::EncodedMetadata;\n use rustc_middle::middle::exported_symbols;\n use rustc_middle::ty::TyCtxt;\n use rustc_middle::mir::mono::Linkage;\n use rustc_codegen_ssa::{ModuleCodegen, ModuleKind};\n use rustc_codegen_ssa::base::maybe_create_entry_wrapper;\n use rustc_codegen_ssa::mono_item::MonoItemExt;\n use rustc_codegen_ssa::traits::DebugInfoMethods;\n+use rustc_metadata::EncodedMetadata;\n use rustc_session::config::DebugInfo;\n use rustc_span::Symbol;\n \n@@ -149,7 +149,7 @@ pub fn write_compressed_metadata<'tcx>(tcx: TyCtxt<'tcx>, metadata: &EncodedMeta\n \n     let context = &gcc_module.context;\n     let mut compressed = rustc_metadata::METADATA_HEADER.to_vec();\n-    FrameEncoder::new(&mut compressed).write_all(&metadata.raw_data).unwrap();\n+    FrameEncoder::new(&mut compressed).write_all(&metadata.raw_data()).unwrap();\n \n     let name = exported_symbols::metadata_symbol_name(tcx);\n     let typ = context.new_array_type(None, context.new_type::<u8>(), compressed.len() as i32);"}, {"sha": "629003d7982b90072e0a57ee727a21cc0ee877a8", "filename": "compiler/rustc_codegen_gcc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d51b78ca9d305552883eea5cf83228f49fefce7/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d51b78ca9d305552883eea5cf83228f49fefce7/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs?ref=2d51b78ca9d305552883eea5cf83228f49fefce7", "patch": "@@ -60,8 +60,8 @@ use rustc_codegen_ssa::target_features::supported_target_features;\n use rustc_codegen_ssa::traits::{CodegenBackend, ExtraBackendMethods, ModuleBufferMethods, ThinBufferMethods, WriteBackendMethods};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{ErrorReported, Handler};\n+use rustc_metadata::EncodedMetadata;\n use rustc_middle::dep_graph::{WorkProduct, WorkProductId};\n-use rustc_middle::middle::cstore::EncodedMetadata;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::config::{Lto, OptLevel, OutputFilenames};\n use rustc_session::Session;"}]}