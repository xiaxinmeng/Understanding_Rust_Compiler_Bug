{"sha": "9aa26904b83266576f9a05d5b1b9ca99b8ed0533", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhYTI2OTA0YjgzMjY2NTc2ZjlhMDVkNWIxYjljYTk5YjhlZDA1MzM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-09T21:07:06Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-09T21:07:06Z"}, "message": "rustc: Remove redundant ty_params_of_tag() function", "tree": {"sha": "d8b91a9d4cbfff1d45ae9b9edbc6ec30c71f0624", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8b91a9d4cbfff1d45ae9b9edbc6ec30c71f0624"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9aa26904b83266576f9a05d5b1b9ca99b8ed0533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9aa26904b83266576f9a05d5b1b9ca99b8ed0533", "html_url": "https://github.com/rust-lang/rust/commit/9aa26904b83266576f9a05d5b1b9ca99b8ed0533", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9aa26904b83266576f9a05d5b1b9ca99b8ed0533/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80fa01fb5784b91c05443daff0df6c607c2ce276", "url": "https://api.github.com/repos/rust-lang/rust/commits/80fa01fb5784b91c05443daff0df6c607c2ce276", "html_url": "https://github.com/rust-lang/rust/commit/80fa01fb5784b91c05443daff0df6c607c2ce276"}], "stats": {"total": 14, "additions": 1, "deletions": 13}, "files": [{"sha": "063789274b6c9965b037494894dc5cb9433dcabd", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9aa26904b83266576f9a05d5b1b9ca99b8ed0533/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aa26904b83266576f9a05d5b1b9ca99b8ed0533/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=9aa26904b83266576f9a05d5b1b9ca99b8ed0533", "patch": "@@ -923,18 +923,6 @@ fn align_of(@block_ctxt cx, @ty.t t) -> result {\n     ret dynamic_align_of(cx, t);\n }\n \n-// Returns the type parameters associated with the tag with the given ID.\n-fn ty_params_of_tag(@crate_ctxt cx, &ast.def_id tid) -> vec[ast.ty_param] {\n-    alt (cx.items.get(tid).node) {\n-        case (ast.item_tag(_, _, ?tps, _)) { ret tps; }\n-        case (_) {\n-            log \"ty_params_of_tag(): tag ID doesn't actually refer to a \" +\n-                \"tag item\";\n-            fail;\n-        }\n-    }\n-}\n-\n // Computes the size of the data part of a non-dynamically-sized tag.\n fn static_size_of_tag(@crate_ctxt cx, @ty.t t) -> uint {\n     if (ty.type_has_dynamic_size(t)) {\n@@ -960,7 +948,7 @@ fn static_size_of_tag(@crate_ctxt cx, @ty.t t) -> uint {\n     }\n \n     // Pull the type parameters out of the corresponding tag item.\n-    let vec[ast.ty_param] ty_params = ty_params_of_tag(cx, tid);\n+    let vec[ast.ty_param] ty_params = tag_ty_params(cx, tid);\n \n     // Compute max(variant sizes).\n     auto max_size = 0u;"}]}