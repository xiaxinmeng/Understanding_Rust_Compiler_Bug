{"sha": "b8a683415c995bdb3d2e8bdc0d6a2bec7fe6cf1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4YTY4MzQxNWM5OTViZGIzZDJlOGJkYzBkNmEyYmVjN2ZlNmNmMWQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-30T23:52:23Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-31T03:37:32Z"}, "message": "rustdoc: Add attribute parsing for ifaces and methods", "tree": {"sha": "9886e9fb86b8161b572ad967353e35067e883ec5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9886e9fb86b8161b572ad967353e35067e883ec5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8a683415c995bdb3d2e8bdc0d6a2bec7fe6cf1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8a683415c995bdb3d2e8bdc0d6a2bec7fe6cf1d", "html_url": "https://github.com/rust-lang/rust/commit/b8a683415c995bdb3d2e8bdc0d6a2bec7fe6cf1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8a683415c995bdb3d2e8bdc0d6a2bec7fe6cf1d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd1564a6d34ccc80152a0b609022da03f5f5bfa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd1564a6d34ccc80152a0b609022da03f5f5bfa8", "html_url": "https://github.com/rust-lang/rust/commit/dd1564a6d34ccc80152a0b609022da03f5f5bfa8"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "9d886b6d4c91f00d0a321a49d5e1b0be45bc6e98", "filename": "src/rustdoc/attr_parser.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b8a683415c995bdb3d2e8bdc0d6a2bec7fe6cf1d/src%2Frustdoc%2Fattr_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8a683415c995bdb3d2e8bdc0d6a2bec7fe6cf1d/src%2Frustdoc%2Fattr_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_parser.rs?ref=b8a683415c995bdb3d2e8bdc0d6a2bec7fe6cf1d", "patch": "@@ -10,9 +10,11 @@ import rustc::front::attr;\n import core::tuple;\n \n export crate_attrs, mod_attrs, fn_attrs, arg_attrs,\n-       const_attrs, enum_attrs, variant_attrs, res_attrs;\n+       const_attrs, enum_attrs, variant_attrs, res_attrs,\n+       iface_attrs, method_attrs;\n export parse_crate, parse_mod, parse_fn, parse_const,\n-       parse_enum, parse_variant, parse_res;\n+       parse_enum, parse_variant, parse_res,\n+       parse_iface, parse_method;\n \n type crate_attrs = {\n     name: option<str>\n@@ -56,6 +58,13 @@ type res_attrs = {\n     args: [arg_attrs]\n };\n \n+type iface_attrs = {\n+    brief: option<str>,\n+    desc: option<str>\n+};\n+\n+type method_attrs = fn_attrs;\n+\n #[cfg(test)]\n mod test {\n \n@@ -481,4 +490,12 @@ fn shoulde_parse_resource_arg() {\n     let attrs = parse_res(attrs);\n     assert attrs.args[0].name == \"a\";\n     assert attrs.args[0].desc == \"b\";\n-}\n\\ No newline at end of file\n+}\n+\n+fn parse_iface(attrs: [ast::attribute]) -> iface_attrs {\n+    parse_basic(attrs)\n+}\n+\n+fn parse_method(attrs: [ast::attribute]) -> method_attrs {\n+    parse_fn(attrs)\n+}"}]}