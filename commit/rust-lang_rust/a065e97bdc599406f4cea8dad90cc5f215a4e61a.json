{"sha": "a065e97bdc599406f4cea8dad90cc5f215a4e61a", "node_id": "C_kwDOAAsO6NoAKGEwNjVlOTdiZGM1OTk0MDZmNGNlYThkYWQ5MGNjNWYyMTVhNGU2MWE", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2022-11-18T22:48:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-18T22:48:19Z"}, "message": "Rollup merge of #104498 - pierwill:stash-diag-docs, r=compiler-errors\n\nEdit docs for `rustc_errors::Handler::stash_diagnostic`\n\nClarify that the diagnostic can be retrieved with `steal_diagnostic`.\n\nr? ```@compiler-errors```", "tree": {"sha": "a11481c8622f656f611dba3fcf851dfd5caccd85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a11481c8622f656f611dba3fcf851dfd5caccd85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a065e97bdc599406f4cea8dad90cc5f215a4e61a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjeAuzCRBK7hj4Ov3rIwAAmnAIAKx82zZGQwycYOUHJkSOl7D1\naGS41fTC2koLtFN5U6DINIRxUd2ygiNS4s+gy+tD2QMcU9S/bv4C1M6b+ObYIlg5\nzPvptQV69wy4tg7vfMjc8JsNRqre4u+29eprvl8VRNEqM0a6zOXbLnEZ05/et/l+\nCq9sZ7HuyBTG42xQCjXzMZ/FSVvZCxODPUU3Ufc0/nFo1bBBCdYRfmEbfqo33UPx\nivSt0uRpgiLUNO58XrtK9CSRNlRTtnXrPQ/DJ6MxtjLiRyDP4XM2ZoQLpnKZV96r\nTdJ+xJt7m44qjigI6a6cH6zJIGMJ/PysGyDlBaisaC+5I4QfFVVtWRsWmJ5TkBw=\n=FacF\n-----END PGP SIGNATURE-----\n", "payload": "tree a11481c8622f656f611dba3fcf851dfd5caccd85\nparent 24ee5991959d36a2fd858e4760ca19a12912a5b9\nparent 19b63bc791dee7329922f809f5468483b0d72bc6\nauthor Manish Goregaokar <manishsmail@gmail.com> 1668811699 -0500\ncommitter GitHub <noreply@github.com> 1668811699 -0500\n\nRollup merge of #104498 - pierwill:stash-diag-docs, r=compiler-errors\n\nEdit docs for `rustc_errors::Handler::stash_diagnostic`\n\nClarify that the diagnostic can be retrieved with `steal_diagnostic`.\n\nr? ```@compiler-errors```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a065e97bdc599406f4cea8dad90cc5f215a4e61a", "html_url": "https://github.com/rust-lang/rust/commit/a065e97bdc599406f4cea8dad90cc5f215a4e61a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a065e97bdc599406f4cea8dad90cc5f215a4e61a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24ee5991959d36a2fd858e4760ca19a12912a5b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/24ee5991959d36a2fd858e4760ca19a12912a5b9", "html_url": "https://github.com/rust-lang/rust/commit/24ee5991959d36a2fd858e4760ca19a12912a5b9"}, {"sha": "19b63bc791dee7329922f809f5468483b0d72bc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/19b63bc791dee7329922f809f5468483b0d72bc6", "html_url": "https://github.com/rust-lang/rust/commit/19b63bc791dee7329922f809f5468483b0d72bc6"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "ae88fcade6314f98c0797b530ed336c496857917", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a065e97bdc599406f4cea8dad90cc5f215a4e61a/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a065e97bdc599406f4cea8dad90cc5f215a4e61a/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=a065e97bdc599406f4cea8dad90cc5f215a4e61a", "patch": "@@ -644,13 +644,14 @@ impl Handler {\n         inner.stashed_diagnostics = Default::default();\n     }\n \n-    /// Stash a given diagnostic with the given `Span` and `StashKey` as the key for later stealing.\n+    /// Stash a given diagnostic with the given `Span` and [`StashKey`] as the key.\n+    /// Retrieve a stashed diagnostic with `steal_diagnostic`.\n     pub fn stash_diagnostic(&self, span: Span, key: StashKey, diag: Diagnostic) {\n         let mut inner = self.inner.borrow_mut();\n         inner.stash((span, key), diag);\n     }\n \n-    /// Steal a previously stashed diagnostic with the given `Span` and `StashKey` as the key.\n+    /// Steal a previously stashed diagnostic with the given `Span` and [`StashKey`] as the key.\n     pub fn steal_diagnostic(&self, span: Span, key: StashKey) -> Option<DiagnosticBuilder<'_, ()>> {\n         let mut inner = self.inner.borrow_mut();\n         inner.steal((span, key)).map(|diag| DiagnosticBuilder::new_diagnostic(self, diag))"}]}