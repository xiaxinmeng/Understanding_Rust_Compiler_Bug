{"sha": "4c49db35fc671a522dbe07bfbeda8c7e7897108c", "node_id": "C_kwDOAAsO6NoAKDRjNDlkYjM1ZmM2NzFhNTIyZGJlMDdiZmJlZGE4YzdlNzg5NzEwOGM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-06T22:12:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-06T22:12:03Z"}, "message": "Rollup merge of #90508 - nbdd0121:issue-90483, r=davidtwco\n\nApply adjustments for field expression even if inaccessible\n\nThe adjustments are used later by ExprUseVisitor to build Place projections and without adjustments it can produce invalid result.\n\nFix #90483\n\n``@rustbot`` label: T-compiler", "tree": {"sha": "34b20baf5a11984124823ef681e2e856d79a7ea6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34b20baf5a11984124823ef681e2e856d79a7ea6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c49db35fc671a522dbe07bfbeda8c7e7897108c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhhv20CRBK7hj4Ov3rIwAAFTEIAI3JhZj0M8VXk7JQZ9sCxQPG\n6igClfXbh0jExkfuhRrxbxv3AmZ+aRTJINKJPno4QnYYWsOJiNy5YDC7Uu/+wOMf\n06z1Rp0qFKXVcHwiOL53Tlf1HBbFS6JMcDZ11tiJRhkUpNXPTPrOFeCT5OzEjz+7\nlDsrwatP4IILE8YpybyyI8lIaiX4Jpl2TxG9yRkJC1qJpVq1JeOxGD7ONM+NwQNN\ndB/v2B8Dwq7UP4eh4SRLnxkAwcUrpANlcosHujVFB3/UM/tv3snW3pN9ObLKDnl9\nBGPd/zNlTrjBIbPBuK5igHBSLhBWJUeG8/kVJD+s2fZAAPbjnFvAD3Wppk5Imqs=\n=YZJg\n-----END PGP SIGNATURE-----\n", "payload": "tree 34b20baf5a11984124823ef681e2e856d79a7ea6\nparent de332b52afa45dc60d1fda2b8122241632f7ebb0\nparent f5560754591532d7cde4c9f5dd51dfbd7670e98f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1636236723 +0100\ncommitter GitHub <noreply@github.com> 1636236723 +0100\n\nRollup merge of #90508 - nbdd0121:issue-90483, r=davidtwco\n\nApply adjustments for field expression even if inaccessible\n\nThe adjustments are used later by ExprUseVisitor to build Place projections and without adjustments it can produce invalid result.\n\nFix #90483\n\n``@rustbot`` label: T-compiler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c49db35fc671a522dbe07bfbeda8c7e7897108c", "html_url": "https://github.com/rust-lang/rust/commit/4c49db35fc671a522dbe07bfbeda8c7e7897108c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c49db35fc671a522dbe07bfbeda8c7e7897108c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de332b52afa45dc60d1fda2b8122241632f7ebb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/de332b52afa45dc60d1fda2b8122241632f7ebb0", "html_url": "https://github.com/rust-lang/rust/commit/de332b52afa45dc60d1fda2b8122241632f7ebb0"}, {"sha": "f5560754591532d7cde4c9f5dd51dfbd7670e98f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5560754591532d7cde4c9f5dd51dfbd7670e98f", "html_url": "https://github.com/rust-lang/rust/commit/f5560754591532d7cde4c9f5dd51dfbd7670e98f"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "2d0a4068fbbe31ef00f16ef6ddf01effb2e23b25", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4c49db35fc671a522dbe07bfbeda8c7e7897108c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c49db35fc671a522dbe07bfbeda8c7e7897108c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=4c49db35fc671a522dbe07bfbeda8c7e7897108c", "patch": "@@ -1698,15 +1698,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         // Save the index of all fields regardless of their visibility in case\n                         // of error recovery.\n                         self.write_field_index(expr.hir_id, index);\n+                        let adjustments = self.adjust_steps(&autoderef);\n                         if field.vis.is_accessible_from(def_scope, self.tcx) {\n-                            let adjustments = self.adjust_steps(&autoderef);\n                             self.apply_adjustments(base, adjustments);\n                             self.register_predicates(autoderef.into_obligations());\n \n                             self.tcx.check_stability(field.did, Some(expr.hir_id), expr.span, None);\n                             return field_ty;\n                         }\n-                        private_candidate = Some((base_def.did, field_ty));\n+                        private_candidate = Some((adjustments, base_def.did, field_ty));\n                     }\n                 }\n                 ty::Tuple(tys) => {\n@@ -1729,7 +1729,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n         self.structurally_resolved_type(autoderef.span(), autoderef.final_ty(false));\n \n-        if let Some((did, field_ty)) = private_candidate {\n+        if let Some((adjustments, did, field_ty)) = private_candidate {\n+            // (#90483) apply adjustments to avoid ExprUseVisitor from\n+            // creating erroneous projection.\n+            self.apply_adjustments(base, adjustments);\n             self.ban_private_field_access(expr, expr_t, field, did);\n             return field_ty;\n         }"}, {"sha": "74e50d46e8dcfa26d7e883f14ff582e0edf8c79c", "filename": "src/test/ui/typeck/issue-90483-inaccessible-field-adjustment.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4c49db35fc671a522dbe07bfbeda8c7e7897108c/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c49db35fc671a522dbe07bfbeda8c7e7897108c/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.rs?ref=4c49db35fc671a522dbe07bfbeda8c7e7897108c", "patch": "@@ -0,0 +1,14 @@\n+// edition:2021\n+\n+mod m {\n+  pub struct S { foo: i32 }\n+  impl S {\n+    pub fn foo(&self) -> i32 { 42 }\n+  }\n+}\n+\n+fn bar(s: &m::S) {\n+  || s.foo() + s.foo; //~ ERROR E0616\n+}\n+\n+fn main() {}"}, {"sha": "02cdc102c15baed86626b785b6f88304d0ec9166", "filename": "src/test/ui/typeck/issue-90483-inaccessible-field-adjustment.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4c49db35fc671a522dbe07bfbeda8c7e7897108c/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c49db35fc671a522dbe07bfbeda8c7e7897108c/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.stderr?ref=4c49db35fc671a522dbe07bfbeda8c7e7897108c", "patch": "@@ -0,0 +1,14 @@\n+error[E0616]: field `foo` of struct `S` is private\n+  --> $DIR/issue-90483-inaccessible-field-adjustment.rs:11:18\n+   |\n+LL |   || s.foo() + s.foo;\n+   |                  ^^^ private field\n+   |\n+help: a method `foo` also exists, call it with parentheses\n+   |\n+LL |   || s.foo() + s.foo();\n+   |                     ++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0616`."}]}