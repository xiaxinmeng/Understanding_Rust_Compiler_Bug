{"sha": "2c70af3cd59504a79359808d39843132f47c9e32", "node_id": "C_kwDOAAsO6NoAKDJjNzBhZjNjZDU5NTA0YTc5MzU5ODA4ZDM5ODQzMTMyZjQ3YzllMzI", "commit": {"author": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-05-03T22:12:31Z"}, "committer": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-05-03T22:12:31Z"}, "message": "Only require minor version", "tree": {"sha": "28487f44e8c7c3d2ac77e9b6754825947ebdc11f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28487f44e8c7c3d2ac77e9b6754825947ebdc11f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c70af3cd59504a79359808d39843132f47c9e32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c70af3cd59504a79359808d39843132f47c9e32", "html_url": "https://github.com/rust-lang/rust/commit/2c70af3cd59504a79359808d39843132f47c9e32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c70af3cd59504a79359808d39843132f47c9e32/comments", "author": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9173780568144717da3a4986f67ad375b8fa1ded", "url": "https://api.github.com/repos/rust-lang/rust/commits/9173780568144717da3a4986f67ad375b8fa1ded", "html_url": "https://github.com/rust-lang/rust/commit/9173780568144717da3a4986f67ad375b8fa1ded"}], "stats": {"total": 78, "additions": 47, "deletions": 31}, "files": [{"sha": "69dcd947dfbd03878b91d0f24538857e1d410f03", "filename": "util/gh-pages/index.html", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2c70af3cd59504a79359808d39843132f47c9e32/util%2Fgh-pages%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/2c70af3cd59504a79359808d39843132f47c9e32/util%2Fgh-pages%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fgh-pages%2Findex.html?ref=2c70af3cd59504a79359808d39843132f47c9e32", "patch": "@@ -301,11 +301,15 @@\n \n         #version-filter li label {\n             padding-right: 0;\n-            width: 40%;\n+            width: 35%;\n         }\n \n         .version-filter-input {\n-            height: 75%;\n+            height: 60%;\n+            width: 30%;\n+            text-align: center;\n+            border: none;\n+            border-bottom: 1px solid #000000;\n         }\n \n         #filter-label, .filter-clear {\n@@ -429,7 +433,11 @@ <h1>Clippy Lints</h1>\n                         <div id=\"version-filter\">\n                             <div class=\"btn-group\" filter-dropdown>\n                                 <button type=\"button\" class=\"btn btn-default dropdown-toggle\">\n-                                    Version <span id=\"version-filter-count\" class=\"badge\">{{versionFilterCount(version_filters)}}</span> <span class=\"caret\"></span>\n+                                    Version\n+                                    <span id=\"version-filter-count\" class=\"badge\">\n+                                        {{versionFilterCount(version_filters)}}\n+                                    </span>\n+                                    <span class=\"caret\"></span>\n                                 </button>\n                                 <ul id=\"version-filter-selector\" class=\"dropdown-menu\">\n                                     <li class=\"checkbox\">\n@@ -441,11 +449,20 @@ <h1>Clippy Lints</h1>\n                                     <li role=\"separator\" class=\"divider\"></li>\n                                     <li class=\"checkbox\" ng-repeat=\"(filter, vars) in version_filters\">\n                                         <label ng-attr-for=\"filter-{filter}\">{{filter}}</label>\n-                                        <input type=\"text\" ng-attr-id=\"filter-{filter}\" class=\"version-filter-input form-control filter-input\" maxlength=\"6\" placeholder=\"1.62.0\" ng-model=\"version_filters[filter].version_str\" ng-model-options=\"{debounce: 50}\"/>\n+                                        <span>1.</span>\n+                                        <input type=\"text\"\n+                                                ng-attr-id=\"filter-{filter}\"\n+                                                class=\"version-filter-input form-control filter-input\"\n+                                                maxlength=\"2\"\n+                                                placeholder=\"62\"\n+                                                ng-model=\"version_filters[filter].minor_version\"\n+                                                ng-model-options=\"{debounce: 50}\" />\n+                                        <span>.0</span>\n                                     </li>\n                                 </ul>\n                             </div>\n                         </div>\n+\n                     </div>\n                     <div class=\"col-12 col-md-7 search-control\">\n                         <div class=\"input-group\">"}, {"sha": "b04a9374574943106dc99aa4c1df5f204cc3b6d6", "filename": "util/gh-pages/script.js", "status": "modified", "additions": 26, "deletions": 27, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/2c70af3cd59504a79359808d39843132f47c9e32/util%2Fgh-pages%2Fscript.js", "raw_url": "https://github.com/rust-lang/rust/raw/2c70af3cd59504a79359808d39843132f47c9e32/util%2Fgh-pages%2Fscript.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fgh-pages%2Fscript.js?ref=2c70af3cd59504a79359808d39843132f47c9e32", "patch": "@@ -137,13 +137,12 @@\n             $scope.themes = THEMES_DEFAULT;\n \n             const DEFAULT_VERSION_FILTERS = {\n-                \"\u2265\": { enabled: false, version_str: \"\" },\n-                \"\u2264\": { enabled: false, version_str: \"\" },\n-                \"=\": { enabled: false, version_str: \"\" },\n+                \"\u2265\": { enabled: false, minor_version: \"\" },\n+                \"\u2264\": { enabled: false, minor_version: \"\" },\n+                \"=\": { enabled: false, minor_version: \"\" },\n             };\n             // Weird workaround to get a copy of the object\n             $scope.version_filters = JSON.parse(JSON.stringify(DEFAULT_VERSION_FILTERS));\n-            $scope.version_regex = new RegExp('1\\.\\\\d{2}\\.\\\\d');\n \n             $scope.selectTheme = function (theme) {\n                 setTheme(theme, true);\n@@ -181,42 +180,42 @@\n \n             $scope.byVersion = function(lint) {\n                 function validate_version_str(ver) {\n-                    return ver.length === 6 && $scope.version_regex.test(ver);\n-                }\n-\n-                function cmp_version(ver1, ver2, filter) {\n-                    // < 0: lint_version < version\n-                    // 0: equal\n-                    // > 0: lint_version > version\n-                    let result = ver1.localeCompare(ver2, undefined, {\n-                        numeric: true,\n-                        sensitivity: \"base\"\n-                    });\n-\n-                    // \"==\" gets the highest priority, since all filters are inclusive\n-                    return (result === 0) || (filter === \">=\" && result > 0) || (filter === \"<=\" && result < 0);\n+                    return ver.length === 2 && !isNaN(ver);\n                 }\n \n                 let filters = $scope.version_filters;\n \n                 // Strip the \"pre \" prefix for pre 1.29.0 lints\n                 let lint_version = lint.version.startsWith(\"pre \") ? lint.version.substring(4, lint.version.length) : lint.version;\n+                let lint_minor_verison = lint_version.substring(2, 4);\n \n                 for (const filter in filters) {\n-                    let version_str = filters[filter].version_str;\n+                    let minor_version = filters[filter].minor_version;\n \n                     // Skip the work for version strings with invalid lengths or characters\n-                    if (!validate_version_str(version_str)) {\n+                    if (!validate_version_str(minor_version)) {\n                         filters[filter].enabled = false;\n                         continue;\n                     }\n \n                     filters[filter].enabled = true;\n \n-                    let result = cmp_version(lint_version, version_str, filter);\n-                    if (result && filter === \"==\") {\n-                        return true;\n-                    } else if (!result) {\n+                    let result;\n+                    switch (filter) {\n+                        case \"\u2265\":\n+                            result = (lint_minor_verison >= minor_version);\n+                            break;\n+                        case \"\u2264\":\n+                            result = (lint_minor_verison <= minor_version);\n+                            break;\n+                        // \"=\" gets the highest priority, since all filters are inclusive\n+                        case \"=\":\n+                            return (lint_minor_verison === minor_version);\n+                        default:\n+                            return true\n+                    }\n+\n+                    if (!result) {\n                         return false;\n                     }\n \n@@ -227,12 +226,12 @@\n                         cmp_filter = \"\u2265\";\n                     }\n \n-                    let cmp_version_str = filters[cmp_filter].version_str;\n-                    if (!filters[cmp_filter].enabled || !validate_version_str(cmp_version_str)) {\n+                    let cmp_minor_version = filters[cmp_filter].minor_version;\n+                    if (!filters[cmp_filter].enabled || !validate_version_str(cmp_minor_version)) {\n                         return true;\n                     }\n \n-                    return cmp_version(lint_version, cmp_version_str, cmp_filter);\n+                    return (cmp_filter === \"\u2265\") ? (lint_minor_verison > minor_version) : (lint_minor_verison < minor_version);\n                 }\n \n                 return true;"}]}