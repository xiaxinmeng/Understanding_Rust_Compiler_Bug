{"sha": "c82b2bc590a39694948b685ca1f715a9ad0ecc08", "node_id": "C_kwDOAAsO6NoAKGM4MmIyYmM1OTBhMzk2OTQ5NDhiNjg1Y2ExZjcxNWE5YWQwZWNjMDg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-29T09:17:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-29T09:17:11Z"}, "message": "Rollup merge of #92351 - TmLev:master, r=GuillaumeGomez\n\nAdd long error explanation for E0227\n\nPart of the #61137.", "tree": {"sha": "e60564c74a4b106e4268c2ba3b4232a066b6cde9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e60564c74a4b106e4268c2ba3b4232a066b6cde9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c82b2bc590a39694948b685ca1f715a9ad0ecc08", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhzCeYCRBK7hj4Ov3rIwAAIEMIAFHkQsJ13Yuxa+/LcYvL5oA3\n9XnsILc5mMGBujQ5guiv8XtT7IytakMX+IF3ouf/omNpm0pHhOQD5Wxwkxhk4csC\nt6RKn+t7whHx3tURQhuU528GBtHrKSnYIbeSgE9qxkObYrtetPhiaZ7VRo+gKJw5\nVJ/psX9Z7a+WRPI3NbiT7EfhUjqSG6l0BPwys0rW1lvh6ShIjHwpHFFW55Amz4mW\ni8X6qy/+XiOfY7CVcYFSNx7lzaUL4/h+qUnR091FaKWfiinvS5IDA5zQK6MLqVPN\nOLpnQ1/GwTsMM44kKQfeulQnlHNZCfSpYfBm7DnmdcChd6TBnq+vPulBsepPboE=\n=eviy\n-----END PGP SIGNATURE-----\n", "payload": "tree e60564c74a4b106e4268c2ba3b4232a066b6cde9\nparent 0e4119488d908ae84ddc794b5ae73c5358199e7e\nparent 406d6d4028260f6c5ff02562831c137c41e0bb95\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1640769431 +0100\ncommitter GitHub <noreply@github.com> 1640769431 +0100\n\nRollup merge of #92351 - TmLev:master, r=GuillaumeGomez\n\nAdd long error explanation for E0227\n\nPart of the #61137.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c82b2bc590a39694948b685ca1f715a9ad0ecc08", "html_url": "https://github.com/rust-lang/rust/commit/c82b2bc590a39694948b685ca1f715a9ad0ecc08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c82b2bc590a39694948b685ca1f715a9ad0ecc08/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e4119488d908ae84ddc794b5ae73c5358199e7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e4119488d908ae84ddc794b5ae73c5358199e7e", "html_url": "https://github.com/rust-lang/rust/commit/0e4119488d908ae84ddc794b5ae73c5358199e7e"}, {"sha": "406d6d4028260f6c5ff02562831c137c41e0bb95", "url": "https://api.github.com/repos/rust-lang/rust/commits/406d6d4028260f6c5ff02562831c137c41e0bb95", "html_url": "https://github.com/rust-lang/rust/commit/406d6d4028260f6c5ff02562831c137c41e0bb95"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "79d9c55b5470b731fb8415b6fae3442f5c09ac0c", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c82b2bc590a39694948b685ca1f715a9ad0ecc08/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82b2bc590a39694948b685ca1f715a9ad0ecc08/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=c82b2bc590a39694948b685ca1f715a9ad0ecc08", "patch": "@@ -120,6 +120,7 @@ E0223: include_str!(\"./error_codes/E0223.md\"),\n E0224: include_str!(\"./error_codes/E0224.md\"),\n E0225: include_str!(\"./error_codes/E0225.md\"),\n E0226: include_str!(\"./error_codes/E0226.md\"),\n+E0227: include_str!(\"./error_codes/E0227.md\"),\n E0228: include_str!(\"./error_codes/E0228.md\"),\n E0229: include_str!(\"./error_codes/E0229.md\"),\n E0230: include_str!(\"./error_codes/E0230.md\"),\n@@ -530,7 +531,6 @@ E0786: include_str!(\"./error_codes/E0786.md\"),\n //  E0217, // ambiguous associated type, defined in multiple supertraits\n //  E0218, // no associated type defined\n //  E0219, // associated type defined in higher-ranked supertrait\n-    E0227, // ambiguous lifetime bound, explicit lifetime bound required\n //  E0233,\n //  E0234,\n //  E0235, // structure constructor specifies a structure of type but"}, {"sha": "f68614723d4430ed7c265b684bb88d714230ed71", "filename": "compiler/rustc_error_codes/src/error_codes/E0227.md", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/c82b2bc590a39694948b685ca1f715a9ad0ecc08/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0227.md", "raw_url": "https://github.com/rust-lang/rust/raw/c82b2bc590a39694948b685ca1f715a9ad0ecc08/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0227.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0227.md?ref=c82b2bc590a39694948b685ca1f715a9ad0ecc08", "patch": "@@ -0,0 +1,33 @@\n+This error indicates that the compiler is unable to determine whether there is\n+exactly one unique region in the set of derived region bounds.\n+\n+Example of erroneous code:\n+\n+```compile_fail,E0227\n+trait Foo<'foo>: 'foo {}\n+trait Bar<'bar>: 'bar {}\n+\n+trait FooBar<'foo, 'bar>: Foo<'foo> + Bar<'bar> {}\n+\n+struct Baz<'foo, 'bar> {\n+    baz: dyn FooBar<'foo, 'bar>,\n+}\n+```\n+\n+Here, `baz` can have either `'foo` or `'bar` lifetimes.\n+\n+To resolve this error, provide an explicit lifetime:\n+\n+```rust\n+trait Foo<'foo>: 'foo {}\n+trait Bar<'bar>: 'bar {}\n+\n+trait FooBar<'foo, 'bar>: Foo<'foo> + Bar<'bar> {}\n+\n+struct Baz<'foo, 'bar, 'baz>\n+where\n+    'baz: 'foo + 'bar,\n+{\n+    obj: dyn FooBar<'foo, 'bar> + 'baz,\n+}\n+```"}, {"sha": "0f0a781d2f9d30b46dc24369cb7b7e29aa6f9f45", "filename": "src/test/ui/error-codes/E0227.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c82b2bc590a39694948b685ca1f715a9ad0ecc08/src%2Ftest%2Fui%2Ferror-codes%2FE0227.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82b2bc590a39694948b685ca1f715a9ad0ecc08/src%2Ftest%2Fui%2Ferror-codes%2FE0227.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0227.rs?ref=c82b2bc590a39694948b685ca1f715a9ad0ecc08", "patch": "@@ -0,0 +1,12 @@\n+trait Foo<'foo>: 'foo {}\n+trait Bar<'bar>: 'bar {}\n+\n+trait FooBar<'foo, 'bar>: Foo<'foo> + Bar<'bar> {}\n+\n+struct Baz<'foo, 'bar> {\n+    baz: dyn FooBar<'foo, 'bar>,\n+    //~^ ERROR ambiguous lifetime bound, explicit lifetime bound required\n+}\n+\n+fn main() {\n+}"}, {"sha": "26de5b4c40015e794abc6feec91130b10d51d1c3", "filename": "src/test/ui/error-codes/E0227.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c82b2bc590a39694948b685ca1f715a9ad0ecc08/src%2Ftest%2Fui%2Ferror-codes%2FE0227.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c82b2bc590a39694948b685ca1f715a9ad0ecc08/src%2Ftest%2Fui%2Ferror-codes%2FE0227.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0227.stderr?ref=c82b2bc590a39694948b685ca1f715a9ad0ecc08", "patch": "@@ -0,0 +1,9 @@\n+error[E0227]: ambiguous lifetime bound, explicit lifetime bound required\n+  --> $DIR/E0227.rs:7:10\n+   |\n+LL |     baz: dyn FooBar<'foo, 'bar>,\n+   |          ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0227`."}, {"sha": "8ea6bb308b7bac4a2bad4c12672b0fa9c9810af6", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c82b2bc590a39694948b685ca1f715a9ad0ecc08/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82b2bc590a39694948b685ca1f715a9ad0ecc08/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=c82b2bc590a39694948b685ca1f715a9ad0ecc08", "patch": "@@ -10,8 +10,8 @@ use regex::Regex;\n \n // A few of those error codes can't be tested but all the others can and *should* be tested!\n const EXEMPTED_FROM_TEST: &[&str] = &[\n-    \"E0227\", \"E0279\", \"E0280\", \"E0313\", \"E0377\", \"E0461\", \"E0462\", \"E0465\", \"E0476\", \"E0514\",\n-    \"E0519\", \"E0523\", \"E0554\", \"E0640\", \"E0717\", \"E0729\",\n+    \"E0279\", \"E0280\", \"E0313\", \"E0377\", \"E0461\", \"E0462\", \"E0465\", \"E0476\", \"E0514\", \"E0519\",\n+    \"E0523\", \"E0554\", \"E0640\", \"E0717\", \"E0729\",\n ];\n \n // Some error codes don't have any tests apparently..."}]}