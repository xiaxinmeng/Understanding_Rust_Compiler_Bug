{"sha": "7b5d34aa9ac5c82e08c82b6e865c3b697299f65d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiNWQzNGFhOWFjNWM4MmUwOGM4MmI2ZTg2NWMzYjY5NzI5OWY2NWQ=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-06-29T02:06:44Z"}, "committer": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-06-29T02:06:44Z"}, "message": "Comments and cleanup.", "tree": {"sha": "9b17fb9a4cdc418fb0c11c553fbd3cb81054618b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b17fb9a4cdc418fb0c11c553fbd3cb81054618b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b5d34aa9ac5c82e08c82b6e865c3b697299f65d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b5d34aa9ac5c82e08c82b6e865c3b697299f65d", "html_url": "https://github.com/rust-lang/rust/commit/7b5d34aa9ac5c82e08c82b6e865c3b697299f65d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b5d34aa9ac5c82e08c82b6e865c3b697299f65d/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57e5cde3a2e19c8bd6616b273421c09b075b7222", "url": "https://api.github.com/repos/rust-lang/rust/commits/57e5cde3a2e19c8bd6616b273421c09b075b7222", "html_url": "https://github.com/rust-lang/rust/commit/57e5cde3a2e19c8bd6616b273421c09b075b7222"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "3f7badafb0ea581698f8909c171ea555e8b00b71", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7b5d34aa9ac5c82e08c82b6e865c3b697299f65d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b5d34aa9ac5c82e08c82b6e865c3b697299f65d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=7b5d34aa9ac5c82e08c82b6e865c3b697299f65d", "patch": "@@ -5135,6 +5135,13 @@ fn trans_bind_thunk(&@local_ctxt cx, &span sp, &ty::t incoming_fty,\n     auto fcx = new_fn_ctxt(cx, sp, llthunk);\n     auto bcx = new_top_block_ctxt(fcx);\n     auto lltop = bcx.llbb;\n+\n+    // The 'llenv' that will arrive in the thunk we're creating is an\n+    // environment that will contain the values of its arguments and a pointer\n+    // to the original function.  So, let's create one of those:\n+\n+    // The llenv pointer needs to be the correct size.  That size is\n+    // 'closure_ty', which was determined by trans_bind.\n     auto llclosure_ptr_ty =\n         type_of(cx.ccx, sp, ty::mk_imm_box(cx.ccx.tcx, closure_ty));\n     auto llclosure = bcx.build.PointerCast(fcx.llenv, llclosure_ptr_ty);\n@@ -5296,14 +5303,12 @@ fn trans_bind(&@block_ctxt cx, &@ast::expr f,\n             // Translate the bound expressions.\n             let vec[ty::t] bound_tys = [];\n             let vec[ValueRef] bound_vals = [];\n-            auto i = 0u;\n             for (@ast::expr e in bound) {\n                 auto arg = trans_expr(bcx, e);\n                 bcx = arg.bcx;\n                 vec::push[ValueRef](bound_vals, arg.val);\n                 vec::push[ty::t](bound_tys,\n                                  ty::expr_ty(cx.fcx.lcx.ccx.tcx, e));\n-                i += 1u;\n             }\n \n             // Synthesize a closure type.\n@@ -5384,9 +5389,9 @@ fn trans_bind(&@block_ctxt cx, &@ast::expr f,\n             auto src = bcx.build.Load(f_res.res.val);\n             bound_target = bcx.build.PointerCast(bound_target, llclosurety);\n             bcx.build.Store(src, bound_target);\n-            // Copy expr values into boxed bindings.\n \n-            i = 0u;\n+            // Copy expr values into boxed bindings.\n+            auto i = 0u;\n             auto bindings =\n                 bcx.build.GEP(closure,\n                               [C_int(0), C_int(abi::closure_elt_bindings)]);"}]}