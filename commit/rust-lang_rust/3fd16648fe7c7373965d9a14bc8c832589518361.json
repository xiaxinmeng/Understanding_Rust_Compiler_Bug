{"sha": "3fd16648fe7c7373965d9a14bc8c832589518361", "node_id": "C_kwDOAAsO6NoAKDNmZDE2NjQ4ZmU3YzczNzM5NjVkOWExNGJjOGM4MzI1ODk1MTgzNjE", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-06-11T16:29:06Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-06-11T16:54:23Z"}, "message": "Re-add explicit list of traits to tuple docs, with limit notes", "tree": {"sha": "387bf803e5ec7cd59da5c79512e01fa0f288658a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/387bf803e5ec7cd59da5c79512e01fa0f288658a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fd16648fe7c7373965d9a14bc8c832589518361", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fd16648fe7c7373965d9a14bc8c832589518361", "html_url": "https://github.com/rust-lang/rust/commit/3fd16648fe7c7373965d9a14bc8c832589518361", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fd16648fe7c7373965d9a14bc8c832589518361/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "090c68ba5c06ebfb9c94e5ba8d99279029ea9401", "url": "https://api.github.com/repos/rust-lang/rust/commits/090c68ba5c06ebfb9c94e5ba8d99279029ea9401", "html_url": "https://github.com/rust-lang/rust/commit/090c68ba5c06ebfb9c94e5ba8d99279029ea9401"}], "stats": {"total": 78, "additions": 68, "deletions": 10}, "files": [{"sha": "be3953692fa315e7e8d48bb192783136febc6fe6", "filename": "library/core/src/primitive_docs.rs", "status": "modified", "additions": 34, "deletions": 5, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/3fd16648fe7c7373965d9a14bc8c832589518361/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd16648fe7c7373965d9a14bc8c832589518361/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fprimitive_docs.rs?ref=3fd16648fe7c7373965d9a14bc8c832589518361", "patch": "@@ -916,11 +916,40 @@ mod prim_str {}\n ///\n /// # Trait implementations\n ///\n-/// In this documentation the shorthand `(T, ...)` is used to represent all\n-/// tuples up to length twelve. When that is used, any trait bounds expressed\n-/// on `T` applies to each field of the tuple independently. Note that this is\n-/// a convenience notation to avoid repetitive documentation, not valid\n-/// Rust syntax.\n+/// In this documentation the shorthand `(T, ...)` is used to represent tuples of varying length.\n+/// When that is used, any trait bounds expressed on `T` applies to each field of the tuple\n+/// independently. Note that this is a convenience notation to avoid repetitive documentation,\n+/// not valid Rust syntax.\n+///\n+/// Due to a temporary restriction in Rust\u2019s type system, the following traits are only\n+/// implemented on tuples of arity 12 or less. In the future, this may change:\n+///\n+/// * [`PartialEq`]\n+/// * [`Eq`]\n+/// * [`PartialOrd`]\n+/// * [`Ord`]\n+/// * [`Debug`]\n+/// * [`Default`]\n+/// * [`Hash`]\n+///\n+/// [`Debug`]: fmt::Debug\n+/// [`Hash`]: hash::Hash\n+///\n+/// The following traits are implemented for tuples of any length. These traits have\n+/// implementations that are automatically generated by the compiler, so are not limited by\n+/// missing language features.\n+///\n+/// * [`Clone`]\n+/// * [`Copy`]\n+/// * [`Send`]\n+/// * [`Sync`]\n+/// * [`Unpin`]\n+/// * [`UnwindSafe`]\n+/// * [`RefUnwindSafe`]\n+///\n+/// [`Unpin`]: marker::Unpin\n+/// [`UnwindSafe`]: panic::UnwindSafe\n+/// [`RefUnwindSafe`]: panic::RefUnwindSafe\n ///\n /// # Examples\n ///"}, {"sha": "be3953692fa315e7e8d48bb192783136febc6fe6", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 34, "deletions": 5, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/3fd16648fe7c7373965d9a14bc8c832589518361/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd16648fe7c7373965d9a14bc8c832589518361/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=3fd16648fe7c7373965d9a14bc8c832589518361", "patch": "@@ -916,11 +916,40 @@ mod prim_str {}\n ///\n /// # Trait implementations\n ///\n-/// In this documentation the shorthand `(T, ...)` is used to represent all\n-/// tuples up to length twelve. When that is used, any trait bounds expressed\n-/// on `T` applies to each field of the tuple independently. Note that this is\n-/// a convenience notation to avoid repetitive documentation, not valid\n-/// Rust syntax.\n+/// In this documentation the shorthand `(T, ...)` is used to represent tuples of varying length.\n+/// When that is used, any trait bounds expressed on `T` applies to each field of the tuple\n+/// independently. Note that this is a convenience notation to avoid repetitive documentation,\n+/// not valid Rust syntax.\n+///\n+/// Due to a temporary restriction in Rust\u2019s type system, the following traits are only\n+/// implemented on tuples of arity 12 or less. In the future, this may change:\n+///\n+/// * [`PartialEq`]\n+/// * [`Eq`]\n+/// * [`PartialOrd`]\n+/// * [`Ord`]\n+/// * [`Debug`]\n+/// * [`Default`]\n+/// * [`Hash`]\n+///\n+/// [`Debug`]: fmt::Debug\n+/// [`Hash`]: hash::Hash\n+///\n+/// The following traits are implemented for tuples of any length. These traits have\n+/// implementations that are automatically generated by the compiler, so are not limited by\n+/// missing language features.\n+///\n+/// * [`Clone`]\n+/// * [`Copy`]\n+/// * [`Send`]\n+/// * [`Sync`]\n+/// * [`Unpin`]\n+/// * [`UnwindSafe`]\n+/// * [`RefUnwindSafe`]\n+///\n+/// [`Unpin`]: marker::Unpin\n+/// [`UnwindSafe`]: panic::UnwindSafe\n+/// [`RefUnwindSafe`]: panic::RefUnwindSafe\n ///\n /// # Examples\n ///"}]}