{"sha": "ff9502917125f3bfb8ebad252a1c8d3a4f6e0320", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmOTUwMjkxNzEyNWYzYmZiOGViYWQyNTJhMWM4ZDNhNGY2ZTAzMjA=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-23T11:02:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-24T06:28:25Z"}, "message": "Added str::words_iter", "tree": {"sha": "22a17b75325639d51c176ce36f4f29def6917905", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22a17b75325639d51c176ce36f4f29def6917905"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff9502917125f3bfb8ebad252a1c8d3a4f6e0320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff9502917125f3bfb8ebad252a1c8d3a4f6e0320", "html_url": "https://github.com/rust-lang/rust/commit/ff9502917125f3bfb8ebad252a1c8d3a4f6e0320", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff9502917125f3bfb8ebad252a1c8d3a4f6e0320/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4b287e8525758896e78b39eca6f6e1c0f32cd98", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4b287e8525758896e78b39eca6f6e1c0f32cd98", "html_url": "https://github.com/rust-lang/rust/commit/d4b287e8525758896e78b39eca6f6e1c0f32cd98"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "6dda818624cbe417a027fcefb6f8a20d66d8e01b", "filename": "src/libcore/str.rs", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ff9502917125f3bfb8ebad252a1c8d3a4f6e0320/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff9502917125f3bfb8ebad252a1c8d3a4f6e0320/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=ff9502917125f3bfb8ebad252a1c8d3a4f6e0320", "patch": "@@ -14,7 +14,7 @@ export eq, lteq, hash, is_empty, is_not_empty, is_whitespace, byte_len,\n        char_at, bytes, is_ascii, shift_byte, pop_byte,\n        unsafe_from_byte, unsafe_from_bytes, from_char, char_range_at,\n        from_cstr, sbuf, as_buf, push_byte, utf8_char_width, safe_slice,\n-       contains, iter_chars, chars_iter, bytes_iter,\n+       contains, iter_chars, chars_iter, bytes_iter, words_iter,\n        loop_chars, loop_chars_sub, escape, any, all, map, windowed;\n \n #[abi = \"cdecl\"]\n@@ -914,6 +914,15 @@ fn words(ss: str) -> [str] {\n                      {|w| 0u < str::char_len(w)});\n }\n \n+/*\n+Function: words_iter\n+\n+Apply a function to each word\n+*/\n+fn words_iter(ss: str, ff: fn&(&&str)) {\n+   vec::iter(words(ss), ff)\n+}\n+\n /*\n Function: concat\n \n@@ -1649,7 +1658,7 @@ mod tests {\n             i += 1;\n         }\n \n-        iter_chars(\"\") {|ch| fail; } // should not fail\n+        iter_chars(\"\") {|_ch| fail; } // should not fail\n     }\n \n     #[test]\n@@ -1683,6 +1692,29 @@ mod tests {\n         bytes_iter(\"\") {|bb| assert bb == 0u8; }\n     }\n \n+    #[test]\n+    fn test_words_iter() {\n+        let data = \"\\nMary had a little lamb\\nLittle lamb\\n\";\n+\n+        let ii = 0;\n+\n+        words_iter(data) {|ww|\n+            alt ii {\n+              0 { assert \"Mary\"   == ww; }\n+              1 { assert \"had\"    == ww; }\n+              2 { assert \"a\"      == ww; }\n+              3 { assert \"little\" == ww; }\n+              _ { () }\n+            }\n+            ii += 1;\n+        }\n+    }\n+\n+    #[test]\n+    fn test_words_iter_() {\n+        words_iter(\"\") {|_ww| fail; } // should not fail\n+    }\n+\n     #[test]\n     fn test_escape() {\n         assert(escape(\"abcdef\") == \"abcdef\");"}]}