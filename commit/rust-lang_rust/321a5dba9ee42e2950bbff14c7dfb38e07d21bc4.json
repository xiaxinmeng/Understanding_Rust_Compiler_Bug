{"sha": "321a5dba9ee42e2950bbff14c7dfb38e07d21bc4", "node_id": "C_kwDOAAsO6NoAKDMyMWE1ZGJhOWVlNDJlMjk1MGJiZmYxNGM3ZGZiMzhlMDdkMjFiYzQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-30T00:52:58Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-30T00:53:17Z"}, "message": "Check pointee metadata correctly in ui test", "tree": {"sha": "53ad5482dc16a0b568636d31f12942824ba1ed19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53ad5482dc16a0b568636d31f12942824ba1ed19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/321a5dba9ee42e2950bbff14c7dfb38e07d21bc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/321a5dba9ee42e2950bbff14c7dfb38e07d21bc4", "html_url": "https://github.com/rust-lang/rust/commit/321a5dba9ee42e2950bbff14c7dfb38e07d21bc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/321a5dba9ee42e2950bbff14c7dfb38e07d21bc4/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5c78c4d3a9ab8d7b8726540715cc2abfbea0eba", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5c78c4d3a9ab8d7b8726540715cc2abfbea0eba", "html_url": "https://github.com/rust-lang/rust/commit/f5c78c4d3a9ab8d7b8726540715cc2abfbea0eba"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "ca9f6055ee04a61372dc00eddc4305439db25260", "filename": "compiler/rustc_trait_selection/src/solve/project_goals.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/321a5dba9ee42e2950bbff14c7dfb38e07d21bc4/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/321a5dba9ee42e2950bbff14c7dfb38e07d21bc4/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs?ref=321a5dba9ee42e2950bbff14c7dfb38e07d21bc4", "patch": "@@ -346,10 +346,8 @@ impl<'tcx> assembly::GoalKind<'tcx> for ProjectionPredicate<'tcx> {\n                         LangItem::Sized,\n                         [ty::GenericArg::from(goal.predicate.self_ty())],\n                     ));\n-\n                     ecx.add_goal(goal.with(tcx, sized_predicate));\n-                    ecx.eq(goal.param_env, goal.predicate.term, tcx.types.unit.into())?;\n-                    return ecx.evaluate_added_goals_and_make_canonical_response(Certainty::Yes);\n+                    tcx.types.unit\n                 }\n \n                 ty::Adt(def, substs) if def.is_struct() => {"}, {"sha": "93c0542ace4bff372fd47f37bbe57b2e9ef1207e", "filename": "tests/ui/traits/new-solver/pointee.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/321a5dba9ee42e2950bbff14c7dfb38e07d21bc4/tests%2Fui%2Ftraits%2Fnew-solver%2Fpointee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/321a5dba9ee42e2950bbff14c7dfb38e07d21bc4/tests%2Fui%2Ftraits%2Fnew-solver%2Fpointee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fpointee.rs?ref=321a5dba9ee42e2950bbff14c7dfb38e07d21bc4", "patch": "@@ -7,17 +7,15 @@ use std::ptr::{DynMetadata, Pointee};\n trait Trait<U> {}\n struct MyDst<T: ?Sized>(T);\n \n-fn works<T>() {\n-    let _: <T as Pointee>::Metadata = ();\n-    let _: <[T] as Pointee>::Metadata = 1_usize;\n-    let _: <str as Pointee>::Metadata = 1_usize;\n-    let _: <dyn Trait<T> as Pointee>::Metadata = give::<DynMetadata<dyn Trait<T>>>();\n-    let _: <MyDst<T> as Pointee>::Metadata = ();\n-    let _: <((((([u8],),),),),) as Pointee>::Metadata = 1_usize;\n-}\n+fn meta_is<T: Pointee<Metadata = U> + ?Sized, U>() {}\n \n-fn give<U>() -> U {\n-    loop {}\n+fn works<T>() {\n+    meta_is::<T, ()>();\n+    meta_is::<[T], usize>();\n+    meta_is::<str, usize>();\n+    meta_is::<dyn Trait<T>, DynMetadata<dyn Trait<T>>>();\n+    meta_is::<MyDst<T>, ()>();\n+    meta_is::<((((([u8],),),),),), usize>();\n }\n \n fn main() {}"}]}