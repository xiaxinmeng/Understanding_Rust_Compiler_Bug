{"sha": "51f566062fefc2262dd3b56f7e385f1dd749bd8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZjU2NjA2MmZlZmMyMjYyZGQzYjU2ZjdlMzg1ZjFkZDc0OWJkOGI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-05-14T04:25:10Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-05-14T04:25:10Z"}, "message": "Update uses of `rustfmt_skip` to `rustfmt::skip`", "tree": {"sha": "88246c656f17d934cd50a9a5133b14817e3330a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88246c656f17d934cd50a9a5133b14817e3330a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51f566062fefc2262dd3b56f7e385f1dd749bd8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51f566062fefc2262dd3b56f7e385f1dd749bd8b", "html_url": "https://github.com/rust-lang/rust/commit/51f566062fefc2262dd3b56f7e385f1dd749bd8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51f566062fefc2262dd3b56f7e385f1dd749bd8b/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de950c2973e20be37159952ded06a8d8aeff261d", "url": "https://api.github.com/repos/rust-lang/rust/commits/de950c2973e20be37159952ded06a8d8aeff261d", "html_url": "https://github.com/rust-lang/rust/commit/de950c2973e20be37159952ded06a8d8aeff261d"}], "stats": {"total": 113, "additions": 55, "deletions": 58}, "files": [{"sha": "9c0d9481b507e1e779ba46e9caa9347c8ea99fe7", "filename": "Configurations.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -1951,7 +1951,7 @@ lines are found, they are trimmed down to match this integer.\n Original Code:\n \n ```rust\n-#![rustfmt_skip]\n+#![rustfmt::skip]\n \n fn foo() {\n     println!(\"a\");\n@@ -2010,7 +2010,7 @@ them, additional blank lines are inserted.\n Original Code (rustfmt will not change it with the default value of `0`):\n \n ```rust\n-#![rustfmt_skip]\n+#![rustfmt::skip]\n \n fn foo() {\n     println!(\"a\");"}, {"sha": "f850c0bba4413bd4501bffd7ded9bbebc3bb56ce", "filename": "src/comment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -1253,7 +1253,7 @@ mod test {\n     }\n \n     #[test]\n-    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    #[rustfmt::skip]\n     fn format_comments() {\n         let mut config: ::config::Config = Default::default();\n         config.set().wrap_comments(true);"}, {"sha": "1045841ad0d9003cf31e838556c5e2b1e402c15f", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -8,12 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(custom_attribute)]\n+#![feature(tool_attributes)]\n #![feature(decl_macro)]\n-// FIXME(cramertj) remove after match_default_bindings merges\n-#![allow(stable_features)]\n #![allow(unused_attributes)]\n-#![feature(match_default_bindings)]\n #![feature(type_ascription)]\n #![feature(unicode_internals)]\n \n@@ -396,7 +393,7 @@ where\n     Ok((result, has_diff))\n }\n \n-/// Returns true if the line with the given line number was skipped by `#[rustfmt_skip]`.\n+/// Returns true if the line with the given line number was skipped by `#[rustfmt::skip]`.\n fn is_skipped_line(line_number: usize, skipped_range: &[(usize, usize)]) -> bool {\n     skipped_range\n         .iter()\n@@ -975,7 +972,7 @@ mod unit_tests {\n \n     #[test]\n     fn test_format_code_block_fail() {\n-        #[rustfmt_skip]\n+        #[rustfmt::skip]\n         let code_block = \"this_line_is_100_characters_long_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(x, y, z);\";\n         assert!(format_code_block(code_block, &Config::default()).is_none());\n     }"}, {"sha": "b538519ec0b04fa30e2c10790d49c8bf4bc92b4b", "filename": "src/test/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -704,14 +704,14 @@ impl ConfigCodeBlock {\n         // We never expect to not have a code block.\n         assert!(self.code_block.is_some() && self.code_block_start.is_some());\n \n-        // See if code block begins with #![rustfmt_skip].\n+        // See if code block begins with #![rustfmt::skip].\n         let fmt_skip = self\n             .code_block\n             .as_ref()\n             .unwrap()\n             .split('\\n')\n             .nth(0)\n-            .unwrap_or(\"\") == \"#![rustfmt_skip]\";\n+            .unwrap_or(\"\") == \"#![rustfmt::skip]\";\n \n         if self.config_name.is_none() && !fmt_skip {\n             write_message(&format!(\n@@ -790,7 +790,7 @@ impl ConfigCodeBlock {\n     // - Rust code blocks are identifed by lines beginning with \"```rust\".\n     // - One explicit configuration setting is supported per code block.\n     // - Rust code blocks with no configuration setting are illegal and cause an\n-    //   assertion failure, unless the snippet begins with #![rustfmt_skip].\n+    //   assertion failure, unless the snippet begins with #![rustfmt::skip].\n     // - Configuration names in Configurations.md must be in the form of\n     //   \"## `NAME`\".\n     // - Configuration values in Configurations.md must be in the form of"}, {"sha": "f52930d50b61e2dcf59e298aebfe40eab76918fb", "filename": "tests/config/skip_children.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fconfig%2Fskip_children.toml", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fconfig%2Fskip_children.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fskip_children.toml?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -1 +1 @@\n-skip_children = true\n\\ No newline at end of file\n+skip_children = true"}, {"sha": "f53a8a4a1fe02eb6bef9c50021bd6ba2d6807f28", "filename": "tests/source/comment4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fcomment4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fcomment4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fcomment4.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -48,5 +48,5 @@ fn debug_function() {\n \n #[link_section=\".vectors\"]\n #[no_mangle] // Test this attribute is preserved.\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[cfg_attr(rustfmt, rustfmt::skip)]\n pub static ISSUE_1284: [i32; 16] = [];"}, {"sha": "229817e1405b4874c8bbe28bef4720875fd2d9b4", "filename": "tests/source/configs/struct_field_align_threshold/20.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fconfigs%2Fstruct_field_align_threshold%2F20.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fconfigs%2Fstruct_field_align_threshold%2F20.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fstruct_field_align_threshold%2F20.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -36,7 +36,7 @@ fn main() {\n                                                                        /// A Doc comment\n #[AnAttribute]\n pub struct Foo {\n-    #[rustfmt_skip]\n+    #[rustfmt::skip]\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n@@ -166,7 +166,7 @@ struct Palette { /// A map of indices in the palette to a count of pixels in app\n // when the field had attributes\n struct FieldsWithAttributes {\n     // Pre Comment\n-    #[rustfmt_skip] pub host:String, // Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB\n+    #[rustfmt::skip] pub host:String, // Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB\n     //Another pre comment\n     #[attr1]\n     #[attr2] pub id: usize // CCCCCCCCCCCCCCCCCCC CCCCCCCCCCCCCCCCCCC CCCCCCCCCCCCCCCC CCCCCCCCCCCCCCCCCC CCCCCCCCCCCCCC CCCCCCCCCCCC"}, {"sha": "4c2eb1de179c813f969e01bd2e1420dafd0b3cbf", "filename": "tests/source/configs/use_field_init_shorthand/false.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -13,7 +13,7 @@ fn main() {\n         y: y,\n         #[attr]\n         z: z,\n-        #[rustfmt_skip]\n+        #[rustfmt::skip]\n         skipped: skipped,\n     };\n }"}, {"sha": "dcde28d74e0f1d6186d6644ec022498b245dc682", "filename": "tests/source/configs/use_field_init_shorthand/true.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -13,7 +13,7 @@ fn main() {\n         y: y,\n         #[attr]\n         z: z,\n-        #[rustfmt_skip]\n+        #[rustfmt::skip]\n         skipped: skipped,\n     };\n }"}, {"sha": "654fc3a836d9832cf9831395d8c54215f2cebc2b", "filename": "tests/source/enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fenum.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -49,7 +49,7 @@ pub enum EnumWithAttributes {\n     //This is a pre comment AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n     TupleVar(usize, usize, usize), // AAAA AAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n     // Pre Comment\n-    #[rustfmt_skip]\n+    #[rustfmt::skip]\n     SkippedItem(String,String,), // Post-comment\n     #[another_attr]\n     #[attr2]"}, {"sha": "5c5eb3691614169664c0cd8cf9256b1f2bbdace2", "filename": "tests/source/issue-1124.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fissue-1124.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fissue-1124.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-1124.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -13,4 +13,4 @@ use y;\n \n \n use x;\n-use a;\n\\ No newline at end of file\n+use a;"}, {"sha": "d1664ca9f377fb25764f85bdd0e13b66dc744d4d", "filename": "tests/source/match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmatch.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -48,7 +48,7 @@ fn foo() {\n         #[an_attribute]\n         // Comment after an attribute.\n         None => 0,\n-        #[rustfmt_skip]\n+        #[rustfmt::skip]\n         Blurb     =>     {                  }\n     };\n }\n@@ -103,7 +103,7 @@ fn matches() {\n \n fn match_skip() {\n     let _ = match Some(1) {\n-        #[rustfmt_skip]\n+        #[rustfmt::skip]\n         Some( n ) => n,\n         None      => 1,\n     };"}, {"sha": "c26df03edda3d7f1fe20eb9afe8baa759a88d5a1", "filename": "tests/source/multiple.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fmultiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fmultiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmultiple.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -36,7 +36,7 @@ fn baz<'a: 'b /* comment on 'a */, T: Somsssssssssssssssssssssssssssssssssssssss\n     #[attr2]#[attr3]extern crate foo;\n }\n \n-#[rustfmt_skip]\n+#[rustfmt::skip]\n fn qux(a: dadsfa,   // Comment 1\n        b: sdfasdfa, // Comment 2\n        c: dsfdsafa) // Comment 3\n@@ -78,7 +78,7 @@ pub trait GraphWalk<'a, N, E> {\n /// A Doc comment\n #[AnAttribute]\n pub struct Foo {\n-    #[rustfmt_skip]\n+    #[rustfmt::skip]\n     f :   SomeType, // Comment beside a field\n     f :   SomeType, // Comment beside a field\n     // Comment on a field\n@@ -126,7 +126,7 @@ fn deconstruct(foo: Bar) -> (SocketAddr, Method, Headers,\n                      AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA) {\n }\n \n-#[rustfmt_skip]\n+#[rustfmt::skip]\n mod a{\n fn foo(x:    T) {\n     let x:    T = dfasdf;"}, {"sha": "56471f1d7e42f39d78b4f09aafc514d074c69201", "filename": "tests/source/structs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fstructs.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -4,7 +4,7 @@\n                                                                        /// A Doc comment\n #[AnAttribute]\n pub struct Foo {\n-    #[rustfmt_skip]\n+    #[rustfmt::skip]\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n@@ -139,7 +139,7 @@ struct Palette { /// A map of indices in the palette to a count of pixels in app\n // when the field had attributes\n struct FieldsWithAttributes {\n     // Pre Comment\n-    #[rustfmt_skip] pub host:String, // Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB\n+    #[rustfmt::skip] pub host:String, // Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB\n     //Another pre comment\n     #[attr1]\n     #[attr2] pub id: usize // CCCCCCCCCCCCCCCCCCC CCCCCCCCCCCCCCCCCCC CCCCCCCCCCCCCCCC CCCCCCCCCCCCCCCCCC CCCCCCCCCCCCCC CCCCCCCCCCCC"}, {"sha": "9f0c73694bfeb2d07fae07337c5cdf364209f19a", "filename": "tests/source/trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ftrait.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -89,7 +89,7 @@ trait AAAAAAAAAAAAAAAAAAA = BBBBBBBBBBBBBBBBBBB + CCCCCCCCCCCCCCCCCCCCCCCCCCCCC\n trait AAAAAAAAAAAAAAAAAA = BBBBBBBBBBBBBBBBBBB + CCCCCCCCCCCCCCCCCCCCCCCCCCCCC + DDDDDDDDDDDDDDDDDDD;\n trait AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<A, B, C, D, E> = FooBar;\n trait AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<A, B, C, D, E> = FooBar;\n-#[rustfmt_skip]\n+#[rustfmt::skip]\n trait FooBar = Foo\n     + Bar;\n "}, {"sha": "730ba980abb8f2aba24aad9dfc1083a5195d11bf", "filename": "tests/source/unions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Funions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Fsource%2Funions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Funions.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -4,7 +4,7 @@\n                                                                        /// A Doc comment\n #[AnAttribute]\n pub union Foo {\n-    #[rustfmt_skip]\n+    #[rustfmt::skip]\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n@@ -100,7 +100,7 @@ union Palette { /// A map of indices in the palette to a count of pixels in appr\n // when the field had attributes\n union FieldsWithAttributes {\n     // Pre Comment\n-    #[rustfmt_skip] pub host:String, // Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB\n+    #[rustfmt::skip] pub host:String, // Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB\n     //Another pre comment\n     #[attr1]\n     #[attr2] pub id: usize // CCCCCCCCCCCCCCCCCCC CCCCCCCCCCCCCCCCCCC CCCCCCCCCCCCCCCC CCCCCCCCCCCCCCCCCC CCCCCCCCCCCCCC CCCCCCCCCCCC"}, {"sha": "e2ef7de978f93d6bea0624450be23caffdd4acc5", "filename": "tests/target/comment4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fcomment4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fcomment4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomment4.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -47,5 +47,5 @@ fn debug_function() {\n \n #[link_section=\".vectors\"]\n #[no_mangle] // Test this attribute is preserved.\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[cfg_attr(rustfmt, rustfmt::skip)]\n pub static ISSUE_1284: [i32; 16] = [];"}, {"sha": "f952775f5f2d32549f6407ddf1bd659deaecbb33", "filename": "tests/target/configs/struct_field_align_threshold/20.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fconfigs%2Fstruct_field_align_threshold%2F20.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fconfigs%2Fstruct_field_align_threshold%2F20.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fstruct_field_align_threshold%2F20.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -36,7 +36,7 @@ fn main() {\n /// A Doc comment\n #[AnAttribute]\n pub struct Foo {\n-    #[rustfmt_skip]\n+    #[rustfmt::skip]\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n@@ -171,8 +171,8 @@ struct Palette {\n // when the field had attributes\n struct FieldsWithAttributes {\n     // Pre Comment\n-    #[rustfmt_skip] pub host:String, /* Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB\n-                                      * BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB */\n+    #[rustfmt::skip] pub host:String, /* Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB\n+                                       * BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB */\n     // Another pre comment\n     #[attr1]\n     #[attr2]"}, {"sha": "7433044688670d452a2a330adbf0073815e6b88b", "filename": "tests/target/configs/use_field_init_shorthand/false.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ffalse.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -9,7 +9,7 @@ fn main() {\n         y: y,\n         #[attr]\n         z: z,\n-        #[rustfmt_skip]\n+        #[rustfmt::skip]\n         skipped: skipped,\n     };\n }"}, {"sha": "8b80e81534b7492b51d9f0d2624a59bac7e16664", "filename": "tests/target/configs/use_field_init_shorthand/true.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fuse_field_init_shorthand%2Ftrue.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -9,7 +9,7 @@ fn main() {\n         y,\n         #[attr]\n         z,\n-        #[rustfmt_skip]\n+        #[rustfmt::skip]\n         skipped: skipped,\n     };\n }"}, {"sha": "b19b6997826669d060d0abc8c624915d02b6e492", "filename": "tests/target/enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fenum.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -65,7 +65,7 @@ pub enum EnumWithAttributes {\n     TupleVar(usize, usize, usize), /* AAAA AAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAA\n                                     * AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA */\n     // Pre Comment\n-    #[rustfmt_skip]\n+    #[rustfmt::skip]\n     SkippedItem(String,String,), // Post-comment\n     #[another_attr]\n     #[attr2]"}, {"sha": "66a6e9082de2ffea1ea3f41775792cc40afe60ca", "filename": "tests/target/fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Ffn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Ffn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -92,7 +92,7 @@ fn inner() {\n     x\n }\n \n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[cfg_attr(rustfmt, rustfmt::skip)]\n fn foo(a: i32) -> i32 {\n     // comment\n     if a > 0 { 1 } else { 2 }"}, {"sha": "7ed49c61f1def84cf4a2e63f5bdca7851e5b1428", "filename": "tests/target/match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -51,7 +51,7 @@ fn foo() {\n         #[an_attribute]\n         // Comment after an attribute.\n         None => 0,\n-        #[rustfmt_skip]\n+        #[rustfmt::skip]\n         Blurb     =>     {                  }\n     };\n }\n@@ -109,7 +109,7 @@ fn matches() {\n \n fn match_skip() {\n     let _ = match Some(1) {\n-        #[rustfmt_skip]\n+        #[rustfmt::skip]\n         Some( n ) => n,\n         None => 1,\n     };"}, {"sha": "832567fdf7e08eafe691e3a32282e8700326207d", "filename": "tests/target/multiple.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fmultiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fmultiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmultiple.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -58,7 +58,7 @@ fn baz<\n     extern crate foo;\n }\n \n-#[rustfmt_skip]\n+#[rustfmt::skip]\n fn qux(a: dadsfa,   // Comment 1\n        b: sdfasdfa, // Comment 2\n        c: dsfdsafa) // Comment 3\n@@ -103,7 +103,7 @@ pub trait GraphWalk<'a, N, E> {\n /// A Doc comment\n #[AnAttribute]\n pub struct Foo {\n-    #[rustfmt_skip]\n+    #[rustfmt::skip]\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n@@ -172,7 +172,7 @@ fn deconstruct(\n ) {\n }\n \n-#[rustfmt_skip]\n+#[rustfmt::skip]\n mod a{\n fn foo(x:    T) {\n     let x:    T = dfasdf;"}, {"sha": "6c9737a3377e9026a213052f27f824c7891b81de", "filename": "tests/target/skip.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fskip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fskip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fskip.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -12,13 +12,13 @@ fn foo(\n }\n \n impl LateLintPass for UsedUnderscoreBinding {\n-    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    #[cfg_attr(rustfmt, rustfmt::skip)]\n     fn check_expr() { // comment\n     }\n }\n \n fn issue1346() {\n-    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    #[cfg_attr(rustfmt, rustfmt::skip)]\n     Box::new(self.inner.call(req).then(move |result| {\n         match result {\n             Ok(resp) => Box::new(future::done(Ok(resp))),\n@@ -46,23 +46,23 @@ fn skip_on_statements() {\n     }\n \n     // Semi\n-    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    #[cfg_attr(rustfmt, rustfmt::skip)]\n     foo(\n         1, 2, 3, 4,\n         1, 2,\n         1, 2, 3,\n     );\n \n     // Local\n-    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    #[cfg_attr(rustfmt, rustfmt::skip)]\n     let x = foo(  a,   b  ,  c);\n \n     // Item\n-    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    #[cfg_attr(rustfmt, rustfmt::skip)]\n     use foobar;\n \n     // Mac\n-    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    #[cfg_attr(rustfmt, rustfmt::skip)]\n     vec![\n         1, 2, 3, 4,\n         1, 2, 3, 4,\n@@ -74,7 +74,7 @@ fn skip_on_statements() {\n     ];\n \n     // Expr\n-    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    #[cfg_attr(rustfmt, rustfmt::skip)]\n     foo(  a,   b  ,  c)\n }\n "}, {"sha": "d770ab349f4efdf50b24f36aa83453a159dfbf03", "filename": "tests/target/skip_mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fskip_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fskip_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fskip_mod.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -1,3 +1,3 @@\n-#![rustfmt_skip]\n+#![rustfmt::skip]\n use a ::  b\n ;"}, {"sha": "368650bb6a883e82b3b1ec7a0674d5af166c7405", "filename": "tests/target/structs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstructs.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -4,7 +4,7 @@\n /// A Doc comment\n #[AnAttribute]\n pub struct Foo {\n-    #[rustfmt_skip]\n+    #[rustfmt::skip]\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n@@ -144,8 +144,8 @@ struct Palette {\n // when the field had attributes\n struct FieldsWithAttributes {\n     // Pre Comment\n-    #[rustfmt_skip] pub host:String, /* Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB\n-                                      * BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB */\n+    #[rustfmt::skip] pub host:String, /* Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB\n+                                       * BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB */\n     // Another pre comment\n     #[attr1]\n     #[attr2]"}, {"sha": "a6bc2d8968916cb28e92f4dcf5c48476a2f11be8", "filename": "tests/target/trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrait.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -127,7 +127,7 @@ trait AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n     D,\n     E,\n > = FooBar;\n-#[rustfmt_skip]\n+#[rustfmt::skip]\n trait FooBar = Foo\n     + Bar;\n "}, {"sha": "386ceb3836cad8e0881a0342ea525510c8d00be0", "filename": "tests/target/unions.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Funions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f566062fefc2262dd3b56f7e385f1dd749bd8b/tests%2Ftarget%2Funions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Funions.rs?ref=51f566062fefc2262dd3b56f7e385f1dd749bd8b", "patch": "@@ -4,7 +4,7 @@\n /// A Doc comment\n #[AnAttribute]\n pub union Foo {\n-    #[rustfmt_skip]\n+    #[rustfmt::skip]\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n@@ -100,8 +100,8 @@ union Palette {\n // when the field had attributes\n union FieldsWithAttributes {\n     // Pre Comment\n-    #[rustfmt_skip] pub host:String, /* Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB\n-                                      * BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB */\n+    #[rustfmt::skip] pub host:String, /* Post comment BBBBBBBBBBBBBB BBBBBBBBBBBBBBBB\n+                                       * BBBBBBBBBBBBBBBB BBBBBBBBBBBBBBBBB BBBBBBBBBBB */\n     // Another pre comment\n     #[attr1]\n     #[attr2]"}]}