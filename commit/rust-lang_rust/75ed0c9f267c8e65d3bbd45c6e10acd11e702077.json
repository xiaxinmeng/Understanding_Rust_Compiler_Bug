{"sha": "75ed0c9f267c8e65d3bbd45c6e10acd11e702077", "node_id": "C_kwDOAAsO6NoAKDc1ZWQwYzlmMjY3YzhlNjVkM2JiZDQ1YzZlMTBhY2QxMWU3MDIwNzc", "commit": {"author": {"name": "Evan Typanski", "email": "evan.typanski@microfocus.com", "date": "2022-06-22T17:15:35Z"}, "committer": {"name": "Evan Typanski", "email": "evan.typanski@microfocus.com", "date": "2022-06-22T17:15:35Z"}, "message": "Prefer `.ok()?` over `.unwrap()`", "tree": {"sha": "674f9d08a37da108eca475d887b994e0d374bf1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/674f9d08a37da108eca475d887b994e0d374bf1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75ed0c9f267c8e65d3bbd45c6e10acd11e702077", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75ed0c9f267c8e65d3bbd45c6e10acd11e702077", "html_url": "https://github.com/rust-lang/rust/commit/75ed0c9f267c8e65d3bbd45c6e10acd11e702077", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75ed0c9f267c8e65d3bbd45c6e10acd11e702077/comments", "author": null, "committer": null, "parents": [{"sha": "6e1df4732b6fb877361b0dd3b209f194481bbe7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e1df4732b6fb877361b0dd3b209f194481bbe7b", "html_url": "https://github.com/rust-lang/rust/commit/6e1df4732b6fb877361b0dd3b209f194481bbe7b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d6b74b3e1ca5ef95afa3e564976cdba885a83232", "filename": "clippy_lints/src/manual_rem_euclid.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75ed0c9f267c8e65d3bbd45c6e10acd11e702077/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75ed0c9f267c8e65d3bbd45c6e10acd11e702077/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs?ref=75ed0c9f267c8e65d3bbd45c6e10acd11e702077", "patch": "@@ -107,7 +107,7 @@ fn check_for_positive_int_constant<'a>(cx: &'a LateContext<'_>, expr: &'a Expr<'\n \n     if int_const > FullInt::S(0) {\n         let val = match int_const {\n-            FullInt::S(s) => s.try_into().unwrap(),\n+            FullInt::S(s) => s.try_into().ok()?,\n             FullInt::U(u) => u,\n         };\n         Some((val, other_op))"}]}