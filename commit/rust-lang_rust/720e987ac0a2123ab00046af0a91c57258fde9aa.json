{"sha": "720e987ac0a2123ab00046af0a91c57258fde9aa", "node_id": "C_kwDOAAsO6NoAKDcyMGU5ODdhYzBhMjEyM2FiMDAwNDZhZjBhOTFjNTcyNThmZGU5YWE", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-05-25T18:37:39Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-05-25T18:37:39Z"}, "message": "update option and result references to expect message docs", "tree": {"sha": "ba6312a70c91e35f097b78102f41054498971807", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba6312a70c91e35f097b78102f41054498971807"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/720e987ac0a2123ab00046af0a91c57258fde9aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/720e987ac0a2123ab00046af0a91c57258fde9aa", "html_url": "https://github.com/rust-lang/rust/commit/720e987ac0a2123ab00046af0a91c57258fde9aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/720e987ac0a2123ab00046af0a91c57258fde9aa/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6b621ec8541133f3b18669c72e00a6f7b991069", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6b621ec8541133f3b18669c72e00a6f7b991069", "html_url": "https://github.com/rust-lang/rust/commit/b6b621ec8541133f3b18669c72e00a6f7b991069"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "77619d61d9f88ab13926a0bce8fe6e760de4be18", "filename": "library/core/src/option.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/720e987ac0a2123ab00046af0a91c57258fde9aa/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/720e987ac0a2123ab00046af0a91c57258fde9aa/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=720e987ac0a2123ab00046af0a91c57258fde9aa", "patch": "@@ -709,8 +709,24 @@ impl<T> Option<T> {\n     /// x.expect(\"fruits are healthy\"); // panics with `fruits are healthy`\n     /// ```\n     ///\n-    /// **Note**: Please refer to the documentation on [`Result::expect`] for further information\n-    /// on common message styles.\n+    /// # Recommended Message Style\n+    ///\n+    /// We recommend that `expect` messages are used to describe the reason you\n+    /// _expect_ the `Option` should be `Some`.\n+    ///\n+    /// ```should_panic\n+    /// let item = slice.get(0)\n+    ///     .expect(\"slice should not be empty\");\n+    /// ```\n+    ///\n+    /// **Hint**: If you're having trouble remembering how to phrase expect\n+    /// error messages remember to focus on the word \"should\" as in \"env\n+    /// variable should be set by blah\" or \"the given binary should be available\n+    /// and executable by the current user\".\n+    ///\n+    /// For more detail on expect message styles and the reasoning behind our\n+    /// recommendation please refer to the section on [\"Common Message\n+    /// Styles\"](../../std/error/index.html#common-message-styles) in the [`std::error`](../../std/error/index.html) module docs.\n     #[inline]\n     #[track_caller]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "6f204df99981b82a7a15ca85a40548fc56828d3d", "filename": "library/core/src/result.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/720e987ac0a2123ab00046af0a91c57258fde9aa/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/720e987ac0a2123ab00046af0a91c57258fde9aa/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=720e987ac0a2123ab00046af0a91c57258fde9aa", "patch": "@@ -1034,9 +1034,15 @@ impl<T, E> Result<T, E> {\n     ///     .expect(\"env variable `IMPORTANT_PATH` should be set by `wrapper_script.sh`\");\n     /// ```\n     ///\n-    /// For more detail on expect message styles and the reasoning behind our\n-    /// recommendation please refer to the section on [\"Common Message\n-    /// Styles\"]() in the [`std::error`]() module docs.\n+    /// **Hint**: If you're having trouble remembering how to phrase expect\n+    /// error messages remember to focus on the word \"should\" as in \"env\n+    /// variable should be set by blah\" or \"the given binary should be available\n+    /// and executable by the current user\".\n+    ///\n+    /// For more detail on expect message styles and the reasoning behind our recommendation please\n+    /// refer to the section on [\"Common Message\n+    /// Styles\"](../../std/error/index.html#common-message-styles) in the\n+    /// [`std::error`](../../std/error/index.html) module docs.\n     #[inline]\n     #[track_caller]\n     #[stable(feature = \"result_expect\", since = \"1.4.0\")]"}]}