{"sha": "a4f6d3e5c27e09f9fab591c19391b53a4175b666", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ZjZkM2U1YzI3ZTA5ZjlmYWI1OTFjMTkzOTFiNTNhNDE3NWI2NjY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T17:01:34Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T17:01:34Z"}, "message": "Fix lifetime generics in <T as Trait<..>>::try_from suggestion.", "tree": {"sha": "a698bad7cb61f42934f6c214992f5bd151157059", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a698bad7cb61f42934f6c214992f5bd151157059"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4f6d3e5c27e09f9fab591c19391b53a4175b666", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4f6d3e5c27e09f9fab591c19391b53a4175b666", "html_url": "https://github.com/rust-lang/rust/commit/a4f6d3e5c27e09f9fab591c19391b53a4175b666", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4f6d3e5c27e09f9fab591c19391b53a4175b666/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13edc17f65bcad7fe9046720a16fc192e810970e", "url": "https://api.github.com/repos/rust-lang/rust/commits/13edc17f65bcad7fe9046720a16fc192e810970e", "html_url": "https://github.com/rust-lang/rust/commit/13edc17f65bcad7fe9046720a16fc192e810970e"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "0ab64170e4c2086f31ce44657e59a9946da9e45e", "filename": "compiler/rustc_typeck/src/check/method/prelude2021.rs", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a4f6d3e5c27e09f9fab591c19391b53a4175b666/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4f6d3e5c27e09f9fab591c19391b53a4175b666/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs?ref=a4f6d3e5c27e09f9fab591c19391b53a4175b666", "patch": "@@ -239,16 +239,23 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             let trait_path = self.trait_path_or_bare_name(span, expr_id, pick.item.container.id());\n             let trait_generics = self.tcx.generics_of(pick.item.container.id());\n \n-            let parameter_count = trait_generics.count() - (trait_generics.has_self as usize);\n-            let trait_name = if parameter_count == 0 {\n-                trait_path\n-            } else {\n-                format!(\n-                    \"{}<{}>\",\n-                    trait_path,\n-                    std::iter::repeat(\"_\").take(parameter_count).collect::<Vec<_>>().join(\", \")\n-                )\n-            };\n+            let trait_name =\n+                if trait_generics.params.len() <= trait_generics.has_self as usize {\n+                    trait_path\n+                } else {\n+                    let counts = trait_generics.own_counts();\n+                    format!(\n+                        \"{}<{}>\",\n+                        trait_path,\n+                        std::iter::repeat(\"'_\")\n+                            .take(counts.lifetimes)\n+                            .chain(std::iter::repeat(\"_\").take(\n+                                counts.types + counts.consts - trait_generics.has_self as usize\n+                            ))\n+                            .collect::<Vec<_>>()\n+                            .join(\", \")\n+                    )\n+                };\n \n             let mut lint = lint.build(&format!(\n                 \"trait-associated function `{}` will become ambiguous in Rust 2021\","}]}