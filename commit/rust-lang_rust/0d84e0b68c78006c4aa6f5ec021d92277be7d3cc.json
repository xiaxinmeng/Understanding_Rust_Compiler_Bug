{"sha": "0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkODRlMGI2OGM3ODAwNmM0YWE2ZjVlYzAyMWQ5MjI3N2JlN2QzY2M=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-03-16T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-03-16T00:00:00Z"}, "message": "Add test case for -Zinline-mir & -Zinstrument-coverage", "tree": {"sha": "985a4d40081613c2fb09d9b6ebfbb0ef3244c562", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/985a4d40081613c2fb09d9b6ebfbb0ef3244c562"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "html_url": "https://github.com/rust-lang/rust/commit/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b6cc0c20488a598b97f887cbc747aee61bee7df", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b6cc0c20488a598b97f887cbc747aee61bee7df", "html_url": "https://github.com/rust-lang/rust/commit/4b6cc0c20488a598b97f887cbc747aee61bee7df"}], "stats": {"total": 995, "additions": 992, "deletions": 3}, "files": [{"sha": "3f9403e6f70b8166709ab3361669ebda2206316f", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.async.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.async.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.async.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.async.txt?ref=0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "patch": "@@ -1,6 +1,6 @@\n     1|       |#![allow(unused_assignments, dead_code)]\n     2|       |\n-    3|       |// require-rust-edition-2018\n+    3|       |// compile-flags: --edition=2018\n     4|       |\n     5|      1|async fn c(x: u8) -> u8 {\n     6|      1|    if x == 8 {"}, {"sha": "6148d89ed75e1d119a783b275decc47806ed1f75", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.inline.txt", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.inline.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.inline.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.inline.txt?ref=0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "patch": "@@ -0,0 +1,53 @@\n+    1|       |// compile-flags: -Zinline-mir\n+    2|       |\n+    3|       |use std::fmt::Display;\n+    4|       |\n+    5|      1|fn main() {\n+    6|      1|    permutations(&['a', 'b', 'c']);\n+    7|      1|}\n+    8|       |\n+    9|       |#[inline(always)]\n+   10|      1|fn permutations<T: Copy + Display>(xs: &[T]) {\n+   11|      1|    let mut ys = xs.to_owned();\n+   12|      1|    permutate(&mut ys, 0);\n+   13|      1|}\n+   14|       |\n+   15|     16|fn permutate<T: Copy + Display>(xs: &mut [T], k: usize) {\n+   16|     16|    let n = length(xs);\n+   17|     16|    if k == n {\n+   18|      6|        display(xs);\n+   19|     10|    } else if k < n {\n+   20|     15|        for i in k..n {\n+                               ^10\n+   21|     15|            swap(xs, i, k);\n+   22|     15|            permutate(xs, k + 1);\n+   23|     15|            swap(xs, i, k);\n+   24|     15|        }\n+   25|      0|    } else {\n+   26|      0|        error();\n+   27|      0|    }\n+   28|     16|}\n+   29|       |\n+   30|     16|fn length<T>(xs: &[T]) -> usize {\n+   31|     16|    xs.len()\n+   32|     16|}\n+   33|       |\n+   34|       |#[inline]\n+   35|     30|fn swap<T: Copy>(xs: &mut [T], i: usize, j: usize) {\n+   36|     30|    let t = xs[i];\n+   37|     30|    xs[i] = xs[j];\n+   38|     30|    xs[j] = t;\n+   39|     30|}\n+   40|       |\n+   41|      6|fn display<T: Display>(xs: &[T]) {\n+   42|     18|    for x in xs {\n+   43|     18|        print!(\"{}\", x);\n+   44|     18|    }\n+   45|      6|    println!();\n+   46|      6|}\n+   47|       |\n+   48|       |#[inline(always)]\n+   49|       |fn error() {\n+   50|       |    panic!(\"error\");\n+   51|       |}\n+"}, {"sha": "bc2f673349a678569ca0d7cea802c13edbfa2550", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.uses_crate.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.uses_crate.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.uses_crate.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.uses_crate.txt?ref=0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "patch": "@@ -19,12 +19,12 @@\n    18|      2|    println!(\"used_only_from_bin_crate_generic_function with {:?}\", arg);\n    19|      2|}\n   ------------------\n-  | used_crate::used_only_from_bin_crate_generic_function::<&str>:\n+  | used_crate::used_only_from_bin_crate_generic_function::<&alloc::vec::Vec<i32>>:\n   |   17|      1|pub fn used_only_from_bin_crate_generic_function<T: Debug>(arg: T) {\n   |   18|      1|    println!(\"used_only_from_bin_crate_generic_function with {:?}\", arg);\n   |   19|      1|}\n   ------------------\n-  | used_crate::used_only_from_bin_crate_generic_function::<&alloc::vec::Vec<i32>>:\n+  | used_crate::used_only_from_bin_crate_generic_function::<&str>:\n   |   17|      1|pub fn used_only_from_bin_crate_generic_function<T: Debug>(arg: T) {\n   |   18|      1|    println!(\"used_only_from_bin_crate_generic_function with {:?}\", arg);\n   |   19|      1|}"}, {"sha": "6287516636ea92c35ead06b96f74e68316195e3a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.display.-------.InstrumentCoverage.0.html", "status": "added", "additions": 161, "deletions": 0, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.display.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.display.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.display.-------.InstrumentCoverage.0.html?ref=0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "patch": "@@ -0,0 +1,161 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.display.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>inline.display - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 40\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>fn display&lt;T: Display&gt;(xs: &amp;[T]) <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    for </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:9-42:10: @8[1]: _13 = ((_9 as Some).0: &amp;T)\n+42:9-42:10: @8[3]: _14 = _13\n+42:9-42:10: @8[4]: _7 = move _14\n+42:9-42:10: @8[5]: _8 = const ()\n+42:9-42:10: @8[13]: FakeRead(ForLet, _16)\"><span class=\"annotation\">@6,8,9,10,11\u298a</span>x<span class=\"annotation\">\u2989@6,8,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> in </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:14-42:16: @8[12]: _16 = _7\n+43:16-43:20: @8[20]: _47 = const display::&lt;T&gt;::promoted[2]\n+43:16-43:20: @8[21]: _22 = &amp;(*_47)\n+43:16-43:20: @8[22]: _21 = &amp;(*_22)\n+43:16-43:20: @8[23]: _20 = move _21 as &amp;[&amp;str] (Pointer(Unsize))\n+43:22-43:23: @8[31]: _29 = &amp;_16\n+43:9-43:25: @8[32]: _28 = (move _29,)\n+43:9-43:25: @8[34]: FakeRead(ForMatchedPlace, _28)\n+43:9-43:25: @8[36]: _30 = (_28.0: &amp;&amp;T)\n+43:9-43:25: @8[39]: _32 = &amp;(*_30)\n+43:9-43:25: @8[41]: _33 = &lt;&amp;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+43:9-43:25: @8.Call: _31 = std::fmt::ArgumentV1::new::&lt;&amp;T&gt;(move _32, move _33) -&gt; [return: bb9, unwind: bb14]\n+43:9-43:25: @9[2]: _27 = [move _31]\n+43:9-43:25: @9[5]: _26 = &amp;_27\n+43:9-43:25: @9[6]: _25 = &amp;(*_26)\n+43:9-43:25: @9[7]: _24 = move _25 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+43:9-43:25: @9.Call: _19 = std::fmt::Arguments::new_v1(move _20, move _24) -&gt; [return: bb10, unwind: bb14]\n+43:9-43:25: @10.Call: _18 = std::io::_print(move _19) -&gt; [return: bb11, unwind: bb14]\n+42:17-44:6: @11[6]: _17 = const ()\"><span class=\"annotation\">@6,8,9,10,11\u298a</span>xs {</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:14-42:16: @8[12]: _16 = _7\n+43:16-43:20: @8[20]: _47 = const display::&lt;T&gt;::promoted[2]\n+43:16-43:20: @8[21]: _22 = &amp;(*_47)\n+43:16-43:20: @8[22]: _21 = &amp;(*_22)\n+43:16-43:20: @8[23]: _20 = move _21 as &amp;[&amp;str] (Pointer(Unsize))\n+43:22-43:23: @8[31]: _29 = &amp;_16\n+43:9-43:25: @8[32]: _28 = (move _29,)\n+43:9-43:25: @8[34]: FakeRead(ForMatchedPlace, _28)\n+43:9-43:25: @8[36]: _30 = (_28.0: &amp;&amp;T)\n+43:9-43:25: @8[39]: _32 = &amp;(*_30)\n+43:9-43:25: @8[41]: _33 = &lt;&amp;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+43:9-43:25: @8.Call: _31 = std::fmt::ArgumentV1::new::&lt;&amp;T&gt;(move _32, move _33) -&gt; [return: bb9, unwind: bb14]\n+43:9-43:25: @9[2]: _27 = [move _31]\n+43:9-43:25: @9[5]: _26 = &amp;_27\n+43:9-43:25: @9[6]: _25 = &amp;(*_26)\n+43:9-43:25: @9[7]: _24 = move _25 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+43:9-43:25: @9.Call: _19 = std::fmt::Arguments::new_v1(move _20, move _24) -&gt; [return: bb10, unwind: bb14]\n+43:9-43:25: @10.Call: _18 = std::io::_print(move _19) -&gt; [return: bb11, unwind: bb14]\n+42:17-44:6: @11[6]: _17 = const ()\">        print!(\"{}\", x);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:14-42:16: @8[12]: _16 = _7\n+43:16-43:20: @8[20]: _47 = const display::&lt;T&gt;::promoted[2]\n+43:16-43:20: @8[21]: _22 = &amp;(*_47)\n+43:16-43:20: @8[22]: _21 = &amp;(*_22)\n+43:16-43:20: @8[23]: _20 = move _21 as &amp;[&amp;str] (Pointer(Unsize))\n+43:22-43:23: @8[31]: _29 = &amp;_16\n+43:9-43:25: @8[32]: _28 = (move _29,)\n+43:9-43:25: @8[34]: FakeRead(ForMatchedPlace, _28)\n+43:9-43:25: @8[36]: _30 = (_28.0: &amp;&amp;T)\n+43:9-43:25: @8[39]: _32 = &amp;(*_30)\n+43:9-43:25: @8[41]: _33 = &lt;&amp;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+43:9-43:25: @8.Call: _31 = std::fmt::ArgumentV1::new::&lt;&amp;T&gt;(move _32, move _33) -&gt; [return: bb9, unwind: bb14]\n+43:9-43:25: @9[2]: _27 = [move _31]\n+43:9-43:25: @9[5]: _26 = &amp;_27\n+43:9-43:25: @9[6]: _25 = &amp;(*_26)\n+43:9-43:25: @9[7]: _24 = move _25 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+43:9-43:25: @9.Call: _19 = std::fmt::Arguments::new_v1(move _20, move _24) -&gt; [return: bb10, unwind: bb14]\n+43:9-43:25: @10.Call: _18 = std::io::_print(move _19) -&gt; [return: bb11, unwind: bb14]\n+42:17-44:6: @11[6]: _17 = const ()\">    }<span class=\"annotation\">\u2989@6,8,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"45:5-45:16: @5[13]: _46 = const display::&lt;T&gt;::promoted[1]\n+45:5-45:16: @5[14]: _38 = &amp;(*_46)\n+45:5-45:16: @5[15]: _37 = &amp;(*_38)\n+45:5-45:16: @5[16]: _36 = move _37 as &amp;[&amp;str] (Pointer(Unsize))\n+45:5-45:16: @5[22]: _44 = ()\n+45:5-45:16: @5[23]: FakeRead(ForMatchedPlace, _44)\n+45:5-45:16: @5[24]: _45 = const display::&lt;T&gt;::promoted[0]\n+45:5-45:16: @5[25]: _42 = &amp;(*_45)\n+45:5-45:16: @5[26]: _41 = &amp;(*_42)\n+45:5-45:16: @5[27]: _40 = move _41 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+45:5-45:16: @5.Call: _35 = std::fmt::Arguments::new_v1(move _36, move _40) -&gt; [return: bb12, unwind: bb14]\n+45:5-45:16: @12.Call: _34 = std::io::_print(move _35) -&gt; [return: bb13, unwind: bb14]\n+46:2-46:2: @13.Return: return\"><span class=\"annotation\">@5,12,13\u298a</span>println!();</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"45:5-45:16: @5[13]: _46 = const display::&lt;T&gt;::promoted[1]\n+45:5-45:16: @5[14]: _38 = &amp;(*_46)\n+45:5-45:16: @5[15]: _37 = &amp;(*_38)\n+45:5-45:16: @5[16]: _36 = move _37 as &amp;[&amp;str] (Pointer(Unsize))\n+45:5-45:16: @5[22]: _44 = ()\n+45:5-45:16: @5[23]: FakeRead(ForMatchedPlace, _44)\n+45:5-45:16: @5[24]: _45 = const display::&lt;T&gt;::promoted[0]\n+45:5-45:16: @5[25]: _42 = &amp;(*_45)\n+45:5-45:16: @5[26]: _41 = &amp;(*_42)\n+45:5-45:16: @5[27]: _40 = move _41 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+45:5-45:16: @5.Call: _35 = std::fmt::Arguments::new_v1(move _36, move _40) -&gt; [return: bb12, unwind: bb14]\n+45:5-45:16: @12.Call: _34 = std::io::_print(move _35) -&gt; [return: bb13, unwind: bb14]\n+46:2-46:2: @13.Return: return\">}<span class=\"annotation\">\u2989@5,12,13</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "bbf19c3e446f9896f191eab7de19ffc610799fc3", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.error.-------.InstrumentCoverage.0.html", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.error.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.error.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.error.-------.InstrumentCoverage.0.html?ref=0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "patch": "@@ -0,0 +1,79 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.error.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>inline.error - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 48\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"50:5-50:21: @0.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;error&quot;) -&gt; bb1\n+49:12-51:2: @1.Resume: resume\"><span class=\"annotation\">@0,1\u298a</span>fn error() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"50:5-50:21: @0.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;error&quot;) -&gt; bb1\n+49:12-51:2: @1.Resume: resume\">    panic!(\"error\");</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"50:5-50:21: @0.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;error&quot;) -&gt; bb1\n+49:12-51:2: @1.Resume: resume\">}<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "8e8efb6d9f6b1a21fc1a6e6481def8ae4f9273dd", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.length.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.length.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.length.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.length.-------.InstrumentCoverage.0.html?ref=0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.length.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>inline.length - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 29\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:5-31:7: @0[1]: _2 = &amp;(*_1)\n+31:5-31:13: @0.Call: _0 = core::slice::&lt;impl [T]&gt;::len(move _2) -&gt; [return: bb1, unwind: bb2]\n+32:2-32:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>fn length&lt;T&gt;(xs: &amp;[T]) -&gt; usize {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:5-31:7: @0[1]: _2 = &amp;(*_1)\n+31:5-31:13: @0.Call: _0 = core::slice::&lt;impl [T]&gt;::len(move _2) -&gt; [return: bb1, unwind: bb2]\n+32:2-32:2: @1.Return: return\">    xs.len()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:5-31:7: @0[1]: _2 = &amp;(*_1)\n+31:5-31:13: @0.Call: _0 = core::slice::&lt;impl [T]&gt;::len(move _2) -&gt; [return: bb1, unwind: bb2]\n+32:2-32:2: @1.Return: return\">}<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4ec2e9beede309c19f08d52f2c6274a9399365ff", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.main.-------.InstrumentCoverage.0.html?ref=0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "patch": "@@ -0,0 +1,94 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>inline.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:18-6:34: @0[4]: _6 = const main::promoted[0]\n+6:18-6:34: @0[5]: _4 = &amp;(*_6)\n+6:18-6:34: @0[6]: _3 = &amp;(*_4)\n+6:18-6:34: @0[7]: _2 = move _3 as &amp;[char] (Pointer(Unsize))\n+6:5-6:35: @0.Call: _1 = permutations::&lt;char&gt;(move _2) -&gt; [return: bb1, unwind: bb2]\n+5:11-7:2: @1[3]: _0 = const ()\n+7:2-7:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>fn main() {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:18-6:34: @0[4]: _6 = const main::promoted[0]\n+6:18-6:34: @0[5]: _4 = &amp;(*_6)\n+6:18-6:34: @0[6]: _3 = &amp;(*_4)\n+6:18-6:34: @0[7]: _2 = move _3 as &amp;[char] (Pointer(Unsize))\n+6:5-6:35: @0.Call: _1 = permutations::&lt;char&gt;(move _2) -&gt; [return: bb1, unwind: bb2]\n+5:11-7:2: @1[3]: _0 = const ()\n+7:2-7:2: @1.Return: return\">    permutations(&amp;['a', 'b', 'c']);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:18-6:34: @0[4]: _6 = const main::promoted[0]\n+6:18-6:34: @0[5]: _4 = &amp;(*_6)\n+6:18-6:34: @0[6]: _3 = &amp;(*_4)\n+6:18-6:34: @0[7]: _2 = move _3 as &amp;[char] (Pointer(Unsize))\n+6:5-6:35: @0.Call: _1 = permutations::&lt;char&gt;(move _2) -&gt; [return: bb1, unwind: bb2]\n+5:11-7:2: @1[3]: _0 = const ()\n+7:2-7:2: @1.Return: return\">}<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "fd72973ccd076f4e821da4a0f162e8c8ca668bea", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.permutate.-------.InstrumentCoverage.0.html", "status": "added", "additions": 183, "deletions": 0, "changes": 183, "blob_url": "https://github.com/rust-lang/rust/blob/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutate.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutate.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutate.-------.InstrumentCoverage.0.html?ref=0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "patch": "@@ -0,0 +1,183 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.permutate.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>inline.permutate - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:20-16:22: @0[2]: _4 = &amp;(*_1)\n+16:13-16:23: @0.Call: _3 = length::&lt;T&gt;(move _4) -&gt; [return: bb1, unwind: bb22]\n+16:9-16:10: @1[1]: FakeRead(ForLet, _3)\n+17:8-17:9: @1[4]: _6 = _2\n+17:13-17:14: @1[6]: _7 = _3\n+17:8-17:14: @1[7]: _5 = Eq(move _6, move _7)\"><span class=\"annotation\">@0,1\u298a</span>fn permutate&lt;T: Copy + Display&gt;(xs: &amp;mut [T], k: usize) {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"16:20-16:22: @0[2]: _4 = &amp;(*_1)\n+16:13-16:23: @0.Call: _3 = length::&lt;T&gt;(move _4) -&gt; [return: bb1, unwind: bb22]\n+16:9-16:10: @1[1]: FakeRead(ForLet, _3)\n+17:8-17:9: @1[4]: _6 = _2\n+17:13-17:14: @1[6]: _7 = _3\n+17:8-17:14: @1[7]: _5 = Eq(move _6, move _7)\">    let n = length(xs);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"16:20-16:22: @0[2]: _4 = &amp;(*_1)\n+16:13-16:23: @0.Call: _3 = length::&lt;T&gt;(move _4) -&gt; [return: bb1, unwind: bb22]\n+16:9-16:10: @1[1]: FakeRead(ForLet, _3)\n+17:8-17:9: @1[4]: _6 = _2\n+17:13-17:14: @1[6]: _7 = _3\n+17:8-17:14: @1[7]: _5 = Eq(move _6, move _7)\">    if k == n<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:17-18:19: @2[2]: _9 = &amp;(*_1)\n+18:9-18:20: @2.Call: _8 = display::&lt;T&gt;(move _9) -&gt; [return: bb4, unwind: bb22]\n+17:15-19:6: @4[2]: _0 = const ()\"><span class=\"annotation\">@2,4\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:17-18:19: @2[2]: _9 = &amp;(*_1)\n+18:9-18:20: @2.Call: _8 = display::&lt;T&gt;(move _9) -&gt; [return: bb4, unwind: bb22]\n+17:15-19:6: @4[2]: _0 = const ()\">        display(xs);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:17-18:19: @2[2]: _9 = &amp;(*_1)\n+18:9-18:20: @2.Call: _8 = display::&lt;T&gt;(move _9) -&gt; [return: bb4, unwind: bb22]\n+17:15-19:6: @4[2]: _0 = const ()\">    }<span class=\"annotation\">\u2989@2,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:15-19:16: @3[2]: _11 = _2\n+19:19-19:20: @3[4]: _12 = _3\n+19:15-19:20: @3[5]: _10 = Lt(move _11, move _12)\"><span class=\"annotation\">@3\u298a</span>k &lt; n<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        for </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @14[1]: _25 = ((_21 as Some).0: usize)\n+20:13-20:14: @14[3]: _26 = _25\n+20:13-20:14: @14[4]: _19 = move _26\n+20:13-20:14: @14[5]: _20 = const ()\n+20:13-20:14: @14[13]: FakeRead(ForLet, _28)\"><span class=\"annotation\">@12,14,15,16,17,18\u298a</span>i<span class=\"annotation\">\u2989@12,14,15,16,17,18</span></span></span><span class=\"code\" style=\"--layer: 0\"> in </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:18-20:19: @5[3]: _15 = _2\n+20:21-20:22: @5[5]: _16 = _3\"><span class=\"annotation\">@5,7\u298a</span>k..n<span class=\"annotation\">\u2989@5,7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:20: @14[17]: _31 = &amp;mut (*_1)\n+21:22-21:23: @14[19]: _32 = _28\n+21:25-21:26: @14[21]: _33 = _2\n+21:13-21:27: @14.Call: _30 = swap::&lt;T&gt;(move _31, move _32, move _33) -&gt; [return: bb15, unwind: bb22]\n+22:23-22:25: @15[6]: _35 = &amp;mut (*_1)\n+22:27-22:28: @15[9]: _37 = _2\n+22:27-22:32: @15[10]: _38 = CheckedAdd(_37, const 1_usize)\n+22:27-22:32: @16[0]: _36 = move (_38.0: usize)\n+22:13-22:33: @16.Call: _34 = permutate::&lt;T&gt;(move _35, move _36) -&gt; [return: bb17, unwind: bb22]\n+23:18-23:20: @17[5]: _40 = &amp;mut (*_1)\n+23:22-23:23: @17[7]: _41 = _28\n+23:25-23:26: @17[9]: _42 = _2\n+23:13-23:27: @17.Call: _39 = swap::&lt;T&gt;(move _40, move _41, move _42) -&gt; [return: bb18, unwind: bb22]\n+20:23-24:10: @18[4]: _29 = const ()\"><span class=\"annotation\">@12,14,15,16,17,18\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:20: @14[17]: _31 = &amp;mut (*_1)\n+21:22-21:23: @14[19]: _32 = _28\n+21:25-21:26: @14[21]: _33 = _2\n+21:13-21:27: @14.Call: _30 = swap::&lt;T&gt;(move _31, move _32, move _33) -&gt; [return: bb15, unwind: bb22]\n+22:23-22:25: @15[6]: _35 = &amp;mut (*_1)\n+22:27-22:28: @15[9]: _37 = _2\n+22:27-22:32: @15[10]: _38 = CheckedAdd(_37, const 1_usize)\n+22:27-22:32: @16[0]: _36 = move (_38.0: usize)\n+22:13-22:33: @16.Call: _34 = permutate::&lt;T&gt;(move _35, move _36) -&gt; [return: bb17, unwind: bb22]\n+23:18-23:20: @17[5]: _40 = &amp;mut (*_1)\n+23:22-23:23: @17[7]: _41 = _28\n+23:25-23:26: @17[9]: _42 = _2\n+23:13-23:27: @17.Call: _39 = swap::&lt;T&gt;(move _40, move _41, move _42) -&gt; [return: bb18, unwind: bb22]\n+20:23-24:10: @18[4]: _29 = const ()\">            swap(xs, i, k);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:20: @14[17]: _31 = &amp;mut (*_1)\n+21:22-21:23: @14[19]: _32 = _28\n+21:25-21:26: @14[21]: _33 = _2\n+21:13-21:27: @14.Call: _30 = swap::&lt;T&gt;(move _31, move _32, move _33) -&gt; [return: bb15, unwind: bb22]\n+22:23-22:25: @15[6]: _35 = &amp;mut (*_1)\n+22:27-22:28: @15[9]: _37 = _2\n+22:27-22:32: @15[10]: _38 = CheckedAdd(_37, const 1_usize)\n+22:27-22:32: @16[0]: _36 = move (_38.0: usize)\n+22:13-22:33: @16.Call: _34 = permutate::&lt;T&gt;(move _35, move _36) -&gt; [return: bb17, unwind: bb22]\n+23:18-23:20: @17[5]: _40 = &amp;mut (*_1)\n+23:22-23:23: @17[7]: _41 = _28\n+23:25-23:26: @17[9]: _42 = _2\n+23:13-23:27: @17.Call: _39 = swap::&lt;T&gt;(move _40, move _41, move _42) -&gt; [return: bb18, unwind: bb22]\n+20:23-24:10: @18[4]: _29 = const ()\">            permutate(xs, k + 1);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:20: @14[17]: _31 = &amp;mut (*_1)\n+21:22-21:23: @14[19]: _32 = _28\n+21:25-21:26: @14[21]: _33 = _2\n+21:13-21:27: @14.Call: _30 = swap::&lt;T&gt;(move _31, move _32, move _33) -&gt; [return: bb15, unwind: bb22]\n+22:23-22:25: @15[6]: _35 = &amp;mut (*_1)\n+22:27-22:28: @15[9]: _37 = _2\n+22:27-22:32: @15[10]: _38 = CheckedAdd(_37, const 1_usize)\n+22:27-22:32: @16[0]: _36 = move (_38.0: usize)\n+22:13-22:33: @16.Call: _34 = permutate::&lt;T&gt;(move _35, move _36) -&gt; [return: bb17, unwind: bb22]\n+23:18-23:20: @17[5]: _40 = &amp;mut (*_1)\n+23:22-23:23: @17[7]: _41 = _28\n+23:25-23:26: @17[9]: _42 = _2\n+23:13-23:27: @17.Call: _39 = swap::&lt;T&gt;(move _40, move _41, move _42) -&gt; [return: bb18, unwind: bb22]\n+20:23-24:10: @18[4]: _29 = const ()\">            swap(xs, i, k);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:20: @14[17]: _31 = &amp;mut (*_1)\n+21:22-21:23: @14[19]: _32 = _28\n+21:25-21:26: @14[21]: _33 = _2\n+21:13-21:27: @14.Call: _30 = swap::&lt;T&gt;(move _31, move _32, move _33) -&gt; [return: bb15, unwind: bb22]\n+22:23-22:25: @15[6]: _35 = &amp;mut (*_1)\n+22:27-22:28: @15[9]: _37 = _2\n+22:27-22:32: @15[10]: _38 = CheckedAdd(_37, const 1_usize)\n+22:27-22:32: @16[0]: _36 = move (_38.0: usize)\n+22:13-22:33: @16.Call: _34 = permutate::&lt;T&gt;(move _35, move _36) -&gt; [return: bb17, unwind: bb22]\n+23:18-23:20: @17[5]: _40 = &amp;mut (*_1)\n+23:22-23:23: @17[7]: _41 = _28\n+23:25-23:26: @17[9]: _42 = _2\n+23:13-23:27: @17.Call: _39 = swap::&lt;T&gt;(move _40, move _41, move _42) -&gt; [return: bb18, unwind: bb22]\n+20:23-24:10: @18[4]: _29 = const ()\">        }<span class=\"annotation\">\u2989@12,14,15,16,17,18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:9-26:16: @6.Call: _43 = error() -&gt; [return: bb19, unwind: bb22]\n+25:12-27:6: @19[1]: _0 = const ()\"><span class=\"annotation\">@6,19\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"26:9-26:16: @6.Call: _43 = error() -&gt; [return: bb19, unwind: bb22]\n+25:12-27:6: @19[1]: _0 = const ()\">        error();</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"26:9-26:16: @6.Call: _43 = error() -&gt; [return: bb19, unwind: bb22]\n+25:12-27:6: @19[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@6,19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:2-28:2: @21.Return: return\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4bfd22f3cd9031171fcfb65c02ffd08134074700", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.permutations.-------.InstrumentCoverage.0.html", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutations.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutations.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutations.-------.InstrumentCoverage.0.html?ref=0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "patch": "@@ -0,0 +1,113 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.permutations.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>inline.permutations - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 9\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:18-11:20: @0[2]: _3 = &amp;(*_1)\n+11:18-11:31: @0.Call: _2 = &lt;[T] as std::borrow::ToOwned&gt;::to_owned(move _3) -&gt; [return: bb1, unwind: bb6]\n+11:9-11:15: @1[1]: FakeRead(ForLet, _2)\n+12:15-12:22: @1[7]: _8 = &amp;mut _2\n+12:15-12:22: @1[8]: _7 = &amp;mut (*_8)\n+12:15-12:22: @1.Call: _6 = &lt;std::vec::Vec&lt;T&gt; as std::ops::DerefMut&gt;::deref_mut(move _7) -&gt; [return: bb2, unwind: bb5]\n+12:15-12:22: @2[0]: _5 = &amp;mut (*_6)\n+12:5-12:26: @2.Call: _4 = permutate::&lt;T&gt;(move _5, const 0_usize) -&gt; [return: bb3, unwind: bb5]\n+10:46-13:2: @3[4]: _0 = const ()\n+13:2-13:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>fn permutations&lt;T: Copy + Display&gt;(xs: &amp;[T]) {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:18-11:20: @0[2]: _3 = &amp;(*_1)\n+11:18-11:31: @0.Call: _2 = &lt;[T] as std::borrow::ToOwned&gt;::to_owned(move _3) -&gt; [return: bb1, unwind: bb6]\n+11:9-11:15: @1[1]: FakeRead(ForLet, _2)\n+12:15-12:22: @1[7]: _8 = &amp;mut _2\n+12:15-12:22: @1[8]: _7 = &amp;mut (*_8)\n+12:15-12:22: @1.Call: _6 = &lt;std::vec::Vec&lt;T&gt; as std::ops::DerefMut&gt;::deref_mut(move _7) -&gt; [return: bb2, unwind: bb5]\n+12:15-12:22: @2[0]: _5 = &amp;mut (*_6)\n+12:5-12:26: @2.Call: _4 = permutate::&lt;T&gt;(move _5, const 0_usize) -&gt; [return: bb3, unwind: bb5]\n+10:46-13:2: @3[4]: _0 = const ()\n+13:2-13:2: @4.Return: return\">    let mut ys = xs.to_owned();</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:18-11:20: @0[2]: _3 = &amp;(*_1)\n+11:18-11:31: @0.Call: _2 = &lt;[T] as std::borrow::ToOwned&gt;::to_owned(move _3) -&gt; [return: bb1, unwind: bb6]\n+11:9-11:15: @1[1]: FakeRead(ForLet, _2)\n+12:15-12:22: @1[7]: _8 = &amp;mut _2\n+12:15-12:22: @1[8]: _7 = &amp;mut (*_8)\n+12:15-12:22: @1.Call: _6 = &lt;std::vec::Vec&lt;T&gt; as std::ops::DerefMut&gt;::deref_mut(move _7) -&gt; [return: bb2, unwind: bb5]\n+12:15-12:22: @2[0]: _5 = &amp;mut (*_6)\n+12:5-12:26: @2.Call: _4 = permutate::&lt;T&gt;(move _5, const 0_usize) -&gt; [return: bb3, unwind: bb5]\n+10:46-13:2: @3[4]: _0 = const ()\n+13:2-13:2: @4.Return: return\">    permutate(&amp;mut ys, 0);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:18-11:20: @0[2]: _3 = &amp;(*_1)\n+11:18-11:31: @0.Call: _2 = &lt;[T] as std::borrow::ToOwned&gt;::to_owned(move _3) -&gt; [return: bb1, unwind: bb6]\n+11:9-11:15: @1[1]: FakeRead(ForLet, _2)\n+12:15-12:22: @1[7]: _8 = &amp;mut _2\n+12:15-12:22: @1[8]: _7 = &amp;mut (*_8)\n+12:15-12:22: @1.Call: _6 = &lt;std::vec::Vec&lt;T&gt; as std::ops::DerefMut&gt;::deref_mut(move _7) -&gt; [return: bb2, unwind: bb5]\n+12:15-12:22: @2[0]: _5 = &amp;mut (*_6)\n+12:5-12:26: @2.Call: _4 = permutate::&lt;T&gt;(move _5, const 0_usize) -&gt; [return: bb3, unwind: bb5]\n+10:46-13:2: @3[4]: _0 = const ()\n+13:2-13:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4c3f63093d30e5e2aa381b9f1c186f2fce61a85a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.swap.-------.InstrumentCoverage.0.html", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/rust-lang/rust/blob/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.swap.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.swap.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.swap.-------.InstrumentCoverage.0.html?ref=0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "patch": "@@ -0,0 +1,173 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.swap.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>inline.swap - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 34\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:16-36:17: @0[2]: _5 = _2\n+36:13-36:18: @0[3]: _6 = Len((*_1))\n+36:13-36:18: @0[4]: _7 = Lt(_5, _6)\n+36:13-36:18: @1[0]: _4 = (*_1)[_5]\n+36:9-36:10: @1[1]: FakeRead(ForLet, _4)\n+37:16-37:17: @1[5]: _9 = _3\n+37:13-37:18: @1[6]: _10 = Len((*_1))\n+37:13-37:18: @1[7]: _11 = Lt(_9, _10)\n+37:13-37:18: @2[0]: _8 = (*_1)[_9]\n+37:8-37:9: @2[2]: _12 = _2\n+37:5-37:10: @2[3]: _13 = Len((*_1))\n+37:5-37:10: @2[4]: _14 = Lt(_12, _13)\n+37:5-37:18: @3[0]: (*_1)[_12] = move _8\n+38:13-38:14: @3[5]: _15 = _4\n+38:8-38:9: @3[7]: _16 = _3\n+38:5-38:10: @3[8]: _17 = Len((*_1))\n+38:5-38:10: @3[9]: _18 = Lt(_16, _17)\n+38:5-38:14: @4[0]: (*_1)[_16] = move _15\n+35:52-39:2: @4[3]: _0 = const ()\n+39:2-39:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>fn swap&lt;T: Copy&gt;(xs: &amp;mut [T], i: usize, j: usize) {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:16-36:17: @0[2]: _5 = _2\n+36:13-36:18: @0[3]: _6 = Len((*_1))\n+36:13-36:18: @0[4]: _7 = Lt(_5, _6)\n+36:13-36:18: @1[0]: _4 = (*_1)[_5]\n+36:9-36:10: @1[1]: FakeRead(ForLet, _4)\n+37:16-37:17: @1[5]: _9 = _3\n+37:13-37:18: @1[6]: _10 = Len((*_1))\n+37:13-37:18: @1[7]: _11 = Lt(_9, _10)\n+37:13-37:18: @2[0]: _8 = (*_1)[_9]\n+37:8-37:9: @2[2]: _12 = _2\n+37:5-37:10: @2[3]: _13 = Len((*_1))\n+37:5-37:10: @2[4]: _14 = Lt(_12, _13)\n+37:5-37:18: @3[0]: (*_1)[_12] = move _8\n+38:13-38:14: @3[5]: _15 = _4\n+38:8-38:9: @3[7]: _16 = _3\n+38:5-38:10: @3[8]: _17 = Len((*_1))\n+38:5-38:10: @3[9]: _18 = Lt(_16, _17)\n+38:5-38:14: @4[0]: (*_1)[_16] = move _15\n+35:52-39:2: @4[3]: _0 = const ()\n+39:2-39:2: @4.Return: return\">    let t = xs[i];</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:16-36:17: @0[2]: _5 = _2\n+36:13-36:18: @0[3]: _6 = Len((*_1))\n+36:13-36:18: @0[4]: _7 = Lt(_5, _6)\n+36:13-36:18: @1[0]: _4 = (*_1)[_5]\n+36:9-36:10: @1[1]: FakeRead(ForLet, _4)\n+37:16-37:17: @1[5]: _9 = _3\n+37:13-37:18: @1[6]: _10 = Len((*_1))\n+37:13-37:18: @1[7]: _11 = Lt(_9, _10)\n+37:13-37:18: @2[0]: _8 = (*_1)[_9]\n+37:8-37:9: @2[2]: _12 = _2\n+37:5-37:10: @2[3]: _13 = Len((*_1))\n+37:5-37:10: @2[4]: _14 = Lt(_12, _13)\n+37:5-37:18: @3[0]: (*_1)[_12] = move _8\n+38:13-38:14: @3[5]: _15 = _4\n+38:8-38:9: @3[7]: _16 = _3\n+38:5-38:10: @3[8]: _17 = Len((*_1))\n+38:5-38:10: @3[9]: _18 = Lt(_16, _17)\n+38:5-38:14: @4[0]: (*_1)[_16] = move _15\n+35:52-39:2: @4[3]: _0 = const ()\n+39:2-39:2: @4.Return: return\">    xs[i] = xs[j];</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:16-36:17: @0[2]: _5 = _2\n+36:13-36:18: @0[3]: _6 = Len((*_1))\n+36:13-36:18: @0[4]: _7 = Lt(_5, _6)\n+36:13-36:18: @1[0]: _4 = (*_1)[_5]\n+36:9-36:10: @1[1]: FakeRead(ForLet, _4)\n+37:16-37:17: @1[5]: _9 = _3\n+37:13-37:18: @1[6]: _10 = Len((*_1))\n+37:13-37:18: @1[7]: _11 = Lt(_9, _10)\n+37:13-37:18: @2[0]: _8 = (*_1)[_9]\n+37:8-37:9: @2[2]: _12 = _2\n+37:5-37:10: @2[3]: _13 = Len((*_1))\n+37:5-37:10: @2[4]: _14 = Lt(_12, _13)\n+37:5-37:18: @3[0]: (*_1)[_12] = move _8\n+38:13-38:14: @3[5]: _15 = _4\n+38:8-38:9: @3[7]: _16 = _3\n+38:5-38:10: @3[8]: _17 = Len((*_1))\n+38:5-38:10: @3[9]: _18 = Lt(_16, _17)\n+38:5-38:14: @4[0]: (*_1)[_16] = move _15\n+35:52-39:2: @4[3]: _0 = const ()\n+39:2-39:2: @4.Return: return\">    xs[j] = t;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:16-36:17: @0[2]: _5 = _2\n+36:13-36:18: @0[3]: _6 = Len((*_1))\n+36:13-36:18: @0[4]: _7 = Lt(_5, _6)\n+36:13-36:18: @1[0]: _4 = (*_1)[_5]\n+36:9-36:10: @1[1]: FakeRead(ForLet, _4)\n+37:16-37:17: @1[5]: _9 = _3\n+37:13-37:18: @1[6]: _10 = Len((*_1))\n+37:13-37:18: @1[7]: _11 = Lt(_9, _10)\n+37:13-37:18: @2[0]: _8 = (*_1)[_9]\n+37:8-37:9: @2[2]: _12 = _2\n+37:5-37:10: @2[3]: _13 = Len((*_1))\n+37:5-37:10: @2[4]: _14 = Lt(_12, _13)\n+37:5-37:18: @3[0]: (*_1)[_12] = move _8\n+38:13-38:14: @3[5]: _15 = _4\n+38:8-38:9: @3[7]: _16 = _3\n+38:5-38:10: @3[8]: _17 = Len((*_1))\n+38:5-38:10: @3[9]: _18 = Lt(_16, _17)\n+38:5-38:14: @4[0]: (*_1)[_16] = move _15\n+35:52-39:2: @4[3]: _0 = const ()\n+39:2-39:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "9cfab9ddbadf2e70cf4ef7f695bbe17186c6f9ed", "filename": "src/test/run-make-fulldeps/coverage/inline.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d84e0b68c78006c4aa6f5ec021d92277be7d3cc/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Finline.rs?ref=0d84e0b68c78006c4aa6f5ec021d92277be7d3cc", "patch": "@@ -0,0 +1,51 @@\n+// compile-flags: -Zinline-mir\n+\n+use std::fmt::Display;\n+\n+fn main() {\n+    permutations(&['a', 'b', 'c']);\n+}\n+\n+#[inline(always)]\n+fn permutations<T: Copy + Display>(xs: &[T]) {\n+    let mut ys = xs.to_owned();\n+    permutate(&mut ys, 0);\n+}\n+\n+fn permutate<T: Copy + Display>(xs: &mut [T], k: usize) {\n+    let n = length(xs);\n+    if k == n {\n+        display(xs);\n+    } else if k < n {\n+        for i in k..n {\n+            swap(xs, i, k);\n+            permutate(xs, k + 1);\n+            swap(xs, i, k);\n+        }\n+    } else {\n+        error();\n+    }\n+}\n+\n+fn length<T>(xs: &[T]) -> usize {\n+    xs.len()\n+}\n+\n+#[inline]\n+fn swap<T: Copy>(xs: &mut [T], i: usize, j: usize) {\n+    let t = xs[i];\n+    xs[i] = xs[j];\n+    xs[j] = t;\n+}\n+\n+fn display<T: Display>(xs: &[T]) {\n+    for x in xs {\n+        print!(\"{}\", x);\n+    }\n+    println!();\n+}\n+\n+#[inline(always)]\n+fn error() {\n+    panic!(\"error\");\n+}"}]}