{"sha": "5594db097540d831cb7d98a662c7f3df7011411b", "node_id": "C_kwDOAAsO6NoAKDU1OTRkYjA5NzU0MGQ4MzFjYjdkOThhNjYyYzdmM2RmNzAxMTQxMWI", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-04-25T06:51:26Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-04-25T06:51:26Z"}, "message": "do not consider two extern types to be similar", "tree": {"sha": "d93022d13277eece751774870abefadc3fc83a64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d93022d13277eece751774870abefadc3fc83a64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5594db097540d831cb7d98a662c7f3df7011411b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5594db097540d831cb7d98a662c7f3df7011411b", "html_url": "https://github.com/rust-lang/rust/commit/5594db097540d831cb7d98a662c7f3df7011411b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5594db097540d831cb7d98a662c7f3df7011411b/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f631e8e93681ddc6e62d6ba6065cac7c449534c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f631e8e93681ddc6e62d6ba6065cac7c449534c", "html_url": "https://github.com/rust-lang/rust/commit/1f631e8e93681ddc6e62d6ba6065cac7c449534c"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "082402a38e3f5db45813d5078fa7456103d30e85", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5594db097540d831cb7d98a662c7f3df7011411b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5594db097540d831cb7d98a662c7f3df7011411b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=5594db097540d831cb7d98a662c7f3df7011411b", "patch": "@@ -1727,6 +1727,7 @@ impl<'a, 'tcx> InferCtxtPrivExt<'a, 'tcx> for InferCtxt<'a, 'tcx> {\n         } else if cat_a == cat_b {\n             match (a.kind(), b.kind()) {\n                 (ty::Adt(def_a, _), ty::Adt(def_b, _)) => def_a == def_b,\n+                (ty::Foreign(def_a), ty::Foreign(def_b)) => def_a == def_b,\n                 // Matching on references results in a lot of unhelpful\n                 // suggestions, so let's just not do that for now.\n                 //"}, {"sha": "39d00a6c1bc31c11bf0fde0f7a61bd9983ab7e97", "filename": "src/test/ui/extern/extern-type-diag-not-similar.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5594db097540d831cb7d98a662c7f3df7011411b/src%2Ftest%2Fui%2Fextern%2Fextern-type-diag-not-similar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5594db097540d831cb7d98a662c7f3df7011411b/src%2Ftest%2Fui%2Fextern%2Fextern-type-diag-not-similar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-type-diag-not-similar.rs?ref=5594db097540d831cb7d98a662c7f3df7011411b", "patch": "@@ -0,0 +1,22 @@\n+// We previously mentioned other extern types in the error message here.\n+//\n+// Two extern types shouldn't really be considered similar just\n+// because they are both extern types.\n+\n+#![feature(extern_types)]\n+extern {\n+    type ShouldNotBeMentioned;\n+}\n+\n+extern {\n+    type Foo;\n+}\n+\n+unsafe impl Send for ShouldNotBeMentioned {}\n+\n+fn assert_send<T: Send + ?Sized>() {}\n+\n+fn main() {\n+    assert_send::<Foo>()\n+    //~^ ERROR `Foo` cannot be sent between threads safely\n+}"}, {"sha": "75836f7eca19c794221e25a0a3846e937880e0d5", "filename": "src/test/ui/extern/extern-type-diag-not-similar.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5594db097540d831cb7d98a662c7f3df7011411b/src%2Ftest%2Fui%2Fextern%2Fextern-type-diag-not-similar.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5594db097540d831cb7d98a662c7f3df7011411b/src%2Ftest%2Fui%2Fextern%2Fextern-type-diag-not-similar.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-type-diag-not-similar.stderr?ref=5594db097540d831cb7d98a662c7f3df7011411b", "patch": "@@ -0,0 +1,16 @@\n+error[E0277]: `Foo` cannot be sent between threads safely\n+  --> $DIR/extern-type-diag-not-similar.rs:20:19\n+   |\n+LL |     assert_send::<Foo>()\n+   |                   ^^^ `Foo` cannot be sent between threads safely\n+   |\n+   = help: the trait `Send` is not implemented for `Foo`\n+note: required by a bound in `assert_send`\n+  --> $DIR/extern-type-diag-not-similar.rs:17:19\n+   |\n+LL | fn assert_send<T: Send + ?Sized>() {}\n+   |                   ^^^^ required by this bound in `assert_send`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}