{"sha": "8651aa066fdbbcfaa082531969469c3fa289de9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NTFhYTA2NmZkYmJjZmFhMDgyNTMxOTY5NDY5YzNmYTI4OWRlOWU=", "commit": {"author": {"name": "Charles Gleason", "email": "charles_gleason@alumni.brown.edu", "date": "2019-11-22T19:22:45Z"}, "committer": {"name": "Charles Gleason", "email": "charles_gleason@alumni.brown.edu", "date": "2019-12-23T16:03:30Z"}, "message": "Add test for BTreeMap::clone_from", "tree": {"sha": "c7be913184784d0fdd60f6541f3a91add2a54329", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7be913184784d0fdd60f6541f3a91add2a54329"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8651aa066fdbbcfaa082531969469c3fa289de9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8651aa066fdbbcfaa082531969469c3fa289de9e", "html_url": "https://github.com/rust-lang/rust/commit/8651aa066fdbbcfaa082531969469c3fa289de9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8651aa066fdbbcfaa082531969469c3fa289de9e/comments", "author": {"login": "crgl", "id": 36055314, "node_id": "MDQ6VXNlcjM2MDU1MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/36055314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crgl", "html_url": "https://github.com/crgl", "followers_url": "https://api.github.com/users/crgl/followers", "following_url": "https://api.github.com/users/crgl/following{/other_user}", "gists_url": "https://api.github.com/users/crgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/crgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crgl/subscriptions", "organizations_url": "https://api.github.com/users/crgl/orgs", "repos_url": "https://api.github.com/users/crgl/repos", "events_url": "https://api.github.com/users/crgl/events{/privacy}", "received_events_url": "https://api.github.com/users/crgl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crgl", "id": 36055314, "node_id": "MDQ6VXNlcjM2MDU1MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/36055314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crgl", "html_url": "https://github.com/crgl", "followers_url": "https://api.github.com/users/crgl/followers", "following_url": "https://api.github.com/users/crgl/following{/other_user}", "gists_url": "https://api.github.com/users/crgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/crgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crgl/subscriptions", "organizations_url": "https://api.github.com/users/crgl/orgs", "repos_url": "https://api.github.com/users/crgl/repos", "events_url": "https://api.github.com/users/crgl/events{/privacy}", "received_events_url": "https://api.github.com/users/crgl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f547978392872684085c96a3d5c1d00bad24b724", "url": "https://api.github.com/repos/rust-lang/rust/commits/f547978392872684085c96a3d5c1d00bad24b724", "html_url": "https://github.com/rust-lang/rust/commit/f547978392872684085c96a3d5c1d00bad24b724"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "65a3fbd66a4c284ce2cd05839f4d00e973d11123", "filename": "src/liballoc/tests/btree/map.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8651aa066fdbbcfaa082531969469c3fa289de9e/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8651aa066fdbbcfaa082531969469c3fa289de9e/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs?ref=8651aa066fdbbcfaa082531969469c3fa289de9e", "patch": "@@ -554,6 +554,26 @@ fn test_clone() {\n     }\n }\n \n+#[test]\n+fn test_clone_from() {\n+    let mut map1 = BTreeMap::new();\n+    let size = 30;\n+\n+    for i in 0..size {\n+        map1.insert(i, 10 * i);\n+        let mut map2 = BTreeMap::new();\n+        for j in 0..i {\n+            map2.insert(100 * j + 1, 2 * j + 1);\n+            let mut map1_copy = map2.clone();\n+            map1_copy.clone_from(&map1);\n+            assert_eq!(map1_copy, map1);\n+            let mut map2_copy = map1.clone();\n+            map2_copy.clone_from(&map2);\n+            assert_eq!(map2_copy, map2);\n+        }\n+    }\n+}\n+\n #[test]\n #[allow(dead_code)]\n fn test_variance() {"}]}