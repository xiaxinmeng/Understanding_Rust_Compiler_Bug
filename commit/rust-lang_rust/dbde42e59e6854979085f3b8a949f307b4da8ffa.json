{"sha": "dbde42e59e6854979085f3b8a949f307b4da8ffa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZGU0MmU1OWU2ODU0OTc5MDg1ZjNiOGE5NDlmMzA3YjRkYThmZmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-02T08:13:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-02T08:13:51Z"}, "message": "auto merge of #8175 : brson/rust/nodbg, r=graydon\n\nThis stuff is ancient, unused, and tied to oldsched", "tree": {"sha": "46c2cf29dcfe88caaf3460593156be4cf0cd6bff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46c2cf29dcfe88caaf3460593156be4cf0cd6bff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbde42e59e6854979085f3b8a949f307b4da8ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbde42e59e6854979085f3b8a949f307b4da8ffa", "html_url": "https://github.com/rust-lang/rust/commit/dbde42e59e6854979085f3b8a949f307b4da8ffa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbde42e59e6854979085f3b8a949f307b4da8ffa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbcce8d95c582d3f918fe4e978d6a715efd991e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbcce8d95c582d3f918fe4e978d6a715efd991e9", "html_url": "https://github.com/rust-lang/rust/commit/bbcce8d95c582d3f918fe4e978d6a715efd991e9"}, {"sha": "05eff5f731fbdf0597bb6a4b94a7603571ff66b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/05eff5f731fbdf0597bb6a4b94a7603571ff66b6", "html_url": "https://github.com/rust-lang/rust/commit/05eff5f731fbdf0597bb6a4b94a7603571ff66b6"}], "stats": {"total": 195, "additions": 0, "deletions": 195}, "files": [{"sha": "2c25ee9da78f608da98899c80fb4483ccaa791df", "filename": "src/libextra/dbg.rs", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/bbcce8d95c582d3f918fe4e978d6a715efd991e9/src%2Flibextra%2Fdbg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcce8d95c582d3f918fe4e978d6a715efd991e9/src%2Flibextra%2Fdbg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdbg.rs?ref=bbcce8d95c582d3f918fe4e978d6a715efd991e9", "patch": "@@ -1,80 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! Unsafe debugging functions for inspecting values.\n-\n-#[allow(missing_doc)];\n-\n-use std::cast::transmute;\n-use std::unstable::intrinsics::{get_tydesc};\n-\n-pub mod rustrt {\n-    use std::unstable::intrinsics::{TyDesc};\n-\n-    #[abi = \"cdecl\"]\n-    extern {\n-        pub unsafe fn debug_tydesc(td: *TyDesc);\n-        pub unsafe fn debug_opaque(td: *TyDesc, x: *());\n-        pub unsafe fn debug_box(td: *TyDesc, x: *());\n-        pub unsafe fn debug_tag(td: *TyDesc, x: *());\n-        pub unsafe fn debug_fn(td: *TyDesc, x: *());\n-        pub unsafe fn debug_ptrcast(td: *TyDesc, x: *()) -> *();\n-        pub unsafe fn rust_dbg_breakpoint();\n-    }\n-}\n-\n-pub fn debug_tydesc<T>() {\n-    unsafe {\n-        rustrt::debug_tydesc(get_tydesc::<T>());\n-    }\n-}\n-\n-pub fn debug_opaque<T>(x: T) {\n-    unsafe {\n-        rustrt::debug_opaque(get_tydesc::<T>(), transmute(&x));\n-    }\n-}\n-\n-pub fn debug_box<T>(x: @T) {\n-    unsafe {\n-        rustrt::debug_box(get_tydesc::<T>(), transmute(&x));\n-    }\n-}\n-\n-pub fn debug_tag<T>(x: T) {\n-    unsafe {\n-        rustrt::debug_tag(get_tydesc::<T>(), transmute(&x));\n-    }\n-}\n-\n-pub fn debug_fn<T>(x: T) {\n-    unsafe {\n-        rustrt::debug_fn(get_tydesc::<T>(), transmute(&x));\n-    }\n-}\n-\n-pub unsafe fn ptr_cast<T, U>(x: @T) -> @U {\n-    transmute(\n-        rustrt::debug_ptrcast(get_tydesc::<T>(), transmute(x)))\n-}\n-\n-/// Triggers a debugger breakpoint\n-pub fn breakpoint() {\n-    unsafe {\n-        rustrt::rust_dbg_breakpoint();\n-    }\n-}\n-\n-#[test]\n-fn test_breakpoint_should_not_abort_process_when_not_under_gdb() {\n-    // Triggering a breakpoint involves raising SIGTRAP, which terminates\n-    // the process under normal circumstances\n-    breakpoint();\n-}"}, {"sha": "80dee18f89b8653de4a151772e95fa3093d350f8", "filename": "src/libextra/extra.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dbde42e59e6854979085f3b8a949f307b4da8ffa/src%2Flibextra%2Fextra.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbde42e59e6854979085f3b8a949f307b4da8ffa/src%2Flibextra%2Fextra.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fextra.rs?ref=dbde42e59e6854979085f3b8a949f307b4da8ffa", "patch": "@@ -78,7 +78,6 @@ pub mod sha2;\n \n pub mod url;\n pub mod ebml;\n-pub mod dbg;\n pub mod getopts;\n pub mod json;\n pub mod md4;"}, {"sha": "9bbc578d194a8f3bf41a78b3fb85c04fa7dba2fe", "filename": "src/libstd/unstable/lang.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbde42e59e6854979085f3b8a949f307b4da8ffa/src%2Flibstd%2Funstable%2Flang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbde42e59e6854979085f3b8a949f307b4da8ffa/src%2Flibstd%2Funstable%2Flang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Flang.rs?ref=dbde42e59e6854979085f3b8a949f307b4da8ffa", "patch": "@@ -41,8 +41,6 @@ pub mod rustrt {\n \n         #[rust_stack]\n         pub fn rust_try_get_task() -> *rust_task;\n-\n-        pub fn rust_dbg_breakpoint();\n     }\n }\n "}, {"sha": "d77a9f58a38531f795d470a5523cb655c41350ed", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/dbde42e59e6854979085f3b8a949f307b4da8ffa/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/dbde42e59e6854979085f3b8a949f307b4da8ffa/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=dbde42e59e6854979085f3b8a949f307b4da8ffa", "patch": "@@ -150,93 +150,6 @@ debug_static_mut_check_four() {\n     assert(debug_static_mut == 4);\n }\n \n-/* Debug builtins for std::dbg. */\n-\n-static void\n-debug_tydesc_helper(type_desc *t)\n-{\n-    rust_task *task = rust_get_current_task();\n-    LOG(task, stdlib, \"  size %\" PRIdPTR \", align %\" PRIdPTR,\n-        t->size, t->align);\n-}\n-\n-extern \"C\" CDECL void\n-debug_tydesc(type_desc *t) {\n-    rust_task *task = rust_get_current_task();\n-    LOG(task, stdlib, \"debug_tydesc\");\n-    debug_tydesc_helper(t);\n-}\n-\n-extern \"C\" CDECL void\n-debug_opaque(type_desc *t, uint8_t *front) {\n-    rust_task *task = rust_get_current_task();\n-    LOG(task, stdlib, \"debug_opaque\");\n-    debug_tydesc_helper(t);\n-    // Account for alignment. `front` may not indeed be the\n-    // front byte of the passed-in argument\n-    if (((uintptr_t)front % t->align) != 0) {\n-        front = (uint8_t *)align_to((uintptr_t)front, (size_t)t->align);\n-    }\n-    for (uintptr_t i = 0; i < t->size; ++front, ++i) {\n-        LOG(task, stdlib, \"  byte %\" PRIdPTR \": 0x%\" PRIx8, i, *front);\n-    }\n-}\n-\n-extern \"C\" CDECL void\n-debug_box(type_desc *t, rust_opaque_box *box) {\n-    rust_task *task = rust_get_current_task();\n-    LOG(task, stdlib, \"debug_box(0x%\" PRIxPTR \")\", box);\n-    debug_tydesc_helper(t);\n-    LOG(task, stdlib, \"  refcount %\" PRIdPTR,\n-        box->ref_count - 1);  // -1 because we ref'ed for this call\n-    uint8_t *data = (uint8_t *)box_body(box);\n-    for (uintptr_t i = 0; i < t->size; ++i) {\n-        LOG(task, stdlib, \"  byte %\" PRIdPTR \": 0x%\" PRIx8, i, data[i]);\n-    }\n-}\n-\n-struct rust_tag {\n-    uintptr_t discriminant;\n-    uint8_t variant[];\n-};\n-\n-extern \"C\" CDECL void\n-debug_tag(type_desc *t, rust_tag *tag) {\n-    rust_task *task = rust_get_current_task();\n-\n-    LOG(task, stdlib, \"debug_tag\");\n-    debug_tydesc_helper(t);\n-    LOG(task, stdlib, \"  discriminant %\" PRIdPTR, tag->discriminant);\n-\n-    for (uintptr_t i = 0; i < t->size - sizeof(tag->discriminant); ++i)\n-        LOG(task, stdlib, \"  byte %\" PRIdPTR \": 0x%\" PRIx8, i,\n-            tag->variant[i]);\n-}\n-\n-extern \"C\" CDECL void\n-debug_fn(type_desc *t, fn_env_pair *fn) {\n-    rust_task *task = rust_get_current_task();\n-    LOG(task, stdlib, \"debug_fn\");\n-    debug_tydesc_helper(t);\n-    LOG(task, stdlib, \" fn at 0x%\" PRIxPTR, fn->f);\n-    LOG(task, stdlib, \"  env at 0x%\" PRIxPTR, fn->env);\n-    if (fn->env) {\n-        LOG(task, stdlib, \"    refcount %\" PRIdPTR, fn->env->ref_count);\n-    }\n-}\n-\n-extern \"C\" CDECL void *\n-debug_ptrcast(type_desc *from_ty,\n-              type_desc *to_ty,\n-              void *ptr) {\n-    rust_task *task = rust_get_current_task();\n-    LOG(task, stdlib, \"debug_ptrcast from\");\n-    debug_tydesc_helper(from_ty);\n-    LOG(task, stdlib, \"to\");\n-    debug_tydesc_helper(to_ty);\n-    return ptr;\n-}\n-\n extern \"C\" CDECL void *\n debug_get_stk_seg() {\n     rust_task *task = rust_get_current_task();\n@@ -583,11 +496,6 @@ rust_should_log_console() {\n     return (uintptr_t)should_log_console();\n }\n \n-extern \"C\" CDECL void\n-rust_dbg_breakpoint() {\n-    BREAKPOINT_AWESOME;\n-}\n-\n extern \"C\" CDECL rust_sched_id\n rust_osmain_sched_id() {\n     rust_task *task = rust_get_current_task();"}, {"sha": "951d2c36cb8b15d51020fa5543e77d9bacdc7645", "filename": "src/rt/rust_debug.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dbde42e59e6854979085f3b8a949f307b4da8ffa/src%2Frt%2Frust_debug.h", "raw_url": "https://github.com/rust-lang/rust/raw/dbde42e59e6854979085f3b8a949f307b4da8ffa/src%2Frt%2Frust_debug.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_debug.h?ref=dbde42e59e6854979085f3b8a949f307b4da8ffa", "patch": "@@ -17,19 +17,6 @@\n #include <string>\n #include <cstdlib>\n \n-#ifndef _WIN32\n-\n-#include <signal.h>\n-#define BREAKPOINT_AWESOME                      \\\n-    do {                                        \\\n-        signal(SIGTRAP, SIG_IGN);               \\\n-        raise(SIGTRAP);                         \\\n-    } while (0)\n-\n-#else\n-#define BREAKPOINT_AWESOME\n-#endif\n-\n struct rust_task;\n \n namespace debug {"}, {"sha": "75e02d0a103ddae013665dbeee02e8c85426b035", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dbde42e59e6854979085f3b8a949f307b4da8ffa/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/dbde42e59e6854979085f3b8a949f307b4da8ffa/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=dbde42e59e6854979085f3b8a949f307b4da8ffa", "patch": "@@ -1,9 +1,3 @@\n-debug_box\n-debug_fn\n-debug_opaque\n-debug_ptrcast\n-debug_tag\n-debug_tydesc\n debug_get_stk_seg\n debug_abi_1\n debug_abi_2\n@@ -178,7 +172,6 @@ rust_dbg_lock_wait\n rust_dbg_lock_signal\n rust_dbg_call\n rust_dbg_do_nothing\n-rust_dbg_breakpoint\n rust_osmain_sched_id\n rust_task_inhibit_kill\n rust_task_allow_kill"}]}