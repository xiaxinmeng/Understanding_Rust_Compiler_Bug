{"sha": "b35312d4af305e86e360235150cddc263d4adc4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNTMxMmQ0YWYzMDVlODZlMzYwMjM1MTUwY2RkYzI2M2Q0YWRjNGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-29T20:15:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-29T20:15:12Z"}, "message": "internal: ensure that runaway type-inference doesn't block the main loop\n\nWe have a bug where type-checking `per_query_memory_usage` takes a\ncouple of seconds. It also reveals another bug: our type inference is\nnot cancellable.", "tree": {"sha": "76d3d06c68364681c5445caaf74628331704afcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76d3d06c68364681c5445caaf74628331704afcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b35312d4af305e86e360235150cddc263d4adc4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b35312d4af305e86e360235150cddc263d4adc4a", "html_url": "https://github.com/rust-lang/rust/commit/b35312d4af305e86e360235150cddc263d4adc4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b35312d4af305e86e360235150cddc263d4adc4a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2381a54c2f6ff1d97b9d6cb982dde5644f09a396", "url": "https://api.github.com/repos/rust-lang/rust/commits/2381a54c2f6ff1d97b9d6cb982dde5644f09a396", "html_url": "https://github.com/rust-lang/rust/commit/2381a54c2f6ff1d97b9d6cb982dde5644f09a396"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "6279aa572c565f8f0bb2c91bc01f0d33a5c15419", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35312d4af305e86e360235150cddc263d4adc4a/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b35312d4af305e86e360235150cddc263d4adc4a/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=b35312d4af305e86e360235150cddc263d4adc4a", "patch": "@@ -119,6 +119,8 @@ impl<'a> InferenceContext<'a> {\n     }\n \n     fn infer_expr_inner(&mut self, tgt_expr: ExprId, expected: &Expectation) -> Ty {\n+        self.db.check_canceled();\n+\n         let body = Arc::clone(&self.body); // avoid borrow checker problem\n         let ty = match &body[tgt_expr] {\n             Expr::Missing => self.err_ty(),"}]}