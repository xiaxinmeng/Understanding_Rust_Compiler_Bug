{"sha": "e1c284bff74cef5c1684491bc2eb1b0b814332a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYzI4NGJmZjc0Y2VmNWMxNjg0NDkxYmMyZWIxYjBiODE0MzMyYTk=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-06T11:04:31Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-06T11:24:13Z"}, "message": "lintcheck: cleanup, fix --only for git crates, better error msgs", "tree": {"sha": "514853d789264d2db8fe8723799714feb279e9c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/514853d789264d2db8fe8723799714feb279e9c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1c284bff74cef5c1684491bc2eb1b0b814332a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1c284bff74cef5c1684491bc2eb1b0b814332a9", "html_url": "https://github.com/rust-lang/rust/commit/e1c284bff74cef5c1684491bc2eb1b0b814332a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1c284bff74cef5c1684491bc2eb1b0b814332a9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e", "html_url": "https://github.com/rust-lang/rust/commit/9ab505a3c779c7ad9b078d7d24ace4e3b05d7f1e"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "35c2659952c42bef43bcdaeb67a2f96062a644c3", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e1c284bff74cef5c1684491bc2eb1b0b814332a9/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1c284bff74cef5c1684491bc2eb1b0b814332a9/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=e1c284bff74cef5c1684491bc2eb1b0b814332a9", "patch": "@@ -16,7 +16,6 @@ use std::{fmt, fs::write, path::PathBuf};\n use clap::ArgMatches;\n use serde::{Deserialize, Serialize};\n use serde_json::Value;\n-//use git2::Repository;\n \n // use this to store the crates when interacting with the crates.toml file\n #[derive(Debug, Serialize, Deserialize)]\n@@ -42,7 +41,8 @@ enum CrateSource {\n }\n \n // represents the extracted sourcecode of a crate\n-// we actually don't need to special-case git repos here because it does not matter for clippy, yay! (clippy only needs a simple path)\n+// we actually don't need to special-case git repos here because it does not matter for clippy, yay!\n+// (clippy only needs a simple path)\n #[derive(Debug)]\n struct Crate {\n     version: String,\n@@ -229,7 +229,10 @@ fn read_crates() -> Vec<CrateSource> {\n         if tk.versions.is_some() && (tk.git_url.is_some() || tk.git_hash.is_some())\n             || tk.git_hash.is_some() != tk.git_url.is_some()\n         {\n-            dbg!(tk);\n+            dbg!(&tk);\n+            if tk.git_hash.is_some() != tk.git_url.is_some() {\n+                panic!(\"Encountered TomlCrate with only one of git_hash and git_url!\")\n+            }\n             unreachable!(\"Failed to translate TomlCrate into CrateSource!\");\n         }\n     });\n@@ -287,14 +290,20 @@ pub fn run(clap_config: &ArgMatches) {\n     let crates = read_crates();\n \n     let clippy_warnings: Vec<ClippyWarning> = if let Some(only_one_crate) = clap_config.value_of(\"only\") {\n-        // if we don't have the specified crated in the .toml, throw an error\n-        /*   if !crates.iter().any(|krate| krate.name == only_one_crate) {\n+        // if we don't have the specified crate in the .toml, throw an error\n+        if !crates.iter().any(|krate| {\n+            let name = match krate {\n+                CrateSource::CratesIo { name, .. } => name,\n+                CrateSource::Git { name, .. } => name,\n+            };\n+            name == only_one_crate\n+        }) {\n             eprintln!(\n                 \"ERROR: could not find crate '{}' in clippy_dev/lintcheck_crates.toml\",\n                 only_one_crate\n             );\n             std::process::exit(1);\n-        } */ //@FIXME\n+        }\n \n         // only check a single crate that was passed via cmdline\n         crates"}, {"sha": "3bc7758033b2836eb6035a54f31822b4617dffbc", "filename": "lintcheck-logs/logs.txt", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e1c284bff74cef5c1684491bc2eb1b0b814332a9/lintcheck-logs%2Flogs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e1c284bff74cef5c1684491bc2eb1b0b814332a9/lintcheck-logs%2Flogs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck-logs%2Flogs.txt?ref=e1c284bff74cef5c1684491bc2eb1b0b814332a9", "patch": "@@ -1,4 +1,4 @@\n-clippy 0.1.51 (3e4179766 2021-02-03)\n+clippy 0.1.51 (7f5bb7fd0 2021-02-06)\n \n cargo-0.49.0//home/matthias/.rustup/toolchains/nightly-2021-02-03-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:409:34 clippy::match_same_arms \"this `match` has identical arm bodies\"\n cargo-0.49.0/build.rs:1:null clippy::cargo_common_metadata \"package `cargo` is missing `package.categories` metadata\"\n@@ -855,6 +855,7 @@ cargo-0.49.0/src/cargo/ops/cargo_install.rs:37:1 clippy::missing_errors_doc \"doc\n cargo-0.49.0/src/cargo/ops/cargo_install.rs:454:22 clippy::redundant_closure_for_method_calls \"redundant closure found\"\n cargo-0.49.0/src/cargo/ops/cargo_install.rs:483:5 clippy::items_after_statements \"adding items after statements is confusing, since items exist from the start of the scope\"\n cargo-0.49.0/src/cargo/ops/cargo_install.rs:683:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+cargo-0.49.0/src/cargo/ops/cargo_install.rs:708:5 clippy::manual_flatten \"unnecessary `if let` since only the `Some` variant of the iterator element is used\"\n cargo-0.49.0/src/cargo/ops/cargo_new.rs:101:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n cargo-0.49.0/src/cargo/ops/cargo_new.rs:245:5 clippy::items_after_statements \"adding items after statements is confusing, since items exist from the start of the scope\"\n cargo-0.49.0/src/cargo/ops/cargo_new.rs:251:5 clippy::items_after_statements \"adding items after statements is confusing, since items exist from the start of the scope\"\n@@ -3216,7 +3217,7 @@ ripgrep-12.1.1/crates/core/search.rs:533:5 clippy::cast_precision_loss \"casting\n ripgrep-12.1.1/crates/core/subject.rs:20:1 clippy::module_name_repetitions \"item name starts with its containing module's name\"\n ripgrep-12.1.1/crates/core/subject.rs:4:1 clippy::single_component_path_imports \"this import is redundant\"\n syn-1.0.54/build.rs:1:null clippy::cargo_common_metadata \"package `syn` is missing `package.keywords` metadata\"\n-syn-1.0.54/build.rs:1:null clippy::multiple_crate_versions \"could not read cargo metadata: `cargo metadata` exited with an error:  Downloading crates ...\\n  Downloaded httparse v1.3.5\\n  Downloaded tokio v0.2.25\\n  Downloaded syn-test-suite v0.0.0\\nerror: failed to verify the checksum of `syn-test-suite v0.0.0`\"\n+syn-1.0.54/build.rs:1:null clippy::multiple_crate_versions \"could not read cargo metadata: `cargo metadata` exited with an error:  Downloading crates ...\\n  Downloaded syn-test-suite v0.0.0\\nerror: failed to verify the checksum of `syn-test-suite v0.0.0`\"\n syn-1.0.54/src/generics.rs:174:5 clippy::missing_panics_doc \"docs for function which may panic missing `# Panics` section\"\n syn-1.0.54/src/lib.rs:1:null clippy::cargo_common_metadata \"package `syn` is missing `package.keywords` metadata\"\n syn-1.0.54/src/lib.rs:1:null clippy::multiple_crate_versions \"could not read cargo metadata: `cargo metadata` exited with an error:  Downloading crates ...\\n  Downloaded syn-test-suite v0.0.0\\nerror: failed to verify the checksum of `syn-test-suite v0.0.0`\"\n@@ -3425,6 +3426,7 @@ clippy::explicit_deref_methods 1\n clippy::from_iter_instead_of_collect 1\n clippy::from_over_into 1\n clippy::int_plus_one 1\n+clippy::manual_flatten 1\n clippy::manual_saturating_arithmetic 1\n clippy::mem_replace_with_default 1\n clippy::nonminimal_bool 1"}]}