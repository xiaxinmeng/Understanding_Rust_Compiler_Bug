{"sha": "8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlZjFlM2I3N2YwZjBjMzY1YzZjMTFlYmM1MDk1OTk3YzhmMGNkMTU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-08-13T20:06:25Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-08-16T02:35:52Z"}, "message": "test: Fix tests for requiring issues", "tree": {"sha": "ddb722632e95d50c5381a2c9a39028ec36eee825", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddb722632e95d50c5381a2c9a39028ec36eee825"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "html_url": "https://github.com/rust-lang/rust/commit/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2972b771344f5f16df0468d792df178614740b56", "url": "https://api.github.com/repos/rust-lang/rust/commits/2972b771344f5f16df0468d792df178614740b56", "html_url": "https://github.com/rust-lang/rust/commit/2972b771344f5f16df0468d792df178614740b56"}], "stats": {"total": 184, "additions": 97, "deletions": 87}, "files": [{"sha": "4179cbe8a7bac6b905848e0cc0bd1a7a10cc8a9e", "filename": "src/liballoc_jemalloc/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Fliballoc_jemalloc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Fliballoc_jemalloc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Flib.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -16,7 +16,8 @@\n #![cfg_attr(not(stage0), allocator)]\n #![unstable(feature = \"alloc_jemalloc\",\n             reason = \"this library is unlikely to be stabilized in its current \\\n-                      form or name\")]\n+                      form or name\",\n+            issue = \"27783\")]\n #![feature(allocator)]\n #![feature(libc)]\n #![feature(no_std)]"}, {"sha": "aff4bea19e0f306636d3622df74bc1962bcc1648", "filename": "src/liballoc_system/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Fliballoc_system%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Fliballoc_system%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_system%2Flib.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -16,7 +16,8 @@\n #![cfg_attr(not(stage0), allocator)]\n #![unstable(feature = \"alloc_system\",\n             reason = \"this library is unlikely to be stabilized in its current \\\n-                      form or name\")]\n+                      form or name\",\n+            issue = \"27783\")]\n #![feature(allocator)]\n #![feature(libc)]\n #![feature(no_std)]"}, {"sha": "9fe6527d89e8910543d5e256c563ddd8343893e1", "filename": "src/libstd/sys/windows/ext/fs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -20,7 +20,8 @@ use sys_common::{AsInnerMut, AsInner};\n \n /// Windows-specific extensions to `OpenOptions`\n #[unstable(feature = \"open_options_ext\",\n-           reason = \"may require more thought/methods\")]\n+           reason = \"may require more thought/methods\",\n+           issue = \"27720\")]\n pub trait OpenOptionsExt {\n     /// Overrides the `dwDesiredAccess` argument to the call to `CreateFile`\n     /// with the specified value."}, {"sha": "f4e6f6d7511a8a20f012cfa0b499e031d454933d", "filename": "src/test/auxiliary/inherited_stability.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Finherited_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Finherited_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Finherited_stability.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n #![crate_name=\"inherited_stability\"]\n #![crate_type = \"lib\"]\n-#![unstable(feature = \"test_feature\")]\n+#![unstable(feature = \"test_feature\", issue = \"0\")]\n #![feature(staged_api)]\n #![staged_api]\n \n@@ -26,7 +26,7 @@ pub mod stable_mod {\n     pub fn stable() {}\n }\n \n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n pub mod unstable_mod {\n     #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n     #[deprecated(since = \"1.0.0\")]"}, {"sha": "d9335eb567f693afe8ea9011695a2e2c9672174a", "filename": "src/test/auxiliary/internal_unstable.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Finternal_unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Finternal_unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Finternal_unstable.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -12,24 +12,24 @@\n #![staged_api]\n #![stable(feature = \"stable\", since = \"1.0.0\")]\n \n-#[unstable(feature = \"function\")]\n+#[unstable(feature = \"function\", issue = \"0\")]\n pub fn unstable() {}\n \n \n #[stable(feature = \"stable\", since = \"1.0.0\")]\n pub struct Foo {\n-    #[unstable(feature = \"struct_field\")]\n+    #[unstable(feature = \"struct_field\", issue = \"0\")]\n     pub x: u8\n }\n \n impl Foo {\n-    #[unstable(feature = \"method\")]\n+    #[unstable(feature = \"method\", issue = \"0\")]\n     pub fn method(&self) {}\n }\n \n #[stable(feature = \"stable\", since = \"1.0.0\")]\n pub struct Bar {\n-    #[unstable(feature = \"struct2_field\")]\n+    #[unstable(feature = \"struct2_field\", issue = \"0\")]\n     pub x: u8\n }\n "}, {"sha": "51fad3ce3cd6939f0df2f8922e04c80e3910d3ed", "filename": "src/test/auxiliary/lint_output_format.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Flint_output_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Flint_output_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_output_format.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -12,20 +12,20 @@\n #![crate_type = \"lib\"]\n #![feature(staged_api)]\n #![staged_api]\n-#![unstable(feature = \"test_feature\")]\n+#![unstable(feature = \"test_feature\", issue = \"0\")]\n \n #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n #[deprecated(since = \"1.0.0\")]\n pub fn foo() -> usize {\n     20\n }\n \n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n pub fn bar() -> usize {\n     40\n }\n \n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n pub fn baz() -> usize {\n     30\n }"}, {"sha": "60097393a259615a6827367f4e995b4f07b8ef3d", "filename": "src/test/auxiliary/lint_stability.rs", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_stability.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -20,16 +20,16 @@ pub fn deprecated() {}\n #[deprecated(since = \"1.0.0\", reason = \"text\")]\n pub fn deprecated_text() {}\n \n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n #[deprecated(since = \"1.0.0\")]\n pub fn deprecated_unstable() {}\n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n #[deprecated(since = \"1.0.0\", reason = \"text\")]\n pub fn deprecated_unstable_text() {}\n \n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n pub fn unstable() {}\n-#[unstable(feature = \"test_feature\", reason = \"text\")]\n+#[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n pub fn unstable_text() {}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -48,16 +48,16 @@ impl MethodTester {\n     #[deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn method_deprecated_text(&self) {}\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\")]\n     pub fn method_deprecated_unstable(&self) {}\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn method_deprecated_unstable_text(&self) {}\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     pub fn method_unstable(&self) {}\n-    #[unstable(feature = \"test_feature\", reason = \"text\")]\n+    #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n     pub fn method_unstable_text(&self) {}\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -75,16 +75,16 @@ pub trait Trait {\n     #[deprecated(since = \"1.0.0\", reason = \"text\")]\n     fn trait_deprecated_text(&self) {}\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\")]\n     fn trait_deprecated_unstable(&self) {}\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\", reason = \"text\")]\n     fn trait_deprecated_unstable_text(&self) {}\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     fn trait_unstable(&self) {}\n-    #[unstable(feature = \"test_feature\", reason = \"text\")]\n+    #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n     fn trait_unstable_text(&self) {}\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -95,20 +95,20 @@ pub trait Trait {\n \n impl Trait for MethodTester {}\n \n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n pub trait UnstableTrait { fn dummy(&self) { } }\n \n #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n #[deprecated(since = \"1.0.0\")]\n pub struct DeprecatedStruct {\n     #[stable(feature = \"test_feature\", since = \"1.0.0\")] pub i: isize\n }\n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n #[deprecated(since = \"1.0.0\")]\n pub struct DeprecatedUnstableStruct {\n     #[stable(feature = \"test_feature\", since = \"1.0.0\")] pub i: isize\n }\n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n pub struct UnstableStruct {\n     #[stable(feature = \"test_feature\", since = \"1.0.0\")] pub i: isize\n }\n@@ -120,10 +120,10 @@ pub struct StableStruct {\n #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n #[deprecated(since = \"1.0.0\")]\n pub struct DeprecatedUnitStruct;\n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n #[deprecated(since = \"1.0.0\")]\n pub struct DeprecatedUnstableUnitStruct;\n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n pub struct UnstableUnitStruct;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct StableUnitStruct;\n@@ -133,10 +133,10 @@ pub enum Enum {\n     #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n     #[deprecated(since = \"1.0.0\")]\n     DeprecatedVariant,\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\")]\n     DeprecatedUnstableVariant,\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     UnstableVariant,\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -146,10 +146,10 @@ pub enum Enum {\n #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n #[deprecated(since = \"1.0.0\")]\n pub struct DeprecatedTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);\n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n #[deprecated(since = \"1.0.0\")]\n pub struct DeprecatedUnstableTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);\n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n pub struct UnstableTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct StableTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);"}, {"sha": "b45af89dd3b73a47d8702c474d73061be1a98888", "filename": "src/test/auxiliary/lint_stability_fields.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Flint_stability_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Flint_stability_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_stability_fields.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -16,45 +16,47 @@\n pub struct Stable {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub inherit: u8, // it's a lie (stable doesn't inherit)\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     pub override1: u8,\n     #[deprecated(since = \"1.0.0\")]\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     pub override2: u8,\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Stable2(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub u8,\n-                   #[unstable(feature = \"test_feature\")] pub u8,\n-                   #[unstable(feature = \"test_feature\")] #[deprecated(since = \"1.0.0\")] pub u8);\n+                   #[unstable(feature = \"test_feature\", issue = \"0\")] pub u8,\n+                   #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                   #[deprecated(since = \"1.0.0\")] pub u8);\n \n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n pub struct Unstable {\n     pub inherit: u8,\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub override1: u8,\n     #[deprecated(since = \"1.0.0\")]\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     pub override2: u8,\n }\n \n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n pub struct Unstable2(pub u8,\n                      #[stable(feature = \"rust1\", since = \"1.0.0\")] pub u8,\n-                     #[unstable(feature = \"test_feature\")] #[deprecated(since = \"1.0.0\")] pub u8);\n+                     #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                     #[deprecated(since = \"1.0.0\")] pub u8);\n \n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n #[deprecated(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Deprecated {\n     pub inherit: u8,\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub override1: u8,\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     pub override2: u8,\n }\n \n-#[unstable(feature = \"test_feature\")]\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n #[deprecated(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Deprecated2(pub u8,\n                        #[stable(feature = \"rust1\", since = \"1.0.0\")] pub u8,\n-                       #[unstable(feature = \"test_feature\")] pub u8);\n+                       #[unstable(feature = \"test_feature\", issue = \"0\")] pub u8);"}, {"sha": "8277280f0696f239e8c3f3748987ebdb9700c749", "filename": "src/test/auxiliary/stability_cfg2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Fstability_cfg2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fauxiliary%2Fstability_cfg2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fstability_cfg2.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags:--cfg foo\n \n-#![cfg_attr(foo, unstable(feature = \"test_feature\"))]\n+#![cfg_attr(foo, unstable(feature = \"test_feature\", issue = \"0\"))]\n #![cfg_attr(not(foo), stable(feature = \"test_feature\", since = \"1.0.0\"))]\n #![feature(staged_api)]\n #![staged_api]"}, {"sha": "7e675ca0bc40d5587f19461c5cbf34273418a90f", "filename": "src/test/compile-fail/lint-stability-fields.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fcompile-fail%2Flint-stability-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fcompile-fail%2Flint-stability-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability-fields.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -187,48 +187,50 @@ mod this_crate {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     struct Stable {\n         inherit: u8,\n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         override1: u8,\n         #[deprecated(since = \"1.0.0\")]\n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         override2: u8,\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     struct Stable2(u8,\n                    #[stable(feature = \"rust1\", since = \"1.0.0\")] u8,\n-                   #[unstable(feature = \"test_feature\")] #[deprecated(since = \"1.0.0\")] u8);\n+                   #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                   #[deprecated(since = \"1.0.0\")] u8);\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     struct Unstable {\n         inherit: u8,\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         override1: u8,\n         #[deprecated(since = \"1.0.0\")]\n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         override2: u8,\n     }\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     struct Unstable2(u8,\n                      #[stable(feature = \"rust1\", since = \"1.0.0\")] u8,\n-                     #[unstable(feature = \"test_feature\")] #[deprecated(since = \"1.0.0\")] u8);\n+                     #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                     #[deprecated(since = \"1.0.0\")] u8);\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(feature = \"rust1\", since = \"1.0.0\")]\n     struct Deprecated {\n         inherit: u8,\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         override1: u8,\n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         override2: u8,\n     }\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(feature = \"rust1\", since = \"1.0.0\")]\n     struct Deprecated2(u8,\n                        #[stable(feature = \"rust1\", since = \"1.0.0\")] u8,\n-                       #[unstable(feature = \"test_feature\")] u8);\n+                       #[unstable(feature = \"test_feature\", issue = \"0\")] u8);\n \n     pub fn foo() {\n         let x = Stable {"}, {"sha": "6cc73ded9750f77e473d297a9e64beb69b01dd57", "filename": "src/test/compile-fail/lint-stability.rs", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -257,16 +257,16 @@ mod inheritance {\n }\n \n mod this_crate {\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\")]\n     pub fn deprecated() {}\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn deprecated_text() {}\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     pub fn unstable() {}\n-    #[unstable(feature = \"test_feature\", reason = \"text\")]\n+    #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n     pub fn unstable_text() {}\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -278,16 +278,16 @@ mod this_crate {\n     pub struct MethodTester;\n \n     impl MethodTester {\n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         #[deprecated(since = \"1.0.0\")]\n         pub fn method_deprecated(&self) {}\n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         #[deprecated(since = \"1.0.0\", reason = \"text\")]\n         pub fn method_deprecated_text(&self) {}\n \n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         pub fn method_unstable(&self) {}\n-        #[unstable(feature = \"test_feature\", reason = \"text\")]\n+        #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n         pub fn method_unstable_text(&self) {}\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -297,16 +297,16 @@ mod this_crate {\n     }\n \n     pub trait Trait {\n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         #[deprecated(since = \"1.0.0\")]\n         fn trait_deprecated(&self) {}\n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         #[deprecated(since = \"1.0.0\", reason = \"text\")]\n         fn trait_deprecated_text(&self) {}\n \n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         fn trait_unstable(&self) {}\n-        #[unstable(feature = \"test_feature\", reason = \"text\")]\n+        #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n         fn trait_unstable_text(&self) {}\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -317,12 +317,12 @@ mod this_crate {\n \n     impl Trait for MethodTester {}\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\")]\n     pub struct DeprecatedStruct {\n         #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n     }\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     pub struct UnstableStruct {\n         #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n     }\n@@ -331,29 +331,29 @@ mod this_crate {\n         #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n     }\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\")]\n     pub struct DeprecatedUnitStruct;\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     pub struct UnstableUnitStruct;\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableUnitStruct;\n \n     pub enum Enum {\n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         #[deprecated(since = \"1.0.0\")]\n         DeprecatedVariant,\n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         UnstableVariant,\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         StableVariant,\n     }\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\")]\n     pub struct DeprecatedTupleStruct(isize);\n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     pub struct UnstableTupleStruct(isize);\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableTupleStruct(isize);\n@@ -471,23 +471,23 @@ mod this_crate {\n         foo.trait_stable();\n     }\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\")]\n     fn test_fn_body() {\n         fn fn_in_body() {}\n         fn_in_body();\n     }\n \n     impl MethodTester {\n-        #[unstable(feature = \"test_feature\")]\n+        #[unstable(feature = \"test_feature\", issue = \"0\")]\n         #[deprecated(since = \"1.0.0\")]\n         fn test_method_body(&self) {\n             fn fn_in_body() {}\n             fn_in_body();\n         }\n     }\n \n-    #[unstable(feature = \"test_feature\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n     #[deprecated(since = \"1.0.0\")]\n     pub trait DeprecatedTrait {\n         fn dummy(&self) { }"}, {"sha": "1f68b7dbf5e3a19e9cce837581813ee3be1ccff2", "filename": "src/test/compile-fail/missing-stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fcompile-fail%2Fmissing-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fcompile-fail%2Fmissing-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmissing-stability.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -19,7 +19,7 @@ pub fn unmarked() {\n     ()\n }\n \n-#[unstable(feature = \"foo\")]\n+#[unstable(feature = \"foo\", issue = \"0\")]\n pub mod foo {\n     // #[unstable] is inherited\n     pub fn unmarked() {}"}, {"sha": "00c5be0f211e3d7b52e3bade9bf6c95008390fe4", "filename": "src/test/compile-fail/stability-attribute-sanity.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -56,11 +56,14 @@ mod bogus_attribute_types_2 {\n }\n \n mod missing_feature_names {\n-    #[unstable(since = \"a\")] //~ ERROR missing 'feature'\n+    #[unstable(since = \"a\", issue = \"0\")] //~ ERROR missing 'feature'\n     fn f1() { }\n \n+    #[unstable(feature = \"a\")]\n+    fn f2() { } //~ ERROR need to point to an issue\n+\n     #[stable(since = \"a\")] //~ ERROR missing 'feature'\n-    fn f2() { }\n+    fn f3() { }\n }\n \n mod missing_version {\n@@ -72,12 +75,12 @@ mod missing_version {\n     fn f2() { }\n }\n \n-#[unstable(feature = \"a\", since = \"b\")]\n+#[unstable(feature = \"a\", since = \"b\", issue = \"0\")]\n #[stable(feature = \"a\", since = \"b\")]\n fn multiple1() { } //~ ERROR multiple stability levels\n \n-#[unstable(feature = \"a\", since = \"b\")]\n-#[unstable(feature = \"a\", since = \"b\")]\n+#[unstable(feature = \"a\", since = \"b\", issue = \"0\")]\n+#[unstable(feature = \"a\", since = \"b\", issue = \"0\")]\n fn multiple2() { } //~ ERROR multiple stability levels\n \n #[stable(feature = \"a\", since = \"b\")]"}, {"sha": "9c24694951a5054e41b1a3b1019a13cfc2faeb37", "filename": "src/test/run-make/allow-warnings-cmdline-stability/bar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2Fbar.rs?ref=8ef1e3b77f0f0c365c6c11ebc5095997c8f0cd15", "patch": "@@ -11,6 +11,6 @@\n #![crate_type = \"lib\"]\n #![feature(staged_api)]\n #![staged_api]\n-#![unstable(feature = \"test_feature\")]\n+#![unstable(feature = \"test_feature\", issue = \"0\")]\n \n pub fn baz() { }"}]}