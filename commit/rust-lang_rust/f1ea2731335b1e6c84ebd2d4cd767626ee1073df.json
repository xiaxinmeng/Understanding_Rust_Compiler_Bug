{"sha": "f1ea2731335b1e6c84ebd2d4cd767626ee1073df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZWEyNzMxMzM1YjFlNmM4NGViZDJkNGNkNzY3NjI2ZWUxMDczZGY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-29T12:10:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-02T20:33:47Z"}, "message": "Miri engine: stronger type-based sanity check for assignments", "tree": {"sha": "24b27b0dfbd52998f5df55303ace716fa68a7755", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24b27b0dfbd52998f5df55303ace716fa68a7755"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1ea2731335b1e6c84ebd2d4cd767626ee1073df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ea2731335b1e6c84ebd2d4cd767626ee1073df", "html_url": "https://github.com/rust-lang/rust/commit/f1ea2731335b1e6c84ebd2d4cd767626ee1073df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1ea2731335b1e6c84ebd2d4cd767626ee1073df/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "537ccdf3ac44c8c7a8d36cbdbe6fb224afabb7ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/537ccdf3ac44c8c7a8d36cbdbe6fb224afabb7ae", "html_url": "https://github.com/rust-lang/rust/commit/537ccdf3ac44c8c7a8d36cbdbe6fb224afabb7ae"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "b16c7ffbffd9f0335160279cae14f00571fefd24", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f1ea2731335b1e6c84ebd2d4cd767626ee1073df/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ea2731335b1e6c84ebd2d4cd767626ee1073df/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=f1ea2731335b1e6c84ebd2d4cd767626ee1073df", "patch": "@@ -283,6 +283,18 @@ impl<'tcx, Tag: ::std::fmt::Debug> PlaceTy<'tcx, Tag> {\n     }\n }\n \n+/// Test if it is valid for a MIR assignment to assign `src`-typed place to `dest`-typed value.\n+fn mir_assign_valid_types<'tcx>(src: Ty<'tcx>, dest: Ty<'tcx>) -> bool {\n+    src == dest\n+        || match (&src.kind, &dest.kind) {\n+            // After MIR optimizations, there can be assignments that change reference mutability.\n+            (ty::Ref(_, src_pointee, _), ty::Ref(_, dest_pointee, _)) => {\n+                src_pointee == dest_pointee\n+            }\n+            _ => false,\n+        }\n+}\n+\n // separating the pointer tag for `impl Trait`, see https://github.com/rust-lang/rust/issues/54385\n impl<'mir, 'tcx, Tag, M> InterpCx<'mir, 'tcx, M>\n where\n@@ -869,10 +881,10 @@ where\n         // We do NOT compare the types for equality, because well-typed code can\n         // actually \"transmute\" `&mut T` to `&T` in an assignment without a cast.\n         assert!(\n-            src.layout.layout == dest.layout.layout,\n-            \"Layout mismatch when copying!\\nsrc: {:#?}\\ndest: {:#?}\",\n-            src,\n-            dest\n+            mir_assign_valid_types(src.layout.ty, dest.layout.ty),\n+            \"type mismatch when copying!\\nsrc: {:?}, dest: {:?}\",\n+            src.layout.ty,\n+            dest.layout.ty,\n         );\n \n         // Let us see if the layout is simple so we take a shortcut, avoid force_allocation.\n@@ -923,7 +935,7 @@ where\n         src: OpTy<'tcx, M::PointerTag>,\n         dest: PlaceTy<'tcx, M::PointerTag>,\n     ) -> InterpResult<'tcx> {\n-        if src.layout.layout == dest.layout.layout {\n+        if mir_assign_valid_types(src.layout.ty, dest.layout.ty) {\n             // Fast path: Just use normal `copy_op`\n             return self.copy_op(src, dest);\n         }"}]}