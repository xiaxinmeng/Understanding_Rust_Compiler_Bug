{"sha": "d4a22fc801f4768990c7e62241bea5fe4ff92ead", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YTIyZmM4MDFmNDc2ODk5MGM3ZTYyMjQxYmVhNWZlNGZmOTJlYWQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-03T16:48:41Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-03T16:54:03Z"}, "message": "Update `DefMap` and `block_def_map` docs", "tree": {"sha": "699185021f8a379fb50707ec41e0cea286bc842d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/699185021f8a379fb50707ec41e0cea286bc842d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4a22fc801f4768990c7e62241bea5fe4ff92ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4a22fc801f4768990c7e62241bea5fe4ff92ead", "html_url": "https://github.com/rust-lang/rust/commit/d4a22fc801f4768990c7e62241bea5fe4ff92ead", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4a22fc801f4768990c7e62241bea5fe4ff92ead/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd84df9e1bb231f7aa4bcf760e0aff0a6bd10e9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd84df9e1bb231f7aa4bcf760e0aff0a6bd10e9f", "html_url": "https://github.com/rust-lang/rust/commit/fd84df9e1bb231f7aa4bcf760e0aff0a6bd10e9f"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "6c01f1ed00f7b9f6fd37919f3d4a89f9e3a22659", "filename": "crates/hir_def/src/db.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d4a22fc801f4768990c7e62241bea5fe4ff92ead/crates%2Fhir_def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a22fc801f4768990c7e62241bea5fe4ff92ead/crates%2Fhir_def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdb.rs?ref=d4a22fc801f4768990c7e62241bea5fe4ff92ead", "patch": "@@ -58,6 +58,21 @@ pub trait DefDatabase: InternDatabase + AstDatabase + Upcast<dyn AstDatabase> {\n     #[salsa::invoke(DefMap::crate_def_map_query)]\n     fn crate_def_map_query(&self, krate: CrateId) -> Arc<DefMap>;\n \n+    /// Computes the block-level `DefMap`, returning `None` when `block` doesn't contain any inner\n+    /// items directly.\n+    ///\n+    /// For example:\n+    ///\n+    /// ```\n+    /// fn f() { // (0)\n+    ///     { // (1)\n+    ///         fn inner() {}\n+    ///     }\n+    /// }\n+    /// ```\n+    ///\n+    /// The `block_def_map` for block 0 would return `None`, while `block_def_map` of block 1 would\n+    /// return a `DefMap` containing `inner`.\n     #[salsa::invoke(DefMap::block_def_map_query)]\n     fn block_def_map(&self, block: BlockId) -> Option<Arc<DefMap>>;\n "}, {"sha": "ef54f7d089dc984ee81ed7c549d4abf41b2b9999", "filename": "crates/hir_def/src/nameres.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d4a22fc801f4768990c7e62241bea5fe4ff92ead/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a22fc801f4768990c7e62241bea5fe4ff92ead/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres.rs?ref=d4a22fc801f4768990c7e62241bea5fe4ff92ead", "patch": "@@ -73,7 +73,15 @@ use crate::{\n     AstId, BlockId, BlockLoc, LocalModuleId, ModuleDefId, ModuleId,\n };\n \n-/// Contains all top-level defs from a macro-expanded crate\n+/// Contains the results of (early) name resolution.\n+///\n+/// A `DefMap` stores the module tree and the definitions that are in scope in every module after\n+/// item-level macros have been expanded.\n+///\n+/// Every crate has a primary `DefMap` whose root is the crate's main file (`main.rs`/`lib.rs`),\n+/// computed by the `crate_def_map` query. Additionally, every block expression introduces the\n+/// opportunity to write arbitrary item and module hierarchies, and thus gets its own `DefMap` that\n+/// is computed by the `block_def_map` query.\n #[derive(Debug, PartialEq, Eq)]\n pub struct DefMap {\n     _c: Count<Self>,\n@@ -91,6 +99,7 @@ pub struct DefMap {\n     diagnostics: Vec<DefDiagnostic>,\n }\n \n+/// For `DefMap`s computed for a block expression, this stores its location in the parent map.\n #[derive(Debug, PartialEq, Eq)]\n struct BlockInfo {\n     block: BlockId,"}]}