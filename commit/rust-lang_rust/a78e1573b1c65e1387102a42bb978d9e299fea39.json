{"sha": "a78e1573b1c65e1387102a42bb978d9e299fea39", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3OGUxNTczYjFjNjVlMTM4NzEwMmE0MmJiOTc4ZDllMjk5ZmVhMzk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-10T17:14:02Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-10T17:14:02Z"}, "message": "Better fn signature", "tree": {"sha": "dcd3d5c06fa8f677ee05811fd39e13c911072933", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcd3d5c06fa8f677ee05811fd39e13c911072933"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a78e1573b1c65e1387102a42bb978d9e299fea39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a78e1573b1c65e1387102a42bb978d9e299fea39", "html_url": "https://github.com/rust-lang/rust/commit/a78e1573b1c65e1387102a42bb978d9e299fea39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a78e1573b1c65e1387102a42bb978d9e299fea39/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd8422643ad381fa603d569d0553723c1aa4cd1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd8422643ad381fa603d569d0553723c1aa4cd1e", "html_url": "https://github.com/rust-lang/rust/commit/bd8422643ad381fa603d569d0553723c1aa4cd1e"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "4157ce8ea171185a8d96510e1e0a1b55e6665a9f", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a78e1573b1c65e1387102a42bb978d9e299fea39/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a78e1573b1c65e1387102a42bb978d9e299fea39/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=a78e1573b1c65e1387102a42bb978d9e299fea39", "patch": "@@ -235,8 +235,10 @@ pub(crate) fn semantic_tokens(\n     let mut builder = semantic_tokens::SemanticTokensBuilder::default();\n \n     for highlight_range in highlights {\n-        let (token_index, modifier_bitset) =\n-            token_type_index_modifiers_bitself(highlight_range.highlight);\n+        let (type_, mods) = semantic_token_type_and_modifiers(highlight_range.highlight);\n+        let token_index = semantic_tokens::type_index(type_);\n+        let modifier_bitset = mods.0;\n+\n         for mut text_range in line_index.lines(highlight_range.range) {\n             if text[text_range].ends_with('\\n') {\n                 text_range =\n@@ -250,7 +252,9 @@ pub(crate) fn semantic_tokens(\n     builder.build()\n }\n \n-fn token_type_index_modifiers_bitself(highlight: Highlight) -> (u32, u32) {\n+fn semantic_token_type_and_modifiers(\n+    highlight: Highlight,\n+) -> (lsp_types::SemanticTokenType, semantic_tokens::ModifierSet) {\n     let mut mods = semantic_tokens::ModifierSet::default();\n     let type_ = match highlight.tag {\n         HighlightTag::Struct => lsp_types::SemanticTokenType::STRUCT,\n@@ -300,7 +304,7 @@ fn token_type_index_modifiers_bitself(highlight: Highlight) -> (u32, u32) {\n         mods |= modifier;\n     }\n \n-    (semantic_tokens::type_index(type_), mods.0)\n+    (type_, mods)\n }\n \n pub(crate) fn folding_range("}]}