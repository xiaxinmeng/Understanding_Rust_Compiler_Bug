{"sha": "e607d76564cf01247b247e0e83c7abdc4bb1fbee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MDdkNzY1NjRjZjAxMjQ3YjI0N2UwZTgzYzdhYmRjNGJiMWZiZWU=", "commit": {"author": {"name": "Carol Nichols", "email": "carol.nichols@gmail.com", "date": "2015-05-06T02:32:20Z"}, "committer": {"name": "Carol Nichols", "email": "carol.nichols@gmail.com", "date": "2015-05-11T02:47:31Z"}, "message": "Fill in more parts of the grammar for Expressions", "tree": {"sha": "489a8c655de10c6dcfaca4b7892d4e2ee72bfc72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/489a8c655de10c6dcfaca4b7892d4e2ee72bfc72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e607d76564cf01247b247e0e83c7abdc4bb1fbee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e607d76564cf01247b247e0e83c7abdc4bb1fbee", "html_url": "https://github.com/rust-lang/rust/commit/e607d76564cf01247b247e0e83c7abdc4bb1fbee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e607d76564cf01247b247e0e83c7abdc4bb1fbee/comments", "author": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "committer": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab913c881cfd559591fcde3ca1c82c784c5aab87", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab913c881cfd559591fcde3ca1c82c784c5aab87", "html_url": "https://github.com/rust-lang/rust/commit/ab913c881cfd559591fcde3ca1c82c784c5aab87"}], "stats": {"total": 59, "additions": 45, "deletions": 14}, "files": [{"sha": "a752ce47b1ba89028df3315b96b36a38b062ef37", "filename": "src/doc/grammar.md", "status": "modified", "additions": 45, "deletions": 14, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/e607d76564cf01247b247e0e83c7abdc4bb1fbee/src%2Fdoc%2Fgrammar.md", "raw_url": "https://github.com/rust-lang/rust/raw/e607d76564cf01247b247e0e83c7abdc4bb1fbee/src%2Fdoc%2Fgrammar.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fgrammar.md?ref=e607d76564cf01247b247e0e83c7abdc4bb1fbee", "patch": "@@ -463,7 +463,15 @@ expr_stmt : expr ';' ;\n \n ## Expressions\n \n-**FIXME:** grammar?\n+```antlr\n+expr : literal | path | tuple_expr | unit_expr | struct_expr\n+     | block_expr | method_call_expr | field_expr | array_expr\n+     | idx_expr | range_expr | unop_expr | binop_expr\n+     | paren_expr | call_expr | lambda_expr | while_expr\n+     | loop_expr | break_expr | continue_expr | for_expr\n+     | if_expr | match_expr | if_let_expr | while_let_expr\n+     | return_expr ;\n+```\n \n #### Lvalues, rvalues and temporaries\n \n@@ -475,19 +483,23 @@ expr_stmt : expr ';' ;\n \n ### Literal expressions\n \n-**FIXME:** grammar?\n+See [Literals](#literals).\n \n ### Path expressions\n \n-**FIXME:** grammar?\n+See [Paths](#paths).\n \n ### Tuple expressions\n \n-**FIXME:** grammar?\n+```antlr\n+tuple_expr : '(' [ expr [ ',' expr ] * | expr ',' ] ? ')' ;\n+```\n \n ### Unit expressions\n \n-**FIXME:** grammar?\n+```antlr\n+unit_expr : \"()\" ;\n+```\n \n ### Structure expressions\n \n@@ -545,41 +557,60 @@ range_expr : expr \"..\" expr |\n \n ### Unary operator expressions\n \n-**FIXME:** grammar?\n+```antlr\n+unop_expr : unop expr ;\n+unop : '-' | '*' | '!' ;\n+```\n \n ### Binary operator expressions\n \n ```antlr\n-binop_expr : expr binop expr ;\n+binop_expr : expr binop expr | type_cast_expr\n+           | assignment_expr | compound_assignment_expr ;\n+binop : arith_op | bitwise_op | lazy_bool_op | comp_op\n ```\n \n #### Arithmetic operators\n \n-**FIXME:** grammar?\n+```antlr\n+arith_op : '+' | '-' | '*' | '/' | '%' ;\n+```\n \n #### Bitwise operators\n \n-**FIXME:** grammar?\n+```antlr\n+bitwise_op : '&' | '|' | '^' | \"<<\" | \">>\" ;\n+```\n \n #### Lazy boolean operators\n \n-**FIXME:** grammar?\n+```antlr\n+lazy_bool_op : \"&&\" | \"||\" ;\n+```\n \n #### Comparison operators\n \n-**FIXME:** grammar?\n+```antlr\n+comp_op : \"==\" | \"!=\" | '<' | '>' | \"<=\" | \">=\" ;\n+```\n \n #### Type cast expressions\n \n-**FIXME:** grammar?\n+```antlr\n+type_cast_expr : value \"as\" type ;\n+```\n \n #### Assignment expressions\n \n-**FIXME:** grammar?\n+```antlr\n+assignment_expr : expr '=' expr ;\n+```\n \n #### Compound assignment expressions\n \n-**FIXME:** grammar?\n+```antlr\n+compound_assignment_expr : expr [ arith_op | bitwise_op ] '=' expr ;\n+```\n \n #### Operator precedence\n "}]}