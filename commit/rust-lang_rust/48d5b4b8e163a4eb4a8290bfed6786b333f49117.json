{"sha": "48d5b4b8e163a4eb4a8290bfed6786b333f49117", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZDViNGI4ZTE2M2E0ZWI0YTgyOTBiZmVkNjc4NmIzMzNmNDkxMTc=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-09-18T06:56:02Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-09-19T22:19:25Z"}, "message": "Add Future::spawn_with", "tree": {"sha": "1e5c193f73b5a5cfe50e881a46a07c04be03ba76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e5c193f73b5a5cfe50e881a46a07c04be03ba76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48d5b4b8e163a4eb4a8290bfed6786b333f49117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48d5b4b8e163a4eb4a8290bfed6786b333f49117", "html_url": "https://github.com/rust-lang/rust/commit/48d5b4b8e163a4eb4a8290bfed6786b333f49117", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48d5b4b8e163a4eb4a8290bfed6786b333f49117/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff85389344d6fe4a318559b66b97c24b8fddf1e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff85389344d6fe4a318559b66b97c24b8fddf1e4", "html_url": "https://github.com/rust-lang/rust/commit/ff85389344d6fe4a318559b66b97c24b8fddf1e4"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "40ed56855f2565fb15ab77f6e80c784fbdd1da6a", "filename": "src/libextra/future.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/48d5b4b8e163a4eb4a8290bfed6786b333f49117/src%2Flibextra%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48d5b4b8e163a4eb4a8290bfed6786b333f49117/src%2Flibextra%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ffuture.rs?ref=48d5b4b8e163a4eb4a8290bfed6786b333f49117", "patch": "@@ -139,6 +139,23 @@ impl<A:Send> Future<A> {\n \n         Future::from_port(port)\n     }\n+\n+    pub fn spawn_with<B: Send>(v: B, blk: ~fn(B) -> A) -> Future<A> {\n+        /*!\n+         * Create a future from a unique closure taking one argument.\n+         *\n+         * The closure and its argument will be moved into a new task. The\n+         * closure will be run and its result used as the value of the future.\n+         */\n+\n+         let (port, chan) = oneshot();\n+\n+         do task::spawn_with((v, chan)) |(v, chan)| {\n+            chan.send(blk(v));\n+         }\n+\n+         Future::from_port(port)\n+    }\n }\n \n #[cfg(test)]\n@@ -193,6 +210,12 @@ mod test {\n         assert_eq!(f.get(), ~\"bale\");\n     }\n \n+    #[test]\n+    fn test_spawn_with() {\n+        let mut f = Future::spawn_with(~\"gale\", |s| { s });\n+        assert_eq!(f.get(), ~\"gale\");\n+    }\n+\n     #[test]\n     #[should_fail]\n     fn test_futurefail() {"}]}