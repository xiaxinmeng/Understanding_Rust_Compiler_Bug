{"sha": "02539e16121a3ad81172892753a7b1ed09746acd", "node_id": "C_kwDOAAsO6NoAKDAyNTM5ZTE2MTIxYTNhZDgxMTcyODkyNzUzYTdiMWVkMDk3NDZhY2Q", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-07T05:44:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-07T05:44:03Z"}, "message": "Rollup merge of #94676 - TaKO8Ki:remove-unnecessary-pattens-for-ignoring-remaining-parts, r=Dylan-DPC\n\nRemove unnecessary `..` patterns\n\nThis patch removes unnecessary `..` patterns.", "tree": {"sha": "80bc3a3943cb4bd527c14006082d1190d8711041", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80bc3a3943cb4bd527c14006082d1190d8711041"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02539e16121a3ad81172892753a7b1ed09746acd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiJZujCRBK7hj4Ov3rIwAAQEQIAHWx5oKZ8Fd55rICaGprUt3r\n08x2YRDqlSAHb4FUlKhMM0rPSPz3BYZl9u6/rck1eM+2hHIeOOQ7JYeIJJ0d9gEZ\nUS0OOs/5aAkA4w23tZymsmx7TR3VMjjwPHSjWppiwF+3weE4ZSEPRlPAmnRhu1hK\nk/JUpqr027YUco/YyNmS1Vywl5dqdziw4l3iTVeV91hPufvto8MVMv/qXygZrdpz\nj2qlMlFCVbcALQmxNaX2dhvAP6tzZDp1cBRDofZZPSRbwRqtO3jE0OaOUC0zFsPW\ncqaga9LwdLYqK4pdLDN+YSgJRxIDDghxHQRYL1jYkfsrqhxbyuAqQCXGuQeDpYs=\n=uaQK\n-----END PGP SIGNATURE-----\n", "payload": "tree 80bc3a3943cb4bd527c14006082d1190d8711041\nparent 9c7ff1add7c395686831059f609efe3f530bb98b\nparent 51a53bf4df0fa2717c0c0a81c14cbc2192d377b7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1646631843 +0100\ncommitter GitHub <noreply@github.com> 1646631843 +0100\n\nRollup merge of #94676 - TaKO8Ki:remove-unnecessary-pattens-for-ignoring-remaining-parts, r=Dylan-DPC\n\nRemove unnecessary `..` patterns\n\nThis patch removes unnecessary `..` patterns.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02539e16121a3ad81172892753a7b1ed09746acd", "html_url": "https://github.com/rust-lang/rust/commit/02539e16121a3ad81172892753a7b1ed09746acd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02539e16121a3ad81172892753a7b1ed09746acd/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c7ff1add7c395686831059f609efe3f530bb98b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c7ff1add7c395686831059f609efe3f530bb98b", "html_url": "https://github.com/rust-lang/rust/commit/9c7ff1add7c395686831059f609efe3f530bb98b"}, {"sha": "51a53bf4df0fa2717c0c0a81c14cbc2192d377b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/51a53bf4df0fa2717c0c0a81c14cbc2192d377b7", "html_url": "https://github.com/rust-lang/rust/commit/51a53bf4df0fa2717c0c0a81c14cbc2192d377b7"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "7a272308fb051af3e51861a78d23e8ff22369900", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/02539e16121a3ad81172892753a7b1ed09746acd/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02539e16121a3ad81172892753a7b1ed09746acd/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=02539e16121a3ad81172892753a7b1ed09746acd", "patch": "@@ -2064,17 +2064,13 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 )),\n                 _ => None,\n             });\n-            if let ImplTraitContext::TypeAliasesOpaqueTy { ref mut capturable_lifetimes, .. } =\n-                itctx\n-            {\n+            if let ImplTraitContext::TypeAliasesOpaqueTy { ref mut capturable_lifetimes } = itctx {\n                 capturable_lifetimes.extend(lt_def_names.clone());\n             }\n \n             let res = this.lower_trait_ref(&p.trait_ref, itctx.reborrow());\n \n-            if let ImplTraitContext::TypeAliasesOpaqueTy { ref mut capturable_lifetimes, .. } =\n-                itctx\n-            {\n+            if let ImplTraitContext::TypeAliasesOpaqueTy { ref mut capturable_lifetimes } = itctx {\n                 for param in lt_def_names {\n                     capturable_lifetimes.remove(&param);\n                 }"}, {"sha": "dab1da78d4c8f7af0f95b733c7ff91021fdc86ab", "filename": "compiler/rustc_middle/src/mir/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02539e16121a3ad81172892753a7b1ed09746acd/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02539e16121a3ad81172892753a7b1ed09746acd/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs?ref=02539e16121a3ad81172892753a7b1ed09746acd", "patch": "@@ -660,7 +660,7 @@ pub fn write_allocations<'tcx>(\n     }\n     fn alloc_ids_from_const(val: ConstValue<'_>) -> impl Iterator<Item = AllocId> + '_ {\n         match val {\n-            ConstValue::Scalar(interpret::Scalar::Ptr(ptr, _size)) => {\n+            ConstValue::Scalar(interpret::Scalar::Ptr(ptr, _)) => {\n                 Either::Left(Either::Left(std::iter::once(ptr.provenance)))\n             }\n             ConstValue::Scalar(interpret::Scalar::Int { .. }) => {"}, {"sha": "fd1c0239b596511b011a76acd04436b0d90ff95c", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02539e16121a3ad81172892753a7b1ed09746acd/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02539e16121a3ad81172892753a7b1ed09746acd/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=02539e16121a3ad81172892753a7b1ed09746acd", "patch": "@@ -852,7 +852,7 @@ impl ReachEverythingInTheInterfaceVisitor<'_, '_> {\n                         self.visit(self.ev.tcx.type_of(param.def_id));\n                     }\n                 }\n-                GenericParamDefKind::Const { has_default, .. } => {\n+                GenericParamDefKind::Const { has_default } => {\n                     self.visit(self.ev.tcx.type_of(param.def_id));\n                     if has_default {\n                         self.visit(self.ev.tcx.const_param_default(param.def_id));"}, {"sha": "f2ddc3ea7fa3909eebfebdd593ef60acc0fbf0a1", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02539e16121a3ad81172892753a7b1ed09746acd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02539e16121a3ad81172892753a7b1ed09746acd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=02539e16121a3ad81172892753a7b1ed09746acd", "patch": "@@ -405,7 +405,7 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 }\n                 hir::Node::Item(hir::Item {\n                     kind:\n-                        hir::ItemKind::Trait(_, _, generics, _, _)\n+                        hir::ItemKind::Trait(_, _, generics, ..)\n                         | hir::ItemKind::Impl(hir::Impl { generics, .. }),\n                     ..\n                 }) if projection.is_some() => {"}, {"sha": "b3213451d76c43049bddb5ecef655d312455c6a5", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02539e16121a3ad81172892753a7b1ed09746acd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02539e16121a3ad81172892753a7b1ed09746acd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs?ref=02539e16121a3ad81172892753a7b1ed09746acd", "patch": "@@ -1403,7 +1403,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             self.fcx.var_for_def(self.span, param)\n                         }\n                     }\n-                    GenericParamDefKind::Const { has_default, .. } => {\n+                    GenericParamDefKind::Const { has_default } => {\n                         if !infer_args && has_default {\n                             tcx.const_param_default(param.def_id)\n                                 .subst_spanned(tcx, substs.unwrap(), Some(self.span))"}, {"sha": "fcece84b09fb5fecc6d439de20c8811f30bc038e", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02539e16121a3ad81172892753a7b1ed09746acd/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02539e16121a3ad81172892753a7b1ed09746acd/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=02539e16121a3ad81172892753a7b1ed09746acd", "patch": "@@ -451,7 +451,7 @@ impl Clean<GenericParamDef> for ty::GenericParamDef {\n                     },\n                 )\n             }\n-            ty::GenericParamDefKind::Const { has_default, .. } => (\n+            ty::GenericParamDefKind::Const { has_default } => (\n                 self.name,\n                 GenericParamDefKind::Const {\n                     did: self.def_id,"}]}