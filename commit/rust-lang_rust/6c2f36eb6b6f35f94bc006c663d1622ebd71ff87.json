{"sha": "6c2f36eb6b6f35f94bc006c663d1622ebd71ff87", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMmYzNmViNmI2ZjM1Zjk0YmMwMDZjNjYzZDE2MjJlYmQ3MWZmODc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-01T19:06:16Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-01T19:06:16Z"}, "message": "Erase tag from futex pointers.", "tree": {"sha": "6e08c402a14ce8815b3627f9496ebe562e9568a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e08c402a14ce8815b3627f9496ebe562e9568a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c2f36eb6b6f35f94bc006c663d1622ebd71ff87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2f36eb6b6f35f94bc006c663d1622ebd71ff87", "html_url": "https://github.com/rust-lang/rust/commit/6c2f36eb6b6f35f94bc006c663d1622ebd71ff87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c2f36eb6b6f35f94bc006c663d1622ebd71ff87/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "281a5382262af7f6d5d9caf677b4c7f2315dd359", "url": "https://api.github.com/repos/rust-lang/rust/commits/281a5382262af7f6d5d9caf677b4c7f2315dd359", "html_url": "https://github.com/rust-lang/rust/commit/281a5382262af7f6d5d9caf677b4c7f2315dd359"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "23d3330c74e9e45ab3d3057b31eb537eb92f7d8c", "filename": "src/shims/posix/linux/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2f36eb6b6f35f94bc006c663d1622ebd71ff87/src%2Fshims%2Fposix%2Flinux%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2f36eb6b6f35f94bc006c663d1622ebd71ff87/src%2Fshims%2Fposix%2Flinux%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Flinux%2Fsync.rs?ref=6c2f36eb6b6f35f94bc006c663d1622ebd71ff87", "patch": "@@ -16,7 +16,7 @@ pub fn futex<'tcx>(\n \n     this.memory.check_ptr_access(addr, Size::from_bytes(4), Align::from_bytes(4).unwrap())?;\n \n-    let addr = addr.assert_ptr();\n+    let addr = addr.assert_ptr().erase_tag();\n \n     let thread = this.get_active_thread();\n "}, {"sha": "986857221b62ba7c000c1a737364120678a1a18d", "filename": "src/sync.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c2f36eb6b6f35f94bc006c663d1622ebd71ff87/src%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2f36eb6b6f35f94bc006c663d1622ebd71ff87/src%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsync.rs?ref=6c2f36eb6b6f35f94bc006c663d1622ebd71ff87", "patch": "@@ -115,7 +115,7 @@ pub(super) struct SynchronizationState {\n     mutexes: IndexVec<MutexId, Mutex>,\n     rwlocks: IndexVec<RwLockId, RwLock>,\n     condvars: IndexVec<CondvarId, Condvar>,\n-    futexes: HashMap<Pointer<stacked_borrows::Tag>, Futex>,\n+    futexes: HashMap<Pointer, Futex>,\n }\n \n // Private extension trait for local helper methods\n@@ -418,14 +418,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         this.machine.threads.sync.condvars[id].waiters.retain(|waiter| waiter.thread != thread);\n     }\n \n-    fn futex_wait(&mut self, addr: Pointer<stacked_borrows::Tag>, thread: ThreadId) {\n+    fn futex_wait(&mut self, addr: Pointer, thread: ThreadId) {\n         let this = self.eval_context_mut();\n         let waiters = &mut this.machine.threads.sync.futexes.entry(addr).or_default().waiters;\n         assert!(waiters.iter().all(|waiter| waiter.thread != thread), \"thread is already waiting\");\n         waiters.push_back(FutexWaiter { thread });\n     }\n \n-    fn futex_wake(&mut self, addr: Pointer<stacked_borrows::Tag>) -> Option<ThreadId> {\n+    fn futex_wake(&mut self, addr: Pointer) -> Option<ThreadId> {\n         let this = self.eval_context_mut();\n         let waiters = &mut this.machine.threads.sync.futexes.get_mut(&addr)?.waiters;\n         waiters.pop_front().map(|waiter| waiter.thread)"}]}