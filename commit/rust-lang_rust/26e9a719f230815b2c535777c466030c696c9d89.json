{"sha": "26e9a719f230815b2c535777c466030c696c9d89", "node_id": "C_kwDOAAsO6NoAKDI2ZTlhNzE5ZjIzMDgxNWIyYzUzNTc3N2M0NjYwMzBjNjk2YzlkODk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-25T20:59:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-25T20:59:49Z"}, "message": "Rollup merge of #90266 - b-naber:uneval_substs, r=lcnr\n\nPrevent duplicate caller bounds candidates by exposing default substs in Unevaluated\n\nFixes https://github.com/rust-lang/rust/issues/89334\n\nThe changes introduced in https://github.com/rust-lang/rust/pull/87280 allowed for \"duplicate\" caller bounds candidates to be assembled that only differed in their default substs having been \"exposed\" or not and resulted in an ambiguity error during trait selection. To fix this we expose the defaults substs during the creation of the ParamEnv.\n\nr? `@lcnr`", "tree": {"sha": "34a8ed3d3f98baa429bc0fc81d300c80e6812780", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34a8ed3d3f98baa429bc0fc81d300c80e6812780"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26e9a719f230815b2c535777c466030c696c9d89", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhdxrFCRBK7hj4Ov3rIwAA4wQIAC1DMEcqcEAxO3a5ami8BvmK\n5H+9rfuqWJlae7KeKOwE2WQx975CFdwN/vvqyK8C/ndZpEVbVPQI+ii7tHQejDlV\nt55mGBoMBjierPZDbcljGcK2/zGY+6jx7Rz8OgdCW1YuIGxhu9ezhFO5wFZs69OX\nJ6s4AubLM+Hqoc6YVso8AVNynsGarWmXYAVefyKsIBoXu6v6u59MJRWKpTrkSQo+\nneeErukUtbfk6S4byWF55SfbGVOkUqwS9PaLPLGcwg3UIKWHGUb7Oel4PjZnh6P4\no34UI8biZHWoQJy+EDynW1+kL1qfn5TH4uQ5u0yA4Nl+YA8dR3lEbZlR+2KzNnI=\n=URDb\n-----END PGP SIGNATURE-----\n", "payload": "tree 34a8ed3d3f98baa429bc0fc81d300c80e6812780\nparent d35ecb949e9d516fb319e41b2d33f103764d1a11\nparent 0199a81304fe7cf07f0d2c718a4243f47c1620ea\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635195589 +0200\ncommitter GitHub <noreply@github.com> 1635195589 +0200\n\nRollup merge of #90266 - b-naber:uneval_substs, r=lcnr\n\nPrevent duplicate caller bounds candidates by exposing default substs in Unevaluated\n\nFixes https://github.com/rust-lang/rust/issues/89334\n\nThe changes introduced in https://github.com/rust-lang/rust/pull/87280 allowed for \"duplicate\" caller bounds candidates to be assembled that only differed in their default substs having been \"exposed\" or not and resulted in an ambiguity error during trait selection. To fix this we expose the defaults substs during the creation of the ParamEnv.\n\nr? `@lcnr`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26e9a719f230815b2c535777c466030c696c9d89", "html_url": "https://github.com/rust-lang/rust/commit/26e9a719f230815b2c535777c466030c696c9d89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26e9a719f230815b2c535777c466030c696c9d89/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d35ecb949e9d516fb319e41b2d33f103764d1a11", "url": "https://api.github.com/repos/rust-lang/rust/commits/d35ecb949e9d516fb319e41b2d33f103764d1a11", "html_url": "https://github.com/rust-lang/rust/commit/d35ecb949e9d516fb319e41b2d33f103764d1a11"}, {"sha": "0199a81304fe7cf07f0d2c718a4243f47c1620ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/0199a81304fe7cf07f0d2c718a4243f47c1620ea", "html_url": "https://github.com/rust-lang/rust/commit/0199a81304fe7cf07f0d2c718a4243f47c1620ea"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "af3706f886e9cbce53fb4e6be54c5ee1872432e4", "filename": "compiler/rustc_ty_utils/src/ty.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/26e9a719f230815b2c535777c466030c696c9d89/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e9a719f230815b2c535777c466030c696c9d89/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs?ref=26e9a719f230815b2c535777c466030c696c9d89", "patch": "@@ -247,6 +247,7 @@ fn trait_of_item(tcx: TyCtxt<'_>, def_id: DefId) -> Option<DefId> {\n }\n \n /// See `ParamEnv` struct definition for details.\n+#[instrument(level = \"debug\", skip(tcx))]\n fn param_env(tcx: TyCtxt<'_>, def_id: DefId) -> ty::ParamEnv<'_> {\n     // The param_env of an impl Trait type is its defining function's param_env\n     if let Some(parent) = ty::is_impl_trait_defn(tcx, def_id) {\n@@ -274,9 +275,20 @@ fn param_env(tcx: TyCtxt<'_>, def_id: DefId) -> ty::ParamEnv<'_> {\n         predicates.extend(environment);\n     }\n \n+    // It's important that we include the default substs in unevaluated\n+    // constants, since `Unevaluated` instances in predicates whose substs are None\n+    // can lead to \"duplicate\" caller bounds candidates during trait selection,\n+    // duplicate in the sense that both have their default substs, but the\n+    // candidate that resulted from a superpredicate still uses `None` in its\n+    // `substs_` field of `Unevaluated` to indicate that it has its default substs,\n+    // whereas the other candidate has `substs_: Some(default_substs)`, see\n+    // issue #89334\n+    predicates = tcx.expose_default_const_substs(predicates);\n+\n     let unnormalized_env =\n         ty::ParamEnv::new(tcx.intern_predicates(&predicates), traits::Reveal::UserFacing);\n \n+    debug!(\"unnormalized_env caller bounds: {:?}\", unnormalized_env.caller_bounds());\n     let body_id = def_id\n         .as_local()\n         .map(|def_id| tcx.hir().local_def_id_to_hir_id(def_id))"}, {"sha": "e40c93116af4bb254c97c04250d758e6980bda55", "filename": "src/test/ui/const-generics/expose-default-substs-param-env.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/26e9a719f230815b2c535777c466030c696c9d89/src%2Ftest%2Fui%2Fconst-generics%2Fexpose-default-substs-param-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e9a719f230815b2c535777c466030c696c9d89/src%2Ftest%2Fui%2Fconst-generics%2Fexpose-default-substs-param-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fexpose-default-substs-param-env.rs?ref=26e9a719f230815b2c535777c466030c696c9d89", "patch": "@@ -0,0 +1,9 @@\n+// build-pass\n+\n+#![feature(generic_const_exprs)]\n+#![allow(unused_braces, incomplete_features)]\n+\n+pub trait Foo<const N: usize> {}\n+pub trait Bar: Foo<{ 1 }> { }\n+\n+fn main() {}"}, {"sha": "b15b7428cdd0c478df0fd32acfa84e7e36985334", "filename": "src/test/ui/const-generics/issues/issue-89334.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/26e9a719f230815b2c535777c466030c696c9d89/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-89334.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e9a719f230815b2c535777c466030c696c9d89/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-89334.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-89334.rs?ref=26e9a719f230815b2c535777c466030c696c9d89", "patch": "@@ -0,0 +1,16 @@\n+// build-pass\n+\n+#![feature(generic_const_exprs)]\n+#![allow(unused_braces, incomplete_features)]\n+\n+pub trait AnotherTrait{\n+    const ARRAY_SIZE: usize;\n+}\n+pub trait Shard<T: AnotherTrait>:\n+    AsMut<[[u8; T::ARRAY_SIZE]]>\n+where\n+    [(); T::ARRAY_SIZE]: Sized\n+{\n+}\n+\n+fn main() {}"}]}