{"sha": "3fff63400b3032f64cdd3d0743d9a9c2cab019b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZmY2MzQwMGIzMDMyZjY0Y2RkM2QwNzQzZDlhOWMyY2FiMDE5YjQ=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-01-04T16:49:16Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-01-04T16:58:50Z"}, "message": "Update librustc_unicode/tables.rs\n\nwith a new version generated by src/etc/unicode.py.", "tree": {"sha": "ea2634178d060c6798e54e26aeee8c39170530af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea2634178d060c6798e54e26aeee8c39170530af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fff63400b3032f64cdd3d0743d9a9c2cab019b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fff63400b3032f64cdd3d0743d9a9c2cab019b4", "html_url": "https://github.com/rust-lang/rust/commit/3fff63400b3032f64cdd3d0743d9a9c2cab019b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fff63400b3032f64cdd3d0743d9a9c2cab019b4/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa77f39ccf2786b864206f24e85661eee63022a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa77f39ccf2786b864206f24e85661eee63022a8", "html_url": "https://github.com/rust-lang/rust/commit/aa77f39ccf2786b864206f24e85661eee63022a8"}], "stats": {"total": 34, "additions": 15, "deletions": 19}, "files": [{"sha": "a147bea791c47f4ff1f95f3399cca7046f2af2d4", "filename": "src/librustc_unicode/tables.rs", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3fff63400b3032f64cdd3d0743d9a9c2cab019b4/src%2Flibrustc_unicode%2Ftables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fff63400b3032f64cdd3d0743d9a9c2cab019b4/src%2Flibrustc_unicode%2Ftables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_unicode%2Ftables.rs?ref=3fff63400b3032f64cdd3d0743d9a9c2cab019b4", "patch": "@@ -16,13 +16,18 @@\n /// that the unicode parts of `CharExt` and `UnicodeStrPrelude` traits are based on.\n pub const UNICODE_VERSION: (u64, u64, u64) = (8, 0, 0);\n \n-fn bsearch_range_table(c: char, r: &'static [(char,char)]) -> bool {\n+fn bsearch_range_table(c: char, r: &'static [(char, char)]) -> bool {\n     use core::cmp::Ordering::{Equal, Less, Greater};\n-    r.binary_search_by(|&(lo,hi)| {\n-        if lo <= c && c <= hi { Equal }\n-        else if hi < c { Less }\n-        else { Greater }\n-    }).is_ok()\n+    r.binary_search_by(|&(lo, hi)| {\n+         if c < lo {\n+             Greater\n+         } else if hi < c {\n+             Less\n+         } else {\n+             Equal\n+         }\n+     })\n+     .is_ok()\n }\n \n pub mod general_category {\n@@ -1188,34 +1193,25 @@ pub mod property {\n }\n \n pub mod conversions {\n-    use core::cmp::Ordering::{Equal, Less, Greater};\n     use core::option::Option;\n     use core::option::Option::{Some, None};\n-    use core::result::Result::{Ok, Err};\n \n     pub fn to_lower(c: char) -> [char; 3] {\n         match bsearch_case_table(c, to_lowercase_table) {\n-          None        => [c, '\\0', '\\0'],\n-          Some(index) => to_lowercase_table[index].1\n+            None        => [c, '\\0', '\\0'],\n+            Some(index) => to_lowercase_table[index].1,\n         }\n     }\n \n     pub fn to_upper(c: char) -> [char; 3] {\n         match bsearch_case_table(c, to_uppercase_table) {\n             None        => [c, '\\0', '\\0'],\n-            Some(index) => to_uppercase_table[index].1\n+            Some(index) => to_uppercase_table[index].1,\n         }\n     }\n \n     fn bsearch_case_table(c: char, table: &'static [(char, [char; 3])]) -> Option<usize> {\n-        match table.binary_search_by(|&(key, _)| {\n-            if c == key { Equal }\n-            else if key < c { Less }\n-            else { Greater }\n-        }) {\n-            Ok(i) => Some(i),\n-            Err(_) => None,\n-        }\n+        table.binary_search_by(|&(key, _)| key.cmp(&c)).ok()\n     }\n \n     const to_lowercase_table: &'static [(char, [char; 3])] = &["}]}