{"sha": "d48cbedfe45e667d57573f147415d11c85fcb26a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0OGNiZWRmZTQ1ZTY2N2Q1NzU3M2YxNDc0MTVkMTFjODVmY2IyNmE=", "commit": {"author": {"name": "memoryleak47", "email": "memoryLeak47@protonmail.ch", "date": "2018-04-05T03:47:09Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-04-05T03:47:09Z"}, "message": "typo (#2598)\n\n* typo\r\n\r\n* more typos", "tree": {"sha": "63c5c87beb71b4944eb45f6577725602a6eb4453", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63c5c87beb71b4944eb45f6577725602a6eb4453"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d48cbedfe45e667d57573f147415d11c85fcb26a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d48cbedfe45e667d57573f147415d11c85fcb26a", "html_url": "https://github.com/rust-lang/rust/commit/d48cbedfe45e667d57573f147415d11c85fcb26a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d48cbedfe45e667d57573f147415d11c85fcb26a/comments", "author": {"login": "memoryleak47", "id": 5725430, "node_id": "MDQ6VXNlcjU3MjU0MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5725430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memoryleak47", "html_url": "https://github.com/memoryleak47", "followers_url": "https://api.github.com/users/memoryleak47/followers", "following_url": "https://api.github.com/users/memoryleak47/following{/other_user}", "gists_url": "https://api.github.com/users/memoryleak47/gists{/gist_id}", "starred_url": "https://api.github.com/users/memoryleak47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memoryleak47/subscriptions", "organizations_url": "https://api.github.com/users/memoryleak47/orgs", "repos_url": "https://api.github.com/users/memoryleak47/repos", "events_url": "https://api.github.com/users/memoryleak47/events{/privacy}", "received_events_url": "https://api.github.com/users/memoryleak47/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c7e737a06462b2ac5489a9533c6d661afbe116a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c7e737a06462b2ac5489a9533c6d661afbe116a", "html_url": "https://github.com/rust-lang/rust/commit/2c7e737a06462b2ac5489a9533c6d661afbe116a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c31caa1447d050390346fb509fef84ef885643a3", "filename": "src/cargo-fmt/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d48cbedfe45e667d57573f147415d11c85fcb26a/src%2Fcargo-fmt%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d48cbedfe45e667d57573f147415d11c85fcb26a/src%2Fcargo-fmt%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo-fmt%2Fmain.rs?ref=d48cbedfe45e667d57573f147415d11c85fcb26a", "patch": "@@ -211,7 +211,7 @@ impl Hash for Target {\n pub enum CargoFmtStrategy {\n     /// Format every packages and dependencies.\n     All,\n-    /// Format pacakges that are specified by the command line argument.\n+    /// Format packages that are specified by the command line argument.\n     Some(Vec<String>),\n     /// Format the root packages only.\n     Root,"}, {"sha": "cc68f3e1ec200f02a4b7677a5e87320dbdf35f28", "filename": "src/overflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d48cbedfe45e667d57573f147415d11c85fcb26a/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d48cbedfe45e667d57573f147415d11c85fcb26a/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=d48cbedfe45e667d57573f147415d11c85fcb26a", "patch": "@@ -279,7 +279,7 @@ impl<'a, T: 'a + Rewrite + ToExpr + Spanned> Context<'a, T> {\n                 if self.items.len() == 1 =>\n             {\n                 // When we are rewriting a nested function call, we restrict the\n-                // bugdet for the inner function to avoid them being deeply nested.\n+                // budget for the inner function to avoid them being deeply nested.\n                 // However, when the inner function has a prefix or a suffix\n                 // (e.g. `foo() as u32`), this budget reduction may produce poorly\n                 // formatted code, where a prefix or a suffix being left on its own"}, {"sha": "dbb2097535eeedefc0510075622022ca86f2e2b3", "filename": "src/reorder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d48cbedfe45e667d57573f147415d11c85fcb26a/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d48cbedfe45e667d57573f147415d11c85fcb26a/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=d48cbedfe45e667d57573f147415d11c85fcb26a", "patch": "@@ -12,7 +12,7 @@\n //!\n //! `mod`, `extern crate` and `use` declarations are reorderd in alphabetical\n //! order. Trait items are reordered in pre-determined order (associated types\n-//! and constatns comes before methods).\n+//! and constants comes before methods).\n \n // TODO(#2455): Reorder trait items.\n "}, {"sha": "615dc53fc4eb0156cb2930960d7649ce5e11b848", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d48cbedfe45e667d57573f147415d11c85fcb26a/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d48cbedfe45e667d57573f147415d11c85fcb26a/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=d48cbedfe45e667d57573f147415d11c85fcb26a", "patch": "@@ -732,7 +732,7 @@ fn rewrite_bare_fn(\n     {\n         result.push_str(\"for<\");\n         // 6 = \"for<> \".len(), 4 = \"for<\".\n-        // This doesn't work out so nicely for mutliline situation with lots of\n+        // This doesn't work out so nicely for multiline situation with lots of\n         // rightward drift. If that is a problem, we could use the list stuff.\n         result.push_str(lifetime_str);\n         result.push_str(\"> \");"}]}