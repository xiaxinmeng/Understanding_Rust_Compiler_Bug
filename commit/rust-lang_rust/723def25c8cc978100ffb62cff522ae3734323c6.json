{"sha": "723def25c8cc978100ffb62cff522ae3734323c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyM2RlZjI1YzhjYzk3ODEwMGZmYjYyY2ZmNTIyYWUzNzM0MzIzYzY=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-14T12:45:34Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-14T12:45:34Z"}, "message": "update docs", "tree": {"sha": "52a2e33b4eba088526fae3b265efb33c14806ff7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52a2e33b4eba088526fae3b265efb33c14806ff7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/723def25c8cc978100ffb62cff522ae3734323c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/723def25c8cc978100ffb62cff522ae3734323c6", "html_url": "https://github.com/rust-lang/rust/commit/723def25c8cc978100ffb62cff522ae3734323c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/723def25c8cc978100ffb62cff522ae3734323c6/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "513a6473d69b3af34e6cdaa4efb288fe5283c3e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/513a6473d69b3af34e6cdaa4efb288fe5283c3e9", "html_url": "https://github.com/rust-lang/rust/commit/513a6473d69b3af34e6cdaa4efb288fe5283c3e9"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c4f53332cb6739011a956ae5dc88ac035a6c8286", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/723def25c8cc978100ffb62cff522ae3734323c6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/723def25c8cc978100ffb62cff522ae3734323c6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=723def25c8cc978100ffb62cff522ae3734323c6", "patch": "@@ -171,11 +171,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     ///\n     /// Given a method call like `foo.bar::<T1,...Tn>(...)`:\n     ///\n-    /// * `fcx`:                   the surrounding `FnCtxt` (!)\n-    /// * `span`:                  the span for the method call\n-    /// * `method_name`:           the name of the method being called (`bar`)\n+    /// * `self`:                  the surrounding `FnCtxt` (!)\n     /// * `self_ty`:               the (unadjusted) type of the self expression (`foo`)\n-    /// * `supplied_method_types`: the explicit method type parameters, if any (`T1..Tn`)\n+    /// * `segment`:               the name and generic arguments of the method (`bar::<T1, ...Tn>`)\n+    /// * `span`:                  the span for the method call\n+    /// * `call_expr`:             the complete method call: (`foo.bar::<T1,...Tn>(...)`)\n     /// * `self_expr`:             the self expression (`foo`)\n     pub fn lookup_method(\n         &self,"}]}