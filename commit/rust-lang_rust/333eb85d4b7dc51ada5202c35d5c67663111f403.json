{"sha": "333eb85d4b7dc51ada5202c35d5c67663111f403", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzM2ViODVkNGI3ZGM1MWFkYTUyMDJjMzVkNWM2NzY2MzExMWY0MDM=", "commit": {"author": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-04-08T00:53:55Z"}, "committer": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-04-10T01:03:47Z"}, "message": "fmt: {:p#} formats pointers padded to native width", "tree": {"sha": "188d018b2315941074cc0892c6a54dc75cd932d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/188d018b2315941074cc0892c6a54dc75cd932d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/333eb85d4b7dc51ada5202c35d5c67663111f403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/333eb85d4b7dc51ada5202c35d5c67663111f403", "html_url": "https://github.com/rust-lang/rust/commit/333eb85d4b7dc51ada5202c35d5c67663111f403", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/333eb85d4b7dc51ada5202c35d5c67663111f403/comments", "author": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6436e348e97a09c2155d0dcd710416e6e0d84371", "url": "https://api.github.com/repos/rust-lang/rust/commits/6436e348e97a09c2155d0dcd710416e6e0d84371", "html_url": "https://github.com/rust-lang/rust/commit/6436e348e97a09c2155d0dcd710416e6e0d84371"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "2a7569e3b731d0e86299e4778dd029102d2047b9", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/333eb85d4b7dc51ada5202c35d5c67663111f403/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333eb85d4b7dc51ada5202c35d5c67663111f403/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=333eb85d4b7dc51ada5202c35d5c67663111f403", "patch": "@@ -847,9 +847,33 @@ impl Display for char {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> Pointer for *const T {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n+        let old_width = f.width;\n+        let old_flags = f.flags;\n+\n+        // The alternate flag is already treated by LowerHex as being special-\n+        // it denotes whether to prefix with 0x. We use it to work out whether\n+        // or not to zero extend, and then unconditionally set it to get the\n+        // prefix.\n+        if f.flags & 1 << (FlagV1::Alternate as u32) > 0 {\n+            f.flags |= 1 << (FlagV1::SignAwareZeroPad as u32);\n+\n+            if let None = f.width {\n+                // The formats need two extra bytes, for the 0x\n+                if cfg!(target_pointer_width = \"32\") {\n+                    f.width = Some(10);\n+                }\n+                if cfg!(target_pointer_width = \"64\") {\n+                    f.width = Some(18);\n+                }\n+            }\n+        }\n         f.flags |= 1 << (FlagV1::Alternate as u32);\n+\n         let ret = LowerHex::fmt(&(*self as usize), f);\n-        f.flags &= !(1 << (FlagV1::Alternate as u32));\n+\n+        f.width = old_width;\n+        f.flags = old_flags;\n+\n         ret\n     }\n }"}, {"sha": "0f4b0bfcec983426934a2ed2b8455dffe43b8460", "filename": "src/test/run-pass/fmt-pointer-trait.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/333eb85d4b7dc51ada5202c35d5c67663111f403/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333eb85d4b7dc51ada5202c35d5c67663111f403/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs?ref=333eb85d4b7dc51ada5202c35d5c67663111f403", "patch": "@@ -23,6 +23,14 @@ fn main() {\n     let _ = format!(\"{:p}{:p}{:p}\",\n                     rc, arc, b);\n \n+    if cfg!(target_pointer_width = \"32\") {\n+        assert_eq!(format!(\"{:#p}\", p),\n+                   \"0x00000000\");\n+    }\n+    if cfg!(target_pointer_width = \"64\") {\n+        assert_eq!(format!(\"{:#p}\", p),\n+                   \"0x0000000000000000\");\n+    }\n     assert_eq!(format!(\"{:p}\", p),\n                \"0x0\");\n }"}, {"sha": "7230fe71e21ee07acf8e759d29471370341b32ed", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/333eb85d4b7dc51ada5202c35d5c67663111f403/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333eb85d4b7dc51ada5202c35d5c67663111f403/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=333eb85d4b7dc51ada5202c35d5c67663111f403", "patch": "@@ -72,6 +72,14 @@ pub fn main() {\n     t!(format!(\"{:X}\", 10_usize), \"A\");\n     t!(format!(\"{}\", \"foo\"), \"foo\");\n     t!(format!(\"{}\", \"foo\".to_string()), \"foo\");\n+    if cfg!(target_pointer_width = \"32\") {\n+        t!(format!(\"{:#p}\", 0x1234 as *const isize), \"0x00001234\");\n+        t!(format!(\"{:#p}\", 0x1234 as *mut isize), \"0x00001234\");\n+    }\n+    if cfg!(target_pointer_width = \"64\") {\n+        t!(format!(\"{:#p}\", 0x1234 as *const isize), \"0x0000000000001234\");\n+        t!(format!(\"{:#p}\", 0x1234 as *mut isize), \"0x0000000000001234\");\n+    }\n     t!(format!(\"{:p}\", 0x1234 as *const isize), \"0x1234\");\n     t!(format!(\"{:p}\", 0x1234 as *mut isize), \"0x1234\");\n     t!(format!(\"{:x}\", A), \"aloha\");"}]}