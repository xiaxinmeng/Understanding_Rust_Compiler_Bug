{"sha": "1905f8c441fa2050de5c4574bb7f6594abc31274", "node_id": "C_kwDOAAsO6NoAKDE5MDVmOGM0NDFmYTIwNTBkZTVjNDU3NGJiN2Y2NTk0YWJjMzEyNzQ", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-19T15:33:36Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-19T15:33:36Z"}, "message": "Document projection condition", "tree": {"sha": "d0db20f714ac3e6fbec55fb8af716a8c368a0857", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0db20f714ac3e6fbec55fb8af716a8c368a0857"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1905f8c441fa2050de5c4574bb7f6594abc31274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1905f8c441fa2050de5c4574bb7f6594abc31274", "html_url": "https://github.com/rust-lang/rust/commit/1905f8c441fa2050de5c4574bb7f6594abc31274", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1905f8c441fa2050de5c4574bb7f6594abc31274/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dab1074b919deb8a61282d22add95ae8fba955de", "url": "https://api.github.com/repos/rust-lang/rust/commits/dab1074b919deb8a61282d22add95ae8fba955de", "html_url": "https://github.com/rust-lang/rust/commit/dab1074b919deb8a61282d22add95ae8fba955de"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "b854ba47f8f610e4d154a43f321e7a264d333442", "filename": "compiler/rustc_mir_build/src/build/matches/util.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1905f8c441fa2050de5c4574bb7f6594abc31274/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1905f8c441fa2050de5c4574bb7f6594abc31274/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Futil.rs?ref=1905f8c441fa2050de5c4574bb7f6594abc31274", "patch": "@@ -106,6 +106,9 @@ impl<'pat, 'tcx> MatchPair<'pat, 'tcx> {\n         let mut place = match place.try_upvars_resolved(cx) {\n             Ok(val) | Err(val) => val,\n         };\n+\n+        // Only add the OpaqueCast projection if the given place is an opaque type and the\n+        // expected type from the pattern is not.\n         let may_need_cast = match place.base() {\n             PlaceBase::Local(local) => {\n                 let ty = Place::ty_from(local, place.projection(), &cx.local_decls, cx.tcx).ty;"}]}