{"sha": "e29b5badbcf1d2f5e16bca00d067e07c18770f12", "node_id": "C_kwDOAAsO6NoAKGUyOWI1YmFkYmNmMWQyZjVlMTZiY2EwMGQwNjdlMDdjMTg3NzBmMTI", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-11-19T18:44:21Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-06T08:34:16Z"}, "message": "Fix mir interp of `TerminatorKind::Terminate`", "tree": {"sha": "81b21672c33cdb6764ad04c55085fd4a7811eb1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81b21672c33cdb6764ad04c55085fd4a7811eb1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e29b5badbcf1d2f5e16bca00d067e07c18770f12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e29b5badbcf1d2f5e16bca00d067e07c18770f12", "html_url": "https://github.com/rust-lang/rust/commit/e29b5badbcf1d2f5e16bca00d067e07c18770f12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e29b5badbcf1d2f5e16bca00d067e07c18770f12/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ae3a53a447bab9501ecb86b3fa686488c9f48dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ae3a53a447bab9501ecb86b3fa686488c9f48dd", "html_url": "https://github.com/rust-lang/rust/commit/5ae3a53a447bab9501ecb86b3fa686488c9f48dd"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "a07702f7d9bb3957a8ad47a20d0bb015cb25c04d", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e29b5badbcf1d2f5e16bca00d067e07c18770f12/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e29b5badbcf1d2f5e16bca00d067e07c18770f12/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=e29b5badbcf1d2f5e16bca00d067e07c18770f12", "patch": "@@ -145,7 +145,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n \n             Terminate => {\n-                M::abort(self, \"the program aborted execution\".to_owned())?;\n+                // FIXME: maybe should call `panic_no_unwind` lang item instead.\n+                M::abort(self, \"panic in a function that cannot unwind\".to_owned())?;\n             }\n \n             // When we encounter Resume, we've finished unwinding"}]}