{"sha": "0e02522b1b7f1db40b0b03bec9bc4d7241e5b247", "node_id": "C_kwDOAAsO6NoAKDBlMDI1MjJiMWI3ZjFkYjQwYjBiMDNiZWM5YmM0ZDcyNDFlNWIyNDc", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-01T21:30:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-01T21:30:32Z"}, "message": "Merge #11874\n\n11874: minor: enum variant wording r=Veykril a=jakevossen5\n\nAs discussed on Zulip: https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/generate.20_.20for.20.22an.20enum.20variant.22\r\n\r\n\n\nCo-authored-by: Jake Vossen <jake@vossen.dev>", "tree": {"sha": "6a46f77c3423c8a7368f71e5195e811406b7c721", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a46f77c3423c8a7368f71e5195e811406b7c721"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiR274CRBK7hj4Ov3rIwAAiBUIAKd2b495dgSJo6L0f/3D6og1\nUkd6X4JuWYSXsmWqxpVGPHEkYVIuBw+lsopvZ6cE48PTFVB5PneZjODToMIsg89F\nn8UiG0U3MHU12eMyh9IyHSruQ4rkCzZbjE8hi3IGhz8na+HrjO+HYCMxGbv6/PGN\nQEpl9h4ImeAdABqG1N8PDxXThSl8EQ4MVY1NVVDCoM9lWcwdj6Jt+6/imieMgEaq\nia87TuK+bQg5+RvdkEj6YIao/qXUmYBSnPvRy3F3uDGqco9TcIIeIwtCNrPmZ7kX\nX5mNzc5zifTTfaU2w5hQ+6DM0KEWMTviSeiCFvx9Syt/5/q0SoOdN0XHzr/JusU=\n=I/PD\n-----END PGP SIGNATURE-----\n", "payload": "tree 6a46f77c3423c8a7368f71e5195e811406b7c721\nparent ce8e028e9b8059ab1f4fc45b22d6837277716c2b\nparent 93a8fcf7a8328054e47e8775c94552a488a5ff58\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648848632 +0000\ncommitter GitHub <noreply@github.com> 1648848632 +0000\n\nMerge #11874\n\n11874: minor: enum variant wording r=Veykril a=jakevossen5\n\nAs discussed on Zulip: https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/generate.20_.20for.20.22an.20enum.20variant.22\r\n\r\n\n\nCo-authored-by: Jake Vossen <jake@vossen.dev>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247", "html_url": "https://github.com/rust-lang/rust/commit/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce8e028e9b8059ab1f4fc45b22d6837277716c2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce8e028e9b8059ab1f4fc45b22d6837277716c2b", "html_url": "https://github.com/rust-lang/rust/commit/ce8e028e9b8059ab1f4fc45b22d6837277716c2b"}, {"sha": "93a8fcf7a8328054e47e8775c94552a488a5ff58", "url": "https://api.github.com/repos/rust-lang/rust/commits/93a8fcf7a8328054e47e8775c94552a488a5ff58", "html_url": "https://github.com/rust-lang/rust/commit/93a8fcf7a8328054e47e8775c94552a488a5ff58"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "28e0b433a637cb900b66269192188698731b0965", "filename": "crates/ide_assists/src/handlers/generate_enum_is_method.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs?ref=0e02522b1b7f1db40b0b03bec9bc4d7241e5b247", "patch": "@@ -10,7 +10,7 @@ use crate::{\n \n // Assist: generate_enum_is_method\n //\n-// Generate an `is_` method for an enum variant.\n+// Generate an `is_` method for this enum variant.\n //\n // ```\n // enum Version {\n@@ -56,9 +56,9 @@ pub(crate) fn generate_enum_is_method(acc: &mut Assists, ctx: &AssistContext) ->\n \n     let target = variant.syntax().text_range();\n     acc.add_group(\n-        &GroupLabel(\"Generate `is_`,`as_`,`try_into_`\".to_owned()),\n+        &GroupLabel(\"Generate an `is_`,`as_`, or `try_into_` for this enum variant\".to_owned()),\n         AssistId(\"generate_enum_is_method\", AssistKind::Generate),\n-        \"Generate an `is_` method for an enum variant\",\n+        \"Generate an `is_` method for this enum variant\",\n         target,\n         |builder| {\n             let vis = parent_enum.visibility().map_or(String::new(), |v| format!(\"{} \", v));"}, {"sha": "fe7a3cd53572638491a71f3861df56b17eec2c06", "filename": "crates/ide_assists/src/handlers/generate_enum_projection_method.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_projection_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_projection_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_projection_method.rs?ref=0e02522b1b7f1db40b0b03bec9bc4d7241e5b247", "patch": "@@ -11,7 +11,7 @@ use crate::{\n \n // Assist: generate_enum_try_into_method\n //\n-// Generate an `try_into_` method for an enum variant.\n+// Generate a `try_into_` method for this enum variant.\n //\n // ```\n // enum Value {\n@@ -41,7 +41,7 @@ pub(crate) fn generate_enum_try_into_method(acc: &mut Assists, ctx: &AssistConte\n         acc,\n         ctx,\n         \"generate_enum_try_into_method\",\n-        \"Generate an `try_into_` method for an enum variant\",\n+        \"Generate a `try_into_` method for this enum variant\",\n         ProjectionProps {\n             fn_name_prefix: \"try_into\",\n             self_param: \"self\",\n@@ -55,7 +55,7 @@ pub(crate) fn generate_enum_try_into_method(acc: &mut Assists, ctx: &AssistConte\n \n // Assist: generate_enum_as_method\n //\n-// Generate an `as_` method for an enum variant.\n+// Generate an `as_` method for this enum variant.\n //\n // ```\n // enum Value {\n@@ -85,7 +85,7 @@ pub(crate) fn generate_enum_as_method(acc: &mut Assists, ctx: &AssistContext) ->\n         acc,\n         ctx,\n         \"generate_enum_as_method\",\n-        \"Generate an `as_` method for an enum variant\",\n+        \"Generate an `as_` method for this enum variant\",\n         ProjectionProps {\n             fn_name_prefix: \"as\",\n             self_param: \"&self\",\n@@ -141,7 +141,7 @@ fn generate_enum_projection_method(\n \n     let target = variant.syntax().text_range();\n     acc.add_group(\n-        &GroupLabel(\"Generate `is_`,`as_`,`try_into_`\".to_owned()),\n+        &GroupLabel(\"Generate an `is_`,`as_`, or `try_into_` for this enum variant\".to_owned()),\n         AssistId(assist_id, AssistKind::Generate),\n         assist_description,\n         target,"}, {"sha": "f7be3238241695f3784043837ab3f3714a393d39", "filename": "crates/ide_assists/src/handlers/generate_from_impl_for_enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs?ref=0e02522b1b7f1db40b0b03bec9bc4d7241e5b247", "patch": "@@ -5,7 +5,7 @@ use crate::{utils::generate_trait_impl_text, AssistContext, AssistId, AssistKind\n \n // Assist: generate_from_impl_for_enum\n //\n-// Adds a From impl for an enum variant with one tuple field.\n+// Adds a From impl for this enum variant with one tuple field.\n //\n // ```\n // enum A { $0One(u32) }"}]}