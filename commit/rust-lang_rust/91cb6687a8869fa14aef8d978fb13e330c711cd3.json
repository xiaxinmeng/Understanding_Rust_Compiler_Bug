{"sha": "91cb6687a8869fa14aef8d978fb13e330c711cd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxY2I2Njg3YTg4NjlmYTE0YWVmOGQ5NzhmYjEzZTMzMGM3MTFjZDM=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-03-27T18:15:24Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-03-27T18:17:16Z"}, "message": "cmp: rm TotalOrd impl code duplication", "tree": {"sha": "9f3390c3e3f094c6aa54be1678e595f330e51a20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f3390c3e3f094c6aa54be1678e595f330e51a20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91cb6687a8869fa14aef8d978fb13e330c711cd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91cb6687a8869fa14aef8d978fb13e330c711cd3", "html_url": "https://github.com/rust-lang/rust/commit/91cb6687a8869fa14aef8d978fb13e330c711cd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91cb6687a8869fa14aef8d978fb13e330c711cd3/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b93393e907eddab513fa2be541af4356b8203282", "url": "https://api.github.com/repos/rust-lang/rust/commits/b93393e907eddab513fa2be541af4356b8203282", "html_url": "https://github.com/rust-lang/rust/commit/b93393e907eddab513fa2be541af4356b8203282"}], "stats": {"total": 75, "additions": 22, "deletions": 53}, "files": [{"sha": "bc5b4b7f1484aa4e3c4e04a7e72c3468f873ab1d", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 22, "deletions": 53, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/91cb6687a8869fa14aef8d978fb13e330c711cd3/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91cb6687a8869fa14aef8d978fb13e330c711cd3/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=91cb6687a8869fa14aef8d978fb13e330c711cd3", "patch": "@@ -45,62 +45,31 @@ pub trait TotalOrd {\n     fn cmp(&self, other: &Self) -> Ordering;\n }\n \n-#[inline(always)]\n-fn icmp<T: Ord>(a: &T, b: &T) -> Ordering {\n-    if *a < *b { Less }\n-    else if *a > *b { Greater }\n-    else { Equal }\n-}\n-\n-impl TotalOrd for u8 {\n-    #[inline(always)]\n-    fn cmp(&self, other: &u8) -> Ordering { icmp(self, other) }\n-}\n-\n-impl TotalOrd for u16 {\n-    #[inline(always)]\n-    fn cmp(&self, other: &u16) -> Ordering { icmp(self, other) }\n-}\n-\n-impl TotalOrd for u32 {\n-    #[inline(always)]\n-    fn cmp(&self, other: &u32) -> Ordering { icmp(self, other) }\n-}\n-\n-impl TotalOrd for u64 {\n-    #[inline(always)]\n-    fn cmp(&self, other: &u64) -> Ordering { icmp(self, other) }\n-}\n-\n-impl TotalOrd for i8 {\n-    #[inline(always)]\n-    fn cmp(&self, other: &i8) -> Ordering { icmp(self, other) }\n-}\n-\n-impl TotalOrd for i16 {\n-    #[inline(always)]\n-    fn cmp(&self, other: &i16) -> Ordering { icmp(self, other) }\n-}\n-\n-impl TotalOrd for i32 {\n-    #[inline(always)]\n-    fn cmp(&self, other: &i32) -> Ordering { icmp(self, other) }\n-}\n+macro_rules! totalord_impl(\n+    ($t:ty) => {\n+        impl TotalOrd for $t {\n+            #[inline(always)]\n+            fn cmp(&self, other: &$t) -> Ordering {\n+                if *self < *other { Less }\n+                else if *self > *other { Greater }\n+                else { Equal }\n+            }\n+        }\n+    }\n+)\n \n-impl TotalOrd for i64 {\n-    #[inline(always)]\n-    fn cmp(&self, other: &i64) -> Ordering { icmp(self, other) }\n-}\n+totalord_impl!(u8)\n+totalord_impl!(u16)\n+totalord_impl!(u32)\n+totalord_impl!(u64)\n \n-impl TotalOrd for int {\n-    #[inline(always)]\n-    fn cmp(&self, other: &int) -> Ordering { icmp(self, other) }\n-}\n+totalord_impl!(i8)\n+totalord_impl!(i16)\n+totalord_impl!(i32)\n+totalord_impl!(i64)\n \n-impl TotalOrd for uint {\n-    #[inline(always)]\n-    fn cmp(&self, other: &uint) -> Ordering { icmp(self, other) }\n-}\n+totalord_impl!(int)\n+totalord_impl!(uint)\n \n /**\n * Trait for values that can be compared for a sort-order."}]}