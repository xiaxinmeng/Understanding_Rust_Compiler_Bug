{"sha": "a32244b3d9a52e88e75b1540558370b532bff985", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMjI0NGIzZDlhNTJlODhlNzViMTU0MDU1ODM3MGI1MzJiZmY5ODU=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2016-06-23T11:57:55Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2016-06-23T11:57:55Z"}, "message": "Don't ignore errors of syscalls in std::sys::unix::fd\n\nIf any of these syscalls fail, it indicates a programmer error that\nshould not be silently ignored.", "tree": {"sha": "e8bfca3bd63bdaf43fb1af21d6b58fdc56c2e062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8bfca3bd63bdaf43fb1af21d6b58fdc56c2e062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a32244b3d9a52e88e75b1540558370b532bff985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a32244b3d9a52e88e75b1540558370b532bff985", "html_url": "https://github.com/rust-lang/rust/commit/a32244b3d9a52e88e75b1540558370b532bff985", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a32244b3d9a52e88e75b1540558370b532bff985/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4960f2f9074d0d0f9de80b39f0b0ded6547e2ad8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4960f2f9074d0d0f9de80b39f0b0ded6547e2ad8", "html_url": "https://github.com/rust-lang/rust/commit/4960f2f9074d0d0f9de80b39f0b0ded6547e2ad8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "bbc9531d1dac17389b8ff2b82bea6345ddca1677", "filename": "src/libstd/sys/unix/fd.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a32244b3d9a52e88e75b1540558370b532bff985/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32244b3d9a52e88e75b1540558370b532bff985/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffd.rs?ref=a32244b3d9a52e88e75b1540558370b532bff985", "patch": "@@ -65,29 +65,29 @@ impl FileDesc {\n     pub fn set_cloexec(&self) {\n         unsafe {\n             let ret = libc::ioctl(self.fd, libc::FIOCLEX);\n-            debug_assert_eq!(ret, 0);\n+            assert_eq!(ret, 0);\n         }\n     }\n     #[cfg(any(target_env = \"newlib\", target_os = \"solaris\", target_os = \"emscripten\"))]\n     pub fn set_cloexec(&self) {\n         unsafe {\n             let previous = libc::fcntl(self.fd, libc::F_GETFD);\n             let ret = libc::fcntl(self.fd, libc::F_SETFD, previous | libc::FD_CLOEXEC);\n-            debug_assert_eq!(ret, 0);\n+            assert_eq!(ret, 0);\n         }\n     }\n \n     pub fn set_nonblocking(&self, nonblocking: bool) {\n         unsafe {\n             let previous = libc::fcntl(self.fd, libc::F_GETFL);\n-            debug_assert!(previous != -1);\n+            assert!(previous != -1);\n             let new = if nonblocking {\n                 previous | libc::O_NONBLOCK\n             } else {\n                 previous & !libc::O_NONBLOCK\n             };\n             let ret = libc::fcntl(self.fd, libc::F_SETFL, new);\n-            debug_assert!(ret != -1);\n+            assert!(ret != -1);\n         }\n     }\n "}]}