{"sha": "775ccadd255a034745e2b741434bd6a159a10869", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3NWNjYWRkMjU1YTAzNDc0NWUyYjc0MTQzNGJkNmExNTlhMTA4Njk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-12T18:42:03Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-15T18:41:15Z"}, "message": "libsyntax: Implement the new `box` syntax for unique pointers.", "tree": {"sha": "94bec20126a3656f0b5e098b9f8de0d68bef5a25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94bec20126a3656f0b5e098b9f8de0d68bef5a25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/775ccadd255a034745e2b741434bd6a159a10869", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/775ccadd255a034745e2b741434bd6a159a10869", "html_url": "https://github.com/rust-lang/rust/commit/775ccadd255a034745e2b741434bd6a159a10869", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/775ccadd255a034745e2b741434bd6a159a10869/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a87786e3e993564b444763f99dae24cdcb44a791", "url": "https://api.github.com/repos/rust-lang/rust/commits/a87786e3e993564b444763f99dae24cdcb44a791", "html_url": "https://github.com/rust-lang/rust/commit/a87786e3e993564b444763f99dae24cdcb44a791"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "33e3bae99a7589c43b6ce2c136cbfb83f8b4e746", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/775ccadd255a034745e2b741434bd6a159a10869/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/775ccadd255a034745e2b741434bd6a159a10869/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=775ccadd255a034745e2b741434bd6a159a10869", "patch": "@@ -2326,6 +2326,22 @@ impl Parser {\n               _ => self.mk_unary(UnUniq, e)\n             };\n           }\n+          token::IDENT(_, _) if self.is_keyword(keywords::Box) => {\n+            self.bump();\n+\n+            let subexpression = self.parse_prefix_expr();\n+            hi = subexpression.span.hi;\n+            // HACK: turn `box [...]` into a boxed-evec\n+            ex = match subexpression.node {\n+                ExprVec(..) |\n+                ExprLit(@codemap::Spanned {\n+                    node: lit_str(..),\n+                    span: _\n+                }) |\n+                ExprRepeat(..) => ExprVstore(subexpression, ExprVstoreUniq),\n+                _ => self.mk_unary(UnUniq, subexpression)\n+            };\n+          }\n           _ => return self.parse_dot_or_call_expr()\n         }\n         return self.mk_expr(lo, hi, ex);"}, {"sha": "9e1eec19b2c4935dd676db78904e48051e4bbdfd", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/775ccadd255a034745e2b741434bd6a159a10869/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/775ccadd255a034745e2b741434bd6a159a10869/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=775ccadd255a034745e2b741434bd6a159a10869", "patch": "@@ -465,15 +465,17 @@ declare_special_idents_and_keywords! {\n         (45,                         While,      \"while\");\n         (46,                         Continue,   \"continue\");\n         (47,                         Proc,       \"proc\");\n+        (48,                         Box,        \"box\");\n \n         'reserved:\n-        (48,                         Alignof,    \"alignof\");\n-        (49,                         Be,         \"be\");\n-        (50,                         Offsetof,   \"offsetof\");\n-        (51,                         Pure,       \"pure\");\n-        (52,                         Sizeof,     \"sizeof\");\n-        (53,                         Typeof,     \"typeof\");\n-        (54,                         Yield,      \"yield\");\n+        (49,                         Alignof,    \"alignof\");\n+        (50,                         Be,         \"be\");\n+        (51,                         Offsetof,   \"offsetof\");\n+        (52,                         Pure,       \"pure\");\n+        (53,                         Sizeof,     \"sizeof\");\n+        (54,                         Typeof,     \"typeof\");\n+        (55,                         Unsized,    \"unsized\");\n+        (56,                         Yield,      \"yield\");\n     }\n }\n "}, {"sha": "d5fd333411b825cd46114a33e07ad2f2bf7a5172", "filename": "src/test/run-pass/new-box-syntax.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/775ccadd255a034745e2b741434bd6a159a10869/src%2Ftest%2Frun-pass%2Fnew-box-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/775ccadd255a034745e2b741434bd6a159a10869/src%2Ftest%2Frun-pass%2Fnew-box-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnew-box-syntax.rs?ref=775ccadd255a034745e2b741434bd6a159a10869", "patch": "@@ -0,0 +1,8 @@\n+/* Any copyright is dedicated to the Public Domain.\n+ * http://creativecommons.org/publicdomain/zero/1.0/ */\n+\n+fn main() {\n+    let x: ~int = box 3;\n+    println!(\"{}\", *x);\n+}\n+"}]}