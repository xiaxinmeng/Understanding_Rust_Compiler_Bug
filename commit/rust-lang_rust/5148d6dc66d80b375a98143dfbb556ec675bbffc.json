{"sha": "5148d6dc66d80b375a98143dfbb556ec675bbffc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNDhkNmRjNjZkODBiMzc1YTk4MTQzZGZiYjU1NmVjNjc1YmJmZmM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-14T09:23:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-14T09:23:34Z"}, "message": "Merge #4405\n\n4405: Make some stuff public so that they can be reused by other tools r=pksunkara a=pksunkara\n\nSo, my little experiment of building a code analysis tool using rust-analyzer is successful. I am going to proceed to build the tool now. This PR makes the needed things public.\r\n\r\nI know there were some things about trying to change stuff regarding loading workspaces, which would make it more easier for other tools to reuse. But, until then, it should be okay using this `load_cargo` fn.\r\n\r\nBtw, if I were publish my tool, I would need the `ra` crates to be released. Since @matklad told me that he doesn't want to care about breaking stuff, I would propose the following.\r\n\r\nEvery monday, during the weekly release, we release a new pre v1 minor version of all the crates. That way, we don't need to care about breaking stuff but still have rust-analyzer on crates.io.\r\n\r\nI made https://github.com/pksunkara/cargo-workspaces to help release workspace crates easily.\r\n\r\nSo, coming week, we start with `0.1.0`, then week after that, we release `0.2.0` and then `0.3.0` etc.. until we decide on `1.0.0` which is probably when the compiler team also starts using the crates. There is no limit to the minor versions (we can even have `0.150.0` or `0.1500.0`), so I don't see anything wrong with this strategy.\n\nCo-authored-by: Pavan Kumar Sunkara <pavan.sss1991@gmail.com>", "tree": {"sha": "fb803ca1ef8185c0e4738d41a8f0e74c0108324a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb803ca1ef8185c0e4738d41a8f0e74c0108324a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5148d6dc66d80b375a98143dfbb556ec675bbffc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJevQ4WCRBK7hj4Ov3rIwAAdHIIADSDDq7Hgv4s5TI53b5jtIhK\nKseHEe19NJRi/NeJaQDgavl0K88109h5XtNVGjaW5tKp1nFH1o9vNTJYZz/TZqUG\n/fctc7qBERVy7oUFXy8MLQVBFccMn1MunsS/ETl7gQVCjVIemH42eAJm9351bQ+D\nQg54xW8AG9HyEu8P7ceLExKajrZ4nvIuYnawBEOhYMG0BBUSqvSLavno7kcYSeDn\niRTXL/yRAqISSn/O9I0P43cHPmYxkXnoQ1wIw/nHOGJXzz3pwix+9GpZ43bLZzzQ\nWUHix68fEApxTAVlNDunb025tethhmelhXEibjASN/Zcl5n6mzTZskd/nGYt/hw=\n=bFNK\n-----END PGP SIGNATURE-----\n", "payload": "tree fb803ca1ef8185c0e4738d41a8f0e74c0108324a\nparent 6fde7f1b6bb30481a38c3346729dde9bd1b42c1a\nparent 9f0a7eb97b4e047cebbe51ffd6f9e2092dd63e00\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1589448214 +0000\ncommitter GitHub <noreply@github.com> 1589448214 +0000\n\nMerge #4405\n\n4405: Make some stuff public so that they can be reused by other tools r=pksunkara a=pksunkara\n\nSo, my little experiment of building a code analysis tool using rust-analyzer is successful. I am going to proceed to build the tool now. This PR makes the needed things public.\r\n\r\nI know there were some things about trying to change stuff regarding loading workspaces, which would make it more easier for other tools to reuse. But, until then, it should be okay using this `load_cargo` fn.\r\n\r\nBtw, if I were publish my tool, I would need the `ra` crates to be released. Since @matklad told me that he doesn't want to care about breaking stuff, I would propose the following.\r\n\r\nEvery monday, during the weekly release, we release a new pre v1 minor version of all the crates. That way, we don't need to care about breaking stuff but still have rust-analyzer on crates.io.\r\n\r\nI made https://github.com/pksunkara/cargo-workspaces to help release workspace crates easily.\r\n\r\nSo, coming week, we start with `0.1.0`, then week after that, we release `0.2.0` and then `0.3.0` etc.. until we decide on `1.0.0` which is probably when the compiler team also starts using the crates. There is no limit to the minor versions (we can even have `0.150.0` or `0.1500.0`), so I don't see anything wrong with this strategy.\n\nCo-authored-by: Pavan Kumar Sunkara <pavan.sss1991@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5148d6dc66d80b375a98143dfbb556ec675bbffc", "html_url": "https://github.com/rust-lang/rust/commit/5148d6dc66d80b375a98143dfbb556ec675bbffc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5148d6dc66d80b375a98143dfbb556ec675bbffc/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fde7f1b6bb30481a38c3346729dde9bd1b42c1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fde7f1b6bb30481a38c3346729dde9bd1b42c1a", "html_url": "https://github.com/rust-lang/rust/commit/6fde7f1b6bb30481a38c3346729dde9bd1b42c1a"}, {"sha": "9f0a7eb97b4e047cebbe51ffd6f9e2092dd63e00", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f0a7eb97b4e047cebbe51ffd6f9e2092dd63e00", "html_url": "https://github.com/rust-lang/rust/commit/9f0a7eb97b4e047cebbe51ffd6f9e2092dd63e00"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "78149ddfcb3ff03360d111650918e2c11337d9d0", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5148d6dc66d80b375a98143dfbb556ec675bbffc/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5148d6dc66d80b375a98143dfbb556ec675bbffc/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=5148d6dc66d80b375a98143dfbb556ec675bbffc", "patch": "@@ -176,14 +176,10 @@ impl AnalysisHost {\n     pub fn request_cancellation(&mut self) {\n         self.db.request_cancellation();\n     }\n-    pub fn raw_database(\n-        &self,\n-    ) -> &(impl hir::db::HirDatabase + salsa::Database + ra_db::SourceDatabaseExt) {\n+    pub fn raw_database(&self) -> &RootDatabase {\n         &self.db\n     }\n-    pub fn raw_database_mut(\n-        &mut self,\n-    ) -> &mut (impl hir::db::HirDatabase + salsa::Database + ra_db::SourceDatabaseExt) {\n+    pub fn raw_database_mut(&mut self) -> &mut RootDatabase {\n         &mut self.db\n     }\n }"}, {"sha": "a2e9f65effc08478cd33c9137fbcb452979285ec", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5148d6dc66d80b375a98143dfbb556ec675bbffc/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5148d6dc66d80b375a98143dfbb556ec675bbffc/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=5148d6dc66d80b375a98143dfbb556ec675bbffc", "patch": "@@ -35,7 +35,7 @@ pub enum ProjectWorkspace {\n /// `PackageRoot` describes a package root folder.\n /// Which may be an external dependency, or a member of\n /// the current workspace.\n-#[derive(Clone)]\n+#[derive(Debug, Clone)]\n pub struct PackageRoot {\n     /// Path to the root folder\n     path: PathBuf,"}, {"sha": "c4f945101e132623697655b0eb7cb90a0f18b262", "filename": "crates/ra_text_edit/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5148d6dc66d80b375a98143dfbb556ec675bbffc/crates%2Fra_text_edit%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5148d6dc66d80b375a98143dfbb556ec675bbffc/crates%2Fra_text_edit%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_text_edit%2Fsrc%2Flib.rs?ref=5148d6dc66d80b375a98143dfbb556ec675bbffc", "patch": "@@ -21,7 +21,7 @@ pub struct TextEdit {\n     indels: Vec<Indel>,\n }\n \n-#[derive(Debug, Default)]\n+#[derive(Debug, Default, Clone)]\n pub struct TextEditBuilder {\n     indels: Vec<Indel>,\n }"}, {"sha": "39ce7790083cfa48207b00312d37c7014b15cbbc", "filename": "crates/rust-analyzer/src/cli.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5148d6dc66d80b375a98143dfbb556ec675bbffc/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5148d6dc66d80b375a98143dfbb556ec675bbffc/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli.rs?ref=5148d6dc66d80b375a98143dfbb556ec675bbffc", "patch": "@@ -16,6 +16,7 @@ use ra_syntax::{AstNode, SourceFile};\n pub use analysis_bench::{analysis_bench, BenchWhat, Position};\n pub use analysis_stats::analysis_stats;\n pub use diagnostics::diagnostics;\n+pub use load_cargo::load_cargo;\n \n #[derive(Clone, Copy)]\n pub enum Verbosity {"}, {"sha": "8eaf75ff6133ce3ef2d4457d114a48cd161ec739", "filename": "crates/rust-analyzer/src/cli/load_cargo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5148d6dc66d80b375a98143dfbb556ec675bbffc/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5148d6dc66d80b375a98143dfbb556ec675bbffc/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs?ref=5148d6dc66d80b375a98143dfbb556ec675bbffc", "patch": "@@ -22,7 +22,7 @@ fn vfs_root_to_id(r: ra_vfs::VfsRoot) -> SourceRootId {\n     SourceRootId(r.0)\n }\n \n-pub(crate) fn load_cargo(\n+pub fn load_cargo(\n     root: &Path,\n     load_out_dirs_from_check: bool,\n     with_proc_macro: bool,"}, {"sha": "4ef8cdf04f76c9c58dc2fa78ba694fb3cf4f59d8", "filename": "editors/code/src/commands/ssr.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5148d6dc66d80b375a98143dfbb556ec675bbffc/editors%2Fcode%2Fsrc%2Fcommands%2Fssr.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5148d6dc66d80b375a98143dfbb556ec675bbffc/editors%2Fcode%2Fsrc%2Fcommands%2Fssr.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fssr.ts?ref=5148d6dc66d80b375a98143dfbb556ec675bbffc", "patch": "@@ -11,7 +11,7 @@ export function ssr(ctx: Ctx): Cmd {\n \n         const options: vscode.InputBoxOptions = {\n             value: \"() ==>> ()\",\n-            prompt: \"EnteR request, for example 'Foo($a:expr) ==> Foo::new($a)' \",\n+            prompt: \"Enter request, for example 'Foo($a:expr) ==> Foo::new($a)' \",\n             validateInput: async (x: string) => {\n                 try {\n                     await client.sendRequest(ra.ssr, { query: x, parseOnly: true });"}]}