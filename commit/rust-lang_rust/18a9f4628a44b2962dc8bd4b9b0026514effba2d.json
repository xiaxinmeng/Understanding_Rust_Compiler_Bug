{"sha": "18a9f4628a44b2962dc8bd4b9b0026514effba2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4YTlmNDYyOGE0NGIyOTYyZGM4YmQ0YjliMDAyNjUxNGVmZmJhMmQ=", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-07-28T16:00:18Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-08-19T19:02:40Z"}, "message": "Don't encourage migration until io_safety is stablized.", "tree": {"sha": "1da059d8e96ce42d9ec8b961c18e3ebf5f776862", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1da059d8e96ce42d9ec8b961c18e3ebf5f776862"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18a9f4628a44b2962dc8bd4b9b0026514effba2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18a9f4628a44b2962dc8bd4b9b0026514effba2d", "html_url": "https://github.com/rust-lang/rust/commit/18a9f4628a44b2962dc8bd4b9b0026514effba2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18a9f4628a44b2962dc8bd4b9b0026514effba2d/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dbd6d60f011dd048355ddb229bc78c366598746", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dbd6d60f011dd048355ddb229bc78c366598746", "html_url": "https://github.com/rust-lang/rust/commit/1dbd6d60f011dd048355ddb229bc78c366598746"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "0fd9591b0165ad14af07a387e9d63ce58e4da009", "filename": "library/std/src/os/unix/io/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/18a9f4628a44b2962dc8bd4b9b0026514effba2d/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a9f4628a44b2962dc8bd4b9b0026514effba2d/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs?ref=18a9f4628a44b2962dc8bd4b9b0026514effba2d", "patch": "@@ -17,9 +17,10 @@\n //! Like raw pointers, `RawFd` values are primitive values. And in new code,\n //! they should be considered unsafe to do I/O on (analogous to dereferencing\n //! them). Rust did not always provide this guidance, so existing code in the\n-//! Rust ecosystem often doesn't mark `RawFd` usage as unsafe. Libraries are\n-//! encouraged to migrate, either by adding `unsafe` to APIs that dereference\n-//! `RawFd` values, or by using to `BorrowedFd` or `OwnedFd` instead.\n+//! Rust ecosystem often doesn't mark `RawFd` usage as unsafe. Once the\n+//! `io_safety` feature is stable, libraries will be encouraged to migrate,\n+//! either by adding `unsafe` to APIs that dereference `RawFd` values, or by\n+//! using to `BorrowedFd` or `OwnedFd` instead.\n //!\n //! Like references, `BorrowedFd` values are tied to a lifetime, to ensure\n //! that they don't outlive the resource they point to. These are safe to"}, {"sha": "2f6f0769548091ac6f74e1ee771e1bee3047cbfd", "filename": "library/std/src/os/windows/io/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18a9f4628a44b2962dc8bd4b9b0026514effba2d/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a9f4628a44b2962dc8bd4b9b0026514effba2d/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fmod.rs?ref=18a9f4628a44b2962dc8bd4b9b0026514effba2d", "patch": "@@ -23,10 +23,10 @@\n //! And in new code, they should be considered unsafe to do I/O on (analogous\n //! to dereferencing them). Rust did not always provide this guidance, so\n //! existing code in the Rust ecosystem often doesn't mark `RawHandle` and\n-//! `RawSocket` usage as unsafe. Libraries are encouraged to migrate, either by\n-//! adding `unsafe` to APIs that dereference `RawHandle` and `RawSocket`\n-//! values, or by using to `BorrowedHandle`, `BorrowedSocket`, `OwnedHandle`,\n-//! or `OwnedSocket`.\n+//! `RawSocket` usage as unsafe. Once the `io_safety` feature is stable,\n+//! libraries will be encouraged to migrate, either by adding `unsafe` to APIs\n+//! that dereference `RawHandle` and `RawSocket` values, or by using to\n+//! `BorrowedHandle`, `BorrowedSocket`, `OwnedHandle`, or `OwnedSocket`.\n //!\n //! Like references, `BorrowedHandle` and `BorrowedSocket` values are tied to a\n //! lifetime, to ensure that they don't outlive the resource they point to."}]}