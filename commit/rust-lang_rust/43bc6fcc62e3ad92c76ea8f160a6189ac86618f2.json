{"sha": "43bc6fcc62e3ad92c76ea8f160a6189ac86618f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYmM2ZmNjNjJlM2FkOTJjNzZlYThmMTYwYTYxODlhYzg2NjE4ZjI=", "commit": {"author": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-25T02:22:11Z"}, "committer": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-27T12:35:18Z"}, "message": "Replaced list::each with iter() in get_region", "tree": {"sha": "48efa5c1f889bbe51ea7976b1c4d050ddba835c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48efa5c1f889bbe51ea7976b1c4d050ddba835c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43bc6fcc62e3ad92c76ea8f160a6189ac86618f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43bc6fcc62e3ad92c76ea8f160a6189ac86618f2", "html_url": "https://github.com/rust-lang/rust/commit/43bc6fcc62e3ad92c76ea8f160a6189ac86618f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43bc6fcc62e3ad92c76ea8f160a6189ac86618f2/comments", "author": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c8731e65ce535254114c6404d46b2074d96ab07", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c8731e65ce535254114c6404d46b2074d96ab07", "html_url": "https://github.com/rust-lang/rust/commit/0c8731e65ce535254114c6404d46b2074d96ab07"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "dda45e839e12af82b89b0e10e1e4e76a05742c3f", "filename": "src/librustc/middle/typeck/mod.rs", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/43bc6fcc62e3ad92c76ea8f160a6189ac86618f2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43bc6fcc62e3ad92c76ea8f160a6189ac86618f2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs?ref=43bc6fcc62e3ad92c76ea8f160a6189ac86618f2", "patch": "@@ -73,7 +73,6 @@ use std::cell::RefCell;\n use collections::HashMap;\n use std::rc::Rc;\n use collections::List;\n-use collections::list;\n use syntax::codemap::Span;\n use syntax::print::pprust::*;\n use syntax::{ast, ast_map, abi};\n@@ -311,23 +310,18 @@ pub fn require_same_types(tcx: ty::ctxt,\n // corresponding ty::Region\n pub type isr_alist = @List<(ty::BoundRegion, ty::Region)>;\n \n-trait get_and_find_region {\n-    fn get(&self, br: ty::BoundRegion) -> ty::Region;\n-    fn find(&self, br: ty::BoundRegion) -> Option<ty::Region>;\n+trait get_region<'a, T:'static> {\n+    fn get(&'a self, br: ty::BoundRegion) -> ty::Region;\n }\n \n-impl get_and_find_region for isr_alist {\n-    fn get(&self, br: ty::BoundRegion) -> ty::Region {\n-        self.find(br).unwrap()\n-    }\n-\n-    fn find(&self, br: ty::BoundRegion) -> Option<ty::Region> {\n-        let mut ret = None;\n-        list::each(*self, |isr| {\n+impl<'a, T:'static> get_region <'a, T> for isr_alist {\n+    fn get(&'a self, br: ty::BoundRegion) -> ty::Region {\n+        let mut region = None;\n+        for isr in self.iter() {\n             let (isr_br, isr_r) = *isr;\n-            if isr_br == br { ret = Some(isr_r); false } else { true }\n-        });\n-        ret\n+            if isr_br == br { region = Some(isr_r); break; }\n+        };\n+        region.unwrap()\n     }\n }\n "}]}