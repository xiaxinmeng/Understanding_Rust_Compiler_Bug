{"sha": "eed27ac7f461d80eef7f7d944dffb08e8067db61", "node_id": "C_kwDOAAsO6NoAKGVlZDI3YWM3ZjQ2MWQ4MGVlZjdmN2Q5NDRkZmZiMDhlODA2N2RiNjE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-04-09T03:35:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-09T03:35:56Z"}, "message": "Rollup merge of #110096 - compiler-errors:tweak-tuple-idx-msg, r=Nilstrieb\n\nTweak tuple indexing suggestion\n\nFixes #110091", "tree": {"sha": "725a544a100558cf934d01ed4f859fc6313c386f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/725a544a100558cf934d01ed4f859fc6313c386f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eed27ac7f461d80eef7f7d944dffb08e8067db61", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkMjKcCRBK7hj4Ov3rIwAA0xgIAFPrfRAa6Mk7oKgk+tYfNu01\nyTazZKMXO1jEdY7qQj1s4dKvVGEpqeeFI5xxV9nzhA5fMaeFbGxiTGPSGw7Yl2RJ\ne2q2F493fcNW7+s19CaF1aFv9IgVlqgc8zcY03ns/gPKNxw8ag86VCqYZHjitGT7\n4nhETsgGcWFrH1mUHflY9jElRrCzXoKysigw8hUos0CSdvNPXAiqV2EhJF51Y9cA\nOyrGhe6phEmRdRqYJu7uTkZrMGE1+K8UzaqG2aCwyI+nhX6FFyz38MN2vSNXfWGO\nRYn8QLLr4huC/R0oeZ4XSWRpcdbskVZvcF9tUzrK4549x37hyD9SOk6KgedYqgI=\n=TYMV\n-----END PGP SIGNATURE-----\n", "payload": "tree 725a544a100558cf934d01ed4f859fc6313c386f\nparent 01fcd19115e9b778b29c9c3b2db9ba2b395683e7\nparent fbc3457d3582c44882ed20c5b11c6ba589163ab1\nauthor Yuki Okushi <jtitor@2k36.org> 1681011356 +0900\ncommitter GitHub <noreply@github.com> 1681011356 +0900\n\nRollup merge of #110096 - compiler-errors:tweak-tuple-idx-msg, r=Nilstrieb\n\nTweak tuple indexing suggestion\n\nFixes #110091\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eed27ac7f461d80eef7f7d944dffb08e8067db61", "html_url": "https://github.com/rust-lang/rust/commit/eed27ac7f461d80eef7f7d944dffb08e8067db61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eed27ac7f461d80eef7f7d944dffb08e8067db61/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01fcd19115e9b778b29c9c3b2db9ba2b395683e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/01fcd19115e9b778b29c9c3b2db9ba2b395683e7", "html_url": "https://github.com/rust-lang/rust/commit/01fcd19115e9b778b29c9c3b2db9ba2b395683e7"}, {"sha": "fbc3457d3582c44882ed20c5b11c6ba589163ab1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbc3457d3582c44882ed20c5b11c6ba589163ab1", "html_url": "https://github.com/rust-lang/rust/commit/fbc3457d3582c44882ed20c5b11c6ba589163ab1"}], "stats": {"total": 52, "additions": 35, "deletions": 17}, "files": [{"sha": "68e096e3bd023958e6fb2b7c14f4c370cd05aa7b", "filename": "compiler/rustc_hir_typeck/src/expr.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/eed27ac7f461d80eef7f7d944dffb08e8067db61/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eed27ac7f461d80eef7f7d944dffb08e8067db61/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs?ref=eed27ac7f461d80eef7f7d944dffb08e8067db61", "patch": "@@ -2810,23 +2810,26 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         \"cannot index into a value of type `{base_t}`\",\n                     );\n                     // Try to give some advice about indexing tuples.\n-                    if let ty::Tuple(..) = base_t.kind() {\n+                    if let ty::Tuple(types) = base_t.kind() {\n                         let mut needs_note = true;\n                         // If the index is an integer, we can show the actual\n                         // fixed expression:\n-                        if let ExprKind::Lit(ref lit) = idx.kind {\n-                            if let ast::LitKind::Int(i, ast::LitIntType::Unsuffixed) = lit.node {\n-                                let snip = self.tcx.sess.source_map().span_to_snippet(base.span);\n-                                if let Ok(snip) = snip {\n-                                    err.span_suggestion(\n-                                        expr.span,\n-                                        \"to access tuple elements, use\",\n-                                        format!(\"{snip}.{i}\"),\n-                                        Applicability::MachineApplicable,\n-                                    );\n-                                    needs_note = false;\n-                                }\n+                        if let ExprKind::Lit(ref lit) = idx.kind\n+                            && let ast::LitKind::Int(i, ast::LitIntType::Unsuffixed) = lit.node\n+                            && i < types.len().try_into().expect(\"expected tuple index to be < usize length\")\n+                        {\n+                            let snip = self.tcx.sess.source_map().span_to_snippet(base.span);\n+                            if let Ok(snip) = snip {\n+                                err.span_suggestion(\n+                                    expr.span,\n+                                    \"to access tuple elements, use\",\n+                                    format!(\"{snip}.{i}\"),\n+                                    Applicability::MachineApplicable,\n+                                );\n+                                needs_note = false;\n                             }\n+                        } else if let ExprKind::Path(..) = idx.peel_borrows().kind {\n+                            err.span_label(idx.span, \"cannot access tuple elements at a variable index\");\n                         }\n                         if needs_note {\n                             err.help("}, {"sha": "88b848d6f85747848d5cd8d5564b93b86242301b", "filename": "tests/ui/index_message.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eed27ac7f461d80eef7f7d944dffb08e8067db61/tests%2Fui%2Findex_message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eed27ac7f461d80eef7f7d944dffb08e8067db61/tests%2Fui%2Findex_message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findex_message.rs?ref=eed27ac7f461d80eef7f7d944dffb08e8067db61", "patch": "@@ -1,4 +1,4 @@\n fn main() {\n-    let z = ();\n-    let _ = z[0]; //~ ERROR cannot index into a value of type `()`\n+    let z = (10,);\n+    let _ = z[0]; //~ ERROR cannot index into a value of type `({integer},)`\n }"}, {"sha": "56d1d70809db85c1ef06b88b7f7e65e650dd109c", "filename": "tests/ui/index_message.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eed27ac7f461d80eef7f7d944dffb08e8067db61/tests%2Fui%2Findex_message.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eed27ac7f461d80eef7f7d944dffb08e8067db61/tests%2Fui%2Findex_message.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findex_message.stderr?ref=eed27ac7f461d80eef7f7d944dffb08e8067db61", "patch": "@@ -1,4 +1,4 @@\n-error[E0608]: cannot index into a value of type `()`\n+error[E0608]: cannot index into a value of type `({integer},)`\n   --> $DIR/index_message.rs:3:13\n    |\n LL |     let _ = z[0];"}, {"sha": "060d3b34e09d991a39aab73ba5ccb5cd76bc4310", "filename": "tests/ui/issues/issue-27842.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eed27ac7f461d80eef7f7d944dffb08e8067db61/tests%2Fui%2Fissues%2Fissue-27842.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eed27ac7f461d80eef7f7d944dffb08e8067db61/tests%2Fui%2Fissues%2Fissue-27842.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-27842.rs?ref=eed27ac7f461d80eef7f7d944dffb08e8067db61", "patch": "@@ -8,4 +8,9 @@ fn main() {\n     let i = 0_usize;\n     let _ = tup[i];\n     //~^ ERROR cannot index into a value of type\n+\n+    // the case where the index is out of bounds\n+    let tup = (10,);\n+    let _ = tup[3];\n+    //~^ ERROR cannot index into a value of type\n }"}, {"sha": "83333aa0c47b95f55b2b10c5f0b611ada687fe75", "filename": "tests/ui/issues/issue-27842.stderr", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eed27ac7f461d80eef7f7d944dffb08e8067db61/tests%2Fui%2Fissues%2Fissue-27842.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eed27ac7f461d80eef7f7d944dffb08e8067db61/tests%2Fui%2Fissues%2Fissue-27842.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-27842.stderr?ref=eed27ac7f461d80eef7f7d944dffb08e8067db61", "patch": "@@ -8,10 +8,20 @@ error[E0608]: cannot index into a value of type `({integer}, {integer}, {integer\n   --> $DIR/issue-27842.rs:9:13\n    |\n LL |     let _ = tup[i];\n+   |             ^^^^-^\n+   |                 |\n+   |                 cannot access tuple elements at a variable index\n+   |\n+   = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)\n+\n+error[E0608]: cannot index into a value of type `({integer},)`\n+  --> $DIR/issue-27842.rs:14:13\n+   |\n+LL |     let _ = tup[3];\n    |             ^^^^^^\n    |\n    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0608`."}]}