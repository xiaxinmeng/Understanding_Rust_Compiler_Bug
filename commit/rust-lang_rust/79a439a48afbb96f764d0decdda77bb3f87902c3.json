{"sha": "79a439a48afbb96f764d0decdda77bb3f87902c3", "node_id": "C_kwDOAAsO6NoAKDc5YTQzOWE0OGFmYmI5NmY3NjRkMGRlY2RkYTc3YmIzZjg3OTAyYzM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-24T13:34:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-24T13:34:32Z"}, "message": "Auto merge of #9370 - mikerite:20220824_ty_contains, r=Jarcho\n\nReplace `contains_ty(..)` with `Ty::contains(..)`\n\nThis removes some code we don't need and the method syntax is\nalso more readable IMO.\n\nchangelog: none", "tree": {"sha": "35e525b9ba84e96f05275be7b0a06e0c877a5e85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35e525b9ba84e96f05275be7b0a06e0c877a5e85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79a439a48afbb96f764d0decdda77bb3f87902c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79a439a48afbb96f764d0decdda77bb3f87902c3", "html_url": "https://github.com/rust-lang/rust/commit/79a439a48afbb96f764d0decdda77bb3f87902c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79a439a48afbb96f764d0decdda77bb3f87902c3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "html_url": "https://github.com/rust-lang/rust/commit/b33002d5ff09735dd8c7d44502d7a0e80e3022c1"}, {"sha": "a0afbdfbec5923850ae20c77a2f466b904dae04c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0afbdfbec5923850ae20c77a2f466b904dae04c", "html_url": "https://github.com/rust-lang/rust/commit/a0afbdfbec5923850ae20c77a2f466b904dae04c"}], "stats": {"total": 32, "additions": 11, "deletions": 21}, "files": [{"sha": "abe01d6e2c425944d87ab7004ff164013b96f475", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=79a439a48afbb96f764d0decdda77bb3f87902c3", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::{span_lint_and_sugg, span_lint_hir_and_then};\n use clippy_utils::source::{snippet_with_applicability, snippet_with_context};\n use clippy_utils::sugg::has_enclosing_paren;\n-use clippy_utils::ty::{contains_ty, expr_sig, is_copy, peel_mid_ty_refs, ty_sig, variant_of_res};\n+use clippy_utils::ty::{expr_sig, is_copy, peel_mid_ty_refs, ty_sig, variant_of_res};\n use clippy_utils::{fn_def_id, get_parent_expr, is_lint_allowed, meets_msrv, msrvs, path_to_local, walk_to_expr_usage};\n use rustc_ast::util::parser::{PREC_POSTFIX, PREC_PREFIX};\n use rustc_data_structures::fx::FxIndexMap;\n@@ -1158,7 +1158,7 @@ fn replace_types<'tcx>(\n             .inputs_and_output\n             .iter()\n             .enumerate()\n-            .all(|(i, ty)| (replaced.is_empty() && i == arg_index) || !contains_ty(ty, param_ty.to_ty(cx.tcx)))\n+            .all(|(i, ty)| (replaced.is_empty() && i == arg_index) || !ty.contains(param_ty.to_ty(cx.tcx)))\n         {\n             return false;\n         }"}, {"sha": "327865e4c858ab36e8166c5773aa505804a44cce", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=79a439a48afbb96f764d0decdda77bb3f87902c3", "patch": "@@ -1,5 +1,4 @@\n use clippy_utils::diagnostics::span_lint_hir;\n-use clippy_utils::ty::contains_ty;\n use rustc_hir::intravisit;\n use rustc_hir::{self, AssocItemKind, Body, FnDecl, HirId, HirIdSet, Impl, ItemKind, Node, Pat, PatKind};\n use rustc_infer::infer::TyCtxtInferExt;\n@@ -166,7 +165,7 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n                 // skip if there is a `self` parameter binding to a type\n                 // that contains `Self` (i.e.: `self: Box<Self>`), see #4804\n                 if let Some(trait_self_ty) = self.trait_self_ty {\n-                    if map.name(cmt.hir_id) == kw::SelfLower && contains_ty(cmt.place.ty(), trait_self_ty) {\n+                    if map.name(cmt.hir_id) == kw::SelfLower && cmt.place.ty().contains(trait_self_ty) {\n                         return;\n                     }\n                 }"}, {"sha": "0ec35ddc1dbe2d1f30574ba22d9e6b62b70bce4f", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=79a439a48afbb96f764d0decdda77bb3f87902c3", "patch": "@@ -99,7 +99,7 @@ mod zst_offset;\n use bind_instead_of_map::BindInsteadOfMap;\n use clippy_utils::consts::{constant, Constant};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help};\n-use clippy_utils::ty::{contains_adt_constructor, contains_ty, implements_trait, is_copy, is_type_diagnostic_item};\n+use clippy_utils::ty::{contains_adt_constructor, implements_trait, is_copy, is_type_diagnostic_item};\n use clippy_utils::{\n     contains_return, get_trait_def_id, is_trait_method, iter_input_pats, meets_msrv, msrvs, paths, return_ty,\n };\n@@ -3242,7 +3242,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n                 if contains_adt_constructor(ret_ty, self_adt) {\n                     return;\n                 }\n-            } else if contains_ty(ret_ty, self_ty) {\n+            } else if ret_ty.contains(self_ty) {\n                 return;\n             }\n \n@@ -3260,7 +3260,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n                             if contains_adt_constructor(assoc_ty, self_adt) {\n                                 return;\n                             }\n-                        } else if contains_ty(assoc_ty, self_ty) {\n+                        } else if assoc_ty.contains(self_ty) {\n                             return;\n                         }\n                     }\n@@ -3309,7 +3309,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n             if let TraitItemKind::Fn(_, _) = item.kind;\n             let ret_ty = return_ty(cx, item.hir_id());\n             let self_ty = TraitRef::identity(cx.tcx, item.def_id.to_def_id()).self_ty().skip_binder();\n-            if !contains_ty(ret_ty, self_ty);\n+            if !ret_ty.contains(self_ty);\n \n             then {\n                 span_lint("}, {"sha": "44bf84352943853bddfa26628e7515617a93e14f", "filename": "clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=79a439a48afbb96f764d0decdda77bb3f87902c3", "patch": "@@ -3,8 +3,7 @@ use super::unnecessary_iter_cloned::{self, is_into_iter};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::{\n-    contains_ty, get_associated_type, get_iterator_item_ty, implements_trait, is_copy, is_type_diagnostic_item,\n-    peel_mid_ty_refs,\n+    get_associated_type, get_iterator_item_ty, implements_trait, is_copy, is_type_diagnostic_item, peel_mid_ty_refs,\n };\n use clippy_utils::{fn_def_id, get_parent_expr, is_diag_item_method, is_diag_trait_item};\n use clippy_utils::{meets_msrv, msrvs};\n@@ -304,7 +303,7 @@ fn check_other_call_arg<'tcx>(\n         // (https://github.com/rust-lang/rust-clippy/issues/8507).\n         if (n_refs == 0 && !receiver_ty.is_ref())\n             || trait_predicate.def_id() != as_ref_trait_id\n-            || !contains_ty(fn_sig.output(), input);\n+            || !fn_sig.output().contains(input);\n         if let Some(receiver_snippet) = snippet_opt(cx, receiver.span);\n         then {\n             span_lint_and_sugg("}, {"sha": "9cea4d8806710a84b9f1980361f0c2e407a64321", "filename": "clippy_lints/src/self_named_constructors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_lints%2Fsrc%2Fself_named_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_lints%2Fsrc%2Fself_named_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fself_named_constructors.rs?ref=79a439a48afbb96f764d0decdda77bb3f87902c3", "patch": "@@ -1,6 +1,6 @@\n use clippy_utils::diagnostics::span_lint;\n use clippy_utils::return_ty;\n-use clippy_utils::ty::{contains_adt_constructor, contains_ty};\n+use clippy_utils::ty::contains_adt_constructor;\n use rustc_hir::{Impl, ImplItem, ImplItemKind, ItemKind, Node};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -66,7 +66,7 @@ impl<'tcx> LateLintPass<'tcx> for SelfNamedConstructors {\n             if !contains_adt_constructor(ret_ty, self_adt) {\n                 return;\n             }\n-        } else if !contains_ty(ret_ty, self_ty) {\n+        } else if !ret_ty.contains(self_ty) {\n             return;\n         }\n "}, {"sha": "00182e739b875ceb0ad6fafe77aa07e942733c59", "filename": "clippy_utils/src/ty.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a439a48afbb96f764d0decdda77bb3f87902c3/clippy_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fty.rs?ref=79a439a48afbb96f764d0decdda77bb3f87902c3", "patch": "@@ -43,14 +43,6 @@ pub fn can_partially_move_ty<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool\n     }\n }\n \n-/// Walks into `ty` and returns `true` if any inner type is the same as `other_ty`\n-pub fn contains_ty<'tcx>(ty: Ty<'tcx>, other_ty: Ty<'tcx>) -> bool {\n-    ty.walk().any(|inner| match inner.unpack() {\n-        GenericArgKind::Type(inner_ty) => other_ty == inner_ty,\n-        GenericArgKind::Lifetime(_) | GenericArgKind::Const(_) => false,\n-    })\n-}\n-\n /// Walks into `ty` and returns `true` if any inner type is an instance of the given adt\n /// constructor.\n pub fn contains_adt_constructor<'tcx>(ty: Ty<'tcx>, adt: AdtDef<'tcx>) -> bool {"}]}