{"sha": "ad7b4d5d22b8d2b67225ab717800556d5139c74d", "node_id": "C_kwDOAAsO6NoAKGFkN2I0ZDVkMjJiOGQyYjY3MjI1YWI3MTc4MDA1NTZkNTEzOWM3NGQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-29T01:11:31Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-29T01:13:36Z"}, "message": "Move a comment to the right place.\n\nThis comment on the HIR `visit_path_segment` is supposed be on the AST\n`visit_path_segment`.", "tree": {"sha": "326226a861c865b8183608f8a9eb4ce245b50bc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/326226a861c865b8183608f8a9eb4ce245b50bc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad7b4d5d22b8d2b67225ab717800556d5139c74d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7b4d5d22b8d2b67225ab717800556d5139c74d", "html_url": "https://github.com/rust-lang/rust/commit/ad7b4d5d22b8d2b67225ab717800556d5139c74d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad7b4d5d22b8d2b67225ab717800556d5139c74d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22379bd9db7e499e56d0caa8c008e5241d5dd481", "url": "https://api.github.com/repos/rust-lang/rust/commits/22379bd9db7e499e56d0caa8c008e5241d5dd481", "html_url": "https://github.com/rust-lang/rust/commit/22379bd9db7e499e56d0caa8c008e5241d5dd481"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0540c944b038dc10042ec2f369cd446a8bdf6307", "filename": "compiler/rustc_passes/src/hir_stats.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ad7b4d5d22b8d2b67225ab717800556d5139c74d/compiler%2Frustc_passes%2Fsrc%2Fhir_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad7b4d5d22b8d2b67225ab717800556d5139c74d/compiler%2Frustc_passes%2Fsrc%2Fhir_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fhir_stats.rs?ref=ad7b4d5d22b8d2b67225ab717800556d5139c74d", "patch": "@@ -301,10 +301,6 @@ impl<'v> hir_visit::Visitor<'v> for StatCollector<'v> {\n         hir_visit::walk_path(self, path)\n     }\n \n-    // `PathSegment` has one inline use (in `ast::ExprKind::MethodCall`) and\n-    // one non-inline use (in `Path::segments`). The latter case is more common\n-    // than the former case, so we implement this visitor and tolerate the\n-    // double counting in the former case.\n     fn visit_path_segment(&mut self, path_span: Span, path_segment: &'v hir::PathSegment<'v>) {\n         self.record(\"PathSegment\", Id::None, path_segment);\n         hir_visit::walk_path_segment(self, path_span, path_segment)\n@@ -509,6 +505,10 @@ impl<'v> ast_visit::Visitor<'v> for StatCollector<'v> {\n     // common, so we don't implement `visit_use_tree` and tolerate the missed\n     // coverage in the latter case.\n \n+    // `PathSegment` has one inline use (in `ast::ExprKind::MethodCall`) and\n+    // one non-inline use (in `ast::Path::segments`). The latter case is more\n+    // common than the former case, so we implement this visitor and tolerate\n+    // the double counting in the former case.\n     fn visit_path_segment(&mut self, path_span: Span, path_segment: &'v ast::PathSegment) {\n         self.record(\"PathSegment\", Id::None, path_segment);\n         ast_visit::walk_path_segment(self, path_span, path_segment)"}]}