{"sha": "38b14258a38dd69da85ffb920db8b184d37ccaf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YjE0MjU4YTM4ZGQ2OWRhODVmZmI5MjBkYjhiMTg0ZDM3Y2NhZjM=", "commit": {"author": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2014-11-19T06:54:52Z"}, "committer": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2014-11-19T07:43:15Z"}, "message": "iOS: fixed broken build after disallowed coercions", "tree": {"sha": "a998495c920d51b6a8685b9b3a66d970d2bfc353", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a998495c920d51b6a8685b9b3a66d970d2bfc353"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38b14258a38dd69da85ffb920db8b184d37ccaf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38b14258a38dd69da85ffb920db8b184d37ccaf3", "html_url": "https://github.com/rust-lang/rust/commit/38b14258a38dd69da85ffb920db8b184d37ccaf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38b14258a38dd69da85ffb920db8b184d37ccaf3/comments", "author": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e09d98603e608c9e47d4c89f7b4dca87a4b56da3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e09d98603e608c9e47d4c89f7b4dca87a4b56da3", "html_url": "https://github.com/rust-lang/rust/commit/e09d98603e608c9e47d4c89f7b4dca87a4b56da3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2a4d8347c30c9a68aa061f0118e1acd2de654777", "filename": "src/libstd/rand/os.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38b14258a38dd69da85ffb920db8b184d37ccaf3/src%2Flibstd%2Frand%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38b14258a38dd69da85ffb920db8b184d37ccaf3/src%2Flibstd%2Frand%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fos.rs?ref=38b14258a38dd69da85ffb920db8b184d37ccaf3", "patch": "@@ -212,12 +212,12 @@ mod imp {\n     impl Rng for OsRng {\n         fn next_u32(&mut self) -> u32 {\n             let mut v = [0u8, .. 4];\n-            self.fill_bytes(v);\n+            self.fill_bytes(&mut v);\n             unsafe { mem::transmute(v) }\n         }\n         fn next_u64(&mut self) -> u64 {\n             let mut v = [0u8, .. 8];\n-            self.fill_bytes(v);\n+            self.fill_bytes(&mut v);\n             unsafe { mem::transmute(v) }\n         }\n         fn fill_bytes(&mut self, v: &mut [u8]) {"}]}