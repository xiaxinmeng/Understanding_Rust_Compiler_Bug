{"sha": "83b0feca0bc19e508b9acf21afcd601930bf05b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYjBmZWNhMGJjMTllNTA4YjlhY2YyMWFmY2Q2MDE5MzBiZjA1Yjc=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-07-22T04:07:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-22T04:07:25Z"}, "message": "Merge pull request #1811 from topecongiro/rustfmt-skip-on-stmt\n\nSupport rustfmt_skip on statements", "tree": {"sha": "f92755bad6daacd45a71cedb19b8c40538324b39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f92755bad6daacd45a71cedb19b8c40538324b39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83b0feca0bc19e508b9acf21afcd601930bf05b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83b0feca0bc19e508b9acf21afcd601930bf05b7", "html_url": "https://github.com/rust-lang/rust/commit/83b0feca0bc19e508b9acf21afcd601930bf05b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83b0feca0bc19e508b9acf21afcd601930bf05b7/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb27bc5c687c38ffc7e10e94ad55a10e06ee1e25", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb27bc5c687c38ffc7e10e94ad55a10e06ee1e25", "html_url": "https://github.com/rust-lang/rust/commit/bb27bc5c687c38ffc7e10e94ad55a10e06ee1e25"}, {"sha": "d7a57d36e7b233937fb7a620f755d244d2518d7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7a57d36e7b233937fb7a620f755d244d2518d7b", "html_url": "https://github.com/rust-lang/rust/commit/d7a57d36e7b233937fb7a620f755d244d2518d7b"}], "stats": {"total": 92, "additions": 84, "deletions": 8}, "files": [{"sha": "813f5422f2c46f30d9fc3a761de5d0b9b0ef0fbe", "filename": "src/visitor.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/83b0feca0bc19e508b9acf21afcd601930bf05b7/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83b0feca0bc19e508b9acf21afcd601930bf05b7/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=83b0feca0bc19e508b9acf21afcd601930bf05b7", "patch": "@@ -26,7 +26,7 @@ use items::{format_impl, format_trait, rewrite_associated_impl_type, rewrite_ass\n use lists::{itemize_list, write_list, DefinitiveListTactic, ListFormatting, SeparatorTactic};\n use macros::{rewrite_macro, MacroPosition};\n use rewrite::{Rewrite, RewriteContext};\n-use utils::{self, mk_sp};\n+use utils::{self, contains_skip, mk_sp};\n \n fn is_use_item(item: &ast::Item) -> bool {\n     match item.node {\n@@ -79,11 +79,15 @@ impl<'a> FmtVisitor<'a> {\n             ast::StmtKind::Item(ref item) => {\n                 self.visit_item(item);\n             }\n-            ast::StmtKind::Local(..) => {\n-                let rewrite = stmt.rewrite(\n-                    &self.get_context(),\n-                    Shape::indented(self.block_indent, self.config),\n-                );\n+            ast::StmtKind::Local(ref local) => {\n+                let rewrite = if contains_skip(&local.attrs) {\n+                    None\n+                } else {\n+                    stmt.rewrite(\n+                        &self.get_context(),\n+                        Shape::indented(self.block_indent, self.config),\n+                    )\n+                };\n                 self.push_rewrite(stmt.span, rewrite);\n             }\n             ast::StmtKind::Expr(ref expr) => {\n@@ -113,8 +117,12 @@ impl<'a> FmtVisitor<'a> {\n                 self.push_rewrite(span, rewrite)\n             }\n             ast::StmtKind::Mac(ref mac) => {\n-                let (ref mac, _macro_style, _) = **mac;\n-                self.visit_mac(mac, None, MacroPosition::Statement);\n+                let (ref mac, _macro_style, ref attrs) = **mac;\n+                if contains_skip(attrs) {\n+                    self.push_rewrite(mac.span, None);\n+                } else {\n+                    self.visit_mac(mac, None, MacroPosition::Statement);\n+                }\n                 self.format_missing(stmt.span.hi);\n             }\n         }"}, {"sha": "69c7b53a57b088670b9fd589363540032618f18b", "filename": "tests/source/skip.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/83b0feca0bc19e508b9acf21afcd601930bf05b7/tests%2Fsource%2Fskip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83b0feca0bc19e508b9acf21afcd601930bf05b7/tests%2Fsource%2Fskip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fskip.rs?ref=83b0feca0bc19e508b9acf21afcd601930bf05b7", "patch": "@@ -29,3 +29,37 @@ fn issue1346() {\n         }\n     }))\n }\n+\n+fn skip_on_statements() {\n+    // Semi\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    foo(\n+        1, 2, 3, 4,\n+        1, 2,\n+        1, 2, 3,\n+    );\n+\n+    // Local\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    let x = foo(  a,   b  ,  c);\n+\n+    // Item\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    use   foobar  ;\n+\n+    // Mac\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    vec![\n+        1, 2, 3, 4,\n+        1, 2, 3, 4,\n+        1, 2, 3, 4,\n+        1, 2, 3,\n+        1,\n+        1, 2,\n+        1,\n+    ];\n+\n+    // Expr\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    foo(  a,   b  ,  c)\n+}"}, {"sha": "69c7b53a57b088670b9fd589363540032618f18b", "filename": "tests/target/skip.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/83b0feca0bc19e508b9acf21afcd601930bf05b7/tests%2Ftarget%2Fskip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83b0feca0bc19e508b9acf21afcd601930bf05b7/tests%2Ftarget%2Fskip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fskip.rs?ref=83b0feca0bc19e508b9acf21afcd601930bf05b7", "patch": "@@ -29,3 +29,37 @@ fn issue1346() {\n         }\n     }))\n }\n+\n+fn skip_on_statements() {\n+    // Semi\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    foo(\n+        1, 2, 3, 4,\n+        1, 2,\n+        1, 2, 3,\n+    );\n+\n+    // Local\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    let x = foo(  a,   b  ,  c);\n+\n+    // Item\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    use   foobar  ;\n+\n+    // Mac\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    vec![\n+        1, 2, 3, 4,\n+        1, 2, 3, 4,\n+        1, 2, 3, 4,\n+        1, 2, 3,\n+        1,\n+        1, 2,\n+        1,\n+    ];\n+\n+    // Expr\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    foo(  a,   b  ,  c)\n+}"}]}