{"sha": "87c9a9e25d922cd9e00981ac9a3e6fa43df20c0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YzlhOWUyNWQ5MjJjZDllMDA5ODFhYzlhM2U2ZmE0M2RmMjBjMGI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-24T18:44:14Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-24T18:44:14Z"}, "message": "Avoid iterating ty parts on drop when there are no heap pointers in ty. Wins several tens of kb on rustc.", "tree": {"sha": "df4cfe231a4519cb4c59dc2f0d6759dea7fe1ba4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df4cfe231a4519cb4c59dc2f0d6759dea7fe1ba4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87c9a9e25d922cd9e00981ac9a3e6fa43df20c0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87c9a9e25d922cd9e00981ac9a3e6fa43df20c0b", "html_url": "https://github.com/rust-lang/rust/commit/87c9a9e25d922cd9e00981ac9a3e6fa43df20c0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87c9a9e25d922cd9e00981ac9a3e6fa43df20c0b/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5255b4534856e25cd96b1041000837d65cc51a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5255b4534856e25cd96b1041000837d65cc51a6", "html_url": "https://github.com/rust-lang/rust/commit/b5255b4534856e25cd96b1041000837d65cc51a6"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "f0fca1a8ca017f5a58f78d15f07459b4cceca0d4", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/87c9a9e25d922cd9e00981ac9a3e6fa43df20c0b/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/87c9a9e25d922cd9e00981ac9a3e6fa43df20c0b/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=87c9a9e25d922cd9e00981ac9a3e6fa43df20c0b", "patch": "@@ -947,12 +947,38 @@ let type_is_structured (t:Ast.ty) : bool =\n   let fold = { fold with\n                  ty_fold_tup = (fun _ -> true);\n                  ty_fold_vec = (fun _ -> true);\n+                 ty_fold_str = (fun _ -> true);\n                  ty_fold_rec = (fun _ -> true);\n                  ty_fold_tag = (fun _ -> true);\n                  ty_fold_iso = (fun _ -> true);\n                  ty_fold_idx = (fun _ -> true);\n                  ty_fold_fn = (fun _ -> true);\n-                 ty_fold_obj = (fun _ -> true) }\n+                 ty_fold_obj = (fun _ -> true);\n+\n+                 ty_fold_chan = (fun _ -> true);\n+                 ty_fold_port = (fun _ -> true);\n+                 ty_fold_box = (fun _ -> true);\n+                 ty_fold_task = (fun _ -> true);\n+             }\n+\n+  in\n+    fold_ty fold t\n+;;\n+\n+\n+let type_points_to_heap (t:Ast.ty) : bool =\n+  let fold = ty_fold_bool_or false in\n+  let fold = { fold with\n+                 ty_fold_vec = (fun _ -> true);\n+                 ty_fold_str = (fun _ -> true);\n+                 ty_fold_fn = (fun _ -> true);\n+                 ty_fold_obj = (fun _ -> true);\n+\n+                 ty_fold_chan = (fun _ -> true);\n+                 ty_fold_port = (fun _ -> true);\n+                 ty_fold_box = (fun _ -> true);\n+                 ty_fold_task = (fun _ -> true);\n+             }\n   in\n     fold_ty fold t\n ;;"}, {"sha": "914645ff6017153244b64f51c477cd52120e9a17", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/87c9a9e25d922cd9e00981ac9a3e6fa43df20c0b/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/87c9a9e25d922cd9e00981ac9a3e6fa43df20c0b/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=87c9a9e25d922cd9e00981ac9a3e6fa43df20c0b", "patch": "@@ -2738,11 +2738,11 @@ let trans_visitor\n                   patch null_jmp;\n                   note_drop_step ty \"drop_ty: done box-drop path\";\n \n-            | MEM_interior when type_is_structured ty ->\n-                note_drop_step ty \"drop_ty structured-interior path\";\n+            | MEM_interior when type_points_to_heap ty ->\n+                note_drop_step ty \"drop_ty heap-referencing path\";\n                 iter_ty_parts ty_params cell ty\n                   (drop_ty ty_params) curr_iso;\n-                note_drop_step ty \"drop_ty: done structured-interior path\";\n+                note_drop_step ty \"drop_ty: done heap-referencing path\";\n \n \n             | MEM_interior ->\n@@ -2785,7 +2785,7 @@ let trans_visitor\n                 MEM_gc ->\n                   sever_box cell\n \n-              | MEM_interior when type_is_structured ty ->\n+              | MEM_interior when type_points_to_heap ty ->\n                   iter_ty_parts ty_params cell ty\n                     (sever_ty ty_params) curr_iso\n "}]}