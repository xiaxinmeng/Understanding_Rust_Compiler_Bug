{"sha": "e3a91f60c58d537945abc4c83b1b9f6ddcbe21fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzYTkxZjYwYzU4ZDUzNzk0NWFiYzRjODNiMWI5ZjZkZGNiZTIxZmU=", "commit": {"author": {"name": "Tom Lee", "email": "github@tomlee.co", "date": "2013-05-19T04:31:55Z"}, "committer": {"name": "Tom Lee", "email": "github@tomlee.co", "date": "2013-05-20T00:07:18Z"}, "message": "Explain an odd conditional check.", "tree": {"sha": "3e20c14c516aaaca6c3cc03e63079d4146e1295e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e20c14c516aaaca6c3cc03e63079d4146e1295e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3a91f60c58d537945abc4c83b1b9f6ddcbe21fe", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3a91f60c58d537945abc4c83b1b9f6ddcbe21fe", "html_url": "https://github.com/rust-lang/rust/commit/e3a91f60c58d537945abc4c83b1b9f6ddcbe21fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3a91f60c58d537945abc4c83b1b9f6ddcbe21fe/comments", "author": {"login": "thomaslee", "id": 93216, "node_id": "MDQ6VXNlcjkzMjE2", "avatar_url": "https://avatars.githubusercontent.com/u/93216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomaslee", "html_url": "https://github.com/thomaslee", "followers_url": "https://api.github.com/users/thomaslee/followers", "following_url": "https://api.github.com/users/thomaslee/following{/other_user}", "gists_url": "https://api.github.com/users/thomaslee/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomaslee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomaslee/subscriptions", "organizations_url": "https://api.github.com/users/thomaslee/orgs", "repos_url": "https://api.github.com/users/thomaslee/repos", "events_url": "https://api.github.com/users/thomaslee/events{/privacy}", "received_events_url": "https://api.github.com/users/thomaslee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomaslee", "id": 93216, "node_id": "MDQ6VXNlcjkzMjE2", "avatar_url": "https://avatars.githubusercontent.com/u/93216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomaslee", "html_url": "https://github.com/thomaslee", "followers_url": "https://api.github.com/users/thomaslee/followers", "following_url": "https://api.github.com/users/thomaslee/following{/other_user}", "gists_url": "https://api.github.com/users/thomaslee/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomaslee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomaslee/subscriptions", "organizations_url": "https://api.github.com/users/thomaslee/orgs", "repos_url": "https://api.github.com/users/thomaslee/repos", "events_url": "https://api.github.com/users/thomaslee/events{/privacy}", "received_events_url": "https://api.github.com/users/thomaslee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cac97d7ee565eef14b9e7385d1c088c1eb0a9295", "url": "https://api.github.com/repos/rust-lang/rust/commits/cac97d7ee565eef14b9e7385d1c088c1eb0a9295", "html_url": "https://github.com/rust-lang/rust/commit/cac97d7ee565eef14b9e7385d1c088c1eb0a9295"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "460da5d60b33f9efcf5d86a9f48f9e952c7e63eb", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e3a91f60c58d537945abc4c83b1b9f6ddcbe21fe/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3a91f60c58d537945abc4c83b1b9f6ddcbe21fe/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=e3a91f60c58d537945abc4c83b1b9f6ddcbe21fe", "patch": "@@ -388,6 +388,17 @@ fn encode_reexported_static_methods(ecx: @EncodeContext,\n             match ecx.tcx.items.find(&exp.def_id.node) {\n                 Some(&ast_map::node_item(item, path)) => {\n                     let original_name = ecx.tcx.sess.str_of(item.ident);\n+\n+                    //\n+                    // We don't need to reexport static methods on traits\n+                    // declared in the same module as our `pub use ...` since\n+                    // that's done when we encode the trait item.\n+                    //\n+                    // The only exception is when the reexport *changes* the\n+                    // name e.g. `pub use Foo = self::Bar` -- we have\n+                    // encoded metadata for static methods relative to Bar,\n+                    // but not yet for Foo.\n+                    //\n                     if mod_path != *path || *exp.name != *original_name {\n                         for methods.each |&m| {\n                             if m.explicit_self == ast::sty_static {"}]}