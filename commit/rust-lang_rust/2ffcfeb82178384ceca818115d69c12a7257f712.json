{"sha": "2ffcfeb82178384ceca818115d69c12a7257f712", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZmNmZWI4MjE3ODM4NGNlY2E4MTgxMTVkNjljMTJhNzI1N2Y3MTI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-08-22T11:48:31Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-09-03T11:15:15Z"}, "message": "Add compile_fail documentation", "tree": {"sha": "b0eb12877bd984ce90eead219471074978105a02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0eb12877bd984ce90eead219471074978105a02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ffcfeb82178384ceca818115d69c12a7257f712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ffcfeb82178384ceca818115d69c12a7257f712", "html_url": "https://github.com/rust-lang/rust/commit/2ffcfeb82178384ceca818115d69c12a7257f712", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ffcfeb82178384ceca818115d69c12a7257f712/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccc31ce3d5b07a8f3ba89e2c9b2306ac8c52d1f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccc31ce3d5b07a8f3ba89e2c9b2306ac8c52d1f7", "html_url": "https://github.com/rust-lang/rust/commit/ccc31ce3d5b07a8f3ba89e2c9b2306ac8c52d1f7"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "348fcd3b76920aee7bf1482528afa69ba220ef8b", "filename": "src/doc/rustdoc/src/documentation-tests.md", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2ffcfeb82178384ceca818115d69c12a7257f712/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "raw_url": "https://github.com/rust-lang/rust/raw/2ffcfeb82178384ceca818115d69c12a7257f712/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md?ref=2ffcfeb82178384ceca818115d69c12a7257f712", "patch": "@@ -5,7 +5,7 @@ that your tests are up to date and working.\n \n The basic idea is this:\n \n-```rust,ignore\n+```ignore\n /// # Examples\n ///\n /// ```\n@@ -106,23 +106,23 @@ our source code:\n ```text\n     First, we set `x` to five:\n \n-    ```rust\n+    ```\n     let x = 5;\n     # let y = 6;\n     # println!(\"{}\", x + y);\n     ```\n \n     Next, we set `y` to six:\n \n-    ```rust\n+    ```\n     # let x = 5;\n     let y = 6;\n     # println!(\"{}\", x + y);\n     ```\n \n     Finally, we print the sum of `x` and `y`:\n \n-    ```rust\n+    ```\n     # let x = 5;\n     # let y = 6;\n     println!(\"{}\", x + y);\n@@ -136,7 +136,7 @@ explanation.\n Another case where the use of `#` is handy is when you want to ignore\n error handling. Lets say you want the following,\n \n-```rust,ignore\n+```ignore\n /// use std::io;\n /// let mut input = String::new();\n /// io::stdin().read_line(&mut input)?;\n@@ -145,7 +145,7 @@ error handling. Lets say you want the following,\n The problem is that `?` returns a `Result<T, E>` and test functions\n don't return anything so this will give a mismatched types error.\n \n-```rust,ignore\n+```ignore\n /// A doc test using ?\n ///\n /// ```\n@@ -179,7 +179,7 @@ Here\u2019s an example of documenting a macro:\n /// # }\n /// ```\n ///\n-/// ```rust,should_panic\n+/// ```should_panic\n /// # #[macro_use] extern crate foo;\n /// # fn main() {\n /// panic_unless!(true == false, \u201cI\u2019m broken.\u201d);\n@@ -224,7 +224,7 @@ only shows the part you care about.\n `should_panic` tells `rustdoc` that the code should compile correctly, but\n not actually pass as a test.\n \n-```rust\n+```text\n /// ```no_run\n /// loop {\n ///     println!(\"Hello, world\");\n@@ -233,6 +233,18 @@ not actually pass as a test.\n # fn foo() {}\n ```\n \n+`compile_fail` tells `rustdoc` that the compilation should fail. If it\n+compiles, then the test will fail. However please note that code failing\n+with the current Rust release may work in a future release, as new features\n+are added.\n+\n+```text\n+/// ```compile_fail\n+/// let x = 5;\n+/// x += 2; // shouldn't compile!\n+/// ```\n+```\n+\n The `no_run` attribute will compile your code, but not run it. This is\n important for examples such as \"Here's how to retrieve a web page,\"\n which you would want to ensure compiles, but might be run in a test"}]}