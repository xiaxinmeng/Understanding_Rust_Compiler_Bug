{"sha": "bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjM2EzMzBhYmJlZGUyOGE5ZWMxNGNkMTM4YjFjMGU0ZWY3OWNiYjA=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-01-11T05:45:59Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-01-12T20:15:59Z"}, "message": "Some random things", "tree": {"sha": "37e7f261ff6071a061c61725feb9b599e7884370", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37e7f261ff6071a061c61725feb9b599e7884370"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0", "comment_count": 7, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0", "html_url": "https://github.com/rust-lang/rust/commit/bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22a059ddd1a5f3db52f07e8124c52073d305cc5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/22a059ddd1a5f3db52f07e8124c52073d305cc5e", "html_url": "https://github.com/rust-lang/rust/commit/22a059ddd1a5f3db52f07e8124c52073d305cc5e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "193b14174c7abc3890e14ead41568ca871491ce6", "filename": "src/librustc/metadata/filesearch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs?ref=bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0", "patch": "@@ -54,7 +54,7 @@ impl<'a> FileSearch<'a> {\n \n         debug!(\"filesearch: searching lib path\");\n         let tlib_path = make_target_lib_path(self.sysroot,\n-                                    self.triple);\n+                                             self.triple);\n         if !visited_dirs.contains(tlib_path.as_vec()) {\n             match f(&tlib_path) {\n                 FileMatches => found = true,"}, {"sha": "0cd501ca05fcdf4ec1792e7a93e7f19401b110df", "filename": "src/librustc/session/search_paths.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0/src%2Flibrustc%2Fsession%2Fsearch_paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0/src%2Flibrustc%2Fsession%2Fsearch_paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fsearch_paths.rs?ref=bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0", "patch": "@@ -10,7 +10,7 @@\n \n use std::slice;\n \n-#[derive(Clone)]\n+#[derive(Clone, Show)]\n pub struct SearchPaths {\n     paths: Vec<(PathKind, Path)>,\n }\n@@ -20,7 +20,7 @@ pub struct Iter<'a> {\n     iter: slice::Iter<'a, (PathKind, Path)>,\n }\n \n-#[derive(Eq, PartialEq, Clone, Copy)]\n+#[derive(Eq, PartialEq, Clone, Copy, Show)]\n pub enum PathKind {\n     Native,\n     Crate,"}, {"sha": "6893c4d72f7ded94ec5461abea8a107babd8a66c", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=bc3a330abbede28a9ec14cd138b1c0e4ef79cbb0", "patch": "@@ -186,7 +186,7 @@ fn run_compiler(args: &[String]) {\n                 list_metadata(&sess, &(*ifile), &mut stdout).unwrap();\n             }\n             Input::Str(_) => {\n-                early_error(\"can not list metadata for stdin\");\n+                early_error(\"cannot list metadata for stdin\");\n             }\n         }\n         return;"}]}