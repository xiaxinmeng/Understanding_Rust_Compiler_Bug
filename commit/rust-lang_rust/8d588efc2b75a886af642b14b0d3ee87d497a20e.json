{"sha": "8d588efc2b75a886af642b14b0d3ee87d497a20e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNTg4ZWZjMmI3NWE4ODZhZjY0MmIxNGIwZDNlZTg3ZDQ5N2EyMGU=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-04-18T15:17:30Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-04-18T15:17:30Z"}, "message": "Return to the status quo in #8129", "tree": {"sha": "73362d9f0c5b1a6d63149f899ca6d4d8d9b38e58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73362d9f0c5b1a6d63149f899ca6d4d8d9b38e58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d588efc2b75a886af642b14b0d3ee87d497a20e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d588efc2b75a886af642b14b0d3ee87d497a20e", "html_url": "https://github.com/rust-lang/rust/commit/8d588efc2b75a886af642b14b0d3ee87d497a20e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d588efc2b75a886af642b14b0d3ee87d497a20e/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51d65caed490122a492622f3ffba4f0f8a81a9e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/51d65caed490122a492622f3ffba4f0f8a81a9e0", "html_url": "https://github.com/rust-lang/rust/commit/51d65caed490122a492622f3ffba4f0f8a81a9e0"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "3047f91d83325bf7c5c6d25c4f737e4e79ad9cdd", "filename": "crates/ide_assists/src/handlers/fill_match_arms.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d588efc2b75a886af642b14b0d3ee87d497a20e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d588efc2b75a886af642b14b0d3ee87d497a20e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs?ref=8d588efc2b75a886af642b14b0d3ee87d497a20e", "patch": "@@ -57,6 +57,8 @@ pub(crate) fn fill_match_arms(acc: &mut Assists, ctx: &AssistContext) -> Option<\n             Pat::OrPat(or_pat) => Either::Left(or_pat.pats()),\n             _ => Either::Right(iter::once(pat)),\n         })\n+        // Exclude top level wildcards so that they are expanded by this assist, retains status quo in #8129.\n+        .filter(|pat| !matches!(pat, Pat::WildcardPat(_)))\n         .collect();\n \n     let module = ctx.sema.scope(expr.syntax()).module()?;"}]}