{"sha": "949fc44ccc96741b4b0b3430b21d4fc68553277a", "node_id": "C_kwDOAAsO6NoAKDk0OWZjNDRjY2M5Njc0MWI0YjBiMzQzMGIyMWQ0ZmM2ODU1MzI3N2E", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-10-21T15:37:57Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-10-25T08:50:49Z"}, "message": "Update CHANGELOG", "tree": {"sha": "0d429b560f7420cc45d2ba97087b6a5854225816", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d429b560f7420cc45d2ba97087b6a5854225816"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/949fc44ccc96741b4b0b3430b21d4fc68553277a", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmF2b+kACgkQHKDfKvWd\naKV9sxAAiw+fXl7lAKB8rkUpb9vpkoVhVcJqFjtOPV/VXHa+9liOuTM+RtBEwygb\nXXM+qsMjzqXBIP/h2vpZOGvKVJuWnjiHwFfwmIfAt3e9EoOeQ5BcZXlFm0UIO+rn\n4mKrNDod+BpERhldH95rKTd6D65K5IEc6lprx6AYnp0+yvICCcR1WAFzpNbNI9Gz\nP0x3Bmaldh7beMzBQFxuYRvv4ZvucZ7n4mMTIpwShdIuffdySHKz2k1+YjHbmQYA\nz4lzS+q0Wna7qr/wddVbbBMy4iiRnXAoNPhhwD9qec8dGkT1Cl+bKBdKB2AUSoQm\nxGidYTAv07zGk0X4j2cDgQSFsWUgef+fK8Ifo4e2WQuKSLym9vhn+uWXNJG7R/UM\ngmr47ZXMuvr6jHB8YEU2MJC4DDBkvs9lbN6lhZLVo7gBMbC22e8X7yys03s6roqU\nL2tZMrG20xn7h+ct7ayuKX0OxA3vFnfi0HpjUiyKE9lqtxtUbrsE4E5yiWzEZNmX\n2+i6rEfVa8CCn0jMlifu92DfMC1M1KnfSEP8Lb+TE6RIPMU1YqaX9L5wKxiGEw+x\n5yYNUKdRJa2efmucsSWBI5jnUQoKIwMbu33QTG3bSlKqEj9cgR78LXvtJbbECC4I\nXPiNU5x8J4sve2RIG1O5sAKlqXP9iW6yOA63An6NEJZDB1HR30o=\n=OoJZ\n-----END PGP SIGNATURE-----", "payload": "tree 0d429b560f7420cc45d2ba97087b6a5854225816\nparent 73a443d611f7e412ee11c2d216fdb0755b1721dc\nauthor flip1995 <philipp.krones@embecosm.com> 1634830677 +0200\ncommitter flip1995 <philipp.krones@embecosm.com> 1635151849 +0200\n\nUpdate CHANGELOG\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/949fc44ccc96741b4b0b3430b21d4fc68553277a", "html_url": "https://github.com/rust-lang/rust/commit/949fc44ccc96741b4b0b3430b21d4fc68553277a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/949fc44ccc96741b4b0b3430b21d4fc68553277a/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73a443d611f7e412ee11c2d216fdb0755b1721dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/73a443d611f7e412ee11c2d216fdb0755b1721dc", "html_url": "https://github.com/rust-lang/rust/commit/73a443d611f7e412ee11c2d216fdb0755b1721dc"}], "stats": {"total": 161, "additions": 154, "deletions": 7}, "files": [{"sha": "ec204cc064e0a74792bf3807b8e23ea3128226fd", "filename": "CHANGELOG.md", "status": "modified", "additions": 154, "deletions": 7, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/949fc44ccc96741b4b0b3430b21d4fc68553277a/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/949fc44ccc96741b4b0b3430b21d4fc68553277a/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=949fc44ccc96741b4b0b3430b21d4fc68553277a", "patch": "@@ -6,11 +6,162 @@ document.\n \n ## Unreleased / In Rust Nightly\n \n-[7bfc26e...master](https://github.com/rust-lang/rust-clippy/compare/7bfc26e...master)\n+[b7f3f7f...master](https://github.com/rust-lang/rust-clippy/compare/b7f3f7f...master)\n+\n+## Rust 1.57\n+\n+Current beta, release 2021-12-02\n+\n+[7bfc26e...b7f3f7f](https://github.com/rust-lang/rust-clippy/compare/7bfc26e...b7f3f7f)\n+\n+### New Lints\n+\n+* [`negative_feature_names`]\n+  [#7539](https://github.com/rust-lang/rust-clippy/pull/7539)\n+* [`redundant_feature_names`]\n+  [#7539](https://github.com/rust-lang/rust-clippy/pull/7539)\n+* [`mod_module_files`]\n+  [#7543](https://github.com/rust-lang/rust-clippy/pull/7543)\n+* [`self_named_module_files`]\n+  [#7543](https://github.com/rust-lang/rust-clippy/pull/7543)\n+* [`manual_split_once`]\n+  [#7565](https://github.com/rust-lang/rust-clippy/pull/7565)\n+* [`derivable_impls`]\n+  [#7570](https://github.com/rust-lang/rust-clippy/pull/7570)\n+* [`needless_option_as_deref`]\n+  [#7596](https://github.com/rust-lang/rust-clippy/pull/7596)\n+* [`iter_not_returning_iterator`]\n+  [#7610](https://github.com/rust-lang/rust-clippy/pull/7610)\n+* [`same_name_method`]\n+  [#7653](https://github.com/rust-lang/rust-clippy/pull/7653)\n+* [`if_then_panic`] [#7669](https://github.com/rust-lang/rust-clippy/pull/7669)\n+* [`non_send_fields_in_send_ty`]\n+  [#7709](https://github.com/rust-lang/rust-clippy/pull/7709)\n+* [`equatable_if_let`]\n+  [#7762](https://github.com/rust-lang/rust-clippy/pull/7762)\n+\n+### Moves and Deprecations\n+\n+* Move [`shadow_unrelated`] to `restriction`\n+  [#7338](https://github.com/rust-lang/rust-clippy/pull/7338)\n+* Move [`option_if_let_else`] to `nursery`\n+  [#7568](https://github.com/rust-lang/rust-clippy/pull/7568)\n+* Move [`branches_sharing_code`] to `nursery`\n+  [#7595](https://github.com/rust-lang/rust-clippy/pull/7595)\n+* Rename `if_let_some_result` to [`match_result_ok`] which now also handles\n+  `while let` cases [#7608](https://github.com/rust-lang/rust-clippy/pull/7608)\n+* Move [`many_single_char_names`] to `pedantic`\n+  [#7671](https://github.com/rust-lang/rust-clippy/pull/7671)\n+* Move [`float_cmp`] to `pedantic`\n+  [#7692](https://github.com/rust-lang/rust-clippy/pull/7692)\n+* Rename `box_vec` to [`box_collection`] and lint on more general cases\n+  [#7693](https://github.com/rust-lang/rust-clippy/pull/7693)\n+* Uplift `invalid_atomic_ordering` to rustc\n+  [rust-lang/rust#84039](https://github.com/rust-lang/rust/pull/84039)\n+\n+### Enhancements\n+\n+* Rewrite the `shadow*` lints, so that they find a lot more shadows and are not\n+  limited to certain patterns\n+  [#7338](https://github.com/rust-lang/rust-clippy/pull/7338)\n+* The `avoid-breaking-exported-api` configuration now also works for\n+  [`box_collection`], [`redundant_allocation`], [`rc_buffer`], [`vec_box`],\n+  [`option_option`], [`linkedlist`], [`rc_mutex`]\n+  [#7560](https://github.com/rust-lang/rust-clippy/pull/7560)\n+* [`unnecessary_unwrap`]: Now also checks for `expect`s\n+  [#7584](https://github.com/rust-lang/rust-clippy/pull/7584)\n+* [`disallowed_method`]: Allow adding a reason that will be displayed with the\n+  lint message\n+  [#7621](https://github.com/rust-lang/rust-clippy/pull/7621)\n+* [`approx_constant`]: Now checks the MSRV for `LOG10_2` and `LOG2_10`\n+  [#7629](https://github.com/rust-lang/rust-clippy/pull/7629)\n+* [`approx_constant`]: Add `TAU`\n+  [#7642](https://github.com/rust-lang/rust-clippy/pull/7642)\n+* [`needless_borrow`]: Now also lints on needless mutable borrows\n+  [#7657](https://github.com/rust-lang/rust-clippy/pull/7657)\n+* [`missing_safety_doc`]: Now also lints on unsafe traits\n+  [#7734](https://github.com/rust-lang/rust-clippy/pull/7734)\n+\n+### False Positive Fixes\n+\n+* [`manual_map`]: No longer lints when the option is borrowed in the match and\n+  also consumed in the arm\n+  [#7531](https://github.com/rust-lang/rust-clippy/pull/7531)\n+* [`filter_next`]: No longer lints if `filter` method is not the\n+  `Iterator::filter` method\n+  [#7562](https://github.com/rust-lang/rust-clippy/pull/7562)\n+* [`manual_flatten`]: No longer lints if expression is used after `if let`\n+  [#7566](https://github.com/rust-lang/rust-clippy/pull/7566)\n+* [`option_if_let_else`]: Multiple fixes\n+  [#7573](https://github.com/rust-lang/rust-clippy/pull/7573)\n+    * `break` and `continue` statements local to the would-be closure are\n+      allowed\n+    * Don't lint in const contexts\n+    * Don't lint when yield expressions are used\n+    * Don't lint when the captures made by the would-be closure conflict with\n+      the other branch\n+    * Don't lint when a field of a local is used when the type could be\n+      potentially moved from\n+    * In some cases, don't lint when scrutinee expression conflicts with the\n+      captures of the would-be closure\n+* [`redundant_allocation`]: No longer lints on `Box<Box<dyn T>>` which replaces\n+  wide pointers with thin pointers\n+  [#7592](https://github.com/rust-lang/rust-clippy/pull/7592)\n+* [`bool_assert_comparison`]: No longer lints on types that do not implement the\n+  `Not` trait with `Output = bool`\n+  [#7605](https://github.com/rust-lang/rust-clippy/pull/7605)\n+* [`mut_range_bound`]: No longer lints on range bound mutations, that are\n+  immediately followed by a `break;`\n+  [#7607](https://github.com/rust-lang/rust-clippy/pull/7607)\n+* [`mutable_key_type`]: Improve accuracy and document remaining false positives\n+  and false negatives\n+  [#7640](https://github.com/rust-lang/rust-clippy/pull/7640)\n+* [`redundant_closure`]: Rewrite the lint to fix various false positives and\n+  false negatives [#7661](https://github.com/rust-lang/rust-clippy/pull/7661)\n+* [`large_enum_variant`]: No longer wrongly identifies the second largest\n+  variant [#7677](https://github.com/rust-lang/rust-clippy/pull/7677)\n+* [`needless_return`]: No longer lints on let-else expressions\n+  [#7685](https://github.com/rust-lang/rust-clippy/pull/7685)\n+* [`suspicious_else_formatting`]: No longer lints in proc-macros\n+  [#7707](https://github.com/rust-lang/rust-clippy/pull/7707)\n+* [`excessive_precision`]: No longer lints when in some cases the float was\n+  already written in the shortest form\n+  [#7722](https://github.com/rust-lang/rust-clippy/pull/7722)\n+* [`doc_markdown`]: No longer lints on intra-doc links\n+  [#7772](https://github.com/rust-lang/rust-clippy/pull/7772)\n+\n+### Suggestion Fixes/Improvements\n+\n+* [`unnecessary_operation`]: Recommend using an `assert!` instead of using a\n+  function call in an indexing operation\n+  [#7453](https://github.com/rust-lang/rust-clippy/pull/7453)\n+* [`manual_split_once`]: Produce semantically equivalent suggestion when\n+  `rsplitn` is used [#7663](https://github.com/rust-lang/rust-clippy/pull/7663)\n+* [`while_let_on_iterator`]: Produce correct suggestion when using `&mut`\n+  [#7690](https://github.com/rust-lang/rust-clippy/pull/7690)\n+* [`if_then_panic`]: No better handles complex conditions\n+  [#7741](https://github.com/rust-lang/rust-clippy/pull/7741)\n+* Correctly handle signs in exponents in numeric literals lints\n+  [#7747](https://github.com/rust-lang/rust-clippy/pull/7747)\n+* [`suspicious_map`]: Now also suggests to use `inspect` as an alternative\n+  [#7770](https://github.com/rust-lang/rust-clippy/pull/7770)\n+* Drop exponent from suggestion if it is 0 in numeric literals lints\n+  [#7774](https://github.com/rust-lang/rust-clippy/pull/7774)\n+\n+### ICE Fixes\n+\n+* [`implicit_hasher`]\n+  [#7761](https://github.com/rust-lang/rust-clippy/pull/7761)\n+\n+### Others\n+\n+* Clippy now uses the 2021\n+  [Edition!](https://www.youtube.com/watch?v=q0aNduqb2Ro)\n+  [#7664](https://github.com/rust-lang/rust-clippy/pull/7664)\n \n ## Rust 1.56\n \n-Current beta, release 2021-10-21\n+Current stable, released 2021-10-21\n \n [74d1561...7bfc26e](https://github.com/rust-lang/rust-clippy/compare/74d1561...7bfc26e)\n \n@@ -74,13 +225,9 @@ Current beta, release 2021-10-21\n * [`unnested_or_patterns`]: Removed `or_patterns` feature gate in the code\n   example [#7507](https://github.com/rust-lang/rust-clippy/pull/7507)\n \n-### New Lints\n-\n-* Renamed Lint: `if_let_some_result` is now called [`match_result_ok`]. Now also handles `while let` case.\n-\n ## Rust 1.55\n \n-Current stable, released 2021-09-09\n+Released 2021-09-09\n \n [3ae8faf...74d1561](https://github.com/rust-lang/rust-clippy/compare/3ae8faf...74d1561)\n "}]}