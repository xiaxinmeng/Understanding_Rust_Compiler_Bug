{"sha": "9c1c407a02b6d465f3b583760657d355f75b2b94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMWM0MDdhMDJiNmQ0NjVmM2I1ODM3NjA2NTdkMzU1Zjc1YjJiOTQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-21T16:29:09Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-21T16:29:09Z"}, "message": "Update to latest rustc master", "tree": {"sha": "1c617f664f0f44c6499481d048ac0fa69c26605f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c617f664f0f44c6499481d048ac0fa69c26605f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c1c407a02b6d465f3b583760657d355f75b2b94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c1c407a02b6d465f3b583760657d355f75b2b94", "html_url": "https://github.com/rust-lang/rust/commit/9c1c407a02b6d465f3b583760657d355f75b2b94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c1c407a02b6d465f3b583760657d355f75b2b94/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97f4cff8e904c268569d37922a27835209deff5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/97f4cff8e904c268569d37922a27835209deff5d", "html_url": "https://github.com/rust-lang/rust/commit/97f4cff8e904c268569d37922a27835209deff5d"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "a34e137694cba1d61015e889a4475d13741a1185", "filename": "benches/helpers/miri_helper.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c1c407a02b6d465f3b583760657d355f75b2b94/benches%2Fhelpers%2Fmiri_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c1c407a02b6d465f3b583760657d355f75b2b94/benches%2Fhelpers%2Fmiri_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Fmiri_helper.rs?ref=9c1c407a02b6d465f3b583760657d355f75b2b94", "patch": "@@ -6,6 +6,7 @@ extern crate test;\n \n use self::miri::eval_main;\n use self::rustc_driver::{driver, Compilation};\n+use rustc::hir::def_id::LOCAL_CRATE;\n use std::cell::RefCell;\n use std::rc::Rc;\n use crate::test::Bencher;\n@@ -44,10 +45,9 @@ pub fn run(filename: &str, bencher: &mut Bencher) {\n         state.session.abort_if_errors();\n \n         let tcx = state.tcx.unwrap();\n-        let (entry_node_id, _, _) = state.session.entry_fn.borrow().expect(\n+        let (entry_def_id, _) = tcx.entry_fn(LOCAL_CRATE).expect(\n             \"no main or start function found\",\n         );\n-        let entry_def_id = tcx.hir().local_def_id(entry_node_id);\n \n         bencher.borrow_mut().iter(|| {\n             eval_main(tcx, entry_def_id, false);"}, {"sha": "45902dc6722f363491ca646b60f954f3817b55c8", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c1c407a02b6d465f3b583760657d355f75b2b94/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c1c407a02b6d465f3b583760657d355f75b2b94/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=9c1c407a02b6d465f3b583760657d355f75b2b94", "patch": "@@ -23,6 +23,7 @@ use rustc::hir::{self, itemlikevisit};\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n use rustc::ty::TyCtxt;\n use syntax::ast;\n+use rustc::hir::def_id::LOCAL_CRATE;\n \n struct MiriCompilerCalls {\n     default: Box<RustcDefaultCalls>,\n@@ -104,8 +105,7 @@ fn after_analysis<'a, 'tcx>(state: &mut CompileState<'a, 'tcx>) {\n             fn visit_impl_item(&mut self, _impl_item: &'hir hir::ImplItem) {}\n         }\n         state.hir_crate.unwrap().visit_all_item_likes(&mut Visitor(tcx, state));\n-    } else if let Some((entry_node_id, _, _)) = *state.session.entry_fn.borrow() {\n-        let entry_def_id = tcx.hir().local_def_id(entry_node_id);\n+    } else if let Some((entry_def_id, _)) = tcx.entry_fn(LOCAL_CRATE) {\n         miri::eval_main(tcx, entry_def_id, /*validate*/true);\n \n         state.session.abort_if_errors();"}, {"sha": "acfc429ed805ce36e37ba2017c08e3c44f3c019f", "filename": "src/bin/miri.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9c1c407a02b6d465f3b583760657d355f75b2b94/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c1c407a02b6d465f3b583760657d355f75b2b94/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=9c1c407a02b6d465f3b583760657d355f75b2b94", "patch": "@@ -24,6 +24,7 @@ use rustc_driver::{Compilation, CompilerCalls, RustcDefaultCalls};\n use rustc_driver::driver::{CompileState, CompileController};\n use rustc::session::config::{self, Input, ErrorOutputType};\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n+use rustc::hir::def_id::LOCAL_CRATE;\n use syntax::ast;\n \n struct MiriCompilerCalls {\n@@ -113,8 +114,8 @@ fn after_analysis<'a, 'tcx>(\n \n     let tcx = state.tcx.unwrap();\n \n-    let (entry_node_id, _, _) = state.session.entry_fn.borrow().expect(\"no main function found!\");\n-    let entry_def_id = tcx.hir().local_def_id(entry_node_id);\n+\n+    let (entry_def_id, _) = tcx.entry_fn(LOCAL_CRATE).expect(\"no main function found!\");\n \n     miri::eval_main(tcx, entry_def_id, validate);\n "}]}