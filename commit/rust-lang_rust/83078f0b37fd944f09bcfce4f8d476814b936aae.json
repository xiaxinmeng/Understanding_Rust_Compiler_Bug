{"sha": "83078f0b37fd944f09bcfce4f8d476814b936aae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMDc4ZjBiMzdmZDk0NGYwOWJjZmNlNGY4ZDQ3NjgxNGI5MzZhYWU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-05-31T21:15:15Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-06-05T20:18:13Z"}, "message": "comment `instantiate_poly_trait_ref` and its binder behavior", "tree": {"sha": "1c9cd78a6e28f49037f42daca764be4012551cd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c9cd78a6e28f49037f42daca764be4012551cd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83078f0b37fd944f09bcfce4f8d476814b936aae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83078f0b37fd944f09bcfce4f8d476814b936aae", "html_url": "https://github.com/rust-lang/rust/commit/83078f0b37fd944f09bcfce4f8d476814b936aae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83078f0b37fd944f09bcfce4f8d476814b936aae/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6ee542f16785fd944a663b8f4bc203ad150d2de", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6ee542f16785fd944a663b8f4bc203ad150d2de", "html_url": "https://github.com/rust-lang/rust/commit/f6ee542f16785fd944a663b8f4bc203ad150d2de"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "28c5c13492aac36aac91415771badf67dbcd672d", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/83078f0b37fd944f09bcfce4f8d476814b936aae/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83078f0b37fd944f09bcfce4f8d476814b936aae/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=83078f0b37fd944f09bcfce4f8d476814b936aae", "patch": "@@ -792,6 +792,25 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n         (poly_trait_ref, potential_assoc_types)\n     }\n \n+    /// Given a trait bound like `Debug`, applies that trait bound the given self-type to construct\n+    /// a full trait reference. The resulting trait reference is returned. This may also generate\n+    /// auxiliary bounds, which are added to `bounds`.\n+    ///\n+    /// Example:\n+    ///\n+    /// ```\n+    /// poly_trait_ref = Iterator<Item = u32>\n+    /// self_ty = Foo\n+    /// ```\n+    ///\n+    /// this would return `Foo: Iterator` and add `<Foo as Iterator>::Item = u32` into `bounds`.\n+    ///\n+    /// **A note on binders:** against our usual convention, there is an implied bounder around\n+    /// the `self_ty` and `poly_trait_ref` parameters here. So they may reference bound regions.\n+    /// If for example you had `for<'a> Foo<'a>: Bar<'a>`, then the `self_ty` would be `Foo<'a>`\n+    /// where `'a` is a bound region at depth 0. Similarly, the `poly_trait_ref` would be\n+    /// `Bar<'a>`. The returned poly-trait-ref will have this binder instantiated explicitly,\n+    /// however.\n     pub fn instantiate_poly_trait_ref(&self,\n         poly_trait_ref: &hir::PolyTraitRef,\n         self_ty: Ty<'tcx>,"}]}