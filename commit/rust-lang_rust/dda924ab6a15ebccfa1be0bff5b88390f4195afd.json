{"sha": "dda924ab6a15ebccfa1be0bff5b88390f4195afd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkYTkyNGFiNmExNWViY2NmYTFiZTBiZmY1Yjg4MzkwZjQxOTVhZmQ=", "commit": {"author": {"name": "Irina-Gabriela Popa", "email": "irinagpopa@gmail.com", "date": "2017-11-23T16:07:18Z"}, "committer": {"name": "Irina-Gabriela Popa", "email": "irinagpopa@gmail.com", "date": "2017-12-04T16:25:29Z"}, "message": "rustc_back: move dynamic_lib to rustc_metadata.", "tree": {"sha": "7327c34cc69a3309af7532ec239a3710290e2dbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7327c34cc69a3309af7532ec239a3710290e2dbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dda924ab6a15ebccfa1be0bff5b88390f4195afd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dda924ab6a15ebccfa1be0bff5b88390f4195afd", "html_url": "https://github.com/rust-lang/rust/commit/dda924ab6a15ebccfa1be0bff5b88390f4195afd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dda924ab6a15ebccfa1be0bff5b88390f4195afd/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6f70359dcedc2b864c47d08dd57a4d25961bc3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f70359dcedc2b864c47d08dd57a4d25961bc3c", "html_url": "https://github.com/rust-lang/rust/commit/d6f70359dcedc2b864c47d08dd57a4d25961bc3c"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "0ee46910f7d6ef3991f11b16aa97c6a38c1a15fb", "filename": "src/Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "patch": "@@ -1889,7 +1889,6 @@ name = \"rustc_plugin\"\n version = \"0.0.0\"\n dependencies = [\n  \"rustc 0.0.0\",\n- \"rustc_back 0.0.0\",\n  \"rustc_errors 0.0.0\",\n  \"rustc_metadata 0.0.0\",\n  \"syntax 0.0.0\","}, {"sha": "e338ee7bd932877b884d78d533e26f14028bd69a", "filename": "src/librustc_back/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_back%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_back%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Flib.rs?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "patch": "@@ -28,10 +28,8 @@\n \n #![feature(box_syntax)]\n #![feature(const_fn)]\n-#![feature(libc)]\n \n extern crate syntax;\n-extern crate libc;\n extern crate rand;\n extern crate serialize;\n #[macro_use] extern crate log;\n@@ -40,7 +38,6 @@ extern crate serialize as rustc_serialize; // used by deriving\n \n pub mod tempdir;\n pub mod target;\n-pub mod dynamic_lib;\n \n use std::str::FromStr;\n "}, {"sha": "e1c5cde42eccfd702acfd5028534ffed28dc44b3", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "patch": "@@ -556,7 +556,7 @@ impl<'a> CrateLoader<'a> {\n         use std::{env, mem};\n         use proc_macro::TokenStream;\n         use proc_macro::__internal::Registry;\n-        use rustc_back::dynamic_lib::DynamicLibrary;\n+        use dynamic_lib::DynamicLibrary;\n         use syntax_ext::deriving::custom::ProcMacroDerive;\n         use syntax_ext::proc_macro_impl::{AttrProcMacro, BangProcMacro};\n "}, {"sha": "1b42fa03a4fb621e3957708aac4424e122c4c670", "filename": "src/librustc_metadata/dynamic_lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_metadata%2Fdynamic_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_metadata%2Fdynamic_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdynamic_lib.rs?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "previous_filename": "src/librustc_back/dynamic_lib.rs"}, {"sha": "6c1ca36232307f1c75443ae9a13b50863b533944", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "patch": "@@ -16,12 +16,14 @@\n #![feature(box_patterns)]\n #![feature(conservative_impl_trait)]\n #![feature(i128_type)]\n+#![feature(libc)]\n #![feature(proc_macro_internals)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(specialization)]\n #![feature(rustc_private)]\n \n+extern crate libc;\n #[macro_use]\n extern crate log;\n #[macro_use]\n@@ -54,6 +56,7 @@ mod link_args;\n \n pub mod creader;\n pub mod cstore;\n+pub mod dynamic_lib;\n pub mod locator;\n \n __build_diagnostic_array! { librustc_metadata, DIAGNOSTICS }"}, {"sha": "d8fa1da1ce219e1a3b66cf94c4043da5a98aac76", "filename": "src/librustc_plugin/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_plugin%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_plugin%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2FCargo.toml?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "patch": "@@ -11,7 +11,6 @@ crate-type = [\"dylib\"]\n \n [dependencies]\n rustc = { path = \"../librustc\" }\n-rustc_back = { path = \"../librustc_back\" }\n rustc_metadata = { path = \"../librustc_metadata\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "3df56c4e728ca6f29330100205a4632e95481a90", "filename": "src/librustc_plugin/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Flib.rs?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "patch": "@@ -71,7 +71,6 @@\n #[macro_use] extern crate syntax;\n \n extern crate rustc;\n-extern crate rustc_back;\n extern crate rustc_metadata;\n extern crate syntax_pos;\n extern crate rustc_errors as errors;"}, {"sha": "8a4ec03b20efcc74f14efa5b958ccb04dda050a2", "filename": "src/librustc_plugin/load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_plugin%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustc_plugin%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Fload.rs?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "patch": "@@ -115,7 +115,7 @@ impl<'a> PluginLoader<'a> {\n                         span: Span,\n                         path: PathBuf,\n                         symbol: String) -> PluginRegistrarFun {\n-        use rustc_back::dynamic_lib::DynamicLibrary;\n+        use rustc_metadata::dynamic_lib::DynamicLibrary;\n \n         // Make sure the path contains a / or the linker will search for it.\n         let path = env::current_dir().unwrap().join(&path);"}, {"sha": "1a1e60a6945edd2fc26bb7e3c8a7fbe5292aec89", "filename": "src/librustdoc/plugins.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustdoc%2Fplugins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustdoc%2Fplugins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fplugins.rs?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "patch": "@@ -16,7 +16,7 @@ use std::mem;\n use std::string::String;\n use std::path::PathBuf;\n \n-use rustc_back::dynamic_lib as dl;\n+use rustc_metadata::dynamic_lib as dl;\n \n pub type PluginResult = clean::Crate;\n pub type PluginCallback = fn (clean::Crate) -> PluginResult;"}, {"sha": "98369949c02a470aea0ebd40465f442fb3b6ecb3", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "patch": "@@ -27,7 +27,7 @@ use rustc::hir::intravisit;\n use rustc::session::{self, CompileIncomplete, config};\n use rustc::session::config::{OutputType, OutputTypes, Externs};\n use rustc::session::search_paths::{SearchPaths, PathKind};\n-use rustc_back::dynamic_lib::DynamicLibrary;\n+use rustc_metadata::dynamic_lib::DynamicLibrary;\n use rustc_back::tempdir::TempDir;\n use rustc_driver::{self, driver, Compilation};\n use rustc_driver::driver::phase_2_configure_and_expand;"}, {"sha": "27387332c1c1f50b0a7c4f5f8fbb3ff8eba44a3e", "filename": "src/test/run-make/extern-fn-reachable/main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Ftest%2Frun-make%2Fextern-fn-reachable%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Ftest%2Frun-make%2Fextern-fn-reachable%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-fn-reachable%2Fmain.rs?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "patch": "@@ -10,9 +10,9 @@\n \n #![feature(rustc_private)]\n \n-extern crate rustc_back;\n+extern crate rustc_metadata;\n \n-use rustc_back::dynamic_lib::DynamicLibrary;\n+use rustc_metadata::dynamic_lib::DynamicLibrary;\n use std::path::Path;\n \n pub fn main() {"}, {"sha": "7a15a4cb3a2e8ee9d853e475c45287aae93692a4", "filename": "src/test/run-pass-fulldeps/auxiliary/linkage-visibility.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda924ab6a15ebccfa1be0bff5b88390f4195afd/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flinkage-visibility.rs?ref=dda924ab6a15ebccfa1be0bff5b88390f4195afd", "patch": "@@ -14,9 +14,9 @@\n // do the runtime check that these functions aren't exported.\n #![allow(private_no_mangle_fns)]\n \n-extern crate rustc_back;\n+extern crate rustc_metadata;\n \n-use rustc_back::dynamic_lib::DynamicLibrary;\n+use rustc_metadata::dynamic_lib::DynamicLibrary;\n \n #[no_mangle]\n pub fn foo() { bar(); }"}]}