{"sha": "cd3535d25664f02cbf66863a3ccfa682d8082629", "node_id": "C_kwDOAAsO6NoAKGNkMzUzNWQyNTY2NGYwMmNiZjY2ODYzYTNjY2ZhNjgyZDgwODI2Mjk", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-12T13:49:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-12T13:55:28Z"}, "message": "test that we also find bad uses of mem::uninitialized", "tree": {"sha": "9df794cc8e557d6da98bd5360cf8e027d9fe955c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9df794cc8e557d6da98bd5360cf8e027d9fe955c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd3535d25664f02cbf66863a3ccfa682d8082629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd3535d25664f02cbf66863a3ccfa682d8082629", "html_url": "https://github.com/rust-lang/rust/commit/cd3535d25664f02cbf66863a3ccfa682d8082629", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd3535d25664f02cbf66863a3ccfa682d8082629/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2643e41674c16a51cdf71026eaffc8cdbfcc1eb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2643e41674c16a51cdf71026eaffc8cdbfcc1eb8", "html_url": "https://github.com/rust-lang/rust/commit/2643e41674c16a51cdf71026eaffc8cdbfcc1eb8"}], "stats": {"total": 29, "additions": 5, "deletions": 24}, "files": [{"sha": "0f4a22cf5b77dc0964fe92b0edc363c0d1323f84", "filename": "tests/fail/validity/uninit_float.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd3535d25664f02cbf66863a3ccfa682d8082629/tests%2Ffail%2Fvalidity%2Funinit_float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd3535d25664f02cbf66863a3ccfa682d8082629/tests%2Ffail%2Fvalidity%2Funinit_float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Funinit_float.rs?ref=cd3535d25664f02cbf66863a3ccfa682d8082629", "patch": "@@ -1,6 +1,8 @@\n+#![allow(deprecated)]\n // This test is adapted from https://github.com/rust-lang/miri/issues/1340#issue-600900312.\n \n fn main() {\n-    let _val = unsafe { std::mem::MaybeUninit::<f32>::uninit().assume_init() };\n+    // Deliberately using `mem::uninitialized` to make sure that despite all the mitigations, we consider this UB.\n+    let _val: f32 = unsafe { std::mem::uninitialized() };\n     //~^ ERROR: constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n }"}, {"sha": "d9611af79eebf0d75de8c811df68670f3d19375e", "filename": "tests/fail/validity/uninit_float.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd3535d25664f02cbf66863a3ccfa682d8082629/tests%2Ffail%2Fvalidity%2Funinit_float.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd3535d25664f02cbf66863a3ccfa682d8082629/tests%2Ffail%2Fvalidity%2Funinit_float.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Funinit_float.stderr?ref=cd3535d25664f02cbf66863a3ccfa682d8082629", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n   --> $DIR/uninit_float.rs:LL:CC\n    |\n-LL |     let _val = unsafe { std::mem::MaybeUninit::<f32>::uninit().assume_init() };\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n+LL |     let _val: f32 = unsafe { std::mem::uninitialized() };\n+   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "fa484413784c58c3c577a3f4b916cf40e47ba532", "filename": "tests/fail/validity/uninit_integer_signed.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2643e41674c16a51cdf71026eaffc8cdbfcc1eb8/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2643e41674c16a51cdf71026eaffc8cdbfcc1eb8/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.rs?ref=2643e41674c16a51cdf71026eaffc8cdbfcc1eb8", "patch": "@@ -1,6 +0,0 @@\n-// This test is adapted from https://github.com/rust-lang/miri/issues/1340#issue-600900312.\n-\n-fn main() {\n-    let _val = unsafe { std::mem::MaybeUninit::<i32>::uninit().assume_init() };\n-    //~^ ERROR: constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n-}"}, {"sha": "c53c96c596e4a9d70b7a225f4b53b15fd49ff877", "filename": "tests/fail/validity/uninit_integer_signed.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2643e41674c16a51cdf71026eaffc8cdbfcc1eb8/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2643e41674c16a51cdf71026eaffc8cdbfcc1eb8/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.stderr?ref=2643e41674c16a51cdf71026eaffc8cdbfcc1eb8", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n-  --> $DIR/uninit_integer_signed.rs:LL:CC\n-   |\n-LL |     let _val = unsafe { std::mem::MaybeUninit::<i32>::uninit().assume_init() };\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: backtrace:\n-   = note: inside `main` at $DIR/uninit_integer_signed.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}]}