{"sha": "b19e822b9b513c16a8643f8157d8e3c20d6405f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxOWU4MjJiOWI1MTNjMTZhODY0M2Y4MTU3ZDhlM2MyMGQ2NDA1ZjY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-28T00:55:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-28T00:55:43Z"}, "message": "Rollup merge of #69495 - matthiaskrgr:op_ref, r=oli-obk\n\ndon't take redundant references to operands", "tree": {"sha": "e1426489ff638d2ccf55ed46d3a02d59ab527cc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1426489ff638d2ccf55ed46d3a02d59ab527cc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b19e822b9b513c16a8643f8157d8e3c20d6405f6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWGUQCRBK7hj4Ov3rIwAAdHIIACk4t4Y529CRGeZuRmJFxtWQ\nidAUvEE7IczNXgRMke86PDeIOQbcTp/fUPZOsKZKF+R53A4OdTyBrkPcg9T+BmfZ\nQdYNZl+8K5OU9EX3pcK+QkC9ZpQZJ6xnxeYJcGF5VuJWJtW3zHZNYOYNA6O45OAD\nTAwcTxlyDrzWcDSvN//h02fW4R14rLsBaqXuqxHGXI9YV6VK9kPJ0V5nZ5FkWD2Q\nae18R/GxvFhi5YiJDq4hIXblGQC9K0Fy8HcC3tZRvXjOQx24uULSQjHQ6Y7Br89b\n5DzCDNivIloMO7Yx8if2/Z0J2HbM5BMvFeoB/f3S8VbhAGLMJj6qQINVodk9Ycc=\n=ohWI\n-----END PGP SIGNATURE-----\n", "payload": "tree e1426489ff638d2ccf55ed46d3a02d59ab527cc6\nparent ffe4af57118bfb5063fc8015a1feddc76a607dbf\nparent 280e381b8d515a534c053b2bda83e5c6902c4a96\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582851343 +0100\ncommitter GitHub <noreply@github.com> 1582851343 +0100\n\nRollup merge of #69495 - matthiaskrgr:op_ref, r=oli-obk\n\ndon't take redundant references to operands\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b19e822b9b513c16a8643f8157d8e3c20d6405f6", "html_url": "https://github.com/rust-lang/rust/commit/b19e822b9b513c16a8643f8157d8e3c20d6405f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b19e822b9b513c16a8643f8157d8e3c20d6405f6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffe4af57118bfb5063fc8015a1feddc76a607dbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffe4af57118bfb5063fc8015a1feddc76a607dbf", "html_url": "https://github.com/rust-lang/rust/commit/ffe4af57118bfb5063fc8015a1feddc76a607dbf"}, {"sha": "280e381b8d515a534c053b2bda83e5c6902c4a96", "url": "https://api.github.com/repos/rust-lang/rust/commits/280e381b8d515a534c053b2bda83e5c6902c4a96", "html_url": "https://github.com/rust-lang/rust/commit/280e381b8d515a534c053b2bda83e5c6902c4a96"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6c826e5dcdec01c8aa2f7e95eae1a8a5873d12ec", "filename": "src/libcore/str/pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b19e822b9b513c16a8643f8157d8e3c20d6405f6/src%2Flibcore%2Fstr%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b19e822b9b513c16a8643f8157d8e3c20d6405f6/src%2Flibcore%2Fstr%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fpattern.rs?ref=b19e822b9b513c16a8643f8157d8e3c20d6405f6", "patch": "@@ -1050,7 +1050,7 @@ impl TwoWaySearcher {\n         // &v[..period]. If it is, we use \"Algorithm CP1\". Otherwise we use\n         // \"Algorithm CP2\", which is optimized for when the period of the needle\n         // is large.\n-        if &needle[..crit_pos] == &needle[period..period + crit_pos] {\n+        if needle[..crit_pos] == needle[period..period + crit_pos] {\n             // short period case -- the period is exact\n             // compute a separate critical factorization for the reversed needle\n             // x = u' v' where |v'| < period(x)."}, {"sha": "2599ad8ba7b9d681a22c4b608c703212ef50c363", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b19e822b9b513c16a8643f8157d8e3c20d6405f6/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b19e822b9b513c16a8643f8157d8e3c20d6405f6/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=b19e822b9b513c16a8643f8157d8e3c20d6405f6", "patch": "@@ -341,7 +341,7 @@ impl<'tcx> TyCtxt<'tcx> {\n                     db.note(\"distinct uses of `impl Trait` result in different opaque types\");\n                     let e_str = values.expected.to_string();\n                     let f_str = values.found.to_string();\n-                    if &e_str == &f_str && &e_str == \"impl std::future::Future\" {\n+                    if e_str == f_str && &e_str == \"impl std::future::Future\" {\n                         // FIXME: use non-string based check.\n                         db.help(\n                             \"if both `Future`s have the same `Output` type, consider \\"}, {"sha": "fd103c4c3369b5e3239b3de598728af72bf1ab01", "filename": "src/librustc_infer/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b19e822b9b513c16a8643f8157d8e3c20d6405f6/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b19e822b9b513c16a8643f8157d8e3c20d6405f6/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs?ref=b19e822b9b513c16a8643f8157d8e3c20d6405f6", "patch": "@@ -745,7 +745,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             .join(\", \");\n         if !lifetimes.is_empty() {\n             if sub.regions().count() < len {\n-                value.push_normal(lifetimes + &\", \");\n+                value.push_normal(lifetimes + \", \");\n             } else {\n                 value.push_normal(lifetimes);\n             }"}, {"sha": "43d3ad218295a68ef4e1e43376d78919b53ab755", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b19e822b9b513c16a8643f8157d8e3c20d6405f6/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b19e822b9b513c16a8643f8157d8e3c20d6405f6/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=b19e822b9b513c16a8643f8157d8e3c20d6405f6", "patch": "@@ -283,7 +283,7 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n         .filter_map(|lint| {\n             // We don't want to whitelist *all* lints so let's\n             // ignore those ones.\n-            if whitelisted_lints.iter().any(|l| &lint.name == l) {\n+            if whitelisted_lints.iter().any(|l| lint.name == l) {\n                 None\n             } else {\n                 Some((lint::LintId::of(lint), lint::Allow))"}]}