{"sha": "90bb07eca6c40ab98d31401597ba3f6c50a70c92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYmIwN2VjYTZjNDBhYjk4ZDMxNDAxNTk3YmEzZjZjNTBhNzBjOTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-06T18:57:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-06T18:57:00Z"}, "message": "Apply suggestions from code review\n\nCo-Authored-By: RalfJung <post@ralfj.de>", "tree": {"sha": "116a9805472706af891608fb502ede538c0ce518", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/116a9805472706af891608fb502ede538c0ce518"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90bb07eca6c40ab98d31401597ba3f6c50a70c92", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcgBf8CRBK7hj4Ov3rIwAAdHIIAJLO69vCRiBpTAgeFRBcKXJl\ngPyayn7B8P92Ph84Pxiyad60YoqwUp8mNdwkWvq96aG11bGz4FsJzBsprToJ1u/5\ne0bFVhcFFt7yTC68B/De/mIV3rjwlsBApp84h775dckyqCNyIcCCG3AHY5HTAPNI\nY5EzgdYy1gEwRgrLbGt/2tNcdG/vgvTRZ5HNgfX0IWugdQi2GZAxYJUipB/1mGuL\ncTiySsJiVdDTx9lGePmn6AZhcBVAKGfizeuU8U3GAwIoesNlAFTli2eKYIWfSrK+\n9xfExKnqRtnP0QJjcryoHcEMg152DpeEJoo0Ibry+krLxtFzJQeBYptwIIzeuCg=\n=E2Pg\n-----END PGP SIGNATURE-----\n", "payload": "tree 116a9805472706af891608fb502ede538c0ce518\nparent 6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1551898620 +0100\ncommitter GitHub <noreply@github.com> 1551898620 +0100\n\nApply suggestions from code review\n\nCo-Authored-By: RalfJung <post@ralfj.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90bb07eca6c40ab98d31401597ba3f6c50a70c92", "html_url": "https://github.com/rust-lang/rust/commit/90bb07eca6c40ab98d31401597ba3f6c50a70c92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90bb07eca6c40ab98d31401597ba3f6c50a70c92/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa", "html_url": "https://github.com/rust-lang/rust/commit/6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "2e82c8c77816c26d6e54b164f82a77220a2f248b", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90bb07eca6c40ab98d31401597ba3f6c50a70c92/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90bb07eca6c40ab98d31401597ba3f6c50a70c92/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=90bb07eca6c40ab98d31401597ba3f6c50a70c92", "patch": "@@ -1049,7 +1049,7 @@ impl<T: ?Sized> DerefMut for ManuallyDrop<T> {\n /// use std::mem::{self, MaybeUninit};\n ///\n /// let x: &i32 = unsafe { mem::zeroed() }; // undefined behavior!\n-/// // equivalent code with `MaybeUninit<&i32>`\n+/// // The equivalent code with `MaybeUninit<&i32>`:\n /// let x: &i32 = unsafe { MaybeUninit::zeroed().into_initialized() }; // undefined behavior!\n /// ```\n ///\n@@ -1078,7 +1078,7 @@ impl<T: ?Sized> DerefMut for ManuallyDrop<T> {\n /// use std::mem::{self, MaybeUninit};\n ///\n /// let x: i32 = unsafe { mem::uninitialized() }; // undefined behavior!\n-/// // equivalent code with `MaybeUninit<i32>`\n+/// // The equivalent code with `MaybeUninit<i32>`:\n /// let x: i32 = unsafe { MaybeUninit::uninitialized().into_initialized() }; // undefined behavior!\n /// ```\n /// (Notice that the rules around uninitialized integers are not finalized yet, but\n@@ -1231,7 +1231,7 @@ impl<T> MaybeUninit<T> {\n     /// let x_vec = unsafe { &*x.as_ptr() };\n     /// // We have created a reference to an uninitialized vector! This is undefined behavior.\n     /// ```\n-    /// (Notice that the rules around referenced to uninitialized data are not finalized yet, but\n+    /// (Notice that the rules around references to uninitialized data are not finalized yet, but\n     /// until they are, it is advisable to avoid them.)\n     #[unstable(feature = \"maybe_uninit\", issue = \"53491\")]\n     #[inline(always)]"}]}