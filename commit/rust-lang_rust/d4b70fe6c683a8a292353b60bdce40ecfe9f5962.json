{"sha": "d4b70fe6c683a8a292353b60bdce40ecfe9f5962", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YjcwZmU2YzY4M2E4YTI5MjM1M2I2MGJkY2U0MGVjZmU5ZjU5NjI=", "commit": {"author": {"name": "Sebastian Gesemann", "email": "s.gesemann@gmail.com", "date": "2015-01-09T19:08:14Z"}, "committer": {"name": "Sebastian Gesemann", "email": "s.gesemann@gmail.com", "date": "2015-01-09T19:10:14Z"}, "message": "documentation: Fix boxed closure left-over and add some words on why we use a type parameter for closures.", "tree": {"sha": "9332ff56e1c13807d0a4bb225a1fa84d33f8fe02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9332ff56e1c13807d0a4bb225a1fa84d33f8fe02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4b70fe6c683a8a292353b60bdce40ecfe9f5962", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4b70fe6c683a8a292353b60bdce40ecfe9f5962", "html_url": "https://github.com/rust-lang/rust/commit/d4b70fe6c683a8a292353b60bdce40ecfe9f5962", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4b70fe6c683a8a292353b60bdce40ecfe9f5962/comments", "author": {"login": "sellibitze", "id": 290865, "node_id": "MDQ6VXNlcjI5MDg2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/290865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sellibitze", "html_url": "https://github.com/sellibitze", "followers_url": "https://api.github.com/users/sellibitze/followers", "following_url": "https://api.github.com/users/sellibitze/following{/other_user}", "gists_url": "https://api.github.com/users/sellibitze/gists{/gist_id}", "starred_url": "https://api.github.com/users/sellibitze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sellibitze/subscriptions", "organizations_url": "https://api.github.com/users/sellibitze/orgs", "repos_url": "https://api.github.com/users/sellibitze/repos", "events_url": "https://api.github.com/users/sellibitze/events{/privacy}", "received_events_url": "https://api.github.com/users/sellibitze/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sellibitze", "id": 290865, "node_id": "MDQ6VXNlcjI5MDg2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/290865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sellibitze", "html_url": "https://github.com/sellibitze", "followers_url": "https://api.github.com/users/sellibitze/followers", "following_url": "https://api.github.com/users/sellibitze/following{/other_user}", "gists_url": "https://api.github.com/users/sellibitze/gists{/gist_id}", "starred_url": "https://api.github.com/users/sellibitze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sellibitze/subscriptions", "organizations_url": "https://api.github.com/users/sellibitze/orgs", "repos_url": "https://api.github.com/users/sellibitze/repos", "events_url": "https://api.github.com/users/sellibitze/events{/privacy}", "received_events_url": "https://api.github.com/users/sellibitze/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e2372c6c4a265992b0eb615ea9fdee4ab999143", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e2372c6c4a265992b0eb615ea9fdee4ab999143", "html_url": "https://github.com/rust-lang/rust/commit/2e2372c6c4a265992b0eb615ea9fdee4ab999143"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "23f5109c5bd9d0464e0fe58c73005a9f1e6d6071", "filename": "src/doc/trpl/closures.md", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d4b70fe6c683a8a292353b60bdce40ecfe9f5962/src%2Fdoc%2Ftrpl%2Fclosures.md", "raw_url": "https://github.com/rust-lang/rust/raw/d4b70fe6c683a8a292353b60bdce40ecfe9f5962/src%2Fdoc%2Ftrpl%2Fclosures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fclosures.md?ref=d4b70fe6c683a8a292353b60bdce40ecfe9f5962", "patch": "@@ -110,25 +110,27 @@ passing two variables: one is an i32, and one is a function.\"\n Next, let's look at how `twice` is defined:\n \n ```{rust,ignore}\n-fn twice(x: i32, f: |i32| -> i32) -> i32 {\n+fn twice<F: Fn(i32) -> i32>(x: i32, f: F) -> i32 {\n ```\n \n `twice` takes two arguments, `x` and `f`. That's why we called it with two\n arguments. `x` is an `i32`, we've done that a ton of times. `f` is a function,\n-though, and that function takes an `i32` and returns an `i32`. Notice\n-how the `|i32| -> i32` syntax looks a lot like our definition of `square`\n-above, if we added the return type in:\n-\n-```{rust}\n-let square = |&: x: i32| -> i32 { x * x };\n-//           |i32|       -> i32\n-```\n-\n-This function takes an `i32` and returns an `i32`.\n+though, and that function takes an `i32` and returns an `i32`. This is\n+what the requirement `Fn(i32) -> i32` for the type parameter `F` says.\n+You might ask yourself: why do we need to introduce a type parameter here?\n+That is because in Rust each closure has its own unique type.\n+So, not only do closures with different signatures have different types,\n+but different closures with the *same* signature have *different* types!\n+You can think of it this way: the behaviour of a closure is part of its type.\n+And since we want to support many different closures that all take\n+an `i32` and return an `i32` we introduced a type parameter that is able\n+to represent all these closures. \n \n This is the most complicated function signature we've seen yet! Give it a read\n a few times until you can see how it works. It takes a teeny bit of practice, and\n-then it's easy.\n+then it's easy. The good news is that this kind of passing a closure around\n+can be very efficient. With all the type information available at compile-time\n+the compiler can do wonders.\n \n Finally, `twice` returns an `i32` as well.\n "}]}