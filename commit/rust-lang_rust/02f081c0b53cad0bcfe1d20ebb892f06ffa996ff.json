{"sha": "02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZjA4MWMwYjUzY2FkMGJjZmUxZDIwZWJiODkyZjA2ZmZhOTk2ZmY=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-29T11:14:25Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-30T05:53:33Z"}, "message": "Future proof `libsyntax_ext` for `union`.", "tree": {"sha": "3b109f9174fd0af868c8908c924101e4a0fa68e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b109f9174fd0af868c8908c924101e4a0fa68e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "html_url": "https://github.com/rust-lang/rust/commit/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdde06ea97ad7ef9718cc0896ab3989f11188da2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdde06ea97ad7ef9718cc0896ab3989f11188da2", "html_url": "https://github.com/rust-lang/rust/commit/cdde06ea97ad7ef9718cc0896ab3989f11188da2"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "efb2fe5eb3b0feb5b627c1ac991f02979e03b116", "filename": "src/libsyntax_ext/deriving/bounds.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fbounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fbounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fbounds.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -40,6 +40,7 @@ pub fn expand_deriving_copy(cx: &mut ExtCtxt,\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n+        supports_unions: true,\n         methods: Vec::new(),\n         associated_types: Vec::new(),\n     };"}, {"sha": "f1a3a1f41b14ee37cb4b7ed025700f99112ca1e1", "filename": "src/libsyntax_ext/deriving/clone.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -80,6 +80,7 @@ pub fn expand_deriving_clone(cx: &mut ExtCtxt,\n         additional_bounds: bounds,\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: vec![MethodDef {\n                           name: \"clone\",\n                           generics: LifetimeBounds::empty(),"}, {"sha": "425a47a991bc4dc552eb5f56f0fa579bd44050f8", "filename": "src/libsyntax_ext/deriving/cmp/eq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Feq.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -50,6 +50,7 @@ pub fn expand_deriving_eq(cx: &mut ExtCtxt,\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: vec![MethodDef {\n                           name: \"assert_receiver_is_total_eq\",\n                           generics: LifetimeBounds::empty(),"}, {"sha": "6b2e36e63b65708d5152098d517405b075de9cea", "filename": "src/libsyntax_ext/deriving/cmp/ord.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Ford.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -32,6 +32,7 @@ pub fn expand_deriving_ord(cx: &mut ExtCtxt,\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: vec![MethodDef {\n                           name: \"cmp\",\n                           generics: LifetimeBounds::empty(),"}, {"sha": "64b8829dad7b1e5eb9f248a450c821580ee40a36", "filename": "src/libsyntax_ext/deriving/cmp/partial_eq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_eq.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -97,6 +97,7 @@ pub fn expand_deriving_partial_eq(cx: &mut ExtCtxt,\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: methods,\n         associated_types: Vec::new(),\n     };"}, {"sha": "99d60c43c5457deec8b75c111a56a83acb0d5233", "filename": "src/libsyntax_ext/deriving/cmp/partial_ord.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_ord.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -88,6 +88,7 @@ pub fn expand_deriving_partial_ord(cx: &mut ExtCtxt,\n         additional_bounds: vec![],\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: methods,\n         associated_types: Vec::new(),\n     };"}, {"sha": "b974699003b974b3dfec586fc4863b5a53b18518", "filename": "src/libsyntax_ext/deriving/debug.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fdebug.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -35,6 +35,7 @@ pub fn expand_deriving_debug(cx: &mut ExtCtxt,\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: vec![MethodDef {\n                           name: \"fmt\",\n                           generics: LifetimeBounds::empty(),"}, {"sha": "22b9eb8e754453ea44d56f3669c8fbf1371e8c71", "filename": "src/libsyntax_ext/deriving/decodable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fdecodable.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -62,6 +62,7 @@ fn expand_deriving_decodable_imp(cx: &mut ExtCtxt,\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: vec![MethodDef {\n                           name: \"decode\",\n                           generics: LifetimeBounds {"}, {"sha": "b15fd2b49a65547c241ed463f0c5a55767754f71", "filename": "src/libsyntax_ext/deriving/default.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fdefault.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -32,6 +32,7 @@ pub fn expand_deriving_default(cx: &mut ExtCtxt,\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: vec![MethodDef {\n                           name: \"default\",\n                           generics: LifetimeBounds::empty(),"}, {"sha": "a4074184b6e81ce7275f1af8a5367b2787712f03", "filename": "src/libsyntax_ext/deriving/encodable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fencodable.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -138,6 +138,7 @@ fn expand_deriving_encodable_imp(cx: &mut ExtCtxt,\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: vec!(\n             MethodDef {\n                 name: \"encode\","}, {"sha": "5c636d43a71421c7a7d188f5ddcf14e4c9b08757", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -228,6 +228,9 @@ pub struct TraitDef<'a> {\n     /// Is it an `unsafe` trait?\n     pub is_unsafe: bool,\n \n+    /// Can this trait be derived for unions?\n+    pub supports_unions: bool,\n+\n     pub methods: Vec<MethodDef<'a>>,\n \n     pub associated_types: Vec<(ast::Ident, Ty<'a>)>,"}, {"sha": "0941ebca868e3207e340ff03d6e6cb9ac7a80aa9", "filename": "src/libsyntax_ext/deriving/hash.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Flibsyntax_ext%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fhash.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -36,6 +36,7 @@ pub fn expand_deriving_hash(cx: &mut ExtCtxt,\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: vec![MethodDef {\n                           name: \"hash\",\n                           generics: LifetimeBounds {"}, {"sha": "6b688b006bd4a675c8478cb5c64b3bcc0be103f2", "filename": "src/test/run-pass-fulldeps/auxiliary/custom_derive_plugin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -49,6 +49,7 @@ fn expand(cx: &mut ExtCtxt,\n         generics: LifetimeBounds::empty(),\n         associated_types: vec![],\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: vec![\n             MethodDef {\n                 name: \"total_sum\","}, {"sha": "c6174745bfc0626574ab13d210fb39f0879190ed", "filename": "src/test/run-pass-fulldeps/auxiliary/custom_derive_plugin_attr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f081c0b53cad0bcfe1d20ebb892f06ffa996ff/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin_attr.rs?ref=02f081c0b53cad0bcfe1d20ebb892f06ffa996ff", "patch": "@@ -51,6 +51,7 @@ fn expand(cx: &mut ExtCtxt,\n         generics: LifetimeBounds::empty(),\n         associated_types: vec![],\n         is_unsafe: false,\n+        supports_unions: false,\n         methods: vec![\n             MethodDef {\n                 name: \"total_sum\","}]}