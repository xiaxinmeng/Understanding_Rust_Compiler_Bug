{"sha": "529aed81dea8bd808a72fd7e0d06468b0dd673fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyOWFlZDgxZGVhOGJkODA4YTcyZmQ3ZTBkMDY0NjhiMGRkNjczZmU=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-11-30T21:26:57Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-05-23T16:51:45Z"}, "message": "Update resolve_lifetimes, named_region_map, is_late_bound_map and object_lifetime_defaults_map", "tree": {"sha": "9dd7297039ca87c6ec048b2ca136aaae8edb4f97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dd7297039ca87c6ec048b2ca136aaae8edb4f97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/529aed81dea8bd808a72fd7e0d06468b0dd673fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/529aed81dea8bd808a72fd7e0d06468b0dd673fe", "html_url": "https://github.com/rust-lang/rust/commit/529aed81dea8bd808a72fd7e0d06468b0dd673fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/529aed81dea8bd808a72fd7e0d06468b0dd673fe/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "093940ddc44c4c7c97fbc35a3900fdc98a245dfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/093940ddc44c4c7c97fbc35a3900fdc98a245dfc", "html_url": "https://github.com/rust-lang/rust/commit/093940ddc44c4c7c97fbc35a3900fdc98a245dfc"}], "stats": {"total": 36, "additions": 16, "deletions": 20}, "files": [{"sha": "02ed30dd3865bf8d59513e3aaaa419fc4276e591", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/529aed81dea8bd808a72fd7e0d06468b0dd673fe/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/529aed81dea8bd808a72fd7e0d06468b0dd673fe/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=529aed81dea8bd808a72fd7e0d06468b0dd673fe", "patch": "@@ -67,6 +67,7 @@ macro_rules! arena_types {\n                         rustc::hir::def_id::CrateNum\n                     >\n                 >,\n+            [few] resolve_lifetimes: rustc::middle::resolve_lifetime::ResolveLifetimes,\n         ], $tcx);\n     )\n }"}, {"sha": "775da1de313fa0956286240569006e739022d4d9", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/529aed81dea8bd808a72fd7e0d06468b0dd673fe/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/529aed81dea8bd808a72fd7e0d06468b0dd673fe/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=529aed81dea8bd808a72fd7e0d06468b0dd673fe", "patch": "@@ -15,7 +15,6 @@ use crate::rustc::lint;\n use crate::session::Session;\n use crate::util::nodemap::{DefIdMap, FxHashMap, FxHashSet, HirIdMap, HirIdSet};\n use errors::{Applicability, DiagnosticBuilder};\n-use rustc_data_structures::sync::Lrc;\n use rustc_macros::HashStable;\n use std::borrow::Cow;\n use std::cell::Cell;\n@@ -211,10 +210,10 @@ struct NamedRegionMap {\n /// See [`NamedRegionMap`].\n #[derive(Default)]\n pub struct ResolveLifetimes {\n-    defs: FxHashMap<LocalDefId, Lrc<FxHashMap<ItemLocalId, Region>>>,\n-    late_bound: FxHashMap<LocalDefId, Lrc<FxHashSet<ItemLocalId>>>,\n+    defs: FxHashMap<LocalDefId, FxHashMap<ItemLocalId, Region>>,\n+    late_bound: FxHashMap<LocalDefId, FxHashSet<ItemLocalId>>,\n     object_lifetime_defaults:\n-        FxHashMap<LocalDefId, Lrc<FxHashMap<ItemLocalId, Lrc<Vec<ObjectLifetimeDefault>>>>>,\n+        FxHashMap<LocalDefId, FxHashMap<ItemLocalId, Vec<ObjectLifetimeDefault>>>,\n }\n \n impl_stable_hash_for!(struct crate::middle::resolve_lifetime::ResolveLifetimes {\n@@ -347,23 +346,21 @@ pub fn provide(providers: &mut ty::query::Providers<'_>) {\n \n         named_region_map: |tcx, id| {\n             let id = LocalDefId::from_def_id(DefId::local(id)); // (*)\n-            tcx.resolve_lifetimes(LOCAL_CRATE).defs.get(&id).cloned()\n+            tcx.resolve_lifetimes(LOCAL_CRATE).defs.get(&id)\n         },\n \n         is_late_bound_map: |tcx, id| {\n             let id = LocalDefId::from_def_id(DefId::local(id)); // (*)\n             tcx.resolve_lifetimes(LOCAL_CRATE)\n                 .late_bound\n                 .get(&id)\n-                .cloned()\n         },\n \n         object_lifetime_defaults_map: |tcx, id| {\n             let id = LocalDefId::from_def_id(DefId::local(id)); // (*)\n             tcx.resolve_lifetimes(LOCAL_CRATE)\n                 .object_lifetime_defaults\n                 .get(&id)\n-                .cloned()\n         },\n \n         ..*providers\n@@ -379,7 +376,7 @@ pub fn provide(providers: &mut ty::query::Providers<'_>) {\n fn resolve_lifetimes<'tcx>(\n     tcx: TyCtxt<'_, 'tcx, 'tcx>,\n     for_krate: CrateNum,\n-) -> Lrc<ResolveLifetimes> {\n+) -> &'tcx ResolveLifetimes {\n     assert_eq!(for_krate, LOCAL_CRATE);\n \n     let named_region_map = krate(tcx);\n@@ -388,24 +385,22 @@ fn resolve_lifetimes<'tcx>(\n \n     for (hir_id, v) in named_region_map.defs {\n         let map = rl.defs.entry(hir_id.owner_local_def_id()).or_default();\n-        Lrc::get_mut(map).unwrap().insert(hir_id.local_id, v);\n+        map.insert(hir_id.local_id, v);\n     }\n     for hir_id in named_region_map.late_bound {\n         let map = rl.late_bound\n             .entry(hir_id.owner_local_def_id())\n             .or_default();\n-        Lrc::get_mut(map).unwrap().insert(hir_id.local_id);\n+        map.insert(hir_id.local_id);\n     }\n     for (hir_id, v) in named_region_map.object_lifetime_defaults {\n         let map = rl.object_lifetime_defaults\n             .entry(hir_id.owner_local_def_id())\n             .or_default();\n-        Lrc::get_mut(map)\n-            .unwrap()\n-            .insert(hir_id.local_id, Lrc::new(v));\n+        map.insert(hir_id.local_id, v);\n     }\n \n-    Lrc::new(rl)\n+    tcx.arena.alloc(rl)\n }\n \n fn krate<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>) -> NamedRegionMap {"}, {"sha": "8920952f00d92bcff852f36086af84c18a15bf91", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/529aed81dea8bd808a72fd7e0d06468b0dd673fe/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/529aed81dea8bd808a72fd7e0d06468b0dd673fe/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=529aed81dea8bd808a72fd7e0d06468b0dd673fe", "patch": "@@ -754,19 +754,19 @@ rustc_queries! {\n \n     BorrowChecking {\n         // Lifetime resolution. See `middle::resolve_lifetimes`.\n-        query resolve_lifetimes(_: CrateNum) -> Lrc<ResolveLifetimes> {\n+        query resolve_lifetimes(_: CrateNum) -> &'tcx ResolveLifetimes {\n             desc { \"resolving lifetimes\" }\n         }\n         query named_region_map(_: DefIndex) ->\n-            Option<Lrc<FxHashMap<ItemLocalId, Region>>> {\n+            Option<&'tcx FxHashMap<ItemLocalId, Region>> {\n             desc { \"looking up a named region\" }\n         }\n         query is_late_bound_map(_: DefIndex) ->\n-            Option<Lrc<FxHashSet<ItemLocalId>>> {\n+            Option<&'tcx FxHashSet<ItemLocalId>> {\n             desc { \"testing if a region is late bound\" }\n         }\n         query object_lifetime_defaults_map(_: DefIndex)\n-            -> Option<Lrc<FxHashMap<ItemLocalId, Lrc<Vec<ObjectLifetimeDefault>>>>> {\n+            -> Option<&'tcx FxHashMap<ItemLocalId, Vec<ObjectLifetimeDefault>>> {\n             desc { \"looking up lifetime defaults for a region\" }\n         }\n     }"}, {"sha": "e7826b7a55907a4df7acd70f29e3f6cf2e8b456a", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/529aed81dea8bd808a72fd7e0d06468b0dd673fe/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/529aed81dea8bd808a72fd7e0d06468b0dd673fe/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=529aed81dea8bd808a72fd7e0d06468b0dd673fe", "patch": "@@ -2982,10 +2982,10 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     }\n \n     pub fn object_lifetime_defaults(self, id: HirId)\n-        -> Option<Lrc<Vec<ObjectLifetimeDefault>>>\n+        -> Option<&'gcx [ObjectLifetimeDefault]>\n     {\n         self.object_lifetime_defaults_map(id.owner)\n-            .and_then(|map| map.get(&id.local_id).cloned())\n+            .and_then(|map| map.get(&id.local_id).map(|v| &**v))\n     }\n }\n "}]}