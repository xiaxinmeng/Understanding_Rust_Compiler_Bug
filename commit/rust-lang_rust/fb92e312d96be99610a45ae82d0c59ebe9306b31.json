{"sha": "fb92e312d96be99610a45ae82d0c59ebe9306b31", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiOTJlMzEyZDk2YmU5OTYxMGE0NWFlODJkMGM1OWViZTkzMDZiMzE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-27T06:13:51Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-27T16:37:02Z"}, "message": "Rollup merge of #22788 - vadimcn:fix-precise_time_ns, r=pnkfelix\n\n which starts happening after ~2 hours of machine uptime.\nCloses #17845", "tree": {"sha": "1db9b42de0183ee9f2e259cfbdc309e7b1caa5ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1db9b42de0183ee9f2e259cfbdc309e7b1caa5ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb92e312d96be99610a45ae82d0c59ebe9306b31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb92e312d96be99610a45ae82d0c59ebe9306b31", "html_url": "https://github.com/rust-lang/rust/commit/fb92e312d96be99610a45ae82d0c59ebe9306b31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb92e312d96be99610a45ae82d0c59ebe9306b31/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08c25f37df936cf08cefd92baf08da9d0e2a1e09", "url": "https://api.github.com/repos/rust-lang/rust/commits/08c25f37df936cf08cefd92baf08da9d0e2a1e09", "html_url": "https://github.com/rust-lang/rust/commit/08c25f37df936cf08cefd92baf08da9d0e2a1e09"}, {"sha": "5dd001b2fc06526222c89a8563b25e4850646c15", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dd001b2fc06526222c89a8563b25e4850646c15", "html_url": "https://github.com/rust-lang/rust/commit/5dd001b2fc06526222c89a8563b25e4850646c15"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "209460df10b7ceb118f53669dafc0257e2a6ae88", "filename": "src/libstd/sys/windows/time.rs", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fb92e312d96be99610a45ae82d0c59ebe9306b31/src%2Flibstd%2Fsys%2Fwindows%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb92e312d96be99610a45ae82d0c59ebe9306b31/src%2Flibstd%2Fsys%2Fwindows%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ftime.rs?ref=fb92e312d96be99610a45ae82d0c59ebe9306b31", "patch": "@@ -12,6 +12,8 @@ use ops::Sub;\n use time::Duration;\n use sync::{Once, ONCE_INIT};\n \n+const NANOS_PER_SEC: i64 = 1_000_000_000;\n+\n pub struct SteadyTime {\n     t: libc::LARGE_INTEGER,\n }\n@@ -24,7 +26,7 @@ impl SteadyTime {\n     }\n \n     pub fn ns(&self) -> u64 {\n-        self.t as u64 * 1_000_000_000 / frequency() as u64\n+        mul_div_i64(self.t as i64, NANOS_PER_SEC, frequency() as i64) as u64\n     }\n }\n \n@@ -45,6 +47,27 @@ impl<'a> Sub for &'a SteadyTime {\n \n     fn sub(self, other: &SteadyTime) -> Duration {\n         let diff = self.t as i64 - other.t as i64;\n-        Duration::microseconds(diff * 1_000_000 / frequency() as i64)\n+        Duration::nanoseconds(mul_div_i64(diff, NANOS_PER_SEC, frequency() as i64))\n     }\n }\n+\n+// Computes (value*numer)/denom without overflow, as long as both\n+// (numer*denom) and the overall result fit into i64 (which is the case\n+// for our time conversions).\n+fn mul_div_i64(value: i64, numer: i64, denom: i64) -> i64 {\n+    let q = value / denom;\n+    let r = value % denom;\n+    // Decompose value as (value/denom*denom + value%denom),\n+    // substitute into (value*numer)/denom and simplify.\n+    // r < denom, so (denom*numer) is the upper bound of (r*numer)\n+    q * numer + r * numer / denom\n+}\n+\n+#[test]\n+fn test_muldiv() {\n+    assert_eq!(mul_div_i64( 1_000_000_000_001, 1_000_000_000, 1_000_000),  1_000_000_000_001_000);\n+    assert_eq!(mul_div_i64(-1_000_000_000_001, 1_000_000_000, 1_000_000), -1_000_000_000_001_000);\n+    assert_eq!(mul_div_i64(-1_000_000_000_001,-1_000_000_000, 1_000_000),  1_000_000_000_001_000);\n+    assert_eq!(mul_div_i64( 1_000_000_000_001, 1_000_000_000,-1_000_000), -1_000_000_000_001_000);\n+    assert_eq!(mul_div_i64( 1_000_000_000_001,-1_000_000_000,-1_000_000),  1_000_000_000_001_000);\n+}"}]}