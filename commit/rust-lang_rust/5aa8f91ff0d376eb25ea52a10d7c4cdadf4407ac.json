{"sha": "5aa8f91ff0d376eb25ea52a10d7c4cdadf4407ac", "node_id": "C_kwDOAAsO6NoAKDVhYThmOTFmZjBkMzc2ZWIyNWVhNTJhMTBkN2M0Y2RhZGY0NDA3YWM", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-30T18:24:23Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-30T18:24:23Z"}, "message": "Move Result::as_deref_mut", "tree": {"sha": "36c1a94ce2c2e6b9184609c76df7ae0d4d71583a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36c1a94ce2c2e6b9184609c76df7ae0d4d71583a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5aa8f91ff0d376eb25ea52a10d7c4cdadf4407ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHN+VcACgkQ+boUO5X/\nbYIMiRAArPvPNDc01rIKInHIK1uuSYydq/dqluaiHu7G4voQ0CwOPP5JezjiDs9p\nmle0+0NIitagYHwZffTrc47sz9KyILfTFaRDdUbLmXMSfqg9PnF7UJtFjqJRnBE8\nRLIjSBPf3O5+9N0WtupXvGmX4r+Ud7EufSeQUSbD6LT01A1ZJADOU0za1jwOPl3I\nLyo+ufGVvndyRbzZPN+3kfwOjrRmFyqUUeKPHNYZisl/hiBEtwj9t5drP3lyJvE/\nOh92TLQWuaWdCBfbQYhRXnIZ/K0Lx55z6dJeJR/UtRnIX9UJs1ZiHNe0t2YNNCbC\nWqPYUpi6oKC1XWVQrGFpmUbz7WKq4bxUOQ151FMy4xu21b3M28vMOIBdZW8fpTIn\niglo2v0Fpetoe/2JTM/SvJGEkrFO8kuIzyKYlmemz6SCfQ/8FkdXCYr5wynfFQSq\nYt2R2iPnYPKBaiulkFyQvN5/1hWIqReZOC+oMeIniHvH9RDKMtqYsunEgr5uyF50\nqUUHTfyWOwbhb8ACMrF7dfpoHNDRrAdpAx73uaSTse/YXXLxYj7GwKnvcm783DW/\nzgDY8iRETNfLl/MXKCWCCIOsli5LRCE+81czb0P4FSudeb3b5onPDcc+y10I1LEx\nDUDxKHt1zd2CNCiNs6QrKjgXADUbqq3TtFqR0WZ7RNkv/1aebOA=\n=jAkc\n-----END PGP SIGNATURE-----", "payload": "tree 36c1a94ce2c2e6b9184609c76df7ae0d4d71583a\nparent eda61d8d8a9a241f90808e6dc5256766721dc608\nauthor David Tolnay <dtolnay@gmail.com> 1640888663 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1640888663 -0800\n\nMove Result::as_deref_mut\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5aa8f91ff0d376eb25ea52a10d7c4cdadf4407ac", "html_url": "https://github.com/rust-lang/rust/commit/5aa8f91ff0d376eb25ea52a10d7c4cdadf4407ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5aa8f91ff0d376eb25ea52a10d7c4cdadf4407ac/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eda61d8d8a9a241f90808e6dc5256766721dc608", "url": "https://api.github.com/repos/rust-lang/rust/commits/eda61d8d8a9a241f90808e6dc5256766721dc608", "html_url": "https://github.com/rust-lang/rust/commit/eda61d8d8a9a241f90808e6dc5256766721dc608"}], "stats": {"total": 51, "additions": 26, "deletions": 25}, "files": [{"sha": "e74e70125b81589b6d2076766acd3a8d46f19306", "filename": "library/core/src/result.rs", "status": "modified", "additions": 26, "deletions": 25, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/5aa8f91ff0d376eb25ea52a10d7c4cdadf4407ac/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5aa8f91ff0d376eb25ea52a10d7c4cdadf4407ac/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=5aa8f91ff0d376eb25ea52a10d7c4cdadf4407ac", "patch": "@@ -925,6 +925,32 @@ impl<T, E> Result<T, E> {\n         self.as_ref().map(|t| t.deref())\n     }\n \n+    /// Converts from `Result<T, E>` (or `&mut Result<T, E>`) to `Result<&mut <T as DerefMut>::Target, &mut E>`.\n+    ///\n+    /// Coerces the [`Ok`] variant of the original [`Result`] via [`DerefMut`](crate::ops::DerefMut)\n+    /// and returns the new [`Result`].\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// let mut s = \"HELLO\".to_string();\n+    /// let mut x: Result<String, u32> = Ok(\"hello\".to_string());\n+    /// let y: Result<&mut str, &mut u32> = Ok(&mut s);\n+    /// assert_eq!(x.as_deref_mut().map(|x| { x.make_ascii_uppercase(); x }), y);\n+    ///\n+    /// let mut i = 42;\n+    /// let mut x: Result<String, u32> = Err(42);\n+    /// let y: Result<&mut str, &mut u32> = Err(&mut i);\n+    /// assert_eq!(x.as_deref_mut().map(|x| { x.make_ascii_uppercase(); x }), y);\n+    /// ```\n+    #[stable(feature = \"inner_deref\", since = \"1.47.0\")]\n+    pub fn as_deref_mut(&mut self) -> Result<&mut T::Target, &mut E>\n+    where\n+        T: DerefMut,\n+    {\n+        self.as_mut().map(|t| t.deref_mut())\n+    }\n+\n     /////////////////////////////////////////////////////////////////////////\n     // Iterator constructors\n     /////////////////////////////////////////////////////////////////////////\n@@ -1532,31 +1558,6 @@ impl<T: Into<!>, E> Result<T, E> {\n     }\n }\n \n-impl<T: DerefMut, E> Result<T, E> {\n-    /// Converts from `Result<T, E>` (or `&mut Result<T, E>`) to `Result<&mut <T as DerefMut>::Target, &mut E>`.\n-    ///\n-    /// Coerces the [`Ok`] variant of the original [`Result`] via [`DerefMut`](crate::ops::DerefMut)\n-    /// and returns the new [`Result`].\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// let mut s = \"HELLO\".to_string();\n-    /// let mut x: Result<String, u32> = Ok(\"hello\".to_string());\n-    /// let y: Result<&mut str, &mut u32> = Ok(&mut s);\n-    /// assert_eq!(x.as_deref_mut().map(|x| { x.make_ascii_uppercase(); x }), y);\n-    ///\n-    /// let mut i = 42;\n-    /// let mut x: Result<String, u32> = Err(42);\n-    /// let y: Result<&mut str, &mut u32> = Err(&mut i);\n-    /// assert_eq!(x.as_deref_mut().map(|x| { x.make_ascii_uppercase(); x }), y);\n-    /// ```\n-    #[stable(feature = \"inner_deref\", since = \"1.47.0\")]\n-    pub fn as_deref_mut(&mut self) -> Result<&mut T::Target, &mut E> {\n-        self.as_mut().map(|t| t.deref_mut())\n-    }\n-}\n-\n impl<T, E> Result<Option<T>, E> {\n     /// Transposes a `Result` of an `Option` into an `Option` of a `Result`.\n     ///"}]}