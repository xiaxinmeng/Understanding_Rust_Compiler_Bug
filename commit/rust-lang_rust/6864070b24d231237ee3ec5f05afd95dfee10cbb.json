{"sha": "6864070b24d231237ee3ec5f05afd95dfee10cbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NjQwNzBiMjRkMjMxMjM3ZWUzZWM1ZjA1YWZkOTVkZmVlMTBjYmI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-28T23:51:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-28T23:51:11Z"}, "message": "Document alt record patterns", "tree": {"sha": "4ac3304218986e5b3d0c751fd288c55752a8cd14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ac3304218986e5b3d0c751fd288c55752a8cd14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6864070b24d231237ee3ec5f05afd95dfee10cbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6864070b24d231237ee3ec5f05afd95dfee10cbb", "html_url": "https://github.com/rust-lang/rust/commit/6864070b24d231237ee3ec5f05afd95dfee10cbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6864070b24d231237ee3ec5f05afd95dfee10cbb/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6afecc37e33713de6b372e4bfa9c348f9de4aab6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6afecc37e33713de6b372e4bfa9c348f9de4aab6", "html_url": "https://github.com/rust-lang/rust/commit/6afecc37e33713de6b372e4bfa9c348f9de4aab6"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "cbafee11c70bdcdf266acaccfb56d61e88583842", "filename": "doc/rust.texi", "status": "modified", "additions": 35, "deletions": 6, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/6864070b24d231237ee3ec5f05afd95dfee10cbb/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/6864070b24d231237ee3ec5f05afd95dfee10cbb/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=6864070b24d231237ee3ec5f05afd95dfee10cbb", "patch": "@@ -3369,12 +3369,12 @@ expression following the @code{alt} when the case block completes.\n @cindex Pattern alt expression\n @cindex Control-flow\n \n-A pattern @code{alt} expression branches on a @emph{pattern}. The exact form of\n-matching that occurs depends on the pattern. Patterns consist of some\n-combination of literals, tag constructors, variable binding specifications and\n-placeholders (@code{_}). A pattern @code{alt} has a @emph{head expression},\n-which is the value to compare to the patterns. The type of the patterns must\n-equal the type of the head expression.\n+A pattern @code{alt} expression branches on a @emph{pattern}. The exact form\n+of matching that occurs depends on the pattern. Patterns consist of some\n+combination of literals, destructured tag constructors, records and tuples,\n+variable binding specifications and placeholders (@code{_}). A pattern\n+@code{alt} has a @emph{head expression}, which is the value to compare to the\n+patterns. The type of the patterns must equal the type of the head expression.\n \n To execute a pattern @code{alt} expression, first the head expression is\n evaluated, then its value is sequentially compared to the patterns in the arms\n@@ -3411,6 +3411,35 @@ variant @code{nil} from a binding to variable @code{nil}. Without the period\n the value of @code{x} would be bound to variable @code{nil} and the compiler\n would issue an error about the final wildcard case being unreachable.\n \n+Records can also be pattern-matched and their fields bound to variables.\n+When matching fields of a record, the fields being matched are specified\n+first, then a placeholder (@code{_}) represents the remaining fields.\n+\n+@example\n+fn main() @{\n+    let r = @{\n+        player: \"ralph\",\n+        stats: load_stats(),\n+        options: @{\n+            choose: true,\n+            size: \"small\"\n+        @}\n+    @};\n+\n+    alt r @{\n+      @{options: @{choose: true, _@}, _@} @{\n+        choose_player(r)\n+      @}\n+      @{player: p, options: @{size: \"small\", _@}, _@} @{\n+        log p + \" is small\";\n+      @}\n+      _ @{\n+        next_player();\n+      @}\n+    @}\n+@}\n+@end example\n+\n Multiple alternative patterns may be joined with the @code{|} operator.  A\n range of values may be specified with @code{to}.  For example:\n "}]}