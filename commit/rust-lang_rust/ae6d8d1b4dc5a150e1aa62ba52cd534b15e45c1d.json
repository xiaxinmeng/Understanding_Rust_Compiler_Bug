{"sha": "ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNmQ4ZDFiNGRjNWExNTBlMWFhNjJiYTUyY2Q1MzRiMTVlNDVjMWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-06-05T01:34:10Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-06-05T01:35:14Z"}, "message": "rustc: Implement optional fat-arrow syntax for alt (transitional change)", "tree": {"sha": "68630026a3a62aa5ede491b1831a8eedbd61e41e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68630026a3a62aa5ede491b1831a8eedbd61e41e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d", "html_url": "https://github.com/rust-lang/rust/commit/ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7803488a43eb24864105506b3825f605bc87d693", "url": "https://api.github.com/repos/rust-lang/rust/commits/7803488a43eb24864105506b3825f605bc87d693", "html_url": "https://github.com/rust-lang/rust/commit/7803488a43eb24864105506b3825f605bc87d693"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "95831116258fce55e194f4fb15bc908edca77d1d", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d", "patch": "@@ -389,7 +389,12 @@ fn next_token_inner(rdr: reader) -> token::token {\n         if rdr.curr == '=' {\n             rdr.bump();\n             ret token::EQEQ;\n-        } else { ret token::EQ; }\n+        } else if rdr.curr == '>' {\n+            rdr.bump();\n+            ret token::FAT_ARROW;\n+        } else {\n+            ret token::EQ;\n+        }\n       }\n       '!' {\n         rdr.bump();"}, {"sha": "8b40e2a8a9731718d93dcfff7144e9f50b5ddac5", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d", "patch": "@@ -1281,6 +1281,7 @@ class parser {\n             let pats = self.parse_pats();\n             let mut guard = none;\n             if self.eat_keyword(\"if\") { guard = some(self.parse_expr()); }\n+            if self.token == token::FAT_ARROW { self.bump(); }\n             let blk = self.parse_block();\n             arms += [{pats: pats, guard: guard, body: blk}];\n         }"}, {"sha": "cb92aad04c709553e7388bc35c7cf46c7e2ef1bd", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=ae6d8d1b4dc5a150e1aa62ba52cd534b15e45c1d", "patch": "@@ -45,6 +45,7 @@ enum token {\n     RARROW,\n     LARROW,\n     DARROW,\n+    FAT_ARROW,\n     LPAREN,\n     RPAREN,\n     LBRACKET,\n@@ -111,6 +112,7 @@ fn to_str(in: interner<str>, t: token) -> str {\n       RARROW { ret \"->\"; }\n       LARROW { ret \"<-\"; }\n       DARROW { ret \"<->\"; }\n+      FAT_ARROW { ret \"=>\"; }\n       LPAREN { ret \"(\"; }\n       RPAREN { ret \")\"; }\n       LBRACKET { ret \"[\"; }"}]}