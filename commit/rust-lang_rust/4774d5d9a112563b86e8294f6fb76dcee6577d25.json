{"sha": "4774d5d9a112563b86e8294f6fb76dcee6577d25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NzRkNWQ5YTExMjU2M2I4NmU4Mjk0ZjZmYjc2ZGNlZTY1NzdkMjU=", "commit": {"author": {"name": "Sean Patrick Santos", "email": "SeanPatrickSantos@gmail.com", "date": "2015-05-01T03:46:37Z"}, "committer": {"name": "Sean Patrick Santos", "email": "SeanPatrickSantos@gmail.com", "date": "2015-05-13T23:39:16Z"}, "message": "Allow `T::C` syntax in match patterns to refer to trait-assosociated constants.", "tree": {"sha": "bef3299dce66a0c0bd31d94564dc91fda943c3c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bef3299dce66a0c0bd31d94564dc91fda943c3c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4774d5d9a112563b86e8294f6fb76dcee6577d25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4774d5d9a112563b86e8294f6fb76dcee6577d25", "html_url": "https://github.com/rust-lang/rust/commit/4774d5d9a112563b86e8294f6fb76dcee6577d25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4774d5d9a112563b86e8294f6fb76dcee6577d25/comments", "author": {"login": "quantheory", "id": 1740206, "node_id": "MDQ6VXNlcjE3NDAyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1740206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantheory", "html_url": "https://github.com/quantheory", "followers_url": "https://api.github.com/users/quantheory/followers", "following_url": "https://api.github.com/users/quantheory/following{/other_user}", "gists_url": "https://api.github.com/users/quantheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantheory/subscriptions", "organizations_url": "https://api.github.com/users/quantheory/orgs", "repos_url": "https://api.github.com/users/quantheory/repos", "events_url": "https://api.github.com/users/quantheory/events{/privacy}", "received_events_url": "https://api.github.com/users/quantheory/received_events", "type": "User", "site_admin": false}, "committer": {"login": "quantheory", "id": 1740206, "node_id": "MDQ6VXNlcjE3NDAyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1740206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantheory", "html_url": "https://github.com/quantheory", "followers_url": "https://api.github.com/users/quantheory/followers", "following_url": "https://api.github.com/users/quantheory/following{/other_user}", "gists_url": "https://api.github.com/users/quantheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantheory/subscriptions", "organizations_url": "https://api.github.com/users/quantheory/orgs", "repos_url": "https://api.github.com/users/quantheory/repos", "events_url": "https://api.github.com/users/quantheory/events{/privacy}", "received_events_url": "https://api.github.com/users/quantheory/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "222cd73b8a422d2c4124375f6aaffd2663bb9718", "url": "https://api.github.com/repos/rust-lang/rust/commits/222cd73b8a422d2c4124375f6aaffd2663bb9718", "html_url": "https://github.com/rust-lang/rust/commit/222cd73b8a422d2c4124375f6aaffd2663bb9718"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "38ab0a8c5ed0d1740163f3400ac9a2673f81d513", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4774d5d9a112563b86e8294f6fb76dcee6577d25/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4774d5d9a112563b86e8294f6fb76dcee6577d25/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=4774d5d9a112563b86e8294f6fb76dcee6577d25", "patch": "@@ -2528,15 +2528,18 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                                 // If anything ends up here entirely resolved,\n                                 // it's an error. If anything ends up here\n                                 // partially resolved, that's OK, because it may\n-                                // be a `T::CONST` that typeck will resolve to\n-                                // an inherent impl.\n+                                // be a `T::CONST` that typeck will resolve.\n                                 if path_res.depth == 0 {\n                                     self.resolve_error(\n                                         path.span,\n                                         &format!(\"`{}` is not an enum variant, struct or const\",\n                                                  token::get_ident(\n                                                      path.segments.last().unwrap().identifier)));\n                                 } else {\n+                                    let const_name = path.segments.last().unwrap()\n+                                                         .identifier.name;\n+                                    let traits = self.get_traits_containing_item(const_name);\n+                                    self.trait_map.insert(pattern.id, traits);\n                                     self.record_def(pattern.id, path_res);\n                                 }\n                             }"}, {"sha": "62e90d7a6e22b0f105b51812c5a42e59aad350b4", "filename": "src/test/run-pass/associated-const-match-patterns.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4774d5d9a112563b86e8294f6fb76dcee6577d25/src%2Ftest%2Frun-pass%2Fassociated-const-match-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4774d5d9a112563b86e8294f6fb76dcee6577d25/src%2Ftest%2Frun-pass%2Fassociated-const-match-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-match-patterns.rs?ref=4774d5d9a112563b86e8294f6fb76dcee6577d25", "patch": "@@ -41,6 +41,10 @@ fn main() {\n         _ => false,\n     });\n     // Trait impl\n+    assert!(match Bar::Var1 {\n+        Foo::THEBAR => true,\n+        _ => false,\n+    });\n     assert!(match Bar::Var1 {\n         <Foo>::THEBAR => true,\n         _ => false,"}]}