{"sha": "8e8a5b399030c4ce6a2a16c3af3a528f26cec24f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlOGE1YjM5OTAzMGM0Y2U2YTJhMTZjM2FmM2E1MjhmMjZjZWMyNGY=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-07-20T19:38:20Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-07-20T19:38:20Z"}, "message": "Merge pull request #146 from marcusklaas/fix-inverted-span\n\nFormat unnamed function arguments", "tree": {"sha": "789fb8ffdb740f64a34b0c593be8fd7bd5ea4d2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/789fb8ffdb740f64a34b0c593be8fd7bd5ea4d2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e8a5b399030c4ce6a2a16c3af3a528f26cec24f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e8a5b399030c4ce6a2a16c3af3a528f26cec24f", "html_url": "https://github.com/rust-lang/rust/commit/8e8a5b399030c4ce6a2a16c3af3a528f26cec24f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e8a5b399030c4ce6a2a16c3af3a528f26cec24f/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "979d0c975636cd87a27dd020c1ace644aa1aa4e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/979d0c975636cd87a27dd020c1ace644aa1aa4e9", "html_url": "https://github.com/rust-lang/rust/commit/979d0c975636cd87a27dd020c1ace644aa1aa4e9"}, {"sha": "500fb78a3393a76e7790a38eb4df0b346eda9fe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/500fb78a3393a76e7790a38eb4df0b346eda9fe5", "html_url": "https://github.com/rust-lang/rust/commit/500fb78a3393a76e7790a38eb4df0b346eda9fe5"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "3250a93b997356983973cb1cd7afc93998191b93", "filename": "src/items.rs", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/8e8a5b399030c4ce6a2a16c3af3a528f26cec24f/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e8a5b399030c4ce6a2a16c3af3a528f26cec24f/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=8e8a5b399030c4ce6a2a16c3af3a528f26cec24f", "patch": "@@ -289,10 +289,10 @@ impl<'a> FmtVisitor<'a> {\n \n             arg_items = itemize_list(self.codemap,\n                                      arg_items,\n-                                     args[min_args-1..].iter(),\n+                                     args[min_args-1..].iter().cloned(),\n                                      \",\",\n                                      \")\",\n-                                     |arg| arg.pat.span.lo,\n+                                     span_lo_for_arg,\n                                      |arg| arg.ty.span.hi,\n                                      |_| String::new(),\n                                      comment_span_start,\n@@ -780,9 +780,29 @@ impl<'a> FmtVisitor<'a> {\n     // TODO we farm this out, but this could spill over the column limit, so we\n     // ought to handle it properly.\n     fn rewrite_fn_input(&self, arg: &ast::Arg) -> String {\n-        format!(\"{}: {}\",\n-                pprust::pat_to_string(&arg.pat),\n-                pprust::ty_to_string(&arg.ty))\n+        if is_named_arg(arg) {\n+            format!(\"{}: {}\",\n+                    pprust::pat_to_string(&arg.pat),\n+                    pprust::ty_to_string(&arg.ty))\n+        } else {\n+            pprust::ty_to_string(&arg.ty)\n+        }\n+    }\n+}\n+\n+fn span_lo_for_arg(arg: &ast::Arg) -> BytePos {\n+    if is_named_arg(arg) {\n+        arg.pat.span.lo\n+    } else {\n+        arg.ty.span.lo\n+    }\n+}\n+\n+fn is_named_arg(arg: &ast::Arg) -> bool {\n+    if let ast::Pat_::PatIdent(_, ident, _) = arg.pat.node {\n+        ident.node != token::special_idents::invalid\n+    } else {\n+        true\n     }\n }\n "}, {"sha": "b7d711f8b007f97c864102879ff74894b21419db", "filename": "tests/target/trait.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e8a5b399030c4ce6a2a16c3af3a528f26cec24f/tests%2Ftarget%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e8a5b399030c4ce6a2a16c3af3a528f26cec24f/tests%2Ftarget%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrait.rs?ref=8e8a5b399030c4ce6a2a16c3af3a528f26cec24f", "patch": "@@ -18,3 +18,7 @@ trait Foo {\n     fn read(&mut self, x: BufReader<R> /* Used to be MemReader */)\n         where R: Read;\n }\n+\n+pub trait WriteMessage {\n+    fn write_message(&mut self, &FrontendMessage) -> io::Result<()>;\n+}"}]}