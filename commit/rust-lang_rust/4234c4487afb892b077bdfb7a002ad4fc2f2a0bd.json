{"sha": "4234c4487afb892b077bdfb7a002ad4fc2f2a0bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMzRjNDQ4N2FmYjg5MmIwNzdiZGZiN2EwMDJhZDRmYzJmMmEwYmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-22T20:44:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-22T20:44:39Z"}, "message": "Auto merge of #27188 - pnkfelix:sidestep-warning-for-E0045, r=alexcrichton\n\nSidestep warning about repeated E0045 `span_err!` invocation.\r\n\r\n(That is, take the two expressions with the same message and unify them into one subroutine.)", "tree": {"sha": "c616f7efaa2f42dbf16e58623008407084aa41e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c616f7efaa2f42dbf16e58623008407084aa41e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4234c4487afb892b077bdfb7a002ad4fc2f2a0bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4234c4487afb892b077bdfb7a002ad4fc2f2a0bd", "html_url": "https://github.com/rust-lang/rust/commit/4234c4487afb892b077bdfb7a002ad4fc2f2a0bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4234c4487afb892b077bdfb7a002ad4fc2f2a0bd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55428306657c5b42a26183c90fcd06e1ee7b94f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/55428306657c5b42a26183c90fcd06e1ee7b94f5", "html_url": "https://github.com/rust-lang/rust/commit/55428306657c5b42a26183c90fcd06e1ee7b94f5"}, {"sha": "3413346be26dbe059db01806016df864ff56daa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3413346be26dbe059db01806016df864ff56daa0", "html_url": "https://github.com/rust-lang/rust/commit/3413346be26dbe059db01806016df864ff56daa0"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "c448af2288a65cb37a72121d194879f1c8c9b8c4", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4234c4487afb892b077bdfb7a002ad4fc2f2a0bd/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4234c4487afb892b077bdfb7a002ad4fc2f2a0bd/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=4234c4487afb892b077bdfb7a002ad4fc2f2a0bd", "patch": "@@ -59,6 +59,7 @@ use middle::subst::{FnSpace, TypeSpace, SelfSpace, Subst, Substs};\n use middle::traits;\n use middle::ty::{self, RegionEscape, Ty, ToPredicate, HasTypeFlags};\n use middle::ty_fold;\n+use require_c_abi_if_variadic;\n use rscope::{self, UnelidableRscope, RegionScope, ElidableRscope, ExplicitRscope,\n              ObjectLifetimeDefaultRscope, ShiftedRscope, BindingRscope,\n              ElisionFailureInfo, ElidedLifetime};\n@@ -1575,10 +1576,7 @@ pub fn ast_ty_to_ty<'tcx>(this: &AstConv<'tcx>,\n         }\n         ast::TyParen(ref typ) => ast_ty_to_ty(this, rscope, &**typ),\n         ast::TyBareFn(ref bf) => {\n-            if bf.decl.variadic && bf.abi != abi::C {\n-                span_err!(tcx.sess, ast_ty.span, E0045,\n-                          \"variadic function must have C calling convention\");\n-            }\n+            require_c_abi_if_variadic(tcx, &bf.decl, bf.abi, ast_ty.span);\n             let bare_fn = ty_of_bare_fn(this, bf.unsafety, bf.abi, &*bf.decl);\n             tcx.mk_fn(None, tcx.mk_bare_fn(bare_fn))\n         }"}, {"sha": "d77d48eea48c2d30bef7f331f6f637ce250225be", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4234c4487afb892b077bdfb7a002ad4fc2f2a0bd/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4234c4487afb892b077bdfb7a002ad4fc2f2a0bd/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=4234c4487afb892b077bdfb7a002ad4fc2f2a0bd", "patch": "@@ -97,6 +97,7 @@ use middle::ty::{Disr, ParamTy, ParameterEnvironment};\n use middle::ty::{self, HasTypeFlags, RegionEscape, ToPolyTraitRef, Ty};\n use middle::ty::{MethodCall, MethodCallee};\n use middle::ty_fold::{TypeFolder, TypeFoldable};\n+use require_c_abi_if_variadic;\n use rscope::{ElisionFailureInfo, RegionScope};\n use session::Session;\n use {CrateCtxt, lookup_full_def, require_same_types};\n@@ -685,10 +686,7 @@ pub fn check_item_type<'a,'tcx>(ccx: &CrateCtxt<'a,'tcx>, it: &'tcx ast::Item) {\n                 }\n \n                 if let ast::ForeignItemFn(ref fn_decl, _) = item.node {\n-                    if fn_decl.variadic && m.abi != abi::C {\n-                        span_err!(ccx.tcx.sess, item.span, E0045,\n-                                  \"variadic function must have C calling convention\");\n-                    }\n+                    require_c_abi_if_variadic(ccx.tcx, fn_decl, m.abi, item.span);\n                 }\n             }\n         }"}, {"sha": "9c0e121e156f9ea3259e68516b517587d4035050", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4234c4487afb892b077bdfb7a002ad4fc2f2a0bd/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4234c4487afb892b077bdfb7a002ad4fc2f2a0bd/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=4234c4487afb892b077bdfb7a002ad4fc2f2a0bd", "patch": "@@ -176,6 +176,16 @@ fn lookup_full_def(tcx: &ty::ctxt, sp: Span, id: ast::NodeId) -> def::Def {\n     }\n }\n \n+fn require_c_abi_if_variadic(tcx: &ty::ctxt,\n+                             decl: &ast::FnDecl,\n+                             abi: abi::Abi,\n+                             span: Span) {\n+    if decl.variadic && abi != abi::C {\n+        span_err!(tcx.sess, span, E0045,\n+                  \"variadic function must have C calling convention\");\n+    }\n+}\n+\n fn require_same_types<'a, 'tcx, M>(tcx: &ty::ctxt<'tcx>,\n                                    maybe_infcx: Option<&infer::InferCtxt<'a, 'tcx>>,\n                                    t1_is_expected: bool,"}]}