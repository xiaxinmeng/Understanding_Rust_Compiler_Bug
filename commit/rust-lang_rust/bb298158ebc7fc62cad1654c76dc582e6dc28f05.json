{"sha": "bb298158ebc7fc62cad1654c76dc582e6dc28f05", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiMjk4MTU4ZWJjN2ZjNjJjYWQxNjU0Yzc2ZGM1ODJlNmRjMjhmMDU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-15T17:15:53Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-15T17:15:53Z"}, "message": "migrate analysis and server to 2018", "tree": {"sha": "81bbbabcc118687d72fa3a32ae59ab3bd02c8a9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81bbbabcc118687d72fa3a32ae59ab3bd02c8a9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb298158ebc7fc62cad1654c76dc582e6dc28f05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb298158ebc7fc62cad1654c76dc582e6dc28f05", "html_url": "https://github.com/rust-lang/rust/commit/bb298158ebc7fc62cad1654c76dc582e6dc28f05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb298158ebc7fc62cad1654c76dc582e6dc28f05/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dd6858d03dd9c3f6dced3cc5c33ef3ab9d09157", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dd6858d03dd9c3f6dced3cc5c33ef3ab9d09157", "html_url": "https://github.com/rust-lang/rust/commit/2dd6858d03dd9c3f6dced3cc5c33ef3ab9d09157"}], "stats": {"total": 78, "additions": 42, "deletions": 36}, "files": [{"sha": "28d95c58139f560f376fe36945ef559731753add", "filename": "crates/ra_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2FCargo.toml?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -1,4 +1,5 @@\n [package]\n+edition = \"2018\"\n name = \"ra_analysis\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]"}, {"sha": "7669b6184550c61efd33315987dd8964765cb47d", "filename": "crates/ra_analysis/src/db/imp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fdb%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fdb%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb%2Fimp.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -7,7 +7,7 @@ use std::{\n };\n use rustc_hash::FxHashMap;\n use salsa;\n-use {FileId, imp::FileResolverImp};\n+use crate::{FileId, imp::FileResolverImp};\n use super::{State, Query, QueryCtx};\n \n pub(super) type Data = Arc<Any + Send + Sync + 'static>;\n@@ -51,7 +51,7 @@ pub(crate) trait EvalQuery {\n     type Output;\n     fn query_type(&self) -> salsa::QueryTypeId;\n     fn f(&self) -> salsa::QueryFn<State, Data>;\n-    fn get(&self, &QueryCtx, Self::Params) -> Arc<Self::Output>;\n+    fn get(&self, ctx: &QueryCtx, params: Self::Params) -> Arc<Self::Output>;\n }\n \n impl<T, R> EvalQuery for Query<T, R>"}, {"sha": "4eb7d922d9bc46c35b779d3aa5236ec2095c8077", "filename": "crates/ra_analysis/src/db/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fdb%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fdb%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb%2Fmod.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -5,7 +5,7 @@ use std::{\n };\n use im;\n use salsa;\n-use {FileId, imp::FileResolverImp};\n+use crate::{FileId, imp::FileResolverImp};\n \n #[derive(Debug, Default, Clone)]\n pub(crate) struct State {\n@@ -75,8 +75,8 @@ pub(crate) fn file_set(ctx: QueryCtx) -> Arc<(Vec<FileId>, FileResolverImp)> {\n impl QueryRegistry {\n     fn new() -> QueryRegistry {\n         let mut reg = QueryRegistry { imp: imp::QueryRegistry::new() };\n-        ::queries::register_queries(&mut reg);\n-        ::module_map::register_queries(&mut reg);\n+        crate::queries::register_queries(&mut reg);\n+        crate::module_map::register_queries(&mut reg);\n         reg\n     }\n     pub(crate) fn add<Q: imp::EvalQuery>(&mut self, q: Q, name: &'static str) {"}, {"sha": "f26dac8753ebac482a97c0ecea33b22d551047e4", "filename": "crates/ra_analysis/src/descriptors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -7,7 +7,7 @@ use ra_syntax::{\n     ast::{self, NameOwner, AstNode},\n     text_utils::is_subrange\n };\n-use {\n+use crate::{\n     FileId,\n     imp::FileResolverImp,\n };\n@@ -271,4 +271,4 @@ impl FnDescriptor {\n         }\n         res\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "26f5e175b77e78479c85d41292fa24fc8f551f82", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -17,7 +17,7 @@ use ra_syntax::{\n     ast::{self, NameOwner, ArgListOwner, Expr},\n };\n \n-use {\n+use crate::{\n     FileId, FileResolver, Query, Diagnostic, SourceChange, SourceFileEdit, Position, FileSystemEdit,\n     JobToken, CrateGraph, CrateId,\n     roots::{SourceRoot, ReadonlySourceRoot, WritableSourceRoot},\n@@ -458,4 +458,4 @@ impl<'a> FnCallNode<'a> {\n             FnCallNode::MethodCallExpr(expr) => expr.arg_list()\n         }\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "86c66236ce9ddd3a8ce36fcd73a7efd83f80a16d", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -29,16 +29,18 @@ use std::{\n \n use relative_path::{RelativePath, RelativePathBuf};\n use ra_syntax::{File, TextRange, TextUnit, AtomEdit};\n-use imp::{AnalysisImpl, AnalysisHostImpl, FileResolverImp};\n use rustc_hash::FxHashMap;\n+use crate::imp::{AnalysisImpl, AnalysisHostImpl, FileResolverImp};\n \n pub use ra_editor::{\n     StructureNode, LineIndex, FileSymbol,\n     Runnable, RunnableKind, HighlightedRange, CompletionItem,\n     Fold, FoldKind\n };\n-pub use job::{JobToken, JobHandle};\n-pub use descriptors::FnDescriptor;\n+pub use crate::{\n+    job::{JobToken, JobHandle},\n+    descriptors::FnDescriptor,\n+};\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct FileId(pub u32);"}, {"sha": "c77c5cec61a0bd1f6386b9c80b27291a34e7793c", "filename": "crates/ra_analysis/src/module_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fmodule_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fmodule_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fmodule_map.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -1,5 +1,5 @@\n use std::sync::Arc;\n-use {\n+use crate::{\n     FileId,\n     db::{\n         Query, QueryRegistry, QueryCtx,\n@@ -38,7 +38,7 @@ mod tests {\n     use std::collections::HashMap;\n     use im;\n     use relative_path::{RelativePath, RelativePathBuf};\n-    use {\n+    use crate::{\n         db::{Db},\n         imp::FileResolverImp,\n         FileId, FileResolver,"}, {"sha": "613bf1e61031f40fd28eba72fd39396808150d5e", "filename": "crates/ra_analysis/src/queries.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fqueries.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -1,13 +1,13 @@\n use std::sync::Arc;\n use ra_syntax::File;\n use ra_editor::LineIndex;\n-use {\n+use crate::{\n     FileId,\n     db::{Query, QueryCtx, QueryRegistry},\n     symbol_index::SymbolIndex,\n };\n \n-pub(crate) use db::{file_text, file_set};\n+pub(crate) use crate::db::{file_text, file_set};\n \n pub(crate) fn file_syntax(ctx: QueryCtx, file_id: FileId) -> File {\n     (&*ctx.get(FILE_SYNTAX, file_id)).clone()"}, {"sha": "208acc4c22f4d06bc23c633ecc9574d4fd6dc019", "filename": "crates/ra_analysis/src/roots.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Froots.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Froots.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Froots.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -9,7 +9,7 @@ use rustc_hash::FxHashMap;\n use ra_editor::LineIndex;\n use ra_syntax::File;\n \n-use {\n+use crate::{\n     FileId,\n     imp::FileResolverImp,\n     symbol_index::SymbolIndex,\n@@ -62,23 +62,23 @@ impl WritableSourceRoot {\n \n impl SourceRoot for WritableSourceRoot {\n     fn module_tree(&self) -> Arc<ModuleTreeDescriptor> {\n-        self.db.make_query(::module_map::module_tree)\n+        self.db.make_query(crate::module_map::module_tree)\n     }\n \n     fn contains(&self, file_id: FileId) -> bool {\n         self.db.state().file_map.contains_key(&file_id)\n     }\n     fn lines(&self, file_id: FileId) -> Arc<LineIndex> {\n-        self.db.make_query(|ctx| ::queries::file_lines(ctx, file_id))\n+        self.db.make_query(|ctx| crate::queries::file_lines(ctx, file_id))\n     }\n     fn syntax(&self, file_id: FileId) -> File {\n-        self.db.make_query(|ctx| ::queries::file_syntax(ctx, file_id))\n+        self.db.make_query(|ctx| crate::queries::file_syntax(ctx, file_id))\n     }\n     fn symbols<'a>(&'a self, acc: &mut Vec<Arc<SymbolIndex>>) {\n         self.db.make_query(|ctx| {\n-            let file_set = ::queries::file_set(ctx);\n+            let file_set = crate::queries::file_set(ctx);\n             let syms = file_set.0.iter()\n-                .map(|file_id| ::queries::file_symbols(ctx, *file_id));\n+                .map(|file_id| crate::queries::file_symbols(ctx, *file_id));\n             acc.extend(syms);\n         });\n     }"}, {"sha": "e5d83d365ce582b89221b4800ffc6bc3d2ae4524", "filename": "crates/ra_analysis/src/symbol_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -9,7 +9,7 @@ use ra_syntax::{\n };\n use fst::{self, Streamer};\n use rayon::prelude::*;\n-use {Query, FileId, JobToken};\n+use crate::{Query, FileId, JobToken};\n \n #[derive(Debug)]\n pub(crate) struct SymbolIndex {"}, {"sha": "2b32571171a13aba026bb76b7a3f12d3ebec980e", "filename": "crates/ra_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2FCargo.toml?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -1,4 +1,5 @@\n [package]\n+edition = \"2018\"\n name = \"ra_lsp_server\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]"}, {"sha": "a75b160c53956171e619344eb46413ca0a1b28b1", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -7,7 +7,7 @@ use ra_editor::{LineIndex, LineCol, Edit, AtomEdit};\n use ra_syntax::{SyntaxKind, TextUnit, TextRange};\n use ra_analysis::{FileId, SourceChange, SourceFileEdit, FileSystemEdit};\n \n-use {\n+use crate::{\n     Result,\n     server_world::ServerWorld,\n     req,\n@@ -299,7 +299,7 @@ pub fn to_location(\n         Ok(loc)\n }\n \n-pub trait MapConvWith<'a>: Sized {\n+pub trait MapConvWith<'a>: Sized + 'a {\n     type Ctx;\n     type Output;\n \n@@ -309,7 +309,7 @@ pub trait MapConvWith<'a>: Sized {\n }\n \n impl<'a, I> MapConvWith<'a> for I\n-    where I: Iterator,\n+    where I: Iterator + 'a,\n           I::Item: ConvWith\n {\n     type Ctx = <I::Item as ConvWith>::Ctx;"}, {"sha": "7224b147609574de4e4751cf53acd34513d15cbb", "filename": "crates/ra_lsp_server/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Flib.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -34,5 +34,7 @@ mod project_model;\n pub mod thread_watcher;\n \n pub type Result<T> = ::std::result::Result<T, ::failure::Error>;\n-pub use caps::server_capabilities;\n-pub use main_loop::main_loop;\n+pub use crate::{\n+    main_loop::main_loop,\n+    caps::server_capabilities,\n+};"}, {"sha": "1fe78f3d0fd67f2c8852a117c1647d2159cc7a68", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -13,7 +13,7 @@ use ra_syntax::{\n     text_utils::contains_offset_nonstrict\n };\n \n-use ::{\n+use crate::{\n     req::{self, Decoration}, Result,\n     conv::{Conv, ConvWith, TryConvWith, MapConvWith, to_location},\n     server_world::ServerWorld,"}, {"sha": "773501efe7249901fb2582e20f235ff900ac5bfd", "filename": "crates/ra_lsp_server/src/main_loop/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -16,7 +16,7 @@ use gen_lsp_server::{\n };\n use rustc_hash::FxHashMap;\n \n-use {\n+use crate::{\n     req,\n     Result,\n     vfs::{self, FileEvent},"}, {"sha": "c144d95960c644aaff7c4256e7960cc02277af6a", "filename": "crates/ra_lsp_server/src/project_model.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -5,7 +5,7 @@ use rustc_hash::{FxHashMap, FxHashSet};\n use cargo_metadata::{metadata_run, CargoOpt};\n use ra_syntax::SmolStr;\n \n-use {\n+use crate::{\n     Result,\n     thread_watcher::{Worker, ThreadWatcher},\n };"}, {"sha": "c931afa021a5f359a2f4514360cef8911d9df27f", "filename": "crates/ra_lsp_server/src/server_world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -8,7 +8,7 @@ use rustc_hash::FxHashMap;\n use languageserver_types::Url;\n use ra_analysis::{FileId, AnalysisHost, Analysis, CrateGraph, CrateId, LibraryData, FileResolver};\n \n-use {\n+use crate::{\n     Result,\n     path_map::{PathMap, Root},\n     vfs::{FileEvent, FileEventKind},"}, {"sha": "3257effcba33f3cfb2c2fbf13656376b58d59204", "filename": "crates/ra_lsp_server/src/thread_watcher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fthread_watcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fthread_watcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fthread_watcher.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -1,7 +1,7 @@\n use std::thread;\n use crossbeam_channel::{bounded, unbounded, Sender, Receiver};\n use drop_bomb::DropBomb;\n-use Result;\n+use crate::Result;\n \n pub struct Worker<I, O> {\n     pub inp: Sender<I>,"}, {"sha": "d8f9b1aac9aded2be3ed86c4037b2ef070ad7d9b", "filename": "crates/ra_lsp_server/src/vfs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fvfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Fsrc%2Fvfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fvfs.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -5,7 +5,7 @@ use std::{\n \n use walkdir::WalkDir;\n \n-use {\n+use crate::{\n     thread_watcher::{Worker, ThreadWatcher},\n };\n "}, {"sha": "7265b5999e96fef9d5c5ccfd338b3bde428abc3d", "filename": "crates/ra_lsp_server/tests/heavy_tests/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -12,7 +12,7 @@ mod support;\n \n use ra_lsp_server::req::{Runnables, RunnablesParams};\n \n-use support::project;\n+use crate::support::project;\n \n \n const LOG: &'static str = \"\";"}, {"sha": "d1339f62fccbb4bc86c1c900d26411e4238d918e", "filename": "crates/ra_lsp_server/tests/heavy_tests/support.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fsupport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb298158ebc7fc62cad1654c76dc582e6dc28f05/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fsupport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fsupport.rs?ref=bb298158ebc7fc62cad1654c76dc582e6dc28f05", "patch": "@@ -25,7 +25,7 @@ use ra_lsp_server::{main_loop, req, thread_watcher::{ThreadWatcher, Worker}};\n \n pub fn project(fixture: &str) -> Server {\n     static INIT: Once = Once::new();\n-    INIT.call_once(|| Logger::with_env_or_str(::LOG).start().unwrap());\n+    INIT.call_once(|| Logger::with_env_or_str(crate::LOG).start().unwrap());\n \n     let tmp_dir = TempDir::new(\"test-project\")\n         .unwrap();"}]}