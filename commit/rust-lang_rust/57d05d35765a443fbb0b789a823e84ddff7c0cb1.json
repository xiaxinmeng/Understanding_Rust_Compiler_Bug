{"sha": "57d05d35765a443fbb0b789a823e84ddff7c0cb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZDA1ZDM1NzY1YTQ0M2ZiYjBiNzg5YTgyM2U4NGRkZmY3YzBjYjE=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-09-23T15:50:58Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-12-16T10:33:38Z"}, "message": "session: add `split-dwarf` flag\n\nThis commit adds a flag for Split DWARF, which enables debuginfo to be\nsplit into multiple files.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "f58bffc9af3d66f5b4077ee8cb2796ecab10829b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f58bffc9af3d66f5b4077ee8cb2796ecab10829b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57d05d35765a443fbb0b789a823e84ddff7c0cb1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl/Z4oQACgkQJZLnbIc4\nH9m6ZhAAsddRShCmKz42LNZjncnq+xzSinA4o2UU9ghdSgLdRgvW/FcQVO2puQA4\nbSldevOvjDYfJ4TcioJjnQpbdXKI8eHnQxGDQrMcmwZAmxNZj1LSZXlVfeLq7ukY\nd73G6C+SIEB3l+2p/QJ3bwTo6fySk6vJBU2ZNOS89N/ey32xkYoLTlx3d9ZtYzLr\nT5WaL0vBQTGd+aBwl2eR3kZi/mu+NJ5Th8E7/xm3BtBCkmls6VxwCuSt6422LlDJ\ndU7PpzqRVAOi2vhAx5FFToOhczubSxCEbYLMENAJko1s33lti9KboKWv6sJvV7Hf\nY58bpJpEfPFdK0prhOCiMl1bpr0r1Hpvrh0o5R6LEHFNZ8pVWfBVPIbV55qQY4os\nlIxZy7BOvD3cF2k8joR7qRUhofhZp8DqMw5ctv9bQ5BWsU6iMSB+pH5JUQh+GuaL\nuUbXXLdMaRx9mtTz4iLqeGrnoebVStyEVa5IW5eDIn/+YfdMY+XgL5/d+y7AusxQ\n9hTSz7jgkcPfOetA2RQ+7j1A+7cWGd6EXL5rPHyUqkHselftgMix8atuFhBTGXki\nJ+Qu0+y3NUJURVPcuL5/YUZcxUFzzSaSk86fE1xwIQElzNZInxMt0a0xFyLy8/0A\nKwYXjYwMBJmRw/BCsQITRoYbVrcoZnTCkUFQz7pp2UC0pCucouY=\n=V5Vv\n-----END PGP SIGNATURE-----", "payload": "tree f58bffc9af3d66f5b4077ee8cb2796ecab10829b\nparent 341aa97adb20ca22e0fcb0851014bfa2297ff932\nauthor David Wood <david@davidtw.co> 1600876258 +0100\ncommitter David Wood <david@davidtw.co> 1608114818 +0000\n\nsession: add `split-dwarf` flag\n\nThis commit adds a flag for Split DWARF, which enables debuginfo to be\nsplit into multiple files.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57d05d35765a443fbb0b789a823e84ddff7c0cb1", "html_url": "https://github.com/rust-lang/rust/commit/57d05d35765a443fbb0b789a823e84ddff7c0cb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57d05d35765a443fbb0b789a823e84ddff7c0cb1/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "341aa97adb20ca22e0fcb0851014bfa2297ff932", "url": "https://api.github.com/repos/rust-lang/rust/commits/341aa97adb20ca22e0fcb0851014bfa2297ff932", "html_url": "https://github.com/rust-lang/rust/commit/341aa97adb20ca22e0fcb0851014bfa2297ff932"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "b5354513dc2ef617d4e110dd48073f0ee8c9cd08", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/57d05d35765a443fbb0b789a823e84ddff7c0cb1/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d05d35765a443fbb0b789a823e84ddff7c0cb1/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=57d05d35765a443fbb0b789a823e84ddff7c0cb1", "patch": "@@ -221,6 +221,23 @@ pub enum DebugInfo {\n     Full,\n }\n \n+/// Some debuginfo requires link-time relocation and some does not. LLVM can partition the debuginfo\n+/// into sections depending on whether or not it requires link-time relocation. Split DWARF\n+/// provides a mechanism which allows the linker to skip the sections which don't require link-time\n+/// relocation - either by putting those sections into DWARF object files, or keeping them in the\n+/// object file in such a way that the linker will skip them.\n+#[derive(Clone, Copy, Debug, PartialEq, Hash)]\n+pub enum SplitDwarfKind {\n+    /// Disabled.\n+    None,\n+    /// Sections which do not require relocation are written into the object file but ignored\n+    /// by the linker.\n+    Single,\n+    /// Sections which do not require relocation are written into a DWARF object (`.dwo`) file,\n+    /// which is skipped by the linker by virtue of being a different file.\n+    Split,\n+}\n+\n #[derive(Clone, Copy, PartialEq, Eq, Hash, Debug, PartialOrd, Ord)]\n #[derive(Encodable, Decodable)]\n pub enum OutputType {"}, {"sha": "81f79f4b0e0fbd51f98fbc137f6dfb6a1fd294f1", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/57d05d35765a443fbb0b789a823e84ddff7c0cb1/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d05d35765a443fbb0b789a823e84ddff7c0cb1/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=57d05d35765a443fbb0b789a823e84ddff7c0cb1", "patch": "@@ -269,6 +269,7 @@ macro_rules! options {\n         pub const parse_switch_with_opt_path: &str =\n             \"an optional path to the profiling data output directory\";\n         pub const parse_merge_functions: &str = \"one of: `disabled`, `trampolines`, or `aliases`\";\n+        pub const parse_split_dwarf_kind: &str = \"one of: `none`, `single` or `split`\";\n         pub const parse_symbol_mangling_version: &str = \"either `legacy` or `v0` (RFC 2603)\";\n         pub const parse_src_file_hash: &str = \"either `md5` or `sha1`\";\n         pub const parse_relocation_model: &str =\n@@ -676,6 +677,19 @@ macro_rules! options {\n             true\n         }\n \n+        fn parse_split_dwarf_kind(\n+            slot: &mut SplitDwarfKind,\n+            v: Option<&str>,\n+        ) -> bool {\n+            *slot = match v {\n+                Some(\"none\") => SplitDwarfKind::None,\n+                Some(\"split\") => SplitDwarfKind::Split,\n+                Some(\"single\") => SplitDwarfKind::Single,\n+                _ => return false,\n+            };\n+            true\n+        }\n+\n         fn parse_symbol_mangling_version(\n             slot: &mut Option<SymbolManglingVersion>,\n             v: Option<&str>,\n@@ -1088,6 +1102,11 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"hash algorithm of source files in debug info (`md5`, `sha1`, or `sha256`)\"),\n     strip: Strip = (Strip::None, parse_strip, [UNTRACKED],\n         \"tell the linker which information to strip (`none` (default), `debuginfo` or `symbols`)\"),\n+    split_dwarf: SplitDwarfKind = (SplitDwarfKind::None, parse_split_dwarf_kind, [UNTRACKED],\n+        \"enable generation of split dwarf\"),\n+    split_dwarf_inlining: bool = (true, parse_bool, [UNTRACKED],\n+        \"provide minimal debug info in the object/executable to facilitate online \\\n+         symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF\"),\n     symbol_mangling_version: Option<SymbolManglingVersion> = (None,\n         parse_symbol_mangling_version, [TRACKED],\n         \"which mangling version to use for symbol names ('legacy' (default) or 'v0')\"),"}]}