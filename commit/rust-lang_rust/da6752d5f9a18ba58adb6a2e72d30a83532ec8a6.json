{"sha": "da6752d5f9a18ba58adb6a2e72d30a83532ec8a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNjc1MmQ1ZjlhMThiYTU4YWRiNmEyZTcyZDMwYTgzNTMyZWM4YTY=", "commit": {"author": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-04-06T13:55:25Z"}, "committer": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-04-07T12:12:08Z"}, "message": "missing match arms diagnostic change source to match expression", "tree": {"sha": "5cdf566b377b80f874c2d004d4cf28bd85154e44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cdf566b377b80f874c2d004d4cf28bd85154e44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da6752d5f9a18ba58adb6a2e72d30a83532ec8a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da6752d5f9a18ba58adb6a2e72d30a83532ec8a6", "html_url": "https://github.com/rust-lang/rust/commit/da6752d5f9a18ba58adb6a2e72d30a83532ec8a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da6752d5f9a18ba58adb6a2e72d30a83532ec8a6/comments", "author": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fe608fb31430f43a404312e284a71d6f7cfa038", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fe608fb31430f43a404312e284a71d6f7cfa038", "html_url": "https://github.com/rust-lang/rust/commit/5fe608fb31430f43a404312e284a71d6f7cfa038"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "02472e0c0e87fc751ebbe3945fa3067c928e036a", "filename": "crates/ra_hir_ty/src/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da6752d5f9a18ba58adb6a2e72d30a83532ec8a6/crates%2Fra_hir_ty%2Fsrc%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da6752d5f9a18ba58adb6a2e72d30a83532ec8a6/crates%2Fra_hir_ty%2Fsrc%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2F_match.rs?ref=da6752d5f9a18ba58adb6a2e72d30a83532ec8a6", "patch": "@@ -545,7 +545,7 @@ mod tests {\n \n         assert_snapshot!(\n             check_diagnostic_message(content),\n-            @\"\\\"{\\\\n                }\\\": Missing match arm\\n\"\n+            @\"\\\"()\\\": Missing match arm\\n\"\n         );\n     }\n "}, {"sha": "8cbce11686c1baebb3ddef9eaa03abb6e9b21067", "filename": "crates/ra_hir_ty/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da6752d5f9a18ba58adb6a2e72d30a83532ec8a6/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da6752d5f9a18ba58adb6a2e72d30a83532ec8a6/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs?ref=da6752d5f9a18ba58adb6a2e72d30a83532ec8a6", "patch": "@@ -65,6 +65,7 @@ impl AstDiagnostic for MissingFields {\n #[derive(Debug)]\n pub struct MissingMatchArms {\n     pub file: HirFileId,\n+    pub match_expr: AstPtr<ast::Expr>,\n     pub arms: AstPtr<ast::MatchArmList>,\n }\n \n@@ -73,7 +74,7 @@ impl Diagnostic for MissingMatchArms {\n         String::from(\"Missing match arm\")\n     }\n     fn source(&self) -> InFile<SyntaxNodePtr> {\n-        InFile { file_id: self.file, value: self.arms.into() }\n+        InFile { file_id: self.file, value: self.match_expr.into() }\n     }\n     fn as_any(&self) -> &(dyn Any + Send + 'static) {\n         self"}, {"sha": "19323fda12e25f6f1c6d7aceb9143136d1938b5b", "filename": "crates/ra_hir_ty/src/expr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/da6752d5f9a18ba58adb6a2e72d30a83532ec8a6/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da6752d5f9a18ba58adb6a2e72d30a83532ec8a6/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs?ref=da6752d5f9a18ba58adb6a2e72d30a83532ec8a6", "patch": "@@ -125,9 +125,12 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n             if let Some(expr) = source_ptr.value.left() {\n                 let root = source_ptr.file_syntax(db.upcast());\n                 if let ast::Expr::MatchExpr(match_expr) = expr.to_node(&root) {\n-                    if let Some(arms) = match_expr.match_arm_list() {\n+                    if let (Some(match_expr), Some(arms)) =\n+                        (match_expr.expr(), match_expr.match_arm_list())\n+                    {\n                         self.sink.push(MissingMatchArms {\n                             file: source_ptr.file_id,\n+                            match_expr: AstPtr::new(&match_expr),\n                             arms: AstPtr::new(&arms),\n                         })\n                     }"}]}