{"sha": "e68680d30db3ba492827979b44c9f28e574e2274", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ODY4MGQzMGRiM2JhNDkyODI3OTc5YjQ0YzlmMjhlNTc0ZTIyNzQ=", "commit": {"author": {"name": "Vojtech Kral", "email": "vojtech@kral.hk", "date": "2021-04-04T12:50:44Z"}, "committer": {"name": "Vojtech Kral", "email": "vojtech@kral.hk", "date": "2021-04-15T21:23:23Z"}, "message": "VecDeque: Add partition_point() #78021", "tree": {"sha": "ec4c58745735659a62048701f7f6f451ad31c148", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec4c58745735659a62048701f7f6f451ad31c148"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e68680d30db3ba492827979b44c9f28e574e2274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e68680d30db3ba492827979b44c9f28e574e2274", "html_url": "https://github.com/rust-lang/rust/commit/e68680d30db3ba492827979b44c9f28e574e2274", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e68680d30db3ba492827979b44c9f28e574e2274/comments", "author": {"login": "vojtechkral", "id": 424891, "node_id": "MDQ6VXNlcjQyNDg5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/424891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vojtechkral", "html_url": "https://github.com/vojtechkral", "followers_url": "https://api.github.com/users/vojtechkral/followers", "following_url": "https://api.github.com/users/vojtechkral/following{/other_user}", "gists_url": "https://api.github.com/users/vojtechkral/gists{/gist_id}", "starred_url": "https://api.github.com/users/vojtechkral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vojtechkral/subscriptions", "organizations_url": "https://api.github.com/users/vojtechkral/orgs", "repos_url": "https://api.github.com/users/vojtechkral/repos", "events_url": "https://api.github.com/users/vojtechkral/events{/privacy}", "received_events_url": "https://api.github.com/users/vojtechkral/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vojtechkral", "id": 424891, "node_id": "MDQ6VXNlcjQyNDg5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/424891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vojtechkral", "html_url": "https://github.com/vojtechkral", "followers_url": "https://api.github.com/users/vojtechkral/followers", "following_url": "https://api.github.com/users/vojtechkral/following{/other_user}", "gists_url": "https://api.github.com/users/vojtechkral/gists{/gist_id}", "starred_url": "https://api.github.com/users/vojtechkral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vojtechkral/subscriptions", "organizations_url": "https://api.github.com/users/vojtechkral/orgs", "repos_url": "https://api.github.com/users/vojtechkral/repos", "events_url": "https://api.github.com/users/vojtechkral/events{/privacy}", "received_events_url": "https://api.github.com/users/vojtechkral/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bccbf9db1c799b4848c1742ddc6170e8fa94c965", "url": "https://api.github.com/repos/rust-lang/rust/commits/bccbf9db1c799b4848c1742ddc6170e8fa94c965", "html_url": "https://github.com/rust-lang/rust/commit/bccbf9db1c799b4848c1742ddc6170e8fa94c965"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "f8516bdab0c8c059a91492600b1c1acb905296fd", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/e68680d30db3ba492827979b44c9f28e574e2274/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e68680d30db3ba492827979b44c9f28e574e2274/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=e68680d30db3ba492827979b44c9f28e574e2274", "patch": "@@ -2534,6 +2534,51 @@ impl<T> VecDeque<T> {\n     {\n         self.binary_search_by(|k| f(k).cmp(b))\n     }\n+\n+    /// Returns the index of the partition point according to the given predicate\n+    /// (the index of the first element of the second partition).\n+    ///\n+    /// The deque is assumed to be partitioned according to the given predicate.\n+    /// This means that all elements for which the predicate returns true are at the start of the deque\n+    /// and all elements for which the predicate returns false are at the end.\n+    /// For example, [7, 15, 3, 5, 4, 12, 6] is a partitioned under the predicate x % 2 != 0\n+    /// (all odd numbers are at the start, all even at the end).\n+    ///\n+    /// If this deque is not partitioned, the returned result is unspecified and meaningless,\n+    /// as this method performs a kind of binary search.\n+    ///\n+    /// See also [`binary_search`], [`binary_search_by`], and [`binary_search_by_key`].\n+    ///\n+    /// [`binary_search`]: slice::binary_search\n+    /// [`binary_search_by`]: slice::binary_search_by\n+    /// [`binary_search_by_key`]: slice::binary_search_by_key\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(vecdeque_binary_search)]\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let deque: VecDeque<_> = vec![1, 2, 3, 3, 5, 6, 7].into();\n+    /// let i = deque.partition_point(|&x| x < 5);\n+    ///\n+    /// assert_eq!(i, 4);\n+    /// assert!(deque.iter().take(i).all(|&x| x < 5));\n+    /// assert!(deque.iter().skip(i).all(|&x| !(x < 5)));\n+    /// ```\n+    #[unstable(feature = \"vecdeque_binary_search\", issue = \"78021\")]\n+    pub fn partition_point<P>(&self, mut pred: P) -> usize\n+    where\n+        P: FnMut(&T) -> bool,\n+    {\n+        let (front, back) = self.as_slices();\n+\n+        if let Some(true) = back.first().map(|v| pred(v)) {\n+            back.partition_point(pred) + front.len()\n+        } else {\n+            front.partition_point(pred)\n+        }\n+    }\n }\n \n impl<T: Clone> VecDeque<T> {"}, {"sha": "d7140cf97593cbd8f751c2fac4e022f18900c697", "filename": "library/alloc/tests/vec_deque.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e68680d30db3ba492827979b44c9f28e574e2274/library%2Falloc%2Ftests%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e68680d30db3ba492827979b44c9f28e574e2274/library%2Falloc%2Ftests%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec_deque.rs?ref=e68680d30db3ba492827979b44c9f28e574e2274", "patch": "@@ -1699,6 +1699,24 @@ fn test_binary_search_by_key() {\n     assert_eq!(deque.binary_search_by_key(&4, |&(v,)| v), Err(3));\n }\n \n+#[test]\n+fn test_partition_point() {\n+    // Contiguous (front only) search:\n+    let deque: VecDeque<_> = vec![1, 2, 3, 5, 6].into();\n+    assert!(deque.as_slices().1.is_empty());\n+    assert_eq!(deque.partition_point(|&v| v <= 3), 3);\n+\n+    // Split search (both front & back non-empty):\n+    let mut deque: VecDeque<_> = vec![5, 6].into();\n+    deque.push_front(3);\n+    deque.push_front(2);\n+    deque.push_front(1);\n+    deque.push_back(10);\n+    assert!(!deque.as_slices().0.is_empty());\n+    assert!(!deque.as_slices().1.is_empty());\n+    assert_eq!(deque.partition_point(|&v| v <= 5), 4);\n+}\n+\n #[test]\n fn test_zero_sized_push() {\n     const N: usize = 8;"}]}