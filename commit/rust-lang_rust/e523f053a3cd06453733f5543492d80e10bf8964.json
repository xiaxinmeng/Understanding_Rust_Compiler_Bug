{"sha": "e523f053a3cd06453733f5543492d80e10bf8964", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1MjNmMDUzYTNjZDA2NDUzNzMzZjU1NDM0OTJkODBlMTBiZjg5NjQ=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-26T07:30:58Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-26T07:30:58Z"}, "message": "Format source codes and update tests", "tree": {"sha": "ea29a8249fa2e977d54a1cb947691557d5f8896a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea29a8249fa2e977d54a1cb947691557d5f8896a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e523f053a3cd06453733f5543492d80e10bf8964", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e523f053a3cd06453733f5543492d80e10bf8964", "html_url": "https://github.com/rust-lang/rust/commit/e523f053a3cd06453733f5543492d80e10bf8964", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e523f053a3cd06453733f5543492d80e10bf8964/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3884b532b9c6e8fb2a117a825cbb138eb241b802", "url": "https://api.github.com/repos/rust-lang/rust/commits/3884b532b9c6e8fb2a117a825cbb138eb241b802", "html_url": "https://github.com/rust-lang/rust/commit/3884b532b9c6e8fb2a117a825cbb138eb241b802"}], "stats": {"total": 42, "additions": 16, "deletions": 26}, "files": [{"sha": "8c8e245d2022d105714d9dddfaf1356e2da948d7", "filename": "src/expr.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e523f053a3cd06453733f5543492d80e10bf8964/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e523f053a3cd06453733f5543492d80e10bf8964/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=e523f053a3cd06453733f5543492d80e10bf8964", "patch": "@@ -334,8 +334,7 @@ pub fn format_expr(\n             shape,\n         ),\n         ast::ExprKind::Catch(ref block) => {\n-            if let rewrite @ Some(_) =\n-                rewrite_single_line_block(context, \"do catch \", block, shape)\n+            if let rewrite @ Some(_) = rewrite_single_line_block(context, \"do catch \", block, shape)\n             {\n                 return rewrite;\n             }\n@@ -826,8 +825,7 @@ fn rewrite_empty_block(\n     block: &ast::Block,\n     shape: Shape,\n ) -> Option<String> {\n-    if block.stmts.is_empty() && !block_contains_comment(block, context.codemap) &&\n-        shape.width >= 2\n+    if block.stmts.is_empty() && !block_contains_comment(block, context.codemap) && shape.width >= 2\n     {\n         return Some(\"{}\".to_owned());\n     }"}, {"sha": "63e6eb7bc66e8a0fef1426236469b0409e9ca498", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e523f053a3cd06453733f5543492d80e10bf8964/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e523f053a3cd06453733f5543492d80e10bf8964/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=e523f053a3cd06453733f5543492d80e10bf8964", "patch": "@@ -2734,9 +2734,7 @@ fn format_generics(\n     let shape = Shape::legacy(context.budget(used_width + offset.width()), offset);\n     let mut result = try_opt!(rewrite_generics(context, generics, shape, span));\n \n-    let same_line_brace = if !generics.where_clause.predicates.is_empty() ||\n-        result.contains('\\n')\n-    {\n+    let same_line_brace = if !generics.where_clause.predicates.is_empty() || result.contains('\\n') {\n         let budget = context\n             .config\n             .max_width()"}, {"sha": "5505966f818ced17fa564790802fa9f01df91b1a", "filename": "src/types.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e523f053a3cd06453733f5543492d80e10bf8964/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e523f053a3cd06453733f5543492d80e10bf8964/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=e523f053a3cd06453733f5543492d80e10bf8964", "patch": "@@ -44,12 +44,11 @@ pub fn rewrite_path(\n ) -> Option<String> {\n     let skip_count = qself.map_or(0, |x| x.position);\n \n-    let mut result =\n-        if path.is_global() && qself.is_none() && path_context != PathContext::Import {\n-            \"::\".to_owned()\n-        } else {\n-            String::new()\n-        };\n+    let mut result = if path.is_global() && qself.is_none() && path_context != PathContext::Import {\n+        \"::\".to_owned()\n+    } else {\n+        String::new()\n+    };\n \n     let mut span_lo = path.span.lo;\n "}, {"sha": "c657a4050e2160cdfc249abbc43c0735add06420", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e523f053a3cd06453733f5543492d80e10bf8964/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e523f053a3cd06453733f5543492d80e10bf8964/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=e523f053a3cd06453733f5543492d80e10bf8964", "patch": "@@ -328,8 +328,7 @@ impl<'a> FmtVisitor<'a> {\n             }\n             ast::ItemKind::Trait(..) => {\n                 self.format_missing_with_indent(item.span.lo);\n-                if let Some(trait_str) =\n-                    format_trait(&self.get_context(), item, self.block_indent)\n+                if let Some(trait_str) = format_trait(&self.get_context(), item, self.block_indent)\n                 {\n                     self.buffer.push_str(&trait_str);\n                     self.last_pos = source!(self, item.span).hi;"}, {"sha": "48aa74317365b515136fe8cd84922a719e1d6ee3", "filename": "tests/target/configs-control_style-rfc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e523f053a3cd06453733f5543492d80e10bf8964/tests%2Ftarget%2Fconfigs-control_style-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e523f053a3cd06453733f5543492d80e10bf8964/tests%2Ftarget%2Fconfigs-control_style-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-control_style-rfc.rs?ref=e523f053a3cd06453733f5543492d80e10bf8964", "patch": "@@ -12,8 +12,7 @@ fn main() {\n                 foo\n             }\n             if ai_timer.elapsed_time().as_microseconds() > ai_time.as_microseconds() {\n-                if ball.position().y + ball_radius >\n-                    right_paddle.position().y + paddle_size.y / 2.\n+                if ball.position().y + ball_radius > right_paddle.position().y + paddle_size.y / 2.\n                 {\n                     foo\n                 }"}, {"sha": "661637b743e9c5a796f0c3d0f2520bf1ecd631ce", "filename": "tests/target/expr.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e523f053a3cd06453733f5543492d80e10bf8964/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e523f053a3cd06453733f5543492d80e10bf8964/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=e523f053a3cd06453733f5543492d80e10bf8964", "patch": "@@ -346,12 +346,10 @@ fn complex_if_else() {\n         ha();\n     } else if xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + xxxxxxxx {\n         yo();\n-    } else if let Some(x) =\n-        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n+    } else if let Some(x) = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n     {\n         ha();\n-    } else if xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +\n-        xxxxxxxxx\n+    } else if xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + xxxxxxxxx\n     {\n         yo();\n     }"}, {"sha": "815f920a3c233cce0d15eb546f446c686fccf2fb", "filename": "tests/target/loop.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e523f053a3cd06453733f5543492d80e10bf8964/tests%2Ftarget%2Floop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e523f053a3cd06453733f5543492d80e10bf8964/tests%2Ftarget%2Floop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Floop.rs?ref=e523f053a3cd06453733f5543492d80e10bf8964", "patch": "@@ -12,18 +12,17 @@ fn main() {\n         // Just comments\n     }\n \n-    'a: while loooooooooooooooooooooooooooooooooong_variable_name + another_value >\n-        some_other_value\n-    {}\n+    'a: while loooooooooooooooooooooooooooooooooong_variable_name + another_value > some_other_value\n+    {\n+    }\n \n     while aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa > bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb {\n     }\n \n     while aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa {\n     }\n \n-    'b: for xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx in\n-        some_iter(arg1, arg2)\n+    'b: for xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx in some_iter(arg1, arg2)\n     {\n         // do smth\n     }"}]}