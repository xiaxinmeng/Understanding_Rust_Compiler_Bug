{"sha": "cecfa43fb4f12ff4fda3af372dd8502a8f275ee6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlY2ZhNDNmYjRmMTJmZjRmZGEzYWYzNzJkZDg1MDJhOGYyNzVlZTY=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-05-01T04:04:46Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-06-13T18:04:29Z"}, "message": "Move `check_op` logic to `ops` module", "tree": {"sha": "2b874f1c8ef844176d6d609cd3d9c6485ced39b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b874f1c8ef844176d6d609cd3d9c6485ced39b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cecfa43fb4f12ff4fda3af372dd8502a8f275ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cecfa43fb4f12ff4fda3af372dd8502a8f275ee6", "html_url": "https://github.com/rust-lang/rust/commit/cecfa43fb4f12ff4fda3af372dd8502a8f275ee6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cecfa43fb4f12ff4fda3af372dd8502a8f275ee6/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fb612bd15bb3ef098fd24c20d0727de573b4410", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fb612bd15bb3ef098fd24c20d0727de573b4410", "html_url": "https://github.com/rust-lang/rust/commit/1fb612bd15bb3ef098fd24c20d0727de573b4410"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "d5059c98c9511053c4c14f9eb44f19ae421a3d7d", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cecfa43fb4f12ff4fda3af372dd8502a8f275ee6/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecfa43fb4f12ff4fda3af372dd8502a8f275ee6/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=cecfa43fb4f12ff4fda3af372dd8502a8f275ee6", "patch": "@@ -10,6 +10,22 @@ use rustc_span::{Span, Symbol};\n \n use super::ConstCx;\n \n+/// Emits an error if `op` is not allowed in the given const context.\n+pub fn non_const<O: NonConstOp>(ccx: &ConstCx<'_, '_>, op: O, span: Span) {\n+    debug!(\"illegal_op: op={:?}\", op);\n+\n+    if op.is_allowed_in_item(ccx) {\n+        return;\n+    }\n+\n+    if ccx.tcx.sess.opts.debugging_opts.unleash_the_miri_inside_of_you {\n+        ccx.tcx.sess.miri_unleashed_feature(span, O::feature_gate());\n+        return;\n+    }\n+\n+    op.emit_error(ccx, span);\n+}\n+\n /// An operation that is not *always* allowed in a const context.\n pub trait NonConstOp: std::fmt::Debug {\n     /// Returns the `Symbol` corresponding to the feature gate that would enable this operation,"}, {"sha": "d351b3ced05391682d3014e76fd1e3038dce32d7", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/cecfa43fb4f12ff4fda3af372dd8502a8f275ee6/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecfa43fb4f12ff4fda3af372dd8502a8f275ee6/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=cecfa43fb4f12ff4fda3af372dd8502a8f275ee6", "patch": "@@ -232,30 +232,15 @@ impl Validator<'mir, 'tcx> {\n         self.qualifs.in_return_place(self.ccx)\n     }\n \n-    /// Emits an error at the given `span` if an expression cannot be evaluated in the current\n-    /// context.\n-    pub fn check_op_spanned<O>(&mut self, op: O, span: Span)\n-    where\n-        O: NonConstOp,\n-    {\n-        debug!(\"check_op: op={:?}\", op);\n-\n-        if op.is_allowed_in_item(self) {\n-            return;\n-        }\n-\n-        if self.tcx.sess.opts.debugging_opts.unleash_the_miri_inside_of_you {\n-            self.tcx.sess.miri_unleashed_feature(span, O::feature_gate());\n-            return;\n-        }\n-\n-        op.emit_error(self, span);\n-    }\n-\n     /// Emits an error if an expression cannot be evaluated in the current context.\n     pub fn check_op(&mut self, op: impl NonConstOp) {\n-        let span = self.span;\n-        self.check_op_spanned(op, span)\n+        ops::non_const(self.ccx, op, self.span);\n+    }\n+\n+    /// Emits an error at the given `span` if an expression cannot be evaluated in the current\n+    /// context.\n+    pub fn check_op_spanned(&mut self, op: impl NonConstOp, span: Span) {\n+        ops::non_const(self.ccx, op, span);\n     }\n \n     fn check_static(&mut self, def_id: DefId, span: Span) {"}]}