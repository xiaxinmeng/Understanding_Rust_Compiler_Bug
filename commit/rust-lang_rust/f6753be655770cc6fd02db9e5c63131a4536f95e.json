{"sha": "f6753be655770cc6fd02db9e5c63131a4536f95e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NzUzYmU2NTU3NzBjYzZmZDAyZGI5ZTVjNjMxMzFhNDUzNmY5NWU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-06-25T10:16:48Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-06-25T19:15:11Z"}, "message": "Allow moving out of temporary values\n\nThis will probably need more work, as moving doesn't appear to do\nquite the right thing yet in general, and we should also check\nsomewhere that we're not, for example, moving out the content out of\nan immutable field (probably moving out of fields is not okay in\ngeneral).", "tree": {"sha": "b081eb92d19a3f68d554c4d2f9d9e6ef1f4901f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b081eb92d19a3f68d554c4d2f9d9e6ef1f4901f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6753be655770cc6fd02db9e5c63131a4536f95e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6753be655770cc6fd02db9e5c63131a4536f95e", "html_url": "https://github.com/rust-lang/rust/commit/f6753be655770cc6fd02db9e5c63131a4536f95e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6753be655770cc6fd02db9e5c63131a4536f95e/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61fc12d0d0d1b8acb7472bfc6223882b32acd3d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/61fc12d0d0d1b8acb7472bfc6223882b32acd3d2", "html_url": "https://github.com/rust-lang/rust/commit/61fc12d0d0d1b8acb7472bfc6223882b32acd3d2"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "c601d7992148923906489a4676b496482689b24a", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f6753be655770cc6fd02db9e5c63131a4536f95e/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6753be655770cc6fd02db9e5c63131a4536f95e/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=f6753be655770cc6fd02db9e5c63131a4536f95e", "patch": "@@ -301,6 +301,13 @@ tag lit_ {\n     lit_bool(bool);\n }\n \n+fn is_path(&@expr e) -> bool {\n+    ret alt (e.node) {\n+        case (expr_path(_)) { true }\n+        case (_) { false }\n+    };\n+}\n+\n \n // NB: If you change this, you'll probably want to change the corresponding\n // type structure in middle/ty.rs as well."}, {"sha": "672894c067568b349c7ae76d3bcc1e7ccab68ee7", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f6753be655770cc6fd02db9e5c63131a4536f95e/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6753be655770cc6fd02db9e5c63131a4536f95e/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=f6753be655770cc6fd02db9e5c63131a4536f95e", "patch": "@@ -367,11 +367,12 @@ fn find_pre_post_expr(&fn_ctxt fcx, @expr e) {\n                 }\n                 case (_) { find_pre_post_exprs(fcx, [lhs, rhs], e.id); }\n             }\n-            forget_in_postcond(fcx, e.id, rhs.id);\n+            if (is_path(rhs)) {\n+                forget_in_postcond(fcx, e.id, rhs.id);\n+            }\n         }\n         case (expr_swap(?lhs, ?rhs)) {\n             // Both sides must already be initialized\n-            \n             find_pre_post_exprs(fcx, [lhs, rhs], e.id);\n             forget_in_postcond_still_init(fcx, e.id, lhs.id);\n             forget_in_postcond_still_init(fcx, e.id, rhs.id);\n@@ -591,14 +592,10 @@ fn find_pre_post_stmt(&fn_ctxt fcx, &stmt s) {\n                                 rec(id=alocal.node.id, \n                                     c=ninit(alocal.node.ident)));\n                             \n-                            alt (an_init.op) {\n-                                case (init_move) {\n-                                    forget_in_postcond(fcx, id,\n-                                                       an_init.expr.id);\n-                                }\n-                                case (_) { /* nothing gets deinitialized */ } \n+                            if (an_init.op == init_move &&\n+                                is_path(an_init.expr)) {\n+                                forget_in_postcond(fcx, id, an_init.expr.id);\n                             }\n-\n                         }\n                         case (none) {\n                             clear_pp(node_id_to_ts_ann(fcx.ccx,"}, {"sha": "386d1cff8a2873568b793e0ed446a02229845462", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f6753be655770cc6fd02db9e5c63131a4536f95e/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6753be655770cc6fd02db9e5c63131a4536f95e/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=f6753be655770cc6fd02db9e5c63131a4536f95e", "patch": "@@ -633,12 +633,9 @@ fn find_pre_post_state_stmt(&fn_ctxt fcx, &prestate pres, @stmt s) -> bool {\n \n                             auto post = tritv_clone(expr_poststate(fcx.ccx,\n                                                       an_init.expr));\n-                            alt (an_init.op) {\n-                                case (init_move) {\n-                                    clear_in_poststate_expr(fcx, an_init.expr,\n-                                                            post);\n-                                }\n-                                case (_) { /* nothing gets deinitialized */ } \n+                            if (an_init.op == init_move) {\n+                                clear_in_poststate_expr(fcx, an_init.expr,\n+                                                        post);\n                             }\n \n                             set_in_poststate_ident(fcx, alocal.node.id,"}]}