{"sha": "4dce66ad319cbcbfae5f9e941b80c28cf546590c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkY2U2NmFkMzE5Y2JjYmZhZTVmOWU5NDFiODBjMjhjZjU0NjU5MGM=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-19T19:35:14Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-19T20:12:18Z"}, "message": "Fix handling of structs in match arms", "tree": {"sha": "8e73faaa234470df5c88ea8ad8d4a3ed6e5d74f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e73faaa234470df5c88ea8ad8d4a3ed6e5d74f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dce66ad319cbcbfae5f9e941b80c28cf546590c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dce66ad319cbcbfae5f9e941b80c28cf546590c", "html_url": "https://github.com/rust-lang/rust/commit/4dce66ad319cbcbfae5f9e941b80c28cf546590c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dce66ad319cbcbfae5f9e941b80c28cf546590c/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd8e33fb7e60d78809da5e77c968ef30433c2317", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd8e33fb7e60d78809da5e77c968ef30433c2317", "html_url": "https://github.com/rust-lang/rust/commit/cd8e33fb7e60d78809da5e77c968ef30433c2317"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "452e9148540ce5951c03833eff45207238b9bec5", "filename": "crates/ra_syntax/src/grammar/expressions/atom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4dce66ad319cbcbfae5f9e941b80c28cf546590c/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dce66ad319cbcbfae5f9e941b80c28cf546590c/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=4dce66ad319cbcbfae5f9e941b80c28cf546590c", "patch": "@@ -362,7 +362,7 @@ fn match_arm(p: &mut Parser) -> BlockLike {\n         patterns::pattern(p);\n     }\n     if p.eat(IF_KW) {\n-        expr_no_struct(p);\n+        expr(p);\n     }\n     p.expect(FAT_ARROW);\n     let ret = expr_stmt(p);"}]}