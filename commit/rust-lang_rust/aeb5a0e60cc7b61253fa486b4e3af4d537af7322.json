{"sha": "aeb5a0e60cc7b61253fa486b4e3af4d537af7322", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlYjVhMGU2MGNjN2I2MTI1M2ZhNDg2YjRlM2FmNGQ1MzdhZjczMjI=", "commit": {"author": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2015-12-13T01:51:58Z"}, "committer": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2015-12-13T05:39:10Z"}, "message": "Reduce false positives\n\nAdd macro checking, and only lint for single leading underscores", "tree": {"sha": "bfb1cb30c5ba9842d4ad678e67533468f20fe12d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfb1cb30c5ba9842d4ad678e67533468f20fe12d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aeb5a0e60cc7b61253fa486b4e3af4d537af7322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aeb5a0e60cc7b61253fa486b4e3af4d537af7322", "html_url": "https://github.com/rust-lang/rust/commit/aeb5a0e60cc7b61253fa486b4e3af4d537af7322", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aeb5a0e60cc7b61253fa486b4e3af4d537af7322/comments", "author": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "609111269818f99918980c85753d0d1bcea488c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/609111269818f99918980c85753d0d1bcea488c3", "html_url": "https://github.com/rust-lang/rust/commit/609111269818f99918980c85753d0d1bcea488c3"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "f46a26c10e1d30373e7346254356d54d7ec5e0b1", "filename": "src/misc.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/aeb5a0e60cc7b61253fa486b4e3af4d537af7322/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aeb5a0e60cc7b61253fa486b4e3af4d537af7322/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=aeb5a0e60cc7b61253fa486b4e3af4d537af7322", "patch": "@@ -334,19 +334,24 @@ impl LateLintPass for UsedUnderscoreBinding {\n     fn check_expr(&mut self, cx: &LateContext, expr: &Expr) {\n         let needs_lint = match expr.node {\n             ExprPath(_, ref path) => {\n-                path.segments.last().unwrap().identifier.name.as_str().chars().next() == Some('_') &&\n-                (cx.tcx.def_map.borrow()).values().any(|res| match res.base_def {\n+                let ident = path.segments.last()\n+                                .expect(\"path should always have at least one segment\")\n+                                .identifier;\n+                ident.name.as_str().chars().next() == Some('_') //starts with '_'\n+                && ident.name.as_str().chars().skip(1).next() != Some('_') //doesn't start with \"__\"\n+                && ident.name != ident.unhygienic_name //not in macro\n+                && cx.tcx.def_map.borrow().values().any(|res| match res.base_def {\n                                                   Def::DefLocal(_, _) => true,\n                                                   _ => false\n-                                            })\n+                                            }) //local variable\n             },\n             ExprField(_, spanned) => spanned.node.as_str().chars().next() == Some('_'),\n             _ => false\n         };\n         if needs_lint {\n-            cx.span_lint(USED_UNDERSCORE_BINDING, expr.span, &format!(\n-                \"used binding which is prefixed with an underscore. A leading underscore signals\\\n-                 that a binding will not be used.\"));\n+            cx.span_lint(USED_UNDERSCORE_BINDING, expr.span,\n+                         \"used binding which is prefixed with an underscore. A leading underscore\\\n+                          signals that a binding will not be used.\");\n         }\n     }\n }"}]}