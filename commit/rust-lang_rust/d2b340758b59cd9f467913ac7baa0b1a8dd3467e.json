{"sha": "d2b340758b59cd9f467913ac7baa0b1a8dd3467e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyYjM0MDc1OGI1OWNkOWY0Njc5MTNhYzdiYWEwYjFhOGRkMzQ2N2U=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-20T20:44:39Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-29T20:58:37Z"}, "message": "Add a test for uninhabitedness changes", "tree": {"sha": "8eab01d434f051503b23c3de7661c223795cf45a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8eab01d434f051503b23c3de7661c223795cf45a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2b340758b59cd9f467913ac7baa0b1a8dd3467e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2b340758b59cd9f467913ac7baa0b1a8dd3467e", "html_url": "https://github.com/rust-lang/rust/commit/d2b340758b59cd9f467913ac7baa0b1a8dd3467e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2b340758b59cd9f467913ac7baa0b1a8dd3467e/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "682f0f8d807b728cb18712fb3315e024f22118bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/682f0f8d807b728cb18712fb3315e024f22118bb", "html_url": "https://github.com/rust-lang/rust/commit/682f0f8d807b728cb18712fb3315e024f22118bb"}], "stats": {"total": 86, "additions": 56, "deletions": 30}, "files": [{"sha": "49ef984eb9383eb2367a7789dd9f6cdf2f9a098b", "filename": "src/test/ui/always-inhabited-union-ref.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d2b340758b59cd9f467913ac7baa0b1a8dd3467e/src%2Ftest%2Fui%2Falways-inhabited-union-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2b340758b59cd9f467913ac7baa0b1a8dd3467e/src%2Ftest%2Fui%2Falways-inhabited-union-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falways-inhabited-union-ref.rs?ref=d2b340758b59cd9f467913ac7baa0b1a8dd3467e", "patch": "@@ -0,0 +1,29 @@\n+#![feature(exhaustive_patterns)]\n+#![feature(never_type)]\n+\n+#![allow(dead_code)]\n+#![allow(unreachable_code)]\n+\n+pub union Foo {\n+    foo: !,\n+}\n+\n+fn uninhab_ref() -> &'static ! {\n+    unimplemented!()\n+}\n+\n+fn uninhab_union() -> Foo {\n+    unimplemented!()\n+}\n+\n+fn match_on_uninhab() {\n+    match uninhab_ref() {\n+        //~^ ERROR non-exhaustive patterns: type &'static ! is non-empty\n+    }\n+\n+    match uninhab_union() {\n+        //~^ ERROR non-exhaustive patterns: type Foo is non-empty\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "95d3da7be860a51f3336e9e92076ea1a4226a8fe", "filename": "src/test/ui/always-inhabited-union-ref.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d2b340758b59cd9f467913ac7baa0b1a8dd3467e/src%2Ftest%2Fui%2Falways-inhabited-union-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d2b340758b59cd9f467913ac7baa0b1a8dd3467e/src%2Ftest%2Fui%2Falways-inhabited-union-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falways-inhabited-union-ref.stderr?ref=d2b340758b59cd9f467913ac7baa0b1a8dd3467e", "patch": "@@ -0,0 +1,27 @@\n+error[E0004]: non-exhaustive patterns: type &'static ! is non-empty\n+  --> $DIR/always-inhabited-union-ref.rs:20:11\n+   |\n+LL |     match uninhab_ref() {\n+   |           ^^^^^^^^^^^^^\n+   |\n+help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+  --> $DIR/always-inhabited-union-ref.rs:20:11\n+   |\n+LL |     match uninhab_ref() {\n+   |           ^^^^^^^^^^^^^\n+\n+error[E0004]: non-exhaustive patterns: type Foo is non-empty\n+  --> $DIR/always-inhabited-union-ref.rs:24:11\n+   |\n+LL |     match uninhab_union() {\n+   |           ^^^^^^^^^^^^^^^\n+   |\n+help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+  --> $DIR/always-inhabited-union-ref.rs:24:11\n+   |\n+LL |     match uninhab_union() {\n+   |           ^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0004`."}, {"sha": "d11aacec1963169919de344b7bd762004d5d3058", "filename": "src/test/ui/inhabitedness-infinite-loop.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/682f0f8d807b728cb18712fb3315e024f22118bb/src%2Ftest%2Fui%2Finhabitedness-infinite-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/682f0f8d807b728cb18712fb3315e024f22118bb/src%2Ftest%2Fui%2Finhabitedness-infinite-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finhabitedness-infinite-loop.rs?ref=682f0f8d807b728cb18712fb3315e024f22118bb", "patch": "@@ -1,26 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// error-pattern:reached recursion limit\n-\n-#![feature(never_type)]\n-#![feature(exhaustive_patterns)]\n-\n-struct Foo<'a, T: 'a> {\n-    ph: std::marker::PhantomData<T>,\n-    foo: &'a Foo<'a, (T, T)>,\n-}\n-\n-fn wub(f: Foo<!>) {\n-    match f {}\n-}\n-\n-fn main() {}\n-"}, {"sha": "24237f3a1b64bea51065aa663f92e137d4b7471f", "filename": "src/test/ui/inhabitedness-infinite-loop.stderr", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/682f0f8d807b728cb18712fb3315e024f22118bb/src%2Ftest%2Fui%2Finhabitedness-infinite-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/682f0f8d807b728cb18712fb3315e024f22118bb/src%2Ftest%2Fui%2Finhabitedness-infinite-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finhabitedness-infinite-loop.stderr?ref=682f0f8d807b728cb18712fb3315e024f22118bb"}]}