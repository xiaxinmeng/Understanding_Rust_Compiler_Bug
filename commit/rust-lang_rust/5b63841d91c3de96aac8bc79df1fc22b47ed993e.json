{"sha": "5b63841d91c3de96aac8bc79df1fc22b47ed993e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNjM4NDFkOTFjM2RlOTZhYWM4YmM3OWRmMWZjMjJiNDdlZDk5M2U=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-17T05:58:19Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-17T09:26:13Z"}, "message": "Allow #[derive()] to generate unsafe methods", "tree": {"sha": "9c62cf7a351d7fc03f0689867409fd510f28fcb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c62cf7a351d7fc03f0689867409fd510f28fcb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b63841d91c3de96aac8bc79df1fc22b47ed993e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b63841d91c3de96aac8bc79df1fc22b47ed993e", "html_url": "https://github.com/rust-lang/rust/commit/5b63841d91c3de96aac8bc79df1fc22b47ed993e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b63841d91c3de96aac8bc79df1fc22b47ed993e/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f83c4b8513fe77ab27e1f8d07cf5c7d577a1fe2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f83c4b8513fe77ab27e1f8d07cf5c7d577a1fe2", "html_url": "https://github.com/rust-lang/rust/commit/4f83c4b8513fe77ab27e1f8d07cf5c7d577a1fe2"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "d99156bfa45037d514e7e78e8228fca0ba0aaecb", "filename": "src/libsyntax/ext/deriving/clone.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -39,6 +39,7 @@ pub fn expand_deriving_clone(cx: &mut ExtCtxt,\n                 args: Vec::new(),\n                 ret_ty: Self_,\n                 attributes: attrs,\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|c, s, sub| {\n                     cs_clone(\"Clone\", c, s, sub)\n                 })),"}, {"sha": "2a58ba2fc5419845451b4e88fcf5743b9da0b4f5", "filename": "src/libsyntax/ext/deriving/cmp/eq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -59,6 +59,7 @@ pub fn expand_deriving_eq(cx: &mut ExtCtxt,\n                 args: vec!(),\n                 ret_ty: nil_ty(),\n                 attributes: attrs,\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|a, b, c| {\n                     cs_total_eq_assert(a, b, c)\n                 }))"}, {"sha": "af36428437cb84fe9f8215243ade58db167d3a79", "filename": "src/libsyntax/ext/deriving/cmp/ord.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -40,6 +40,7 @@ pub fn expand_deriving_ord(cx: &mut ExtCtxt,\n                 args: vec!(borrowed_self()),\n                 ret_ty: Literal(path_std!(cx, core::cmp::Ordering)),\n                 attributes: attrs,\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|a, b, c| {\n                     cs_cmp(a, b, c)\n                 })),"}, {"sha": "b330c1de180afe6d5f2107d2f9a57c2da2738281", "filename": "src/libsyntax/ext/deriving/cmp/partial_eq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Fpartial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Fpartial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Fpartial_eq.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -71,6 +71,7 @@ pub fn expand_deriving_partial_eq(cx: &mut ExtCtxt,\n                 args: vec!(borrowed_self()),\n                 ret_ty: Literal(path_local!(bool)),\n                 attributes: attrs,\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|a, b, c| {\n                     $f(a, b, c)\n                 }))"}, {"sha": "557cce633465eb868bea754105c0a4b894fcf5d7", "filename": "src/libsyntax/ext/deriving/cmp/partial_ord.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Fpartial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Fpartial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Fpartial_ord.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -37,6 +37,7 @@ pub fn expand_deriving_partial_ord(cx: &mut ExtCtxt,\n                 args: vec!(borrowed_self()),\n                 ret_ty: Literal(path_local!(bool)),\n                 attributes: attrs,\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|cx, span, substr| {\n                     cs_op($op, $equal, cx, span, substr)\n                 }))\n@@ -60,6 +61,7 @@ pub fn expand_deriving_partial_ord(cx: &mut ExtCtxt,\n         args: vec![borrowed_self()],\n         ret_ty: ret_ty,\n         attributes: attrs,\n+        is_unsafe: false,\n         combine_substructure: combine_substructure(Box::new(|cx, span, substr| {\n             cs_partial_cmp(cx, span, substr)\n         }))"}, {"sha": "d21373c4a0b68f25643b49cf2312ced77886df20", "filename": "src/libsyntax/ext/deriving/decodable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -79,6 +79,7 @@ fn expand_deriving_decodable_imp(cx: &mut ExtCtxt,\n                     true\n                 )),\n                 attributes: Vec::new(),\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|a, b, c| {\n                     decodable_substructure(a, b, c, krate)\n                 })),"}, {"sha": "84b91a252a638f3943fb0ee16507b7d9cca7d389", "filename": "src/libsyntax/ext/deriving/default.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -39,6 +39,7 @@ pub fn expand_deriving_default(cx: &mut ExtCtxt,\n                 args: Vec::new(),\n                 ret_ty: Self_,\n                 attributes: attrs,\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|a, b, c| {\n                     default_substructure(a, b, c)\n                 }))"}, {"sha": "08037c0308ddc2cac9c61942e8219d3b843cb263", "filename": "src/libsyntax/ext/deriving/encodable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -155,6 +155,7 @@ fn expand_deriving_encodable_imp(cx: &mut ExtCtxt,\n                     true\n                 )),\n                 attributes: Vec::new(),\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|a, b, c| {\n                     encodable_substructure(a, b, c)\n                 })),"}, {"sha": "b9968ca96088ff5b122ab2f4a083b991b71a5948", "filename": "src/libsyntax/ext/deriving/generic/mod.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -253,6 +253,9 @@ pub struct MethodDef<'a> {\n \n     pub attributes: Vec<ast::Attribute>,\n \n+    // Is it an `unsafe fn`?\n+    pub is_unsafe: bool,\n+\n     pub combine_substructure: RefCell<CombineSubstructureFunc<'a>>,\n }\n \n@@ -859,6 +862,12 @@ impl<'a> MethodDef<'a> {\n         let fn_decl = cx.fn_decl(args, ret_type);\n         let body_block = cx.block_expr(body);\n \n+        let unsafety = if self.is_unsafe {\n+            ast::Unsafety::Unsafe\n+        } else {\n+            ast::Unsafety::Normal\n+        };\n+\n         // Create the method.\n         P(ast::ImplItem {\n             id: ast::DUMMY_NODE_ID,\n@@ -870,7 +879,7 @@ impl<'a> MethodDef<'a> {\n                 generics: fn_generics,\n                 abi: abi,\n                 explicit_self: explicit_self,\n-                unsafety: ast::Unsafety::Normal,\n+                unsafety: unsafety,\n                 decl: fn_decl\n             }, body_block)\n         })"}, {"sha": "04387bd4b3f6028b1ecc6501979139be60b3ecb6", "filename": "src/libsyntax/ext/deriving/hash.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -44,6 +44,7 @@ pub fn expand_deriving_hash(cx: &mut ExtCtxt,\n                 args: vec!(Ptr(Box::new(Literal(arg)), Borrowed(None, MutMutable))),\n                 ret_ty: nil_ty(),\n                 attributes: vec![],\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|a, b, c| {\n                     hash_substructure(a, b, c)\n                 }))"}, {"sha": "4aabcf04e417058b757246587fc8d18b7486eafe", "filename": "src/libsyntax/ext/deriving/primitive.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -44,6 +44,7 @@ pub fn expand_deriving_from_primitive(cx: &mut ExtCtxt,\n                                            true)),\n                 // #[inline] liable to cause code-bloat\n                 attributes: attrs.clone(),\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|c, s, sub| {\n                     cs_from(\"i64\", c, s, sub)\n                 })),\n@@ -59,6 +60,7 @@ pub fn expand_deriving_from_primitive(cx: &mut ExtCtxt,\n                                            true)),\n                 // #[inline] liable to cause code-bloat\n                 attributes: attrs,\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|c, s, sub| {\n                     cs_from(\"u64\", c, s, sub)\n                 })),"}, {"sha": "518bd161c1efb6eef38b4dccfee34ca9251294b1", "filename": "src/libsyntax/ext/deriving/show.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -42,6 +42,7 @@ pub fn expand_deriving_show(cx: &mut ExtCtxt,\n                 args: vec!(fmtr),\n                 ret_ty: Literal(path_std!(cx, core::fmt::Result)),\n                 attributes: Vec::new(),\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(|a, b, c| {\n                     show_substructure(a, b, c)\n                 }))"}, {"sha": "b130c42dcd718aa4972ddb39d75b86f7e2634b26", "filename": "src/test/auxiliary/custom_derive_plugin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -54,6 +54,7 @@ fn expand(cx: &mut ExtCtxt,\n                 args: vec![],\n                 ret_ty: Literal(Path::new_local(\"isize\")),\n                 attributes: vec![],\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(box |cx, span, substr| {\n                     let zero = cx.expr_isize(span, 0);\n                     cs_fold(false,"}, {"sha": "b056d8b565410262cc1834c4041c0ed1a88ebbb4", "filename": "src/test/auxiliary/custom_derive_plugin_attr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b63841d91c3de96aac8bc79df1fc22b47ed993e/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin_attr.rs?ref=5b63841d91c3de96aac8bc79df1fc22b47ed993e", "patch": "@@ -56,6 +56,7 @@ fn expand(cx: &mut ExtCtxt,\n                 args: vec![],\n                 ret_ty: Literal(Path::new_local(\"isize\")),\n                 attributes: vec![],\n+                is_unsafe: false,\n                 combine_substructure: combine_substructure(Box::new(totalsum_substructure)),\n             },\n         ],"}]}