{"sha": "9ceef4e004a521821d227cf6cfd4726b44e4ac8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljZWVmNGUwMDRhNTIxODIxZDIyN2NmNmNmZDQ3MjZiNDRlNGFjOGQ=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-10-06T15:35:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-06T15:35:43Z"}, "message": "Rollup merge of #36972 - nastevens:fix-rustbuild-per-target-musl-root, r=alexcrichton\n\nFix rustbuild per-target musl root\n\nIn #36292, support was added to target musl libc for ARM targets using rustbuild. Specifically, that change allowed the addition of per-target `musl-root` options in the rustbuild `config.toml` so that multiple targets depending on musl could be built. However, that implementation contained a couple of omissions: the `musl-root` option was added to the config, but was never added to the TOML parsing, and therefore was not actually being loaded from `config.toml`. This PR rectifies that.\n\nUsing these changes and a heavily modified version of the buildbot Docker container, I have been able to build rust targeting `armv7-unknown-linux-musleabihf` and have successfully run the binaries on a Raspberry Pi 3. I'm also planning to test `arm-unknown-linux-musleabi` and `arm-unknown-linux-musleabihf` systems, but have no reason to believe that this change would not simply work on those targets.", "tree": {"sha": "6af2da9c8f19a24c7c0ff47e5b5abd34d4bcffd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6af2da9c8f19a24c7c0ff47e5b5abd34d4bcffd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ceef4e004a521821d227cf6cfd4726b44e4ac8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ceef4e004a521821d227cf6cfd4726b44e4ac8d", "html_url": "https://github.com/rust-lang/rust/commit/9ceef4e004a521821d227cf6cfd4726b44e4ac8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ceef4e004a521821d227cf6cfd4726b44e4ac8d/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a19e22e2e98134d90fe59e7927d7d9f5a6c00d07", "url": "https://api.github.com/repos/rust-lang/rust/commits/a19e22e2e98134d90fe59e7927d7d9f5a6c00d07", "html_url": "https://github.com/rust-lang/rust/commit/a19e22e2e98134d90fe59e7927d7d9f5a6c00d07"}, {"sha": "7937f6ccdea38fd76a9ef98b41742d9318e25e4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7937f6ccdea38fd76a9ef98b41742d9318e25e4b", "html_url": "https://github.com/rust-lang/rust/commit/7937f6ccdea38fd76a9ef98b41742d9318e25e4b"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "418c3a48ed348bc8281e711bdecbbb42df94efad", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9ceef4e004a521821d227cf6cfd4726b44e4ac8d/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ceef4e004a521821d227cf6cfd4726b44e4ac8d/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=9ceef4e004a521821d227cf6cfd4726b44e4ac8d", "patch": "@@ -90,16 +90,16 @@ pub fn std_link(build: &Build,\n     add_to_sysroot(&out_dir, &libdir);\n \n     if target.contains(\"musl\") && !target.contains(\"mips\") {\n-        copy_musl_third_party_objects(build, &libdir);\n+        copy_musl_third_party_objects(build, target, &libdir);\n     }\n }\n \n /// Copies the crt(1,i,n).o startup objects\n ///\n /// Only required for musl targets that statically link to libc\n-fn copy_musl_third_party_objects(build: &Build, into: &Path) {\n+fn copy_musl_third_party_objects(build: &Build, target: &str, into: &Path) {\n     for &obj in &[\"crt1.o\", \"crti.o\", \"crtn.o\"] {\n-        copy(&build.config.musl_root.as_ref().unwrap().join(\"lib\").join(obj), &into.join(obj));\n+        copy(&build.musl_root(target).unwrap().join(\"lib\").join(obj), &into.join(obj));\n     }\n }\n "}, {"sha": "69bd7a769910ccf8ef272a754a9fe7a880328ea6", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ceef4e004a521821d227cf6cfd4726b44e4ac8d/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ceef4e004a521821d227cf6cfd4726b44e4ac8d/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=9ceef4e004a521821d227cf6cfd4726b44e4ac8d", "patch": "@@ -158,6 +158,7 @@ struct TomlTarget {\n     cc: Option<String>,\n     cxx: Option<String>,\n     android_ndk: Option<String>,\n+    musl_root: Option<String>,\n }\n \n impl Config {\n@@ -268,6 +269,7 @@ impl Config {\n                 }\n                 target.cxx = cfg.cxx.clone().map(PathBuf::from);\n                 target.cc = cfg.cc.clone().map(PathBuf::from);\n+                target.musl_root = cfg.musl_root.clone().map(PathBuf::from);\n \n                 config.target_config.insert(triple.clone(), target);\n             }"}, {"sha": "969cd70fd57eb43e027d41580601398bd097afce", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9ceef4e004a521821d227cf6cfd4726b44e4ac8d/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ceef4e004a521821d227cf6cfd4726b44e4ac8d/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=9ceef4e004a521821d227cf6cfd4726b44e4ac8d", "patch": "@@ -146,8 +146,8 @@ pub fn check(build: &mut Build) {\n                     }\n                 }\n                 None => {\n-                    panic!(\"when targeting MUSL either the build.musl-root \\\n-                            option or the target.$TARGET.musl-root one must \\\n+                    panic!(\"when targeting MUSL either the rust.musl-root \\\n+                            option or the target.$TARGET.musl-root option must \\\n                             be specified in config.toml\")\n                 }\n             }"}]}