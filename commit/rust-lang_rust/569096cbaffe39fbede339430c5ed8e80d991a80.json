{"sha": "569096cbaffe39fbede339430c5ed8e80d991a80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2OTA5NmNiYWZmZTM5ZmJlZGUzMzk0MzBjNWVkOGU4MGQ5OTFhODA=", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-04-18T06:43:20Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-04-20T02:46:51Z"}, "message": "rustdoc: use details tag for trait implementors\n\nThis switches from JS-generated toggles to using the HTML <details> tag\nfor expanding and collapsing entries in the \"Implementors\" section.", "tree": {"sha": "9ced6184a05f50f192a275c4ca60d601a2fada53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ced6184a05f50f192a275c4ca60d601a2fada53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/569096cbaffe39fbede339430c5ed8e80d991a80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/569096cbaffe39fbede339430c5ed8e80d991a80", "html_url": "https://github.com/rust-lang/rust/commit/569096cbaffe39fbede339430c5ed8e80d991a80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/569096cbaffe39fbede339430c5ed8e80d991a80/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "392ba2ba1a7d6c542d2459fb8133bebf62a4a423", "url": "https://api.github.com/repos/rust-lang/rust/commits/392ba2ba1a7d6c542d2459fb8133bebf62a4a423", "html_url": "https://github.com/rust-lang/rust/commit/392ba2ba1a7d6c542d2459fb8133bebf62a4a423"}], "stats": {"total": 134, "additions": 68, "deletions": 66}, "files": [{"sha": "a879a08ee472cbd7ca26b99d2d6f558254299bff", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -1313,6 +1313,7 @@ fn render_impl(\n     let cache = cx.cache();\n     let traits = &cache.traits;\n     let trait_ = i.trait_did_full(cache).map(|did| &traits[&did]);\n+    let mut close_tags = String::new();\n \n     if render_mode == RenderMode::Normal {\n         let id = cx.derive_id(match i.inner_impl().trait_ {\n@@ -1331,7 +1332,12 @@ fn render_impl(\n             format!(\" aliases=\\\"{}\\\"\", aliases.join(\",\"))\n         };\n         if let Some(use_absolute) = use_absolute {\n-            write!(w, \"<h3 id=\\\"{}\\\" class=\\\"impl\\\"{}><code class=\\\"in-band\\\">\", id, aliases);\n+            write!(\n+                w,\n+                \"<details class=\\\"rustdoc-toggle implementors-toggle\\\"><summary><h3 id=\\\"{}\\\" class=\\\"impl\\\"{}><code class=\\\"in-band\\\">\",\n+                id, aliases\n+            );\n+            close_tags.insert_str(0, \"</details>\");\n             write!(w, \"{}\", i.inner_impl().print(use_absolute, cx));\n             if show_def_docs {\n                 for it in &i.inner_impl().items {\n@@ -1354,11 +1360,12 @@ fn render_impl(\n         } else {\n             write!(\n                 w,\n-                \"<h3 id=\\\"{}\\\" class=\\\"impl\\\"{}><code class=\\\"in-band\\\">{}</code>\",\n+                \"<details class=\\\"rustdoc-toggle implementors-toggle\\\"><summary><h3 id=\\\"{}\\\" class=\\\"impl\\\"{}><code class=\\\"in-band\\\">{}</code>\",\n                 id,\n                 aliases,\n                 i.inner_impl().print(false, cx)\n             );\n+            close_tags.insert_str(0, \"</details>\");\n         }\n         write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n         render_stability_since_raw(\n@@ -1370,6 +1377,7 @@ fn render_impl(\n         );\n         write_srclink(cx, &i.impl_item, w);\n         w.write_str(\"</h3>\");\n+        w.write_str(\"</summary>\");\n \n         if trait_.is_some() {\n             if let Some(portability) = portability(&i.impl_item, Some(parent)) {\n@@ -1580,6 +1588,7 @@ fn render_impl(\n     }\n \n     w.write_str(\"<div class=\\\"impl-items\\\">\");\n+    close_tags.insert_str(0, \"</div>\");\n     for trait_item in &i.inner_impl().items {\n         doc_impl_item(\n             w,\n@@ -1650,7 +1659,7 @@ fn render_impl(\n             );\n         }\n     }\n-    w.write_str(\"</div>\");\n+    w.write_str(&close_tags);\n }\n \n fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {"}, {"sha": "705ce89746a6a3eaa9d6fae5993bb3e321e1ef08", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -1196,31 +1196,18 @@ function hideThemeButtonState() {\n             if (!next) {\n                 return;\n             }\n-            if (hasClass(e, \"impl\") &&\n-                (next.getElementsByClassName(\"method\").length > 0 ||\n-                 next.getElementsByClassName(\"associatedconstant\").length > 0)) {\n-                var newToggle = toggle.cloneNode(true);\n-                insertAfter(newToggle, e.childNodes[e.childNodes.length - 1]);\n-                // In case the option \"auto-collapse implementors\" is not set to false, we collapse\n-                // all implementors.\n-                if (hideImplementors === true && e.parentNode.id === \"implementors-list\") {\n-                    collapseDocs(newToggle, \"hide\");\n-                }\n-            }\n         };\n \n         onEachLazy(document.getElementsByClassName(\"method\"), func);\n         onEachLazy(document.getElementsByClassName(\"associatedconstant\"), func);\n-        onEachLazy(document.getElementsByClassName(\"impl\"), funcImpl);\n         var impl_call = function() {};\n-        // Large items are hidden by default in the HTML. If the setting overrides that, show 'em.\n-        if (!hideLargeItemContents) {\n-            onEachLazy(document.getElementsByTagName(\"details\"), function (e) {\n-                if (hasClass(e, \"type-contents-toggle\")) {\n-                    e.open = true;\n-                }\n-            });\n-        }\n+        onEachLazy(document.getElementsByTagName(\"details\"), function (e) {\n+            var showLargeItem = !hideLargeItemContents && hasClass(e, \"type-contents-toggle\");\n+            var showImplementor = !hideImplementors && hasClass(e, \"implementors-toggle\");\n+            if (showLargeItem || showImplementor) {\n+                e.open = true;\n+            }\n+        });\n         if (hideMethodDocs === true) {\n             impl_call = function(e, newToggle) {\n                 if (e.id.match(/^impl(?:-\\d+)?$/) === null) {"}, {"sha": "d63679fa1570cf1e1c6cc16b4cba413bd88025a0", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -1561,6 +1561,10 @@ h4 > .notable-traits {\n \t\tleft: -10px;\n \t}\n \n+\t.item-list > details.rustdoc-toggle > summary:not(.hideme)::before {\n+\t\tleft: -10px;\n+\t}\n+\n \t#all-types {\n \t\tmargin: 10px;\n \t}\n@@ -1775,14 +1779,16 @@ details.rustdoc-toggle > summary::before {\n \tfont-weight: 300;\n \tfont-size: 0.8em;\n \tletter-spacing: 1px;\n+\tcursor: pointer;\n }\n \n details.rustdoc-toggle > summary.hideme::before {\n \tposition: relative;\n }\n \n details.rustdoc-toggle > summary:not(.hideme)::before {\n-\tfloat: left;\n+\tposition: absolute;\n+\tleft: -23px;\n }\n \n /* When a \"hideme\" summary is open and the \"Expand description\" or \"Show"}, {"sha": "77432ba1539555518449c178ca4a36d911073a31", "filename": "src/test/rustdoc/const-generics/add-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fconst-generics%2Fadd-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fconst-generics%2Fadd-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fadd-impl.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -8,7 +8,7 @@ pub struct Simd<T, const WIDTH: usize> {\n     inner: T,\n }\n \n-// @has foo/struct.Simd.html '//div[@id=\"trait-implementations-list\"]/h3/code' 'impl Add<Simd<u8, 16_usize>> for Simd<u8, 16>'\n+// @has foo/struct.Simd.html '//div[@id=\"trait-implementations-list\"]//h3/code' 'impl Add<Simd<u8, 16_usize>> for Simd<u8, 16>'\n impl Add for Simd<u8, 16> {\n     type Output = Self;\n "}, {"sha": "1e644bb9739877c203b19acbf7b83e6d5dd80d6a", "filename": "src/test/rustdoc/duplicate_impls/issue-33054.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fduplicate_impls%2Fissue-33054.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fduplicate_impls%2Fissue-33054.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fduplicate_impls%2Fissue-33054.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -1,8 +1,8 @@\n // @has issue_33054/impls/struct.Foo.html\n // @has - '//code' 'impl Foo'\n // @has - '//code' 'impl Bar for Foo'\n-// @count - '//*[@id=\"trait-implementations-list\"]/*[@class=\"impl\"]' 1\n-// @count - '//*[@id=\"main\"]/*[@class=\"impl\"]' 1\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n+// @count - '//*[@id=\"main\"]/details/summary/*[@class=\"impl\"]' 1\n // @has issue_33054/impls/bar/trait.Bar.html\n // @has - '//code' 'impl Bar for Foo'\n // @count - '//*[@class=\"struct\"]' 1"}, {"sha": "5de26abace6fab01d1b20f6570358578468f4c88", "filename": "src/test/rustdoc/issue-21474.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-21474.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-21474.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-21474.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -7,5 +7,5 @@ mod inner {\n pub trait Blah { }\n \n // @count issue_21474/struct.What.html \\\n-//        '//*[@id=\"trait-implementations-list\"]/*[@class=\"impl\"]' 1\n+//        '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n pub struct What;"}, {"sha": "2b25da77d7e7b23df6d65ef8f3809602909dfde6", "filename": "src/test/rustdoc/issue-29503.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-29503.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -5,7 +5,7 @@ pub trait MyTrait {\n     fn my_string(&self) -> String;\n }\n \n-// @has - \"//div[@id='implementors-list']/h3[@id='impl-MyTrait']//code\" \"impl<T> MyTrait for T where T: Debug\"\n+// @has - \"//div[@id='implementors-list']//h3[@id='impl-MyTrait']//code\" \"impl<T> MyTrait for T where T: Debug\"\n impl<T> MyTrait for T where T: fmt::Debug {\n     fn my_string(&self) -> String {\n         format!(\"{:?}\", self)"}, {"sha": "8a5f0413826a910ff7f7ceaa72db9c2438a4ecd7", "filename": "src/test/rustdoc/issue-45584.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-45584.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-45584.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-45584.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -4,12 +4,12 @@ pub trait Bar<T, U> {}\n \n // @has 'foo/struct.Foo1.html'\n pub struct Foo1;\n-// @count - '//*[@id=\"trait-implementations-list\"]/*[@class=\"impl\"]' 1\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n // @has - '//*[@class=\"impl\"]' \"impl Bar<Foo1, &'static Foo1> for Foo1\"\n impl Bar<Foo1, &'static Foo1> for Foo1 {}\n \n // @has 'foo/struct.Foo2.html'\n pub struct Foo2;\n-// @count - '//*[@id=\"trait-implementations-list\"]/*[@class=\"impl\"]' 1\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n // @has - '//*[@class=\"impl\"]' \"impl Bar<&'static Foo2, Foo2> for u8\"\n impl Bar<&'static Foo2, Foo2> for u8 {}"}, {"sha": "0820512e521402e57912a0c79740e1592622b097", "filename": "src/test/rustdoc/issue-50159.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-50159.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-50159.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-50159.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -13,8 +13,8 @@ impl<B, C> Signal2 for B where B: Signal<Item = C> {\n // @has issue_50159/struct.Switch.html\n // @has - '//code' 'impl<B> Send for Switch<B> where <B as Signal>::Item: Send'\n // @has - '//code' 'impl<B> Sync for Switch<B> where <B as Signal>::Item: Sync'\n-// @count - '//*[@id=\"implementations-list\"]/*[@class=\"impl\"]' 0\n-// @count - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]' 5\n+// @count - '//*[@id=\"implementations-list\"]//*[@class=\"impl\"]' 0\n+// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]' 5\n pub struct Switch<B: Signal> {\n     pub inner: <B as Signal2>::Item2,\n }"}, {"sha": "d018c948162d9c076459be355be9f9da2fa0e3c3", "filename": "src/test/rustdoc/issue-51236.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-51236.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-51236.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-51236.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -7,7 +7,7 @@ pub mod traits {\n }\n \n // @has issue_51236/struct.Owned.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<T> Send for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> Send for \\\n // Owned<T> where <T as Owned<'static>>::Reader: Send\"\n pub struct Owned<T> where T: for<'a> ::traits::Owned<'a> {\n     marker: PhantomData<<T as ::traits::Owned<'static>>::Reader>,"}, {"sha": "daebe059f8ef68c7971b7398a3830199553672ed", "filename": "src/test/rustdoc/issue-53812.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-53812.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-53812.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-53812.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -12,9 +12,9 @@ macro_rules! array_impls {\n     }\n }\n \n-// @has issue_53812/trait.MyIterator.html '//*[@id=\"implementors-list\"]//h3[1]' 'MyStruct<[T; 0]>'\n-// @has - '//*[@id=\"implementors-list\"]//h3[2]' 'MyStruct<[T; 1]>'\n-// @has - '//*[@id=\"implementors-list\"]//h3[3]' 'MyStruct<[T; 2]>'\n-// @has - '//*[@id=\"implementors-list\"]//h3[4]' 'MyStruct<[T; 3]>'\n-// @has - '//*[@id=\"implementors-list\"]//h3[5]' 'MyStruct<[T; 10]>'\n+// @has issue_53812/trait.MyIterator.html '//*[@id=\"implementors-list\"]/details[1]/summary/h3' 'MyStruct<[T; 0]>'\n+// @has - '//*[@id=\"implementors-list\"]/details[2]/summary/h3' 'MyStruct<[T; 1]>'\n+// @has - '//*[@id=\"implementors-list\"]/details[3]/summary/h3' 'MyStruct<[T; 2]>'\n+// @has - '//*[@id=\"implementors-list\"]/details[4]/summary/h3' 'MyStruct<[T; 3]>'\n+// @has - '//*[@id=\"implementors-list\"]/details[5]/summary/h3' 'MyStruct<[T; 10]>'\n array_impls! { 10 3 2 1 0 }"}, {"sha": "47da94a4ccf4c88ab39ea62e213afcb66976e14d", "filename": "src/test/rustdoc/issue-54705.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-54705.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-54705.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-54705.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -3,10 +3,10 @@ pub trait ScopeHandle<'scope> {}\n \n \n // @has issue_54705/struct.ScopeFutureContents.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<'scope, S> \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'scope, S> \\\n // Send for ScopeFutureContents<'scope, S> where S: Sync\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<'scope, S> \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'scope, S> \\\n // Sync for ScopeFutureContents<'scope, S> where S: Sync\"\n pub struct ScopeFutureContents<'scope, S>\n     where S: ScopeHandle<'scope>,"}, {"sha": "d1877f39ba761e1d4b98f787678cac20972d0ddf", "filename": "src/test/rustdoc/issue-55321.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-55321.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-55321.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-55321.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -1,16 +1,16 @@\n #![feature(negative_impls)]\n \n // @has issue_55321/struct.A.html\n-// @has - '//*[@id=\"trait-implementations-list\"]/*[@class=\"impl\"]//code' \"impl !Send for A\"\n-// @has - '//*[@id=\"trait-implementations-list\"]/*[@class=\"impl\"]//code' \"impl !Sync for A\"\n+// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]//code' \"impl !Send for A\"\n+// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]//code' \"impl !Sync for A\"\n pub struct A();\n \n impl !Send for A {}\n impl !Sync for A {}\n \n // @has issue_55321/struct.B.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<T> !Send for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> !Send for \\\n // B<T>\"\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<T> !Sync for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> !Sync for \\\n // B<T>\"\n pub struct B<T: ?Sized>(A, Box<T>);"}, {"sha": "b932a3d34749cc364e48a7ead86e918f819b6da0", "filename": "src/test/rustdoc/issue-56822.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-56822.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-56822.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-56822.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -17,7 +17,7 @@ impl<'a, T> MyTrait for Inner<'a, T> {\n }\n \n // @has issue_56822/struct.Parser.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<'a> Send for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'a> Send for \\\n // Parser<'a>\"\n pub struct Parser<'a> {\n     field: <Wrapper<Inner<'a, u8>> as MyTrait>::Output"}, {"sha": "79b8b70c5452572c5e468e56f0b1b66f10206026", "filename": "src/test/rustdoc/issue-60726.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-60726.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fissue-60726.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-60726.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -26,9 +26,9 @@ where\n {}\n \n // @has issue_60726/struct.IntoIter.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<T> !Send for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> !Send for \\\n // IntoIter<T>\"\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<T> !Sync for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> !Sync for \\\n // IntoIter<T>\"\n pub struct IntoIter<T>{\n     hello:DynTrait<FooInterface<T>>,"}, {"sha": "0dd3a3f7a86c5884e5586d6364b727f6702b6698", "filename": "src/test/rustdoc/synthetic_auto/basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fbasic.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -1,8 +1,8 @@\n // @has basic/struct.Foo.html\n // @has - '//code' 'impl<T> Send for Foo<T> where T: Send'\n // @has - '//code' 'impl<T> Sync for Foo<T> where T: Sync'\n-// @count - '//*[@id=\"implementations-list\"]/*[@class=\"impl\"]' 0\n-// @count - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]' 5\n+// @count - '//*[@id=\"implementations-list\"]//*[@class=\"impl\"]' 0\n+// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]' 5\n pub struct Foo<T> {\n     field: T,\n }"}, {"sha": "d951a20e2dec04820e90b610884f10b07e3b2a89", "filename": "src/test/rustdoc/synthetic_auto/complex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fcomplex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fcomplex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fcomplex.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -20,7 +20,7 @@ mod foo {\n }\n \n // @has complex/struct.NotOuter.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<'a, T, K: \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'a, T, K: \\\n // ?Sized> Send for Outer<'a, T, K> where K: for<'b> Fn((&'b bool, &'a u8)) \\\n // -> &'b i8, T: MyTrait<'a>, <T as MyTrait<'a>>::MyItem: Copy, 'a: 'static\"\n "}, {"sha": "05c88f10822ca1563d345f48a8b4d94eba81fbc8", "filename": "src/test/rustdoc/synthetic_auto/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Flifetimes.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -9,10 +9,10 @@ where\n {}\n \n // @has lifetimes/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<'c, K> Send \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'c, K> Send \\\n // for Foo<'c, K> where K: for<'b> Fn(&'b bool) -> &'c u8, 'c: 'static\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<'c, K> Sync \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'c, K> Sync \\\n // for Foo<'c, K> where K: Sync\"\n pub struct Foo<'c, K: 'c> {\n     inner_field: Inner<'c, K>,"}, {"sha": "88ddd57349a29565fd7fc4241450e044f1c3d382", "filename": "src/test/rustdoc/synthetic_auto/manual.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fmanual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fmanual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fmanual.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -1,12 +1,12 @@\n // @has manual/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' 'impl<T> Sync for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' 'impl<T> Sync for \\\n // Foo<T> where T: Sync'\n //\n-// @has - '//*[@id=\"trait-implementations-list\"]/*[@class=\"impl\"]//code' \\\n+// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]//code' \\\n // 'impl<T> Send for Foo<T>'\n //\n-// @count - '//*[@id=\"trait-implementations-list\"]/*[@class=\"impl\"]' 1\n-// @count - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]' 4\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n+// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]' 4\n pub struct Foo<T> {\n     field: T,\n }"}, {"sha": "53801542c95205c13dc3bfb5304964329a93ec37", "filename": "src/test/rustdoc/synthetic_auto/negative.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnegative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnegative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnegative.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -3,10 +3,10 @@ pub struct Inner<T: Copy> {\n }\n \n // @has negative/struct.Outer.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<T> !Send for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> !Send for \\\n // Outer<T>\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<T> \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> \\\n // !Sync for Outer<T>\"\n pub struct Outer<T: Copy> {\n     inner_field: Inner<T>,"}, {"sha": "d4d93a87ffc9b891c22981e069fc98138e029c05", "filename": "src/test/rustdoc/synthetic_auto/nested.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnested.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -9,10 +9,10 @@ where\n }\n \n // @has nested/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' 'impl<T> Send for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' 'impl<T> Send for \\\n // Foo<T> where T: Copy'\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \\\n // 'impl<T> Sync for Foo<T> where T: Sync'\n pub struct Foo<T> {\n     inner_field: Inner<T>,"}, {"sha": "3a23dc2cf9576c295ce5ee7ab886b621821feef7", "filename": "src/test/rustdoc/synthetic_auto/no-redundancy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fno-redundancy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fno-redundancy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fno-redundancy.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -9,7 +9,7 @@ where\n }\n \n // @has no_redundancy/struct.Outer.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<T> Send for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> Send for \\\n // Outer<T> where T: Copy + Send\"\n pub struct Outer<T> {\n     inner_field: Inner<T>,"}, {"sha": "060491e3cf10f7c5a2487306d217e9471f8cfc63", "filename": "src/test/rustdoc/synthetic_auto/project.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fproject.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -23,10 +23,10 @@ where\n }\n \n // @has project/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<'c, K> Send \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'c, K> Send \\\n // for Foo<'c, K> where K: MyTrait<MyItem = bool>, 'c: 'static\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<'c, K> Sync \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'c, K> Sync \\\n // for Foo<'c, K> where K: MyTrait, <K as MyTrait>::MyItem: OtherTrait, 'c: 'static,\"\n pub struct Foo<'c, K: 'c> {\n     inner_field: Inner<'c, K>,"}, {"sha": "ecdbdf41b2025f6f5c2b1bdeb7071c1bea90805c", "filename": "src/test/rustdoc/synthetic_auto/self-referential.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fself-referential.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fself-referential.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fself-referential.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -23,7 +23,7 @@ impl<T> Pattern for Wrapper<T> {\n \n \n // @has self_referential/struct.WriteAndThen.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<P1> Send for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<P1> Send for \\\n // WriteAndThen<P1>  where  <P1 as Pattern>::Value: Send\"\n pub struct WriteAndThen<P1>(pub P1::Value,pub <Constrain<P1, Wrapper<P1::Value>> as Pattern>::Value)\n     where P1: Pattern;"}, {"sha": "a10e694c1b2817c79974d87b4d3fdad374aac792", "filename": "src/test/rustdoc/synthetic_auto/static-region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fstatic-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569096cbaffe39fbede339430c5ed8e80d991a80/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fstatic-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fstatic-region.rs?ref=569096cbaffe39fbede339430c5ed8e80d991a80", "patch": "@@ -3,7 +3,7 @@ pub trait OwnedTrait<'a> {\n }\n \n // @has static_region/struct.Owned.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]/*[@class=\"impl\"]//code' \"impl<T> Send for \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> Send for \\\n // Owned<T> where <T as OwnedTrait<'static>>::Reader: Send\"\n pub struct Owned<T> where T: OwnedTrait<'static> {\n     marker: <T as OwnedTrait<'static>>::Reader,"}]}