{"sha": "cb4de738cfe479418511025cdac7a33b8b36c407", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiNGRlNzM4Y2ZlNDc5NDE4NTExMDI1Y2RhYzdhMzNiOGIzNmM0MDc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-31T20:56:08Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-31T20:56:41Z"}, "message": "Fix checking of duplicate and missing struct field initializers. Closes #3486. Closes #3892", "tree": {"sha": "27358e5ef50a56947a227dec50eacd9ad0c29d12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27358e5ef50a56947a227dec50eacd9ad0c29d12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb4de738cfe479418511025cdac7a33b8b36c407", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb4de738cfe479418511025cdac7a33b8b36c407", "html_url": "https://github.com/rust-lang/rust/commit/cb4de738cfe479418511025cdac7a33b8b36c407", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb4de738cfe479418511025cdac7a33b8b36c407/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2462aa0e1d5a63a888b32656b3f0e14c818c9ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2462aa0e1d5a63a888b32656b3f0e14c818c9ac", "html_url": "https://github.com/rust-lang/rust/commit/b2462aa0e1d5a63a888b32656b3f0e14c818c9ac"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "044b95915cd3aa3f71b23ddd80d72a4a678336f6", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cb4de738cfe479418511025cdac7a33b8b36c407/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb4de738cfe479418511025cdac7a33b8b36c407/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=cb4de738cfe479418511025cdac7a33b8b36c407", "patch": "@@ -1457,6 +1457,8 @@ fn check_expr_with_unifier(fcx: @fn_ctxt,\n         let tcx = fcx.ccx.tcx;\n         let mut bot = false;\n \n+        error!(\"%? %?\", ast_fields.len(), field_types.len());\n+\n         let class_field_map = HashMap();\n         let mut fields_found = 0;\n         for field_types.each |field| {\n@@ -1470,7 +1472,7 @@ fn check_expr_with_unifier(fcx: @fn_ctxt,\n                 None => {\n                     tcx.sess.span_err(\n                         field.span,\n-                        fmt!(\"structure has no field named field named `%s`\",\n+                        fmt!(\"structure has no field named `%s`\",\n                              tcx.sess.str_of(field.node.ident)));\n                 }\n                 Some((_, true)) => {\n@@ -1486,18 +1488,20 @@ fn check_expr_with_unifier(fcx: @fn_ctxt,\n                     bot |= check_expr(fcx,\n                                       field.node.expr,\n                                       Some(expected_field_type));\n+                    class_field_map.insert(\n+                        field.node.ident, (field_id, true));\n                     fields_found += 1;\n                 }\n             }\n         }\n \n         if check_completeness {\n             // Make sure the programmer specified all the fields.\n-            assert fields_found <= ast_fields.len();\n-            if fields_found < ast_fields.len() {\n+            assert fields_found <= field_types.len();\n+            if fields_found < field_types.len() {\n                 let mut missing_fields = ~[];\n-                for ast_fields.each |class_field| {\n-                    let name = class_field.node.ident;\n+                for field_types.each |class_field| {\n+                    let name = class_field.ident;\n                     let (_, seen) = class_field_map.get(name);\n                     if !seen {\n                         missing_fields.push("}, {"sha": "43436e36cf7513835c9be55400513c17ecca8949", "filename": "src/test/compile-fail/struct-fields-dupe.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cb4de738cfe479418511025cdac7a33b8b36c407/src%2Ftest%2Fcompile-fail%2Fstruct-fields-dupe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb4de738cfe479418511025cdac7a33b8b36c407/src%2Ftest%2Fcompile-fail%2Fstruct-fields-dupe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-fields-dupe.rs?ref=cb4de738cfe479418511025cdac7a33b8b36c407", "patch": "@@ -0,0 +1,10 @@\n+struct BuildData {\n+    foo: int,\n+}\n+\n+fn main() {\n+    let foo = BuildData {\n+        foo: 0,\n+        foo: 0 //~ ERROR field `foo` specified more than once\n+    };\n+}\n\\ No newline at end of file"}, {"sha": "5e6098fbe952f0e35f0d8b3fedd69c8a86ead1b8", "filename": "src/test/compile-fail/struct-fields-missing.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cb4de738cfe479418511025cdac7a33b8b36c407/src%2Ftest%2Fcompile-fail%2Fstruct-fields-missing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb4de738cfe479418511025cdac7a33b8b36c407/src%2Ftest%2Fcompile-fail%2Fstruct-fields-missing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-fields-missing.rs?ref=cb4de738cfe479418511025cdac7a33b8b36c407", "patch": "@@ -0,0 +1,10 @@\n+struct BuildData {\n+    foo: int,\n+    bar: ~int\n+}\n+\n+fn main() {\n+    let foo = BuildData { //~ ERROR missing field: `bar`\n+        foo: 0\n+    };\n+}"}, {"sha": "f3780aadc113e981afe8d05715f606fcb4859bac", "filename": "src/test/compile-fail/struct-fields-too-many.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cb4de738cfe479418511025cdac7a33b8b36c407/src%2Ftest%2Fcompile-fail%2Fstruct-fields-too-many.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb4de738cfe479418511025cdac7a33b8b36c407/src%2Ftest%2Fcompile-fail%2Fstruct-fields-too-many.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-fields-too-many.rs?ref=cb4de738cfe479418511025cdac7a33b8b36c407", "patch": "@@ -0,0 +1,10 @@\n+struct BuildData {\n+    foo: int,\n+}\n+\n+fn main() {\n+    let foo = BuildData {\n+        foo: 0,\n+        bar: 0 //~ ERROR structure has no field named `bar`\n+    };\n+}"}]}