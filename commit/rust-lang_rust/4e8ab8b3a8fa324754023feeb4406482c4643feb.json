{"sha": "4e8ab8b3a8fa324754023feeb4406482c4643feb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlOGFiOGIzYThmYTMyNDc1NDAyM2ZlZWI0NDA2NDgyYzQ2NDNmZWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-31T04:44:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-02T17:39:12Z"}, "message": "Introduce pretty-print testing mode to compiletest. Issue #789", "tree": {"sha": "f69d5d8bd4339021c2fa035df48d35ec180877d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f69d5d8bd4339021c2fa035df48d35ec180877d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e8ab8b3a8fa324754023feeb4406482c4643feb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8ab8b3a8fa324754023feeb4406482c4643feb", "html_url": "https://github.com/rust-lang/rust/commit/4e8ab8b3a8fa324754023feeb4406482c4643feb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e8ab8b3a8fa324754023feeb4406482c4643feb/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af2eecdabec206789a333e2bb13675ead4b1fbbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/af2eecdabec206789a333e2bb13675ead4b1fbbf", "html_url": "https://github.com/rust-lang/rust/commit/af2eecdabec206789a333e2bb13675ead4b1fbbf"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "11101e9c020b31ef36979da25b4f31cbe8f1f289", "filename": "mk/tests.mk", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4e8ab8b3a8fa324754023feeb4406482c4643feb/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4e8ab8b3a8fa324754023feeb4406482c4643feb/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=4e8ab8b3a8fa324754023feeb4406482c4643feb", "patch": "@@ -142,6 +142,8 @@ check-stage$(2)-rpass: test/run-pass.stage$(2).out \\\n \n check-stage$(2)-bench: test/bench.stage$(2).out \\\n \n+check-stage$(2)-pretty: test/pretty.stage$(2).out \\\n+\n CTEST_COMMON_ARGS$(2) := --compile-lib-path stage$(2) \\\n                          --run-lib-path stage$(2)/lib \\\n                          --rustc-path stage$(2)/rustc$$(X) \\\n@@ -172,6 +174,11 @@ BENCH_ARGS$(2) := $$(CTEST_COMMON_ARGS$(2)) \\\n                   --mode run-pass \\\n                   $$(CTEST_RUNTOOL) \\\n \n+PRETTY_ARGS$(2) := $$(CTEST_COMMON_ARGS$(2)) \\\n+                   --src-base $$(S)src/test/run-pass/ \\\n+                   --build-base test/run-pass/ \\\n+                   --mode pretty \\\n+\n test/compiletest.stage$(2)$$(X): $$(COMPILETEST_CRATE) \\\n                                  $$(COMPILETEST_INPUTS) \\\n                                  $$(SREQ$(2))\n@@ -202,6 +209,12 @@ test/bench.stage$(2).out.tmp: test/compiletest.stage$(2)$$(X) \\\n \t$$(Q)$$(call CFG_RUN_TEST,$$<) $$(BENCH_ARGS$(2))\n \t$$(Q)touch $$@\n \n+test/pretty.stage$(2).out.tmp: test/compiletest.stage$(2)$$(X) \\\n+                            $$(RPASS_TESTS)\n+\t@$$(call E, run: $$<)\n+\t$$(Q)$$(call CFG_RUN_TEST,$$<) $$(PRETTY_ARGS$(2))\n+\t$$(Q)touch $$@\n+\n endef\n \n # Instantiate the template for stage 0, 1, 2, 3"}, {"sha": "f5a60bd0261bb24e504c1e69cfb36c80048343bb", "filename": "src/test/compiletest/common.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4e8ab8b3a8fa324754023feeb4406482c4643feb/src%2Ftest%2Fcompiletest%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e8ab8b3a8fa324754023feeb4406482c4643feb/src%2Ftest%2Fcompiletest%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fcommon.rs?ref=4e8ab8b3a8fa324754023feeb4406482c4643feb", "patch": "@@ -1,6 +1,11 @@\n import std::option;\n \n-tag mode { mode_compile_fail; mode_run_fail; mode_run_pass; }\n+tag mode {\n+    mode_compile_fail;\n+    mode_run_fail;\n+    mode_run_pass;\n+    mode_pretty;\n+}\n \n type config = {\n     // The library paths required for running the compiler"}, {"sha": "8e90c921fa6502d3b61982d0bbbe639b205fadc5", "filename": "src/test/compiletest/compiletest.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4e8ab8b3a8fa324754023feeb4406482c4643feb/src%2Ftest%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e8ab8b3a8fa324754023feeb4406482c4643feb/src%2Ftest%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fcompiletest.rs?ref=4e8ab8b3a8fa324754023feeb4406482c4643feb", "patch": "@@ -12,6 +12,7 @@ import common::config;\n import common::mode_run_pass;\n import common::mode_run_fail;\n import common::mode_compile_fail;\n+import common::mode_pretty;\n import common::mode;\n import util::logv;\n \n@@ -89,6 +90,7 @@ fn str_mode(s: str) -> mode {\n       \"compile-fail\" { mode_compile_fail }\n       \"run-fail\" { mode_run_fail }\n       \"run-pass\" { mode_run_pass }\n+      \"pretty\" { mode_pretty }\n       _ { fail \"invalid mode\" }\n     }\n }\n@@ -98,6 +100,7 @@ fn mode_str(mode: mode) -> str {\n       mode_compile_fail. { \"compile-fail\" }\n       mode_run_fail. { \"run-fail\" }\n       mode_run_pass. { \"run-pass\" }\n+      mode_pretty. { \"pretty\" }\n     }\n }\n \n@@ -136,11 +139,15 @@ fn is_test(testfile: &str) -> bool {\n \n fn make_test(cx: &cx, testfile: &str, configport: &port[str]) ->\n    test::test_desc {\n-    {name: testfile,\n+    {name: make_test_name(cx.config, testfile),\n      fn: make_test_closure(testfile, chan(configport)),\n             ignore: header::is_test_ignored(cx.config.stage_id, testfile)}\n }\n \n+fn make_test_name(config: &config, testfile: &str) -> str {\n+    #fmt(\"[%s] %s\", mode_str(config.mode), testfile)\n+}\n+\n /*\n So this is kind of crappy:\n "}, {"sha": "117d5651bca8173d10857742a9a5eb28035d3a58", "filename": "src/test/compiletest/runtest.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4e8ab8b3a8fa324754023feeb4406482c4643feb/src%2Ftest%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e8ab8b3a8fa324754023feeb4406482c4643feb/src%2Ftest%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fruntest.rs?ref=4e8ab8b3a8fa324754023feeb4406482c4643feb", "patch": "@@ -10,6 +10,7 @@ import std::test;\n import common::mode_run_pass;\n import common::mode_run_fail;\n import common::mode_compile_fail;\n+import common::mode_pretty;\n import common::cx;\n import common::config;\n import header::load_props;\n@@ -30,6 +31,7 @@ fn run(cx: &cx, testfile: &str) {\n       mode_compile_fail. { run_cfail_test(cx, props, testfile); }\n       mode_run_fail. { run_rfail_test(cx, props, testfile); }\n       mode_run_pass. { run_rpass_test(cx, props, testfile); }\n+      mode_pretty. { run_pretty_test(cx, props, testfile); }\n     }\n }\n \n@@ -72,6 +74,9 @@ fn run_rpass_test(cx: &cx, props: &test_props, testfile: &str) {\n     if procres.status != 0 { fatal_procres(\"test run failed!\", procres); }\n }\n \n+fn run_pretty_test(cx: &cx, props: &test_props, testfile: &str) {\n+}\n+\n fn check_error_patterns(props: &test_props, testfile: &str,\n                         procres: &procres) {\n     if ivec::is_empty(props.error_patterns) {"}]}