{"sha": "d959a8f91d9945302f58a8f79613e75060c6b77d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5NTlhOGY5MWQ5OTQ1MzAyZjU4YThmNzk2MTNlNzUwNjBjNmI3N2Q=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-25T13:32:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-25T13:32:46Z"}, "message": "rename lint", "tree": {"sha": "6abe0c8a7067af188696171e71c266fe16cce21e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6abe0c8a7067af188696171e71c266fe16cce21e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d959a8f91d9945302f58a8f79613e75060c6b77d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d959a8f91d9945302f58a8f79613e75060c6b77d", "html_url": "https://github.com/rust-lang/rust/commit/d959a8f91d9945302f58a8f79613e75060c6b77d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d959a8f91d9945302f58a8f79613e75060c6b77d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "061773fd2b7fd40ba7c368de50878539d30f7bb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/061773fd2b7fd40ba7c368de50878539d30f7bb1", "html_url": "https://github.com/rust-lang/rust/commit/061773fd2b7fd40ba7c368de50878539d30f7bb1"}], "stats": {"total": 92, "additions": 46, "deletions": 46}, "files": [{"sha": "faad1a72327f49acd88a19c96f65b59ffa901068", "filename": "src/librustc_mir/transform/check_packed_ref.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d959a8f91d9945302f58a8f79613e75060c6b77d/src%2Flibrustc_mir%2Ftransform%2Fcheck_packed_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d959a8f91d9945302f58a8f79613e75060c6b77d/src%2Flibrustc_mir%2Ftransform%2Fcheck_packed_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_packed_ref.rs?ref=d959a8f91d9945302f58a8f79613e75060c6b77d", "patch": "@@ -1,7 +1,7 @@\n use rustc_middle::mir::visit::{PlaceContext, Visitor};\n use rustc_middle::mir::*;\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_session::lint::builtin::PACKED_REFERENCES;\n+use rustc_session::lint::builtin::UNALIGNED_REFERENCES;\n \n use crate::transform::{MirPass, MirSource};\n use crate::util;\n@@ -47,13 +47,13 @@ impl<'a, 'tcx> Visitor<'tcx> for PackedRefChecker<'a, 'tcx> {\n                     .assert_crate_local()\n                     .lint_root;\n                 self.tcx.struct_span_lint_hir(\n-                    PACKED_REFERENCES,\n+                    UNALIGNED_REFERENCES,\n                     lint_root,\n                     source_info.span,\n                     |lint| {\n-                        lint.build(&format!(\"reference to packed field is not allowed\",))\n+                        lint.build(&format!(\"reference to packed field is unaligned\",))\n                             .note(\n-                                \"fields of packed structs might be misaligned, and creating \\\n+                                \"fields of packed structs are not properly aligned, and creating \\\n                                 a misaligned reference is undefined behavior (even if that \\\n                                 reference is never dereferenced)\",\n                             )"}, {"sha": "4035417204867496ff95612d24a4130d5331e830", "filename": "src/librustc_session/lint/builtin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d959a8f91d9945302f58a8f79613e75060c6b77d/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d959a8f91d9945302f58a8f79613e75060c6b77d/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Flint%2Fbuiltin.rs?ref=d959a8f91d9945302f58a8f79613e75060c6b77d", "patch": "@@ -217,7 +217,7 @@ declare_lint! {\n }\n \n declare_lint! {\n-    pub PACKED_REFERENCES,\n+    pub UNALIGNED_REFERENCES,\n     Allow,\n     \"detects unaligned references to fields of packed structs\",\n }\n@@ -551,7 +551,7 @@ declare_lint_pass! {\n         INVALID_TYPE_PARAM_DEFAULT,\n         CONST_ERR,\n         RENAMED_AND_REMOVED_LINTS,\n-        PACKED_REFERENCES,\n+        UNALIGNED_REFERENCES,\n         SAFE_PACKED_BORROWS,\n         PATTERNS_IN_FNS_WITHOUT_BODY,\n         MISSING_FRAGMENT_SPECIFIER,"}, {"sha": "51158a84175dc133c063c3b711e642eee3c5ecb4", "filename": "src/test/ui/lint/packed_reference.stderr", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/061773fd2b7fd40ba7c368de50878539d30f7bb1/src%2Ftest%2Fui%2Flint%2Fpacked_reference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/061773fd2b7fd40ba7c368de50878539d30f7bb1/src%2Ftest%2Fui%2Flint%2Fpacked_reference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fpacked_reference.stderr?ref=061773fd2b7fd40ba7c368de50878539d30f7bb1", "patch": "@@ -1,39 +0,0 @@\n-error: reference to packed field is not allowed\n-  --> $DIR/packed_reference.rs:14:17\n-   |\n-LL |         let _ = &good.data;\n-   |                 ^^^^^^^^^^\n-   |\n-note: the lint level is defined here\n-  --> $DIR/packed_reference.rs:1:9\n-   |\n-LL | #![deny(packed_references)]\n-   |         ^^^^^^^^^^^^^^^^^\n-   = note: fields of packed structs might be misaligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n-\n-error: reference to packed field is not allowed\n-  --> $DIR/packed_reference.rs:15:17\n-   |\n-LL |         let _ = &good.data as *const _;\n-   |                 ^^^^^^^^^^\n-   |\n-   = note: fields of packed structs might be misaligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n-\n-error: reference to packed field is not allowed\n-  --> $DIR/packed_reference.rs:16:27\n-   |\n-LL |         let _: *const _ = &good.data;\n-   |                           ^^^^^^^^^^\n-   |\n-   = note: fields of packed structs might be misaligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n-\n-error: reference to packed field is not allowed\n-  --> $DIR/packed_reference.rs:17:17\n-   |\n-LL |         let _ = &good.data2[0];\n-   |                 ^^^^^^^^^^^^^^\n-   |\n-   = note: fields of packed structs might be misaligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n-\n-error: aborting due to 4 previous errors\n-"}, {"sha": "1d9f4c3db2eb508adc184a3d012b1b191430b1ae", "filename": "src/test/ui/lint/unaligned_references.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d959a8f91d9945302f58a8f79613e75060c6b77d/src%2Ftest%2Fui%2Flint%2Funaligned_references.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d959a8f91d9945302f58a8f79613e75060c6b77d/src%2Ftest%2Fui%2Flint%2Funaligned_references.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funaligned_references.rs?ref=d959a8f91d9945302f58a8f79613e75060c6b77d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(packed_references)]\n+#![deny(unaligned_references)]\n \n #[repr(packed)]\n pub struct Good {", "previous_filename": "src/test/ui/lint/packed_reference.rs"}, {"sha": "0c594cdb30a3ce1cae9b4908acaef9ce46c46987", "filename": "src/test/ui/lint/unaligned_references.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/d959a8f91d9945302f58a8f79613e75060c6b77d/src%2Ftest%2Fui%2Flint%2Funaligned_references.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d959a8f91d9945302f58a8f79613e75060c6b77d/src%2Ftest%2Fui%2Flint%2Funaligned_references.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funaligned_references.stderr?ref=d959a8f91d9945302f58a8f79613e75060c6b77d", "patch": "@@ -0,0 +1,39 @@\n+error: reference to packed field is unaligned\n+  --> $DIR/unaligned_references.rs:14:17\n+   |\n+LL |         let _ = &good.data;\n+   |                 ^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/unaligned_references.rs:1:9\n+   |\n+LL | #![deny(unaligned_references)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+\n+error: reference to packed field is unaligned\n+  --> $DIR/unaligned_references.rs:15:17\n+   |\n+LL |         let _ = &good.data as *const _;\n+   |                 ^^^^^^^^^^\n+   |\n+   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+\n+error: reference to packed field is unaligned\n+  --> $DIR/unaligned_references.rs:16:27\n+   |\n+LL |         let _: *const _ = &good.data;\n+   |                           ^^^^^^^^^^\n+   |\n+   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+\n+error: reference to packed field is unaligned\n+  --> $DIR/unaligned_references.rs:17:17\n+   |\n+LL |         let _ = &good.data2[0];\n+   |                 ^^^^^^^^^^^^^^\n+   |\n+   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+\n+error: aborting due to 4 previous errors\n+"}]}