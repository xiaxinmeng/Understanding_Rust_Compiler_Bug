{"sha": "e1875742d024c9ac52889d26881ca39a2a14cd8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxODc1NzQyZDAyNGM5YWM1Mjg4OWQyNjg4MWNhMzlhMmExNGNkOGU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-05T18:13:59Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-05T18:13:59Z"}, "message": "assume_init: warn about valid != safe", "tree": {"sha": "68b3f36d6195e94c87ab21ef438dcaff4950a26c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68b3f36d6195e94c87ab21ef438dcaff4950a26c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1875742d024c9ac52889d26881ca39a2a14cd8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1875742d024c9ac52889d26881ca39a2a14cd8e", "html_url": "https://github.com/rust-lang/rust/commit/e1875742d024c9ac52889d26881ca39a2a14cd8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1875742d024c9ac52889d26881ca39a2a14cd8e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4be067558962c004b638e4c6f162d50f7c0c98b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4be067558962c004b638e4c6f162d50f7c0c98b6", "html_url": "https://github.com/rust-lang/rust/commit/4be067558962c004b638e4c6f162d50f7c0c98b6"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "20367f724b6f35dd9836784d6db0c768bb4bcd67", "filename": "src/libcore/mem/maybe_uninit.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e1875742d024c9ac52889d26881ca39a2a14cd8e/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1875742d024c9ac52889d26881ca39a2a14cd8e/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs?ref=e1875742d024c9ac52889d26881ca39a2a14cd8e", "patch": "@@ -402,6 +402,13 @@ impl<T> MaybeUninit<T> {\n     ///\n     /// [inv]: #initialization-invariant\n     ///\n+    /// On top of that, remember that most types have additional invariants beyond merely\n+    /// being considered initialized at the type level. For example, a `1`-initialized [`Vec<T>`]\n+    /// is considered initialized because the only requirement the compiler knows about it\n+    /// is that the data pointer must be non-null. Creating such a `Vec<T>` does not cause\n+    /// *immediate* undefined behavior, but will cause undefined behavior with most\n+    /// safe operations (including dropping it).\n+    ///\n     /// # Examples\n     ///\n     /// Correct usage of this method:"}]}