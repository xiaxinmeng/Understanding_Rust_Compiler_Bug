{"sha": "9bc7938bc27d3757278c55839c1865ee74c50baa", "node_id": "C_kwDOAAsO6NoAKDliYzc5MzhiYzI3ZDM3NTcyNzhjNTU4MzljMTg2NWVlNzRjNTBiYWE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-01T14:01:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-01T14:01:00Z"}, "message": "more tweaks", "tree": {"sha": "c0143fd2c0abc8c13a9d6a0c85dfd354065f5124", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0143fd2c0abc8c13a9d6a0c85dfd354065f5124"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bc7938bc27d3757278c55839c1865ee74c50baa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bc7938bc27d3757278c55839c1865ee74c50baa", "html_url": "https://github.com/rust-lang/rust/commit/9bc7938bc27d3757278c55839c1865ee74c50baa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bc7938bc27d3757278c55839c1865ee74c50baa/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d09313727d37841e89713bd4d6f86cd7aa4fda1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d09313727d37841e89713bd4d6f86cd7aa4fda1", "html_url": "https://github.com/rust-lang/rust/commit/7d09313727d37841e89713bd4d6f86cd7aa4fda1"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "349cf818fb2a2ea4e7c84b8697352f5d2c05495f", "filename": "miri", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/9bc7938bc27d3757278c55839c1865ee74c50baa/miri", "raw_url": "https://github.com/rust-lang/rust/raw/9bc7938bc27d3757278c55839c1865ee74c50baa/miri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri?ref=9bc7938bc27d3757278c55839c1865ee74c50baa", "patch": "@@ -63,21 +63,22 @@ esac\n \n ## Preparation\n # macOS does not have a useful readlink/realpath so we have to use Python instead...\n-MIRIDIR=$(dirname \"$(python3 -c 'import os, sys; print(os.path.realpath(sys.argv[1]))' \"$0\")\")\n+MIRIDIR=$(python3 -c 'import os, sys; print(os.path.dirname(os.path.realpath(sys.argv[1])))' \"$0\")\n # Determine toolchain *in the Miri dir* and use that.\n TOOLCHAIN=$(cd \"$MIRIDIR\"; rustup show active-toolchain | head -n 1 | cut -d ' ' -f 1)\n+\n # Determine some toolchain properties\n TARGET=$(rustc +$TOOLCHAIN --version --verbose | grep \"^host:\" | cut -d ' ' -f 2)\n SYSROOT=$(rustc +$TOOLCHAIN --print sysroot)\n LIBDIR=$SYSROOT/lib/rustlib/$TARGET/lib\n-\n if ! test -d \"$LIBDIR\"; then\n     echo \"Something went wrong determining the library dir.\"\n     echo \"I got $LIBDIR but that does not exist.\"\n     echo \"Please report a bug at https://github.com/rust-lang/miri/issues.\"\n     exit 2\n fi\n \n+# Prepare flags for cargo and rustc.\n CARGO=\"cargo +$TOOLCHAIN\"\n if [ -z \"$CARGO_INCREMENTAL\" ]; then\n     # Default CARGO_INCREMENTAL to 1.\n@@ -91,6 +92,19 @@ fi\n # We enable debug-assertions to get tracing.\n # We enable line-only debuginfo for backtraces.\n export RUSTFLAGS=\"-C link-args=-Wl,-rpath,$LIBDIR -C debug-assertions -C debuginfo=1 $RUSTFLAGS\"\n+# Determine flags passed to all cargo invocations.\n+# This is a bit more annoying that one would hope due to\n+# <https://github.com/rust-lang/cargo/issues/6992>.\n+case \"$COMMAND\" in\n+*-debug)\n+    CARGO_INSTALL_FLAGS=\"--target $TARGET --debug $CARGO_EXTRA_FLAGS\"\n+    CARGO_BUILD_FLAGS=\"--target $TARGET $CARGO_EXTRA_FLAGS\"\n+    ;;\n+*)\n+    CARGO_INSTALL_FLAGS=\"--target $TARGET $CARGO_EXTRA_FLAGS\"\n+    CARGO_BUILD_FLAGS=\"--target $TARGET --release $CARGO_EXTRA_FLAGS\"\n+    ;;\n+esac\n \n ## Helper functions\n \n@@ -119,20 +133,6 @@ find_sysroot() {\n \n ## Main\n \n-# Determine flags passed to all cargo invocations.\n-# This is a bit more annoying that one would hope due to\n-# <https://github.com/rust-lang/cargo/issues/6992>.\n-case \"$COMMAND\" in\n-*-debug)\n-    CARGO_INSTALL_FLAGS=\"--target $TARGET --debug $CARGO_EXTRA_FLAGS\"\n-    CARGO_BUILD_FLAGS=\"--target $TARGET $CARGO_EXTRA_FLAGS\"\n-    ;;\n-*)\n-    CARGO_INSTALL_FLAGS=\"--target $TARGET $CARGO_EXTRA_FLAGS\"\n-    CARGO_BUILD_FLAGS=\"--target $TARGET --release $CARGO_EXTRA_FLAGS\"\n-    ;;\n-esac\n-\n # Run command.\n case \"$COMMAND\" in\n install|install-debug)"}]}