{"sha": "69f3b01dc5dd70d9bdf6de4d859ad593a689395d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZjNiMDFkYzVkZDcwZDliZGY2ZGU0ZDg1OWFkNTkzYTY4OTM5NWQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-15T22:36:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-15T22:36:10Z"}, "message": "Merge #2268\n\n2268: Handle ast::MacroCall in classify_name and impl FromSource for MacroDef r=matklad a=kjeremy\n\nFixes #2260\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "c847ded853cea83c2f64c6ffc20d1ad4138613fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c847ded853cea83c2f64c6ffc20d1ad4138613fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69f3b01dc5dd70d9bdf6de4d859ad593a689395d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdzyhaCRBK7hj4Ov3rIwAAdHIIAKcwk/XHtEtLe6eThCNeLxg0\n/ZppR55BL1U88SJ3DJJjDGQUZKAVLSBnL2h/RMXI6j+LXmIVRNEQfQGzzIFXCe0z\nxkwxrQyYlUcIydLMbyD3nzrXfv9mX6C29rYOzxv9bucT152AZbzl7ERG5mlsi4iG\n9kvHte0TjxcrorGLWw3NlGbhKhfu+fckhG+6akAV3QC0lcpsLzSxW2RUXfAtHlkJ\nMDAXZ3x0VAC/VaK893pMgdlE2Gj1qNf558gskMDXnE3r3IFBQmRmMMY8CjEKJiqG\n9NrO+Bn+vqnxAqdqHbWzdQSH30EaseEKxFsVb8cTHWJCZOsmu25NDgJCWy2zL08=\n=8eua\n-----END PGP SIGNATURE-----\n", "payload": "tree c847ded853cea83c2f64c6ffc20d1ad4138613fb\nparent ad10c4b8e2d81af7fc35a466cd434e2c3952bfd8\nparent 06984ed1164d7607f89f9a6f4893dd05ec058a99\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1573857370 +0000\ncommitter GitHub <noreply@github.com> 1573857370 +0000\n\nMerge #2268\n\n2268: Handle ast::MacroCall in classify_name and impl FromSource for MacroDef r=matklad a=kjeremy\n\nFixes #2260\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69f3b01dc5dd70d9bdf6de4d859ad593a689395d", "html_url": "https://github.com/rust-lang/rust/commit/69f3b01dc5dd70d9bdf6de4d859ad593a689395d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69f3b01dc5dd70d9bdf6de4d859ad593a689395d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad10c4b8e2d81af7fc35a466cd434e2c3952bfd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad10c4b8e2d81af7fc35a466cd434e2c3952bfd8", "html_url": "https://github.com/rust-lang/rust/commit/ad10c4b8e2d81af7fc35a466cd434e2c3952bfd8"}, {"sha": "06984ed1164d7607f89f9a6f4893dd05ec058a99", "url": "https://api.github.com/repos/rust-lang/rust/commits/06984ed1164d7607f89f9a6f4893dd05ec058a99", "html_url": "https://github.com/rust-lang/rust/commit/06984ed1164d7607f89f9a6f4893dd05ec058a99"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "1c26756c978a9dc78da52036612525d8ab66b08a", "filename": "crates/ra_hir/src/from_source.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/69f3b01dc5dd70d9bdf6de4d859ad593a689395d/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69f3b01dc5dd70d9bdf6de4d859ad593a689395d/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs?ref=69f3b01dc5dd70d9bdf6de4d859ad593a689395d", "patch": "@@ -1,7 +1,7 @@\n //! FIXME: write short doc here\n \n use hir_def::{ModuleId, StructId, StructOrUnionId, UnionId};\n-use hir_expand::name::AsName;\n+use hir_expand::{name::AsName, AstId, MacroDefId, MacroDefKind};\n use ra_syntax::{\n     ast::{self, AstNode, NameOwner},\n     match_ast,\n@@ -11,8 +11,8 @@ use crate::{\n     db::{AstDatabase, DefDatabase, HirDatabase},\n     ids::{AstItemDef, LocationCtx},\n     Const, DefWithBody, Enum, EnumVariant, FieldSource, Function, HasBody, HasSource, ImplBlock,\n-    Local, Module, ModuleSource, Source, Static, Struct, StructField, Trait, TypeAlias, Union,\n-    VariantDef,\n+    Local, MacroDef, Module, ModuleSource, Source, Static, Struct, StructField, Trait, TypeAlias,\n+    Union, VariantDef,\n };\n \n pub trait FromSource: Sized {\n@@ -77,7 +77,22 @@ impl FromSource for TypeAlias {\n         Some(TypeAlias { id })\n     }\n }\n-// FIXME: add impl FromSource for MacroDef\n+\n+impl FromSource for MacroDef {\n+    type Ast = ast::MacroCall;\n+    fn from_source(db: &(impl DefDatabase + AstDatabase), src: Source<Self::Ast>) -> Option<Self> {\n+        let kind = MacroDefKind::Declarative;\n+\n+        let module_src = ModuleSource::from_child_node(db, src.as_ref().map(|it| it.syntax()));\n+        let module = Module::from_definition(db, Source::new(src.file_id, module_src))?;\n+        let krate = module.krate().crate_id();\n+\n+        let ast_id = AstId::new(src.file_id, db.ast_id_map(src.file_id).ast_id(&src.ast));\n+\n+        let id: MacroDefId = MacroDefId { krate, ast_id, kind };\n+        Some(MacroDef { id })\n+    }\n+}\n \n impl FromSource for ImplBlock {\n     type Ast = ast::ImplBlock;"}, {"sha": "faa88d9882be6b698e9df201f731f4580f7058dc", "filename": "crates/ra_ide_api/src/references.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/69f3b01dc5dd70d9bdf6de4d859ad593a689395d/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69f3b01dc5dd70d9bdf6de4d859ad593a689395d/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences.rs?ref=69f3b01dc5dd70d9bdf6de4d859ad593a689395d", "patch": "@@ -369,6 +369,21 @@ mod tests {\n         assert_eq!(refs.len(), 2);\n     }\n \n+    #[test]\n+    fn test_find_all_refs_macro_def() {\n+        let code = r#\"\n+        #[macro_export]\n+        macro_rules! m1<|> { () => (()) }\n+\n+        fn foo() {\n+            m1();\n+            m1();\n+        }\"#;\n+\n+        let refs = get_all_refs(code);\n+        assert_eq!(refs.len(), 3);\n+    }\n+\n     fn get_all_refs(text: &str) -> ReferenceSearchResult {\n         let (analysis, position) = single_file_with_position(text);\n         analysis.find_all_refs(position, None).unwrap().unwrap()"}, {"sha": "0eeaa7f384b33353e1908d8a8d0747fc666bb0db", "filename": "crates/ra_ide_api/src/references/classify.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/69f3b01dc5dd70d9bdf6de4d859ad593a689395d/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fclassify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69f3b01dc5dd70d9bdf6de4d859ad593a689395d/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fclassify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fclassify.rs?ref=69f3b01dc5dd70d9bdf6de4d859ad593a689395d", "patch": "@@ -21,7 +21,6 @@ pub(crate) fn classify_name(\n     let parent = name.syntax().parent()?;\n     let file_id = file_id.into();\n \n-    // FIXME: add ast::MacroCall(it)\n     match_ast! {\n         match parent {\n             ast::BindPat(it) => {\n@@ -104,6 +103,19 @@ pub(crate) fn classify_name(\n                     Some(from_module_def(db, def.into(), None))\n                 }\n             },\n+            ast::MacroCall(it) => {\n+                let src = hir::Source { file_id, ast: it};\n+                let def = hir::MacroDef::from_source(db, src.clone())?;\n+\n+                let module_src = ModuleSource::from_child_node(db, src.as_ref().map(|it| it.syntax()));\n+                let module = Module::from_definition(db, Source::new(file_id, module_src))?;\n+\n+                Some(NameDefinition {\n+                    visibility: None,\n+                    container: module,\n+                    kind: NameKind::Macro(def),\n+                })\n+            },\n             _ => None,\n         }\n     }"}]}