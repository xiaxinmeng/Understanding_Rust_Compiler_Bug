{"sha": "8cc852af8ce3c7b59c06aaf41b44ff5fe90c4ced", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYzg1MmFmOGNlM2M3YjU5YzA2YWFmNDFiNDRmZjVmZTkwYzRjZWQ=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-22T09:57:47Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-22T09:57:47Z"}, "message": "Make ast::visit only descend into types when necessary\n\nIf visit_ty is not overridden, it uses a stub function which does not\ndescend into types.\n\nCloses #1204", "tree": {"sha": "2634c63f9918ac5c7837ab3cae580337733ceee3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2634c63f9918ac5c7837ab3cae580337733ceee3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cc852af8ce3c7b59c06aaf41b44ff5fe90c4ced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cc852af8ce3c7b59c06aaf41b44ff5fe90c4ced", "html_url": "https://github.com/rust-lang/rust/commit/8cc852af8ce3c7b59c06aaf41b44ff5fe90c4ced", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cc852af8ce3c7b59c06aaf41b44ff5fe90c4ced/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a13504796eb167c35ef96c5d29b6f8a7a33ecfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a13504796eb167c35ef96c5d29b6f8a7a33ecfe", "html_url": "https://github.com/rust-lang/rust/commit/1a13504796eb167c35ef96c5d29b6f8a7a33ecfe"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "12598f3729bf8d683a3695d7b39d88ee017cf95a", "filename": "src/comp/middle/mut.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8cc852af8ce3c7b59c06aaf41b44ff5fe90c4ced/src%2Fcomp%2Fmiddle%2Fmut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cc852af8ce3c7b59c06aaf41b44ff5fe90c4ced/src%2Fcomp%2Fmiddle%2Fmut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmut.rs?ref=8cc852af8ce3c7b59c06aaf41b44ff5fe90c4ced", "patch": "@@ -113,10 +113,9 @@ type ctx = {tcx: ty::ctxt, mut_map: mut_map};\n \n fn check_crate(tcx: ty::ctxt, crate: @crate) -> mut_map {\n     let cx = @{tcx: tcx, mut_map: std::map::new_int_hash()};\n-    let v =\n-        @{visit_expr: bind visit_expr(cx, _, _, _),\n-          visit_decl: bind visit_decl(cx, _, _, _)\n-             with *visit::default_visitor::<()>()};\n+    let v = @{visit_expr: bind visit_expr(cx, _, _, _),\n+              visit_decl: bind visit_decl(cx, _, _, _)\n+              with *visit::default_visitor()};\n     visit::visit_crate(*crate, (), visit::mk_vt(v));\n     ret cx.mut_map;\n }"}, {"sha": "48f5bd1329ffeee8978a267e41640234f57994a5", "filename": "src/comp/syntax/visit.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8cc852af8ce3c7b59c06aaf41b44ff5fe90c4ced/src%2Fcomp%2Fsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cc852af8ce3c7b59c06aaf41b44ff5fe90c4ced/src%2Fcomp%2Fsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fvisit.rs?ref=8cc852af8ce3c7b59c06aaf41b44ff5fe90c4ced", "patch": "@@ -45,7 +45,7 @@ fn default_visitor<E>() -> visitor<E> {\n           visit_pat: bind visit_pat::<E>(_, _, _),\n           visit_decl: bind visit_decl::<E>(_, _, _),\n           visit_expr: bind visit_expr::<E>(_, _, _),\n-          visit_ty: bind visit_ty::<E>(_, _, _),\n+          visit_ty: bind skip_ty::<E>(_, _, _),\n           visit_constr: bind visit_constr::<E>(_, _, _, _, _),\n           visit_fn: bind visit_fn::<E>(_, _, _, _, _, _, _)};\n }\n@@ -109,6 +109,8 @@ fn visit_item<E>(i: @item, e: E, v: vt<E>) {\n     }\n }\n \n+fn skip_ty<E>(_t: @ty, _e: E, _v: vt<E>) {}\n+\n fn visit_ty<E>(t: @ty, e: E, v: vt<E>) {\n     alt t.node {\n       ty_nil. {/* no-op */ }\n@@ -355,6 +357,8 @@ type simple_visitor =\n       visit_constr: fn@(path, span, node_id),\n       visit_fn: fn@(_fn, [ty_param], span, fn_ident, node_id)};\n \n+fn simple_ignore_ty(_t: @ty) {}\n+\n fn default_simple_visitor() -> simple_visitor {\n     ret @{visit_mod: fn(_m: _mod, _sp: span) { },\n           visit_view_item: fn(_vi: @view_item) { },\n@@ -367,7 +371,7 @@ fn default_simple_visitor() -> simple_visitor {\n           visit_pat: fn(_p: @pat) { },\n           visit_decl: fn(_d: @decl) { },\n           visit_expr: fn(_e: @expr) { },\n-          visit_ty: fn(_t: @ty) { },\n+          visit_ty: simple_ignore_ty,\n           visit_constr: fn(_p: path, _sp: span, _id: node_id) { },\n           visit_fn:\n               fn(_f: _fn, _tps: [ty_param], _sp: span, _ident: fn_ident,\n@@ -436,6 +440,11 @@ fn mk_simple_visitor(v: simple_visitor) -> vt<()> {\n         f(ff, tps, sp, ident, id);\n         visit_fn(ff, tps, sp, ident, id, e, v);\n     }\n+    let visit_ty = if v.visit_ty == simple_ignore_ty {\n+        bind skip_ty(_, _, _)\n+    } else {\n+        bind v_ty(v.visit_ty, _, _, _)\n+    };\n     ret mk_vt(@{visit_mod: bind v_mod(v.visit_mod, _, _, _, _),\n                 visit_view_item: bind v_view_item(v.visit_view_item, _, _, _),\n                 visit_native_item:\n@@ -448,7 +457,7 @@ fn mk_simple_visitor(v: simple_visitor) -> vt<()> {\n                 visit_pat: bind v_pat(v.visit_pat, _, _, _),\n                 visit_decl: bind v_decl(v.visit_decl, _, _, _),\n                 visit_expr: bind v_expr(v.visit_expr, _, _, _),\n-                visit_ty: bind v_ty(v.visit_ty, _, _, _),\n+                visit_ty: visit_ty,\n                 visit_constr: bind v_constr(v.visit_constr, _, _, _, _, _),\n                 visit_fn: bind v_fn(v.visit_fn, _, _, _, _, _, _, _)});\n }"}]}