{"sha": "8ef490871c0cc0a3aff00976c6f00c7eab6d90c7", "node_id": "C_kwDOAAsO6NoAKDhlZjQ5MDg3MWMwY2MwYTNhZmYwMDk3NmM2ZjAwYzdlYWI2ZDkwYzc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-04T09:49:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-04T09:49:27Z"}, "message": "Auto merge of #8843 - Serial-ATA:collect-renamed, r=xFrednet\n\nCollect renamed lints\n\nchangelog: Display past names of renamed lints on Clippy's lint list\n\ncc #7172\n\nr? `@xFrednet`", "tree": {"sha": "fd027392ce55ea7c53aebd4fe30edfb5d7706b57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd027392ce55ea7c53aebd4fe30edfb5d7706b57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ef490871c0cc0a3aff00976c6f00c7eab6d90c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ef490871c0cc0a3aff00976c6f00c7eab6d90c7", "html_url": "https://github.com/rust-lang/rust/commit/8ef490871c0cc0a3aff00976c6f00c7eab6d90c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ef490871c0cc0a3aff00976c6f00c7eab6d90c7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1a3e7e9c898831dfedf1846664d651a62906505", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1a3e7e9c898831dfedf1846664d651a62906505", "html_url": "https://github.com/rust-lang/rust/commit/b1a3e7e9c898831dfedf1846664d651a62906505"}, {"sha": "45be175eeba9b8cc39417cd09216d88a544c4830", "url": "https://api.github.com/repos/rust-lang/rust/commits/45be175eeba9b8cc39417cd09216d88a544c4830", "html_url": "https://github.com/rust-lang/rust/commit/45be175eeba9b8cc39417cd09216d88a544c4830"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "cf2de6a42af36633607576db2fc5deecb0654a0a", "filename": "clippy_lints/src/utils/internal_lints/metadata_collector.rs", "status": "modified", "additions": 52, "deletions": 3, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/8ef490871c0cc0a3aff00976c6f00c7eab6d90c7/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef490871c0cc0a3aff00976c6f00c7eab6d90c7/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs?ref=8ef490871c0cc0a3aff00976c6f00c7eab6d90c7", "patch": "@@ -7,6 +7,7 @@\n //! during any comparison or mapping. (Please take care of this, it's not fun to spend time on such\n //! a simple mistake)\n \n+use crate::renamed_lints::RENAMED_LINTS;\n use crate::utils::internal_lints::{extract_clippy_version_value, is_lint_ref_type};\n \n use clippy_utils::diagnostics::span_lint;\n@@ -26,6 +27,7 @@ use rustc_span::{sym, Loc, Span, Symbol};\n use serde::{ser::SerializeStruct, Serialize, Serializer};\n use std::collections::BinaryHeap;\n use std::fmt;\n+use std::fmt::Write as _;\n use std::fs::{self, OpenOptions};\n use std::io::prelude::*;\n use std::path::Path;\n@@ -85,6 +87,21 @@ macro_rules! CONFIGURATION_VALUE_TEMPLATE {\n     };\n }\n \n+macro_rules! RENAMES_SECTION_TEMPLATE {\n+    () => {\n+        r#\"\n+### Past names\n+\n+{names}\n+\"#\n+    };\n+}\n+macro_rules! RENAME_VALUE_TEMPLATE {\n+    () => {\n+        \"* `{name}`\\n\"\n+    };\n+}\n+\n const LINT_EMISSION_FUNCTIONS: [&[&str]; 8] = [\n     &[\"clippy_utils\", \"diagnostics\", \"span_lint\"],\n     &[\"clippy_utils\", \"diagnostics\", \"span_lint_and_help\"],\n@@ -198,9 +215,10 @@ impl Drop for MetadataCollector {\n \n         // Mapping the final data\n         let mut lints = std::mem::take(&mut self.lints).into_sorted_vec();\n-        lints\n-            .iter_mut()\n-            .for_each(|x| x.applicability = Some(applicability_info.remove(&x.id).unwrap_or_default()));\n+        collect_renames(&mut lints);\n+        for x in &mut lints {\n+            x.applicability = Some(applicability_info.remove(&x.id).unwrap_or_default());\n+        }\n \n         // Outputting\n         if Path::new(OUTPUT_FILE).exists() {\n@@ -642,6 +660,37 @@ fn is_deprecated_lint(cx: &LateContext<'_>, ty: &hir::Ty<'_>) -> bool {\n     false\n }\n \n+fn collect_renames(lints: &mut Vec<LintMetadata>) {\n+    for lint in lints {\n+        let mut collected = String::new();\n+        let mut names = vec![lint.id.clone()];\n+\n+        loop {\n+            if let Some(lint_name) = names.pop() {\n+                for (k, v) in RENAMED_LINTS {\n+                    if_chain! {\n+                        if let Some(name) = v.strip_prefix(CLIPPY_LINT_GROUP_PREFIX);\n+                        if name == lint_name;\n+                        if let Some(past_name) = k.strip_prefix(CLIPPY_LINT_GROUP_PREFIX);\n+                        then {\n+                            write!(collected, RENAME_VALUE_TEMPLATE!(), name = past_name).unwrap();\n+                            names.push(past_name.to_string());\n+                        }\n+                    }\n+                }\n+\n+                continue;\n+            }\n+\n+            break;\n+        }\n+\n+        if !collected.is_empty() {\n+            write!(&mut lint.docs, RENAMES_SECTION_TEMPLATE!(), names = collected).unwrap();\n+        }\n+    }\n+}\n+\n // ==================================================================\n // Lint emission\n // =================================================================="}]}