{"sha": "fdf444da766715ec6bb181eb12b553333e925eb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZjQ0NGRhNzY2NzE1ZWM2YmIxODFlYjEyYjU1MzMzM2U5MjVlYjQ=", "commit": {"author": {"name": "Arthur Silva", "email": "arthurprs@gmail.com", "date": "2018-01-19T14:40:02Z"}, "committer": {"name": "arthurprs", "email": "arthurprs@gmail.com", "date": "2018-01-19T14:40:58Z"}, "message": "Update BTreeMap recommendation\n\nFocus on the ordering/range benefit.", "tree": {"sha": "d95018d4a5f0472b629802c49a877650c4bc45ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d95018d4a5f0472b629802c49a877650c4bc45ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdf444da766715ec6bb181eb12b553333e925eb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf444da766715ec6bb181eb12b553333e925eb4", "html_url": "https://github.com/rust-lang/rust/commit/fdf444da766715ec6bb181eb12b553333e925eb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdf444da766715ec6bb181eb12b553333e925eb4/comments", "author": {"login": "arthurprs", "id": 715958, "node_id": "MDQ6VXNlcjcxNTk1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/715958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurprs", "html_url": "https://github.com/arthurprs", "followers_url": "https://api.github.com/users/arthurprs/followers", "following_url": "https://api.github.com/users/arthurprs/following{/other_user}", "gists_url": "https://api.github.com/users/arthurprs/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurprs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurprs/subscriptions", "organizations_url": "https://api.github.com/users/arthurprs/orgs", "repos_url": "https://api.github.com/users/arthurprs/repos", "events_url": "https://api.github.com/users/arthurprs/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurprs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arthurprs", "id": 715958, "node_id": "MDQ6VXNlcjcxNTk1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/715958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurprs", "html_url": "https://github.com/arthurprs", "followers_url": "https://api.github.com/users/arthurprs/followers", "following_url": "https://api.github.com/users/arthurprs/following{/other_user}", "gists_url": "https://api.github.com/users/arthurprs/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurprs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurprs/subscriptions", "organizations_url": "https://api.github.com/users/arthurprs/orgs", "repos_url": "https://api.github.com/users/arthurprs/repos", "events_url": "https://api.github.com/users/arthurprs/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurprs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b56ab0f7b0c5e01611b7ea6a28c77bc09c26275", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b56ab0f7b0c5e01611b7ea6a28c77bc09c26275", "html_url": "https://github.com/rust-lang/rust/commit/0b56ab0f7b0c5e01611b7ea6a28c77bc09c26275"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e9a150f34a51efdc31afe6b251d0ec780150a2fa", "filename": "src/libstd/collections/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdf444da766715ec6bb181eb12b553333e925eb4/src%2Flibstd%2Fcollections%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf444da766715ec6bb181eb12b553333e925eb4/src%2Flibstd%2Fcollections%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fmod.rs?ref=fdf444da766715ec6bb181eb12b553333e925eb4", "patch": "@@ -64,11 +64,11 @@\n //! * You want a map, with no extra functionality.\n //!\n //! ### Use a `BTreeMap` when:\n+//! * You want a map sorted by its keys.\n+//! * You want to be able to get a range of entries on-demand.\n //! * You're interested in what the smallest or largest key-value pair is.\n //! * You want to find the largest or smallest key that is smaller or larger\n //!   than something.\n-//! * You want to be able to get all of the entries in order on-demand.\n-//! * You want a map sorted by its keys.\n //!\n //! ### Use the `Set` variant of any of these `Map`s when:\n //! * You just want to remember which keys you've seen."}]}