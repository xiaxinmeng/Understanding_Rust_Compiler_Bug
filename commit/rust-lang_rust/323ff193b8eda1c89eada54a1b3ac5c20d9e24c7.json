{"sha": "323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyM2ZmMTkzYjhlZGExYzg5ZWFkYTU0YTFiM2FjNWMyMGQ5ZTI0Yzc=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-04T22:03:37Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-19T05:03:28Z"}, "message": "Add tests for calling trait methods on concrete types", "tree": {"sha": "9af9641bd72c5adb9fd7eb31cbde15904b458150", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9af9641bd72c5adb9fd7eb31cbde15904b458150"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "html_url": "https://github.com/rust-lang/rust/commit/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a019b1bd2b13993bb2039053d815df02504083e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a019b1bd2b13993bb2039053d815df02504083e", "html_url": "https://github.com/rust-lang/rust/commit/7a019b1bd2b13993bb2039053d815df02504083e"}], "stats": {"total": 116, "additions": 78, "deletions": 38}, "files": [{"sha": "ed6c07e4653a89428117aedbb74456621c754520", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-const-trait-method.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method.rs?ref=323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "patch": "@@ -0,0 +1,30 @@\n+#![allow(incomplete_features)]\n+#![feature(const_trait_impl)]\n+#![feature(const_fn)]\n+\n+pub trait Plus {\n+    fn plus(self, rhs: Self) -> Self;\n+}\n+\n+impl const Plus for i32 {\n+    fn plus(self, rhs: Self) -> Self {\n+        self + rhs\n+    }\n+}\n+\n+impl Plus for u32 {\n+    fn plus(self, rhs: Self) -> Self {\n+        self + rhs\n+    }\n+}\n+\n+pub const fn add_i32(a: i32, b: i32) -> i32 {\n+    a.plus(b)\n+}\n+\n+pub const fn add_u32(a: u32, b: u32) -> u32 {\n+    a.plus(b)\n+    //~^ ERROR calls in constant functions are limited to constant functions\n+}\n+\n+fn main() {}"}, {"sha": "7216876c83adf80a5d3e44b034202c7aac3bbd01", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-const-trait-method.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method.stderr?ref=323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "patch": "@@ -0,0 +1,9 @@\n+error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+  --> $DIR/call-const-trait-method.rs:26:5\n+   |\n+LL |     a.plus(b)\n+   |     ^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0015`."}, {"sha": "cad4f69033b2a293996f978754ce01a68efcca74", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-check-fns-in-const-impl.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.rs?ref=323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "patch": "@@ -0,0 +1,16 @@\n+#![allow(incomplete_features)]\n+#![feature(const_trait_impl)]\n+\n+struct S;\n+trait T {\n+    fn foo();\n+}\n+\n+fn non_const() {}\n+\n+impl const T for S {\n+    fn foo() { non_const() }\n+    //~^ ERROR\n+}\n+\n+fn main() {}"}, {"sha": "8c220dc44ab47e2f1db440469b7e37b3018b435d", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-check-fns-in-const-impl.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.stderr?ref=323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "patch": "@@ -0,0 +1,12 @@\n+error[E0723]: can only call other `const fn` within a `const fn`, but `const non_const` is not stable as `const fn`\n+  --> $DIR/const-check-fns-in-const-impl.rs:12:16\n+   |\n+LL |     fn foo() { non_const() }\n+   |                ^^^^^^^^^^^\n+   |\n+   = note: for more information, see issue https://github.com/rust-lang/rust/issues/57563\n+   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0723`."}, {"sha": "d1ab99e33e99254d62b174e84c8364b28d997367", "filename": "src/test/ui/rfc-2632-const-trait-impl/feature-gate.gated.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.gated.stderr?ref=323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "patch": "@@ -1,10 +1,8 @@\n-error: const trait impls are not yet implemented\n-  --> $DIR/feature-gate.rs:9:1\n+error: fatal error triggered by #[rustc_error]\n+  --> $DIR/feature-gate.rs:14:1\n    |\n-LL | impl const T for S {}\n-   | ^^^^^-----^^^^^^^^^^^\n-   |      |\n-   |      const because of this\n+LL | fn main() {}\n+   | ^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "d9772431941d373ab5bab07cad3741c6203971e4", "filename": "src/test/ui/rfc-2632-const-trait-impl/feature-gate.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.rs?ref=323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "patch": "@@ -3,11 +3,12 @@\n \n #![cfg_attr(gated, feature(const_trait_impl))]\n #![allow(incomplete_features)]\n+#![feature(rustc_attrs)]\n \n struct S;\n trait T {}\n impl const T for S {}\n //[stock]~^ ERROR const trait impls are experimental\n-//[stock,gated]~^^ ERROR const trait impls are not yet implemented\n \n-fn main() {}\n+#[rustc_error]\n+fn main() {} //[gated]~ ERROR fatal error triggered by #[rustc_error]"}, {"sha": "724090e49cd415ed8e3d2e0ea502eb159a7e67e1", "filename": "src/test/ui/rfc-2632-const-trait-impl/feature-gate.stock.stderr", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.stock.stderr?ref=323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "patch": "@@ -1,20 +1,12 @@\n error[E0658]: const trait impls are experimental\n-  --> $DIR/feature-gate.rs:9:6\n+  --> $DIR/feature-gate.rs:10:6\n    |\n LL | impl const T for S {}\n    |      ^^^^^\n    |\n    = note: see issue #67792 <https://github.com/rust-lang/rust/issues/67792> for more information\n    = help: add `#![feature(const_trait_impl)]` to the crate attributes to enable\n \n-error: const trait impls are not yet implemented\n-  --> $DIR/feature-gate.rs:9:1\n-   |\n-LL | impl const T for S {}\n-   | ^^^^^-----^^^^^^^^^^^\n-   |      |\n-   |      const because of this\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "04123a532bd9faaf386bab563e5a96e022b1bd87", "filename": "src/test/ui/rfc-2632-const-trait-impl/inherent-impl.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs?ref=323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "patch": "@@ -8,10 +8,8 @@ trait T {}\n \n impl const S {}\n //~^ ERROR inherent impls cannot be `const`\n-//~| ERROR const trait impls are not yet implemented\n \n impl const T {}\n //~^ ERROR inherent impls cannot be `const`\n-//~| ERROR const trait impls are not yet implemented\n \n fn main() {}"}, {"sha": "3ea58a3728a5dc3d2cabd73e76b4852baf6aa3da", "filename": "src/test/ui/rfc-2632-const-trait-impl/inherent-impl.stderr", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/323ff193b8eda1c89eada54a1b3ac5c20d9e24c7/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.stderr?ref=323ff193b8eda1c89eada54a1b3ac5c20d9e24c7", "patch": "@@ -9,7 +9,7 @@ LL | impl const S {}\n    = note: only trait implementations may be annotated with `const`\n \n error: inherent impls cannot be `const`\n-  --> $DIR/inherent-impl.rs:13:1\n+  --> $DIR/inherent-impl.rs:12:1\n    |\n LL | impl const T {}\n    | ^^^^^-----^^^^^\n@@ -18,21 +18,5 @@ LL | impl const T {}\n    |\n    = note: only trait implementations may be annotated with `const`\n \n-error: const trait impls are not yet implemented\n-  --> $DIR/inherent-impl.rs:9:1\n-   |\n-LL | impl const S {}\n-   | ^^^^^-----^^^^^\n-   |      |\n-   |      const because of this\n-\n-error: const trait impls are not yet implemented\n-  --> $DIR/inherent-impl.rs:13:1\n-   |\n-LL | impl const T {}\n-   | ^^^^^-----^^^^^\n-   |      |\n-   |      const because of this\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n "}]}