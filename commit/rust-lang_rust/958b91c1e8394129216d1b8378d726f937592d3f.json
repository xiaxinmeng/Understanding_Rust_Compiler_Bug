{"sha": "958b91c1e8394129216d1b8378d726f937592d3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OGI5MWMxZTgzOTQxMjkyMTZkMWI4Mzc4ZDcyNmY5Mzc1OTJkM2Y=", "commit": {"author": {"name": "JmPotato", "email": "ghzpotato@gmail.com", "date": "2020-08-10T09:51:45Z"}, "committer": {"name": "JmPotato", "email": "ghzpotato@gmail.com", "date": "2020-08-10T09:51:45Z"}, "message": "Better codes\n\nSigned-off-by: JmPotato <ghzpotato@gmail.com>", "tree": {"sha": "d9eb3f88c60add9d7bfc050c8fb52f2033e238cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9eb3f88c60add9d7bfc050c8fb52f2033e238cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/958b91c1e8394129216d1b8378d726f937592d3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/958b91c1e8394129216d1b8378d726f937592d3f", "html_url": "https://github.com/rust-lang/rust/commit/958b91c1e8394129216d1b8378d726f937592d3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/958b91c1e8394129216d1b8378d726f937592d3f/comments", "author": {"login": "JmPotato", "id": 1446531, "node_id": "MDQ6VXNlcjE0NDY1MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1446531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JmPotato", "html_url": "https://github.com/JmPotato", "followers_url": "https://api.github.com/users/JmPotato/followers", "following_url": "https://api.github.com/users/JmPotato/following{/other_user}", "gists_url": "https://api.github.com/users/JmPotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/JmPotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JmPotato/subscriptions", "organizations_url": "https://api.github.com/users/JmPotato/orgs", "repos_url": "https://api.github.com/users/JmPotato/repos", "events_url": "https://api.github.com/users/JmPotato/events{/privacy}", "received_events_url": "https://api.github.com/users/JmPotato/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JmPotato", "id": 1446531, "node_id": "MDQ6VXNlcjE0NDY1MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1446531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JmPotato", "html_url": "https://github.com/JmPotato", "followers_url": "https://api.github.com/users/JmPotato/followers", "following_url": "https://api.github.com/users/JmPotato/following{/other_user}", "gists_url": "https://api.github.com/users/JmPotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/JmPotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JmPotato/subscriptions", "organizations_url": "https://api.github.com/users/JmPotato/orgs", "repos_url": "https://api.github.com/users/JmPotato/repos", "events_url": "https://api.github.com/users/JmPotato/events{/privacy}", "received_events_url": "https://api.github.com/users/JmPotato/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d9c8821e5c328f29b77667c86cabb3689947fd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d9c8821e5c328f29b77667c86cabb3689947fd2", "html_url": "https://github.com/rust-lang/rust/commit/4d9c8821e5c328f29b77667c86cabb3689947fd2"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "010c34705c7db718633e7a2d97b41aa753abf132", "filename": "crates/ra_ide/src/display/short_label.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/958b91c1e8394129216d1b8378d726f937592d3f/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958b91c1e8394129216d1b8378d726f937592d3f/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs?ref=958b91c1e8394129216d1b8378d726f937592d3f", "patch": "@@ -61,15 +61,11 @@ impl ShortLabel for ast::TypeAlias {\n \n impl ShortLabel for ast::Const {\n     fn short_label(&self) -> Option<String> {\n-        match short_label_from_ty(self, self.ty(), \"const \") {\n-            Some(buf) => {\n-                let mut new_buf = buf;\n-                let body = self.body().unwrap();\n-                format_to!(new_buf, \" = {}\", body.syntax());\n-                Some(new_buf)\n-            }\n-            None => None,\n+        let mut new_buf = short_label_from_ty(self, self.ty(), \"const \")?;\n+        if let Some(expr) = self.body() {\n+            format_to!(new_buf, \" = {}\", expr.syntax());\n         }\n+        Some(new_buf)\n     }\n }\n "}]}