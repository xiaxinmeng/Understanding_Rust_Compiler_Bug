{"sha": "44a0522b180805e9ff0d6b5009c031f6d131b4a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YTA1MjJiMTgwODA1ZTlmZjBkNmI1MDA5YzAzMWY2ZDEzMWI0YTY=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-12-20T15:45:23Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-12-20T15:45:23Z"}, "message": "incr.comp.: Use ensure() for some coherence-related queries.", "tree": {"sha": "f7f07fee324e61e1989646c1306f2f1440772afb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7f07fee324e61e1989646c1306f2f1440772afb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44a0522b180805e9ff0d6b5009c031f6d131b4a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44a0522b180805e9ff0d6b5009c031f6d131b4a6", "html_url": "https://github.com/rust-lang/rust/commit/44a0522b180805e9ff0d6b5009c031f6d131b4a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44a0522b180805e9ff0d6b5009c031f6d131b4a6/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dba52ced4ca8f1ea8f8ee10390797c60e67c22c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dba52ced4ca8f1ea8f8ee10390797c60e67c22c5", "html_url": "https://github.com/rust-lang/rust/commit/dba52ced4ca8f1ea8f8ee10390797c60e67c22c5"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "f2fe12dedc2ae8de737193529eb7887e0daeaa14", "filename": "src/librustc/ty/maps/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44a0522b180805e9ff0d6b5009c031f6d131b4a6/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44a0522b180805e9ff0d6b5009c031f6d131b4a6/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs?ref=44a0522b180805e9ff0d6b5009c031f6d131b4a6", "patch": "@@ -102,7 +102,7 @@ impl<'tcx> QueryDescription<'tcx> for queries::type_param_predicates<'tcx> {\n }\n \n impl<'tcx> QueryDescription<'tcx> for queries::coherent_trait<'tcx> {\n-    fn describe(tcx: TyCtxt, (_, def_id): (CrateNum, DefId)) -> String {\n+    fn describe(tcx: TyCtxt, def_id: DefId) -> String {\n         format!(\"coherence checking all impls of trait `{}`\",\n                 tcx.item_path_str(def_id))\n     }"}, {"sha": "7c9d274e1fe06b03d8ad5b2f871d68c3e0925bae", "filename": "src/librustc/ty/maps/mod.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/44a0522b180805e9ff0d6b5009c031f6d131b4a6/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44a0522b180805e9ff0d6b5009c031f6d131b4a6/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs?ref=44a0522b180805e9ff0d6b5009c031f6d131b4a6", "patch": "@@ -187,7 +187,7 @@ define_maps! { <'tcx>\n \n     [] fn has_typeck_tables: HasTypeckTables(DefId) -> bool,\n \n-    [] fn coherent_trait: coherent_trait_dep_node((CrateNum, DefId)) -> (),\n+    [] fn coherent_trait: CoherenceCheckTrait(DefId) -> (),\n \n     [] fn borrowck: BorrowCheck(DefId) -> Rc<BorrowCheckResult>,\n \n@@ -385,10 +385,6 @@ fn fulfill_obligation_dep_node<'tcx>((param_env, trait_ref):\n     }\n }\n \n-fn coherent_trait_dep_node<'tcx>((_, def_id): (CrateNum, DefId)) -> DepConstructor<'tcx> {\n-    DepConstructor::CoherenceCheckTrait(def_id)\n-}\n-\n fn crate_inherent_impls_dep_node<'tcx>(_: CrateNum) -> DepConstructor<'tcx> {\n     DepConstructor::Coherence\n }"}, {"sha": "85052052b32f72ffdc2a751235899d3648682c7d", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44a0522b180805e9ff0d6b5009c031f6d131b4a6/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44a0522b180805e9ff0d6b5009c031f6d131b4a6/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=44a0522b180805e9ff0d6b5009c031f6d131b4a6", "patch": "@@ -11,7 +11,7 @@\n //! misc. type-system utilities too small to deserve their own file\n \n use hir::def::Def;\n-use hir::def_id::{DefId, LOCAL_CRATE};\n+use hir::def_id::DefId;\n use hir::map::{DefPathData, Node};\n use hir;\n use ich::NodeIdHashingMode;\n@@ -427,7 +427,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             return None;\n         };\n \n-        self.coherent_trait((LOCAL_CRATE, drop_trait));\n+        ty::maps::queries::coherent_trait::ensure(self, drop_trait);\n \n         let mut dtor_did = None;\n         let ty = self.type_of(adt_did);"}, {"sha": "adf154968c229813a3fea160ff0f6856d72dbdd3", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/44a0522b180805e9ff0d6b5009c031f6d131b4a6/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44a0522b180805e9ff0d6b5009c031f6d131b4a6/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=44a0522b180805e9ff0d6b5009c031f6d131b4a6", "patch": "@@ -15,8 +15,8 @@\n // done by the orphan and overlap modules. Then we build up various\n // mappings. That mapping code resides here.\n \n-use hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n-use rustc::ty::{TyCtxt, TypeFoldable};\n+use hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc::ty::{self, TyCtxt, TypeFoldable};\n use rustc::ty::maps::Providers;\n \n use syntax::ast;\n@@ -113,8 +113,7 @@ pub fn provide(providers: &mut Providers) {\n     };\n }\n \n-fn coherent_trait<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                            (_, def_id): (CrateNum, DefId)) {\n+fn coherent_trait<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) {\n     let impls = tcx.hir.trait_impls(def_id);\n     for &impl_id in impls {\n         check_impl(tcx, impl_id);\n@@ -127,14 +126,14 @@ fn coherent_trait<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n pub fn check_coherence<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n     for &trait_def_id in tcx.hir.krate().trait_impls.keys() {\n-        tcx.coherent_trait((LOCAL_CRATE, trait_def_id));\n+        ty::maps::queries::coherent_trait::ensure(tcx, trait_def_id);\n     }\n \n     unsafety::check(tcx);\n     orphan::check(tcx);\n     overlap::check_auto_impls(tcx);\n \n     // these queries are executed for side-effects (error reporting):\n-    tcx.crate_inherent_impls(LOCAL_CRATE);\n-    tcx.crate_inherent_impls_overlap_check(LOCAL_CRATE);\n+    ty::maps::queries::crate_inherent_impls::ensure(tcx, LOCAL_CRATE);\n+    ty::maps::queries::crate_inherent_impls_overlap_check::ensure(tcx, LOCAL_CRATE);\n }"}]}