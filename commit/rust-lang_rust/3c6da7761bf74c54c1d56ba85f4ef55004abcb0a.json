{"sha": "3c6da7761bf74c54c1d56ba85f4ef55004abcb0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNmRhNzc2MWJmNzRjNTRjMWQ1NmJhODVmNGVmNTUwMDRhYmNiMGE=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-13T06:38:20Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-13T06:38:20Z"}, "message": "avoid unwrap in Option::map_consume implementation", "tree": {"sha": "15019fab5d96d97de8f31798e675dcecd390338e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15019fab5d96d97de8f31798e675dcecd390338e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c6da7761bf74c54c1d56ba85f4ef55004abcb0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c6da7761bf74c54c1d56ba85f4ef55004abcb0a", "html_url": "https://github.com/rust-lang/rust/commit/3c6da7761bf74c54c1d56ba85f4ef55004abcb0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c6da7761bf74c54c1d56ba85f4ef55004abcb0a/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65a0125f7f2e016a066bb3e8944b6ec31d2d46c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/65a0125f7f2e016a066bb3e8944b6ec31d2d46c7", "html_url": "https://github.com/rust-lang/rust/commit/65a0125f7f2e016a066bb3e8944b6ec31d2d46c7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3fb2acd348032c1293105fc8125e5a2098d279c2", "filename": "src/libcore/option.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c6da7761bf74c54c1d56ba85f4ef55004abcb0a/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c6da7761bf74c54c1d56ba85f4ef55004abcb0a/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=3c6da7761bf74c54c1d56ba85f4ef55004abcb0a", "patch": "@@ -114,7 +114,7 @@ pub pure fn map_consume<T, U>(opt: Option<T>,\n      * As `map`, but consumes the option and gives `f` ownership to avoid\n      * copying.\n      */\n-    if opt.is_some() { Some(f(option::unwrap(move opt))) } else { None }\n+    match opt { None => None, Some(v) => Some(f(v)) }\n }\n \n pub pure fn chain<T, U>(opt: Option<T>,"}]}