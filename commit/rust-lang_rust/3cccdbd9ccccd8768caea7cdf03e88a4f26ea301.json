{"sha": "3cccdbd9ccccd8768caea7cdf03e88a4f26ea301", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjY2NkYmQ5Y2NjY2Q4NzY4Y2FlYTdjZGYwM2U4OGE0ZjI2ZWEzMDE=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-07-18T18:45:01Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-07-21T13:54:42Z"}, "message": "Remove an unnecessary block/jump from the drop glue for @-pointer\n\nThe nested with_cond calls each introduce a \"next\" block, with the\ninner one just jumping to the outer one.", "tree": {"sha": "f6a2bb3b3cad0e5d282223c95b942f15575a7d05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6a2bb3b3cad0e5d282223c95b942f15575a7d05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cccdbd9ccccd8768caea7cdf03e88a4f26ea301", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cccdbd9ccccd8768caea7cdf03e88a4f26ea301", "html_url": "https://github.com/rust-lang/rust/commit/3cccdbd9ccccd8768caea7cdf03e88a4f26ea301", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cccdbd9ccccd8768caea7cdf03e88a4f26ea301/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4051178976aa0527ede20e6c053f72b3d4dc20c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4051178976aa0527ede20e6c053f72b3d4dc20c", "html_url": "https://github.com/rust-lang/rust/commit/d4051178976aa0527ede20e6c053f72b3d4dc20c"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "4a2072364e94f381c595e323f69c1e8d490c7ec0", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/3cccdbd9ccccd8768caea7cdf03e88a4f26ea301/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cccdbd9ccccd8768caea7cdf03e88a4f26ea301/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=3cccdbd9ccccd8768caea7cdf03e88a4f26ea301", "patch": "@@ -546,18 +546,23 @@ pub fn decr_refcnt_maybe_free(bcx: block, box_ptr: ValueRef,\n     let _icx = push_ctxt(\"decr_refcnt_maybe_free\");\n     let ccx = bcx.ccx();\n \n-    do with_cond(bcx, IsNotNull(bcx, box_ptr)) |bcx| {\n-        let rc_ptr = GEPi(bcx, box_ptr, [0u, abi::box_field_refcnt]);\n-        let rc = Sub(bcx, Load(bcx, rc_ptr), C_int(ccx, 1));\n-        Store(bcx, rc, rc_ptr);\n-        let zero_test = ICmp(bcx, lib::llvm::IntEQ, C_int(ccx, 0), rc);\n-        do with_cond(bcx, zero_test) |bcx| {\n-            match box_ptr_ptr {\n-                Some(p) => free_ty(bcx, p, t),\n-                None => free_ty_immediate(bcx, box_ptr, t)\n-            }\n-        }\n-    }\n+    let decr_bcx = sub_block(bcx, \"decr\");\n+    let free_bcx = sub_block(decr_bcx, \"free\");\n+    let next_bcx = sub_block(bcx, \"next\");\n+    CondBr(bcx, IsNotNull(bcx, box_ptr), decr_bcx.llbb, next_bcx.llbb);\n+\n+    let rc_ptr = GEPi(decr_bcx, box_ptr, [0u, abi::box_field_refcnt]);\n+    let rc = Sub(decr_bcx, Load(decr_bcx, rc_ptr), C_int(ccx, 1));\n+    Store(decr_bcx, rc, rc_ptr);\n+    CondBr(decr_bcx, IsNull(decr_bcx, rc), free_bcx.llbb, next_bcx.llbb);\n+\n+    let free_bcx = match box_ptr_ptr {\n+        Some(p) => free_ty(free_bcx, p, t),\n+        None => free_ty_immediate(free_bcx, box_ptr, t)\n+    };\n+    Br(free_bcx, next_bcx.llbb);\n+\n+    next_bcx\n }\n \n "}]}