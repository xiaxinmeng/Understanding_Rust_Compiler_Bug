{"sha": "ad4cdf7077193b8496af5e1ef23188e7589ade24", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNGNkZjcwNzcxOTNiODQ5NmFmNWUxZWYyMzE4OGU3NTg5YWRlMjQ=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-10-21T17:17:47Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-10-21T17:18:21Z"}, "message": "don't revisit modules while finding traits in suggest\n\nFixes #29181", "tree": {"sha": "4b0a2440e2346acafc6195c49ed54b224bcb1732", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b0a2440e2346acafc6195c49ed54b224bcb1732"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad4cdf7077193b8496af5e1ef23188e7589ade24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad4cdf7077193b8496af5e1ef23188e7589ade24", "html_url": "https://github.com/rust-lang/rust/commit/ad4cdf7077193b8496af5e1ef23188e7589ade24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad4cdf7077193b8496af5e1ef23188e7589ade24/comments", "author": null, "committer": null, "parents": [{"sha": "ea2dabf6b2787bbd8b0c6ae9bee7fbeeb9c620ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea2dabf6b2787bbd8b0c6ae9bee7fbeeb9c620ee", "html_url": "https://github.com/rust-lang/rust/commit/ea2dabf6b2787bbd8b0c6ae9bee7fbeeb9c620ee"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "f597820639c24ea3e12d3131170596d2953078c5", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ad4cdf7077193b8496af5e1ef23188e7589ade24/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad4cdf7077193b8496af5e1ef23188e7589ade24/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=ad4cdf7077193b8496af5e1ef23188e7589ade24", "patch": "@@ -23,6 +23,7 @@ use middle::lang_items::FnOnceTraitLangItem;\n use middle::subst::Substs;\n use middle::traits::{Obligation, SelectionContext};\n use metadata::{csearch, cstore, decoder};\n+use util::nodemap::{FnvHashSet};\n \n use syntax::ast;\n use syntax::codemap::Span;\n@@ -406,7 +407,9 @@ pub fn all_traits<'a>(ccx: &'a CrateCtxt) -> AllTraits<'a> {\n         }, ccx.tcx.map.krate());\n \n         // Cross-crate:\n+        let mut external_mods = FnvHashSet();\n         fn handle_external_def(traits: &mut AllTraitsVec,\n+                               external_mods: &mut FnvHashSet<DefId>,\n                                ccx: &CrateCtxt,\n                                cstore: &cstore::CStore,\n                                dl: decoder::DefLike) {\n@@ -415,8 +418,12 @@ pub fn all_traits<'a>(ccx: &'a CrateCtxt) -> AllTraits<'a> {\n                     traits.push(TraitInfo::new(did));\n                 }\n                 decoder::DlDef(def::DefMod(did)) => {\n+                    if !external_mods.insert(did) {\n+                        return;\n+                    }\n                     csearch::each_child_of_item(cstore, did, |dl, _, _| {\n-                        handle_external_def(traits, ccx, cstore, dl)\n+                        handle_external_def(traits, external_mods,\n+                                            ccx, cstore, dl)\n                     })\n                 }\n                 _ => {}\n@@ -425,7 +432,9 @@ pub fn all_traits<'a>(ccx: &'a CrateCtxt) -> AllTraits<'a> {\n         let cstore = &ccx.tcx.sess.cstore;\n         cstore.iter_crate_data(|cnum, _| {\n             csearch::each_top_level_item_of_crate(cstore, cnum, |dl, _, _| {\n-                handle_external_def(&mut traits, ccx, cstore, dl)\n+                handle_external_def(&mut traits,\n+                                    &mut external_mods,\n+                                    ccx, cstore, dl)\n             })\n         });\n "}, {"sha": "361f1ea5509344a8cbff05f7bd46c762c2423c12", "filename": "src/test/auxiliary/issue-29181.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ad4cdf7077193b8496af5e1ef23188e7589ade24/src%2Ftest%2Fauxiliary%2Fissue-29181.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad4cdf7077193b8496af5e1ef23188e7589ade24/src%2Ftest%2Fauxiliary%2Fissue-29181.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-29181.rs?ref=ad4cdf7077193b8496af5e1ef23188e7589ade24", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub mod foo {\n+    pub use super::*;\n+}"}, {"sha": "2fcec51912e45f43421f317d7898c408a47219eb", "filename": "src/test/compile-fail/issue-29181.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ad4cdf7077193b8496af5e1ef23188e7589ade24/src%2Ftest%2Fcompile-fail%2Fissue-29181.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad4cdf7077193b8496af5e1ef23188e7589ade24/src%2Ftest%2Fcompile-fail%2Fissue-29181.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-29181.rs?ref=ad4cdf7077193b8496af5e1ef23188e7589ade24", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-29181.rs\n+\n+extern crate issue_29181 as foo;\n+\n+fn main() {\n+    0.homura(); //~ ERROR no method named `homura` found\n+}"}]}