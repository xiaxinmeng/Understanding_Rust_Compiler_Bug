{"sha": "767550ef0fc0a01abd8dc50fead0967d215eca41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NzU1MGVmMGZjMGEwMWFiZDhkYzUwZmVhZDA5NjdkMjE1ZWNhNDE=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-10-02T03:14:01Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-10-02T03:29:57Z"}, "message": "Add `rustc_peek` support for `IndirectlyMutableLocals`", "tree": {"sha": "a2256d252c5e0d80c216b59b435481f2cfb8842f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2256d252c5e0d80c216b59b435481f2cfb8842f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/767550ef0fc0a01abd8dc50fead0967d215eca41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/767550ef0fc0a01abd8dc50fead0967d215eca41", "html_url": "https://github.com/rust-lang/rust/commit/767550ef0fc0a01abd8dc50fead0967d215eca41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/767550ef0fc0a01abd8dc50fead0967d215eca41/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f18535fa46752ac33ceaebe71386cf77a6df8f9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f18535fa46752ac33ceaebe71386cf77a6df8f9a", "html_url": "https://github.com/rust-lang/rust/commit/f18535fa46752ac33ceaebe71386cf77a6df8f9a"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "6edd28a4259a5ed59c62957c39fd06d641b6540e", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/767550ef0fc0a01abd8dc50fead0967d215eca41/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/767550ef0fc0a01abd8dc50fead0967d215eca41/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=767550ef0fc0a01abd8dc50fead0967d215eca41", "patch": "@@ -17,6 +17,7 @@ use crate::dataflow::DataflowResultsCursor;\n use crate::dataflow::{\n     DefinitelyInitializedPlaces, MaybeInitializedPlaces, MaybeUninitializedPlaces\n };\n+use crate::dataflow::IndirectlyMutableLocals;\n use crate::dataflow::move_paths::{MovePathIndex, LookupResult};\n use crate::dataflow::move_paths::{HasMoveData, MoveData};\n \n@@ -51,6 +52,10 @@ impl<'tcx> MirPass<'tcx> for SanityCheck {\n             do_dataflow(tcx, body, def_id, &attributes, &dead_unwinds,\n                         DefinitelyInitializedPlaces::new(tcx, body, &mdpe),\n                         |bd, i| DebugFormatted::new(&bd.move_data().move_paths[i]));\n+        let flow_indirectly_mut =\n+            do_dataflow(tcx, body, def_id, &attributes, &dead_unwinds,\n+                        IndirectlyMutableLocals::new(tcx, body, param_env),\n+                        |_, i| DebugFormatted::new(&i));\n \n         if has_rustc_mir_with(&attributes, sym::rustc_peek_maybe_init).is_some() {\n             sanity_check_via_rustc_peek(tcx, body, def_id, &attributes, &flow_inits);\n@@ -61,6 +66,9 @@ impl<'tcx> MirPass<'tcx> for SanityCheck {\n         if has_rustc_mir_with(&attributes, sym::rustc_peek_definite_init).is_some() {\n             sanity_check_via_rustc_peek(tcx, body, def_id, &attributes, &flow_def_inits);\n         }\n+        if has_rustc_mir_with(&attributes, sym::rustc_peek_indirectly_mutable).is_some() {\n+            sanity_check_via_rustc_peek(tcx, body, def_id, &attributes, &flow_indirectly_mut);\n+        }\n         if has_rustc_mir_with(&attributes, sym::stop_after_dataflow).is_some() {\n             tcx.sess.fatal(\"stop_after_dataflow ended compilation\");\n         }\n@@ -252,9 +260,33 @@ impl<'tcx, O> RustcPeekAt<'tcx> for O\n                     tcx.sess.span_err(call.span, \"rustc_peek: bit not set\");\n                 }\n             }\n+\n             LookupResult::Parent(..) => {\n                 tcx.sess.span_err(call.span, \"rustc_peek: argument untracked\");\n             }\n         }\n     }\n }\n+\n+impl<'tcx> RustcPeekAt<'tcx> for IndirectlyMutableLocals<'_, 'tcx> {\n+    fn peek_at(\n+        &self,\n+        tcx: TyCtxt<'tcx>,\n+        place: &mir::Place<'tcx>,\n+        flow_state: &BitSet<Local>,\n+        call: PeekCall,\n+    ) {\n+        warn!(\"peek_at: place={:?}\", place);\n+        let local = match place {\n+            mir::Place { base: mir::PlaceBase::Local(l), projection: box [] } => *l,\n+            _ => {\n+                tcx.sess.span_err(call.span, \"rustc_peek: argument was not a local\");\n+                return;\n+            }\n+        };\n+\n+        if !flow_state.contains(local) {\n+            tcx.sess.span_err(call.span, \"rustc_peek: bit not set\");\n+        }\n+    }\n+}"}, {"sha": "82c47e6dbb75879ec01f1537ccc26dcefcc994c8", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/767550ef0fc0a01abd8dc50fead0967d215eca41/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/767550ef0fc0a01abd8dc50fead0967d215eca41/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=767550ef0fc0a01abd8dc50fead0967d215eca41", "patch": "@@ -597,6 +597,7 @@ symbols! {\n         rustc_peek_definite_init,\n         rustc_peek_maybe_init,\n         rustc_peek_maybe_uninit,\n+        rustc_peek_indirectly_mutable,\n         rustc_private,\n         rustc_proc_macro_decls,\n         rustc_promotable,"}]}