{"sha": "5606653f01b6b2fbcbaa1b2ff37e04d4e66486f8", "node_id": "C_kwDOAAsO6NoAKDU2MDY2NTNmMDFiNmIyZmJjYmFhMWIyZmYzN2UwNGQ0ZTY2NDg2Zjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-18T04:44:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-18T04:44:48Z"}, "message": "Rollup merge of #110465 - WaffleLapkin:assure_everyone_that_has_type_flags_is_fast, r=oli-obk\n\nAssure everyone that `has_type_flags` is fast\n\n`number_of_people_who_tripped_on_this += 1`\n\nr? ``@oli-obk``", "tree": {"sha": "72032c7a03dd418bdcf725ec92a8feb13f0ca55e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72032c7a03dd418bdcf725ec92a8feb13f0ca55e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5606653f01b6b2fbcbaa1b2ff37e04d4e66486f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkPiBACRBK7hj4Ov3rIwAAflYIAJH1GAHbETp2momM5+nvPaU0\nvBQdsc7UHZGQ3u0V9oqYaPSZbFb28cuQQkX+3bs6CtXQBIUMmQcBaD5s8G82ssY+\ncO+NiVYeoXaE2jI3hVMfCsscr1KNj6r3ppr4sOKuxTXxdUWzX5+1e+Vtw4h34t58\nlL3nFU+jZk+Dm+9orSSg1W9sbdJo/6DLJm6QVMGYwL0IgA49u9nUPkyW5AJxBF0R\npLrlvism35tLzR1c62+vhay3cZA1GnmiJ5bXKOVE/XMYfeL9IjOFwDzpnoUhu3Rc\nwoAWWCSgeBxnC00N/j9iICxGwQUYRT50jonI2ChQmuF2VzNRJ+wSb9B9ARFN5GE=\n=YKuM\n-----END PGP SIGNATURE-----\n", "payload": "tree 72032c7a03dd418bdcf725ec92a8feb13f0ca55e\nparent d97b39d3a0990d8d062f263e8e0898e0710a37e0\nparent c960a043e368c1e89974dbed244a3fdae222109a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1681793088 +0200\ncommitter GitHub <noreply@github.com> 1681793088 +0200\n\nRollup merge of #110465 - WaffleLapkin:assure_everyone_that_has_type_flags_is_fast, r=oli-obk\n\nAssure everyone that `has_type_flags` is fast\n\n`number_of_people_who_tripped_on_this += 1`\n\nr? ``@oli-obk``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5606653f01b6b2fbcbaa1b2ff37e04d4e66486f8", "html_url": "https://github.com/rust-lang/rust/commit/5606653f01b6b2fbcbaa1b2ff37e04d4e66486f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5606653f01b6b2fbcbaa1b2ff37e04d4e66486f8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d97b39d3a0990d8d062f263e8e0898e0710a37e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d97b39d3a0990d8d062f263e8e0898e0710a37e0", "html_url": "https://github.com/rust-lang/rust/commit/d97b39d3a0990d8d062f263e8e0898e0710a37e0"}, {"sha": "c960a043e368c1e89974dbed244a3fdae222109a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c960a043e368c1e89974dbed244a3fdae222109a", "html_url": "https://github.com/rust-lang/rust/commit/c960a043e368c1e89974dbed244a3fdae222109a"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "1b07f52afca925151da838704662e0822f58d5c4", "filename": "compiler/rustc_middle/src/ty/visit.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5606653f01b6b2fbcbaa1b2ff37e04d4e66486f8/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5606653f01b6b2fbcbaa1b2ff37e04d4e66486f8/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs?ref=5606653f01b6b2fbcbaa1b2ff37e04d4e66486f8", "patch": "@@ -33,6 +33,14 @@ pub trait TypeVisitableExt<'tcx>: TypeVisitable<TyCtxt<'tcx>> {\n     }\n \n     fn has_type_flags(&self, flags: TypeFlags) -> bool {\n+        // N.B. Even though this uses a visitor, the visitor does not actually\n+        //      recurse through the whole `TypeVisitable` implementor type.\n+        //\n+        //      Instead it stops on the first \"level\", visiting types, regions,\n+        //      consts and predicates just fetches their type flags.\n+        //\n+        //      Thus this is a lot faster than it might seem and should be\n+        //      optimized to a simple field access.\n         let res =\n             self.visit_with(&mut HasTypeFlagsVisitor { flags }).break_value() == Some(FoundFlags);\n         trace!(?self, ?flags, ?res, \"has_type_flags\");"}]}