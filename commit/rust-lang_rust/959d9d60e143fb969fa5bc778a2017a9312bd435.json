{"sha": "959d9d60e143fb969fa5bc778a2017a9312bd435", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OWQ5ZDYwZTE0M2ZiOTY5ZmE1YmM3NzhhMjAxN2E5MzEyYmQ0MzU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-09-10T08:50:41Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-09-10T09:25:09Z"}, "message": "check_loans.rs Visitor refactoring (#7081): unify CheckLoan{Ctxt,Visitor}.", "tree": {"sha": "29ed5030269459edd9c74f3dc7807497e457a307", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29ed5030269459edd9c74f3dc7807497e457a307"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/959d9d60e143fb969fa5bc778a2017a9312bd435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/959d9d60e143fb969fa5bc778a2017a9312bd435", "html_url": "https://github.com/rust-lang/rust/commit/959d9d60e143fb969fa5bc778a2017a9312bd435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/959d9d60e143fb969fa5bc778a2017a9312bd435/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "485446b97ff9c59939b8e583adf447b0ad211bd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/485446b97ff9c59939b8e583adf447b0ad211bd8", "html_url": "https://github.com/rust-lang/rust/commit/485446b97ff9c59939b8e583adf447b0ad211bd8"}], "stats": {"total": 67, "additions": 30, "deletions": 37}, "files": [{"sha": "9280bbf1817a73c3bd03ef8de061cf9d2d13662c", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 30, "deletions": 37, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/959d9d60e143fb969fa5bc778a2017a9312bd435/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/959d9d60e143fb969fa5bc778a2017a9312bd435/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=959d9d60e143fb969fa5bc778a2017a9312bd435", "patch": "@@ -40,24 +40,23 @@ struct CheckLoanCtxt<'self> {\n     reported: @mut HashSet<ast::NodeId>,\n }\n \n-struct CheckLoanVisitor;\n+impl<'self> Visitor<()> for CheckLoanCtxt<'self> {\n \n-impl<'self> Visitor<CheckLoanCtxt<'self>> for CheckLoanVisitor {\n-    fn visit_expr<'a>(&mut self, ex:@ast::Expr, e:CheckLoanCtxt<'a>) {\n-        check_loans_in_expr(self, ex, e);\n+    fn visit_expr(&mut self, ex:@ast::Expr, _:()) {\n+        check_loans_in_expr(self, ex);\n     }\n-    fn visit_local(&mut self, l:@ast::Local, e:CheckLoanCtxt) {\n-        check_loans_in_local(self, l, e);\n+    fn visit_local(&mut self, l:@ast::Local, _:()) {\n+        check_loans_in_local(self, l);\n     }\n-    fn visit_block(&mut self, b:&ast::Block, e:CheckLoanCtxt) {\n-        check_loans_in_block(self, b, e);\n+    fn visit_block(&mut self, b:&ast::Block, _:()) {\n+        check_loans_in_block(self, b);\n     }\n-    fn visit_pat(&mut self, p:@ast::Pat, e:CheckLoanCtxt) {\n-        check_loans_in_pat(self, p, e);\n+    fn visit_pat(&mut self, p:@ast::Pat, _:()) {\n+        check_loans_in_pat(self, p);\n     }\n     fn visit_fn(&mut self, fk:&visit::fn_kind, fd:&ast::fn_decl,\n-                b:&ast::Block, s:Span, n:ast::NodeId, e:CheckLoanCtxt) {\n-        check_loans_in_fn(self, fk, fd, b, s, n, e);\n+                b:&ast::Block, s:Span, n:ast::NodeId, _:()) {\n+        check_loans_in_fn(self, fk, fd, b, s, n);\n     }\n }\n \n@@ -68,16 +67,15 @@ pub fn check_loans(bccx: @BorrowckCtxt,\n                    body: &ast::Block) {\n     debug!(\"check_loans(body id=%?)\", body.id);\n \n-    let clcx = CheckLoanCtxt {\n+    let mut clcx = CheckLoanCtxt {\n         bccx: bccx,\n         dfcx_loans: dfcx_loans,\n         move_data: @move_data,\n         all_loans: all_loans,\n         reported: @mut HashSet::new(),\n     };\n \n-    let mut vt = CheckLoanVisitor;\n-    vt.visit_block(body, clcx);\n+    clcx.visit_block(body, ());\n }\n \n enum MoveError {\n@@ -725,13 +723,12 @@ impl<'self> CheckLoanCtxt<'self> {\n     }\n }\n \n-fn check_loans_in_fn<'a>(visitor: &mut CheckLoanVisitor,\n+fn check_loans_in_fn<'a>(this: &mut CheckLoanCtxt<'a>,\n                          fk: &visit::fn_kind,\n                          decl: &ast::fn_decl,\n                          body: &ast::Block,\n                          sp: Span,\n-                         id: ast::NodeId,\n-                         this: CheckLoanCtxt<'a>) {\n+                         id: ast::NodeId) {\n     match *fk {\n         visit::fk_item_fn(*) |\n         visit::fk_method(*) => {\n@@ -745,9 +742,9 @@ fn check_loans_in_fn<'a>(visitor: &mut CheckLoanVisitor,\n         }\n     }\n \n-    visit::walk_fn(visitor, fk, decl, body, sp, id, this);\n+    visit::walk_fn(this, fk, decl, body, sp, id, ());\n \n-    fn check_captured_variables(this: CheckLoanCtxt,\n+    fn check_captured_variables(this: &CheckLoanCtxt,\n                                 closure_id: ast::NodeId,\n                                 span: Span) {\n         let cap_vars = this.bccx.capture_map.get(&closure_id);\n@@ -765,7 +762,7 @@ fn check_loans_in_fn<'a>(visitor: &mut CheckLoanVisitor,\n         }\n         return;\n \n-        fn check_by_move_capture(this: CheckLoanCtxt,\n+        fn check_by_move_capture(this: &CheckLoanCtxt,\n                                  closure_id: ast::NodeId,\n                                  cap_var: &moves::CaptureVar,\n                                  move_path: @LoanPath) {\n@@ -788,16 +785,14 @@ fn check_loans_in_fn<'a>(visitor: &mut CheckLoanVisitor,\n     }\n }\n \n-fn check_loans_in_local<'a>(vt: &mut CheckLoanVisitor,\n-                            local: @ast::Local,\n-                            this: CheckLoanCtxt<'a>) {\n-    visit::walk_local(vt, local, this);\n+fn check_loans_in_local<'a>(this: &mut CheckLoanCtxt<'a>,\n+                            local: @ast::Local) {\n+    visit::walk_local(this, local, ());\n }\n \n-fn check_loans_in_expr<'a>(vt: &mut CheckLoanVisitor,\n-                           expr: @ast::Expr,\n-                           this: CheckLoanCtxt<'a>) {\n-    visit::walk_expr(vt, expr, this);\n+fn check_loans_in_expr<'a>(this: &mut CheckLoanCtxt<'a>,\n+                           expr: @ast::Expr) {\n+    visit::walk_expr(this, expr, ());\n \n     debug!(\"check_loans_in_expr(expr=%s)\",\n            expr.repr(this.tcx()));\n@@ -848,20 +843,18 @@ fn check_loans_in_expr<'a>(vt: &mut CheckLoanVisitor,\n     }\n }\n \n-fn check_loans_in_pat<'a>(vt: &mut CheckLoanVisitor,\n-                          pat: @ast::Pat,\n-                          this: CheckLoanCtxt<'a>)\n+fn check_loans_in_pat<'a>(this: &mut CheckLoanCtxt<'a>,\n+                          pat: @ast::Pat)\n {\n     this.check_for_conflicting_loans(pat.id);\n     this.check_move_out_from_id(pat.id, pat.span);\n-    visit::walk_pat(vt, pat, this);\n+    visit::walk_pat(this, pat, ());\n }\n \n-fn check_loans_in_block<'a>(vt: &mut CheckLoanVisitor,\n-                            blk: &ast::Block,\n-                            this: CheckLoanCtxt<'a>)\n+fn check_loans_in_block<'a>(this: &mut CheckLoanCtxt<'a>,\n+                            blk: &ast::Block)\n {\n-    visit::walk_block(vt, blk, this);\n+    visit::walk_block(this, blk, ());\n     this.check_for_conflicting_loans(blk.id);\n }\n "}]}