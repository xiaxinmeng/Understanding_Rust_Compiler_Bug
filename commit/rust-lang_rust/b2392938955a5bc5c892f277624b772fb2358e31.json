{"sha": "b2392938955a5bc5c892f277624b772fb2358e31", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMzkyOTM4OTU1YTViYzVjODkyZjI3NzYyNGI3NzJmYjIzNThlMzE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-30T17:18:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-30T17:18:38Z"}, "message": "Rollup merge of #50316 - ehuss:fix-doc-links, r=frewsxcv\n\nFix some broken links in docs.", "tree": {"sha": "b844be52c8bf1c9fcc4b82eb47fdeb54472600f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b844be52c8bf1c9fcc4b82eb47fdeb54472600f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2392938955a5bc5c892f277624b772fb2358e31", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa50/uCRBK7hj4Ov3rIwAAdHIIAH4PuHYyzk54p1LxFk6bZYHi\n0MvsNaKzT4HVYdBdPl9qKnC27+toOO9d1forsp2V0InLqY3nkCfKuwPHDlqINPXP\nOH90gu7QCxdtDcXkUprh+K0i3mHxKSm0+UrzFuu6PMC7Lj4hSJV6hJC2QvbJ3745\nK8Adjr9TspbU7SCYCrweackiTHyMBCh3dT2vKWBPdsCxlbAb13+uGzhMbImbp4bs\ninEVWXIE25pck1vMkYPL6L1RKH57v3QVW1gyuEITz/JGYUhgNB+f/CIPOxmcn2Jc\nSDlXKtQqvF0dr9jICfI4oTMkyi4nbRcCni0onLIpjRCmkdF49AcAcOebkLKtrpE=\n=MSkI\n-----END PGP SIGNATURE-----\n", "payload": "tree b844be52c8bf1c9fcc4b82eb47fdeb54472600f3\nparent 1308d99cacd68057a20a933b8cb223210da6b9c2\nparent 269d2790946858dd1b504c21c54a267ac63dc15a\nauthor kennytm <kennytm@gmail.com> 1525108718 +0800\ncommitter GitHub <noreply@github.com> 1525108718 +0800\n\nRollup merge of #50316 - ehuss:fix-doc-links, r=frewsxcv\n\nFix some broken links in docs.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2392938955a5bc5c892f277624b772fb2358e31", "html_url": "https://github.com/rust-lang/rust/commit/b2392938955a5bc5c892f277624b772fb2358e31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2392938955a5bc5c892f277624b772fb2358e31/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1308d99cacd68057a20a933b8cb223210da6b9c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1308d99cacd68057a20a933b8cb223210da6b9c2", "html_url": "https://github.com/rust-lang/rust/commit/1308d99cacd68057a20a933b8cb223210da6b9c2"}, {"sha": "269d2790946858dd1b504c21c54a267ac63dc15a", "url": "https://api.github.com/repos/rust-lang/rust/commits/269d2790946858dd1b504c21c54a267ac63dc15a", "html_url": "https://github.com/rust-lang/rust/commit/269d2790946858dd1b504c21c54a267ac63dc15a"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "b27bd3142e1ed915ac2d2c83d7077f6bbfb50b10", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2392938955a5bc5c892f277624b772fb2358e31/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2392938955a5bc5c892f277624b772fb2358e31/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=b2392938955a5bc5c892f277624b772fb2358e31", "patch": "@@ -1094,6 +1094,8 @@ pub trait Iterator {\n     /// `flatten()` a three-dimensional array the result will be\n     /// two-dimensional and not one-dimensional. To get a one-dimensional\n     /// structure, you have to `flatten()` again.\n+    ///\n+    /// [`flat_map()`]: #method.flat_map\n     #[inline]\n     #[unstable(feature = \"iterator_flatten\", issue = \"48213\")]\n     fn flatten(self) -> Flatten<Self>"}, {"sha": "c074adfd570e339adaa765b09080eb750fe4e44c", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2392938955a5bc5c892f277624b772fb2358e31/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2392938955a5bc5c892f277624b772fb2358e31/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=b2392938955a5bc5c892f277624b772fb2358e31", "patch": "@@ -602,6 +602,8 @@ unsafe impl<'a, T: ?Sized> Freeze for &'a mut T {}\n /// `Pin` pointer.\n ///\n /// This trait is automatically implemented for almost every type.\n+///\n+/// [`Pin`]: ../mem/struct.Pin.html\n #[unstable(feature = \"pin\", issue = \"49150\")]\n pub unsafe auto trait Unpin {}\n "}, {"sha": "b50652ed6b557759ddc7949eafa511b36e76fa40", "filename": "src/libstd/collections/hash/table.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2392938955a5bc5c892f277624b772fb2358e31/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2392938955a5bc5c892f277624b772fb2358e31/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs?ref=b2392938955a5bc5c892f277624b772fb2358e31", "patch": "@@ -79,7 +79,7 @@ impl TaggedHashUintPtr {\n ///\n /// Essential invariants of this structure:\n ///\n-///   - if t.hashes[i] == EMPTY_BUCKET, then `Bucket::at_index(&t, i).raw`\n+///   - if `t.hashes[i] == EMPTY_BUCKET`, then `Bucket::at_index(&t, i).raw`\n ///     points to 'undefined' contents. Don't read from it. This invariant is\n ///     enforced outside this module with the `EmptyBucket`, `FullBucket`,\n ///     and `SafeHash` types."}, {"sha": "8164f52d3c34d570b202f75d36d9fe64340a6ae8", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2392938955a5bc5c892f277624b772fb2358e31/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2392938955a5bc5c892f277624b772fb2358e31/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=b2392938955a5bc5c892f277624b772fb2358e31", "patch": "@@ -1118,6 +1118,7 @@ impl CStr {\n     ///\n     /// [`Cow`]: ../borrow/enum.Cow.html\n     /// [`Borrowed`]: ../borrow/enum.Cow.html#variant.Borrowed\n+    /// [`Owned`]: ../borrow/enum.Cow.html#variant.Owned\n     /// [`str`]: ../primitive.str.html\n     /// [`String`]: ../string/struct.String.html\n     ///"}]}