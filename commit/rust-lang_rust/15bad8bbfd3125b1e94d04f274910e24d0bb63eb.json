{"sha": "15bad8bbfd3125b1e94d04f274910e24d0bb63eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YmFkOGJiZmQzMTI1YjFlOTRkMDRmMjc0OTEwZTI0ZDBiYjYzZWI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-20T22:25:53Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-20T22:25:53Z"}, "message": "Extend incorrect float literal recovery to account for suffixes", "tree": {"sha": "4533e892a8820a9ee4886d61f000e3f5e1faa6ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4533e892a8820a9ee4886d61f000e3f5e1faa6ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15bad8bbfd3125b1e94d04f274910e24d0bb63eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15bad8bbfd3125b1e94d04f274910e24d0bb63eb", "html_url": "https://github.com/rust-lang/rust/commit/15bad8bbfd3125b1e94d04f274910e24d0bb63eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15bad8bbfd3125b1e94d04f274910e24d0bb63eb/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e387597a8f789ab6e37e6ce1bf67c8c45d4827c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e387597a8f789ab6e37e6ce1bf67c8c45d4827c3", "html_url": "https://github.com/rust-lang/rust/commit/e387597a8f789ab6e37e6ce1bf67c8c45d4827c3"}], "stats": {"total": 94, "additions": 74, "deletions": 20}, "files": [{"sha": "038d949d24aa697771db2e12872c5f2d813bdf90", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/15bad8bbfd3125b1e94d04f274910e24d0bb63eb/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15bad8bbfd3125b1e94d04f274910e24d0bb63eb/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=15bad8bbfd3125b1e94d04f274910e24d0bb63eb", "patch": "@@ -1990,27 +1990,39 @@ impl<'a> Parser<'a> {\n                 result.unwrap()\n             }\n             token::Dot if self.look_ahead(1, |t| match t {\n-                token::Literal(parse::token::Lit::Integer(_) , None) => true,\n+                token::Literal(parse::token::Lit::Integer(_) , _) => true,\n                 _ => false,\n             }) => { // recover from `let x = .4;`\n                 let lo = self.span;\n                 self.bump();\n                 if let token::Literal(\n                     parse::token::Lit::Integer(val),\n-                    None\n+                    suffix,\n                 ) = self.token {\n+                    let suffix = suffix.and_then(|s| {\n+                        let s = s.as_str().get();\n+                        if [\"f32\", \"f64\"].contains(&s) {\n+                            Some(s)\n+                        } else {\n+                            None\n+                        }\n+                    }).unwrap_or(\"\");\n                     self.bump();\n                     let sp = lo.to(self.prev_span);\n                     let mut err = self.diagnostic()\n                         .struct_span_err(sp, \"float literals must have an integer part\");\n                     err.span_suggestion_with_applicability(\n                         sp,\n                         \"must have an integer part\",\n-                        format!(\"0.{}\", val),\n+                        format!(\"0.{}{}\", val, suffix),\n                         Applicability::MachineApplicable,\n                     );\n                     err.emit();\n-                    return Ok(ast::LitKind::Float(val, ast::FloatTy::F32));\n+                    return Ok(match suffix {\n+                        \"f32\" => ast::LitKind::Float(val, ast::FloatTy::F32),\n+                        \"f64\" => ast::LitKind::Float(val, ast::FloatTy::F64),\n+                        _ => ast::LitKind::FloatUnsuffixed(val),\n+                    });\n                 } else {\n                     unreachable!();\n                 };"}, {"sha": "e9ffeaf6c8901bc22fb3918053f350325be8274f", "filename": "src/test/ui/issues/issue-52496.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15bad8bbfd3125b1e94d04f274910e24d0bb63eb/src%2Ftest%2Fui%2Fissues%2Fissue-52496.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15bad8bbfd3125b1e94d04f274910e24d0bb63eb/src%2Ftest%2Fui%2Fissues%2Fissue-52496.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52496.rs?ref=15bad8bbfd3125b1e94d04f274910e24d0bb63eb", "patch": "@@ -4,7 +4,6 @@ fn main() {\n     let _ = Foo { bar: .5, baz: 42 };\n     //~^ ERROR float literals must have an integer part\n     //~| ERROR missing field `bat` in initializer of `Foo`\n-    //~| ERROR mismatched types\n     let bar = 1.5f32;\n     let _ = Foo { bar.into(), bat: -1, . };\n     //~^ ERROR expected one of"}, {"sha": "12fe7e7fc1f05bdaf3fa25cfa8922b4151c5127d", "filename": "src/test/ui/issues/issue-52496.stderr", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/15bad8bbfd3125b1e94d04f274910e24d0bb63eb/src%2Ftest%2Fui%2Fissues%2Fissue-52496.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15bad8bbfd3125b1e94d04f274910e24d0bb63eb/src%2Ftest%2Fui%2Fissues%2Fissue-52496.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52496.stderr?ref=15bad8bbfd3125b1e94d04f274910e24d0bb63eb", "patch": "@@ -5,39 +5,29 @@ LL |     let _ = Foo { bar: .5, baz: 42 };\n    |                        ^^ help: must have an integer part: `0.5`\n \n error: expected one of `,` or `}`, found `.`\n-  --> $DIR/issue-52496.rs:9:22\n+  --> $DIR/issue-52496.rs:8:22\n    |\n LL |     let _ = Foo { bar.into(), bat: -1, . };\n    |             ---      ^ expected one of `,` or `}` here\n    |             |\n    |             while parsing this struct\n \n error: expected identifier, found `.`\n-  --> $DIR/issue-52496.rs:9:40\n+  --> $DIR/issue-52496.rs:8:40\n    |\n LL |     let _ = Foo { bar.into(), bat: -1, . };\n    |             ---                        ^ expected identifier\n    |             |\n    |             while parsing this struct\n \n-error[E0308]: mismatched types\n-  --> $DIR/issue-52496.rs:4:24\n-   |\n-LL |     let _ = Foo { bar: .5, baz: 42 };\n-   |                        ^^ expected f64, found f32\n-help: change the type of the numeric literal from `f32` to `f64`\n-   |\n-LL |     let _ = Foo { bar: .5f64, baz: 42 };\n-   |                        ^^^^^\n-\n error[E0063]: missing field `bat` in initializer of `Foo`\n   --> $DIR/issue-52496.rs:4:13\n    |\n LL |     let _ = Foo { bar: .5, baz: 42 };\n    |             ^^^ missing `bat`\n \n error[E0308]: mismatched types\n-  --> $DIR/issue-52496.rs:9:19\n+  --> $DIR/issue-52496.rs:8:19\n    |\n LL |     let _ = Foo { bar.into(), bat: -1, . };\n    |                   ^^^ expected f64, found f32\n@@ -47,12 +37,12 @@ LL |     let _ = Foo { bar.into().into(), bat: -1, . };\n    |                   ^^^^^^^^^^\n \n error[E0063]: missing field `baz` in initializer of `Foo`\n-  --> $DIR/issue-52496.rs:9:13\n+  --> $DIR/issue-52496.rs:8:13\n    |\n LL |     let _ = Foo { bar.into(), bat: -1, . };\n    |             ^^^ missing `baz`\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 6 previous errors\n \n Some errors occurred: E0063, E0308.\n For more information about an error, try `rustc --explain E0063`."}, {"sha": "506ef8900b881e69d95737365d0dc00135ec19a0", "filename": "src/test/ui/suggestions/recover-invalid-float.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/15bad8bbfd3125b1e94d04f274910e24d0bb63eb/src%2Ftest%2Fui%2Fsuggestions%2Frecover-invalid-float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15bad8bbfd3125b1e94d04f274910e24d0bb63eb/src%2Ftest%2Fui%2Fsuggestions%2Frecover-invalid-float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Frecover-invalid-float.rs?ref=15bad8bbfd3125b1e94d04f274910e24d0bb63eb", "patch": "@@ -0,0 +1,11 @@\n+fn main() {\n+    let _: usize = .3;\n+    //~^ ERROR float literals must have an integer part\n+    //~| ERROR mismatched types\n+    let _: usize = .42f32;\n+    //~^ ERROR float literals must have an integer part\n+    //~| ERROR mismatched types\n+    let _: usize = .5f64;\n+    //~^ ERROR float literals must have an integer part\n+    //~| ERROR mismatched types\n+}"}, {"sha": "c464676b444cc391344ad6ba0ceac1c5b058269f", "filename": "src/test/ui/suggestions/recover-invalid-float.stderr", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/15bad8bbfd3125b1e94d04f274910e24d0bb63eb/src%2Ftest%2Fui%2Fsuggestions%2Frecover-invalid-float.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15bad8bbfd3125b1e94d04f274910e24d0bb63eb/src%2Ftest%2Fui%2Fsuggestions%2Frecover-invalid-float.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Frecover-invalid-float.stderr?ref=15bad8bbfd3125b1e94d04f274910e24d0bb63eb", "patch": "@@ -0,0 +1,42 @@\n+error: float literals must have an integer part\n+  --> $DIR/recover-invalid-float.rs:2:20\n+   |\n+LL |     let _: usize = .3;\n+   |                    ^^ help: must have an integer part: `0.3`\n+\n+error: float literals must have an integer part\n+  --> $DIR/recover-invalid-float.rs:5:20\n+   |\n+LL |     let _: usize = .42f32;\n+   |                    ^^^^^^ help: must have an integer part: `0.42f32`\n+\n+error: float literals must have an integer part\n+  --> $DIR/recover-invalid-float.rs:8:20\n+   |\n+LL |     let _: usize = .5f64;\n+   |                    ^^^^^ help: must have an integer part: `0.5f64`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/recover-invalid-float.rs:2:20\n+   |\n+LL |     let _: usize = .3;\n+   |                    ^^ expected usize, found floating-point number\n+   |\n+   = note: expected type `usize`\n+              found type `{float}`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/recover-invalid-float.rs:5:20\n+   |\n+LL |     let _: usize = .42f32;\n+   |                    ^^^^^^ expected usize, found f32\n+\n+error[E0308]: mismatched types\n+  --> $DIR/recover-invalid-float.rs:8:20\n+   |\n+LL |     let _: usize = .5f64;\n+   |                    ^^^^^ expected usize, found f64\n+\n+error: aborting due to 6 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}