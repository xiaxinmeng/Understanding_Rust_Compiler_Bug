{"sha": "015e4441f5c540300477a7937a1517d407bc8436", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNWU0NDQxZjVjNTQwMzAwNDc3YTc5MzdhMTUxN2Q0MDdiYzg0MzY=", "commit": {"author": {"name": "Denis Merigoux", "email": "denis.merigoux@gmail.com", "date": "2018-10-03T14:56:24Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-11-16T13:08:18Z"}, "message": "Finished moving backend-agnostic code to rustc_codegen_ssa", "tree": {"sha": "cc2104db0ba7b33703e0f59749f5ec8b287bc5b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc2104db0ba7b33703e0f59749f5ec8b287bc5b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/015e4441f5c540300477a7937a1517d407bc8436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/015e4441f5c540300477a7937a1517d407bc8436", "html_url": "https://github.com/rust-lang/rust/commit/015e4441f5c540300477a7937a1517d407bc8436", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/015e4441f5c540300477a7937a1517d407bc8436/comments", "author": {"login": "denismerigoux", "id": 1766128, "node_id": "MDQ6VXNlcjE3NjYxMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1766128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denismerigoux", "html_url": "https://github.com/denismerigoux", "followers_url": "https://api.github.com/users/denismerigoux/followers", "following_url": "https://api.github.com/users/denismerigoux/following{/other_user}", "gists_url": "https://api.github.com/users/denismerigoux/gists{/gist_id}", "starred_url": "https://api.github.com/users/denismerigoux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denismerigoux/subscriptions", "organizations_url": "https://api.github.com/users/denismerigoux/orgs", "repos_url": "https://api.github.com/users/denismerigoux/repos", "events_url": "https://api.github.com/users/denismerigoux/events{/privacy}", "received_events_url": "https://api.github.com/users/denismerigoux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0a428ee702329b0ad818a67a6ecc9617df267c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a428ee702329b0ad818a67a6ecc9617df267c7", "html_url": "https://github.com/rust-lang/rust/commit/c0a428ee702329b0ad818a67a6ecc9617df267c7"}], "stats": {"total": 264, "additions": 110, "deletions": 154}, "files": [{"sha": "d0e229087287fd197058843206fb2d717e3b8003", "filename": "src/librustc_codegen_llvm/abi.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fabi.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -9,16 +9,17 @@\n // except according to those terms.\n \n use llvm::{self, AttributePlace};\n-use builder::{Builder, MemFlags};\n+use rustc_codegen_ssa::MemFlags;\n+use builder::Builder;\n use context::CodegenCx;\n-use mir::place::PlaceRef;\n-use mir::operand::OperandValue;\n+use rustc_codegen_ssa::mir::place::PlaceRef;\n+use rustc_codegen_ssa::mir::operand::OperandValue;\n use type_::Type;\n use type_of::{LayoutLlvmExt, PointerKind};\n use value::Value;\n use rustc_target::abi::call::ArgType;\n \n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n use rustc_target::abi::{HasDataLayout, LayoutOf, Size, TyLayout, Abi as LayoutAbi};\n use rustc::ty::{self, Ty, Instance};"}, {"sha": "c0e7f9498099329364b3c2fd33a1b40291a1daed", "filename": "src/librustc_codegen_llvm/asm.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fasm.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -15,10 +15,10 @@ use builder::Builder;\n use value::Value;\n \n use rustc::hir;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n-use mir::place::PlaceRef;\n-use mir::operand::OperandValue;\n+use rustc_codegen_ssa::mir::place::PlaceRef;\n+use rustc_codegen_ssa::mir::operand::OperandValue;\n \n use std::ffi::CString;\n use libc::{c_uint, c_char};"}, {"sha": "a6ecd1ab55d399d1a9956e5eecb8bfed41aecceb", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -21,7 +21,7 @@ use rustc::ty::query::Providers;\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_target::spec::PanicStrategy;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n use attributes;\n use llvm::{self, Attribute};"}, {"sha": "e3143e89f79f7cd3384e1c2e0d6d9e6b19e25198", "filename": "src/librustc_codegen_llvm/back/link.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -22,7 +22,8 @@ use rustc::session::search_paths::PathKind;\n use rustc::session::Session;\n use rustc::middle::cstore::{NativeLibrary, LibSource, NativeLibraryKind};\n use rustc::middle::dependency_format::Linkage;\n-use {CodegenResults, CrateInfo};\n+use rustc_codegen_ssa::CrateInfo;\n+use CodegenResults;\n use rustc::util::common::time;\n use rustc_fs_util::fix_windows_verbatim_for_gcc;\n use rustc::hir::def_id::CrateNum;"}, {"sha": "1e167046daf139caf13b27bfd0ffcd75f02047f4", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -27,8 +27,7 @@ use time_graph::{self, TimeGraph, Timeline};\n use llvm::{self, DiagnosticInfo, PassManager, SMDiagnostic};\n use llvm_util;\n use {CodegenResults, ModuleLlvm};\n-use rustc_codegen_ssa::{ModuleCodegen, ModuleKind, CachedModuleCodegen, CompiledModule};\n-use CrateInfo;\n+use rustc_codegen_ssa::{ModuleCodegen, ModuleKind, CachedModuleCodegen, CompiledModule, CrateInfo};\n use rustc::hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc::ty::TyCtxt;\n use rustc::util::common::{time_ext, time_depth, set_time_depth, print_time_passes_entry};"}, {"sha": "5f8601cb6da63edab14c1ac78a3558998f0a1c0d", "filename": "src/librustc_codegen_llvm/base.rs", "status": "modified", "additions": 11, "deletions": 45, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbase.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -24,68 +24,34 @@\n //!     int) and rec(x=int, y=int, z=int) will have the same llvm::Type.\n \n use super::ModuleLlvm;\n-use rustc_codegen_ssa::{ModuleCodegen, ModuleKind, CachedModuleCodegen};\n+use rustc_codegen_ssa::{ModuleCodegen, ModuleKind};\n+use rustc_codegen_ssa::base::maybe_create_entry_wrapper;\n use super::LlvmCodegenBackend;\n \n-use abi;\n use back::write;\n use llvm;\n use metadata;\n-use rustc::dep_graph::cgu_reuse_tracker::CguReuse;\n-use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n-use rustc::middle::lang_items::StartFnLangItem;\n-use rustc::middle::weak_lang_items;\n-use rustc::mir::mono::{Linkage, Visibility, Stats, CodegenUnitNameBuilder};\n+use rustc::mir::mono::{Linkage, Visibility, Stats};\n use rustc::middle::cstore::{EncodedMetadata};\n-use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::ty::layout::{self, Align, TyLayout, LayoutOf, HasTyCtxt};\n-use rustc::ty::query::Providers;\n-use rustc::middle::cstore::{self, LinkagePreference};\n+use rustc::ty::TyCtxt;\n use rustc::middle::exported_symbols;\n-use rustc::util::common::{time, print_time_passes_entry};\n-use rustc::util::profiling::ProfileCategory;\n-use rustc::session::config::{self, DebugInfo, EntryFnType, Lto};\n-use rustc::session::Session;\n-use rustc_incremental;\n-use mir::place::PlaceRef;\n-use builder::{Builder, MemFlags};\n-use callee;\n-use rustc_mir::monomorphize::item::DefPathBasedNames;\n+use rustc::session::config::{self, DebugInfo};\n+use builder::Builder;\n use common;\n-use rustc_codegen_ssa::common::{RealPredicate, TypeKind, IntPredicate};\n-use meth;\n-use mir;\n use context::CodegenCx;\n-use monomorphize::Instance;\n-use monomorphize::partitioning::{CodegenUnit, CodegenUnitExt};\n-use rustc_codegen_utils::symbol_names_test;\n-use time_graph;\n-use mono_item::{MonoItem, MonoItemExt};\n-\n-use rustc::util::nodemap::FxHashMap;\n-use CrateInfo;\n+use monomorphize::partitioning::CodegenUnitExt;\n+use rustc_codegen_ssa::mono_item::MonoItemExt;\n use rustc_data_structures::small_c_str::SmallCStr;\n-use rustc_data_structures::sync::Lrc;\n \n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n-use std::any::Any;\n-use std::cmp;\n use std::ffi::CString;\n-use std::marker;\n-use std::ops::{Deref, DerefMut};\n-use std::sync::mpsc;\n-use std::time::{Instant, Duration};\n-use syntax_pos::Span;\n+use std::time::Instant;\n use syntax_pos::symbol::InternedString;\n-use syntax::attr;\n-use rustc::hir::{self, CodegenFnAttrs};\n+use rustc::hir::CodegenFnAttrs;\n \n use value::Value;\n \n-use mir::operand::OperandValue;\n-\n-use rustc_codegen_utils::check_for_rustc_errors_attr;\n \n pub(crate) fn write_metadata<'a, 'gcx>(\n     tcx: TyCtxt<'a, 'gcx, 'gcx>,"}, {"sha": "144ee3dd2600498cc5fcc1639e66e4c8d87b15c0", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -11,7 +11,7 @@\n use llvm::{AtomicRmwBinOp, AtomicOrdering, SynchronizationScope, AsmDialect};\n use llvm::{self, False, BasicBlock};\n use rustc_codegen_ssa::common::{IntPredicate, TypeKind, RealPredicate};\n-use rustc_codegen_ssa;\n+use rustc_codegen_ssa::{self, MemFlags};\n use common::Funclet;\n use context::CodegenCx;\n use type_::Type;\n@@ -22,11 +22,11 @@ use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::layout::{self, Align, Size, TyLayout};\n use rustc::session::config;\n use rustc_data_structures::small_c_str::SmallCStr;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n use syntax;\n-use base;\n-use mir::operand::{OperandValue, OperandRef};\n-use mir::place::PlaceRef;\n+use rustc_codegen_ssa::base::to_immediate;\n+use rustc_codegen_ssa::mir::operand::{OperandValue, OperandRef};\n+use rustc_codegen_ssa::mir::place::PlaceRef;\n use std::borrow::Cow;\n use std::ops::Range;\n use std::ptr;\n@@ -582,7 +582,7 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n                 }\n                 load\n             });\n-            OperandValue::Immediate(base::to_immediate(self, llval, place.layout))\n+            OperandValue::Immediate(to_immediate(self, llval, place.layout))\n         } else if let layout::Abi::ScalarPair(ref a, ref b) = place.layout.abi {\n             let load = |i, scalar: &layout::Scalar| {\n                 let llptr = self.struct_gep(place.llval, i as u64);"}, {"sha": "e7c6cc50eba7567aa0f57c4da3cdd55b96373b10", "filename": "src/librustc_codegen_llvm/callee.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcallee.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -19,12 +19,10 @@ use llvm;\n use monomorphize::Instance;\n use context::CodegenCx;\n use value::Value;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n-use rustc::hir::def_id::DefId;\n-use rustc::ty::{self, TypeFoldable};\n+use rustc::ty::TypeFoldable;\n use rustc::ty::layout::{LayoutOf, HasTyCtxt};\n-use rustc::ty::subst::Substs;\n \n /// Codegens a reference to a fn/method item, monomorphizing and\n /// inlining as it goes."}, {"sha": "11fc67fb92b25e0e8708e330cb03861aee0a47f3", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -13,29 +13,22 @@\n //! Code that is useful in various codegen modules.\n \n use llvm::{self, True, False, Bool, BasicBlock, OperandBundleDef};\n-use rustc::hir::def_id::DefId;\n-use rustc::middle::lang_items::LangItem;\n use abi;\n-use base;\n use consts;\n use type_::Type;\n use type_of::LayoutLlvmExt;\n use value::Value;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n-use rustc::ty::{Ty, TyCtxt};\n use rustc::ty::layout::{HasDataLayout, LayoutOf, self, TyLayout, Size};\n use rustc::mir::interpret::{Scalar, AllocType, Allocation};\n-use rustc::hir;\n-use mir::constant::const_alloc_to_llvm;\n-use mir::place::PlaceRef;\n-use rustc_codegen_ssa::common::TypeKind;\n+use consts::const_alloc_to_llvm;\n+use rustc_codegen_ssa::mir::place::PlaceRef;\n \n use libc::{c_uint, c_char};\n \n use syntax::symbol::LocalInternedString;\n use syntax::ast::Mutability;\n-use syntax_pos::Span;\n \n pub use context::CodegenCx;\n "}, {"sha": "f8876207b2e9b3be1bd5ccb6b18e76bd591681c9", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -11,21 +11,24 @@\n use libc::c_uint;\n use llvm::{self, SetUnnamedAddr, True};\n use rustc::hir::def_id::DefId;\n+use rustc::mir::interpret::{ConstValue, Allocation, read_target_uint,\n+    Pointer, ErrorHandled, GlobalId};\n use rustc::hir::Node;\n use debuginfo;\n-use base;\n use monomorphize::MonoItem;\n use common::CodegenCx;\n use monomorphize::Instance;\n use syntax_pos::Span;\n+use rustc_target::abi::HasDataLayout;\n use syntax_pos::symbol::LocalInternedString;\n+use base;\n use type_::Type;\n use type_of::LayoutLlvmExt;\n use value::Value;\n use rustc::ty::{self, Ty};\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n-use rustc::ty::layout::{Align, LayoutOf};\n+use rustc::ty::layout::{self, Size, Align, LayoutOf};\n \n use rustc::hir::{self, CodegenFnAttrs, CodegenFnAttrFlags};\n \n@@ -360,7 +363,7 @@ impl StaticMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         unsafe {\n             let attrs = self.tcx.codegen_fn_attrs(def_id);\n \n-            let (v, alloc) = match ::mir::codegen_static_initializer(&self, def_id) {\n+            let (v, alloc) = match codegen_static_initializer(&self, def_id) {\n                 Ok(v) => v,\n                 // Error has already been reported\n                 Err(_) => return,"}, {"sha": "2e229c0f4d15bfc1e4627411b55c288f65fd84ca", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -14,15 +14,13 @@ use llvm_util;\n use rustc::dep_graph::DepGraphSafe;\n use rustc::hir;\n use debuginfo;\n-use callee;\n-use base;\n use monomorphize::Instance;\n use value::Value;\n \n use monomorphize::partitioning::CodegenUnit;\n use type_::Type;\n use type_of::PointeeInfo;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n use libc::c_uint;\n \n use rustc_data_structures::base_n;\n@@ -34,6 +32,9 @@ use rustc::ty::layout::{LayoutError, LayoutOf, Size, TyLayout, VariantIdx};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::FxHashMap;\n use rustc_target::spec::{HasTargetSpec, Target};\n+use rustc_codegen_ssa::callee::resolve_and_get_fn;\n+use rustc_codegen_ssa::base::wants_msvc_seh;\n+use callee::get_fn;\n \n use std::ffi::CStr;\n use std::cell::{Cell, RefCell};\n@@ -327,7 +328,7 @@ impl MiscMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n     }\n \n     fn get_fn(&self, instance: Instance<'tcx>) -> &'ll Value {\n-        callee::get_fn(&&self,instance)\n+        get_fn(&&self,instance)\n     }\n \n     fn get_param(&self, llfn: &'ll Value, index: c_uint) -> &'ll Value {\n@@ -360,11 +361,11 @@ impl MiscMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         }\n         let tcx = self.tcx;\n         let llfn = match tcx.lang_items().eh_personality() {\n-            Some(def_id) if !base::wants_msvc_seh(self.sess()) => {\n-                callee::resolve_and_get_fn(self, def_id, tcx.intern_substs(&[]))\n+            Some(def_id) if !wants_msvc_seh(self.sess()) => {\n+                resolve_and_get_fn(self, def_id, tcx.intern_substs(&[]))\n             }\n             _ => {\n-                let name = if base::wants_msvc_seh(self.sess()) {\n+                let name = if wants_msvc_seh(self.sess()) {\n                     \"__CxxFrameHandler3\"\n                 } else {\n                     \"rust_eh_personality\"\n@@ -390,7 +391,7 @@ impl MiscMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         let tcx = self.tcx;\n         assert!(self.sess().target.target.options.custom_unwind_resume);\n         if let Some(def_id) = tcx.lang_items().eh_unwind_resume() {\n-            let llfn = callee::resolve_and_get_fn(self, def_id, tcx.intern_substs(&[]));\n+            let llfn = resolve_and_get_fn(self, def_id, tcx.intern_substs(&[]));\n             unwresume.set(Some(llfn));\n             return llfn;\n         }\n@@ -446,7 +447,7 @@ impl MiscMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         attributes::apply_target_cpu_attr(self, llfn)\n     }\n \n-    fn closure_env_needs_indirect_debuginfo(&self) {\n+    fn closure_env_needs_indirect_debuginfo(&self) -> bool {\n         llvm_util::get_major_version() < 6\n     }\n "}, {"sha": "c18e126e52003960fe1412be3bf8ef479282e378", "filename": "src/librustc_codegen_llvm/debuginfo/create_scope_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use super::{FunctionDebugContext, FunctionDebugContextData};\n+use rustc_codegen_ssa::debuginfo::{FunctionDebugContext, FunctionDebugContextData, MirDebugScope};\n use super::metadata::file_metadata;\n use super::utils::{DIB, span_start};\n "}, {"sha": "26e359f39cfb3cb93d3cffff404e6bfd26c7b367", "filename": "src/librustc_codegen_llvm/debuginfo/gdb.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -16,7 +16,7 @@ use common::CodegenCx;\n use builder::Builder;\n use rustc::session::config::DebugInfo;\n use value::Value;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n use syntax::attr;\n "}, {"sha": "8a72fef49d7d3d9c6f750362449f18ab912ba2d7", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -17,9 +17,8 @@ use super::utils::{debug_context, DIB, span_start,\n use super::namespace::mangled_name_of_instance;\n use super::type_names::compute_debuginfo_type_name;\n use super::{CrateDebugContext};\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n use abi;\n-use interfaces::ConstMethods;\n use value::Value;\n \n use llvm;"}, {"sha": "67ef791866846c3e1b0b8113f9a9492486147839", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -11,8 +11,8 @@\n // See doc.rs for documentation.\n mod doc;\n \n-use self::VariableAccess::*;\n-use self::VariableKind::*;\n+use rustc_codegen_ssa::debuginfo::VariableAccess::*;\n+use rustc_codegen_ssa::debuginfo::VariableKind::*;\n \n use self::utils::{DIB, span_start, create_DIArray, is_node_local_to_unit};\n use self::namespace::mangled_name_of_instance;\n@@ -38,6 +38,8 @@ use rustc::util::nodemap::{DefIdMap, FxHashMap, FxHashSet};\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_data_structures::indexed_vec::IndexVec;\n use value::Value;\n+use rustc_codegen_ssa::debuginfo::{FunctionDebugContext, MirDebugScope, VariableAccess,\n+    VariableKind, FunctionDebugContextData};\n \n use libc::c_uint;\n use std::cell::{Cell, RefCell};\n@@ -47,7 +49,7 @@ use syntax_pos::{self, Span, Pos};\n use syntax::ast;\n use syntax::symbol::{Symbol, InternedString};\n use rustc::ty::layout::{self, LayoutOf, HasTyCtxt};\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n pub mod gdb;\n mod utils;\n@@ -57,8 +59,7 @@ pub mod metadata;\n mod create_scope_map;\n mod source_loc;\n \n-pub use self::create_scope_map::{create_mir_scopes, MirDebugScope};\n-pub use self::source_loc::start_emitting_source_locations;\n+pub use self::create_scope_map::{create_mir_scopes};\n pub use self::metadata::create_global_var_metadata;\n pub use self::metadata::extend_scope_to_file;\n pub use self::source_loc::set_source_location;\n@@ -542,12 +543,12 @@ impl DebugInfoMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         finalize(self)\n     }\n \n-    fn debuginfo_upvar_decls_ops_sequence(&self, byte_offset_of_var_in_env: u64) -> &[i64] {\n+    fn debuginfo_upvar_decls_ops_sequence(&self, byte_offset_of_var_in_env: u64) -> [i64; 4] {\n         unsafe {\n             [llvm::LLVMRustDIBuilderCreateOpDeref(),\n              llvm::LLVMRustDIBuilderCreateOpPlusUconst(),\n              byte_offset_of_var_in_env as i64,\n              llvm::LLVMRustDIBuilderCreateOpDeref()]\n-        };\n+        }\n     }\n }"}, {"sha": "e4065b6ef36cddc945c8354ac8385f2d9f10c805", "filename": "src/librustc_codegen_llvm/debuginfo/source_loc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -12,12 +12,12 @@ use self::InternalDebugLocation::*;\n \n use super::utils::{debug_context, span_start};\n use super::metadata::UNKNOWN_COLUMN_NUMBER;\n-use super::FunctionDebugContext;\n+use rustc_codegen_ssa::debuginfo::FunctionDebugContext;\n \n use llvm;\n use llvm::debuginfo::DIScope;\n use builder::Builder;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n use libc::c_uint;\n use syntax_pos::{Span, Pos};"}, {"sha": "d8fd8b7f7f470d9e22f85b5c1e1d2d514d8c439b", "filename": "src/librustc_codegen_llvm/debuginfo/type_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Ftype_names.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -14,7 +14,7 @@ use common::CodegenCx;\n use rustc::hir::def_id::DefId;\n use rustc::ty::subst::Substs;\n use rustc::ty::{self, Ty};\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n use rustc::hir;\n "}, {"sha": "ddd1a176957b495de2d6a4dc09b2609d4804ab29", "filename": "src/librustc_codegen_llvm/debuginfo/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -19,7 +19,7 @@ use rustc::ty::DefIdTree;\n use llvm;\n use llvm::debuginfo::{DIScope, DIBuilder, DIDescriptor, DIArray};\n use common::{CodegenCx};\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n use syntax_pos::{self, Span};\n "}, {"sha": "135780048aedb8f41e46118e8c7d2b672ad69fdc", "filename": "src/librustc_codegen_llvm/declare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdeclare.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -31,7 +31,7 @@ use abi::{Abi, FnType, FnTypeExt};\n use attributes;\n use context::CodegenCx;\n use type_::Type;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n use value::Value;\n \n /// Declare a function."}, {"sha": "86a41fb05d1d47f8db0ebfdd9f288bb2a423a7e6", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -15,11 +15,12 @@ use intrinsics::{self, Intrinsic};\n use llvm;\n use llvm_util;\n use abi::{Abi, FnType, LlvmType, PassMode};\n-use mir::place::PlaceRef;\n-use mir::operand::{OperandRef, OperandValue};\n-use base::*;\n+use rustc_codegen_ssa::MemFlags;\n+use rustc_codegen_ssa::mir::place::PlaceRef;\n+use rustc_codegen_ssa::mir::operand::{OperandRef, OperandValue};\n+use rustc_codegen_ssa::glue;\n+use rustc_codegen_ssa::base::{to_immediate, wants_msvc_seh, compare_simd_types};\n use context::CodegenCx;\n-use glue;\n use type_::Type;\n use type_of::LayoutLlvmExt;\n use rustc::ty::{self, Ty};\n@@ -28,10 +29,10 @@ use rustc_codegen_ssa::common::TypeKind;\n use rustc::hir;\n use syntax::ast;\n use syntax::symbol::Symbol;\n-use builder::{Builder, MemFlags};\n+use builder::Builder;\n use value::Value;\n \n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n use rustc::session::Session;\n use syntax_pos::Span;"}, {"sha": "560d266e9263263a8fff5ad667a712bedbc79363", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -40,6 +40,7 @@ use back::write::create_target_machine;\n use syntax_pos::symbol::Symbol;\n \n extern crate flate2;\n+#[macro_use] extern crate bitflags;\n extern crate libc;\n #[macro_use] extern crate rustc;\n extern crate jobserver;\n@@ -66,7 +67,7 @@ extern crate cc; // Used to locate MSVC\n extern crate tempfile;\n extern crate memmap;\n \n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n use time_graph::TimeGraph;\n use std::sync::mpsc::Receiver;\n use back::write::{self, OngoingCodegen};\n@@ -76,22 +77,17 @@ use rustc::mir::mono::Stats;\n pub use llvm_util::target_features;\n use std::any::Any;\n use std::sync::mpsc;\n-use rustc_data_structures::sync::Lrc;\n \n use rustc::dep_graph::DepGraph;\n-use rustc::hir::def_id::CrateNum;\n use rustc::middle::allocator::AllocatorKind;\n use rustc::middle::cstore::{EncodedMetadata, MetadataLoader};\n-use rustc::middle::cstore::{NativeLibrary, CrateSource, LibSource};\n-use rustc::middle::lang_items::LangItem;\n use rustc::session::{Session, CompileIncomplete};\n use rustc::session::config::{OutputFilenames, OutputType, PrintRequest};\n use rustc::ty::{self, TyCtxt};\n use rustc::util::time_graph;\n-use rustc::util::nodemap::{FxHashSet, FxHashMap};\n use rustc::util::profiling::ProfileCategory;\n use rustc_mir::monomorphize;\n-use rustc_codegen_ssa::{interfaces, ModuleCodegen, CompiledModule};\n+use rustc_codegen_ssa::{ModuleCodegen, CompiledModule, CachedModuleCodegen, CrateInfo};\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n use rustc_data_structures::svh::Svh;\n \n@@ -157,18 +153,18 @@ impl BackendMethods for LlvmCodegenBackend {\n     ) -> OngoingCodegen {\n         write::start_async_codegen(tcx, time_graph, metadata, coordinator_receive, total_cgus)\n     }\n-    fn submit_pre_codegened_module_to_llvm(\n+    fn submit_pre_codegened_module_to_backend(\n         &self,\n         codegen: &OngoingCodegen,\n         tcx: TyCtxt,\n         module: ModuleCodegen<ModuleLlvm>\n     ) {\n         codegen.submit_pre_codegened_module_to_llvm(tcx, module)\n     }\n-    fn submit_pre_lto_module_to_llvm(&self, tcx: TyCtxt, module: CachedModuleCodegen) {\n+    fn submit_pre_lto_module_to_backend(&self, tcx: TyCtxt, module: CachedModuleCodegen) {\n         write::submit_pre_lto_module_to_llvm(tcx, module)\n     }\n-    fn submit_post_lto_module_to_llvm(&self, tcx: TyCtxt, module: CachedModuleCodegen) {\n+    fn submit_post_lto_module_to_backend(&self, tcx: TyCtxt, module: CachedModuleCodegen) {\n         write::submit_post_lto_module_to_llvm(tcx, module)\n     }\n     fn codegen_aborted(codegen: OngoingCodegen) {\n@@ -260,13 +256,13 @@ impl CodegenBackend for LlvmCodegenBackend {\n     fn provide(&self, providers: &mut ty::query::Providers) {\n         rustc_codegen_utils::symbol_export::provide(providers);\n         rustc_codegen_utils::symbol_names::provide(providers);\n-        base::provide_both(providers);\n+        rustc_codegen_ssa::base::provide_both(providers);\n         attributes::provide(providers);\n     }\n \n     fn provide_extern(&self, providers: &mut ty::query::Providers) {\n         rustc_codegen_utils::symbol_export::provide_extern(providers);\n-        base::provide_both(providers);\n+        rustc_codegen_ssa::base::provide_both(providers);\n         attributes::provide_extern(providers);\n     }\n \n@@ -275,7 +271,7 @@ impl CodegenBackend for LlvmCodegenBackend {\n         tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         rx: mpsc::Receiver<Box<dyn Any + Send>>\n     ) -> Box<dyn Any> {\n-        box base::codegen_crate(LlvmCodegenBackend(()), tcx, rx)\n+        box rustc_codegen_ssa::base::codegen_crate(LlvmCodegenBackend(()), tcx, rx)\n     }\n \n     fn join_codegen_and_link("}, {"sha": "7111644ebb806c846f2b5efc22252c1add1743c9", "filename": "src/librustc_codegen_llvm/mono_item.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmono_item.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -14,14 +14,11 @@ use context::CodegenCx;\n use llvm;\n use monomorphize::Instance;\n use type_of::LayoutLlvmExt;\n-use rustc::hir;\n-use rustc::hir::def::Def;\n use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::mir::mono::{Linkage, Visibility};\n use rustc::ty::TypeFoldable;\n use rustc::ty::layout::{LayoutOf, HasTyCtxt};\n-use std::fmt;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n pub use rustc::mir::mono::MonoItem;\n "}, {"sha": "e22177ce31d5b7934c1a02c18ec36b21d3c7bc55", "filename": "src/librustc_codegen_llvm/type_.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -15,7 +15,7 @@ pub use llvm::Type;\n use llvm;\n use llvm::{Bool, False, True};\n use context::CodegenCx;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n use value::Value;\n \n \n@@ -400,11 +400,11 @@ impl LayoutTypeMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n     fn is_backend_immediate(&self, layout: TyLayout<'tcx>) -> bool {\n         layout.is_llvm_immediate()\n     }\n-    fn is_backend_scalar_pair(&self, ty: &TyLayout<'tcx>) -> bool {\n-        ty.is_llvm_scalar_pair()\n+    fn is_backend_scalar_pair(&self, layout: TyLayout<'tcx>) -> bool {\n+        layout.is_llvm_scalar_pair()\n     }\n-    fn backend_field_index(&self, ty: &TyLayout<'tcx>, index: usize) -> u64 {\n-        ty.llvm_field_index()\n+    fn backend_field_index(&self, layout: TyLayout<'tcx>, index: usize) -> u64 {\n+        layout.llvm_field_index(index)\n     }\n     fn scalar_pair_element_backend_type<'a>(\n         &self,"}, {"sha": "880da34137d216f9f1708eef95b2d3a0134dbd90", "filename": "src/librustc_codegen_llvm/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_of.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -16,7 +16,7 @@ use rustc::ty::layout::{self, Align, LayoutOf, Size, TyLayout};\n use rustc_target::abi::FloatTy;\n use rustc_mir::monomorphize::item::DefPathBasedNames;\n use type_::Type;\n-use interfaces::*;\n+use rustc_codegen_ssa::interfaces::*;\n \n use std::fmt::Write;\n "}, {"sha": "71ad46ac9b3e039751938f2a74fa06ddb0f4cca0", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -463,7 +463,7 @@ pub fn codegen_instance<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>>(\n \n /// Create the `main` function which will initialize the rust runtime and call\n /// users main function.\n-fn maybe_create_entry_wrapper<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>>(\n+pub fn maybe_create_entry_wrapper<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>>(\n     cx: &'a Bx::CodegenCx\n ) {\n     let (main_def_id, span) = match *cx.sess().entry_fn.borrow() {"}, {"sha": "0fc61422bb3a20beba657623d8df9d2ade68d64a", "filename": "src/librustc_codegen_ssa/debuginfo.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_ssa%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_ssa%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fdebuginfo.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -57,8 +57,8 @@ pub fn start_emitting_source_locations<D>(dbg_context: &FunctionDebugContext<D>)\n }\n \n pub struct FunctionDebugContextData<D> {\n-    fn_metadata: D,\n-    source_locations_enabled: Cell<bool>,\n+    pub fn_metadata: D,\n+    pub source_locations_enabled: Cell<bool>,\n     pub defining_crate: CrateNum,\n }\n "}, {"sha": "aefc59609afb75e2eb4ca10ed1b09322071215af", "filename": "src/librustc_codegen_ssa/interfaces/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_ssa%2Finterfaces%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_ssa%2Finterfaces%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Finterfaces%2Fdebuginfo.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -48,7 +48,7 @@ pub trait DebugInfoMethods<'tcx>: Backend<'tcx> {\n         defining_crate: CrateNum,\n     ) -> Self::DIScope;\n     fn debuginfo_finalize(&self);\n-    fn debuginfo_upvar_decls_ops_sequence(&self, byte_offset_of_var_in_env: u64) -> &[i64];\n+    fn debuginfo_upvar_decls_ops_sequence(&self, byte_offset_of_var_in_env: u64) -> [i64; 4];\n }\n \n pub trait DebugInfoBuilderMethods<'tcx>: HasCodegen<'tcx> {"}, {"sha": "818c96f9e91b66f3c43533eaa8b2645524bd108a", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/015e4441f5c540300477a7937a1517d407bc8436/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=015e4441f5c540300477a7937a1517d407bc8436", "patch": "@@ -141,22 +141,22 @@ bitflags! {\n }\n \n /// Misc info we load from metadata to persist beyond the tcx\n-struct CrateInfo {\n-    panic_runtime: Option<CrateNum>,\n-    compiler_builtins: Option<CrateNum>,\n-    profiler_runtime: Option<CrateNum>,\n-    sanitizer_runtime: Option<CrateNum>,\n-    is_no_builtins: FxHashSet<CrateNum>,\n-    native_libraries: FxHashMap<CrateNum, Lrc<Vec<NativeLibrary>>>,\n-    crate_name: FxHashMap<CrateNum, String>,\n-    used_libraries: Lrc<Vec<NativeLibrary>>,\n-    link_args: Lrc<Vec<String>>,\n-    used_crate_source: FxHashMap<CrateNum, Lrc<CrateSource>>,\n-    used_crates_static: Vec<(CrateNum, LibSource)>,\n-    used_crates_dynamic: Vec<(CrateNum, LibSource)>,\n-    wasm_imports: FxHashMap<String, String>,\n-    lang_item_to_crate: FxHashMap<LangItem, CrateNum>,\n-    missing_lang_items: FxHashMap<CrateNum, Vec<LangItem>>,\n+pub struct CrateInfo {\n+    pub panic_runtime: Option<CrateNum>,\n+    pub compiler_builtins: Option<CrateNum>,\n+    pub profiler_runtime: Option<CrateNum>,\n+    pub sanitizer_runtime: Option<CrateNum>,\n+    pub is_no_builtins: FxHashSet<CrateNum>,\n+    pub native_libraries: FxHashMap<CrateNum, Lrc<Vec<NativeLibrary>>>,\n+    pub crate_name: FxHashMap<CrateNum, String>,\n+    pub used_libraries: Lrc<Vec<NativeLibrary>>,\n+    pub link_args: Lrc<Vec<String>>,\n+    pub used_crate_source: FxHashMap<CrateNum, Lrc<CrateSource>>,\n+    pub used_crates_static: Vec<(CrateNum, LibSource)>,\n+    pub used_crates_dynamic: Vec<(CrateNum, LibSource)>,\n+    pub wasm_imports: FxHashMap<String, String>,\n+    pub lang_item_to_crate: FxHashMap<LangItem, CrateNum>,\n+    pub missing_lang_items: FxHashMap<CrateNum, Vec<LangItem>>,\n }\n \n __build_diagnostic_array! { librustc_codegen_ssa, DIAGNOSTICS }"}]}