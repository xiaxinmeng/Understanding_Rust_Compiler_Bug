{"sha": "5d5d8b17ccd252252763739dbd9ed1208988851c", "node_id": "C_kwDOAAsO6NoAKDVkNWQ4YjE3Y2NkMjUyMjUyNzYzNzM5ZGJkOWVkMTIwODk4ODg1MWM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-01T21:22:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-01T21:22:59Z"}, "message": "Auto merge of #2043 - RalfJung:max-size, r=RalfJung\n\nRust values can be up to isize::MAX in size\n\nNeeds https://github.com/rust-lang/rust/pull/95388", "tree": {"sha": "1dc479a463499fe245986c986e4fe93c2b273d3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dc479a463499fe245986c986e4fe93c2b273d3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d5d8b17ccd252252763739dbd9ed1208988851c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d5d8b17ccd252252763739dbd9ed1208988851c", "html_url": "https://github.com/rust-lang/rust/commit/5d5d8b17ccd252252763739dbd9ed1208988851c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d5d8b17ccd252252763739dbd9ed1208988851c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e1ed17295962b51fa8f1df14e3ff551eabed582", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e1ed17295962b51fa8f1df14e3ff551eabed582", "html_url": "https://github.com/rust-lang/rust/commit/6e1ed17295962b51fa8f1df14e3ff551eabed582"}, {"sha": "e13668092ce69bcedf00f02668a43ecf88e76b22", "url": "https://api.github.com/repos/rust-lang/rust/commits/e13668092ce69bcedf00f02668a43ecf88e76b22", "html_url": "https://github.com/rust-lang/rust/commit/e13668092ce69bcedf00f02668a43ecf88e76b22"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "38c99cc0b5397a9b9067dfec04e490355b51b4ae", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d5d8b17ccd252252763739dbd9ed1208988851c/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/5d5d8b17ccd252252763739dbd9ed1208988851c/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=5d5d8b17ccd252252763739dbd9ed1208988851c", "patch": "@@ -1 +1 @@\n-df20355fa9fa5e9fb89be4e4bfee8a643bb7a23e\n+297a8018b525c28ef10ee6a91d61954839b508b9"}, {"sha": "7e2068e4657bb978ec474d3bf197509b5542730a", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d5d8b17ccd252252763739dbd9ed1208988851c/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d5d8b17ccd252252763739dbd9ed1208988851c/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=5d5d8b17ccd252252763739dbd9ed1208988851c", "patch": "@@ -83,6 +83,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let val_byte = this.read_scalar(val_byte)?.to_u8()?;\n                 let ptr = this.read_pointer(ptr)?;\n                 let count = this.read_scalar(count)?.to_machine_usize(this)?;\n+                // `checked_mul` enforces a too small bound (the correct one would probably be machine_isize_max),\n+                // but no actual allocation can be big enough for the difference to be noticeable.\n                 let byte_count = ty_layout.size.checked_mul(count, this).ok_or_else(|| {\n                     err_ub_format!(\"overflow computing total size of `{}`\", intrinsic_name)\n                 })?;"}, {"sha": "824190a66eebfaab5fb59dadfbc46a41f9d5c350", "filename": "tests/compile-fail/too-big-unsized.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5d5d8b17ccd252252763739dbd9ed1208988851c/tests%2Fcompile-fail%2Ftoo-big-unsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d5d8b17ccd252252763739dbd9ed1208988851c/tests%2Fcompile-fail%2Ftoo-big-unsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ftoo-big-unsized.rs?ref=5d5d8b17ccd252252763739dbd9ed1208988851c", "patch": "@@ -6,13 +6,8 @@ struct MySlice {\n     tail: [u8],\n }\n \n-#[cfg(target_pointer_width = \"64\")]\n-const TOO_BIG: usize = 1usize << 47;\n-#[cfg(target_pointer_width = \"32\")]\n-const TOO_BIG: usize = 1usize << 31;\n-\n fn main() { unsafe {\n     let ptr = Box::into_raw(Box::new(0u8));\n     // The slice part is actually not \"too big\", but together with the `prefix` field it is.\n-    let _x: &MySlice = mem::transmute((ptr, TOO_BIG-1)); //~ ERROR: invalid reference metadata: total size is bigger than largest supported object\n+    let _x: &MySlice = mem::transmute((ptr, isize::MAX as usize)); //~ ERROR: invalid reference metadata: total size is bigger than largest supported object\n } }"}, {"sha": "bf3585f74e95296712c0c2e440f7aa6398757a7c", "filename": "tests/run-pass/slices.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5d5d8b17ccd252252763739dbd9ed1208988851c/tests%2Frun-pass%2Fslices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d5d8b17ccd252252763739dbd9ed1208988851c/tests%2Frun-pass%2Fslices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fslices.rs?ref=5d5d8b17ccd252252763739dbd9ed1208988851c", "patch": "@@ -2,6 +2,7 @@\n #![feature(new_uninit)]\n #![feature(slice_as_chunks)]\n #![feature(slice_partition_dedup)]\n+#![feature(layout_for_ptr)]\n \n use std::slice;\n \n@@ -250,9 +251,17 @@ fn test_for_invalidated_pointers() {\n     buffer.copy_within(1.., 0);\n }\n \n+fn large_raw_slice() {\n+    let size = isize::MAX as usize;\n+    // Creating a raw slice of size isize::MAX and asking for its size is okay.\n+    let s = std::ptr::slice_from_raw_parts(1usize as *const u8, size);\n+    assert_eq!(size, unsafe { std::mem::size_of_val_raw(s) });\n+}\n+\n fn main() {\n     slice_of_zst();\n     test_iter_ref_consistency();\n     uninit_slice();\n     test_for_invalidated_pointers();\n+    large_raw_slice();\n }"}]}