{"sha": "aef665aa21fa484fa5be3a779901fed9a95c5b89", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZjY2NWFhMjFmYTQ4NGZhNWJlM2E3Nzk5MDFmZWQ5YTk1YzViODk=", "commit": {"author": {"name": "Fraser Hutchison", "email": "fraser.hutchison@maidsafe.net", "date": "2016-11-03T04:22:16Z"}, "committer": {"name": "Fraser Hutchison", "email": "fraser.hutchison@maidsafe.net", "date": "2016-11-03T04:22:16Z"}, "message": "Fixes a few doc typos.", "tree": {"sha": "aac68d13cc6d8578e99889ba3c5cc1bfcc71a952", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aac68d13cc6d8578e99889ba3c5cc1bfcc71a952"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aef665aa21fa484fa5be3a779901fed9a95c5b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aef665aa21fa484fa5be3a779901fed9a95c5b89", "html_url": "https://github.com/rust-lang/rust/commit/aef665aa21fa484fa5be3a779901fed9a95c5b89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aef665aa21fa484fa5be3a779901fed9a95c5b89/comments", "author": null, "committer": null, "parents": [{"sha": "f933d311157b90cdcb4f2bc670cea4844e5ea92e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f933d311157b90cdcb4f2bc670cea4844e5ea92e", "html_url": "https://github.com/rust-lang/rust/commit/f933d311157b90cdcb4f2bc670cea4844e5ea92e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "cb7fdadd4a26af087da215f9202326e4c9d4a84f", "filename": "src/comment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aef665aa21fa484fa5be3a779901fed9a95c5b89/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef665aa21fa484fa5be3a779901fed9a95c5b89/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=aef665aa21fa484fa5be3a779901fed9a95c5b89", "patch": "@@ -275,14 +275,14 @@ enum CharClassesStatus {\n     LineComment,\n }\n \n-/// Distinguish between functionnal part of code and comments\n+/// Distinguish between functional part of code and comments\n #[derive(PartialEq, Eq, Debug, Clone, Copy)]\n pub enum CodeCharKind {\n     Normal,\n     Comment,\n }\n \n-/// Distinguish between functionnal part of code and comments,\n+/// Distinguish between functional part of code and comments,\n /// describing opening and closing of comments for ease when chunking\n /// code from tagged characters\n #[derive(PartialEq, Eq, Debug, Clone, Copy)]"}, {"sha": "1f5d7c5414f88f3ce352e79baf7710d369490104", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef665aa21fa484fa5be3a779901fed9a95c5b89/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef665aa21fa484fa5be3a779901fed9a95c5b89/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=aef665aa21fa484fa5be3a779901fed9a95c5b89", "patch": "@@ -179,7 +179,7 @@ impl<'a> FmtVisitor<'a> {\n     pub fn visit_item(&mut self, item: &ast::Item) {\n         // This is where we bail out if there is a skip attribute. This is only\n         // complex in the module case. It is complex because the module could be\n-        // in a seperate file and there might be attributes in both files, but\n+        // in a separate file and there might be attributes in both files, but\n         // the AST lumps them all together.\n         match item.node {\n             ast::ItemKind::Mod(ref m) => {"}, {"sha": "a2a4c0eeedf8d6f3909b626180842a7debaf4dc2", "filename": "tests/system.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef665aa21fa484fa5be3a779901fed9a95c5b89/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef665aa21fa484fa5be3a779901fed9a95c5b89/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=aef665aa21fa484fa5be3a779901fed9a95c5b89", "patch": "@@ -33,7 +33,7 @@ fn get_path_string(dir_entry: io::Result<fs::DirEntry>) -> String {\n \n // Integration tests. The files in the tests/source are formatted and compared\n // to their equivalent in tests/target. The target file and config can be\n-// overriden by annotations in the source file. The input and output must match\n+// overridden by annotations in the source file. The input and output must match\n // exactly.\n // FIXME(#28) would be good to check for error messages and fail on them, or at\n // least report."}]}