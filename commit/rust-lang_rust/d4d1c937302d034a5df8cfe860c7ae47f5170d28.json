{"sha": "d4d1c937302d034a5df8cfe860c7ae47f5170d28", "node_id": "C_kwDOAAsO6NoAKGQ0ZDFjOTM3MzAyZDAzNGE1ZGY4Y2ZlODYwYzdhZTQ3ZjUxNzBkMjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-10T05:09:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-10T05:09:58Z"}, "message": "Rollup merge of #107852 - notriddle:notriddle/rm-tab, r=GuillaumeGomez\n\nrustdoc: remove unused fn parameter `tab`", "tree": {"sha": "adffaabd88d163288d841df736d1b455c1b74cc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adffaabd88d163288d841df736d1b455c1b74cc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4d1c937302d034a5df8cfe860c7ae47f5170d28", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj5dGmCRBK7hj4Ov3rIwAAat4IAGFUKDyRZE60hFCF4NZfFgEb\nz2i/d69I7XWZFK8j1PuMNA8IcRIjUMJlOcKYQdgNbn3yYVFug+vqTu1U7FEz2fm2\nTaCwgJxM3LVLSB9xdVpo8JTuMReuU39RtvkEid3JZ4p03yEIlBJW5BN8m2amnnKN\nwA1ygZNlV8ZiR4IFdQjNX65nEcqfDUPYL7YHR4w821wwExarOnS4vB9xtrCUwsRg\n6Auh+q64tCUkza28Ge4nSmvr6ZifQ97SXmKG6G3Dxnu/PAlcSUbF68KoDdyWkqqg\n9BBbG1u8COxKoStAheHki/zcknTBdudxRptmBvai52QkleZRR7rdwsn38LMgEwg=\n=sY3+\n-----END PGP SIGNATURE-----\n", "payload": "tree adffaabd88d163288d841df736d1b455c1b74cc1\nparent 8bfb97cc8a2f6c175d86a4fa815168874e6059d5\nparent 792b8464e7c4feba1543308d67e637888a3da884\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676005798 +0100\ncommitter GitHub <noreply@github.com> 1676005798 +0100\n\nRollup merge of #107852 - notriddle:notriddle/rm-tab, r=GuillaumeGomez\n\nrustdoc: remove unused fn parameter `tab`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4d1c937302d034a5df8cfe860c7ae47f5170d28", "html_url": "https://github.com/rust-lang/rust/commit/d4d1c937302d034a5df8cfe860c7ae47f5170d28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4d1c937302d034a5df8cfe860c7ae47f5170d28/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bfb97cc8a2f6c175d86a4fa815168874e6059d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bfb97cc8a2f6c175d86a4fa815168874e6059d5", "html_url": "https://github.com/rust-lang/rust/commit/8bfb97cc8a2f6c175d86a4fa815168874e6059d5"}, {"sha": "792b8464e7c4feba1543308d67e637888a3da884", "url": "https://api.github.com/repos/rust-lang/rust/commits/792b8464e7c4feba1543308d67e637888a3da884", "html_url": "https://github.com/rust-lang/rust/commit/792b8464e7c4feba1543308d67e637888a3da884"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "82a51a8467bcd557c4dd3de7736f9268414bf4d0", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d4d1c937302d034a5df8cfe860c7ae47f5170d28/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4d1c937302d034a5df8cfe860c7ae47f5170d28/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=d4d1c937302d034a5df8cfe860c7ae47f5170d28", "patch": "@@ -1109,7 +1109,7 @@ fn item_typedef(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clea\n fn item_union(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean::Union) {\n     wrap_item(w, |w| {\n         render_attributes_in_pre(w, it, \"\");\n-        render_union(w, it, Some(&s.generics), &s.fields, \"\", cx);\n+        render_union(w, it, Some(&s.generics), &s.fields, cx);\n     });\n \n     document(w, cx, it, None, HeadingOffset::H2);\n@@ -1628,7 +1628,6 @@ fn render_union(\n     it: &clean::Item,\n     g: Option<&clean::Generics>,\n     fields: &[clean::Item],\n-    tab: &str,\n     cx: &Context<'_>,\n ) {\n     let tcx = cx.tcx();\n@@ -1651,7 +1650,7 @@ fn render_union(\n         w.write_str(\" \");\n     }\n \n-    write!(w, \"{{\\n{}\", tab);\n+    write!(w, \"{{\\n\");\n     let count_fields =\n         fields.iter().filter(|f| matches!(*f.kind, clean::StructFieldItem(..))).count();\n     let toggle = should_hide_fields(count_fields);\n@@ -1663,17 +1662,16 @@ fn render_union(\n         if let clean::StructFieldItem(ref ty) = *field.kind {\n             write!(\n                 w,\n-                \"    {}{}: {},\\n{}\",\n+                \"    {}{}: {},\\n\",\n                 visibility_print_with_space(field.visibility(tcx), field.item_id, cx),\n                 field.name.unwrap(),\n-                ty.print(cx),\n-                tab\n+                ty.print(cx)\n             );\n         }\n     }\n \n     if it.has_stripped_entries().unwrap() {\n-        write!(w, \"    /* private fields */\\n{}\", tab);\n+        write!(w, \"    /* private fields */\\n\");\n     }\n     if toggle {\n         toggle_close(w);"}]}