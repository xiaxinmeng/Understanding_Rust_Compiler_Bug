{"sha": "12cde6ebee48d758b4b6b3ad79194e8f1acc607f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyY2RlNmViZWU0OGQ3NThiNGI2YjNhZDc5MTk0ZThmMWFjYzYwN2Y=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-18T22:10:36Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-18T22:10:41Z"}, "message": "libcore: Remove task::set_min_stack\n\nThis existed to make up for the lack of stack growth, and wasn't generally\nsafe.", "tree": {"sha": "1e0bf8b88ab835e3563051e78ea02edb1a071ca1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e0bf8b88ab835e3563051e78ea02edb1a071ca1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12cde6ebee48d758b4b6b3ad79194e8f1acc607f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12cde6ebee48d758b4b6b3ad79194e8f1acc607f", "html_url": "https://github.com/rust-lang/rust/commit/12cde6ebee48d758b4b6b3ad79194e8f1acc607f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12cde6ebee48d758b4b6b3ad79194e8f1acc607f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22ac628e8c9383e9f634e729d0722841d914490e", "url": "https://api.github.com/repos/rust-lang/rust/commits/22ac628e8c9383e9f634e729d0722841d914490e", "html_url": "https://github.com/rust-lang/rust/commit/22ac628e8c9383e9f634e729d0722841d914490e"}], "stats": {"total": 27, "additions": 0, "deletions": 27}, "files": [{"sha": "5cb2af9679d4f1e861b75ae0488d73cfd5ae7ece", "filename": "src/libcore/task.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/12cde6ebee48d758b4b6b3ad79194e8f1acc607f/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12cde6ebee48d758b4b6b3ad79194e8f1acc607f/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=12cde6ebee48d758b4b6b3ad79194e8f1acc607f", "patch": "@@ -41,7 +41,6 @@ export join;\n export unsupervise;\n export pin;\n export unpin;\n-export set_min_stack;\n export task_result;\n export tr_success;\n export tr_failure;\n@@ -65,8 +64,6 @@ native mod rustrt {\n     fn get_task_id() -> task_id;\n     fn rust_get_task() -> *rust_task;\n \n-    fn set_min_stack(stack_size: uint);\n-\n     fn new_task() -> task_id;\n     fn drop_task(task_id: *rust_task);\n     fn get_task_pointer(id: task_id) -> *rust_task;\n@@ -216,15 +213,6 @@ Unpin the current task and future child tasks\n */\n fn unpin() { rustrt::unpin_task(); }\n \n-/*\n-Function: set_min_stack\n-\n-Set the minimum stack size (in bytes) for tasks spawned in the future.\n-\n-This function has global effect and should probably not be used.\n-*/\n-fn set_min_stack(stack_size: uint) { rustrt::set_min_stack(stack_size); }\n-\n /*\n Function: spawn\n "}, {"sha": "a40fa80ad1706eced5981efbdbc69e9c12ee35ce", "filename": "src/test/bench/task-perf-word-count-generic.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12cde6ebee48d758b4b6b3ad79194e8f1acc607f/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12cde6ebee48d758b4b6b3ad79194e8f1acc607f/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs?ref=12cde6ebee48d758b4b6b3ad79194e8f1acc607f", "patch": "@@ -220,10 +220,6 @@ fn main(argv: [str]) {\n         iargs += [str::bytes(a)];\n     }\n \n-    // We can get by with 8k stacks, and we'll probably exhaust our\n-    // address space otherwise.\n-    task::set_min_stack(8192u);\n-\n     let start = time::precise_time_ns();\n \n     map_reduce::map_reduce(map, reduce, iargs);"}, {"sha": "a310bc152f8f8ea07e8160692a3f20160b36d3bf", "filename": "src/test/bench/task-perf-word-count.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12cde6ebee48d758b4b6b3ad79194e8f1acc607f/src%2Ftest%2Fbench%2Ftask-perf-word-count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12cde6ebee48d758b4b6b3ad79194e8f1acc607f/src%2Ftest%2Fbench%2Ftask-perf-word-count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-word-count.rs?ref=12cde6ebee48d758b4b6b3ad79194e8f1acc607f", "patch": "@@ -185,10 +185,6 @@ mod map_reduce {\n }\n \n fn main(argv: [str]) {\n-    // We can get by with 8k stacks, and we'll probably exhaust our\n-    // address space otherwise.\n-    task::set_min_stack(8192u);\n-\n     let inputs = if vec::len(argv) < 2u {\n         [input1(), input2(), input3()]\n     } else {"}, {"sha": "beb62d72e1d8dc8b263bfb6830ae4c7a858a56bb", "filename": "src/test/run-fail/morestack2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12cde6ebee48d758b4b6b3ad79194e8f1acc607f/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12cde6ebee48d758b4b6b3ad79194e8f1acc607f/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack2.rs?ref=12cde6ebee48d758b4b6b3ad79194e8f1acc607f", "patch": "@@ -8,7 +8,6 @@\n use std;\n \n native mod rustrt {\n-    fn set_min_stack(size: uint);\n     fn pin_task();\n }\n \n@@ -31,7 +30,6 @@ resource and_then_get_big_again(_i: ()) {\n }\n \n fn main() {\n-    rustrt::set_min_stack(1024u);\n     task::spawn((), fn (&&_i: ()) {\n         let r = and_then_get_big_again(());\n         getbig_call_c_and_fail(10000);"}, {"sha": "dd52986c4a40386f96ecc735c7bf9794c80e5504", "filename": "src/test/run-fail/morestack3.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/12cde6ebee48d758b4b6b3ad79194e8f1acc607f/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12cde6ebee48d758b4b6b3ad79194e8f1acc607f/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack3.rs?ref=12cde6ebee48d758b4b6b3ad79194e8f1acc607f", "patch": "@@ -4,10 +4,6 @@\n \n use std;\n \n-native mod rustrt {\n-    fn set_min_stack(size: uint);\n-}\n-\n fn getbig_and_fail(&&i: int) {\n     let r = and_then_get_big_again(@0);\n     if i != 0 {\n@@ -27,6 +23,5 @@ resource and_then_get_big_again(_i: @int) {\n }\n \n fn main() {\n-    rustrt::set_min_stack(1024u);\n     task::spawn(400, getbig_and_fail);\n }\n\\ No newline at end of file"}]}