{"sha": "3ab4914a29a24684f0b384133b80e522fb95310b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYjQ5MTRhMjlhMjQ2ODRmMGIzODQxMzNiODBlNTIyZmI5NTMxMGI=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-03-09T15:10:24Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-03-09T15:10:24Z"}, "message": "Handle the new TryDesugar variant", "tree": {"sha": "783fd8a78902539e90bc86ad7d35288286205528", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/783fd8a78902539e90bc86ad7d35288286205528"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ab4914a29a24684f0b384133b80e522fb95310b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ab4914a29a24684f0b384133b80e522fb95310b", "html_url": "https://github.com/rust-lang/rust/commit/3ab4914a29a24684f0b384133b80e522fb95310b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ab4914a29a24684f0b384133b80e522fb95310b/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9b5b2a26445c82565f83ffc0d188ed83067cd2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9b5b2a26445c82565f83ffc0d188ed83067cd2f", "html_url": "https://github.com/rust-lang/rust/commit/d9b5b2a26445c82565f83ffc0d188ed83067cd2f"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "85a8a4b005deb41d830e368f8ae3e6b9412644c9", "filename": "src/matches.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ab4914a29a24684f0b384133b80e522fb95310b/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ab4914a29a24684f0b384133b80e522fb95310b/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=3ab4914a29a24684f0b384133b80e522fb95310b", "patch": "@@ -439,6 +439,7 @@ fn match_template(cx: &LateContext, span: Span, source: MatchSource, op: &str, e\n         MatchSource::IfLetDesugar { .. } => format!(\"if let ... = {}{} {{\", op, expr_snippet),\n         MatchSource::WhileLetDesugar => format!(\"while let ... = {}{} {{\", op, expr_snippet),\n         MatchSource::ForLoopDesugar => cx.sess().span_bug(span, \"for loop desugared to match with &-patterns!\"),\n+        MatchSource::TryDesugar => cx.sess().span_bug(span, \"`?` operator desugared to match with &-patterns!\")\n     }\n }\n "}]}