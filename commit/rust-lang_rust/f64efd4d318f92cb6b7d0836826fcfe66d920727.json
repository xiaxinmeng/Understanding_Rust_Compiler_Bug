{"sha": "f64efd4d318f92cb6b7d0836826fcfe66d920727", "node_id": "C_kwDOAAsO6NoAKGY2NGVmZDRkMzE4ZjkyY2I2YjdkMDgzNjgyNmZjZmU2NmQ5MjA3Mjc", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2023-01-19T20:52:57Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2023-01-19T21:28:12Z"}, "message": "Changelog for Rust 1.67 :lady_beetle:", "tree": {"sha": "179eaabc8dd99e181259032c8d9d99639ab76985", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/179eaabc8dd99e181259032c8d9d99639ab76985"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f64efd4d318f92cb6b7d0836826fcfe66d920727", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEwgBEOx3xlHwII7PG9cWdDmaeUwIFAmPJtewACgkQ9cWdDmae\nUwI3fRAAy8cCEAKcNpiDTducqpQQ4LwnGsS+N0KYBUk6E9adIT5jyQFBCRI4b57j\nnr6ePtv7ORIswH3RcHUjfEkegsqNZWjXaOECnzt36NGGHV+bwPq2bM0QIG7Z40BC\nJn0m+tj5SXz2ABZlweMRCre6BjHftNmOn7IQDwirfkSrs0S4gsgxFpsi82kyiPNR\nPTJ7Q4gUmJ6Nst7qPPMElEgc4DvZq5YmaY9LfX0xcwATfGxQGqBzIfXMrxpfivcc\nBEMYttFapf1jvLRNfS8QkD15X60gru0Wa4h7HvsMWO+Wlv0hm4C+iJ8GbHU/Mzev\nRWT6ryzNn81SpsPMUKa90tqMG65xJCr1YKrVS1J8sE1UZMS0e0c0Jvz0X1f+g3Ts\nUEWIx0F+QA3ozjQ4SwgeZMdKREmVWx1NN8GNXdFk8UmO2cvtx+IuKbcpBkq0Z1/L\nBTdsUB71JlPqeYZB0ra/iPtzwRQX/Vcw7Xyv8NzSDAPMjCyecDBMpRpc/iEEO6k4\ncurH7xa5TJ+Pg0xxZKgE+LrdvOhRGKuVABTo4SRReEPNP12UVO4/DFmhcfEn7LRj\nCr6m/cZv1uzF61059D/UneOLmvOeyzKojwZsbx3OvLnFly7Uede9ErZ9zBeP8toE\nAnvTY6AH5QrsH5Csboe1K9rQ50R4YooZx4F89PwKNA543gctOYc=\n=4rRn\n-----END PGP SIGNATURE-----", "payload": "tree 179eaabc8dd99e181259032c8d9d99639ab76985\nparent e3a09eca6d810af2105b4ed3af17048b318d25c4\nauthor xFrednet <xFrednet@gmail.com> 1674161577 +0100\ncommitter xFrednet <xFrednet@gmail.com> 1674163692 +0100\n\nChangelog for Rust 1.67 :lady_beetle:\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f64efd4d318f92cb6b7d0836826fcfe66d920727", "html_url": "https://github.com/rust-lang/rust/commit/f64efd4d318f92cb6b7d0836826fcfe66d920727", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f64efd4d318f92cb6b7d0836826fcfe66d920727/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3a09eca6d810af2105b4ed3af17048b318d25c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3a09eca6d810af2105b4ed3af17048b318d25c4", "html_url": "https://github.com/rust-lang/rust/commit/e3a09eca6d810af2105b4ed3af17048b318d25c4"}], "stats": {"total": 198, "additions": 196, "deletions": 2}, "files": [{"sha": "073691ad61ce1154395105e8f5ba2ac6866a5870", "filename": "CHANGELOG.md", "status": "modified", "additions": 196, "deletions": 2, "changes": 198, "blob_url": "https://github.com/rust-lang/rust/blob/f64efd4d318f92cb6b7d0836826fcfe66d920727/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/f64efd4d318f92cb6b7d0836826fcfe66d920727/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=f64efd4d318f92cb6b7d0836826fcfe66d920727", "patch": "@@ -6,11 +6,204 @@ document.\n \n ## Unreleased / Beta / In Rust Nightly\n \n-[4f142aa1...master](https://github.com/rust-lang/rust-clippy/compare/4f142aa1...master)\n+[d822110d...master](https://github.com/rust-lang/rust-clippy/compare/d822110d...master)\n+\n+## Rust 1.67\n+\n+Current stable, released 2023-01-26\n+\n+[4f142aa1...d822110d](https://github.com/rust-lang/rust-clippy/compare/4f142aa1...d822110d)\n+\n+### New Lints\n+\n+* [`seek_from_current`]\n+  [#9681](https://github.com/rust-lang/rust-clippy/pull/9681)\n+* [`from_raw_with_void_ptr`]\n+  [#9690](https://github.com/rust-lang/rust-clippy/pull/9690)\n+* [`misnamed_getters`]\n+  [#9770](https://github.com/rust-lang/rust-clippy/pull/9770)\n+* [`seek_to_start_instead_of_rewind`]\n+  [#9667](https://github.com/rust-lang/rust-clippy/pull/9667)\n+* [`suspicious_xor_used_as_pow`]\n+  [#9506](https://github.com/rust-lang/rust-clippy/pull/9506)\n+* [`unnecessary_safety_doc`]\n+  [#9822](https://github.com/rust-lang/rust-clippy/pull/9822)\n+* [`unchecked_duration_subtraction`]\n+  [#9570](https://github.com/rust-lang/rust-clippy/pull/9570)\n+* [`manual_is_ascii_check`]\n+  [#9765](https://github.com/rust-lang/rust-clippy/pull/9765)\n+* [`unnecessary_safety_comment`]\n+  [#9851](https://github.com/rust-lang/rust-clippy/pull/9851)\n+* [`let_underscore_future`]\n+  [#9760](https://github.com/rust-lang/rust-clippy/pull/9760)\n+* [`manual_let_else`]\n+  [#8437](https://github.com/rust-lang/rust-clippy/pull/8437)\n+\n+### Moves and Deprecations\n+\n+* Moved [`uninlined_format_args`] to `style` (Now warn-by-default)\n+  [#9865](https://github.com/rust-lang/rust-clippy/pull/9865)\n+* Moved [`needless_collect`] to `nursery` (Now allow-by-default)\n+  [#9705](https://github.com/rust-lang/rust-clippy/pull/9705)\n+* Moved [`or_fun_call`] to `nursery` (Now allow-by-default)\n+  [#9829](https://github.com/rust-lang/rust-clippy/pull/9829)\n+* Uplifted [`let_underscore_lock`] into rustc\n+  [#9697](https://github.com/rust-lang/rust-clippy/pull/9697)\n+* Uplifted [`let_underscore_drop`] into rustc\n+  [#9697](https://github.com/rust-lang/rust-clippy/pull/9697)\n+* Moved [`bool_to_int_with_if`] to `pedantic` (Now allow-by-default)\n+  [#9830](https://github.com/rust-lang/rust-clippy/pull/9830)\n+* [`manual_swap`]: No longer lints in const context\n+  [#9871](https://github.com/rust-lang/rust-clippy/pull/9871)\n+* Move `index_refutable_slice` to `pedantic` (Now warn-by-default)\n+  [#9975](https://github.com/rust-lang/rust-clippy/pull/9975)\n+* Moved [`manual_clamp`] to `nursery` (Now allow-by-default)\n+  [#10101](https://github.com/rust-lang/rust-clippy/pull/10101)\n+\n+### Enhancements\n+\n+* The scope of `#![clippy::msrv]` is now tracked correctly\n+  [#9924](https://github.com/rust-lang/rust-clippy/pull/9924)\n+* `#[clippy::msrv]` can now be used as an outer attribute\n+  [#9860](https://github.com/rust-lang/rust-clippy/pull/9860)\n+* Clippy will now avoid Cargo's cache, if `Cargo.toml` or `clippy.toml` have changed\n+  [#9707](https://github.com/rust-lang/rust-clippy/pull/9707)\n+* [`uninlined_format_args`]: Added a new config `allow-mixed-uninlined-format-args` to allow the\n+  lint, if only some arguments can be inlined\n+  [#9865](https://github.com/rust-lang/rust-clippy/pull/9865)\n+* [`needless_lifetimes`]: Now provides suggests for individual lifetimes\n+  [#9743](https://github.com/rust-lang/rust-clippy/pull/9743)\n+* [`needless_collect`]: Now detects needless `is_empty` and `contains` calls\n+  [#8744](https://github.com/rust-lang/rust-clippy/pull/8744)\n+* [`blanket_clippy_restriction_lints`]: Now lints, if `clippy::restriction` is enabled via the\n+  command line arguments\n+  [#9755](https://github.com/rust-lang/rust-clippy/pull/9755)\n+* [`mutable_key_type`]: Now has the `ignore-interior-mutability` configuration, to add types which\n+  should be ignored by the lint\n+  [#9692](https://github.com/rust-lang/rust-clippy/pull/9692)\n+* [`uninlined_format_args`]: Now works for multiline `format!` expressions\n+  [#9945](https://github.com/rust-lang/rust-clippy/pull/9945)\n+* [`cognitive_complexity`]: Now works for async functions\n+  [#9828](https://github.com/rust-lang/rust-clippy/pull/9828)\n+  [#9836](https://github.com/rust-lang/rust-clippy/pull/9836)\n+* [`vec_box`]: Now avoids an off-by-one error when using the `vec-box-size-threshold` configuration\n+  [#9848](https://github.com/rust-lang/rust-clippy/pull/9848)\n+* [`never_loop`]: Now correctly handles breaks in nested labeled blocks\n+  [#9858](https://github.com/rust-lang/rust-clippy/pull/9858)\n+  [#9837](https://github.com/rust-lang/rust-clippy/pull/9837)\n+* [`disallowed_methods`], [`disallowed_types`], [`disallowed_macros`]: Now correctly resolve\n+  paths, if a crate is used multiple times with different versions\n+  [#9800](https://github.com/rust-lang/rust-clippy/pull/9800)\n+* [`disallowed_methods`]: Can now be used for local methods\n+  [#9800](https://github.com/rust-lang/rust-clippy/pull/9800)\n+* [`print_stdout`], [`print_stderr`]: Can now be enabled in test with the `allow-print-in-tests`\n+  config value\n+  [#9797](https://github.com/rust-lang/rust-clippy/pull/9797)\n+* [`from_raw_with_void_ptr`]: Now works for `Rc`, `Arc`, `alloc::rc::Weak` and\n+  `alloc::sync::Weak` types.\n+  [#9700](https://github.com/rust-lang/rust-clippy/pull/9700)\n+* [`needless_borrowed_reference`]: Now works for struct and tuple patterns with wildcards\n+  [#9855](https://github.com/rust-lang/rust-clippy/pull/9855)\n+* [`or_fun_call`]: Now supports `map_or` methods\n+  [#9689](https://github.com/rust-lang/rust-clippy/pull/9689)\n+* [`unwrap_used`], [`expect_used`]: No longer lints in test code\n+  [#9686](https://github.com/rust-lang/rust-clippy/pull/9686)\n+* [`fn_params_excessive_bools`]: Is now emitted with the lint level at the linted function\n+  [#9698](https://github.com/rust-lang/rust-clippy/pull/9698)\n+\n+### False Positive Fixes\n+\n+* [`new_ret_no_self`]: No longer lints when `impl Trait<Self>` is returned\n+  [#9733](https://github.com/rust-lang/rust-clippy/pull/9733)\n+* [`unnecessary_lazy_evaluations`]: No longer lints, if the type has a significant drop\n+  [#9750](https://github.com/rust-lang/rust-clippy/pull/9750)\n+* [`option_if_let_else`]: No longer lints, if any arm has guard\n+  [#9747](https://github.com/rust-lang/rust-clippy/pull/9747)\n+* [`explicit_auto_deref`]: No longer lints, if the target type is a projection with generic\n+  arguments\n+  [#9813](https://github.com/rust-lang/rust-clippy/pull/9813)\n+* [`unnecessary_to_owned`]: No longer lints, if the suggestion effects types\n+  [#9796](https://github.com/rust-lang/rust-clippy/pull/9796)\n+* [`needless_borrow`]: No longer lints, if the suggestion is affected by `Deref`\n+  [#9674](https://github.com/rust-lang/rust-clippy/pull/9674)\n+* [`unused_unit`]: No longer lints, if lifetimes are bound to the return type\n+  [#9849](https://github.com/rust-lang/rust-clippy/pull/9849)\n+* [`mut_mut`]: No longer lints cases with unsized mutable references\n+  [#9835](https://github.com/rust-lang/rust-clippy/pull/9835)\n+* [`bool_to_int_with_if`]: No longer lints in const context\n+  [#9738](https://github.com/rust-lang/rust-clippy/pull/9738)\n+* [`use_self`]: No longer lints in macros\n+  [#9704](https://github.com/rust-lang/rust-clippy/pull/9704)\n+* [`unnecessary_operation`]: No longer lints, if multiple macros are involved\n+  [#9981](https://github.com/rust-lang/rust-clippy/pull/9981)\n+* [`allow_attributes_without_reason`]: No longer lints inside external macros\n+  [#9630](https://github.com/rust-lang/rust-clippy/pull/9630)\n+* [`question_mark`]: No longer lints for `if let Err()` with an `else` branch\n+  [#9722](https://github.com/rust-lang/rust-clippy/pull/9722)\n+* [`unnecessary_cast`]: No longer lints if the identifier and cast originate from different macros\n+  [#9980](https://github.com/rust-lang/rust-clippy/pull/9980)\n+* [`arithmetic_side_effects`]: Now detects operations with associated constants\n+  [#9592](https://github.com/rust-lang/rust-clippy/pull/9592)\n+* [`explicit_auto_deref`]: No longer lints, if the initial value is not a reference or reference\n+  receiver\n+  [#9997](https://github.com/rust-lang/rust-clippy/pull/9997)\n+* [`module_name_repetitions`], [`single_component_path_imports`]: Now handle `#[allow]`\n+  attributes correctly\n+  [#9879](https://github.com/rust-lang/rust-clippy/pull/9879)\n+* [`bool_to_int_with_if`]: No longer lints `if let` statements\n+  [#9714](https://github.com/rust-lang/rust-clippy/pull/9714)\n+* [`needless_borrow`]: No longer lints, `if`-`else`-statements that require the borrow\n+  [#9791](https://github.com/rust-lang/rust-clippy/pull/9791)\n+* [`needless_borrow`]: No longer lints borrows, if moves were illegal\n+  [#9711](https://github.com/rust-lang/rust-clippy/pull/9711)\n+\n+### Suggestion Fixes/Improvements\n+\n+* [`missing_safety_doc`], [`missing_errors_doc`], [`missing_panics_doc`]: No longer show the\n+  entire item in the lint emission.\n+  [#9772](https://github.com/rust-lang/rust-clippy/pull/9772)\n+* [`needless_lifetimes`]: Only suggests `'_` when it's applicable\n+  [#9743](https://github.com/rust-lang/rust-clippy/pull/9743)\n+* [`use_self`]: Now suggests full paths correctly\n+  [#9726](https://github.com/rust-lang/rust-clippy/pull/9726)\n+* [`redundant_closure_call`]: Now correctly deals with macros during suggestion creation\n+  [#9987](https://github.com/rust-lang/rust-clippy/pull/9987)\n+* [`unnecessary_cast`]: Suggestions now correctly deal with references\n+  [#9996](https://github.com/rust-lang/rust-clippy/pull/9996)\n+* [`unnecessary_join`]: Suggestions now correctly use [turbofish] operators\n+  [#9779](https://github.com/rust-lang/rust-clippy/pull/9779)\n+* [`equatable_if_let`]: Can now suggest `matches!` replacements\n+  [#9368](https://github.com/rust-lang/rust-clippy/pull/9368)\n+* [`string_extend_chars`]: Suggestions now correctly work for `str` slices\n+  [#9741](https://github.com/rust-lang/rust-clippy/pull/9741)\n+* [`redundant_closure_for_method_calls`]: Suggestions now include angle brackets and generic\n+  arguments if needed\n+  [#9745](https://github.com/rust-lang/rust-clippy/pull/9745)\n+* [`manual_let_else`]: Suggestions no longer expand macro calls\n+  [#9943](https://github.com/rust-lang/rust-clippy/pull/9943)\n+* [`infallible_destructuring_match`]: Suggestions now preserve references\n+  [#9850](https://github.com/rust-lang/rust-clippy/pull/9850)\n+* [`result_large_err`]: The error now shows the largest enum variant\n+  [#9662](https://github.com/rust-lang/rust-clippy/pull/9662)\n+* [`needless_return`]: Suggestions are now formatted better\n+  [#9967](https://github.com/rust-lang/rust-clippy/pull/9967)\n+* [`unused_rounding`]: The suggestion now preserves the original float literal notation\n+  [#9870](https://github.com/rust-lang/rust-clippy/pull/9870)\n+\n+[turbofish]: https://turbo.fish/::%3CClippy%3E\n+\n+### ICE Fixes\n+\n+* [`result_large_err`]: Fixed ICE for empty enums\n+  [#10007](https://github.com/rust-lang/rust-clippy/pull/10007)\n+* [`redundant_allocation`]: Fixed ICE for types with bounded variables\n+  [#9773](https://github.com/rust-lang/rust-clippy/pull/9773)\n+* [`unused_rounding`]: Fixed ICE, if `_` was used as a separator\n+  [#10001](https://github.com/rust-lang/rust-clippy/pull/10001)\n \n ## Rust 1.66\n \n-Current stable, released 2022-12-15\n+Released 2022-12-15\n \n [b52fb523...4f142aa1](https://github.com/rust-lang/rust-clippy/compare/b52fb523...4f142aa1)\n \n@@ -166,6 +359,7 @@ Current stable, released 2022-12-15\n \n * [`unnecessary_to_owned`]: Avoid ICEs in favor of false negatives if information is missing\n   [#9505](https://github.com/rust-lang/rust-clippy/pull/9505)\n+  [#10027](https://github.com/rust-lang/rust-clippy/pull/10027)\n * [`manual_range_contains`]: No longer ICEs on values behind references\n   [#9627](https://github.com/rust-lang/rust-clippy/pull/9627)\n * [`needless_pass_by_value`]: No longer ICEs on unsized `dyn Fn` arguments"}]}