{"sha": "d308ff910b18719fabaeb9df7bc5fc0afbd0a194", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMDhmZjkxMGIxODcxOWZhYmFlYjlkZjdiYzVmYzBhZmJkMGExOTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-06T08:18:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-06T08:18:12Z"}, "message": "Merge doc_tests and tests", "tree": {"sha": "a5689e09a58d2660bf3f4b2cf71b2624457c287b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5689e09a58d2660bf3f4b2cf71b2624457c287b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d308ff910b18719fabaeb9df7bc5fc0afbd0a194", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d308ff910b18719fabaeb9df7bc5fc0afbd0a194", "html_url": "https://github.com/rust-lang/rust/commit/d308ff910b18719fabaeb9df7bc5fc0afbd0a194", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d308ff910b18719fabaeb9df7bc5fc0afbd0a194/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25e6bbde01d4a9cd08fa79db5b8b7da6bbf1a623", "url": "https://api.github.com/repos/rust-lang/rust/commits/25e6bbde01d4a9cd08fa79db5b8b7da6bbf1a623", "html_url": "https://github.com/rust-lang/rust/commit/25e6bbde01d4a9cd08fa79db5b8b7da6bbf1a623"}], "stats": {"total": 69, "additions": 28, "deletions": 41}, "files": [{"sha": "5eabb33d08fc9663277774001e79bf654d237c22", "filename": "crates/ra_assists/src/doc_tests.rs", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/25e6bbde01d4a9cd08fa79db5b8b7da6bbf1a623/crates%2Fra_assists%2Fsrc%2Fdoc_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25e6bbde01d4a9cd08fa79db5b8b7da6bbf1a623/crates%2Fra_assists%2Fsrc%2Fdoc_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fdoc_tests.rs?ref=25e6bbde01d4a9cd08fa79db5b8b7da6bbf1a623", "patch": "@@ -1,39 +0,0 @@\n-//! Each assist definition has a special comment, which specifies docs and\n-//! example.\n-//!\n-//! We collect all the example and write the as tests in this module.\n-\n-mod generated;\n-\n-use ra_db::FileRange;\n-use test_utils::{assert_eq_text, extract_range_or_offset};\n-\n-use crate::resolved_assists;\n-\n-fn check(assist_id: &str, before: &str, after: &str) {\n-    let (selection, before) = extract_range_or_offset(before);\n-    let (db, file_id) = crate::tests::with_single_file(&before);\n-    let frange = FileRange { file_id, range: selection.into() };\n-\n-    let assist = resolved_assists(&db, frange)\n-        .into_iter()\n-        .find(|assist| assist.label.id.0 == assist_id)\n-        .unwrap_or_else(|| {\n-            panic!(\n-                \"\\n\\nAssist is not applicable: {}\\nAvailable assists: {}\",\n-                assist_id,\n-                resolved_assists(&db, frange)\n-                    .into_iter()\n-                    .map(|assist| assist.label.id.0)\n-                    .collect::<Vec<_>>()\n-                    .join(\", \")\n-            )\n-        });\n-\n-    let actual = {\n-        let mut actual = before.clone();\n-        assist.action.edit.apply(&mut actual);\n-        actual\n-    };\n-    assert_eq_text!(after, &actual);\n-}"}, {"sha": "b794b021d79ad8c5077c9c29ba1fac87aa0447cc", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d308ff910b18719fabaeb9df7bc5fc0afbd0a194/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d308ff910b18719fabaeb9df7bc5fc0afbd0a194/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=d308ff910b18719fabaeb9df7bc5fc0afbd0a194", "patch": "@@ -13,8 +13,6 @@ macro_rules! eprintln {\n mod assist_ctx;\n mod marks;\n #[cfg(test)]\n-mod doc_tests;\n-#[cfg(test)]\n mod tests;\n pub mod utils;\n pub mod ast_transform;"}, {"sha": "97744904ac86209adfacf2622c7dba80c36c2eff", "filename": "crates/ra_assists/src/tests.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d308ff910b18719fabaeb9df7bc5fc0afbd0a194/crates%2Fra_assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d308ff910b18719fabaeb9df7bc5fc0afbd0a194/crates%2Fra_assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Ftests.rs?ref=d308ff910b18719fabaeb9df7bc5fc0afbd0a194", "patch": "@@ -34,6 +34,34 @@ pub(crate) fn check_assist_not_applicable(assist: Handler, ra_fixture: &str) {\n     check(assist, ra_fixture, ExpectedResult::NotApplicable);\n }\n \n+fn check_doc_test(assist_id: &str, before: &str, after: &str) {\n+    let (selection, before) = extract_range_or_offset(before);\n+    let (db, file_id) = crate::tests::with_single_file(&before);\n+    let frange = FileRange { file_id, range: selection.into() };\n+\n+    let assist = resolved_assists(&db, frange)\n+        .into_iter()\n+        .find(|assist| assist.label.id.0 == assist_id)\n+        .unwrap_or_else(|| {\n+            panic!(\n+                \"\\n\\nAssist is not applicable: {}\\nAvailable assists: {}\",\n+                assist_id,\n+                resolved_assists(&db, frange)\n+                    .into_iter()\n+                    .map(|assist| assist.label.id.0)\n+                    .collect::<Vec<_>>()\n+                    .join(\", \")\n+            )\n+        });\n+\n+    let actual = {\n+        let mut actual = before.clone();\n+        assist.action.edit.apply(&mut actual);\n+        actual\n+    };\n+    assert_eq_text!(after, &actual);\n+}\n+\n enum ExpectedResult<'a> {\n     NotApplicable,\n     After(&'a str),"}, {"sha": "6696cc832300b8bf289d731f69756b5bbb1db8c5", "filename": "crates/ra_assists/src/tests/generated.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d308ff910b18719fabaeb9df7bc5fc0afbd0a194/crates%2Fra_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d308ff910b18719fabaeb9df7bc5fc0afbd0a194/crates%2Fra_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=d308ff910b18719fabaeb9df7bc5fc0afbd0a194", "previous_filename": "crates/ra_assists/src/doc_tests/generated.rs"}]}