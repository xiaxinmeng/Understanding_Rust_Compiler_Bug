{"sha": "361adf9f862c9127adf245c681c8c89ef2edda11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MWFkZjlmODYyYzkxMjdhZGYyNDVjNjgxYzhjODllZjJlZGRhMTE=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2011-10-27T16:14:13Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-27T20:37:35Z"}, "message": "Add tests for the 'as' (cast) operator", "tree": {"sha": "1e2f3ce5cefdf17a5e5787eb40329b8906566fd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e2f3ce5cefdf17a5e5787eb40329b8906566fd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/361adf9f862c9127adf245c681c8c89ef2edda11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/361adf9f862c9127adf245c681c8c89ef2edda11", "html_url": "https://github.com/rust-lang/rust/commit/361adf9f862c9127adf245c681c8c89ef2edda11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/361adf9f862c9127adf245c681c8c89ef2edda11/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a0f18558efc7ddb9cee6788bf74aa9876682bfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a0f18558efc7ddb9cee6788bf74aa9876682bfa", "html_url": "https://github.com/rust-lang/rust/commit/5a0f18558efc7ddb9cee6788bf74aa9876682bfa"}], "stats": {"total": 269, "additions": 269, "deletions": 0}, "files": [{"sha": "ab920550f44c3b9ea41fb5159dfe173c8346ea8a", "filename": "src/test/compile-fail/nonscalar-cast.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/361adf9f862c9127adf245c681c8c89ef2edda11/src%2Ftest%2Fcompile-fail%2Fnonscalar-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/361adf9f862c9127adf245c681c8c89ef2edda11/src%2Ftest%2Fcompile-fail%2Fnonscalar-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnonscalar-cast.rs?ref=361adf9f862c9127adf245c681c8c89ef2edda11", "patch": "@@ -0,0 +1,8 @@\n+// error-pattern:non-scalar cast\n+\n+use std;\n+import std::os;\n+\n+fn main() {\n+  log { x: 1 } as int;\n+}"}, {"sha": "00e65f4024018d0927992366d157de6b7b0b8bfa", "filename": "src/test/compile-fail/unsupported-cast.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/361adf9f862c9127adf245c681c8c89ef2edda11/src%2Ftest%2Fcompile-fail%2Funsupported-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/361adf9f862c9127adf245c681c8c89ef2edda11/src%2Ftest%2Fcompile-fail%2Funsupported-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsupported-cast.rs?ref=361adf9f862c9127adf245c681c8c89ef2edda11", "patch": "@@ -0,0 +1,8 @@\n+// error-pattern:unsupported cast\n+\n+use std;\n+import std::os;\n+\n+fn main() {\n+  log 1.0 as os::libc::FILE; // Can't cast float to native.\n+}"}, {"sha": "a100386d1dcbb28cc50c0518ee4fd26cf71c5f30", "filename": "src/test/run-pass/supported-cast.rs", "status": "added", "additions": 253, "deletions": 0, "changes": 253, "blob_url": "https://github.com/rust-lang/rust/blob/361adf9f862c9127adf245c681c8c89ef2edda11/src%2Ftest%2Frun-pass%2Fsupported-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/361adf9f862c9127adf245c681c8c89ef2edda11/src%2Ftest%2Frun-pass%2Fsupported-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsupported-cast.rs?ref=361adf9f862c9127adf245c681c8c89ef2edda11", "patch": "@@ -0,0 +1,253 @@\n+use std;\n+import std::os;\n+\n+fn main() {\n+  let f = 1 as os::libc::FILE;\n+  log f as int;\n+  log f as uint;\n+  log f as i8;\n+  log f as i16;\n+  log f as i32;\n+  log f as i64;\n+  log f as u8;\n+  log f as u16;\n+  log f as u32;\n+  log f as u64;\n+\n+  log 1 as int;\n+  log 1 as uint;\n+  log 1 as float;\n+  log 1 as bool;\n+  log 1 as os::libc::FILE;\n+  log 1 as i8;\n+  log 1 as i16;\n+  log 1 as i32;\n+  log 1 as i64;\n+  log 1 as u8;\n+  log 1 as u16;\n+  log 1 as u32;\n+  log 1 as u64;\n+  log 1 as f32;\n+  log 1 as f64;\n+\n+  log 1u as int;\n+  log 1u as uint;\n+  log 1u as float;\n+  log 1u as bool;\n+  log 1u as os::libc::FILE;\n+  log 1u as i8;\n+  log 1u as i16;\n+  log 1u as i32;\n+  log 1u as i64;\n+  log 1u as u8;\n+  log 1u as u16;\n+  log 1u as u32;\n+  log 1u as u64;\n+  log 1u as f32;\n+  log 1u as f64;\n+\n+  log 1i8 as int;\n+  log 1i8 as uint;\n+  log 1i8 as float;\n+  log 1i8 as bool;\n+  log 1i8 as os::libc::FILE;\n+  log 1i8 as i8;\n+  log 1i8 as i16;\n+  log 1i8 as i32;\n+  log 1i8 as i64;\n+  log 1i8 as u8;\n+  log 1i8 as u16;\n+  log 1i8 as u32;\n+  log 1i8 as u64;\n+  log 1i8 as f32;\n+  log 1i8 as f64;\n+\n+  log 1u8 as int;\n+  log 1u8 as uint;\n+  log 1u8 as float;\n+  log 1u8 as bool;\n+  log 1u8 as os::libc::FILE;\n+  log 1u8 as i8;\n+  log 1u8 as i16;\n+  log 1u8 as i32;\n+  log 1u8 as i64;\n+  log 1u8 as u8;\n+  log 1u8 as u16;\n+  log 1u8 as u32;\n+  log 1u8 as u64;\n+  log 1u8 as f32;\n+  log 1u8 as f64;\n+\n+  log 1i16 as int;\n+  log 1i16 as uint;\n+  log 1i16 as float;\n+  log 1i16 as bool;\n+  log 1i16 as os::libc::FILE;\n+  log 1i16 as i8;\n+  log 1i16 as i16;\n+  log 1i16 as i32;\n+  log 1i16 as i64;\n+  log 1i16 as u8;\n+  log 1i16 as u16;\n+  log 1i16 as u32;\n+  log 1i16 as u64;\n+  log 1i16 as f32;\n+  log 1i16 as f64;\n+\n+  log 1u16 as int;\n+  log 1u16 as uint;\n+  log 1u16 as float;\n+  log 1u16 as bool;\n+  log 1u16 as os::libc::FILE;\n+  log 1u16 as i8;\n+  log 1u16 as i16;\n+  log 1u16 as i32;\n+  log 1u16 as i64;\n+  log 1u16 as u8;\n+  log 1u16 as u16;\n+  log 1u16 as u32;\n+  log 1u16 as u64;\n+  log 1u16 as f32;\n+  log 1u16 as f64;\n+\n+  log 1i32 as int;\n+  log 1i32 as uint;\n+  log 1i32 as float;\n+  log 1i32 as bool;\n+  log 1i32 as os::libc::FILE;\n+  log 1i32 as i8;\n+  log 1i32 as i16;\n+  log 1i32 as i32;\n+  log 1i32 as i64;\n+  log 1i32 as u8;\n+  log 1i32 as u16;\n+  log 1i32 as u32;\n+  log 1i32 as u64;\n+  log 1i32 as f32;\n+  log 1i32 as f64;\n+\n+  log 1u32 as int;\n+  log 1u32 as uint;\n+  log 1u32 as float;\n+  log 1u32 as bool;\n+  log 1u32 as os::libc::FILE;\n+  log 1u32 as i8;\n+  log 1u32 as i16;\n+  log 1u32 as i32;\n+  log 1u32 as i64;\n+  log 1u32 as u8;\n+  log 1u32 as u16;\n+  log 1u32 as u32;\n+  log 1u32 as u64;\n+  log 1u32 as f32;\n+  log 1u32 as f64;\n+\n+  log 1i64 as int;\n+  log 1i64 as uint;\n+  log 1i64 as float;\n+  log 1i64 as bool;\n+  log 1i64 as os::libc::FILE;\n+  log 1i64 as i8;\n+  log 1i64 as i16;\n+  log 1i64 as i32;\n+  log 1i64 as i64;\n+  log 1i64 as u8;\n+  log 1i64 as u16;\n+  log 1i64 as u32;\n+  log 1i64 as u64;\n+  log 1i64 as f32;\n+  log 1i64 as f64;\n+\n+  log 1u64 as int;\n+  log 1u64 as uint;\n+  log 1u64 as float;\n+  log 1u64 as bool;\n+  log 1u64 as os::libc::FILE;\n+  log 1u64 as i8;\n+  log 1u64 as i16;\n+  log 1u64 as i32;\n+  log 1u64 as i64;\n+  log 1u64 as u8;\n+  log 1u64 as u16;\n+  log 1u64 as u32;\n+  log 1u64 as u64;\n+  log 1u64 as f32;\n+  log 1u64 as f64;\n+\n+  log 1u64 as int;\n+  log 1u64 as uint;\n+  log 1u64 as float;\n+  log 1u64 as bool;\n+  log 1u64 as os::libc::FILE;\n+  log 1u64 as i8;\n+  log 1u64 as i16;\n+  log 1u64 as i32;\n+  log 1u64 as i64;\n+  log 1u64 as u8;\n+  log 1u64 as u16;\n+  log 1u64 as u32;\n+  log 1u64 as u64;\n+  log 1u64 as f32;\n+  log 1u64 as f64;\n+\n+  log true as int;\n+  log true as uint;\n+  log true as float;\n+  log true as bool;\n+  log true as os::libc::FILE;\n+  log true as i8;\n+  log true as i16;\n+  log true as i32;\n+  log true as i64;\n+  log true as u8;\n+  log true as u16;\n+  log true as u32;\n+  log true as u64;\n+  log true as f32;\n+  log true as f64;\n+\n+  log 1. as int;\n+  log 1. as uint;\n+  log 1. as float;\n+  log 1. as bool;\n+  log 1. as i8;\n+  log 1. as i16;\n+  log 1. as i32;\n+  log 1. as i64;\n+  log 1. as u8;\n+  log 1. as u16;\n+  log 1. as u32;\n+  log 1. as u64;\n+  log 1. as f32;\n+  log 1. as f64;\n+\n+  log 1f32 as int;\n+  log 1f32 as uint;\n+  log 1f32 as float;\n+  log 1f32 as bool;\n+  log 1f32 as i8;\n+  log 1f32 as i16;\n+  log 1f32 as i32;\n+  log 1f32 as i64;\n+  log 1f32 as u8;\n+  log 1f32 as u16;\n+  log 1f32 as u32;\n+  log 1f32 as u64;\n+  log 1f32 as f32;\n+  log 1f32 as f64;\n+\n+  log 1f64 as int;\n+  log 1f64 as uint;\n+  log 1f64 as float;\n+  log 1f64 as bool;\n+  log 1f64 as i8;\n+  log 1f64 as i16;\n+  log 1f64 as i32;\n+  log 1f64 as i64;\n+  log 1f64 as u8;\n+  log 1f64 as u16;\n+  log 1f64 as u32;\n+  log 1f64 as u64;\n+  log 1f64 as f32;\n+  log 1f64 as f64;\n+}"}]}