{"sha": "04e9c20228c38c20c5d4f84328332b2c5c98d5a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZTljMjAyMjhjMzhjMjBjNWQ0Zjg0MzI4MzMyYjJjNWM5OGQ1YTI=", "commit": {"author": {"name": "Irfan Hudda", "email": "irfanhudda@gmail.com", "date": "2017-04-19T18:29:43Z"}, "committer": {"name": "Irfan Hudda", "email": "irfanhudda@gmail.com", "date": "2017-04-19T18:29:43Z"}, "message": "next_power_of_two panic on overflow", "tree": {"sha": "12da51879b87420108bd76835eccd89d92be1d60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12da51879b87420108bd76835eccd89d92be1d60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04e9c20228c38c20c5d4f84328332b2c5c98d5a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04e9c20228c38c20c5d4f84328332b2c5c98d5a2", "html_url": "https://github.com/rust-lang/rust/commit/04e9c20228c38c20c5d4f84328332b2c5c98d5a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04e9c20228c38c20c5d4f84328332b2c5c98d5a2/comments", "author": {"login": "irfanhudda", "id": 1755089, "node_id": "MDQ6VXNlcjE3NTUwODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1755089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irfanhudda", "html_url": "https://github.com/irfanhudda", "followers_url": "https://api.github.com/users/irfanhudda/followers", "following_url": "https://api.github.com/users/irfanhudda/following{/other_user}", "gists_url": "https://api.github.com/users/irfanhudda/gists{/gist_id}", "starred_url": "https://api.github.com/users/irfanhudda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irfanhudda/subscriptions", "organizations_url": "https://api.github.com/users/irfanhudda/orgs", "repos_url": "https://api.github.com/users/irfanhudda/repos", "events_url": "https://api.github.com/users/irfanhudda/events{/privacy}", "received_events_url": "https://api.github.com/users/irfanhudda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irfanhudda", "id": 1755089, "node_id": "MDQ6VXNlcjE3NTUwODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1755089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irfanhudda", "html_url": "https://github.com/irfanhudda", "followers_url": "https://api.github.com/users/irfanhudda/followers", "following_url": "https://api.github.com/users/irfanhudda/following{/other_user}", "gists_url": "https://api.github.com/users/irfanhudda/gists{/gist_id}", "starred_url": "https://api.github.com/users/irfanhudda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irfanhudda/subscriptions", "organizations_url": "https://api.github.com/users/irfanhudda/orgs", "repos_url": "https://api.github.com/users/irfanhudda/repos", "events_url": "https://api.github.com/users/irfanhudda/events{/privacy}", "received_events_url": "https://api.github.com/users/irfanhudda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7c641b8b62a36ce23bd000644f19cf8761007b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7c641b8b62a36ce23bd000644f19cf8761007b0", "html_url": "https://github.com/rust-lang/rust/commit/f7c641b8b62a36ce23bd000644f19cf8761007b0"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "15ffe9db8ce6b270482b6beb8f0dd42f13a1eeb0", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/04e9c20228c38c20c5d4f84328332b2c5c98d5a2/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04e9c20228c38c20c5d4f84328332b2c5c98d5a2/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=04e9c20228c38c20c5d4f84328332b2c5c98d5a2", "patch": "@@ -2345,7 +2345,11 @@ macro_rules! uint_impl {\n         pub fn next_power_of_two(self) -> Self {\n             let bits = size_of::<Self>() * 8;\n             let one: Self = 1;\n-            one << ((bits - self.wrapping_sub(one).leading_zeros() as usize) % bits)\n+            if self == 0 {\n+                1\n+            } else {\n+                one << (bits - self.wrapping_sub(one).leading_zeros() as usize)\n+            }\n         }\n \n         /// Returns the smallest power of two greater than or equal to `n`. If\n@@ -2363,7 +2367,9 @@ macro_rules! uint_impl {\n         /// ```\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         pub fn checked_next_power_of_two(self) -> Option<Self> {\n-            let npot = self.next_power_of_two();\n+            let bits = size_of::<Self>() * 8;\n+            let one: Self = 1;\n+            let npot = one << ((bits - self.wrapping_sub(one).leading_zeros() as usize) % bits);\n             if npot >= self {\n                 Some(npot)\n             } else {"}]}