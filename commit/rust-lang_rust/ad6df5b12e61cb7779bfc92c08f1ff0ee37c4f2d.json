{"sha": "ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d", "node_id": "C_kwDOAAsO6NoAKGFkNmRmNWIxMmU2MWNiNzc3OWJmYzkyYzA4ZjFmZjBlZTM3YzRmMmQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-09T16:12:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-09T16:12:47Z"}, "message": "Auto merge of #12199 - jonas-schievink:no-invalid-assoc-ty-completions, r=jonas-schievink\n\nfix: Don't show assoc. type binding completions when invalid\n\nFixes https://github.com/rust-lang/rust-analyzer/issues/12165", "tree": {"sha": "c83ea7b413c5a55285b0e40d5fc0e79320e0c2e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c83ea7b413c5a55285b0e40d5fc0e79320e0c2e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d", "html_url": "https://github.com/rust-lang/rust/commit/ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab558053f5459be7977ce0a6ae479218d4b76841", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab558053f5459be7977ce0a6ae479218d4b76841", "html_url": "https://github.com/rust-lang/rust/commit/ab558053f5459be7977ce0a6ae479218d4b76841"}, {"sha": "5a2398d77537573da32e4ec3b210081e2aea07a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a2398d77537573da32e4ec3b210081e2aea07a3", "html_url": "https://github.com/rust-lang/rust/commit/5a2398d77537573da32e4ec3b210081e2aea07a3"}], "stats": {"total": 52, "additions": 43, "deletions": 9}, "files": [{"sha": "91414c8bf6a7435775922ac0c826e14af377aadc", "filename": "crates/ide-completion/src/completions/type.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d/crates%2Fide-completion%2Fsrc%2Fcompletions%2Ftype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d/crates%2Fide-completion%2Fsrc%2Fcompletions%2Ftype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Ftype.rs?ref=ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d", "patch": "@@ -165,15 +165,17 @@ pub(crate) fn complete_type_path(acc: &mut Completions, ctx: &CompletionContext)\n             if let Some(ImmediateLocation::GenericArgList(arg_list)) = &ctx.completion_location {\n                 if let Some(path_seg) = arg_list.syntax().parent().and_then(ast::PathSegment::cast)\n                 {\n-                    if let Some(hir::PathResolution::Def(hir::ModuleDef::Trait(trait_))) =\n-                        ctx.sema.resolve_path(&path_seg.parent_path())\n-                    {\n-                        trait_.items_with_supertraits(ctx.sema.db).into_iter().for_each(|it| {\n-                            if let hir::AssocItem::TypeAlias(alias) = it {\n-                                cov_mark::hit!(complete_assoc_type_in_generics_list);\n-                                acc.add_type_alias_with_eq(ctx, alias)\n-                            }\n-                        });\n+                    if path_seg.syntax().ancestors().find_map(ast::TypeBound::cast).is_some() {\n+                        if let Some(hir::PathResolution::Def(hir::ModuleDef::Trait(trait_))) =\n+                            ctx.sema.resolve_path(&path_seg.parent_path())\n+                        {\n+                            trait_.items_with_supertraits(ctx.sema.db).into_iter().for_each(|it| {\n+                                if let hir::AssocItem::TypeAlias(alias) = it {\n+                                    cov_mark::hit!(complete_assoc_type_in_generics_list);\n+                                    acc.add_type_alias_with_eq(ctx, alias)\n+                                }\n+                            });\n+                        }\n                     }\n                 }\n             }"}, {"sha": "1e5e86eef598a10ff8acb9227f334acd09dd4eb6", "filename": "crates/ide-completion/src/tests/type_pos.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d/crates%2Fide-completion%2Fsrc%2Ftests%2Ftype_pos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d/crates%2Fide-completion%2Fsrc%2Ftests%2Ftype_pos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Ftype_pos.rs?ref=ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d", "patch": "@@ -393,6 +393,38 @@ fn foo<'lt, T: Trait2<self::$0>, const CONST_PARAM: usize>(_: T) {}\n     );\n }\n \n+#[test]\n+fn no_assoc_completion_outside_type_bounds() {\n+    check(\n+        r#\"\n+struct S;\n+trait Tr<T> {\n+    type Ty;\n+}\n+\n+impl Tr<$0\n+    \"#,\n+        expect![[r#\"\n+            ct CONST\n+            en Enum\n+            ma makro!(\u2026) macro_rules! makro\n+            md module\n+            sp Self\n+            st Record\n+            st S\n+            st Tuple\n+            st Unit\n+            tt Tr\n+            tt Trait\n+            un Union\n+            bt u32\n+            kw crate::\n+            kw self::\n+            kw super::\n+        \"#]],\n+    );\n+}\n+\n #[test]\n fn enum_qualified() {\n     check("}]}