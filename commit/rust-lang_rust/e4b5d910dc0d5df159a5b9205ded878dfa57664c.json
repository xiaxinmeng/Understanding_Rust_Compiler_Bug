{"sha": "e4b5d910dc0d5df159a5b9205ded878dfa57664c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YjVkOTEwZGMwZDVkZjE1OWE1YjkyMDVkZWQ4NzhkZmE1NzY2NGM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-27T22:38:04Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-27T22:38:21Z"}, "message": "rustc: Directly emit calls to glue if possible", "tree": {"sha": "66bdb0caaaf316d9abc8bd8b8732b5973b77f597", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66bdb0caaaf316d9abc8bd8b8732b5973b77f597"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4b5d910dc0d5df159a5b9205ded878dfa57664c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4b5d910dc0d5df159a5b9205ded878dfa57664c", "html_url": "https://github.com/rust-lang/rust/commit/e4b5d910dc0d5df159a5b9205ded878dfa57664c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4b5d910dc0d5df159a5b9205ded878dfa57664c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45581673071b1294afb36c17766c57aa70425e19", "url": "https://api.github.com/repos/rust-lang/rust/commits/45581673071b1294afb36c17766c57aa70425e19", "html_url": "https://github.com/rust-lang/rust/commit/45581673071b1294afb36c17766c57aa70425e19"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "b5f255a7b029b86108fd47466c522a625c5b0c71", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e4b5d910dc0d5df159a5b9205ded878dfa57664c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4b5d910dc0d5df159a5b9205ded878dfa57664c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=e4b5d910dc0d5df159a5b9205ded878dfa57664c", "patch": "@@ -2893,13 +2893,38 @@ fn lazily_emit_tydesc_glue(&@block_ctxt cx, int field,\n fn call_tydesc_glue_full(&@block_ctxt cx, ValueRef v, ValueRef tydesc,\n                          int field, &option::t[@tydesc_info] static_ti) {\n     lazily_emit_tydesc_glue(cx, field, static_ti);\n+\n+    auto static_glue_fn = none;\n+    alt (static_ti) {\n+      case (none) { /* no-op */ }\n+      case (some(?sti)) {\n+        if (field == abi::tydesc_field_take_glue) {\n+            static_glue_fn = sti.take_glue;\n+        } else if (field == abi::tydesc_field_drop_glue) {\n+            static_glue_fn = sti.drop_glue;\n+        } else if (field == abi::tydesc_field_free_glue) {\n+            static_glue_fn = sti.free_glue;\n+        } else if (field == abi::tydesc_field_cmp_glue) {\n+            static_glue_fn = sti.cmp_glue;\n+        }\n+      }\n+    }\n+\n     auto llrawptr = cx.build.BitCast(v, T_ptr(T_i8()));\n     auto lltydescs =\n         cx.build.GEP(tydesc,\n                      [C_int(0), C_int(abi::tydesc_field_first_param)]);\n     lltydescs = cx.build.Load(lltydescs);\n-    auto llfnptr = cx.build.GEP(tydesc, [C_int(0), C_int(field)]);\n-    auto llfn = cx.build.Load(llfnptr);\n+\n+    auto llfn;\n+    alt (static_glue_fn) {\n+      case (none) {\n+        auto llfnptr = cx.build.GEP(tydesc, [C_int(0), C_int(field)]);\n+        llfn = cx.build.Load(llfnptr);\n+      }\n+      case (some(?sgf)) { llfn = sgf; }\n+    }\n+\n     cx.build.Call(llfn,\n                   [C_null(T_ptr(T_nil())), cx.fcx.lltaskptr,\n                    C_null(T_ptr(T_nil())), lltydescs, llrawptr]);"}]}