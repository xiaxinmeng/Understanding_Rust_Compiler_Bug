{"sha": "a2ff845f3a4ed88037b43d73ced372fd15e98ce5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZmY4NDVmM2E0ZWQ4ODAzN2I0M2Q3M2NlZDM3MmZkMTVlOThjZTU=", "commit": {"author": {"name": "Donato Sciarra", "email": "sciarp@gmail.com", "date": "2018-08-18T10:14:25Z"}, "committer": {"name": "Donato Sciarra", "email": "sciarp@gmail.com", "date": "2018-08-19T21:01:01Z"}, "message": "mv CachingCodemapView CachingSourceMapView", "tree": {"sha": "30f7163b7ce250ef2b928f3d9806e3b9ad7c1a08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30f7163b7ce250ef2b928f3d9806e3b9ad7c1a08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2ff845f3a4ed88037b43d73ced372fd15e98ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2ff845f3a4ed88037b43d73ced372fd15e98ce5", "html_url": "https://github.com/rust-lang/rust/commit/a2ff845f3a4ed88037b43d73ced372fd15e98ce5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2ff845f3a4ed88037b43d73ced372fd15e98ce5/comments", "author": {"login": "dsciarra", "id": 2036702, "node_id": "MDQ6VXNlcjIwMzY3MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2036702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsciarra", "html_url": "https://github.com/dsciarra", "followers_url": "https://api.github.com/users/dsciarra/followers", "following_url": "https://api.github.com/users/dsciarra/following{/other_user}", "gists_url": "https://api.github.com/users/dsciarra/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsciarra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsciarra/subscriptions", "organizations_url": "https://api.github.com/users/dsciarra/orgs", "repos_url": "https://api.github.com/users/dsciarra/repos", "events_url": "https://api.github.com/users/dsciarra/events{/privacy}", "received_events_url": "https://api.github.com/users/dsciarra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dsciarra", "id": 2036702, "node_id": "MDQ6VXNlcjIwMzY3MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2036702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsciarra", "html_url": "https://github.com/dsciarra", "followers_url": "https://api.github.com/users/dsciarra/followers", "following_url": "https://api.github.com/users/dsciarra/following{/other_user}", "gists_url": "https://api.github.com/users/dsciarra/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsciarra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsciarra/subscriptions", "organizations_url": "https://api.github.com/users/dsciarra/orgs", "repos_url": "https://api.github.com/users/dsciarra/repos", "events_url": "https://api.github.com/users/dsciarra/events{/privacy}", "received_events_url": "https://api.github.com/users/dsciarra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "062bfbf39bef9360e1553f293f4f1015c5680dec", "url": "https://api.github.com/repos/rust-lang/rust/commits/062bfbf39bef9360e1553f293f4f1015c5680dec", "html_url": "https://github.com/rust-lang/rust/commit/062bfbf39bef9360e1553f293f4f1015c5680dec"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "97114779042af612ec3c0750f13889b7dd821c80", "filename": "src/librustc/ich/caching_codemap_view.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a2ff845f3a4ed88037b43d73ced372fd15e98ce5/src%2Flibrustc%2Fich%2Fcaching_codemap_view.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ff845f3a4ed88037b43d73ced372fd15e98ce5/src%2Flibrustc%2Fich%2Fcaching_codemap_view.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fcaching_codemap_view.rs?ref=a2ff845f3a4ed88037b43d73ced372fd15e98ce5", "patch": "@@ -23,14 +23,14 @@ struct CacheEntry {\n }\n \n #[derive(Clone)]\n-pub struct CachingCodemapView<'cm> {\n+pub struct CachingSourceMapView<'cm> {\n     source_map: &'cm SourceMap,\n     line_cache: [CacheEntry; 3],\n     time_stamp: usize,\n }\n \n-impl<'cm> CachingCodemapView<'cm> {\n-    pub fn new(source_map: &'cm SourceMap) -> CachingCodemapView<'cm> {\n+impl<'cm> CachingSourceMapView<'cm> {\n+    pub fn new(source_map: &'cm SourceMap) -> CachingSourceMapView<'cm> {\n         let files = source_map.files();\n         let first_file = files[0].clone();\n         let entry = CacheEntry {\n@@ -42,7 +42,7 @@ impl<'cm> CachingCodemapView<'cm> {\n             file_index: 0,\n         };\n \n-        CachingCodemapView {\n+        CachingSourceMapView {\n             source_map,\n             line_cache: [entry.clone(), entry.clone(), entry.clone()],\n             time_stamp: 0,"}, {"sha": "f03ad98c7dee4e9bb454fda317521e819a9448d4", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a2ff845f3a4ed88037b43d73ced372fd15e98ce5/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ff845f3a4ed88037b43d73ced372fd15e98ce5/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=a2ff845f3a4ed88037b43d73ced372fd15e98ce5", "patch": "@@ -12,7 +12,7 @@ use hir;\n use hir::def_id::{DefId, DefIndex};\n use hir::map::DefPathHash;\n use hir::map::definitions::Definitions;\n-use ich::{self, CachingCodemapView, Fingerprint};\n+use ich::{self, CachingSourceMapView, Fingerprint};\n use middle::cstore::CrateStore;\n use ty::{TyCtxt, fast_reject};\n use mir::interpret::AllocId;\n@@ -57,9 +57,9 @@ pub struct StableHashingContext<'a> {\n     node_id_hashing_mode: NodeIdHashingMode,\n \n     // Very often, we are hashing something that does not need the\n-    // CachingCodemapView, so we initialize it lazily.\n+    // CachingSourceMapView, so we initialize it lazily.\n     raw_source_map: &'a SourceMap,\n-    caching_source_map: Option<CachingCodemapView<'a>>,\n+    caching_source_map: Option<CachingSourceMapView<'a>>,\n \n     pub(super) alloc_id_recursion_tracker: FxHashSet<AllocId>,\n }\n@@ -169,13 +169,13 @@ impl<'a> StableHashingContext<'a> {\n     }\n \n     #[inline]\n-    pub fn source_map(&mut self) -> &mut CachingCodemapView<'a> {\n+    pub fn source_map(&mut self) -> &mut CachingSourceMapView<'a> {\n         match self.caching_source_map {\n             Some(ref mut cm) => {\n                 cm\n             }\n             ref mut none => {\n-                *none = Some(CachingCodemapView::new(self.raw_source_map));\n+                *none = Some(CachingSourceMapView::new(self.raw_source_map));\n                 none.as_mut().unwrap()\n             }\n         }"}, {"sha": "6e5134c3c0545e013eb8386fad8efc25b5029efe", "filename": "src/librustc/ich/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2ff845f3a4ed88037b43d73ced372fd15e98ce5/src%2Flibrustc%2Fich%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ff845f3a4ed88037b43d73ced372fd15e98ce5/src%2Flibrustc%2Fich%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fmod.rs?ref=a2ff845f3a4ed88037b43d73ced372fd15e98ce5", "patch": "@@ -11,7 +11,7 @@\n //! ICH - Incremental Compilation Hash\n \n crate use rustc_data_structures::fingerprint::Fingerprint;\n-pub use self::caching_codemap_view::CachingCodemapView;\n+pub use self::caching_codemap_view::CachingSourceMapView;\n pub use self::hcx::{StableHashingContextProvider, StableHashingContext, NodeIdHashingMode,\n                     hash_stable_trait_impls};\n mod caching_codemap_view;"}, {"sha": "6e16d92ba0c8d91ef45e9bf0274530698de2f0af", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a2ff845f3a4ed88037b43d73ced372fd15e98ce5/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ff845f3a4ed88037b43d73ced372fd15e98ce5/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=a2ff845f3a4ed88037b43d73ced372fd15e98ce5", "patch": "@@ -14,7 +14,7 @@ use hir;\n use hir::def_id::{CrateNum, DefIndex, DefId, LocalDefId,\n                   RESERVED_FOR_INCR_COMP_CACHE, LOCAL_CRATE};\n use hir::map::definitions::DefPathHash;\n-use ich::{CachingCodemapView, Fingerprint};\n+use ich::{CachingSourceMapView, Fingerprint};\n use mir::{self, interpret};\n use mir::interpret::{AllocDecodingSession, AllocDecodingState};\n use rustc_data_structures::fx::FxHashMap;\n@@ -196,7 +196,7 @@ impl<'sess> OnDiskCache<'sess> {\n                 expn_info_shorthands: FxHashMap(),\n                 interpret_allocs: FxHashMap(),\n                 interpret_allocs_inverse: Vec::new(),\n-                source_map: CachingCodemapView::new(tcx.sess.source_map()),\n+                source_map: CachingSourceMapView::new(tcx.sess.source_map()),\n                 file_to_file_index,\n             };\n \n@@ -770,7 +770,7 @@ struct CacheEncoder<'enc, 'a, 'tcx, E>\n     expn_info_shorthands: FxHashMap<Mark, AbsoluteBytePos>,\n     interpret_allocs: FxHashMap<interpret::AllocId, usize>,\n     interpret_allocs_inverse: Vec<interpret::AllocId>,\n-    source_map: CachingCodemapView<'tcx>,\n+    source_map: CachingSourceMapView<'tcx>,\n     file_to_file_index: FxHashMap<*const SourceFile, SourceFileIndex>,\n }\n "}]}