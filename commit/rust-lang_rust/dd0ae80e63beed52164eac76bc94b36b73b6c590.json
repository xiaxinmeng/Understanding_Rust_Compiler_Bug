{"sha": "dd0ae80e63beed52164eac76bc94b36b73b6c590", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMGFlODBlNjNiZWVkNTIxNjRlYWM3NmJjOTRiMzZiNzNiNmM1OTA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-10T19:26:50Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-10T20:58:35Z"}, "message": "rt: Account for the size of stack_canary in create_stack", "tree": {"sha": "8a5377ddaa5a50dcd0e9891b4c705c46d24a7061", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a5377ddaa5a50dcd0e9891b4c705c46d24a7061"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd0ae80e63beed52164eac76bc94b36b73b6c590", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd0ae80e63beed52164eac76bc94b36b73b6c590", "html_url": "https://github.com/rust-lang/rust/commit/dd0ae80e63beed52164eac76bc94b36b73b6c590", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd0ae80e63beed52164eac76bc94b36b73b6c590/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc028c30a0570e097f4f16f9731c1433226e5367", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc028c30a0570e097f4f16f9731c1433226e5367", "html_url": "https://github.com/rust-lang/rust/commit/fc028c30a0570e097f4f16f9731c1433226e5367"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "190cfba8c139cab692c83b23245b2b434afde93f", "filename": "src/rt/rust_stack.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dd0ae80e63beed52164eac76bc94b36b73b6c590/src%2Frt%2Frust_stack.h", "raw_url": "https://github.com/rust-lang/rust/raw/dd0ae80e63beed52164eac76bc94b36b73b6c590/src%2Frt%2Frust_stack.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_stack.h?ref=dd0ae80e63beed52164eac76bc94b36b73b6c590", "patch": "@@ -13,13 +13,19 @@ struct stk_seg {\n     uint8_t data[];\n };\n \n+// A value that goes at the end of the stack and must not be touched\n+const uint8_t stack_canary[] = {0xAB, 0xCD, 0xAB, 0xCD,\n+                                0xAB, 0xCD, 0xAB, 0xCD,\n+                                0xAB, 0xCD, 0xAB, 0xCD,\n+                                0xAB, 0xCD, 0xAB, 0xCD};\n+\n void\n add_stack_canary(stk_seg *stk);\n \n template <class T>\n stk_seg *\n create_stack(T allocer, size_t sz) {\n-  size_t total_sz = sizeof(stk_seg) + sz;\n+  size_t total_sz = sizeof(stk_seg) + sz + sizeof(stack_canary);\n   stk_seg *stk = (stk_seg *)allocer->malloc(total_sz, \"stack\");\n   memset(stk, 0, sizeof(stk_seg));\n   add_stack_canary(stk);"}]}