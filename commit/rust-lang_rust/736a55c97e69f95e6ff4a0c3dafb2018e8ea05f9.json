{"sha": "736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNmE1NWM5N2U2OWY5NWU2ZmY0YTBjM2RhZmIyMDE4ZThlYTA1Zjk=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-06T12:23:26Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-06T12:23:26Z"}, "message": "Merge #748\n\n748: Fill deprecation for LSP r=kjeremy a=kjeremy\n\n\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>", "tree": {"sha": "4f82dda9b02ca33d154cefd46ced58596bc2065c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f82dda9b02ca33d154cefd46ced58596bc2065c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9", "html_url": "https://github.com/rust-lang/rust/commit/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "569e1e871e737ade80616288241d63e1531dbb8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/569e1e871e737ade80616288241d63e1531dbb8d", "html_url": "https://github.com/rust-lang/rust/commit/569e1e871e737ade80616288241d63e1531dbb8d"}, {"sha": "d107926f8621dfc08010ffc5bf4a1ac6356c6c87", "url": "https://api.github.com/repos/rust-lang/rust/commits/d107926f8621dfc08010ffc5bf4a1ac6356c6c87", "html_url": "https://github.com/rust-lang/rust/commit/d107926f8621dfc08010ffc5bf4a1ac6356c6c87"}], "stats": {"total": 109, "additions": 86, "deletions": 23}, "files": [{"sha": "413f4a5ff692446d613b86215b450a6e1e4af0ab", "filename": "crates/ra_ide_api_light/src/snapshots/tests__file_structure.snap", "status": "modified", "additions": 53, "deletions": 17, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap", "raw_url": "https://github.com/rust-lang/rust/raw/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap?ref=736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9", "patch": "@@ -1,8 +1,8 @@\n ---\n-created: \"2019-01-26T07:11:02.463391362+00:00\"\n-creator: insta@0.5.2\n-expression: structure\n+created: \"2019-02-05T22:03:50.763530100Z\"\n+creator: insta@0.6.1\n source: crates/ra_ide_api_light/src/structure.rs\n+expression: structure\n ---\n [\n     StructureNode {\n@@ -11,7 +11,8 @@ source: crates/ra_ide_api_light/src/structure.rs\n         navigation_range: [8; 11),\n         node_range: [1; 26),\n         kind: STRUCT_DEF,\n-        detail: None\n+        detail: None,\n+        deprecated: false\n     },\n     StructureNode {\n         parent: Some(\n@@ -23,15 +24,17 @@ source: crates/ra_ide_api_light/src/structure.rs\n         kind: NAMED_FIELD_DEF,\n         detail: Some(\n             \"i32\"\n-        )\n+        ),\n+        deprecated: false\n     },\n     StructureNode {\n         parent: None,\n         label: \"m\",\n         navigation_range: [32; 33),\n         node_range: [28; 158),\n         kind: MODULE,\n-        detail: None\n+        detail: None,\n+        deprecated: false\n     },\n     StructureNode {\n         parent: Some(\n@@ -43,7 +46,8 @@ source: crates/ra_ide_api_light/src/structure.rs\n         kind: FN_DEF,\n         detail: Some(\n             \"fn()\"\n-        )\n+        ),\n+        deprecated: false\n     },\n     StructureNode {\n         parent: Some(\n@@ -55,7 +59,8 @@ source: crates/ra_ide_api_light/src/structure.rs\n         kind: FN_DEF,\n         detail: Some(\n             \"fn<T>(t: T) -> T\"\n-        )\n+        ),\n+        deprecated: false\n     },\n     StructureNode {\n         parent: Some(\n@@ -67,15 +72,17 @@ source: crates/ra_ide_api_light/src/structure.rs\n         kind: FN_DEF,\n         detail: Some(\n             \"fn<A, B>(a: A, b: B) -> Vec< u32 >\"\n-        )\n+        ),\n+        deprecated: false\n     },\n     StructureNode {\n         parent: None,\n         label: \"E\",\n         navigation_range: [165; 166),\n         node_range: [160; 180),\n         kind: ENUM_DEF,\n-        detail: None\n+        detail: None,\n+        deprecated: false\n     },\n     StructureNode {\n         parent: Some(\n@@ -85,7 +92,8 @@ source: crates/ra_ide_api_light/src/structure.rs\n         navigation_range: [169; 170),\n         node_range: [169; 170),\n         kind: ENUM_VARIANT,\n-        detail: None\n+        detail: None,\n+        deprecated: false\n     },\n     StructureNode {\n         parent: Some(\n@@ -95,7 +103,8 @@ source: crates/ra_ide_api_light/src/structure.rs\n         navigation_range: [172; 173),\n         node_range: [172; 178),\n         kind: ENUM_VARIANT,\n-        detail: None\n+        detail: None,\n+        deprecated: false\n     },\n     StructureNode {\n         parent: None,\n@@ -105,7 +114,8 @@ source: crates/ra_ide_api_light/src/structure.rs\n         kind: TYPE_DEF,\n         detail: Some(\n             \"()\"\n-        )\n+        ),\n+        deprecated: false\n     },\n     StructureNode {\n         parent: None,\n@@ -115,7 +125,8 @@ source: crates/ra_ide_api_light/src/structure.rs\n         kind: STATIC_DEF,\n         detail: Some(\n             \"i32\"\n-        )\n+        ),\n+        deprecated: false\n     },\n     StructureNode {\n         parent: None,\n@@ -125,22 +136,47 @@ source: crates/ra_ide_api_light/src/structure.rs\n         kind: CONST_DEF,\n         detail: Some(\n             \"i32\"\n-        )\n+        ),\n+        deprecated: false\n     },\n     StructureNode {\n         parent: None,\n         label: \"impl E\",\n         navigation_range: [239; 240),\n         node_range: [234; 243),\n         kind: IMPL_BLOCK,\n-        detail: None\n+        detail: None,\n+        deprecated: false\n     },\n     StructureNode {\n         parent: None,\n         label: \"impl fmt::Debug for E\",\n         navigation_range: [265; 266),\n         node_range: [245; 269),\n         kind: IMPL_BLOCK,\n-        detail: None\n+        detail: None,\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"obsolete\",\n+        navigation_range: [288; 296),\n+        node_range: [271; 301),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn()\"\n+        ),\n+        deprecated: true\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"very_obsolete\",\n+        navigation_range: [341; 354),\n+        node_range: [303; 359),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn()\"\n+        ),\n+        deprecated: true\n     }\n ]"}, {"sha": "330a3694cda0fd6622a0ccc73053f0a9c501e547", "filename": "crates/ra_ide_api_light/src/structure.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs?ref=736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9", "patch": "@@ -2,7 +2,7 @@ use crate::TextRange;\n \n use ra_syntax::{\n     algo::visit::{visitor, Visitor},\n-    ast::{self, NameOwner, TypeParamsOwner},\n+    ast::{self, AttrsOwner, NameOwner, TypeParamsOwner},\n     AstNode, SourceFile, SyntaxKind, SyntaxNode, WalkEvent,\n };\n \n@@ -14,6 +14,7 @@ pub struct StructureNode {\n     pub node_range: TextRange,\n     pub kind: SyntaxKind,\n     pub detail: Option<String>,\n+    pub deprecated: bool,\n }\n \n pub fn file_structure(file: &SourceFile) -> Vec<StructureNode> {\n@@ -40,11 +41,11 @@ pub fn file_structure(file: &SourceFile) -> Vec<StructureNode> {\n }\n \n fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n-    fn decl<N: NameOwner>(node: &N) -> Option<StructureNode> {\n+    fn decl<N: NameOwner + AttrsOwner>(node: &N) -> Option<StructureNode> {\n         decl_with_detail(node, None)\n     }\n \n-    fn decl_with_type_ref<N: NameOwner>(\n+    fn decl_with_type_ref<N: NameOwner + AttrsOwner>(\n         node: &N,\n         type_ref: Option<&ast::TypeRef>,\n     ) -> Option<StructureNode> {\n@@ -56,15 +57,23 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n         decl_with_detail(node, detail)\n     }\n \n-    fn decl_with_detail<N: NameOwner>(node: &N, detail: Option<String>) -> Option<StructureNode> {\n+    fn decl_with_detail<N: NameOwner + AttrsOwner>(\n+        node: &N,\n+        detail: Option<String>,\n+    ) -> Option<StructureNode> {\n         let name = node.name()?;\n+\n         Some(StructureNode {\n             parent: None,\n             label: name.text().to_string(),\n             navigation_range: name.syntax().range(),\n             node_range: node.syntax().range(),\n             kind: node.syntax().kind(),\n             detail,\n+            deprecated: node\n+                .attrs()\n+                .filter_map(|x| x.as_named())\n+                .any(|x| x == \"deprecated\"),\n         })\n     }\n \n@@ -128,6 +137,7 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n                 node_range: im.syntax().range(),\n                 kind: im.syntax().kind(),\n                 detail: None,\n+                deprecated: false,\n             };\n             Some(node)\n         })\n@@ -165,6 +175,12 @@ const C: i32 = 92;\n impl E {}\n \n impl fmt::Debug for E {}\n+\n+#[deprecated]\n+fn obsolete() {}\n+\n+#[deprecated(note = \"for awhile\")]\n+fn very_obsolete() {}\n \"#,\n         );\n         let structure = file_structure(&file);"}, {"sha": "ab2b81bf042b6c486b758f5ecdd9afd33051e4e1", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9", "patch": "@@ -140,7 +140,7 @@ pub fn handle_document_symbol(\n             name: symbol.label,\n             detail: symbol.detail,\n             kind: symbol.kind.conv(),\n-            deprecated: None,\n+            deprecated: Some(symbol.deprecated),\n             range: symbol.node_range.conv_with(&line_index),\n             selection_range: symbol.navigation_range.conv_with(&line_index),\n             children: None,"}, {"sha": "d6237532b054f79e02e181a0776efe74f559b344", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9", "patch": "@@ -177,6 +177,16 @@ impl Attr {\n             None\n         }\n     }\n+\n+    pub fn as_named(&self) -> Option<SmolStr> {\n+        let tt = self.value()?;\n+        let attr = tt.syntax().children().nth(1)?;\n+        if attr.kind() == IDENT {\n+            Some(attr.leaf_text().unwrap().clone())\n+        } else {\n+            None\n+        }\n+    }\n }\n \n impl Comment {"}, {"sha": "60314d245275af2f7b95870978a15f8c99a6d035", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9", "patch": "@@ -755,6 +755,7 @@ impl ToOwned for EnumVariant {\n \n impl ast::NameOwner for EnumVariant {}\n impl ast::DocCommentsOwner for EnumVariant {}\n+impl ast::AttrsOwner for EnumVariant {}\n impl EnumVariant {\n     pub fn expr(&self) -> Option<&Expr> {\n         super::child_opt(self)"}, {"sha": "046db5885500b34746879b270f90891c8f8a9db9", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=736a55c97e69f95e6ff4a0c3dafb2018e8ea05f9", "patch": "@@ -281,7 +281,7 @@ Grammar(\n             \"DocCommentsOwner\"\n         ], options: [[\"variant_list\", \"EnumVariantList\"]] ),\n         \"EnumVariantList\": ( collections: [[\"variants\", \"EnumVariant\"]] ),\n-        \"EnumVariant\": ( traits: [\"NameOwner\", \"DocCommentsOwner\"], options: [\"Expr\"] ),\n+        \"EnumVariant\": ( traits: [\"NameOwner\", \"DocCommentsOwner\", \"AttrsOwner\"], options: [\"Expr\"] ),\n         \"TraitDef\": ( traits: [\"VisibilityOwner\", \"NameOwner\", \"AttrsOwner\", \"DocCommentsOwner\", \"TypeParamsOwner\"] ),\n         \"Module\": (\n             traits: [\"VisibilityOwner\", \"NameOwner\", \"AttrsOwner\", \"DocCommentsOwner\" ],"}]}