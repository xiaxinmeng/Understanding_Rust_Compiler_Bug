{"sha": "fa5eb54881584b1a22c57fe9e7040f833b302eda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNWViNTQ4ODE1ODRiMWEyMmM1N2ZlOWU3MDQwZjgzM2IzMDJlZGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-23T01:36:01Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-23T01:37:31Z"}, "message": "rustbuild: Print out all build steps when --verbose", "tree": {"sha": "a703ecf56964056746a4af9e0f89b13539233108", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a703ecf56964056746a4af9e0f89b13539233108"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa5eb54881584b1a22c57fe9e7040f833b302eda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa5eb54881584b1a22c57fe9e7040f833b302eda", "html_url": "https://github.com/rust-lang/rust/commit/fa5eb54881584b1a22c57fe9e7040f833b302eda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa5eb54881584b1a22c57fe9e7040f833b302eda/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c04e36f94c4b85b613a2d5fe5c9511053cbdec2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c04e36f94c4b85b613a2d5fe5c9511053cbdec2", "html_url": "https://github.com/rust-lang/rust/commit/4c04e36f94c4b85b613a2d5fe5c9511053cbdec2"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "de89786da82a7f45f1da09725e33ab89db600109", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fa5eb54881584b1a22c57fe9e7040f833b302eda/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa5eb54881584b1a22c57fe9e7040f833b302eda/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=fa5eb54881584b1a22c57fe9e7040f833b302eda", "patch": "@@ -243,7 +243,14 @@ impl Build {\n         // Almost all of these are simple one-liners that shell out to the\n         // corresponding functionality in the extra modules, where more\n         // documentation can be found.\n-        for target in step::all(self) {\n+        let steps = step::all(self);\n+\n+        self.verbose(\"bootstrap build plan:\");\n+        for step in &steps {\n+            self.verbose(&format!(\"{:?}\", step));\n+        }\n+\n+        for target in steps {\n             let doc_out = self.out.join(&target.target).join(\"doc\");\n             match target.src {\n                 Llvm { _dummy } => {"}, {"sha": "4b5a26d205af7457f7093871145457a996e86af9", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fa5eb54881584b1a22c57fe9e7040f833b302eda/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa5eb54881584b1a22c57fe9e7040f833b302eda/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=fa5eb54881584b1a22c57fe9e7040f833b302eda", "patch": "@@ -171,6 +171,8 @@ targets!(define_source);\n /// into a topologically sorted list which when executed left-to-right will\n /// correctly sequence the entire build.\n pub fn all(build: &Build) -> Vec<Step> {\n+    build.verbose(\"inferred build steps:\");\n+\n     let mut ret = Vec::new();\n     let mut all = HashSet::new();\n     for target in top_level(build) {\n@@ -184,6 +186,7 @@ pub fn all(build: &Build) -> Vec<Step> {\n                 set: &mut HashSet<Step<'a>>) {\n         if set.insert(target.clone()) {\n             for dep in target.deps(build) {\n+                build.verbose(&format!(\"{:?}\\n  -> {:?}\", target, dep));\n                 fill(build, &dep, ret, set);\n             }\n             ret.push(target.clone());"}]}