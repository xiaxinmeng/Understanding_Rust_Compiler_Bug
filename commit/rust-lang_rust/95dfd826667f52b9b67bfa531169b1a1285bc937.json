{"sha": "95dfd826667f52b9b67bfa531169b1a1285bc937", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ZGZkODI2NjY3ZjUyYjliNjdiZmE1MzExNjliMWExMjg1YmM5Mzc=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-11-30T20:05:48Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-05-23T16:51:42Z"}, "message": "Update upstream_monomorphizations and upstream_monomorphizations_for", "tree": {"sha": "16e7f8dfee3f2df7d144297e6147689514c76262", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16e7f8dfee3f2df7d144297e6147689514c76262"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95dfd826667f52b9b67bfa531169b1a1285bc937", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95dfd826667f52b9b67bfa531169b1a1285bc937", "html_url": "https://github.com/rust-lang/rust/commit/95dfd826667f52b9b67bfa531169b1a1285bc937", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95dfd826667f52b9b67bfa531169b1a1285bc937/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0", "html_url": "https://github.com/rust-lang/rust/commit/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "e6808e0f3bfd8a465a82d0c5b58b437ac1b10cdc", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/95dfd826667f52b9b67bfa531169b1a1285bc937/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95dfd826667f52b9b67bfa531169b1a1285bc937/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=95dfd826667f52b9b67bfa531169b1a1285bc937", "patch": "@@ -60,6 +60,13 @@ macro_rules! arena_types {\n                 >,\n             [few] crate_inherent_impls: rustc::ty::CrateInherentImpls,\n             [decode] borrowck: rustc::middle::borrowck::BorrowCheckResult,\n+            [few] upstream_monomorphizations:\n+                rustc::util::nodemap::DefIdMap<\n+                    rustc_data_structures::fx::FxHashMap<\n+                        rustc::ty::subst::SubstsRef<'tcx>,\n+                        rustc::hir::def_id::CrateNum\n+                    >\n+                >,\n         ], $tcx);\n     )\n }"}, {"sha": "2e2cb2db8382c46930dca808a5efbe2ce0948ee2", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/95dfd826667f52b9b67bfa531169b1a1285bc937/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95dfd826667f52b9b67bfa531169b1a1285bc937/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=95dfd826667f52b9b67bfa531169b1a1285bc937", "patch": "@@ -681,11 +681,11 @@ rustc_queries! {\n     Codegen {\n         query upstream_monomorphizations(\n             k: CrateNum\n-        ) -> Lrc<DefIdMap<Lrc<FxHashMap<SubstsRef<'tcx>, CrateNum>>>> {\n+        ) -> &'tcx DefIdMap<FxHashMap<SubstsRef<'tcx>, CrateNum>> {\n             desc { \"collecting available upstream monomorphizations `{:?}`\", k }\n         }\n         query upstream_monomorphizations_for(_: DefId)\n-            -> Option<Lrc<FxHashMap<SubstsRef<'tcx>, CrateNum>>> {}\n+            -> Option<&'tcx FxHashMap<SubstsRef<'tcx>, CrateNum>> {}\n     }\n \n     Other {"}, {"sha": "616049ea112a4ecfa79e3eb8cf6bb3ce764f2409", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/95dfd826667f52b9b67bfa531169b1a1285bc937/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95dfd826667f52b9b67bfa531169b1a1285bc937/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=95dfd826667f52b9b67bfa531169b1a1285bc937", "patch": "@@ -282,7 +282,7 @@ fn exported_symbols_provider_local<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n fn upstream_monomorphizations_provider<'a, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     cnum: CrateNum)\n-    -> Lrc<DefIdMap<Lrc<FxHashMap<SubstsRef<'tcx>, CrateNum>>>>\n+    -> &'tcx DefIdMap<FxHashMap<SubstsRef<'tcx>, CrateNum>>\n {\n     debug_assert!(cnum == LOCAL_CRATE);\n \n@@ -326,20 +326,16 @@ fn upstream_monomorphizations_provider<'a, 'tcx>(\n         }\n     }\n \n-    Lrc::new(instances.into_iter()\n-                      .map(|(key, value)| (key, Lrc::new(value)))\n-                      .collect())\n+    tcx.arena.alloc(instances)\n }\n \n fn upstream_monomorphizations_for_provider<'a, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     def_id: DefId)\n-    -> Option<Lrc<FxHashMap<SubstsRef<'tcx>, CrateNum>>>\n+    -> Option<&'tcx FxHashMap<SubstsRef<'tcx>, CrateNum>>\n {\n     debug_assert!(!def_id.is_local());\n-    tcx.upstream_monomorphizations(LOCAL_CRATE)\n-       .get(&def_id)\n-       .cloned()\n+    tcx.upstream_monomorphizations(LOCAL_CRATE).get(&def_id)\n }\n \n fn is_unreachable_local_definition_provider(tcx: TyCtxt<'_, '_, '_>, def_id: DefId) -> bool {"}]}