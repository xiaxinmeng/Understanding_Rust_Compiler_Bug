{"sha": "970e7793bfefd3d93034869ef8672affa02fff24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3MGU3NzkzYmZlZmQzZDkzMDM0ODY5ZWY4NjcyYWZmYTAyZmZmMjQ=", "commit": {"author": {"name": "Ryan Levick", "email": "ryan.levick@gmail.com", "date": "2020-08-27T17:11:48Z"}, "committer": {"name": "Ryan Levick", "email": "ryan.levick@gmail.com", "date": "2020-08-27T17:11:48Z"}, "message": "Add __fastfail for Windows on arm/aarch64", "tree": {"sha": "b2b717e314c2bfc7d6c987ba38f412d0a6ffbf5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2b717e314c2bfc7d6c987ba38f412d0a6ffbf5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/970e7793bfefd3d93034869ef8672affa02fff24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/970e7793bfefd3d93034869ef8672affa02fff24", "html_url": "https://github.com/rust-lang/rust/commit/970e7793bfefd3d93034869ef8672affa02fff24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/970e7793bfefd3d93034869ef8672affa02fff24/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ead62235a50e43b08a103d403d6fbfbc2b48352", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ead62235a50e43b08a103d403d6fbfbc2b48352", "html_url": "https://github.com/rust-lang/rust/commit/6ead62235a50e43b08a103d403d6fbfbc2b48352"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "7eece6768e99aa333aacfcec60a6026b5eb2c062", "filename": "library/panic_abort/src/lib.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/970e7793bfefd3d93034869ef8672affa02fff24/library%2Fpanic_abort%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/970e7793bfefd3d93034869ef8672affa02fff24/library%2Fpanic_abort%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_abort%2Fsrc%2Flib.rs?ref=970e7793bfefd3d93034869ef8672affa02fff24", "patch": "@@ -47,7 +47,7 @@ pub unsafe extern \"C\" fn __rust_start_panic(_payload: usize) -> u32 {\n                 }\n                 __rust_abort();\n             }\n-        } else if #[cfg(all(windows, any(target_arch = \"x86\", target_arch = \"x86_64\")))] {\n+        } else if #[cfg(windows)] {\n             // On Windows, use the processor-specific __fastfail mechanism. In Windows 8\n             // and later, this will terminate the process immediately without running any\n             // in-process exception handlers. In earlier versions of Windows, this\n@@ -59,7 +59,18 @@ pub unsafe extern \"C\" fn __rust_start_panic(_payload: usize) -> u32 {\n             //\n             // Note: this is the same implementation as in libstd's `abort_internal`\n             unsafe fn abort() -> ! {\n-                llvm_asm!(\"int $$0x29\" :: \"{ecx}\"(7) ::: volatile); // 7 is FAST_FAIL_FATAL_APP_EXIT\n+                const FAST_FAIL_FATAL_APP_EXIT: usize = 7;\n+                cfg_if::cfg_if! {\n+                    if #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))] {\n+                        llvm_asm!(\"int $$0x29\" :: \"{ecx}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                    } else if #[cfg(target_arch = \"arm\")] {\n+                        llvm_asm!(\".inst 0xDEFB\" :: \"{r0}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                    } else if #[cfg(target_arch = \"aarch64\")] {\n+                        llvm_asm!(\".inst 0xF003\" :: \"{x0}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                    } else {\n+                        core::intrinsics::abort();\n+                    }\n+                }\n                 core::intrinsics::unreachable();\n             }\n         } else {"}, {"sha": "8fbd43ad5a58e1ee2f0db9ff1f10e9246f558c85", "filename": "library/std/src/sys/windows/mod.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/970e7793bfefd3d93034869ef8672affa02fff24/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/970e7793bfefd3d93034869ef8672affa02fff24/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs?ref=970e7793bfefd3d93034869ef8672affa02fff24", "patch": "@@ -306,10 +306,20 @@ pub fn dur2timeout(dur: Duration) -> c::DWORD {\n /// that function for more information on `__fastfail`\n #[allow(unreachable_code)]\n pub fn abort_internal() -> ! {\n-    #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n+    const FAST_FAIL_FATAL_APP_EXIT: usize = 7;\n     unsafe {\n-        llvm_asm!(\"int $$0x29\" :: \"{ecx}\"(7) ::: volatile); // 7 is FAST_FAIL_FATAL_APP_EXIT\n-        crate::intrinsics::unreachable();\n+        cfg_if::cfg_if! {\n+            if #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))] {\n+                llvm_asm!(\"int $$0x29\" :: \"{ecx}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                crate::intrinsics::unreachable();\n+            } else if #[cfg(target_arch = \"arm\")] {\n+                llvm_asm!(\".inst 0xDEFB\" :: \"{r0}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                crate::intrinsics::unreachable();\n+            } else if #[cfg(target_arch = \"aarch64\")] {\n+                llvm_asm!(\".inst 0xF003\" :: \"{x0}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                crate::intrinsics::unreachable();\n+            }\n+        }\n     }\n     crate::intrinsics::abort();\n }"}]}