{"sha": "696b84c88394d16a4fb43bd667945f07bea2e666", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NmI4NGM4ODM5NGQxNmE0ZmI0M2JkNjY3OTQ1ZjA3YmVhMmU2NjY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-22T16:26:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-22T16:26:13Z"}, "message": "Rollup merge of #50914 - simartin:issue_50636, r=oli-obk\n\nIssue #50636: Improve error diagnostic with missing commas after struct fields.\n\nFixes #50636", "tree": {"sha": "9585fe6cd06be0de4c65e6c762ba6d096cb7a64f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9585fe6cd06be0de4c65e6c762ba6d096cb7a64f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/696b84c88394d16a4fb43bd667945f07bea2e666", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbBESlCRBK7hj4Ov3rIwAAdHIIAI7BcAI8iUeX8/f0D4vE9SlP\nV6dGzDwwE9xQ6b95mdhO6uqoAwHWKdULbY3EexM3hG+UhPKMZIX6ZHkIG/PMvnrj\n0Z3IhzFPWa2m/jfDcEfpo2rpL6kcqO7ikm63zTsLyJtQz+TfWxp9MBXlKFDirlf5\nrhT6kq3Lly81X0P7SmbUjr3serszFl6fsOotUYDw1GxZKGGJyeJxnmjy++p1KIGH\ncsbuniHKlKSZfrEesmx8uBcwzzrFoNE8NlrEH4mJSxHoJlp+hQiYcNGy0MqUHk6Q\n8/GBAO/+5hKYC1rkOOf+/pI/MD45boaWWD1CMddLJ7KI01hwXkt2rkB9pd7sxt4=\n=JoBX\n-----END PGP SIGNATURE-----\n", "payload": "tree 9585fe6cd06be0de4c65e6c762ba6d096cb7a64f\nparent e51b35e26fcc57f5bbe591556a2cebc780caf58e\nparent e6bf3e2ddbfc7907cdf5f3eef0eee4b610200e4b\nauthor kennytm <kennytm@gmail.com> 1527006373 +0800\ncommitter GitHub <noreply@github.com> 1527006373 +0800\n\nRollup merge of #50914 - simartin:issue_50636, r=oli-obk\n\nIssue #50636: Improve error diagnostic with missing commas after struct fields.\n\nFixes #50636\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/696b84c88394d16a4fb43bd667945f07bea2e666", "html_url": "https://github.com/rust-lang/rust/commit/696b84c88394d16a4fb43bd667945f07bea2e666", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/696b84c88394d16a4fb43bd667945f07bea2e666/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e51b35e26fcc57f5bbe591556a2cebc780caf58e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e51b35e26fcc57f5bbe591556a2cebc780caf58e", "html_url": "https://github.com/rust-lang/rust/commit/e51b35e26fcc57f5bbe591556a2cebc780caf58e"}, {"sha": "e6bf3e2ddbfc7907cdf5f3eef0eee4b610200e4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6bf3e2ddbfc7907cdf5f3eef0eee4b610200e4b", "html_url": "https://github.com/rust-lang/rust/commit/e6bf3e2ddbfc7907cdf5f3eef0eee4b610200e4b"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "62d007b4240251c62f9b9720e912d475482b69d8", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/696b84c88394d16a4fb43bd667945f07bea2e666/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/696b84c88394d16a4fb43bd667945f07bea2e666/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=696b84c88394d16a4fb43bd667945f07bea2e666", "patch": "@@ -5807,9 +5807,18 @@ impl<'a> Parser<'a> {\n                     return Err(err);\n                 }\n             }\n-            _ => return Err(self.span_fatal_help(self.span,\n-                    &format!(\"expected `,`, or `}}`, found `{}`\", self.this_token_to_string()),\n-                    \"struct fields should be separated by commas\")),\n+            _ => {\n+                let sp = self.sess.codemap().next_point(self.prev_span);\n+                let mut err = self.struct_span_err(sp, &format!(\"expected `,`, or `}}`, found `{}`\",\n+                                                                self.this_token_to_string()));\n+                if self.token.is_ident() {\n+                    // This is likely another field; emit the diagnostic and keep going\n+                    err.span_suggestion(sp, \"try adding a comma\", \",\".into());\n+                    err.emit();\n+                } else {\n+                    return Err(err)\n+                }\n+            }\n         }\n         Ok(a_var)\n     }"}, {"sha": "87ae8ab26051a63a2841971d04fb564a63fb401a", "filename": "src/test/ui/struct-missing-comma.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/696b84c88394d16a4fb43bd667945f07bea2e666/src%2Ftest%2Fui%2Fstruct-missing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/696b84c88394d16a4fb43bd667945f07bea2e666/src%2Ftest%2Fui%2Fstruct-missing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstruct-missing-comma.rs?ref=696b84c88394d16a4fb43bd667945f07bea2e666", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z parse-only\n+\n+// Issue #50636\n+\n+struct S {\n+    foo: u32 //~ expected `,`, or `}`, found `bar`\n+    //     ~^ HELP try adding a comma: ','\n+    bar: u32\n+}\n+\n+fn main() {\n+    let s = S { foo: 5, bar: 6 };\n+}"}, {"sha": "28283bfb71364e4157bdcfd313b827275bbac2ea", "filename": "src/test/ui/struct-missing-comma.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/696b84c88394d16a4fb43bd667945f07bea2e666/src%2Ftest%2Fui%2Fstruct-missing-comma.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/696b84c88394d16a4fb43bd667945f07bea2e666/src%2Ftest%2Fui%2Fstruct-missing-comma.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstruct-missing-comma.stderr?ref=696b84c88394d16a4fb43bd667945f07bea2e666", "patch": "@@ -0,0 +1,8 @@\n+error: expected `,`, or `}`, found `bar`\n+  --> $DIR/struct-missing-comma.rs:16:13\n+   |\n+LL |     foo: u32 //~ expected `,`, or `}`, found `bar`\n+   |             ^ help: try adding a comma: `,`\n+\n+error: aborting due to previous error\n+"}]}