{"sha": "070a7719bbc15645f32e047289ecb73a94b9488c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MGE3NzE5YmJjMTU2NDVmMzJlMDQ3Mjg5ZWNiNzNhOTRiOTQ4OGM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-14T07:22:27Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-14T07:22:27Z"}, "message": "Rollup merge of #49886 - varkor:generate-deriving-span-tests-usability, r=nikomatsakis\n\nIgnore copyright year when generating deriving span tests\n\nPreviously, generate-deriving-span-tests.py would regenerate all the tests anew, even if they hadn't changed. This creates unnecessary diffs that only change the copyright year. Now we check to see if any of the content of the test has changed before generating the new one.", "tree": {"sha": "73ed1dcc4982bbdc3927def48eb135e8183ff227", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73ed1dcc4982bbdc3927def48eb135e8183ff227"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/070a7719bbc15645f32e047289ecb73a94b9488c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlrRrDMACgkQ/vbIBR0O\nATzcHw/+JCdXaN/A9uyC55axRQz5gE0e10cqqd4VMPEgfKqHIUKXspfZOzx48PeU\nMC3PQvB0i15JiaAfT261IOd8eyo0STuJjFHx9PVVBj3pHlBin8r95hEKzxawYpnZ\nlgMrvTFNdSxChBrswkGDd5gXl5YG5yDuCU1oJvedR6sNLmPwM5RLzgfCqEH1yGwq\nE6FoJB6dVM9NGgpd+9oxcJ8JbYWR8O6MQXi+6uScWRUwKmu/sXO74QGs2H2iPhqr\ndKSjPKo5UigUTMXJdXJ2julcYAOTi9ta47sqvrQyeN/wJxboDR4uucgUUC2cnYDJ\n6rXJfekVIYoWKgTz4H/wYkh0Xf8zaJqSYYnfx1g50Myh+hPQaqHaKjIQ/R9cIEYh\neQ/Su6Saf2EmMDa0lBLs2fLHmOyfEVvCiT5E7HXYRkLo+rnuHTzgaQ3BFSQiC2Q9\nE2GPItl17ioDwrISsdNc6b0g5369tpowvi17hk+Un5MVUYuj3Uzgq+UvkryiYE0H\nGHdrda3fehtMRclpulB6b32fuox1JuOots6o75WnJpXUUeSKkGQODqhO+kSwPBLX\nc5kuiLRox2iEYR43C04/4rpW25+h8+6Qeg4Nggg4FNYi6fBVbak2CazfFTqqevQB\nhv8BQ4sHsJhzOGTSuMVMmlViCo21RiMxVT/f/wc4lttOcIaPym8=\n=K++o\n-----END PGP SIGNATURE-----", "payload": "tree 73ed1dcc4982bbdc3927def48eb135e8183ff227\nparent 15eb465b353adc7a45af89e426dced4dbca2a536\nparent 0b393e053895055f86975cf40169701006dbe54b\nauthor kennytm <kennytm@gmail.com> 1523690547 +0800\ncommitter kennytm <kennytm@gmail.com> 1523690547 +0800\n\nRollup merge of #49886 - varkor:generate-deriving-span-tests-usability, r=nikomatsakis\n\nIgnore copyright year when generating deriving span tests\n\nPreviously, generate-deriving-span-tests.py would regenerate all the tests anew, even if they hadn't changed. This creates unnecessary diffs that only change the copyright year. Now we check to see if any of the content of the test has changed before generating the new one.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/070a7719bbc15645f32e047289ecb73a94b9488c", "html_url": "https://github.com/rust-lang/rust/commit/070a7719bbc15645f32e047289ecb73a94b9488c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/070a7719bbc15645f32e047289ecb73a94b9488c/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15eb465b353adc7a45af89e426dced4dbca2a536", "url": "https://api.github.com/repos/rust-lang/rust/commits/15eb465b353adc7a45af89e426dced4dbca2a536", "html_url": "https://github.com/rust-lang/rust/commit/15eb465b353adc7a45af89e426dced4dbca2a536"}, {"sha": "0b393e053895055f86975cf40169701006dbe54b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b393e053895055f86975cf40169701006dbe54b", "html_url": "https://github.com/rust-lang/rust/commit/0b393e053895055f86975cf40169701006dbe54b"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "5b106275ac9d26873bde8ab6ef615ed0f786d992", "filename": "src/etc/generate-deriving-span-tests.py", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/070a7719bbc15645f32e047289ecb73a94b9488c/src%2Fetc%2Fgenerate-deriving-span-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/070a7719bbc15645f32e047289ecb73a94b9488c/src%2Fetc%2Fgenerate-deriving-span-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-deriving-span-tests.py?ref=070a7719bbc15645f32e047289ecb73a94b9488c", "patch": "@@ -18,7 +18,7 @@\n sample usage: src/etc/generate-deriving-span-tests.py\n \"\"\"\n \n-import sys, os, datetime, stat\n+import sys, os, datetime, stat, re\n \n TEST_DIR = os.path.abspath(\n     os.path.join(os.path.dirname(__file__), '../test/compile-fail'))\n@@ -87,16 +87,25 @@ def create_test_case(type, trait, super_traits, error_count):\n def write_file(name, string):\n     test_file = os.path.join(TEST_DIR, 'derives-span-%s.rs' % name)\n \n+    with open(test_file) as f:\n+        old_str = f.read()\n+        old_str_ignoring_date = re.sub(r'^// Copyright \\d+',\n+                                        '// Copyright {year}'.format(year = YEAR), old_str)\n+        if old_str_ignoring_date == string:\n+            # if all we're doing is updating the copyright year, ignore it\n+            return 0\n+\n     # set write permission if file exists, so it can be changed\n     if os.path.exists(test_file):\n         os.chmod(test_file, stat.S_IWUSR)\n \n-    with open(test_file, 'wt') as f:\n+    with open(test_file, 'w') as f:\n         f.write(string)\n \n     # mark file read-only\n     os.chmod(test_file, stat.S_IRUSR|stat.S_IRGRP|stat.S_IROTH)\n \n+    return 1\n \n \n ENUM = 1\n@@ -120,11 +129,15 @@ def write_file(name, string):\n                               ('Hash', [], 1)]:\n     traits[trait] = (ALL, supers, errs)\n \n+files = 0\n+\n for (trait, (types, super_traits, error_count)) in traits.items():\n     mk = lambda ty: create_test_case(ty, trait, super_traits, error_count)\n     if types & ENUM:\n-        write_file(trait + '-enum', mk(ENUM_TUPLE))\n-        write_file(trait + '-enum-struct-variant', mk(ENUM_STRUCT))\n+        files += write_file(trait + '-enum', mk(ENUM_TUPLE))\n+        files += write_file(trait + '-enum-struct-variant', mk(ENUM_STRUCT))\n     if types & STRUCT:\n-        write_file(trait + '-struct', mk(STRUCT_FIELDS))\n-        write_file(trait + '-tuple-struct', mk(STRUCT_TUPLE))\n+        files += write_file(trait + '-struct', mk(STRUCT_FIELDS))\n+        files += write_file(trait + '-tuple-struct', mk(STRUCT_TUPLE))\n+\n+print('Generated {files} deriving span test{}.'.format('s' if files != 1 else '', files = files))"}]}