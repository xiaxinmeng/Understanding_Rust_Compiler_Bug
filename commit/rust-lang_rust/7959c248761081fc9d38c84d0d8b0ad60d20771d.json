{"sha": "7959c248761081fc9d38c84d0d8b0ad60d20771d", "node_id": "C_kwDOAAsO6NoAKDc5NTljMjQ4NzYxMDgxZmM5ZDM4Yzg0ZDBkOGIwYWQ2MGQyMDc3MWQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-06T17:38:45Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-06T17:38:45Z"}, "message": "fix: Fix path qualifiers not resolving generic type params when shadowed by trait", "tree": {"sha": "a691abdc38870ffb6e1646cfea05e412231d27a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a691abdc38870ffb6e1646cfea05e412231d27a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7959c248761081fc9d38c84d0d8b0ad60d20771d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7959c248761081fc9d38c84d0d8b0ad60d20771d", "html_url": "https://github.com/rust-lang/rust/commit/7959c248761081fc9d38c84d0d8b0ad60d20771d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7959c248761081fc9d38c84d0d8b0ad60d20771d/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e6390bb129f212614eda8a0cd6662d9cb4440f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e6390bb129f212614eda8a0cd6662d9cb4440f3", "html_url": "https://github.com/rust-lang/rust/commit/4e6390bb129f212614eda8a0cd6662d9cb4440f3"}], "stats": {"total": 46, "additions": 28, "deletions": 18}, "files": [{"sha": "e96c40074076e960d3399e48b2ca3da8c44fc7fb", "filename": "crates/hir/src/source_analyzer.rs", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/7959c248761081fc9d38c84d0d8b0ad60d20771d/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7959c248761081fc9d38c84d0d8b0ad60d20771d/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=7959c248761081fc9d38c84d0d8b0ad60d20771d", "patch": "@@ -749,22 +749,23 @@ fn resolve_hir_path_qualifier(\n     resolver: &Resolver,\n     path: &Path,\n ) -> Option<PathResolution> {\n-    let items = resolver\n-        .resolve_module_path_in_items(db.upcast(), path.mod_path())\n-        .take_types()\n-        .map(|it| PathResolution::Def(it.into()));\n-\n-    if items.is_some() {\n-        return items;\n-    }\n-\n-    resolver.resolve_path_in_type_ns_fully(db.upcast(), path.mod_path()).map(|ty| match ty {\n-        TypeNs::SelfType(it) => PathResolution::SelfType(it.into()),\n-        TypeNs::GenericParam(id) => PathResolution::TypeParam(id.into()),\n-        TypeNs::AdtSelfType(it) | TypeNs::AdtId(it) => PathResolution::Def(Adt::from(it).into()),\n-        TypeNs::EnumVariantId(it) => PathResolution::Def(Variant::from(it).into()),\n-        TypeNs::TypeAliasId(it) => PathResolution::Def(TypeAlias::from(it).into()),\n-        TypeNs::BuiltinType(it) => PathResolution::Def(BuiltinType::from(it).into()),\n-        TypeNs::TraitId(it) => PathResolution::Def(Trait::from(it).into()),\n-    })\n+    resolver\n+        .resolve_path_in_type_ns_fully(db.upcast(), path.mod_path())\n+        .map(|ty| match ty {\n+            TypeNs::SelfType(it) => PathResolution::SelfType(it.into()),\n+            TypeNs::GenericParam(id) => PathResolution::TypeParam(id.into()),\n+            TypeNs::AdtSelfType(it) | TypeNs::AdtId(it) => {\n+                PathResolution::Def(Adt::from(it).into())\n+            }\n+            TypeNs::EnumVariantId(it) => PathResolution::Def(Variant::from(it).into()),\n+            TypeNs::TypeAliasId(it) => PathResolution::Def(TypeAlias::from(it).into()),\n+            TypeNs::BuiltinType(it) => PathResolution::Def(BuiltinType::from(it).into()),\n+            TypeNs::TraitId(it) => PathResolution::Def(Trait::from(it).into()),\n+        })\n+        .or_else(|| {\n+            resolver\n+                .resolve_module_path_in_items(db.upcast(), path.mod_path())\n+                .take_types()\n+                .map(|it| PathResolution::Def(it.into()))\n+        })\n }"}, {"sha": "1abb6eb8f39f40792154f42f2cc5c3873f454cee", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_general.html", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7959c248761081fc9d38c84d0d8b0ad60d20771d/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html", "raw_url": "https://github.com/rust-lang/rust/raw/7959c248761081fc9d38c84d0d8b0ad60d20771d/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html?ref=7959c248761081fc9d38c84d0d8b0ad60d20771d", "patch": "@@ -225,4 +225,8 @@\n     <span class=\"type_param\">T</span><span class=\"colon\">:</span> <span class=\"trait\">Baz</span><span class=\"comma\">,</span>\n     <span class=\"angle\">&lt;</span><span class=\"type_param\">T</span> <span class=\"keyword\">as</span> <span class=\"trait\">Baz</span><span class=\"angle\">&gt;</span><span class=\"operator\">::</span><span class=\"type_alias associated trait\">Qux</span><span class=\"colon\">:</span> <span class=\"trait\">Bar</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">gp_shadows_trait</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Baz</span><span class=\"colon\">:</span> <span class=\"trait\">Bar</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"type_param\">Baz</span><span class=\"operator\">::</span><span class=\"function associated reference trait\">bar</span><span class=\"semicolon\">;</span>\n+<span class=\"brace\">}</span>\n+\n </code></pre>\n\\ No newline at end of file"}, {"sha": "d7686695942ea580b2b1c1eea712a53f5984498a", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7959c248761081fc9d38c84d0d8b0ad60d20771d/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7959c248761081fc9d38c84d0d8b0ad60d20771d/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=7959c248761081fc9d38c84d0d8b0ad60d20771d", "patch": "@@ -31,6 +31,7 @@ struct Foo;\n         false,\n     );\n }\n+\n #[test]\n fn macros() {\n     check_highlighting(\n@@ -278,6 +279,10 @@ where\n     T: Baz,\n     <T as Baz>::Qux: Bar {}\n \n+fn gp_shadows_trait<Baz: Bar>() {\n+    Baz::bar;\n+}\n+\n //- /foo.rs crate:foo\n pub struct Person {\n     pub name: &'static str,"}]}