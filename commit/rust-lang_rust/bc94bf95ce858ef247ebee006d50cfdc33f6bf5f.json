{"sha": "bc94bf95ce858ef247ebee006d50cfdc33f6bf5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjOTRiZjk1Y2U4NThlZjI0N2ViZWUwMDZkNTBjZmRjMzNmNmJmNWY=", "commit": {"author": {"name": "darksv", "email": "darek969-12@o2.pl", "date": "2018-09-14T17:26:48Z"}, "committer": {"name": "darksv", "email": "darek969-12@o2.pl", "date": "2018-09-14T17:26:48Z"}, "message": "correctly handle IDENTs when changed to contextual keywords", "tree": {"sha": "15063d69790346368b6a7ff8d12fb5778f5d72ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15063d69790346368b6a7ff8d12fb5778f5d72ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc94bf95ce858ef247ebee006d50cfdc33f6bf5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc94bf95ce858ef247ebee006d50cfdc33f6bf5f", "html_url": "https://github.com/rust-lang/rust/commit/bc94bf95ce858ef247ebee006d50cfdc33f6bf5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc94bf95ce858ef247ebee006d50cfdc33f6bf5f/comments", "author": {"login": "darksv", "id": 6718130, "node_id": "MDQ6VXNlcjY3MTgxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/6718130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darksv", "html_url": "https://github.com/darksv", "followers_url": "https://api.github.com/users/darksv/followers", "following_url": "https://api.github.com/users/darksv/following{/other_user}", "gists_url": "https://api.github.com/users/darksv/gists{/gist_id}", "starred_url": "https://api.github.com/users/darksv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darksv/subscriptions", "organizations_url": "https://api.github.com/users/darksv/orgs", "repos_url": "https://api.github.com/users/darksv/repos", "events_url": "https://api.github.com/users/darksv/events{/privacy}", "received_events_url": "https://api.github.com/users/darksv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "darksv", "id": 6718130, "node_id": "MDQ6VXNlcjY3MTgxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/6718130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darksv", "html_url": "https://github.com/darksv", "followers_url": "https://api.github.com/users/darksv/followers", "following_url": "https://api.github.com/users/darksv/following{/other_user}", "gists_url": "https://api.github.com/users/darksv/gists{/gist_id}", "starred_url": "https://api.github.com/users/darksv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darksv/subscriptions", "organizations_url": "https://api.github.com/users/darksv/orgs", "repos_url": "https://api.github.com/users/darksv/repos", "events_url": "https://api.github.com/users/darksv/events{/privacy}", "received_events_url": "https://api.github.com/users/darksv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c300135322730cd685b03d1adc8b8c7c7e714b0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c300135322730cd685b03d1adc8b8c7c7e714b0a", "html_url": "https://github.com/rust-lang/rust/commit/c300135322730cd685b03d1adc8b8c7c7e714b0a"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "7c9fbc4213f95ea5e926c1eac7a34bde9c9542e8", "filename": "crates/libsyntax2/src/lib.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bc94bf95ce858ef247ebee006d50cfdc33f6bf5f/crates%2Flibsyntax2%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc94bf95ce858ef247ebee006d50cfdc33f6bf5f/crates%2Flibsyntax2%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Flib.rs?ref=bc94bf95ce858ef247ebee006d50cfdc33f6bf5f", "patch": "@@ -100,7 +100,12 @@ impl File {\n             | RAW_STRING => {\n                 let text = get_text_after_edit(node, &edit);\n                 let tokens = tokenize(&text);\n-                if tokens.len() != 1 || tokens[0].kind != node.kind() {\n+                let token = match tokens[..] {\n+                    [token] if token.kind == node.kind() => token,\n+                    _ => return None,\n+                };\n+\n+                if token.kind == IDENT && is_contextual_kw(&text) {\n                     return None;\n                 }\n \n@@ -167,6 +172,15 @@ fn get_text_after_edit(node: SyntaxNodeRef, edit: &AtomEdit) -> String {\n     )\n }\n \n+fn is_contextual_kw(text: &str) -> bool {\n+    match text {\n+        | \"auto\"\n+        | \"default\"\n+        | \"union\" => true,\n+        _ => false,\n+    }\n+}\n+\n fn find_reparsable_node(node: SyntaxNodeRef, range: TextRange) -> Option<(SyntaxNodeRef, fn(&mut Parser))> {\n     let node = algo::find_covering_node(node, range);\n     return algo::ancestors(node)"}]}