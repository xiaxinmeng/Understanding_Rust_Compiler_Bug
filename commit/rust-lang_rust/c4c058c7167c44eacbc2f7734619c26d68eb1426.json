{"sha": "c4c058c7167c44eacbc2f7734619c26d68eb1426", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0YzA1OGM3MTY3YzQ0ZWFjYmMyZjc3MzQ2MTljMjZkNjhlYjE0MjY=", "commit": {"author": {"name": "Camelid", "email": "37223377+camelid@users.noreply.github.com", "date": "2020-09-01T02:30:03Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-09-01T02:33:08Z"}, "message": "Improve wording\n\nCo-authored-by: Joshua Nelson <joshua@yottadb.com>", "tree": {"sha": "2d71ae0a3ec1965a6a4506f3ab6e332313b96f3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d71ae0a3ec1965a6a4506f3ab6e332313b96f3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4c058c7167c44eacbc2f7734619c26d68eb1426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c058c7167c44eacbc2f7734619c26d68eb1426", "html_url": "https://github.com/rust-lang/rust/commit/c4c058c7167c44eacbc2f7734619c26d68eb1426", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4c058c7167c44eacbc2f7734619c26d68eb1426/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdd6f110125971a0d7ab1457c0ea7eb30304d5f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdd6f110125971a0d7ab1457c0ea7eb30304d5f3", "html_url": "https://github.com/rust-lang/rust/commit/cdd6f110125971a0d7ab1457c0ea7eb30304d5f3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2ca86a42bffaf78fc1c9cd05070fb65f3323577c", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c4c058c7167c44eacbc2f7734619c26d68eb1426/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4c058c7167c44eacbc2f7734619c26d68eb1426/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=c4c058c7167c44eacbc2f7734619c26d68eb1426", "patch": "@@ -220,9 +220,9 @@ mod prim_bool {}\n /// ```\n ///\n /// The reason is that, in the first example, there are many possible types that `!` could coerce\n-/// to, because the function can return one of many concrete types. However, in the second example,\n+/// to, because many types implement `Add<u32>`. However, in the second example,\n /// the `else` branch returns a `0`, which the compiler infers from the return type to be of type\n-/// `u32`, which is a concrete type that `!` can be coerced to. See issue [#36375] for more\n+/// `u32`. Since `u32` is a concrete type, `!` can and will be coerced to it. See issue [#36375] for more\n /// information on this quirk of `!`.\n ///\n /// [#36375]: https://github.com/rust-lang/rust/issues/36375"}]}