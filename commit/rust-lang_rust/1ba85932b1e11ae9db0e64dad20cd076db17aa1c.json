{"sha": "1ba85932b1e11ae9db0e64dad20cd076db17aa1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYTg1OTMyYjFlMTFhZTlkYjBlNjRkYWQyMGNkMDc2ZGIxN2FhMWM=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-29T18:24:57Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-29T21:28:02Z"}, "message": "Add a runtime flag to enable/disable claims en masse\n\nNow, if the environment variable CHECK_CLAIMS is set, then all\nclaims turn into checks. Otherwise, claims are no-ops.", "tree": {"sha": "b195b4714a15206462f7be19c60011cafd4b7eb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b195b4714a15206462f7be19c60011cafd4b7eb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ba85932b1e11ae9db0e64dad20cd076db17aa1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ba85932b1e11ae9db0e64dad20cd076db17aa1c", "html_url": "https://github.com/rust-lang/rust/commit/1ba85932b1e11ae9db0e64dad20cd076db17aa1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4b5b48e0a738dcb1b3d76295b525cd9147f64cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4b5b48e0a738dcb1b3d76295b525cd9147f64cb", "html_url": "https://github.com/rust-lang/rust/commit/d4b5b48e0a738dcb1b3d76295b525cd9147f64cb"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "ebdc0bedf41248f5d6fe5d35f790db9ae7267058", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=1ba85932b1e11ae9db0e64dad20cd076db17aa1c", "patch": "@@ -6061,12 +6061,23 @@ fn trans_expr_out(&@block_ctxt cx, &@ast::expr e, out_method output) ->\n             ret trans_check_expr(cx, a, \"Predicate\");\n         }\n         case (ast::expr_check(ast::unchecked, ?a)) {\n-            if (cx.fcx.lcx.ccx.sess.get_opts().check_claims) {\n-                ret trans_check_expr(cx, a, \"Claim\");\n-            }\n-            else {\n-                ret rslt(cx, C_nil());\n-            }\n+            /* Claims are turned on and off by a global variable\n+               that the RTS sets. This case generates code to\n+               check the value of that variable, doing nothing\n+               if it's set to false and acting like a check\n+               otherwise. */\n+            auto c = get_extern_const(cx.fcx.lcx.ccx.externs, \n+                                      cx.fcx.lcx.ccx.llmod,\n+                                      \"check_claims\", T_bool());\n+            auto cond = cx.build.Load(c);\n+\n+            auto then_cx   = new_scope_block_ctxt(cx, \"claim_then\");\n+            auto check_res = trans_check_expr(then_cx, a, \"Claim\");\n+            auto else_cx = new_scope_block_ctxt(cx, \"else\");\n+            auto els = rslt(else_cx, C_nil());\n+\n+            cx.build.CondBr(cond, then_cx.llbb, else_cx.llbb);\n+            ret rslt(join_branches(cx, [check_res, els]), C_nil());\n         }\n         case (ast::expr_break) { ret trans_break(e.span, cx); }\n         case (ast::expr_cont) { ret trans_cont(e.span, cx); }"}, {"sha": "bd2a5ad1b9540acba1e31619f5aeef640dce4187", "filename": "src/rt/rust.cpp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Frt%2Frust.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Frt%2Frust.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.cpp?ref=1ba85932b1e11ae9db0e64dad20cd076db17aa1c", "patch": "@@ -91,10 +91,16 @@ int get_num_threads()\n  * initialize the kernel, create the root domain and run it.\n  */\n \n+int check_claims = 0;\n+\n+void enable_claims(void* ck) { check_claims = (ck != 0); }\n+\n extern \"C\" CDECL int\n rust_start(uintptr_t main_fn, int argc, char **argv, void* crate_map) {\n \n     update_log_settings(crate_map, getenv(\"RUST_LOG\"));\n+    enable_claims(getenv(\"CHECK_CLAIMS\"));\n+\n     rust_srv *srv = new rust_srv();\n     rust_kernel *kernel = new rust_kernel(srv);\n     kernel->start();"}, {"sha": "61a8e8d78e49c63e67ea383b28d6284f8a93465c", "filename": "src/rt/rust.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Frt%2Frust.h", "raw_url": "https://github.com/rust-lang/rust/raw/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Frt%2Frust.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.h?ref=1ba85932b1e11ae9db0e64dad20cd076db17aa1c", "patch": "@@ -20,6 +20,10 @@\n #define FASTCALL\n #endif\n \n+/* Controls whether claims are turned into checks */\n+/* Variable name must be kept consistent with trans.rs */\n+extern \"C\" int check_claims;\n+\n /*\n  * Local Variables:\n  * fill-column: 78;"}, {"sha": "b3b0e9a6121cc8d9271b9377eaaf9496467459a5", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=1ba85932b1e11ae9db0e64dad20cd076db17aa1c", "patch": "@@ -1,4 +1,5 @@\n align_of\n+check_claims\n debug_box\n debug_fn\n debug_obj"}, {"sha": "2608f15aab02c49ce0355e9e1082e149ad42ef0c", "filename": "src/test/run-fail/fn-constraint-claim.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Ftest%2Frun-fail%2Ffn-constraint-claim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Ftest%2Frun-fail%2Ffn-constraint-claim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffn-constraint-claim.rs?ref=1ba85932b1e11ae9db0e64dad20cd076db17aa1c", "patch": "@@ -1,4 +1,5 @@\n // xfail-stage0\n+// xfail-stage1\n // error-pattern:quux\n use std;\n import std::str::*;"}, {"sha": "67257a90c29b58e79872b787c62e2ad75945f4fe", "filename": "src/test/run-pass/claim-nonterm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Ftest%2Frun-pass%2Fclaim-nonterm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ba85932b1e11ae9db0e64dad20cd076db17aa1c/src%2Ftest%2Frun-pass%2Fclaim-nonterm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclaim-nonterm.rs?ref=1ba85932b1e11ae9db0e64dad20cd076db17aa1c", "patch": "@@ -1,4 +1,5 @@\n // xfail-stage0\n+// xfail-stage1\n // tests that the pred in a claim isn't actually eval'd\n use std;\n import std::str::*;"}]}