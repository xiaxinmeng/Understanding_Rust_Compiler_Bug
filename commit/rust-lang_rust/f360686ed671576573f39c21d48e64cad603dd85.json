{"sha": "f360686ed671576573f39c21d48e64cad603dd85", "node_id": "C_kwDOAAsO6NoAKGYzNjA2ODZlZDY3MTU3NjU3M2YzOWMyMWQ0OGU2NGNhZDYwM2RkODU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-25T09:44:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-25T09:44:40Z"}, "message": "Rollup merge of #104873 - RalfJung:therefore, r=Dylan-DPC\n\nRefCell::get_mut: fix typo\n\nand fix the same typo in a bunch of other places", "tree": {"sha": "6cd8c57e4f3dce2d7b190f72118fc7a43aa7d8c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cd8c57e4f3dce2d7b190f72118fc7a43aa7d8c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f360686ed671576573f39c21d48e64cad603dd85", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjgI6ICRBK7hj4Ov3rIwAA6hQIAIUqndc5IQxspFSmVuFGxTTg\n2EWU/V6LESwpcTJJZZ6CT3TaY4PwmJStQt/196S7qyp0PjlQC2mZRzuaUEtC3iv9\nFf430s1rwQxCi/YNY0CM5XfOopHLJ1ai2CHKQXp7oSlIWk4ziHJiRikzE93CmUqt\nqdmqE8n0Y98NsknUNsWs3Cb4CWYzY627qtKz5Eh5Zhxnt8W/zKdYeAocMXfGTOZq\nR1Xtj2pdFLGK6Z8Y3LN5M73Bmance7FbKrjcnex50/Cl51s+30pUTR8LNA2gJ3We\n1UiR+JKEF5nVq6FNE2Y7ZBzYV0fRVLGNzU4k6luL9kOJ93E+OB0Ji99/ohx5Mzg=\n=DT9z\n-----END PGP SIGNATURE-----\n", "payload": "tree 6cd8c57e4f3dce2d7b190f72118fc7a43aa7d8c6\nparent 8babe1c4174774e7cd559e347878a8553f0ac2d0\nparent 6ed4f15940d94d290e23bb72df92c2fb73e8fbdc\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669369480 +0100\ncommitter GitHub <noreply@github.com> 1669369480 +0100\n\nRollup merge of #104873 - RalfJung:therefore, r=Dylan-DPC\n\nRefCell::get_mut: fix typo\n\nand fix the same typo in a bunch of other places\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f360686ed671576573f39c21d48e64cad603dd85", "html_url": "https://github.com/rust-lang/rust/commit/f360686ed671576573f39c21d48e64cad603dd85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f360686ed671576573f39c21d48e64cad603dd85/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8babe1c4174774e7cd559e347878a8553f0ac2d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8babe1c4174774e7cd559e347878a8553f0ac2d0", "html_url": "https://github.com/rust-lang/rust/commit/8babe1c4174774e7cd559e347878a8553f0ac2d0"}, {"sha": "6ed4f15940d94d290e23bb72df92c2fb73e8fbdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ed4f15940d94d290e23bb72df92c2fb73e8fbdc", "html_url": "https://github.com/rust-lang/rust/commit/6ed4f15940d94d290e23bb72df92c2fb73e8fbdc"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "47cce2aa39b0c5fb8d4fb5b23b10a5c9b7204088", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f360686ed671576573f39c21d48e64cad603dd85/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f360686ed671576573f39c21d48e64cad603dd85/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=f360686ed671576573f39c21d48e64cad603dd85", "patch": "@@ -1025,7 +1025,7 @@ impl<T: ?Sized> RefCell<T> {\n     ///\n     /// Since this method borrows `RefCell` mutably, it is statically guaranteed\n     /// that no borrows to the underlying data exist. The dynamic checks inherent\n-    /// in [`borrow_mut`] and most other methods of `RefCell` are therefor\n+    /// in [`borrow_mut`] and most other methods of `RefCell` are therefore\n     /// unnecessary.\n     ///\n     /// This method can only be called if `RefCell` can be mutably borrowed,"}, {"sha": "c7c53bc69d0b858982c6d2254e8ca0d01786446f", "filename": "src/tools/clippy/clippy_dev/src/setup/git_hook.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f360686ed671576573f39c21d48e64cad603dd85/src%2Ftools%2Fclippy%2Fclippy_dev%2Fsrc%2Fsetup%2Fgit_hook.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f360686ed671576573f39c21d48e64cad603dd85/src%2Ftools%2Fclippy%2Fclippy_dev%2Fsrc%2Fsetup%2Fgit_hook.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_dev%2Fsrc%2Fsetup%2Fgit_hook.rs?ref=f360686ed671576573f39c21d48e64cad603dd85", "patch": "@@ -6,7 +6,7 @@ use super::verify_inside_clippy_dir;\n /// Rusts setup uses `git rev-parse --git-common-dir` to get the root directory of the repo.\n /// I've decided against this for the sake of simplicity and to make sure that it doesn't install\n /// the hook if `clippy_dev` would be used in the rust tree. The hook also references this tool\n-/// for formatting and should therefor only be used in a normal clone of clippy\n+/// for formatting and should therefore only be used in a normal clone of clippy\n const REPO_GIT_DIR: &str = \".git\";\n const HOOK_SOURCE_FILE: &str = \"util/etc/pre-commit.sh\";\n const HOOK_TARGET_FILE: &str = \".git/hooks/pre-commit\";"}, {"sha": "c944fc51e8287da1716c47c5932a31d54da8fd1b", "filename": "src/tools/clippy/clippy_utils/src/hir_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f360686ed671576573f39c21d48e64cad603dd85/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f360686ed671576573f39c21d48e64cad603dd85/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fhir_utils.rs?ref=f360686ed671576573f39c21d48e64cad603dd85", "patch": "@@ -113,7 +113,7 @@ impl HirEqInterExpr<'_, '_, '_> {\n                     }\n                 }\n \n-                // eq_pat adds the HirIds to the locals map. We therefor call it last to make sure that\n+                // eq_pat adds the HirIds to the locals map. We therefore call it last to make sure that\n                 // these only get added if the init and type is equal.\n                 both(&l.init, &r.init, |l, r| self.eq_expr(l, r))\n                     && both(&l.ty, &r.ty, |l, r| self.eq_ty(l, r))"}]}