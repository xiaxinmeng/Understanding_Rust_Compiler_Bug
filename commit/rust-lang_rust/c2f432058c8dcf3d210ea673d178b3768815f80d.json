{"sha": "c2f432058c8dcf3d210ea673d178b3768815f80d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyZjQzMjA1OGM4ZGNmM2QyMTBlYTY3M2QxNzhiMzc2ODgxNWY4MGQ=", "commit": {"author": {"name": "Kevin Reid", "email": "kpreid@google.com", "date": "2021-09-04T18:17:34Z"}, "committer": {"name": "Kevin Reid", "email": "kpreid@google.com", "date": "2021-09-04T18:30:14Z"}, "message": "Add sentence punctuation and links in `Option` docs.", "tree": {"sha": "f0d497df3b8a7f97ef5058c71770c5503f003a2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0d497df3b8a7f97ef5058c71770c5503f003a2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2f432058c8dcf3d210ea673d178b3768815f80d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2f432058c8dcf3d210ea673d178b3768815f80d", "html_url": "https://github.com/rust-lang/rust/commit/c2f432058c8dcf3d210ea673d178b3768815f80d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2f432058c8dcf3d210ea673d178b3768815f80d/comments", "author": {"login": "kpreid", "id": 779501, "node_id": "MDQ6VXNlcjc3OTUwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/779501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpreid", "html_url": "https://github.com/kpreid", "followers_url": "https://api.github.com/users/kpreid/followers", "following_url": "https://api.github.com/users/kpreid/following{/other_user}", "gists_url": "https://api.github.com/users/kpreid/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpreid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpreid/subscriptions", "organizations_url": "https://api.github.com/users/kpreid/orgs", "repos_url": "https://api.github.com/users/kpreid/repos", "events_url": "https://api.github.com/users/kpreid/events{/privacy}", "received_events_url": "https://api.github.com/users/kpreid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kpreid", "id": 779501, "node_id": "MDQ6VXNlcjc3OTUwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/779501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpreid", "html_url": "https://github.com/kpreid", "followers_url": "https://api.github.com/users/kpreid/followers", "following_url": "https://api.github.com/users/kpreid/following{/other_user}", "gists_url": "https://api.github.com/users/kpreid/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpreid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpreid/subscriptions", "organizations_url": "https://api.github.com/users/kpreid/orgs", "repos_url": "https://api.github.com/users/kpreid/repos", "events_url": "https://api.github.com/users/kpreid/events{/privacy}", "received_events_url": "https://api.github.com/users/kpreid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34c1fce50be88eb4a0b81eb486b47e1f929b1ce3", "url": "https://api.github.com/repos/rust-lang/rust/commits/34c1fce50be88eb4a0b81eb486b47e1f929b1ce3", "html_url": "https://github.com/rust-lang/rust/commit/34c1fce50be88eb4a0b81eb486b47e1f929b1ce3"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "64333a82387a156073f1fd688c801f3a9c5e56b3", "filename": "library/core/src/option.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c2f432058c8dcf3d210ea673d178b3768815f80d/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f432058c8dcf3d210ea673d178b3768815f80d/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=c2f432058c8dcf3d210ea673d178b3768815f80d", "patch": "@@ -1173,7 +1173,7 @@ impl<T> Option<T> {\n     // Entry-like operations to insert a value and return a reference\n     /////////////////////////////////////////////////////////////////////////\n \n-    /// Inserts `value` into the option then returns a mutable reference to it.\n+    /// Inserts `value` into the option, then returns a mutable reference to it.\n     ///\n     /// If the option already contains a value, the old value is dropped.\n     ///\n@@ -1397,7 +1397,7 @@ impl<T> Option<T> {\n }\n \n impl<T, U> Option<(T, U)> {\n-    /// Unzips an option containing a tuple of two options\n+    /// Unzips an option containing a tuple of two options.\n     ///\n     /// If `self` is `Some((a, b))` this method returns `(Some(a), Some(b))`.\n     /// Otherwise, `(None, None)` is returned.\n@@ -1500,7 +1500,7 @@ impl<T: Clone> Option<&mut T> {\n }\n \n impl<T: Default> Option<T> {\n-    /// Returns the contained [`Some`] value or a default\n+    /// Returns the contained [`Some`] value or a default.\n     ///\n     /// Consumes the `self` argument then, if [`Some`], returns the contained\n     /// value, otherwise if [`None`], returns the [default value] for that\n@@ -1561,7 +1561,7 @@ impl<T: DerefMut> Option<T> {\n     /// Converts from `Option<T>` (or `&mut Option<T>`) to `Option<&mut T::Target>`.\n     ///\n     /// Leaves the original `Option` in-place, creating a new one containing a mutable reference to\n-    /// the inner type's `Deref::Target` type.\n+    /// the inner type's [`Deref::Target`] type.\n     ///\n     /// # Examples\n     ///\n@@ -2039,7 +2039,7 @@ impl<T> ops::FromResidual for Option<T> {\n }\n \n impl<T> Option<Option<T>> {\n-    /// Converts from `Option<Option<T>>` to `Option<T>`\n+    /// Converts from `Option<Option<T>>` to `Option<T>`.\n     ///\n     /// # Examples\n     ///"}]}