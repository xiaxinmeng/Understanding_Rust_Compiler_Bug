{"sha": "21bcd2ee9c9e8d4453afc28a7f736ee754241457", "node_id": "C_kwDOAAsO6NoAKDIxYmNkMmVlOWM5ZThkNDQ1M2FmYzI4YTdmNzM2ZWU3NTQyNDE0NTc", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-02-17T16:19:13Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-02-17T16:20:38Z"}, "message": "Fix ICE on type alias in recursion", "tree": {"sha": "5b43d60119eef40af2f8c116ff23106f2e2d6854", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b43d60119eef40af2f8c116ff23106f2e2d6854"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21bcd2ee9c9e8d4453afc28a7f736ee754241457", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21bcd2ee9c9e8d4453afc28a7f736ee754241457", "html_url": "https://github.com/rust-lang/rust/commit/21bcd2ee9c9e8d4453afc28a7f736ee754241457", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21bcd2ee9c9e8d4453afc28a7f736ee754241457/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4f5fc3e5cc70b7a43bf7b518c455f3d9bada9e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4f5fc3e5cc70b7a43bf7b518c455f3d9bada9e3", "html_url": "https://github.com/rust-lang/rust/commit/f4f5fc3e5cc70b7a43bf7b518c455f3d9bada9e3"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "21f3ef9267ff35227b5976fbcd7ad02ef52decec", "filename": "compiler/rustc_middle/src/values.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/21bcd2ee9c9e8d4453afc28a7f736ee754241457/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21bcd2ee9c9e8d4453afc28a7f736ee754241457/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs?ref=21bcd2ee9c9e8d4453afc28a7f736ee754241457", "patch": "@@ -2,7 +2,7 @@ use crate::dep_graph::DepKind;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{pluralize, struct_span_err, Applicability, MultiSpan};\n use rustc_hir as hir;\n-use rustc_hir::def::DefKind;\n+use rustc_hir::def::{DefKind, Res};\n use rustc_middle::ty::Representability;\n use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt};\n use rustc_query_system::query::QueryInfo;\n@@ -199,7 +199,8 @@ fn find_item_ty_spans(\n ) {\n     match ty.kind {\n         hir::TyKind::Path(hir::QPath::Resolved(_, path)) => {\n-            if let Some(def_id) = path.res.opt_def_id() {\n+            if let Res::Def(kind, def_id) = path.res\n+                && kind != DefKind::TyAlias {\n                 let check_params = def_id.as_local().map_or(true, |def_id| {\n                     if def_id == needle {\n                         spans.push(ty.span);"}, {"sha": "59add7eb18bdb92355f27278a6d76ec6cf0e4ce2", "filename": "tests/ui/infinite/auxiliary/alias.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21bcd2ee9c9e8d4453afc28a7f736ee754241457/tests%2Fui%2Finfinite%2Fauxiliary%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21bcd2ee9c9e8d4453afc28a7f736ee754241457/tests%2Fui%2Finfinite%2Fauxiliary%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite%2Fauxiliary%2Falias.rs?ref=21bcd2ee9c9e8d4453afc28a7f736ee754241457", "patch": "@@ -0,0 +1,2 @@\n+pub struct W<T>(T);\n+pub type Wrapper<T> = W<T>;"}, {"sha": "45356f359ceded3a0916be4376dbdbb930bfe7e3", "filename": "tests/ui/infinite/infinite-alias.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/21bcd2ee9c9e8d4453afc28a7f736ee754241457/tests%2Fui%2Finfinite%2Finfinite-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21bcd2ee9c9e8d4453afc28a7f736ee754241457/tests%2Fui%2Finfinite%2Finfinite-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite%2Finfinite-alias.rs?ref=21bcd2ee9c9e8d4453afc28a7f736ee754241457", "patch": "@@ -0,0 +1,9 @@\n+// aux-build: alias.rs\n+// regression test for 108160\n+\n+extern crate alias;\n+\n+use alias::Wrapper;\n+struct Rec(Wrapper<Rec>); //~ ERROR recursive type `Rec` has infinite\n+\n+fn main() {}"}, {"sha": "9d9265f8c367c44ae82d239fac544fac6fdc3e28", "filename": "tests/ui/infinite/infinite-alias.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/21bcd2ee9c9e8d4453afc28a7f736ee754241457/tests%2Fui%2Finfinite%2Finfinite-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21bcd2ee9c9e8d4453afc28a7f736ee754241457/tests%2Fui%2Finfinite%2Finfinite-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite%2Finfinite-alias.stderr?ref=21bcd2ee9c9e8d4453afc28a7f736ee754241457", "patch": "@@ -0,0 +1,14 @@\n+error[E0072]: recursive type `Rec` has infinite size\n+  --> $DIR/infinite-alias.rs:7:1\n+   |\n+LL | struct Rec(Wrapper<Rec>);\n+   | ^^^^^^^^^^ ------------ recursive without indirection\n+   |\n+help: insert some indirection (e.g., a `Box`, `Rc`, or `&`) to break the cycle\n+   |\n+LL | struct Rec(Box<Wrapper<Rec>>);\n+   |            ++++            +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0072`."}]}