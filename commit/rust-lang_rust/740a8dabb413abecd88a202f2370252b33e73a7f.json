{"sha": "740a8dabb413abecd88a202f2370252b33e73a7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MGE4ZGFiYjQxM2FiZWNkODhhMjAyZjIzNzAyNTJiMzNlNzNhN2Y=", "commit": {"author": {"name": "Thomas Heck", "email": "t@b128.net", "date": "2019-05-11T08:23:07Z"}, "committer": {"name": "Thomas Heck", "email": "t@b128.net", "date": "2019-05-11T09:03:28Z"}, "message": "add comment to `Rc`/`Arc`'s `Eq` specialization", "tree": {"sha": "a0e08b8f22d7b27be2ad2a49927ec39b7d6f8209", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0e08b8f22d7b27be2ad2a49927ec39b7d6f8209"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/740a8dabb413abecd88a202f2370252b33e73a7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/740a8dabb413abecd88a202f2370252b33e73a7f", "html_url": "https://github.com/rust-lang/rust/commit/740a8dabb413abecd88a202f2370252b33e73a7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/740a8dabb413abecd88a202f2370252b33e73a7f/comments", "author": {"login": "chpio", "id": 545659, "node_id": "MDQ6VXNlcjU0NTY1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/545659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chpio", "html_url": "https://github.com/chpio", "followers_url": "https://api.github.com/users/chpio/followers", "following_url": "https://api.github.com/users/chpio/following{/other_user}", "gists_url": "https://api.github.com/users/chpio/gists{/gist_id}", "starred_url": "https://api.github.com/users/chpio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chpio/subscriptions", "organizations_url": "https://api.github.com/users/chpio/orgs", "repos_url": "https://api.github.com/users/chpio/repos", "events_url": "https://api.github.com/users/chpio/events{/privacy}", "received_events_url": "https://api.github.com/users/chpio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chpio", "id": 545659, "node_id": "MDQ6VXNlcjU0NTY1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/545659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chpio", "html_url": "https://github.com/chpio", "followers_url": "https://api.github.com/users/chpio/followers", "following_url": "https://api.github.com/users/chpio/following{/other_user}", "gists_url": "https://api.github.com/users/chpio/gists{/gist_id}", "starred_url": "https://api.github.com/users/chpio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chpio/subscriptions", "organizations_url": "https://api.github.com/users/chpio/orgs", "repos_url": "https://api.github.com/users/chpio/repos", "events_url": "https://api.github.com/users/chpio/events{/privacy}", "received_events_url": "https://api.github.com/users/chpio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7519eaca9a2565cd60e645b2dfda61f205bd25df", "url": "https://api.github.com/repos/rust-lang/rust/commits/7519eaca9a2565cd60e645b2dfda61f205bd25df", "html_url": "https://github.com/rust-lang/rust/commit/7519eaca9a2565cd60e645b2dfda61f205bd25df"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "0dffb19476f3d318dc64968dd31d11663fededd7", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/740a8dabb413abecd88a202f2370252b33e73a7f/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/740a8dabb413abecd88a202f2370252b33e73a7f/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=740a8dabb413abecd88a202f2370252b33e73a7f", "patch": "@@ -932,6 +932,11 @@ impl<T: ?Sized + PartialEq> RcEqIdent<T> for Rc<T> {\n     }\n }\n \n+/// We're doing this specialization here, and not as a more general optimization on `&T`, because it\n+/// would otherwise add a cost to all equality checks on refs. We assume that `Rc`s are used to\n+/// store large values, that are slow to clone, but also heavy to check for equality, causing this\n+/// cost to pay off more easily. It's also more likely to have two `Rc` clones, that point to\n+/// the same value, than two `&T`s.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized + Eq> RcEqIdent<T> for Rc<T> {\n     #[inline]"}, {"sha": "90c7859b3db9ec457acdbc4f0b0f67fea0f105bf", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/740a8dabb413abecd88a202f2370252b33e73a7f/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/740a8dabb413abecd88a202f2370252b33e73a7f/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=740a8dabb413abecd88a202f2370252b33e73a7f", "patch": "@@ -1377,6 +1377,11 @@ impl<T: ?Sized + PartialEq> ArcEqIdent<T> for Arc<T> {\n     }\n }\n \n+/// We're doing this specialization here, and not as a more general optimization on `&T`, because it\n+/// would otherwise add a cost to all equality checks on refs. We assume that `Arc`s are used to\n+/// store large values, that are slow to clone, but also heavy to check for equality, causing this\n+/// cost to pay off more easily. It's also more likely to have two `Arc` clones, that point to\n+/// the same value, than two `&T`s.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized + Eq> ArcEqIdent<T> for Arc<T> {\n     #[inline]"}]}