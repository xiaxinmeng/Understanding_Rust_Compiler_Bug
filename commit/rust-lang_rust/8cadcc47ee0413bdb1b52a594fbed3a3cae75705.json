{"sha": "8cadcc47ee0413bdb1b52a594fbed3a3cae75705", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYWRjYzQ3ZWUwNDEzYmRiMWI1MmE1OTRmYmVkM2EzY2FlNzU3MDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-23T16:48:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-23T16:48:49Z"}, "message": "auto merge of #6027 : alexcrichton/rust/more-backticks, r=catamorphism\n\nIt seems that the general convention of error messages is to have keywords in backticks, so it's probably a good idea to keep doing that.", "tree": {"sha": "ca602214f6762417816fa9c12fdeebe38d9156c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca602214f6762417816fa9c12fdeebe38d9156c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cadcc47ee0413bdb1b52a594fbed3a3cae75705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cadcc47ee0413bdb1b52a594fbed3a3cae75705", "html_url": "https://github.com/rust-lang/rust/commit/8cadcc47ee0413bdb1b52a594fbed3a3cae75705", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cadcc47ee0413bdb1b52a594fbed3a3cae75705/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0290caa885ec9bdd3a6d91cbbfbfbae4ed164fd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0290caa885ec9bdd3a6d91cbbfbfbae4ed164fd6", "html_url": "https://github.com/rust-lang/rust/commit/0290caa885ec9bdd3a6d91cbbfbfbae4ed164fd6"}, {"sha": "8884c6abdba9e564a06f21f6238011ad11e92c96", "url": "https://api.github.com/repos/rust-lang/rust/commits/8884c6abdba9e564a06f21f6238011ad11e92c96", "html_url": "https://github.com/rust-lang/rust/commit/8884c6abdba9e564a06f21f6238011ad11e92c96"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "95af2f15bc4ea1e818c3b145d0a3001a0656e030", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8cadcc47ee0413bdb1b52a594fbed3a3cae75705/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cadcc47ee0413bdb1b52a594fbed3a3cae75705/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=8cadcc47ee0413bdb1b52a594fbed3a3cae75705", "patch": "@@ -262,7 +262,7 @@ pub fn get_lint_dict() -> LintDict {\n         (~\"unused_unsafe\",\n          LintSpec {\n             lint: unused_unsafe,\n-            desc: \"unnecessary use of an \\\"unsafe\\\" block\",\n+            desc: \"unnecessary use of an `unsafe` block\",\n             default: warn\n         }),\n \n@@ -949,7 +949,7 @@ fn check_item_unused_unsafe(cx: ty::ctxt, it: @ast::item) {\n                 if !cx.used_unsafe.contains(&blk.node.id) {\n                     cx.sess.span_lint(unused_unsafe, blk.node.id, it.id,\n                                       blk.span,\n-                                      ~\"unnecessary \\\"unsafe\\\" block\");\n+                                      ~\"unnecessary `unsafe` block\");\n                 }\n             }\n             _ => ()"}, {"sha": "7d9044f5d89215cbab07d5eedccf06739b313550", "filename": "src/test/compile-fail/unused-unsafe.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8cadcc47ee0413bdb1b52a594fbed3a3cae75705/src%2Ftest%2Fcompile-fail%2Funused-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cadcc47ee0413bdb1b52a594fbed3a3cae75705/src%2Ftest%2Fcompile-fail%2Funused-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funused-unsafe.rs?ref=8cadcc47ee0413bdb1b52a594fbed3a3cae75705", "patch": "@@ -16,10 +16,10 @@ use core::libc;\n \n fn callback<T>(_f: &fn() -> T) -> T { fail!() }\n \n-fn bad1() { unsafe {} }                  //~ ERROR: unnecessary \"unsafe\" block\n-fn bad2() { unsafe { bad1() } }          //~ ERROR: unnecessary \"unsafe\" block\n-unsafe fn bad4() { unsafe {} }           //~ ERROR: unnecessary \"unsafe\" block\n-fn bad5() { unsafe { do callback {} } }  //~ ERROR: unnecessary \"unsafe\" block\n+fn bad1() { unsafe {} }                  //~ ERROR: unnecessary `unsafe` block\n+fn bad2() { unsafe { bad1() } }          //~ ERROR: unnecessary `unsafe` block\n+unsafe fn bad4() { unsafe {} }           //~ ERROR: unnecessary `unsafe` block\n+fn bad5() { unsafe { do callback {} } }  //~ ERROR: unnecessary `unsafe` block\n \n unsafe fn good0() { libc::exit(1) }\n fn good1() { unsafe { libc::exit(1) } }"}]}