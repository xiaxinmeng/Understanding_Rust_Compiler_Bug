{"sha": "db15fe6b383741ae1cc13cfb62fc1c18f8ff5241", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMTVmZTZiMzgzNzQxYWUxY2MxM2NmYjYyZmMxYzE4ZjhmZjUyNDE=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-26T10:32:22Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-26T16:14:34Z"}, "message": "Mark `Layout::dangling` inline", "tree": {"sha": "48785214738ebd0e3519116ba07ac2861ab4503a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48785214738ebd0e3519116ba07ac2861ab4503a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db15fe6b383741ae1cc13cfb62fc1c18f8ff5241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db15fe6b383741ae1cc13cfb62fc1c18f8ff5241", "html_url": "https://github.com/rust-lang/rust/commit/db15fe6b383741ae1cc13cfb62fc1c18f8ff5241", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db15fe6b383741ae1cc13cfb62fc1c18f8ff5241/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "717e0c7b9d4b9fd8a1a3c7451255d30c194c7b3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/717e0c7b9d4b9fd8a1a3c7451255d30c194c7b3e", "html_url": "https://github.com/rust-lang/rust/commit/717e0c7b9d4b9fd8a1a3c7451255d30c194c7b3e"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "fa644cfe99ed63572cdb8d0fbe034e368300aca3", "filename": "src/libcore/alloc/layout.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db15fe6b383741ae1cc13cfb62fc1c18f8ff5241/src%2Flibcore%2Falloc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db15fe6b383741ae1cc13cfb62fc1c18f8ff5241/src%2Flibcore%2Falloc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc%2Flayout.rs?ref=db15fe6b383741ae1cc13cfb62fc1c18f8ff5241", "patch": "@@ -141,6 +141,7 @@ impl Layout {\n     /// sentinel value. Types that lazily allocate must track initialization by\n     /// some other means.\n     #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n+    #[inline]\n     pub const fn dangling(&self) -> NonNull<u8> {\n         // align is non-zero and a power of two\n         unsafe { NonNull::new_unchecked(self.align() as *mut u8) }"}]}