{"sha": "3df9afcae781c2d9db5a2cb9acde9be5ae753285", "node_id": "C_kwDOAAsO6NoAKDNkZjlhZmNhZTc4MWMyZDlkYjVhMmNiOWFjZGU5YmU1YWU3NTMyODU", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-13T07:33:34Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-13T07:33:34Z"}, "message": "rustdoc: don't ICE on `TyKind::Typeof`", "tree": {"sha": "1078a18d67f7d2c5dc52c0314be0ba3f9f725c75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1078a18d67f7d2c5dc52c0314be0ba3f9f725c75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3df9afcae781c2d9db5a2cb9acde9be5ae753285", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3df9afcae781c2d9db5a2cb9acde9be5ae753285", "html_url": "https://github.com/rust-lang/rust/commit/3df9afcae781c2d9db5a2cb9acde9be5ae753285", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3df9afcae781c2d9db5a2cb9acde9be5ae753285/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a9217601c0e5ae83fa8bca6797137a6d2f7e4e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a9217601c0e5ae83fa8bca6797137a6d2f7e4e5", "html_url": "https://github.com/rust-lang/rust/commit/2a9217601c0e5ae83fa8bca6797137a6d2f7e4e5"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "7f82dfbd3d6fffec218223de4817436db726658f", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3df9afcae781c2d9db5a2cb9acde9be5ae753285/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df9afcae781c2d9db5a2cb9acde9be5ae753285/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=3df9afcae781c2d9db5a2cb9acde9be5ae753285", "patch": "@@ -1543,8 +1543,7 @@ pub(crate) fn clean_ty<'tcx>(ty: &hir::Ty<'tcx>, cx: &mut DocContext<'tcx>) -> T\n         }\n         TyKind::BareFn(barefn) => BareFunction(Box::new(clean_bare_fn_ty(barefn, cx))),\n         // Rustdoc handles `TyKind::Err`s by turning them into `Type::Infer`s.\n-        TyKind::Infer | TyKind::Err => Infer,\n-        TyKind::Typeof(..) => panic!(\"unimplemented type {:?}\", ty.kind),\n+        TyKind::Infer | TyKind::Err | TyKind::Typeof(..) => Infer,\n     }\n }\n "}]}