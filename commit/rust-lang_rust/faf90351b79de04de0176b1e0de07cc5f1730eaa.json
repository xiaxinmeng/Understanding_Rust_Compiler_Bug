{"sha": "faf90351b79de04de0176b1e0de07cc5f1730eaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhZjkwMzUxYjc5ZGUwNGRlMDE3NmIxZTBkZTA3Y2M1ZjE3MzBlYWE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-07-16T18:43:24Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-07-17T16:27:51Z"}, "message": "Add flag to hide code on inline suggestions\n\nNow there's a way to add suggestions that hide the suggested code when\npresented inline, to avoid weird wording when short code snippets are\nadded at the end.", "tree": {"sha": "56e8a580fc683a21d2b6e623af9758e0b36b250c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56e8a580fc683a21d2b6e623af9758e0b36b250c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faf90351b79de04de0176b1e0de07cc5f1730eaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faf90351b79de04de0176b1e0de07cc5f1730eaa", "html_url": "https://github.com/rust-lang/rust/commit/faf90351b79de04de0176b1e0de07cc5f1730eaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faf90351b79de04de0176b1e0de07cc5f1730eaa/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7239d7717188f6dc2b380a40335a0c8571be6502", "url": "https://api.github.com/repos/rust-lang/rust/commits/7239d7717188f6dc2b380a40335a0c8571be6502", "html_url": "https://github.com/rust-lang/rust/commit/7239d7717188f6dc2b380a40335a0c8571be6502"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "2ffa5fc796e17892f3450259b05020b75fc4a002", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=faf90351b79de04de0176b1e0de07cc5f1730eaa", "patch": "@@ -209,6 +209,22 @@ impl Diagnostic {\n         self\n     }\n \n+    /// Prints out a message with a suggested edit of the code. If the suggestion is presented\n+    /// inline it will only show the text message and not the text.\n+    ///\n+    /// See `diagnostic::CodeSuggestion` for more information.\n+    pub fn span_suggestion_short(&mut self, sp: Span, msg: &str, suggestion: String) -> &mut Self {\n+        self.suggestions.push(CodeSuggestion {\n+            substitution_parts: vec![Substitution {\n+                span: sp,\n+                substitutions: vec![suggestion],\n+            }],\n+            msg: msg.to_owned(),\n+            show_code_when_inline: false,\n+        });\n+        self\n+    }\n+\n     /// Prints out a message with a suggested edit of the code.\n     ///\n     /// See `diagnostic::CodeSuggestion` for more information.\n@@ -219,6 +235,7 @@ impl Diagnostic {\n                 substitutions: vec![suggestion],\n             }],\n             msg: msg.to_owned(),\n+            show_code_when_inline: true,\n         });\n         self\n     }\n@@ -230,6 +247,7 @@ impl Diagnostic {\n                 substitutions: suggestions,\n             }],\n             msg: msg.to_owned(),\n+            show_code_when_inline: true,\n         });\n         self\n     }"}, {"sha": "6f6470089d77a6826c8c87de0fd9153b3cd152ad", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=faf90351b79de04de0176b1e0de07cc5f1730eaa", "patch": "@@ -146,6 +146,11 @@ impl<'a> DiagnosticBuilder<'a> {\n                                                   sp: S,\n                                                   msg: &str)\n                                                   -> &mut Self);\n+    forward!(pub fn span_suggestion_short(&mut self,\n+                                          sp: Span,\n+                                          msg: &str,\n+                                          suggestion: String)\n+                                          -> &mut Self);\n     forward!(pub fn span_suggestion(&mut self,\n                                     sp: Span,\n                                     msg: &str,"}, {"sha": "94b3a4396d704d1eeb249847c54c35f8b024e365", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=faf90351b79de04de0176b1e0de07cc5f1730eaa", "patch": "@@ -47,8 +47,9 @@ impl Emitter for EmitterWriter {\n                // don't display multiline suggestions as labels\n                sugg.substitution_parts[0].substitutions[0].find('\\n').is_none() {\n                 let substitution = &sugg.substitution_parts[0].substitutions[0];\n-                let msg = if substitution.len() == 0 {\n-                    // This substitution is only removal, don't show it\n+                let msg = if substitution.len() == 0 || !sugg.show_code_when_inline {\n+                    // This substitution is only removal or we explicitely don't want to show the\n+                    // code inline, don't show it\n                     format!(\"help: {}\", sugg.msg)\n                 } else {\n                     format!(\"help: {} `{}`\", sugg.msg, substitution)"}, {"sha": "e873137444d25afdfcfc7a8967d94bbfbdc3796c", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=faf90351b79de04de0176b1e0de07cc5f1730eaa", "patch": "@@ -84,6 +84,7 @@ pub struct CodeSuggestion {\n     /// ```\n     pub substitution_parts: Vec<Substitution>,\n     pub msg: String,\n+    pub show_code_when_inline: bool,\n }\n \n #[derive(Clone, Debug, PartialEq, RustcEncodable, RustcDecodable)]"}, {"sha": "b3291e9e0b59534f6d9a15da3c174b566736747c", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=faf90351b79de04de0176b1e0de07cc5f1730eaa", "patch": "@@ -2807,9 +2807,9 @@ impl<'a> Parser<'a> {\n                         let cur_pos = cm.lookup_char_pos(self.span.lo);\n                         let op_pos = cm.lookup_char_pos(cur_op_span.hi);\n                         if cur_pos.line != op_pos.line {\n-                            err.span_suggestion(cur_op_span,\n-                                                \"did you mean to end the statement here instead?\",\n-                                                \";\".to_string());\n+                            err.span_suggestion_short(cur_op_span,\n+                                                      \"did you mean to use `;` here?\",\n+                                                      \";\".to_string());\n                         }\n                         return Err(err);\n                     }"}, {"sha": "fd39a27a9f7fbea60c38de8c8b64d03bba9735cc", "filename": "src/test/ui/issue-22644.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Ftest%2Fui%2Fissue-22644.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Ftest%2Fui%2Fissue-22644.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-22644.stderr?ref=faf90351b79de04de0176b1e0de07cc5f1730eaa", "patch": "@@ -100,5 +100,5 @@ error: expected type, found `4`\n   --> $DIR/issue-22644.rs:38:28\n    |\n 38 |     println!(\"{}\", a: &mut 4);\n-   |                            ^\n+   |                            ^ expecting a type here because of type ascription\n "}, {"sha": "550048c7b88f1a32028573f7ac556b41547b91fc", "filename": "src/test/ui/suggestions/type-ascription-instead-of-statement-end.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-statement-end.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/faf90351b79de04de0176b1e0de07cc5f1730eaa/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-statement-end.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-statement-end.stderr?ref=faf90351b79de04de0176b1e0de07cc5f1730eaa", "patch": "@@ -2,7 +2,7 @@ error: expected type, found `0`\n   --> $DIR/type-ascription-instead-of-statement-end.rs:15:5\n    |\n 14 |     println!(\"test\"):\n-   |                     - help: did you mean to end the statement here instead? `;`\n+   |                     - help: did you mean to use `;` here?\n 15 |     0;\n    |     ^ expecting a type here because of type ascription\n "}]}