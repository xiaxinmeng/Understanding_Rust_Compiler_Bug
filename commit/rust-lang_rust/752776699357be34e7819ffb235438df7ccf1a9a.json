{"sha": "752776699357be34e7819ffb235438df7ccf1a9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1Mjc3NjY5OTM1N2JlMzRlNzgxOWZmYjIzNTQzOGRmN2NjZjFhOWE=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-10T18:39:27Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-15T18:33:52Z"}, "message": "Move `delay_span_bug` into `emit_error` for if/loop", "tree": {"sha": "6769a2c4a524ea0417f7c126e54a7e333fe37a02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6769a2c4a524ea0417f7c126e54a7e333fe37a02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/752776699357be34e7819ffb235438df7ccf1a9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/752776699357be34e7819ffb235438df7ccf1a9a", "html_url": "https://github.com/rust-lang/rust/commit/752776699357be34e7819ffb235438df7ccf1a9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/752776699357be34e7819ffb235438df7ccf1a9a/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d4e2042f9dae20266292c45b2789962873b1d01", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d4e2042f9dae20266292c45b2789962873b1d01", "html_url": "https://github.com/rust-lang/rust/commit/6d4e2042f9dae20266292c45b2789962873b1d01"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "80f2925193a8140a87785e1b8b0a273d6b0ab347", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/752776699357be34e7819ffb235438df7ccf1a9a/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/752776699357be34e7819ffb235438df7ccf1a9a/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=752776699357be34e7819ffb235438df7ccf1a9a", "patch": "@@ -138,7 +138,15 @@ impl NonConstOp for HeapAllocation {\n \n #[derive(Debug)]\n pub struct IfOrMatch;\n-impl NonConstOp for IfOrMatch {}\n+impl NonConstOp for IfOrMatch {\n+    fn emit_error(&self, item: &Item<'_, '_>, span: Span) {\n+        // This should be caught by the HIR const-checker.\n+        item.tcx.sess.delay_span_bug(\n+            span,\n+            \"complex control flow is forbidden in a const context\",\n+        );\n+    }\n+}\n \n #[derive(Debug)]\n pub struct LiveDrop;\n@@ -154,7 +162,15 @@ impl NonConstOp for LiveDrop {\n \n #[derive(Debug)]\n pub struct Loop;\n-impl NonConstOp for Loop {}\n+impl NonConstOp for Loop {\n+    fn emit_error(&self, item: &Item<'_, '_>, span: Span) {\n+        // This should be caught by the HIR const-checker.\n+        item.tcx.sess.delay_span_bug(\n+            span,\n+            \"complex control flow is forbidden in a const context\",\n+        );\n+    }\n+}\n \n #[derive(Debug)]\n pub struct MutBorrow(pub BorrowKind);"}, {"sha": "52481a89e2f1d70c42bfc2166df627309cc45573", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/752776699357be34e7819ffb235438df7ccf1a9a/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/752776699357be34e7819ffb235438df7ccf1a9a/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=752776699357be34e7819ffb235438df7ccf1a9a", "patch": "@@ -245,16 +245,10 @@ impl Validator<'a, 'mir, 'tcx> {\n \n         check_short_circuiting_in_const_local(self.item);\n \n-        // FIXME: give a span for the loop\n         if body.is_cfg_cyclic() {\n-            // FIXME: make this the `emit_error` impl of `ops::Loop` once the const\n-            // checker is no longer run in compatability mode.\n-            if !self.tcx.sess.opts.debugging_opts.unleash_the_miri_inside_of_you {\n-                self.tcx.sess.delay_span_bug(\n-                    self.span,\n-                    \"complex control flow is forbidden in a const context\",\n-                );\n-            }\n+            // We can't provide a good span for the error here, but this should be caught by the\n+            // HIR const-checker anyways.\n+            self.check_op_spanned(ops::Loop, body.span);\n         }\n \n         self.visit_body(body);\n@@ -565,14 +559,7 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n                 self.super_statement(statement, location);\n             }\n             StatementKind::FakeRead(FakeReadCause::ForMatchedPlace, _) => {\n-                // FIXME: make this the `emit_error` impl of `ops::IfOrMatch` once the const\n-                // checker is no longer run in compatability mode.\n-                if !self.tcx.sess.opts.debugging_opts.unleash_the_miri_inside_of_you {\n-                    self.tcx.sess.delay_span_bug(\n-                        self.span,\n-                        \"complex control flow is forbidden in a const context\",\n-                    );\n-                }\n+                self.check_op(ops::IfOrMatch);\n             }\n             // FIXME(eddyb) should these really do nothing?\n             StatementKind::FakeRead(..) |"}]}