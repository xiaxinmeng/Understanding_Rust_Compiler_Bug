{"sha": "f81a11b7b87cea6fcf7a4d85bdeedfd1725a47f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MWExMWI3Yjg3Y2VhNmZjZjdhNGQ4NWJkZWVkZmQxNzI1YTQ3Zjg=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2016-01-22T22:10:59Z"}, "committer": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2016-01-22T22:10:59Z"}, "message": "Document that BTreeMap iteration is in order\n\nAlso change the examples to make this more obvious. Fixes #31129.", "tree": {"sha": "bf7a57d9a62a5ac01d98b114e71ba4b4c1445110", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf7a57d9a62a5ac01d98b114e71ba4b4c1445110"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f81a11b7b87cea6fcf7a4d85bdeedfd1725a47f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f81a11b7b87cea6fcf7a4d85bdeedfd1725a47f8", "html_url": "https://github.com/rust-lang/rust/commit/f81a11b7b87cea6fcf7a4d85bdeedfd1725a47f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f81a11b7b87cea6fcf7a4d85bdeedfd1725a47f8/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f36038490559a98efcba3521564663b15785d9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f36038490559a98efcba3521564663b15785d9c", "html_url": "https://github.com/rust-lang/rust/commit/8f36038490559a98efcba3521564663b15785d9c"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "0ced4e1952aa51b4daa97a9bf2c3868e6b356beb", "filename": "src/libcollections/btree/map.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f81a11b7b87cea6fcf7a4d85bdeedfd1725a47f8/src%2Flibcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f81a11b7b87cea6fcf7a4d85bdeedfd1725a47f8/src%2Flibcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fmap.rs?ref=f81a11b7b87cea6fcf7a4d85bdeedfd1725a47f8", "patch": "@@ -1194,17 +1194,17 @@ unsafe fn unwrap_unchecked<T>(val: Option<T>) -> T {\n }\n \n impl<K, V> BTreeMap<K, V> {\n-    /// Gets an iterator over the entries of the map.\n+    /// Gets an iterator over the entries of the map, sorted by key.\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// use std::collections::BTreeMap;\n     ///\n     /// let mut map = BTreeMap::new();\n-    /// map.insert(1, \"a\");\n-    /// map.insert(2, \"b\");\n     /// map.insert(3, \"c\");\n+    /// map.insert(2, \"b\");\n+    /// map.insert(1, \"a\");\n     ///\n     /// for (key, value) in map.iter() {\n     ///     println!(\"{}: {}\", key, value);\n@@ -1224,7 +1224,7 @@ impl<K, V> BTreeMap<K, V> {\n         }\n     }\n \n-    /// Gets a mutable iterator over the entries of the map.\n+    /// Gets a mutable iterator over the entries of the map, sorted by key.\n     ///\n     /// # Examples\n     ///\n@@ -1257,16 +1257,16 @@ impl<K, V> BTreeMap<K, V> {\n         }\n     }\n \n-    /// Gets an iterator over the keys of the map.\n+    /// Gets an iterator over the keys of the map, in sorted order.\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// use std::collections::BTreeMap;\n     ///\n     /// let mut a = BTreeMap::new();\n-    /// a.insert(1, \"a\");\n     /// a.insert(2, \"b\");\n+    /// a.insert(1, \"a\");\n     ///\n     /// let keys: Vec<_> = a.keys().cloned().collect();\n     /// assert_eq!(keys, [1, 2]);\n@@ -1276,19 +1276,19 @@ impl<K, V> BTreeMap<K, V> {\n         Keys { inner: self.iter() }\n     }\n \n-    /// Gets an iterator over the values of the map.\n+    /// Gets an iterator over the values of the map, in order by key.\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// use std::collections::BTreeMap;\n     ///\n     /// let mut a = BTreeMap::new();\n-    /// a.insert(1, \"a\");\n-    /// a.insert(2, \"b\");\n+    /// a.insert(1, \"hello\");\n+    /// a.insert(2, \"goodbye\");\n     ///\n     /// let values: Vec<&str> = a.values().cloned().collect();\n-    /// assert_eq!(values, [\"a\", \"b\"]);\n+    /// assert_eq!(values, [\"hello\", \"goodbye\"]);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn values<'a>(&'a self) -> Values<'a, K, V> {"}]}