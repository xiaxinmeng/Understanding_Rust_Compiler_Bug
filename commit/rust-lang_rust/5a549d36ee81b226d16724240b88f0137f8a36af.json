{"sha": "5a549d36ee81b226d16724240b88f0137f8a36af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNTQ5ZDM2ZWU4MWIyMjZkMTY3MjQyNDBiODhmMDEzN2Y4YTM2YWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-19T08:10:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-19T08:10:15Z"}, "message": "Auto merge of #79068 - DevJPM:ci-llvm-9-fix, r=pietroalbini\n\nRemove Hacks and Fixmes from PR CI's LLVM-9 Container\n\nNow with LLVM 9 being the minimum supported version (thanks to #78848 ), we can\nfinally remove the hacks in the dockerfile.\n\nThis wasn't in the main PR bumping the version as I didn't quite\nunderstand what's going on and needed here.\n\nRelevant issues and PRs:\n\n- Issue #69823\n- PR #70989\n\nI hope I actually adressed things correctly here?", "tree": {"sha": "c26b71f198bd0c6bd1117af11f527d9a1ab84b43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c26b71f198bd0c6bd1117af11f527d9a1ab84b43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a549d36ee81b226d16724240b88f0137f8a36af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a549d36ee81b226d16724240b88f0137f8a36af", "html_url": "https://github.com/rust-lang/rust/commit/5a549d36ee81b226d16724240b88f0137f8a36af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a549d36ee81b226d16724240b88f0137f8a36af/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf469eb6c20ccea05400a1942c70343f36705e1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf469eb6c20ccea05400a1942c70343f36705e1c", "html_url": "https://github.com/rust-lang/rust/commit/bf469eb6c20ccea05400a1942c70343f36705e1c"}, {"sha": "b8f682b5e24625eedaa3874061c77bae131a27ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8f682b5e24625eedaa3874061c77bae131a27ae", "html_url": "https://github.com/rust-lang/rust/commit/b8f682b5e24625eedaa3874061c77bae131a27ae"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "38eac6588b02c3ad9404ac274eca961321102f38", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-llvm-9/Dockerfile", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5a549d36ee81b226d16724240b88f0137f8a36af/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-9%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/5a549d36ee81b226d16724240b88f0137f8a36af/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-9%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-9%2FDockerfile?ref=5a549d36ee81b226d16724240b88f0137f8a36af", "patch": "@@ -2,7 +2,7 @@ FROM ubuntu:18.04\n \n RUN apt-get update && apt-get install -y --no-install-recommends \\\n   g++ \\\n-  g++-arm-linux-gnueabi \\\n+  gcc-multilib \\\n   make \\\n   ninja-build \\\n   file \\\n@@ -39,22 +39,13 @@ ENV SCRIPT python2.7 ../x.py --stage 2 test --exclude src/tools/tidy && \\\n            # the PR is approved and tested for merging.\n            # It will also detect tests lacking `// EMIT_MIR_FOR_EACH_BIT_WIDTH`,\n            # despite having different output on 32-bit vs 64-bit targets.\n-           #\n-           # HACK(eddyb) `armv5te` is used (not `i686`) to support older LLVM than LLVM 9:\n-           # https://github.com/rust-lang/compiler-builtins/pull/311#issuecomment-612270089.\n-           # This also requires `--pass=build` because we can't execute the tests\n-           # on the `x86_64` host when they're built as `armv5te` binaries.\n-           # (we're only interested in the MIR output, so this doesn't matter)\n-           python2.7 ../x.py --stage 2 test src/test/mir-opt --pass=build \\\n-                             --host='' --target=armv5te-unknown-linux-gnueabi && \\\n+           python2.7 ../x.py --stage 2 test src/test/mir-opt \\\n+                             --host='' --target=i686-unknown-linux-gnu && \\\n            # Run the UI test suite again, but in `--pass=check` mode\n            #\n            # This is intended to make sure that both `--pass=check` continues to\n            # work.\n            #\n-           # FIXME: We ideally want to test this in 32-bit mode, but currently\n-           # (due to the LLVM problems mentioned above) that isn't readily\n-           # possible.\n-           python2.7 ../x.py --stage 2 test src/test/ui --pass=check && \\\n+           python2.7 ../x.py --stage 2 test src/test/ui --pass=check --target=i686-unknown-linux-gnu && \\\n            # Run tidy at the very end, after all the other tests.\n            python2.7 ../x.py --stage 2 test src/tools/tidy"}]}