{"sha": "305f5263f933d5d730f2bba5f0d43d9f9006361d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwNWY1MjYzZjkzM2Q1ZDczMGYyYmJhNWYwZDQzZDlmOTAwNjM2MWQ=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-21T16:04:21Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-21T16:04:21Z"}, "message": "Make rustc errors colorful.\n\nRustbuild passes --message-format=json to Cargo to learn about the\ndependencies for a given build, which then makes Cargo steal the\nstderr/stdout for the compiler process, leading to non colorful output.\nTo avoid this, detection of stderr being a tty is added to rustbuild,\nand an environment variable is used to communicate with the rustc shim.", "tree": {"sha": "beea797018c2ba780061aecd66bef316e734239d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/beea797018c2ba780061aecd66bef316e734239d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/305f5263f933d5d730f2bba5f0d43d9f9006361d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/305f5263f933d5d730f2bba5f0d43d9f9006361d", "html_url": "https://github.com/rust-lang/rust/commit/305f5263f933d5d730f2bba5f0d43d9f9006361d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/305f5263f933d5d730f2bba5f0d43d9f9006361d/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "445077963c55297ef1e196a3525723090fe80b22", "url": "https://api.github.com/repos/rust-lang/rust/commits/445077963c55297ef1e196a3525723090fe80b22", "html_url": "https://github.com/rust-lang/rust/commit/445077963c55297ef1e196a3525723090fe80b22"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "8c6eaee24f2943ea76c3cf86e41bb8cb3dd65fec", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/305f5263f933d5d730f2bba5f0d43d9f9006361d/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/305f5263f933d5d730f2bba5f0d43d9f9006361d/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=305f5263f933d5d730f2bba5f0d43d9f9006361d", "patch": "@@ -236,6 +236,15 @@ fn main() {\n         }\n     }\n \n+    let color = match env::var(\"RUSTC_COLOR\") {\n+        Ok(s) => usize::from_str(&s).expect(\"RUSTC_COLOR should be an integer\"),\n+        Err(_) => 0,\n+    };\n+\n+    if color != 0 {\n+        cmd.arg(\"--color=always\");\n+    }\n+\n     if verbose > 1 {\n         writeln!(&mut io::stderr(), \"rustc command: {:?}\", cmd).unwrap();\n     }"}, {"sha": "f92a199fa3fea08b459f5739c80229eeeafa08ba", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/305f5263f933d5d730f2bba5f0d43d9f9006361d/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/305f5263f933d5d730f2bba5f0d43d9f9006361d/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=305f5263f933d5d730f2bba5f0d43d9f9006361d", "patch": "@@ -477,11 +477,43 @@ pub fn tool(build: &Build, stage: u32, target: &str, tool: &str) {\n     build.run(&mut cargo);\n }\n \n+\n+// Avoiding a dependency on winapi to keep compile times down\n+#[cfg(unix)]\n+fn stderr_isatty() -> bool {\n+    use libc;\n+    unsafe { libc::isatty(libc::STDERR_FILENO) != 0 }\n+}\n+#[cfg(windows)]\n+fn stderr_isatty() -> bool {\n+    type DWORD = u32;\n+    type BOOL = i32;\n+    type HANDLE = *mut u8;\n+    const STD_ERROR_HANDLE: DWORD = -12i32 as DWORD;\n+    extern \"system\" {\n+        fn GetStdHandle(which: DWORD) -> HANDLE;\n+        fn GetConsoleMode(hConsoleHandle: HANDLE, lpMode: *mut DWORD) -> BOOL;\n+    }\n+    unsafe {\n+        let handle = GetStdHandle(STD_ERROR_HANDLE);\n+        let mut out = 0;\n+        GetConsoleMode(handle, &mut out) != 0\n+    }\n+}\n+\n fn run_cargo(build: &Build, cargo: &mut Command, stamp: &Path) {\n     // Instruct Cargo to give us json messages on stdout, critically leaving\n     // stderr as piped so we can get those pretty colors.\n     cargo.arg(\"--message-format\").arg(\"json\")\n          .stdout(Stdio::piped());\n+\n+    if stderr_isatty() {\n+        // since we pass message-format=json to cargo, we need to tell the rustc\n+        // wrapper to give us colored output if necessary. This is because we\n+        // only want Cargo's JSON output, not rustcs.\n+        cargo.env(\"RUSTC_COLOR\", \"1\");\n+    }\n+\n     build.verbose(&format!(\"running: {:?}\", cargo));\n     let mut child = match cargo.spawn() {\n         Ok(child) => child,"}]}