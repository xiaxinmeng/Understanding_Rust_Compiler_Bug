{"sha": "c63a204e239f8360cfe8e35946e43a87a1c77577", "node_id": "C_kwDOAAsO6NoAKGM2M2EyMDRlMjM5ZjgzNjBjZmU4ZTM1OTQ2ZTQzYTg3YTFjNzc1Nzc", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2023-02-19T03:55:11Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2023-05-05T23:11:08Z"}, "message": "Don't discard preferred alignment in scalar pair.", "tree": {"sha": "0a228c79287d5e83af2fa03f6e248d804620fbf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a228c79287d5e83af2fa03f6e248d804620fbf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c63a204e239f8360cfe8e35946e43a87a1c77577", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c63a204e239f8360cfe8e35946e43a87a1c77577", "html_url": "https://github.com/rust-lang/rust/commit/c63a204e239f8360cfe8e35946e43a87a1c77577", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c63a204e239f8360cfe8e35946e43a87a1c77577/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b1e535f36ac4c47dc91d0e3394dca72fb86db0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b1e535f36ac4c47dc91d0e3394dca72fb86db0c", "html_url": "https://github.com/rust-lang/rust/commit/3b1e535f36ac4c47dc91d0e3394dca72fb86db0c"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "6d96b3db93c181d87dc2cd7249b787d526a9a16f", "filename": "compiler/rustc_abi/src/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c63a204e239f8360cfe8e35946e43a87a1c77577/compiler%2Frustc_abi%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c63a204e239f8360cfe8e35946e43a87a1c77577/compiler%2Frustc_abi%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_abi%2Fsrc%2Flib.rs?ref=c63a204e239f8360cfe8e35946e43a87a1c77577", "patch": "@@ -1,11 +1,11 @@\n #![cfg_attr(feature = \"nightly\", feature(step_trait, rustc_attrs, min_specialization))]\n \n+use std::fmt;\n #[cfg(feature = \"nightly\")]\n use std::iter::Step;\n use std::num::{NonZeroUsize, ParseIntError};\n use std::ops::{Add, AddAssign, Mul, RangeInclusive, Sub};\n use std::str::FromStr;\n-use std::{cmp, fmt};\n \n use bitflags::bitflags;\n use rustc_data_structures::intern::Interned;\n@@ -1277,9 +1277,7 @@ impl Abi {\n     pub fn inherent_align<C: HasDataLayout>(&self, cx: &C) -> Option<AbiAndPrefAlign> {\n         Some(match *self {\n             Abi::Scalar(s) => s.align(cx),\n-            Abi::ScalarPair(s1, s2) => {\n-                AbiAndPrefAlign::new(cmp::max(s1.align(cx).abi, s2.align(cx).abi))\n-            }\n+            Abi::ScalarPair(s1, s2) => s1.align(cx).max(s2.align(cx)),\n             Abi::Vector { element, count } => {\n                 cx.data_layout().vector_align(element.size(cx) * count)\n             }"}]}