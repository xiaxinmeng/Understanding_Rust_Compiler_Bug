{"sha": "7f5338a1223555e59b7fa096087f0af9455a1af4", "node_id": "C_kwDOAAsO6NoAKDdmNTMzOGExMjIzNTU1ZTU5YjdmYTA5NjA4N2YwYWY5NDU1YTFhZjQ", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-13T23:13:50Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-03-03T17:47:48Z"}, "message": "fix an alloc test", "tree": {"sha": "25064f6d3279a107e58704128a640780dfe89d99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25064f6d3279a107e58704128a640780dfe89d99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f5338a1223555e59b7fa096087f0af9455a1af4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f5338a1223555e59b7fa096087f0af9455a1af4", "html_url": "https://github.com/rust-lang/rust/commit/7f5338a1223555e59b7fa096087f0af9455a1af4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f5338a1223555e59b7fa096087f0af9455a1af4/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "214e65c2eb788b50d827d64e7bee4c915ce4ddd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/214e65c2eb788b50d827d64e7bee4c915ce4ddd2", "html_url": "https://github.com/rust-lang/rust/commit/214e65c2eb788b50d827d64e7bee4c915ce4ddd2"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "b1d3a9fa8ac9035239a7aae6cb5d3a530d3e6cf3", "filename": "library/alloc/src/tests.rs", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7f5338a1223555e59b7fa096087f0af9455a1af4/library%2Falloc%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f5338a1223555e59b7fa096087f0af9455a1af4/library%2Falloc%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Ftests.rs?ref=7f5338a1223555e59b7fa096087f0af9455a1af4", "patch": "@@ -4,7 +4,6 @@ use core::any::Any;\n use core::clone::Clone;\n use core::convert::TryInto;\n use core::ops::Deref;\n-use core::result::Result::{Err, Ok};\n \n use std::boxed::Box;\n \n@@ -15,32 +14,25 @@ fn test_owned_clone() {\n     assert!(a == b);\n }\n \n-#[derive(PartialEq, Eq)]\n+#[derive(Debug, PartialEq, Eq)]\n struct Test;\n \n #[test]\n fn any_move() {\n     let a = Box::new(8) as Box<dyn Any>;\n     let b = Box::new(Test) as Box<dyn Any>;\n \n-    match a.downcast::<i32>() {\n-        Ok(a) => {\n-            assert!(a == Box::new(8));\n-        }\n-        Err(..) => panic!(),\n-    }\n-    match b.downcast::<Test>() {\n-        Ok(a) => {\n-            assert!(a == Box::new(Test));\n-        }\n-        Err(..) => panic!(),\n-    }\n+    let a: Box<i32> = a.downcast::<i32>().unwrap();\n+    assert_eq!(*a, 8);\n+\n+    let b: Box<Test> = b.downcast::<Test>().unwrap();\n+    assert_eq!(*b, Test);\n \n     let a = Box::new(8) as Box<dyn Any>;\n     let b = Box::new(Test) as Box<dyn Any>;\n \n-    assert!(a.downcast::<Box<Test>>().is_err());\n-    assert!(b.downcast::<Box<i32>>().is_err());\n+    assert!(a.downcast::<Box<i32>>().is_err());\n+    assert!(b.downcast::<Box<Test>>().is_err());\n }\n \n #[test]"}]}