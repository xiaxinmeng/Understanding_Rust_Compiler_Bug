{"sha": "2e7afd73676f95ad3b944788c4798ad538a5edd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlN2FmZDczNjc2Zjk1YWQzYjk0NDc4OGM0Nzk4YWQ1MzhhNWVkZDI=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-19T10:30:34Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-21T23:01:01Z"}, "message": "Improve diagnostics", "tree": {"sha": "7beabb50710220dc687a135721cae44241cf980b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7beabb50710220dc687a135721cae44241cf980b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e7afd73676f95ad3b944788c4798ad538a5edd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7afd73676f95ad3b944788c4798ad538a5edd2", "html_url": "https://github.com/rust-lang/rust/commit/2e7afd73676f95ad3b944788c4798ad538a5edd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e7afd73676f95ad3b944788c4798ad538a5edd2/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f30eef2eee5d57bc9759766ec7f62d931f8993b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f30eef2eee5d57bc9759766ec7f62d931f8993b", "html_url": "https://github.com/rust-lang/rust/commit/7f30eef2eee5d57bc9759766ec7f62d931f8993b"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "6c22fe4c8bcf8be01b1ed77f27231805ae5d7374", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2e7afd73676f95ad3b944788c4798ad538a5edd2/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e7afd73676f95ad3b944788c4798ad538a5edd2/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=2e7afd73676f95ad3b944788c4798ad538a5edd2", "patch": "@@ -272,11 +272,9 @@ fn expand_mac_invoc<T: MacroGenerable>(mac: ast::Mac, span: Span, fld: &mut Macr\n                 let parsed = match opt_parsed {\n                     Some(e) => e,\n                     None => {\n-                        fld.cx.span_err(\n-                            pth.span,\n-                            &format!(\"non-expression macro in expression position: {}\",\n-                                    extname\n-                                    ));\n+                        let msg = format!(\"non-{kind} macro in {kind} position: {name}\",\n+                                          name = extname, kind = T::kind_name());\n+                        fld.cx.span_err(pth.span, &msg);\n                         return None;\n                     }\n                 };"}]}