{"sha": "d08ae7e82f9eb4abb92f1274ea361acb21fd7b87", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwOGFlN2U4MmY5ZWI0YWJiOTJmMTI3NGVhMzYxYWNiMjFmZDdiODc=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-08T22:58:53Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-08T22:58:53Z"}, "message": "vscode: minor names and message contents changes", "tree": {"sha": "a9c3f631550210abf94d697670da10b6139a736e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9c3f631550210abf94d697670da10b6139a736e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d08ae7e82f9eb4abb92f1274ea361acb21fd7b87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d08ae7e82f9eb4abb92f1274ea361acb21fd7b87", "html_url": "https://github.com/rust-lang/rust/commit/d08ae7e82f9eb4abb92f1274ea361acb21fd7b87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d08ae7e82f9eb4abb92f1274ea361acb21fd7b87/comments", "author": null, "committer": null, "parents": [{"sha": "fd6a98ef6e8cb3ee4d578bf90ad327df548dd1c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd6a98ef6e8cb3ee4d578bf90ad327df548dd1c5", "html_url": "https://github.com/rust-lang/rust/commit/fd6a98ef6e8cb3ee4d578bf90ad327df548dd1c5"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "70042a479e9ae921523125de7042864924232ee8", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d08ae7e82f9eb4abb92f1274ea361acb21fd7b87/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/d08ae7e82f9eb4abb92f1274ea361acb21fd7b87/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=d08ae7e82f9eb4abb92f1274ea361acb21fd7b87", "patch": "@@ -31,7 +31,10 @@ export class Ctx {\n         this.client = null;\n         const client = await createClient(this.config);\n         if (!client) {\n-            throw new Error(\"Rust Analyzer Language Server is not available\");\n+            throw new Error(\n+                \"Rust Analyzer Language Server is not available. \" +\n+                \"Please, ensure its [proper installation](https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/user#vs-code).\"\n+            );\n         }\n \n         this.pushCleanup(client.start());"}, {"sha": "d09fc63a7d6ba427de93ca000e8714889dc44bea", "filename": "editors/code/src/installation/language_server.ts", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d08ae7e82f9eb4abb92f1274ea361acb21fd7b87/editors%2Fcode%2Fsrc%2Finstallation%2Flanguage_server.ts", "raw_url": "https://github.com/rust-lang/rust/raw/d08ae7e82f9eb4abb92f1274ea361acb21fd7b87/editors%2Fcode%2Fsrc%2Finstallation%2Flanguage_server.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Flanguage_server.ts?ref=d08ae7e82f9eb4abb92f1274ea361acb21fd7b87", "patch": "@@ -72,19 +72,19 @@ export async function ensureLanguageServerBinary(\n                 return langServerSource.path;\n             }\n             vscode.window.showErrorMessage(\n-                `Unable to execute ${'`'}${langServerSource.path} --version${'`'}. ` +\n-                \"To use the bundled language server, set `rust-analyzer.raLspServerPath` \" +\n+                `Unable to run ${langServerSource.path} binary. ` +\n+                \"To use the pre-built language server, set `rust-analyzer.raLspServerPath` \" +\n                 \"value to `null` or remove it from the settings to use it by default.\"\n             );\n             return null;\n         }\n         case BinarySource.Type.GithubRelease: {\n-            const bundledBinaryPath = path.join(langServerSource.dir, langServerSource.file);\n+            const prebuiltBinaryPath = path.join(langServerSource.dir, langServerSource.file);\n \n-            if (!isBinaryAvailable(bundledBinaryPath)) {\n+            if (!isBinaryAvailable(prebuiltBinaryPath)) {\n                 const userResponse = await vscode.window.showInformationMessage(\n-                    `Language server binary for rust-analyzer was not found. ` +\n-                    `Do you want to download it now?`,\n+                    \"Language server binary for rust-analyzer was not found. \" +\n+                    \"Do you want to download it now?\",\n                     \"Download now\", \"Cancel\"\n                 );\n                 if (userResponse !== \"Download now\") return null;\n@@ -101,15 +101,15 @@ export async function ensureLanguageServerBinary(\n \n \n                 assert(\n-                    isBinaryAvailable(bundledBinaryPath),\n+                    isBinaryAvailable(prebuiltBinaryPath),\n                     \"Downloaded language server binary is not functional\"\n                 );\n \n                 vscode.window.showInformationMessage(\n                     \"Rust analyzer language server was successfully installed \ud83e\udd80\"\n                 );\n             }\n-            return bundledBinaryPath;\n+            return prebuiltBinaryPath;\n         }\n     }\n "}]}