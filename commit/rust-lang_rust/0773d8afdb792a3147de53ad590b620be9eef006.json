{"sha": "0773d8afdb792a3147de53ad590b620be9eef006", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NzNkOGFmZGI3OTJhMzE0N2RlNTNhZDU5MGI2MjBiZTllZWYwMDY=", "commit": {"author": {"name": "Takayuki", "email": "takoyaki0316@gmail.com", "date": "2021-05-04T17:21:26Z"}, "committer": {"name": "Takayuki", "email": "takoyaki0316@gmail.com", "date": "2021-05-04T17:21:26Z"}, "message": "move mixed_case_hex_literals to its own module", "tree": {"sha": "a96428a97d29731c40b5e5ff8553e1815326f5f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a96428a97d29731c40b5e5ff8553e1815326f5f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0773d8afdb792a3147de53ad590b620be9eef006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0773d8afdb792a3147de53ad590b620be9eef006", "html_url": "https://github.com/rust-lang/rust/commit/0773d8afdb792a3147de53ad590b620be9eef006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0773d8afdb792a3147de53ad590b620be9eef006/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f012e0e3de04ca5b8022a0b8856a12d47d746b5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f012e0e3de04ca5b8022a0b8856a12d47d746b5b", "html_url": "https://github.com/rust-lang/rust/commit/f012e0e3de04ca5b8022a0b8856a12d47d746b5b"}], "stats": {"total": 52, "additions": 31, "deletions": 21}, "files": [{"sha": "fbcbfa2556feafca455d4665ff834792262d2e7f", "filename": "clippy_lints/src/misc_early/mixed_case_hex_literals.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/0773d8afdb792a3147de53ad590b620be9eef006/clippy_lints%2Fsrc%2Fmisc_early%2Fmixed_case_hex_literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0773d8afdb792a3147de53ad590b620be9eef006/clippy_lints%2Fsrc%2Fmisc_early%2Fmixed_case_hex_literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early%2Fmixed_case_hex_literals.rs?ref=0773d8afdb792a3147de53ad590b620be9eef006", "patch": "@@ -0,0 +1,29 @@\n+use clippy_utils::diagnostics::span_lint;\n+use rustc_ast::ast::Lit;\n+use rustc_lint::EarlyContext;\n+\n+use super::MIXED_CASE_HEX_LITERALS;\n+\n+pub(super) fn check(cx: &EarlyContext<'_>, lit: &Lit, maybe_last_sep_idx: usize, lit_snip: String) {\n+    if maybe_last_sep_idx <= 2 {\n+        // It's meaningless or causes range error.\n+        return;\n+    }\n+    let mut seen = (false, false);\n+    for ch in lit_snip.as_bytes()[2..=maybe_last_sep_idx].iter() {\n+        match ch {\n+            b'a'..=b'f' => seen.0 = true,\n+            b'A'..=b'F' => seen.1 = true,\n+            _ => {},\n+        }\n+        if seen.0 && seen.1 {\n+            span_lint(\n+                cx,\n+                MIXED_CASE_HEX_LITERALS,\n+                lit.span,\n+                \"inconsistent casing in hexadecimal literal\",\n+            );\n+            break;\n+        }\n+    }\n+}"}, {"sha": "0bfa6833aacea1d9c89f06cc85866c1ae449b651", "filename": "clippy_lints/src/misc_early/mod.rs", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0773d8afdb792a3147de53ad590b620be9eef006/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0773d8afdb792a3147de53ad590b620be9eef006/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs?ref=0773d8afdb792a3147de53ad590b620be9eef006", "patch": "@@ -1,5 +1,6 @@\n mod builtin_type_shadow;\n mod double_neg;\n+mod mixed_case_hex_literals;\n mod redundant_pattern;\n mod unneeded_field_pattern;\n mod unneeded_wildcard_pattern;\n@@ -351,27 +352,7 @@ impl MiscEarlyLints {\n             }\n \n             if lit_snip.starts_with(\"0x\") {\n-                if maybe_last_sep_idx <= 2 {\n-                    // It's meaningless or causes range error.\n-                    return;\n-                }\n-                let mut seen = (false, false);\n-                for ch in lit_snip.as_bytes()[2..=maybe_last_sep_idx].iter() {\n-                    match ch {\n-                        b'a'..=b'f' => seen.0 = true,\n-                        b'A'..=b'F' => seen.1 = true,\n-                        _ => {},\n-                    }\n-                    if seen.0 && seen.1 {\n-                        span_lint(\n-                            cx,\n-                            MIXED_CASE_HEX_LITERALS,\n-                            lit.span,\n-                            \"inconsistent casing in hexadecimal literal\",\n-                        );\n-                        break;\n-                    }\n-                }\n+                mixed_case_hex_literals::check(cx, lit, maybe_last_sep_idx, lit_snip)\n             } else if lit_snip.starts_with(\"0b\") || lit_snip.starts_with(\"0o\") {\n                 /* nothing to do */\n             } else if value != 0 && lit_snip.starts_with('0') {"}]}