{"sha": "c4f2d21f1a9e41c025cc8cfca5f5f06053aba70e", "node_id": "C_kwDOAAsO6NoAKGM0ZjJkMjFmMWE5ZTQxYzAyNWNjOGNmY2E1ZjVmMDYwNTNhYmE3MGU", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-01-29T11:54:16Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-01-29T11:54:16Z"}, "message": "Mark the panic_no_unwind lang item as nounwind", "tree": {"sha": "e9fc93c8f93439b2ed73c99be0080738ca4cfd0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9fc93c8f93439b2ed73c99be0080738ca4cfd0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4f2d21f1a9e41c025cc8cfca5f5f06053aba70e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4f2d21f1a9e41c025cc8cfca5f5f06053aba70e", "html_url": "https://github.com/rust-lang/rust/commit/c4f2d21f1a9e41c025cc8cfca5f5f06053aba70e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4f2d21f1a9e41c025cc8cfca5f5f06053aba70e/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24ae9960c5116a6d1e827c58327e6d231e4fe174", "url": "https://api.github.com/repos/rust-lang/rust/commits/24ae9960c5116a6d1e827c58327e6d231e4fe174", "html_url": "https://github.com/rust-lang/rust/commit/24ae9960c5116a6d1e827c58327e6d231e4fe174"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "7c8a47d5d65244fc13d53fe80382bce6b8c45b5e", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c4f2d21f1a9e41c025cc8cfca5f5f06053aba70e/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4f2d21f1a9e41c025cc8cfca5f5f06053aba70e/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=c4f2d21f1a9e41c025cc8cfca5f5f06053aba70e", "patch": "@@ -2778,6 +2778,13 @@ fn codegen_fn_attrs(tcx: TyCtxt<'_>, id: DefId) -> CodegenFnAttrs {\n         }\n     }\n \n+    // The panic_no_unwind function called by TerminatorKind::Abort will never\n+    // unwind. If the panic handler that it invokes unwind then it will simply\n+    // call the panic handler again.\n+    if Some(id) == tcx.lang_items().panic_no_unwind() {\n+        codegen_fn_attrs.flags |= CodegenFnAttrFlags::NEVER_UNWIND;\n+    }\n+\n     let supported_target_features = tcx.supported_target_features(LOCAL_CRATE);\n \n     let mut inline_span = None;"}]}