{"sha": "90b8a31b83b1aafc3fb555ba4307527f9258f46d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYjhhMzFiODNiMWFhZmMzZmI1NTViYTQzMDc1MjdmOTI1OGY0NmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-17T10:15:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-17T10:15:07Z"}, "message": "Merge pull request #2813 from jyn514/arg_attributes\n\nAllow attributes before function arguments", "tree": {"sha": "b4f5acac622f1514b83dc4dc11321a0ca484308d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4f5acac622f1514b83dc4dc11321a0ca484308d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90b8a31b83b1aafc3fb555ba4307527f9258f46d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeIYkrCRBK7hj4Ov3rIwAAdHIIALI4+Ci/z/MxN1o43bKdCdxK\nOBrbZWT2L5boLaNV4mfJMCGt2waTACildkcKI4K4A3iZk9Sw+fvOEocMm6FifFos\nKYZ+CtRHdBOgyKq08jrsrJuSsOZ6+LiOfDytfc6tYpjtt/o1Md61REHpkuzaaLR0\nYEz+teOz4NkEwQZVH4skNtMgWdtZV7jQ0cJAdhLnpjk90xXolkU/icTcfrCOCtta\ntpAC2iHoS3tRT8rE7JorFO3t8Utr/f9HeKJDoMyPLodb6yGBPYFEGLcolYUoCpA6\nfWJxwyUSTN2hKuPVgaCQ/D0TF+gMN7SpVOKwkYlBTgMLsMzDRO5Yx8WMRm2f+ck=\n=Nk8N\n-----END PGP SIGNATURE-----\n", "payload": "tree b4f5acac622f1514b83dc4dc11321a0ca484308d\nparent ea2b27d8b978fbe2307991ff28d6030eabf5b82c\nparent f077d5c303ecc4f38471b37be985bb0c5ab2f68c\nauthor Aleksey Kladov <aleksey.kladov@gmail.com> 1579256107 +0100\ncommitter GitHub <noreply@github.com> 1579256107 +0100\n\nMerge pull request #2813 from jyn514/arg_attributes\n\nAllow attributes before function arguments"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90b8a31b83b1aafc3fb555ba4307527f9258f46d", "html_url": "https://github.com/rust-lang/rust/commit/90b8a31b83b1aafc3fb555ba4307527f9258f46d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90b8a31b83b1aafc3fb555ba4307527f9258f46d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea2b27d8b978fbe2307991ff28d6030eabf5b82c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea2b27d8b978fbe2307991ff28d6030eabf5b82c", "html_url": "https://github.com/rust-lang/rust/commit/ea2b27d8b978fbe2307991ff28d6030eabf5b82c"}, {"sha": "f077d5c303ecc4f38471b37be985bb0c5ab2f68c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f077d5c303ecc4f38471b37be985bb0c5ab2f68c", "html_url": "https://github.com/rust-lang/rust/commit/f077d5c303ecc4f38471b37be985bb0c5ab2f68c"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "a31a7a08d88760b90ad3522a6c125d90dd19dddc", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/90b8a31b83b1aafc3fb555ba4307527f9258f46d/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90b8a31b83b1aafc3fb555ba4307527f9258f46d/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=90b8a31b83b1aafc3fb555ba4307527f9258f46d", "patch": "@@ -540,6 +540,11 @@ fn arg_list(p: &mut Parser) {\n     let m = p.start();\n     p.bump(T!['(']);\n     while !p.at(T![')']) && !p.at(EOF) {\n+        // test arg_with_attr\n+        // fn main() {\n+        //     foo(#[attr] 92)\n+        // }\n+        attributes::outer_attributes(p);\n         if !p.at_ts(EXPR_FIRST) {\n             p.error(\"expected expression\");\n             break;"}, {"sha": "5daf1d7b0be91c9fb39fe7a51850e8af914cba55", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0152_arg_with_attr.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/90b8a31b83b1aafc3fb555ba4307527f9258f46d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90b8a31b83b1aafc3fb555ba4307527f9258f46d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.rs?ref=90b8a31b83b1aafc3fb555ba4307527f9258f46d", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    foo(#[attr] 92)\n+}"}, {"sha": "6b80ca8d084d719b53453f2d6a963c839d67ffe1", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0152_arg_with_attr.txt", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/90b8a31b83b1aafc3fb555ba4307527f9258f46d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/90b8a31b83b1aafc3fb555ba4307527f9258f46d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.txt?ref=90b8a31b83b1aafc3fb555ba4307527f9258f46d", "patch": "@@ -0,0 +1,37 @@\n+SOURCE_FILE@[0; 34)\n+  FN_DEF@[0; 33)\n+    FN_KW@[0; 2) \"fn\"\n+    WHITESPACE@[2; 3) \" \"\n+    NAME@[3; 7)\n+      IDENT@[3; 7) \"main\"\n+    PARAM_LIST@[7; 9)\n+      L_PAREN@[7; 8) \"(\"\n+      R_PAREN@[8; 9) \")\"\n+    WHITESPACE@[9; 10) \" \"\n+    BLOCK_EXPR@[10; 33)\n+      BLOCK@[10; 33)\n+        L_CURLY@[10; 11) \"{\"\n+        WHITESPACE@[11; 16) \"\\n    \"\n+        CALL_EXPR@[16; 31)\n+          PATH_EXPR@[16; 19)\n+            PATH@[16; 19)\n+              PATH_SEGMENT@[16; 19)\n+                NAME_REF@[16; 19)\n+                  IDENT@[16; 19) \"foo\"\n+          ARG_LIST@[19; 31)\n+            L_PAREN@[19; 20) \"(\"\n+            ATTR@[20; 27)\n+              POUND@[20; 21) \"#\"\n+              L_BRACK@[21; 22) \"[\"\n+              PATH@[22; 26)\n+                PATH_SEGMENT@[22; 26)\n+                  NAME_REF@[22; 26)\n+                    IDENT@[22; 26) \"attr\"\n+              R_BRACK@[26; 27) \"]\"\n+            WHITESPACE@[27; 28) \" \"\n+            LITERAL@[28; 30)\n+              INT_NUMBER@[28; 30) \"92\"\n+            R_PAREN@[30; 31) \")\"\n+        WHITESPACE@[31; 32) \"\\n\"\n+        R_CURLY@[32; 33) \"}\"\n+  WHITESPACE@[33; 34) \"\\n\""}]}