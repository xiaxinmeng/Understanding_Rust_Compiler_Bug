{"sha": "18e8089303952034ccf8a9e993770022eaf6dd53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZTgwODkzMDM5NTIwMzRjY2Y4YTllOTkzNzcwMDIyZWFmNmRkNTM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-18T01:13:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-18T01:13:48Z"}, "message": "Rollup merge of #74449 - tmiasko:cmpxchg-test, r=nikomatsakis\n\nTest codegen of compare_exchange operations\n\nAdd a codegen test for compare_exchange to verify that rustc emits expected LLVM IR.", "tree": {"sha": "967c0edf527b7074a54fb048480890c05cfbb118", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/967c0edf527b7074a54fb048480890c05cfbb118"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18e8089303952034ccf8a9e993770022eaf6dd53", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfEkzNCRBK7hj4Ov3rIwAAdHIIACZ/UXC+MTq9OxNzRIujAYcr\nTiWNZsqWUneCJOWAAYfdZLf9ImbdjYt3ozCORf/bnjE9Wc48HZxPmQMelBc5lslo\n2nICiL5fl/vvCfD/KB5UbK55h2BrrEHNNuZaUnFPkJM8c/ZaoUAnhu/b2g35+EpQ\nJCfP+arzI5rj8uEjTQoBPjbrx1zR4jWi3/dK0SJAEcxUsofhhMLwSVa9pymXlEbl\nxOascjbDoGqb+EfxlkUfbKzDXDa4sqAT/dhh7bhQkMZ1WdTYiaIKYoqSUspkOgJd\n0w11v0Pn8EYgiCqcOpJ7mIwkVOLrx1kITC52SaerrNY3l4wgPYNzJeY9Fc2+t/c=\n=uw9g\n-----END PGP SIGNATURE-----\n", "payload": "tree 967c0edf527b7074a54fb048480890c05cfbb118\nparent f276dd4f284c158fff60ca6beffacdcf1eac48f7\nparent b26ecd261b827837df8bb01c8fd5bf80dced8909\nauthor Manish Goregaokar <manishsmail@gmail.com> 1595034828 -0700\ncommitter GitHub <noreply@github.com> 1595034828 -0700\n\nRollup merge of #74449 - tmiasko:cmpxchg-test, r=nikomatsakis\n\nTest codegen of compare_exchange operations\n\nAdd a codegen test for compare_exchange to verify that rustc emits expected LLVM IR.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18e8089303952034ccf8a9e993770022eaf6dd53", "html_url": "https://github.com/rust-lang/rust/commit/18e8089303952034ccf8a9e993770022eaf6dd53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18e8089303952034ccf8a9e993770022eaf6dd53/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f276dd4f284c158fff60ca6beffacdcf1eac48f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f276dd4f284c158fff60ca6beffacdcf1eac48f7", "html_url": "https://github.com/rust-lang/rust/commit/f276dd4f284c158fff60ca6beffacdcf1eac48f7"}, {"sha": "b26ecd261b827837df8bb01c8fd5bf80dced8909", "url": "https://api.github.com/repos/rust-lang/rust/commits/b26ecd261b827837df8bb01c8fd5bf80dced8909", "html_url": "https://github.com/rust-lang/rust/commit/b26ecd261b827837df8bb01c8fd5bf80dced8909"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "ff94ac8543f8b02fd8427e57e597b1b0aac02989", "filename": "src/test/codegen/atomic-operations.rs", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/18e8089303952034ccf8a9e993770022eaf6dd53/src%2Ftest%2Fcodegen%2Fatomic-operations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e8089303952034ccf8a9e993770022eaf6dd53/src%2Ftest%2Fcodegen%2Fatomic-operations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fatomic-operations.rs?ref=18e8089303952034ccf8a9e993770022eaf6dd53", "patch": "@@ -0,0 +1,60 @@\n+// Code generation of atomic operations.\n+//\n+// compile-flags: -O\n+#![crate_type = \"lib\"]\n+\n+use std::sync::atomic::{AtomicI32, Ordering::*};\n+\n+// CHECK-LABEL: @compare_exchange\n+#[no_mangle]\n+pub fn compare_exchange(a: &AtomicI32) {\n+    // CHECK: cmpxchg i32* %{{.*}}, i32 0, i32 10 monotonic monotonic\n+    let _ = a.compare_exchange(0, 10, Relaxed, Relaxed);\n+\n+    // CHECK: cmpxchg i32* %{{.*}}, i32 0, i32 20 release monotonic\n+    let _ = a.compare_exchange(0, 20, Release, Relaxed);\n+\n+    // CHECK: cmpxchg i32* %{{.*}}, i32 0, i32 30 acquire monotonic\n+    // CHECK: cmpxchg i32* %{{.*}}, i32 0, i32 31 acquire acquire\n+    let _ = a.compare_exchange(0, 30, Acquire, Relaxed);\n+    let _ = a.compare_exchange(0, 31, Acquire, Acquire);\n+\n+    // CHECK: cmpxchg i32* %{{.*}}, i32 0, i32 40 acq_rel monotonic\n+    // CHECK: cmpxchg i32* %{{.*}}, i32 0, i32 41 acq_rel acquire\n+    let _ = a.compare_exchange(0, 40, AcqRel, Relaxed);\n+    let _ = a.compare_exchange(0, 41, AcqRel, Acquire);\n+\n+    // CHECK: cmpxchg i32* %{{.*}}, i32 0, i32 50 seq_cst monotonic\n+    // CHECK: cmpxchg i32* %{{.*}}, i32 0, i32 51 seq_cst acquire\n+    // CHECK: cmpxchg i32* %{{.*}}, i32 0, i32 52 seq_cst seq_cst\n+    let _ = a.compare_exchange(0, 50, SeqCst, Relaxed);\n+    let _ = a.compare_exchange(0, 51, SeqCst, Acquire);\n+    let _ = a.compare_exchange(0, 52, SeqCst, SeqCst);\n+}\n+\n+// CHECK-LABEL: @compare_exchange_weak\n+#[no_mangle]\n+pub fn compare_exchange_weak(w: &AtomicI32) {\n+    // CHECK: cmpxchg weak i32* %{{.*}}, i32 1, i32 10 monotonic monotonic\n+    let _ = w.compare_exchange_weak(1, 10, Relaxed, Relaxed);\n+\n+    // CHECK: cmpxchg weak i32* %{{.*}}, i32 1, i32 20 release monotonic\n+    let _ = w.compare_exchange_weak(1, 20, Release, Relaxed);\n+\n+    // CHECK: cmpxchg weak i32* %{{.*}}, i32 1, i32 30 acquire monotonic\n+    // CHECK: cmpxchg weak i32* %{{.*}}, i32 1, i32 31 acquire acquire\n+    let _ = w.compare_exchange_weak(1, 30, Acquire, Relaxed);\n+    let _ = w.compare_exchange_weak(1, 31, Acquire, Acquire);\n+\n+    // CHECK: cmpxchg weak i32* %{{.*}}, i32 1, i32 40 acq_rel monotonic\n+    // CHECK: cmpxchg weak i32* %{{.*}}, i32 1, i32 41 acq_rel acquire\n+    let _ = w.compare_exchange_weak(1, 40, AcqRel, Relaxed);\n+    let _ = w.compare_exchange_weak(1, 41, AcqRel, Acquire);\n+\n+    // CHECK: cmpxchg weak i32* %{{.*}}, i32 1, i32 50 seq_cst monotonic\n+    // CHECK: cmpxchg weak i32* %{{.*}}, i32 1, i32 51 seq_cst acquire\n+    // CHECK: cmpxchg weak i32* %{{.*}}, i32 1, i32 52 seq_cst seq_cst\n+    let _ = w.compare_exchange_weak(1, 50, SeqCst, Relaxed);\n+    let _ = w.compare_exchange_weak(1, 51, SeqCst, Acquire);\n+    let _ = w.compare_exchange_weak(1, 52, SeqCst, SeqCst);\n+}"}]}