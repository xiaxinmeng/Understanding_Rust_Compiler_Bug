{"sha": "26f28ec96d776f97f7e1b4ac75f9b564d57d1a35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZjI4ZWM5NmQ3NzZmOTdmN2UxYjRhYzc1ZjliNTY0ZDU3ZDFhMzU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-12-30T01:26:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-12-30T01:26:13Z"}, "message": "Rollup merge of #38491 - GuillaumeGomez:builder_docs, r=frewsxcv\n\nBuilder docs\n\nr? @frewsxcv", "tree": {"sha": "126d705d0d5b18eb19e0119ba22fd40069d492c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/126d705d0d5b18eb19e0119ba22fd40069d492c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26f28ec96d776f97f7e1b4ac75f9b564d57d1a35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26f28ec96d776f97f7e1b4ac75f9b564d57d1a35", "html_url": "https://github.com/rust-lang/rust/commit/26f28ec96d776f97f7e1b4ac75f9b564d57d1a35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26f28ec96d776f97f7e1b4ac75f9b564d57d1a35/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2293ea5e9b4ce33568c39f32c13e1628ac5d6943", "url": "https://api.github.com/repos/rust-lang/rust/commits/2293ea5e9b4ce33568c39f32c13e1628ac5d6943", "html_url": "https://github.com/rust-lang/rust/commit/2293ea5e9b4ce33568c39f32c13e1628ac5d6943"}, {"sha": "292d36febdf2ceaa73c41e2e46b41a5719394c2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/292d36febdf2ceaa73c41e2e46b41a5719394c2f", "html_url": "https://github.com/rust-lang/rust/commit/292d36febdf2ceaa73c41e2e46b41a5719394c2f"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "81979fd41a6bf6f16ed820eb705973831b46328c", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 58, "deletions": 3, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/26f28ec96d776f97f7e1b4ac75f9b564d57d1a35/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26f28ec96d776f97f7e1b4ac75f9b564d57d1a35/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=26f28ec96d776f97f7e1b4ac75f9b564d57d1a35", "patch": "@@ -216,6 +216,20 @@ pub use self::local::{LocalKey, LocalKeyState};\n \n /// Thread configuration. Provides detailed control over the properties\n /// and behavior of new threads.\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::thread;\n+///\n+/// let builder = thread::Builder::new();\n+///\n+/// let handler = builder.spawn(|| {\n+///     // thread code\n+/// }).unwrap();\n+///\n+/// handler.join().unwrap();\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[derive(Debug)]\n pub struct Builder {\n@@ -228,6 +242,22 @@ pub struct Builder {\n impl Builder {\n     /// Generates the base configuration for spawning a thread, from which\n     /// configuration methods can be chained.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::thread;\n+    ///\n+    /// let builder = thread::Builder::new()\n+    ///                               .name(\"foo\".into())\n+    ///                               .stack_size(10);\n+    ///\n+    /// let handler = builder.spawn(|| {\n+    ///     // thread code\n+    /// }).unwrap();\n+    ///\n+    /// handler.join().unwrap();\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn new() -> Builder {\n         Builder {\n@@ -241,7 +271,7 @@ impl Builder {\n     ///\n     /// # Examples\n     ///\n-    /// ```rust\n+    /// ```\n     /// use std::thread;\n     ///\n     /// let builder = thread::Builder::new()\n@@ -260,6 +290,14 @@ impl Builder {\n     }\n \n     /// Sets the size of the stack for the new thread.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::thread;\n+    ///\n+    /// let builder = thread::Builder::new().stack_size(10);\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn stack_size(mut self, size: usize) -> Builder {\n         self.stack_size = Some(size);\n@@ -275,9 +313,26 @@ impl Builder {\n     ///\n     /// # Errors\n     ///\n-    /// Unlike the `spawn` free function, this method yields an\n-    /// `io::Result` to capture any failure to create the thread at\n+    /// Unlike the [`spawn`] free function, this method yields an\n+    /// [`io::Result`] to capture any failure to create the thread at\n     /// the OS level.\n+    ///\n+    /// [`spawn`]: ../../std/thread/fn.spawn.html\n+    /// [`io::Result`]: ../../std/io/type.Result.html\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::thread;\n+    ///\n+    /// let builder = thread::Builder::new();\n+    ///\n+    /// let handler = builder.spawn(|| {\n+    ///     // thread code\n+    /// }).unwrap();\n+    ///\n+    /// handler.join().unwrap();\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn spawn<F, T>(self, f: F) -> io::Result<JoinHandle<T>> where\n         F: FnOnce() -> T, F: Send + 'static, T: Send + 'static"}]}