{"sha": "e28bd099d68ee124280eeadefe48c1f2e0ff6c17", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyOGJkMDk5ZDY4ZWUxMjQyODBlZWFkZWZlNDhjMWYyZTBmZjZjMTc=", "commit": {"author": {"name": "Erlend Tobiassen", "email": "erlend.tobiassen@gmail.com", "date": "2019-01-25T22:56:31Z"}, "committer": {"name": "Erlend Tobiassen", "email": "erlend.tobiassen@gmail.com", "date": "2019-01-25T22:56:31Z"}, "message": "Support macro calls in type position", "tree": {"sha": "bc5e32c652d50a439fa8f2d7e8872c947f3de2f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc5e32c652d50a439fa8f2d7e8872c947f3de2f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e28bd099d68ee124280eeadefe48c1f2e0ff6c17", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJPBAABCgA5FiEEve4ZOr7ty1/KyouLtIuFNqj1hbIFAlxLlB8bHGVybGVuZC50\nb2JpYXNzZW5AZ21haWwuY29tAAoJELSLhTao9YWyT68P/0Y0rBifrhwUYSSQ586v\n+GcoMG5BMa7H6EhXTKEf8bNc/D5WAqxWVALOlwvT+uCLeojvFMS+d8Fifkw9BSuO\nwGxVYajHLnN+19DThrpPLMHm7u44jVGe+p7aOVzpJ8ILCDdRG3q14cJ5BSqL1HcY\n0AQWT/wHyvvywPSARg8lhshNQeJG8uPxZGLofnpKCjyr8HnVNOwucF4JB8vIayjf\n6HThtcichE5XzL0G9Na0Tg6MQ/UrvcD3OZBtMXHeH/POOZVXNXcvUWX4RFa4sHzU\nZRyg0Y6+38NwVJP9JZANqJSeteBE2z3xwRJJ+4dqsKpJZyXCMAEp+kYgR7000C+w\nhzSOj2FQRiskjeOvQflpMDpfEHhoG/dTXggeq70wJhVcPEcxJFGmseveQYEdj2Ww\nELxPm5AH2SwkbUyp6wpyoIgQ7/AcSpy4eq0wHuy0K1OTSCpWrMAM+babmWebVdfO\nPbYIC8pRthw7LKuL8oeZXNQ9goB1wdKEivtnnjjq3sivnm3sUrh2qQmxtbFWxx1w\n+s+LNY7mNOq8YmgI97OfXdP7jEG7aiyLfcXE6BkaqB7djjdHyxVDe/q320NyfF05\npXOKi7f8h0BMwQcMxVe7iba865e6QXKJdYz5DxJCLE/py+kN8pq3IHga/N0c60Ru\nbeBV720ZSbEyKziz4BeVIlMk\n=UZJ2\n-----END PGP SIGNATURE-----", "payload": "tree bc5e32c652d50a439fa8f2d7e8872c947f3de2f6\nparent dc5ecf446991c65359cf49d52098fcec5f1a1f68\nauthor Erlend Tobiassen <erlend.tobiassen@gmail.com> 1548456991 +0100\ncommitter Erlend Tobiassen <erlend.tobiassen@gmail.com> 1548456991 +0100\n\nSupport macro calls in type position\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e28bd099d68ee124280eeadefe48c1f2e0ff6c17", "html_url": "https://github.com/rust-lang/rust/commit/e28bd099d68ee124280eeadefe48c1f2e0ff6c17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e28bd099d68ee124280eeadefe48c1f2e0ff6c17/comments", "author": {"login": "regiontog", "id": 9137819, "node_id": "MDQ6VXNlcjkxMzc4MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/9137819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regiontog", "html_url": "https://github.com/regiontog", "followers_url": "https://api.github.com/users/regiontog/followers", "following_url": "https://api.github.com/users/regiontog/following{/other_user}", "gists_url": "https://api.github.com/users/regiontog/gists{/gist_id}", "starred_url": "https://api.github.com/users/regiontog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regiontog/subscriptions", "organizations_url": "https://api.github.com/users/regiontog/orgs", "repos_url": "https://api.github.com/users/regiontog/repos", "events_url": "https://api.github.com/users/regiontog/events{/privacy}", "received_events_url": "https://api.github.com/users/regiontog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "regiontog", "id": 9137819, "node_id": "MDQ6VXNlcjkxMzc4MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/9137819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regiontog", "html_url": "https://github.com/regiontog", "followers_url": "https://api.github.com/users/regiontog/followers", "following_url": "https://api.github.com/users/regiontog/following{/other_user}", "gists_url": "https://api.github.com/users/regiontog/gists{/gist_id}", "starred_url": "https://api.github.com/users/regiontog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regiontog/subscriptions", "organizations_url": "https://api.github.com/users/regiontog/orgs", "repos_url": "https://api.github.com/users/regiontog/repos", "events_url": "https://api.github.com/users/regiontog/events{/privacy}", "received_events_url": "https://api.github.com/users/regiontog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc5ecf446991c65359cf49d52098fcec5f1a1f68", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc5ecf446991c65359cf49d52098fcec5f1a1f68", "html_url": "https://github.com/rust-lang/rust/commit/dc5ecf446991c65359cf49d52098fcec5f1a1f68"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "adc189a292d5d319c32734a771d6c4010435724f", "filename": "crates/ra_syntax/src/grammar/types.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e28bd099d68ee124280eeadefe48c1f2e0ff6c17/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e28bd099d68ee124280eeadefe48c1f2e0ff6c17/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftypes.rs?ref=e28bd099d68ee124280eeadefe48c1f2e0ff6c17", "patch": "@@ -29,7 +29,7 @@ fn type_with_bounds_cond(p: &mut Parser, allow_bounds: bool) {\n         DYN_KW => dyn_trait_type(p),\n         // Some path types are not allowed to have bounds (no plus)\n         L_ANGLE => path_type_(p, allow_bounds),\n-        _ if paths::is_path_start(p) => path_type_(p, allow_bounds),\n+        _ if paths::is_path_start(p) => path_or_macro_type_(p, allow_bounds),\n         _ => {\n             p.err_recover(\"expected type\", TYPE_RECOVERY_SET);\n         }\n@@ -243,6 +243,28 @@ pub(super) fn path_type(p: &mut Parser) {\n     path_type_(p, true)\n }\n \n+// test macro_call_type\n+// type A = foo!();\n+// type B = crate::foo!();\n+fn path_or_macro_type_(p: &mut Parser, allow_bounds: bool) {\n+    assert!(paths::is_path_start(p) || p.at(L_ANGLE));\n+    let m = p.start();\n+    paths::type_path(p);\n+\n+    let kind = if p.at(EXCL) {\n+        items::macro_call_after_excl(p);\n+        MACRO_CALL\n+    } else {\n+        PATH_TYPE\n+    };\n+\n+    if allow_bounds && p.eat(PLUS) {\n+        type_params::bounds_without_colon(p);\n+    }\n+\n+    m.complete(p, kind);\n+}\n+\n pub(super) fn path_type_(p: &mut Parser, allow_bounds: bool) {\n     assert!(paths::is_path_start(p) || p.at(L_ANGLE));\n     let m = p.start();"}, {"sha": "edb470c899972b7689dcb7b3f15fe33d857b0dad", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0117_macro_call_type.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e28bd099d68ee124280eeadefe48c1f2e0ff6c17/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0117_macro_call_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e28bd099d68ee124280eeadefe48c1f2e0ff6c17/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0117_macro_call_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0117_macro_call_type.rs?ref=e28bd099d68ee124280eeadefe48c1f2e0ff6c17", "patch": "@@ -0,0 +1,2 @@\n+type A = foo!();\n+type B = crate::foo!();"}, {"sha": "b2d95451c97f23ff4a5ae91ec16750cfe91601fc", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0117_macro_call_type.txt", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/e28bd099d68ee124280eeadefe48c1f2e0ff6c17/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0117_macro_call_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e28bd099d68ee124280eeadefe48c1f2e0ff6c17/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0117_macro_call_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0117_macro_call_type.txt?ref=e28bd099d68ee124280eeadefe48c1f2e0ff6c17", "patch": "@@ -0,0 +1,43 @@\n+SOURCE_FILE@[0; 41)\n+  TYPE_DEF@[0; 16)\n+    TYPE_KW@[0; 4)\n+    WHITESPACE@[4; 5)\n+    NAME@[5; 6)\n+      IDENT@[5; 6) \"A\"\n+    WHITESPACE@[6; 7)\n+    EQ@[7; 8)\n+    WHITESPACE@[8; 9)\n+    MACRO_CALL@[9; 15)\n+      PATH@[9; 12)\n+        PATH_SEGMENT@[9; 12)\n+          NAME_REF@[9; 12)\n+            IDENT@[9; 12) \"foo\"\n+      EXCL@[12; 13)\n+      TOKEN_TREE@[13; 15)\n+        L_PAREN@[13; 14)\n+        R_PAREN@[14; 15)\n+    SEMI@[15; 16)\n+  WHITESPACE@[16; 17)\n+  TYPE_DEF@[17; 40)\n+    TYPE_KW@[17; 21)\n+    WHITESPACE@[21; 22)\n+    NAME@[22; 23)\n+      IDENT@[22; 23) \"B\"\n+    WHITESPACE@[23; 24)\n+    EQ@[24; 25)\n+    WHITESPACE@[25; 26)\n+    MACRO_CALL@[26; 39)\n+      PATH@[26; 36)\n+        PATH@[26; 31)\n+          PATH_SEGMENT@[26; 31)\n+            CRATE_KW@[26; 31)\n+        COLONCOLON@[31; 33)\n+        PATH_SEGMENT@[33; 36)\n+          NAME_REF@[33; 36)\n+            IDENT@[33; 36) \"foo\"\n+      EXCL@[36; 37)\n+      TOKEN_TREE@[37; 39)\n+        L_PAREN@[37; 38)\n+        R_PAREN@[38; 39)\n+    SEMI@[39; 40)\n+  WHITESPACE@[40; 41)"}]}