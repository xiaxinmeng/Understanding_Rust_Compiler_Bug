{"sha": "42303536c23ecc27e5571efd87d7116fff712bb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMzAzNTM2YzIzZWNjMjdlNTU3MWVmZDg3ZDcxMTZmZmY3MTJiYjg=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-04-26T21:04:36Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-05-02T03:45:33Z"}, "message": "debuginfo: Fix regression in namespace handling for struct types.", "tree": {"sha": "cee900530ae5c1c08c2f40b6190390dddfed58ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cee900530ae5c1c08c2f40b6190390dddfed58ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42303536c23ecc27e5571efd87d7116fff712bb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42303536c23ecc27e5571efd87d7116fff712bb8", "html_url": "https://github.com/rust-lang/rust/commit/42303536c23ecc27e5571efd87d7116fff712bb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42303536c23ecc27e5571efd87d7116fff712bb8/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4b0481d1c21be290f587a85e8bb342b6d0b7093", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4b0481d1c21be290f587a85e8bb342b6d0b7093", "html_url": "https://github.com/rust-lang/rust/commit/a4b0481d1c21be290f587a85e8bb342b6d0b7093"}], "stats": {"total": 76, "additions": 73, "deletions": 3}, "files": [{"sha": "cc20751a0b023adf2a7258baedd88fa082b83cf0", "filename": "src/librustc_trans/debuginfo/metadata.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/42303536c23ecc27e5571efd87d7116fff712bb8/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42303536c23ecc27e5571efd87d7116fff712bb8/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs?ref=42303536c23ecc27e5571efd87d7116fff712bb8", "patch": "@@ -1159,12 +1159,12 @@ fn prepare_struct_metadata<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n     let struct_name = compute_debuginfo_type_name(cx, struct_type, false);\n     let struct_llvm_type = type_of::in_memory_type_of(cx, struct_type);\n \n-    let (variant, substs) = match struct_type.sty {\n-        ty::TyStruct(def, substs) => (def.struct_variant(), substs),\n+    let (struct_def_id, variant, substs) = match struct_type.sty {\n+        ty::TyStruct(def, substs) => (def.did, def.struct_variant(), substs),\n         _ => bug!(\"prepare_struct_metadata on a non-struct\")\n     };\n \n-    let (containing_scope, _) = get_namespace_and_span_for_item(cx, variant.did);\n+    let (containing_scope, _) = get_namespace_and_span_for_item(cx, struct_def_id);\n \n     let struct_metadata_stub = create_struct_stub(cx,\n                                                   struct_llvm_type,"}, {"sha": "3fd4cf57b2a802c63847a444a0991f3af3f77e28", "filename": "src/test/debuginfo/struct-namespace.rs", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/42303536c23ecc27e5571efd87d7116fff712bb8/src%2Ftest%2Fdebuginfo%2Fstruct-namespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42303536c23ecc27e5571efd87d7116fff712bb8/src%2Ftest%2Fdebuginfo%2Fstruct-namespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-namespace.rs?ref=42303536c23ecc27e5571efd87d7116fff712bb8", "patch": "@@ -0,0 +1,70 @@\n+// Copyright 2013-2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-gdb\n+// compile-flags:-g\n+// min-lldb-version: 310\n+\n+// Check that structs get placed in the correct namespace\n+\n+// lldb-command:run\n+// lldb-command:p struct1\n+// lldb-check:(struct_namespace::Struct1) $0 = [...]\n+// lldb-command:p struct2\n+// lldb-check:(struct_namespace::Struct2) $1 = [...]\n+\n+// lldb-command:p mod1_struct1\n+// lldb-check:(struct_namespace::mod1::Struct1) $2 = [...]\n+// lldb-command:p mod1_struct2\n+// lldb-check:(struct_namespace::mod1::Struct2) $3 = [...]\n+\n+#![allow(unused_variables)]\n+#![allow(dead_code)]\n+#![feature(omit_gdb_pretty_printer_section)]\n+#![omit_gdb_pretty_printer_section]\n+\n+struct Struct1 {\n+    a: u32,\n+    b: u64,\n+}\n+\n+struct Struct2(u32);\n+\n+mod mod1 {\n+\n+    pub struct Struct1 {\n+        pub a: u32,\n+        pub b: u64,\n+    }\n+\n+    pub struct Struct2(pub u32);\n+}\n+\n+\n+fn main() {\n+    let struct1 = Struct1 {\n+        a: 0,\n+        b: 1,\n+    };\n+\n+    let struct2 = Struct2(2);\n+\n+    let mod1_struct1 = mod1::Struct1 {\n+        a: 3,\n+        b: 4,\n+    };\n+\n+    let mod1_struct2 = mod1::Struct2(5);\n+\n+    zzz(); // #break\n+}\n+\n+#[inline(never)]\n+fn zzz() {()}"}]}