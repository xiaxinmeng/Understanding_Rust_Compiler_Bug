{"sha": "313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab", "node_id": "C_kwDOAAsO6NoAKDMxMzE0M2I2YTNkM2Y5NGI4YWI0YTQ5OTVlYWY5OTM1YThkZmM3YWI", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-06-06T13:58:14Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-06-08T19:53:41Z"}, "message": "Add Terminator::InlineAsm conversion from MIR to SMIR", "tree": {"sha": "27b7301f74b2b8be52a1121f62ae60b42099754e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27b7301f74b2b8be52a1121f62ae60b42099754e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmSCMcUACgkQgTGiTgx5\n768pzg/7Bi0jSZHBR8ZdTSSOSgOeYRx/AauiJpE1wmYR+SL95OW6cjgaROvCKvz9\n7MQKprGVGmuflMiNweU7dkWR1Ep4k0eiR6/esHD8Ajb5rDQM0w9+uG7GehIh2TEL\nT0fhcSWLaB64lhgbvcaf655WrdknlCSGWL1+ZA2tJNWS+QufYS72lESUeAzNvP6M\ngYcYpBIv9ytgurvvoyvyz1iPeQqZeeaX8zAgQ2xZuqSBHcduwIYXOxq7GGPnwgPk\nUVtR+BljupWknwC0uRJ4vIX6Vz6KVpk6aXDIZ0hRGGAO+GyBz/Yx2418h20kCwUW\n9Ot6YNowM1nqmiSZeoXAetZxV8cYiFjGOn5fLFfuyg6No9YGX8oyuXfpRgm/3Z3K\nyHlFl3dk28O7Byq1Z7Y4/yGqxOR53wBgTVWa7lPhLl8OIXOdez4+iCUuUL8Ua3Yo\nkFpZBcacxGTlab5/DtYs4zdGYLY+RNgBbunUKsbNMzuZPFP9HM76pbEgI8x/kjN5\nZSiYeHc0o6AOp+LWBWzzlgC8PUbPplziHdenHIhCsti3W3X7nW+cL3rp1CfVUjEP\ndW7iOzuqvI4MKljmfJ0KvbSNbdTXtB4HbgYmMzqaoqwVyRdLyDZCSXEvAsp94wOu\nViHbKYSMJU7i5YHe3MmAXV1JZO105BRHX/FMo2BPiaSGg4ZunGE=\n=RkeB\n-----END PGP SIGNATURE-----", "payload": "tree 27b7301f74b2b8be52a1121f62ae60b42099754e\nparent e94bda3bf13303671427363d1cd93ac5e089f090\nauthor Santiago Pastorino <spastorino@gmail.com> 1686059894 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1686254021 -0300\n\nAdd Terminator::InlineAsm conversion from MIR to SMIR\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab", "html_url": "https://github.com/rust-lang/rust/commit/313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e94bda3bf13303671427363d1cd93ac5e089f090", "url": "https://api.github.com/repos/rust-lang/rust/commits/e94bda3bf13303671427363d1cd93ac5e089f090", "html_url": "https://github.com/rust-lang/rust/commit/e94bda3bf13303671427363d1cd93ac5e089f090"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "6d8d99cfb5f1f7713656fbc37a6a07eb7af08e30", "filename": "compiler/rustc_smir/src/rustc_smir/mod.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs?ref=313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab", "patch": "@@ -287,6 +287,27 @@ fn rustc_generator_to_generator(\n     }\n }\n \n+fn rustc_inline_asm_operand_to_inline_asm_operand(\n+    operand: &rustc_middle::mir::InlineAsmOperand<'_>,\n+) -> stable_mir::mir::InlineAsmOperand {\n+    use rustc_middle::mir::InlineAsmOperand;\n+\n+    let (in_value, out_place) = match operand {\n+        InlineAsmOperand::In { value, .. } => (Some(rustc_op_to_op(value)), None),\n+        InlineAsmOperand::Out { place, .. } => {\n+            (None, place.map(|place| rustc_place_to_place(&place)))\n+        }\n+        InlineAsmOperand::InOut { in_value, out_place, .. } => {\n+            (Some(rustc_op_to_op(in_value)), out_place.map(|place| rustc_place_to_place(&place)))\n+        }\n+        InlineAsmOperand::Const { .. }\n+        | InlineAsmOperand::SymFn { .. }\n+        | InlineAsmOperand::SymStatic { .. } => (None, None),\n+    };\n+\n+    stable_mir::mir::InlineAsmOperand { in_value, out_place, raw_rpr: format!(\"{:?}\", operand) }\n+}\n+\n fn rustc_terminator_to_terminator(\n     terminator: &rustc_middle::mir::Terminator<'_>,\n ) -> stable_mir::mir::Terminator {\n@@ -330,7 +351,19 @@ fn rustc_terminator_to_terminator(\n             target: target.as_usize(),\n             unwind: rustc_unwind_to_unwind(unwind),\n         },\n-        InlineAsm { .. } => todo!(),\n+        InlineAsm { template, operands, options, line_spans, destination, unwind } => {\n+            Terminator::InlineAsm {\n+                template: format!(\"{:?}\", template),\n+                operands: operands\n+                    .iter()\n+                    .map(|operand| rustc_inline_asm_operand_to_inline_asm_operand(operand))\n+                    .collect(),\n+                options: format!(\"{:?}\", options),\n+                line_spans: format!(\"{:?}\", line_spans),\n+                destination: destination.map(|d| d.as_usize()),\n+                unwind: rustc_unwind_to_unwind(unwind),\n+            }\n+        }\n         Yield { .. } | GeneratorDrop | FalseEdge { .. } | FalseUnwind { .. } => unreachable!(),\n     }\n }"}, {"sha": "9df7b4945b70a34581f501e732405e17cc733da5", "filename": "compiler/rustc_smir/src/stable_mir/mir/body.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmir%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmir%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmir%2Fbody.rs?ref=313143b6a3d3f94b8ab4a4995eaf9935a8dfc7ab", "patch": "@@ -46,6 +46,23 @@ pub enum Terminator {\n         unwind: UnwindAction,\n     },\n     GeneratorDrop,\n+    InlineAsm {\n+        template: String,\n+        operands: Vec<InlineAsmOperand>,\n+        options: String,\n+        line_spans: String,\n+        destination: Option<usize>,\n+        unwind: UnwindAction,\n+    },\n+}\n+\n+#[derive(Clone, Debug)]\n+pub struct InlineAsmOperand {\n+    pub in_value: Option<Operand>,\n+    pub out_place: Option<Place>,\n+    // This field has a raw debug representation of MIR's InlineAsmOperand.\n+    // For now we care about place/operand + the rest in a debug format.\n+    pub raw_rpr: String,\n }\n \n #[derive(Clone, Debug)]"}]}