{"sha": "16f30c2da2a92ff9264935ac309b3e94bbd83ddf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZjMwYzJkYTJhOTJmZjkyNjQ5MzVhYzMwOWIzZTk0YmJkODNkZGY=", "commit": {"author": {"name": "Steven Malis", "email": "smmalis37@gmail.com", "date": "2018-04-08T01:34:12Z"}, "committer": {"name": "Steven Malis", "email": "smmalis37@gmail.com", "date": "2018-04-08T01:34:12Z"}, "message": "fix tests", "tree": {"sha": "01b913f3fdf84196e0017703267182e8a72aa1a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01b913f3fdf84196e0017703267182e8a72aa1a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16f30c2da2a92ff9264935ac309b3e94bbd83ddf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16f30c2da2a92ff9264935ac309b3e94bbd83ddf", "html_url": "https://github.com/rust-lang/rust/commit/16f30c2da2a92ff9264935ac309b3e94bbd83ddf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16f30c2da2a92ff9264935ac309b3e94bbd83ddf/comments", "author": {"login": "smmalis37", "id": 4054472, "node_id": "MDQ6VXNlcjQwNTQ0NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4054472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smmalis37", "html_url": "https://github.com/smmalis37", "followers_url": "https://api.github.com/users/smmalis37/followers", "following_url": "https://api.github.com/users/smmalis37/following{/other_user}", "gists_url": "https://api.github.com/users/smmalis37/gists{/gist_id}", "starred_url": "https://api.github.com/users/smmalis37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smmalis37/subscriptions", "organizations_url": "https://api.github.com/users/smmalis37/orgs", "repos_url": "https://api.github.com/users/smmalis37/repos", "events_url": "https://api.github.com/users/smmalis37/events{/privacy}", "received_events_url": "https://api.github.com/users/smmalis37/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smmalis37", "id": 4054472, "node_id": "MDQ6VXNlcjQwNTQ0NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4054472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smmalis37", "html_url": "https://github.com/smmalis37", "followers_url": "https://api.github.com/users/smmalis37/followers", "following_url": "https://api.github.com/users/smmalis37/following{/other_user}", "gists_url": "https://api.github.com/users/smmalis37/gists{/gist_id}", "starred_url": "https://api.github.com/users/smmalis37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smmalis37/subscriptions", "organizations_url": "https://api.github.com/users/smmalis37/orgs", "repos_url": "https://api.github.com/users/smmalis37/repos", "events_url": "https://api.github.com/users/smmalis37/events{/privacy}", "received_events_url": "https://api.github.com/users/smmalis37/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5a367c7bb50f74d82c3909d5c961baac879242e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5a367c7bb50f74d82c3909d5c961baac879242e", "html_url": "https://github.com/rust-lang/rust/commit/f5a367c7bb50f74d82c3909d5c961baac879242e"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "97b476fa5b6922e23c617850def7f511c949f089", "filename": "src/libcore/ops/range.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/16f30c2da2a92ff9264935ac309b3e94bbd83ddf/src%2Flibcore%2Fops%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16f30c2da2a92ff9264935ac309b3e94bbd83ddf/src%2Flibcore%2Fops%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Frange.rs?ref=16f30c2da2a92ff9264935ac309b3e94bbd83ddf", "patch": "@@ -100,13 +100,13 @@ impl<Idx: PartialOrd<Idx>> Range<Idx> {\n     /// ```\n     /// #![feature(range_contains)]\n     ///\n-    /// assert!(!(3..5).contains(2));\n-    /// assert!( (3..5).contains(3));\n-    /// assert!( (3..5).contains(4));\n-    /// assert!(!(3..5).contains(5));\n+    /// assert!(!(3..5).contains(&2));\n+    /// assert!( (3..5).contains(&3));\n+    /// assert!( (3..5).contains(&4));\n+    /// assert!(!(3..5).contains(&5));\n     ///\n-    /// assert!(!(3..3).contains(3));\n-    /// assert!(!(3..2).contains(3));\n+    /// assert!(!(3..3).contains(&3));\n+    /// assert!(!(3..2).contains(&3));\n     /// ```\n     #[unstable(feature = \"range_contains\", reason = \"recently added as per RFC\", issue = \"32311\")]\n     pub fn contains<U>(&self, item: &U) -> bool\n@@ -191,9 +191,9 @@ impl<Idx: PartialOrd<Idx>> RangeFrom<Idx> {\n     /// ```\n     /// #![feature(range_contains)]\n     ///\n-    /// assert!(!(3..).contains(2));\n-    /// assert!( (3..).contains(3));\n-    /// assert!( (3..).contains(1_000_000_000));\n+    /// assert!(!(3..).contains(&2));\n+    /// assert!( (3..).contains(&3));\n+    /// assert!( (3..).contains(&1_000_000_000));\n     /// ```\n     #[unstable(feature = \"range_contains\", reason = \"recently added as per RFC\", issue = \"32311\")]\n     pub fn contains<U>(&self, item: &U) -> bool\n@@ -266,9 +266,9 @@ impl<Idx: PartialOrd<Idx>> RangeTo<Idx> {\n     /// ```\n     /// #![feature(range_contains)]\n     ///\n-    /// assert!( (..5).contains(-1_000_000_000));\n-    /// assert!( (..5).contains(4));\n-    /// assert!(!(..5).contains(5));\n+    /// assert!( (..5).contains(&-1_000_000_000));\n+    /// assert!( (..5).contains(&4));\n+    /// assert!(!(..5).contains(&5));\n     /// ```\n     #[unstable(feature = \"range_contains\", reason = \"recently added as per RFC\", issue = \"32311\")]\n     pub fn contains<U>(&self, item: &U) -> bool\n@@ -330,14 +330,14 @@ impl<Idx: PartialOrd<Idx>> RangeInclusive<Idx> {\n     /// ```\n     /// #![feature(range_contains)]\n     ///\n-    /// assert!(!(3..=5).contains(2));\n-    /// assert!( (3..=5).contains(3));\n-    /// assert!( (3..=5).contains(4));\n-    /// assert!( (3..=5).contains(5));\n-    /// assert!(!(3..=5).contains(6));\n+    /// assert!(!(3..=5).contains(&2));\n+    /// assert!( (3..=5).contains(&3));\n+    /// assert!( (3..=5).contains(&4));\n+    /// assert!( (3..=5).contains(&5));\n+    /// assert!(!(3..=5).contains(&6));\n     ///\n-    /// assert!( (3..=3).contains(3));\n-    /// assert!(!(3..=2).contains(3));\n+    /// assert!( (3..=3).contains(&3));\n+    /// assert!(!(3..=2).contains(&3));\n     /// ```\n     #[unstable(feature = \"range_contains\", reason = \"recently added as per RFC\", issue = \"32311\")]\n     pub fn contains<U>(&self, item: &U) -> bool\n@@ -447,9 +447,9 @@ impl<Idx: PartialOrd<Idx>> RangeToInclusive<Idx> {\n     /// ```\n     /// #![feature(range_contains)]\n     ///\n-    /// assert!( (..=5).contains(-1_000_000_000));\n-    /// assert!( (..=5).contains(5));\n-    /// assert!(!(..=5).contains(6));\n+    /// assert!( (..=5).contains(&-1_000_000_000));\n+    /// assert!( (..=5).contains(&5));\n+    /// assert!(!(..=5).contains(&6));\n     /// ```\n     #[unstable(feature = \"range_contains\", reason = \"recently added as per RFC\", issue = \"32311\")]\n     pub fn contains<U>(&self, item: &U) -> bool"}]}