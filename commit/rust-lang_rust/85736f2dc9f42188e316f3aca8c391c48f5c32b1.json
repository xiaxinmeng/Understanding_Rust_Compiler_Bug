{"sha": "85736f2dc9f42188e316f3aca8c391c48f5c32b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1NzM2ZjJkYzlmNDIxODhlMzE2ZjNhY2E4YzM5MWM0OGY1YzMyYjE=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-23T17:13:24Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-23T17:13:27Z"}, "message": "Fix incorrect base fixture in ide_completion tests", "tree": {"sha": "6d1aea2bd06df4ac1b2da18d69332d949c8325be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d1aea2bd06df4ac1b2da18d69332d949c8325be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85736f2dc9f42188e316f3aca8c391c48f5c32b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85736f2dc9f42188e316f3aca8c391c48f5c32b1", "html_url": "https://github.com/rust-lang/rust/commit/85736f2dc9f42188e316f3aca8c391c48f5c32b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85736f2dc9f42188e316f3aca8c391c48f5c32b1/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9abd28ac372f8b883ab3fef966543779b97dc9b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9abd28ac372f8b883ab3fef966543779b97dc9b4", "html_url": "https://github.com/rust-lang/rust/commit/9abd28ac372f8b883ab3fef966543779b97dc9b4"}], "stats": {"total": 116, "additions": 67, "deletions": 49}, "files": [{"sha": "d2a502b9f9fb305c038422e0e467ebbbf9f633c5", "filename": "crates/ide_completion/src/tests.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/85736f2dc9f42188e316f3aca8c391c48f5c32b1/crates%2Fide_completion%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85736f2dc9f42188e316f3aca8c391c48f5c32b1/crates%2Fide_completion%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests.rs?ref=85736f2dc9f42188e316f3aca8c391c48f5c32b1", "patch": "@@ -40,8 +40,11 @@ static STATIC: Unit = Unit;\n const CONST: Unit = Unit;\n struct Record { field: u32 }\n struct Tuple(u32);\n-struct Unit\n+struct Unit;\n+#[macro_export]\n macro_rules! makro {}\n+#[rustc_builtin_macro]\n+pub macro Clone {}\n \"#;\n \n pub(crate) const TEST_CONFIG: CompletionConfig = CompletionConfig {"}, {"sha": "77f00e8e5c13297d56a64121d41b1238c5d431cc", "filename": "crates/ide_completion/src/tests/item_list.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/85736f2dc9f42188e316f3aca8c391c48f5c32b1/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85736f2dc9f42188e316f3aca8c391c48f5c32b1/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs?ref=85736f2dc9f42188e316f3aca8c391c48f5c32b1", "patch": "@@ -11,7 +11,7 @@ fn check(ra_fixture: &str, expect: Expect) {\n fn in_mod_item_list() {\n     check(\n         r#\"mod tests { $0 }\"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             kw pub(crate)\n             kw pub\n             kw unsafe\n@@ -30,16 +30,16 @@ fn in_mod_item_list() {\n             sn tmod (Test module)\n             sn tfn (Test function)\n             sn macro_rules\n-            ma makro!(\u2026)        macro_rules! makro\n-        \"#]],\n+            ma makro!(\u2026)        #[macro_export] macro_rules! makro\n+        \"##]],\n     )\n }\n \n #[test]\n fn in_source_file_item_list() {\n     check(\n         r#\"$0\"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             kw pub(crate)\n             kw pub\n             kw unsafe\n@@ -58,9 +58,10 @@ fn in_source_file_item_list() {\n             sn tmod (Test module)\n             sn tfn (Test function)\n             sn macro_rules\n+            ma makro!(\u2026)        #[macro_export] macro_rules! makro\n             md module\n-            ma makro!(\u2026)        macro_rules! makro\n-        \"#]],\n+            ma makro!(\u2026)        #[macro_export] macro_rules! makro\n+        \"##]],\n     )\n }\n \n@@ -95,7 +96,7 @@ fn in_item_list_after_attr() {\n fn in_qualified_path() {\n     check(\n         r#\"crate::$0\"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             kw pub(crate)\n             kw pub\n             kw unsafe\n@@ -111,8 +112,9 @@ fn in_qualified_path() {\n             kw enum\n             kw struct\n             kw union\n+            ma makro!(\u2026)  #[macro_export] macro_rules! makro\n             md module\n-        \"#]],\n+        \"##]],\n     )\n }\n \n@@ -165,16 +167,17 @@ fn after_visibility_unsafe() {\n fn in_impl_assoc_item_list() {\n     check(\n         r#\"impl Struct { $0 }\"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             kw pub(crate)\n             kw pub\n             kw unsafe\n             kw fn\n             kw const\n             kw type\n+            ma makro!(\u2026)  #[macro_export] macro_rules! makro\n             md module\n-            ma makro!(\u2026)  macro_rules! makro\n-        \"#]],\n+            ma makro!(\u2026)  #[macro_export] macro_rules! makro\n+        \"##]],\n     )\n }\n \n@@ -197,13 +200,14 @@ fn in_impl_assoc_item_list_after_attr() {\n fn in_trait_assoc_item_list() {\n     check(\n         r\"trait Foo { $0 }\",\n-        expect![[r#\"\n+        expect![[r##\"\n             kw unsafe\n             kw fn\n             kw const\n             kw type\n             md module\n-            ma makro!(\u2026) macro_rules! makro\n-        \"#]],\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+        \"##]],\n     );\n }"}, {"sha": "ef2015107e3c359b61a48ab3f945215affc5297a", "filename": "crates/ide_completion/src/tests/items.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/85736f2dc9f42188e316f3aca8c391c48f5c32b1/crates%2Fide_completion%2Fsrc%2Ftests%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85736f2dc9f42188e316f3aca8c391c48f5c32b1/crates%2Fide_completion%2Fsrc%2Ftests%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fitems.rs?ref=85736f2dc9f42188e316f3aca8c391c48f5c32b1", "patch": "@@ -17,16 +17,17 @@ fn target_type_or_trait_in_impl_block() {\n         r#\"\n impl Tra$0\n \"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             tt Trait\n             en Enum\n             st Record\n             st Tuple\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n             md module\n             st Unit\n-            ma makro!(\u2026) macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n             bt u32\n-        \"#]],\n+        \"##]],\n     )\n }\n \n@@ -36,16 +37,17 @@ fn target_type_in_trait_impl_block() {\n         r#\"\n impl Trait for Str$0\n \"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             tt Trait\n             en Enum\n             st Record\n             st Tuple\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n             md module\n             st Unit\n-            ma makro!(\u2026) macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n             bt u32\n-        \"#]],\n+        \"##]],\n     )\n }\n "}, {"sha": "9d70aca3c95c4f8171a29b721a28ee43d2245678", "filename": "crates/ide_completion/src/tests/pattern.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/85736f2dc9f42188e316f3aca8c391c48f5c32b1/crates%2Fide_completion%2Fsrc%2Ftests%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85736f2dc9f42188e316f3aca8c391c48f5c32b1/crates%2Fide_completion%2Fsrc%2Ftests%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fpattern.rs?ref=85736f2dc9f42188e316f3aca8c391c48f5c32b1", "patch": "@@ -109,20 +109,21 @@ fn foo() {\n     if let a$0\n }\n \"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             kw mut\n             en Enum\n             bn Record    Record { field$1 }$0\n             st Record\n             bn Tuple     Tuple($1)$0\n             st Tuple\n             md module\n+            st Unit\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n             bn TupleV    TupleV($1)$0\n             ev TupleV\n-            st Unit\n             ct CONST\n-            ma makro!(\u2026) macro_rules! makro\n-        \"#]],\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+        \"##]],\n     );\n }\n \n@@ -134,15 +135,16 @@ fn foo() {\n    let a$0\n }\n \"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             kw mut\n             bn Record    Record { field$1 }$0\n             st Record\n             bn Tuple     Tuple($1)$0\n             st Tuple\n             st Unit\n-            ma makro!(\u2026) macro_rules! makro\n-        \"#]],\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+        \"##]],\n     );\n }\n \n@@ -153,15 +155,16 @@ fn in_param() {\n fn foo(a$0) {\n }\n \"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             kw mut\n             bn Record    Record { field$1 }: Record$0\n             st Record\n             bn Tuple     Tuple($1): Tuple$0\n             st Tuple\n             st Unit\n-            ma makro!(\u2026) macro_rules! makro\n-        \"#]],\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+        \"##]],\n     );\n }\n "}, {"sha": "2b8ba86b2384f872f799ed3b2bb6e890060cea80", "filename": "crates/ide_completion/src/tests/predicate.rs", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/85736f2dc9f42188e316f3aca8c391c48f5c32b1/crates%2Fide_completion%2Fsrc%2Ftests%2Fpredicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85736f2dc9f42188e316f3aca8c391c48f5c32b1/crates%2Fide_completion%2Fsrc%2Ftests%2Fpredicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fpredicate.rs?ref=85736f2dc9f42188e316f3aca8c391c48f5c32b1", "patch": "@@ -15,17 +15,18 @@ fn predicate_start() {\n         r#\"\n struct Foo<'lt, T, const C: usize> where $0 {}\n \"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             tt Trait\n             en Enum\n             st Record\n             st Tuple\n             md module\n             st Foo<\u2026>\n             st Unit\n-            ma makro!(\u2026) macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n             bt u32\n-        \"#]],\n+        \"##]],\n     );\n }\n \n@@ -36,11 +37,12 @@ fn bound_for_type_pred() {\n         r#\"\n struct Foo<'lt, T, const C: usize> where T: $0 {}\n \"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             tt Trait\n             md module\n-            ma makro!(\u2026) macro_rules! makro\n-        \"#]],\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+        \"##]],\n     );\n }\n \n@@ -51,11 +53,12 @@ fn bound_for_lifetime_pred() {\n         r#\"\n struct Foo<'lt, T, const C: usize> where 'lt: $0 {}\n \"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             tt Trait\n             md module\n-            ma makro!(\u2026) macro_rules! makro\n-        \"#]],\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+        \"##]],\n     );\n }\n \n@@ -65,11 +68,12 @@ fn bound_for_for_pred() {\n         r#\"\n struct Foo<'lt, T, const C: usize> where for<'a> T: $0 {}\n \"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             tt Trait\n             md module\n-            ma makro!(\u2026) macro_rules! makro\n-        \"#]],\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+        \"##]],\n     );\n }\n \n@@ -79,17 +83,18 @@ fn param_list_for_for_pred() {\n         r#\"\n struct Foo<'lt, T, const C: usize> where for<'a> $0 {}\n \"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             tt Trait\n             en Enum\n             st Record\n             st Tuple\n             md module\n             st Foo<\u2026>\n             st Unit\n-            ma makro!(\u2026) macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n             bt u32\n-        \"#]],\n+        \"##]],\n     );\n }\n \n@@ -101,16 +106,17 @@ impl Record {\n     fn method(self) where $0 {}\n }\n \"#,\n-        expect![[r#\"\n+        expect![[r##\"\n             sp Self\n             tt Trait\n             en Enum\n             st Record\n             st Tuple\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n             md module\n             st Unit\n-            ma makro!(\u2026) macro_rules! makro\n+            ma makro!(\u2026) #[macro_export] macro_rules! makro\n             bt u32\n-        \"#]],\n+        \"##]],\n     );\n }"}]}