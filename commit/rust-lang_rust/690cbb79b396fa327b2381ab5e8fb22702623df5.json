{"sha": "690cbb79b396fa327b2381ab5e8fb22702623df5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5MGNiYjc5YjM5NmZhMzI3YjIzODFhYjVlOGZiMjI3MDI2MjNkZjU=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2021-08-02T09:10:19Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2021-08-02T09:10:19Z"}, "message": "Better message for invalid keyword placement in fn\n\nAfter this commit, `unsafe async fn ...` now suggests the `async unsafe` fix\ninstead of misunderstanding the issue.\n\nThis is not perfect for repeated keywords (`const async const`) and for\nkeywords that are misplaced after `extern \"some abi\"` because of the way\n`check_fn_font_matter` works, but changing it breaks so many tests and\ndiagnostics it has been judged too high a cost for this PR.", "tree": {"sha": "eb4ed7058377657c914c6bf238e3deda7c4a59bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb4ed7058377657c914c6bf238e3deda7c4a59bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/690cbb79b396fa327b2381ab5e8fb22702623df5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/690cbb79b396fa327b2381ab5e8fb22702623df5", "html_url": "https://github.com/rust-lang/rust/commit/690cbb79b396fa327b2381ab5e8fb22702623df5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/690cbb79b396fa327b2381ab5e8fb22702623df5/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f381e77d3590bc36f09b0d48cffb504f92febf5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f381e77d3590bc36f09b0d48cffb504f92febf5e", "html_url": "https://github.com/rust-lang/rust/commit/f381e77d3590bc36f09b0d48cffb504f92febf5e"}], "stats": {"total": 188, "additions": 184, "deletions": 4}, "files": [{"sha": "673caf35ea667dd87784af6d9c375443aae57f93", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -1771,8 +1771,14 @@ impl<'a> Parser<'a> {\n     pub(super) fn parse_fn_front_matter(&mut self) -> PResult<'a, FnHeader> {\n         let sp_start = self.token.span;\n         let constness = self.parse_constness();\n+\n+        let async_start_sp = self.token.span;\n         let asyncness = self.parse_asyncness();\n+\n+        let unsafe_start_sp = self.token.span;\n         let unsafety = self.parse_unsafety();\n+\n+        let ext_start_sp = self.token.span;\n         let ext = self.parse_extern();\n \n         if let Async::Yes { span, .. } = asyncness {\n@@ -1787,8 +1793,35 @@ impl<'a> Parser<'a> {\n                 Ok(true) => {}\n                 Ok(false) => unreachable!(),\n                 Err(mut err) => {\n+                    // Qualifier keywords ordering check\n+\n+                    // This will allow the machine fix to directly place the keyword in the correct place\n+                    let current_qual_sp = if self.check_keyword(kw::Const) {\n+                        Some(async_start_sp)\n+                    } else if self.check_keyword(kw::Async) {\n+                        Some(unsafe_start_sp)\n+                    } else if self.check_keyword(kw::Unsafe) {\n+                        Some(ext_start_sp)\n+                    } else {\n+                        None\n+                    };\n+\n+                    if let Some(current_qual_sp) = current_qual_sp {\n+                        let current_qual_sp = current_qual_sp.to(self.prev_token.span);\n+                        if let Ok(current_qual) = self.span_to_snippet(current_qual_sp) {\n+                            let invalid_qual_sp = self.token.uninterpolated_span();\n+                            let invalid_qual = self.span_to_snippet(invalid_qual_sp).unwrap();\n+\n+                            err.span_suggestion(\n+                                current_qual_sp.to(invalid_qual_sp),\n+                                &format!(\"`{}` must come before `{}`\", invalid_qual, current_qual),\n+                                format!(\"{} {}\", invalid_qual, current_qual),\n+                                Applicability::MachineApplicable,\n+                            ).note(\"keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`\");\n+                        }\n+                    }\n                     // Recover incorrect visibility order such as `async pub`.\n-                    if self.check_keyword(kw::Pub) {\n+                    else if self.check_keyword(kw::Pub) {\n                         let sp = sp_start.to(self.prev_token.span);\n                         if let Ok(snippet) = self.span_to_snippet(sp) {\n                             let vis = match self.parse_visibility(FollowedByType::No) {"}, {"sha": "ae13b90c3cfc0bd33f7cd806337cb38e48eaf16f", "filename": "src/test/ui/async-await/no-async-const.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fasync-await%2Fno-async-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fasync-await%2Fno-async-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-async-const.stderr?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -2,7 +2,12 @@ error: expected one of `extern`, `fn`, or `unsafe`, found keyword `const`\n   --> $DIR/no-async-const.rs:4:11\n    |\n LL | pub async const fn x() {}\n-   |           ^^^^^ expected one of `extern`, `fn`, or `unsafe`\n+   |     ------^^^^^\n+   |     |     |\n+   |     |     expected one of `extern`, `fn`, or `unsafe`\n+   |     help: `const` must come before `async`: `const async`\n+   |\n+   = note: keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`\n \n error: aborting due to previous error\n "}, {"sha": "0c362052501ed1ec8f61607876779a8bc03a8d31", "filename": "src/test/ui/async-await/no-unsafe-async.stderr", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.stderr?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -5,15 +5,25 @@ LL | impl S {\n    |        - while parsing this item list starting here\n LL |     #[cfg(FALSE)]\n LL |     unsafe async fn g() {}\n-   |            ^^^^^ expected one of `extern` or `fn`\n+   |     -------^^^^^\n+   |     |      |\n+   |     |      expected one of `extern` or `fn`\n+   |     help: `async` must come before `unsafe`: `async unsafe`\n LL | }\n    | - the item list ends here\n+   |\n+   = note: keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`\n \n error: expected one of `extern` or `fn`, found keyword `async`\n   --> $DIR/no-unsafe-async.rs:11:8\n    |\n LL | unsafe async fn f() {}\n-   |        ^^^^^ expected one of `extern` or `fn`\n+   | -------^^^^^\n+   | |      |\n+   | |      expected one of `extern` or `fn`\n+   | help: `async` must come before `unsafe`: `async unsafe`\n+   |\n+   = note: keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "7c3d915a4c0d9329bc6185808a35af9fd414d166", "filename": "src/test/ui/parser/issue-87217-keyword-order/const-async-const.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fconst-async-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fconst-async-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fconst-async-const.rs?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -0,0 +1,11 @@\n+// edition:2018\n+\n+// Test that even when `const` is already present, the proposed fix is `const const async`,\n+// like for `pub pub`.\n+\n+const async const fn test() {}\n+//~^ ERROR expected one of `extern`, `fn`, or `unsafe`, found keyword `const`\n+//~| NOTE expected one of `extern`, `fn`, or `unsafe`\n+//~| HELP `const` must come before `async`\n+//~| SUGGESTION const async\n+//~| NOTE keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`"}, {"sha": "56280912540a79aec104814d671db5a19082b770", "filename": "src/test/ui/parser/issue-87217-keyword-order/const-async-const.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fconst-async-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fconst-async-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fconst-async-const.stderr?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -0,0 +1,13 @@\n+error: expected one of `extern`, `fn`, or `unsafe`, found keyword `const`\n+  --> $DIR/const-async-const.rs:6:13\n+   |\n+LL | const async const fn test() {}\n+   |       ------^^^^^\n+   |       |     |\n+   |       |     expected one of `extern`, `fn`, or `unsafe`\n+   |       help: `const` must come before `async`: `const async`\n+   |\n+   = note: keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`\n+\n+error: aborting due to previous error\n+"}, {"sha": "86fdb78cce8aba23f39e4ce9d36c583e346d67ed", "filename": "src/test/ui/parser/issue-87217-keyword-order/several-kw-jump.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fseveral-kw-jump.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fseveral-kw-jump.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fseveral-kw-jump.rs?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -0,0 +1,14 @@\n+// edition:2018\n+\n+// There is an order to respect for keywords before a function:\n+// `<visibility>, const, async, unsafe, extern, \"<ABI>\"`\n+//\n+// This test ensures the compiler is helpful about them being misplaced.\n+// Visibilities are tested elsewhere.\n+\n+async unsafe const fn test() {}\n+//~^ ERROR expected one of `extern` or `fn`, found keyword `const`\n+//~| NOTE expected one of `extern` or `fn`\n+//~| HELP `const` must come before `async unsafe`\n+//~| SUGGESTION const async unsafe\n+//~| NOTE keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`"}, {"sha": "65cce77be896bc6c0d1b359c4a84159be1ed6e14", "filename": "src/test/ui/parser/issue-87217-keyword-order/several-kw-jump.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fseveral-kw-jump.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fseveral-kw-jump.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fseveral-kw-jump.stderr?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -0,0 +1,13 @@\n+error: expected one of `extern` or `fn`, found keyword `const`\n+  --> $DIR/several-kw-jump.rs:9:14\n+   |\n+LL | async unsafe const fn test() {}\n+   | -------------^^^^^\n+   | |            |\n+   | |            expected one of `extern` or `fn`\n+   | help: `const` must come before `async unsafe`: `const async unsafe`\n+   |\n+   = note: keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`\n+\n+error: aborting due to previous error\n+"}, {"sha": "edfb330d6713a31e8602f190fedea7903a55cfaa", "filename": "src/test/ui/parser/issue-87217-keyword-order/wrong-async.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-async.rs?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -0,0 +1,14 @@\n+// edition:2018\n+\n+// There is an order to respect for keywords before a function:\n+// `<visibility>, const, async, unsafe, extern, \"<ABI>\"`\n+//\n+// This test ensures the compiler is helpful about them being misplaced.\n+// Visibilities are tested elsewhere.\n+\n+unsafe async fn test() {}\n+//~^ ERROR expected one of `extern` or `fn`, found keyword `async`\n+//~| NOTE expected one of `extern` or `fn`\n+//~| HELP `async` must come before `unsafe`\n+//~| SUGGESTION async unsafe\n+//~| NOTE keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`"}, {"sha": "3acd9e4400432b304a83dff28139dfc7f5afafaf", "filename": "src/test/ui/parser/issue-87217-keyword-order/wrong-async.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-async.stderr?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -0,0 +1,13 @@\n+error: expected one of `extern` or `fn`, found keyword `async`\n+  --> $DIR/wrong-async.rs:9:8\n+   |\n+LL | unsafe async fn test() {}\n+   | -------^^^^^\n+   | |      |\n+   | |      expected one of `extern` or `fn`\n+   | help: `async` must come before `unsafe`: `async unsafe`\n+   |\n+   = note: keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`\n+\n+error: aborting due to previous error\n+"}, {"sha": "abd692b80d54b1ad45a89852fd28b294a95367eb", "filename": "src/test/ui/parser/issue-87217-keyword-order/wrong-const.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-const.rs?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -0,0 +1,14 @@\n+// edition:2018\n+\n+// There is an order to respect for keywords before a function:\n+// `<visibility>, const, async, unsafe, extern, \"<ABI>\"`\n+//\n+// This test ensures the compiler is helpful about them being misplaced.\n+// Visibilities are tested elsewhere.\n+\n+unsafe const fn test() {}\n+//~^ ERROR expected one of `extern` or `fn`, found keyword `const`\n+//~| NOTE expected one of `extern` or `fn`\n+//~| HELP `const` must come before `unsafe`\n+//~| SUGGESTION const unsafe\n+//~| NOTE keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`"}, {"sha": "9a3e07b1e87f64638c5604b09ac1d7515a7cb470", "filename": "src/test/ui/parser/issue-87217-keyword-order/wrong-const.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-const.stderr?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -0,0 +1,13 @@\n+error: expected one of `extern` or `fn`, found keyword `const`\n+  --> $DIR/wrong-const.rs:9:8\n+   |\n+LL | unsafe const fn test() {}\n+   | -------^^^^^\n+   | |      |\n+   | |      expected one of `extern` or `fn`\n+   | help: `const` must come before `unsafe`: `const unsafe`\n+   |\n+   = note: keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`\n+\n+error: aborting due to previous error\n+"}, {"sha": "7f0761e99386a3c43a8f4a5c477327f94fc0831f", "filename": "src/test/ui/parser/issue-87217-keyword-order/wrong-unsafe.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-unsafe.rs?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -0,0 +1,14 @@\n+// edition:2018\n+\n+// There is an order to respect for keywords before a function:\n+// `<visibility>, const, async, unsafe, extern, \"<ABI>\"`\n+//\n+// This test ensures the compiler is helpful about them being misplaced.\n+// Visibilities are tested elsewhere.\n+\n+extern unsafe fn test() {}\n+//~^ ERROR expected `fn`, found keyword `unsafe`\n+//~| NOTE expected `fn`\n+//~| HELP `unsafe` must come before `extern`\n+//~| SUGGESTION unsafe extern\n+//~| NOTE keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`"}, {"sha": "395ee9fedbc0726d4b82b2384c333daeceeb9ec7", "filename": "src/test/ui/parser/issue-87217-keyword-order/wrong-unsafe.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/690cbb79b396fa327b2381ab5e8fb22702623df5/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87217-keyword-order%2Fwrong-unsafe.stderr?ref=690cbb79b396fa327b2381ab5e8fb22702623df5", "patch": "@@ -0,0 +1,13 @@\n+error: expected `fn`, found keyword `unsafe`\n+  --> $DIR/wrong-unsafe.rs:9:8\n+   |\n+LL | extern unsafe fn test() {}\n+   | -------^^^^^^\n+   | |      |\n+   | |      expected `fn`\n+   | help: `unsafe` must come before `extern`: `unsafe extern`\n+   |\n+   = note: keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`\n+\n+error: aborting due to previous error\n+"}]}