{"sha": "8c994a1237d1c79811920cf852d0b801b8518336", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjOTk0YTEyMzdkMWM3OTgxMTkyMGNmODUyZDBiODAxYjg1MTgzMzY=", "commit": {"author": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2014-08-23T07:59:25Z"}, "committer": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2014-08-23T09:11:07Z"}, "message": "Remove stage0 attributes.", "tree": {"sha": "bff6e3476ec8eca796487e8f27da834c45177ec6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bff6e3476ec8eca796487e8f27da834c45177ec6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c994a1237d1c79811920cf852d0b801b8518336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c994a1237d1c79811920cf852d0b801b8518336", "html_url": "https://github.com/rust-lang/rust/commit/8c994a1237d1c79811920cf852d0b801b8518336", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c994a1237d1c79811920cf852d0b801b8518336/comments", "author": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58bb603ea74a388d7a4dafc0c78f214a46301505", "url": "https://api.github.com/repos/rust-lang/rust/commits/58bb603ea74a388d7a4dafc0c78f214a46301505", "html_url": "https://github.com/rust-lang/rust/commit/58bb603ea74a388d7a4dafc0c78f214a46301505"}], "stats": {"total": 30, "additions": 4, "deletions": 26}, "files": [{"sha": "b36bc96cd351cd6098fad4675770e6d4be8baa11", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -17,7 +17,6 @@ use header;\n use procsrv;\n use util::logv;\n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n use util;\n \n use std::io::File;\n@@ -819,7 +818,6 @@ fn check_expected_errors(expected_errors: Vec<errors::ExpectedError> ,\n     }).collect::<Vec<String> >();\n \n     #[cfg(target_os = \"windows\")]\n-    #[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n     fn to_lower( s : &str ) -> String {\n         let i = s.chars();\n         let c : Vec<char> = i.map( |c| {\n@@ -833,7 +831,6 @@ fn check_expected_errors(expected_errors: Vec<errors::ExpectedError> ,\n     }\n \n     #[cfg(target_os = \"windows\")]\n-    #[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n     fn prefix_matches( line : &str, prefix : &str ) -> bool {\n         to_lower(line).as_slice().starts_with(to_lower(prefix).as_slice())\n     }\n@@ -1251,15 +1248,13 @@ fn make_cmdline(_libpath: &str, prog: &str, args: &[String]) -> String {\n }\n \n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n fn make_cmdline(libpath: &str, prog: &str, args: &[String]) -> String {\n     format!(\"{} {} {}\", lib_path_cmd_prefix(libpath), prog, args.connect(\" \"))\n }\n \n // Build the LD_LIBRARY_PATH variable as it would be seen on the command line\n // for diagnostic purposes\n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n fn lib_path_cmd_prefix(path: &str) -> String {\n     format!(\"{}=\\\"{}\\\"\", util::lib_path_env_var(), util::make_new_path(path))\n }"}, {"sha": "22b5600d5bfcc197e61b9d844805e194be1a0c3c", "filename": "src/compiletest/util.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Fcompiletest%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Fcompiletest%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Futil.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -11,7 +11,6 @@\n use common::Config;\n \n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n use std::os::getenv;\n \n /// Conversion table from triple OS name to Rust SYSNAME\n@@ -36,7 +35,6 @@ pub fn get_os(triple: &str) -> &'static str {\n }\n \n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n pub fn make_new_path(path: &str) -> String {\n \n     // Windows just uses PATH as the library search path, so we have to\n@@ -50,11 +48,9 @@ pub fn make_new_path(path: &str) -> String {\n }\n \n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n pub fn lib_path_env_var() -> &'static str { \"PATH\" }\n \n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n pub fn path_div() -> &'static str { \";\" }\n \n pub fn logv(config: &Config, s: String) {"}, {"sha": "f184e07891b9642cd2487cff40ef70eb5c04a744", "filename": "src/etc/mklldeps.py", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Fetc%2Fmklldeps.py", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Fetc%2Fmklldeps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmklldeps.py?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -68,8 +68,6 @@ def run(args):\n     ]\n \n     f.write(\"#[cfg(\" + ', '.join(cfg) + \")]\\n\")\n-    if os == \"windows\": # NOTE: Remove after snapshot\n-        f.write(\"#[cfg(stage0, target_arch = \\\"%s\\\", target_os = \\\"win32\\\")]\\n\" % (arch,))\n \n     version = run([llconfig, '--version']).strip()\n "}, {"sha": "fe217a6d123aa3c84268ed45819dac064410c9a7", "filename": "src/librustdoc/plugins.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustdoc%2Fplugins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustdoc%2Fplugins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fplugins.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -74,7 +74,6 @@ impl PluginManager {\n }\n \n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n fn libname(mut n: String) -> String {\n     n.push_str(\".dll\");\n     n\n@@ -86,8 +85,7 @@ fn libname(mut n: String) -> String {\n     n\n }\n \n-#[cfg(not(stage0), not(target_os=\"windows\"), not(target_os=\"macos\"))]\n-#[cfg(stage0, not(target_os=\"win32\"), not(target_os=\"macos\"))] // NOTE: Remove after snapshot\n+#[cfg(not(target_os=\"windows\"), not(target_os=\"macos\"))]\n fn libname(n: String) -> String {\n     let mut i = String::from_str(\"lib\");\n     i.push_str(n.as_slice());"}, {"sha": "6ac36f8b856b7d93549937cb131837606e640e14", "filename": "src/librustrt/args.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustrt%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustrt%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Fargs.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -148,7 +148,6 @@ mod imp {\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"ios\")]\n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n mod imp {\n     use core::prelude::*;\n     use collections::vec::Vec;"}, {"sha": "a43920d27a763115e0b9203dcb2ae6572945c5d8", "filename": "src/librustrt/libunwind.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustrt%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustrt%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Flibunwind.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -88,7 +88,6 @@ pub type _Unwind_Exception_Cleanup_Fn =\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"freebsd\")]\n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n #[link(name = \"gcc_s\")]\n extern {}\n "}, {"sha": "3190e9f784149a2d0130d6e8cf391cf3c13b7818", "filename": "src/librustrt/stack.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustrt%2Fstack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustrt%2Fstack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Fstack.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -200,7 +200,6 @@ pub unsafe fn record_sp_limit(limit: uint) {\n         asm!(\"movq $0, %fs:112\" :: \"r\"(limit) :: \"volatile\")\n     }\n     #[cfg(target_arch = \"x86_64\", target_os = \"windows\")] #[inline(always)]\n-    #[cfg(stage0, target_arch = \"x86_64\", target_os = \"win32\")] // NOTE: Remove after snapshot\n     unsafe fn target_record_sp_limit(limit: uint) {\n         // see: http://en.wikipedia.org/wiki/Win32_Thread_Information_Block\n         // store this inside of the \"arbitrary data slot\", but double the size\n@@ -229,7 +228,6 @@ pub unsafe fn record_sp_limit(limit: uint) {\n         asm!(\"movl $0, %gs:48\" :: \"r\"(limit) :: \"volatile\")\n     }\n     #[cfg(target_arch = \"x86\", target_os = \"windows\")] #[inline(always)]\n-    #[cfg(stage0, target_arch = \"x86\", target_os = \"win32\")] // NOTE: Remove after snapshot\n     unsafe fn target_record_sp_limit(limit: uint) {\n         // see: http://en.wikipedia.org/wiki/Win32_Thread_Information_Block\n         // store this inside of the \"arbitrary data slot\"\n@@ -283,7 +281,6 @@ pub unsafe fn get_sp_limit() -> uint {\n         return limit;\n     }\n     #[cfg(target_arch = \"x86_64\", target_os = \"windows\")] #[inline(always)]\n-    #[cfg(stage0, target_arch = \"x86_64\", target_os = \"win32\")] // NOTE: Remove after snapshot\n     unsafe fn target_get_sp_limit() -> uint {\n         let limit;\n         asm!(\"movq %gs:0x28, $0\" : \"=r\"(limit) ::: \"volatile\");\n@@ -320,7 +317,6 @@ pub unsafe fn get_sp_limit() -> uint {\n         return limit;\n     }\n     #[cfg(target_arch = \"x86\", target_os = \"windows\")] #[inline(always)]\n-    #[cfg(stage0, target_arch = \"x86\", target_os = \"win32\")] // NOTE: Remove after snapshot\n     unsafe fn target_get_sp_limit() -> uint {\n         let limit;\n         asm!(\"movl %fs:0x14, $0\" : \"=r\"(limit) ::: \"volatile\");"}, {"sha": "08e182a6d6e604845ce4d0eecd0388dcbf55c7b5", "filename": "src/librustrt/unwind.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustrt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustrt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Funwind.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -402,8 +402,11 @@ pub mod eabi {\n     use libunwind as uw;\n     use libc::{c_void, c_int};\n \n+    #[repr(C)]\n     struct EXCEPTION_RECORD;\n+    #[repr(C)]\n     struct CONTEXT;\n+    #[repr(C)]\n     struct DISPATCHER_CONTEXT;\n \n     #[repr(C)]"}, {"sha": "c7c278675c1821c2c5353b7bfa8f67cab29d1946", "filename": "src/librustuv/uvll.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustuv%2Fuvll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibrustuv%2Fuvll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Fuvll.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -733,7 +733,6 @@ extern {}\n extern {}\n \n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n #[link(name = \"ws2_32\")]\n #[link(name = \"psapi\")]\n #[link(name = \"iphlpapi\")]"}, {"sha": "16c00d76c54655957413db569a200e899d0899d7", "filename": "src/libstd/dynamic_lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibstd%2Fdynamic_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibstd%2Fdynamic_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fdynamic_lib.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -279,7 +279,6 @@ pub mod dl {\n }\n \n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n pub mod dl {\n     use c_str::ToCStr;\n     use iter::Iterator;"}, {"sha": "bcdec2e063110ea39a8ba907527141a0120cd2c0", "filename": "src/libstd/os.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -1843,7 +1843,6 @@ pub mod consts {\n }\n \n #[cfg(target_os = \"windows\")]\n-#[cfg(stage0, target_os = \"win32\")] // NOTE: Remove after snapshot\n pub mod consts {\n     pub use os::arch_consts::ARCH;\n "}, {"sha": "30d6b934fa277a06b83e8bd7792bf218f741df18", "filename": "src/test/run-pass/dupe-first-attr.rc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Ftest%2Frun-pass%2Fdupe-first-attr.rc", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Ftest%2Frun-pass%2Fdupe-first-attr.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdupe-first-attr.rc?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -18,7 +18,6 @@ mod hello;\n mod hello;\n \n #[cfg(target_os = \"windows\")]\n-/* NOTE: Remove after snapshot */#[cfg(stage0, target_os = \"win32\")]\n mod hello;\n \n #[cfg(target_os = \"freebsd\")]"}, {"sha": "4873dc13c40c912d5e3d59b557b13771e3fe8556", "filename": "src/test/run-pass/intrinsic-alignment.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -43,7 +43,6 @@ mod m {\n }\n \n #[cfg(target_os = \"windows\")]\n-/* NOTE: Remove after snapshot */#[cfg(stage0, target_os = \"win32\")]\n mod m {\n     #[main]\n     #[cfg(target_arch = \"x86\")]"}, {"sha": "8bd7a499de66288734fd4903019d2206a0b16b54", "filename": "src/test/run-pass/rec-align-u64.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c994a1237d1c79811920cf852d0b801b8518336/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c994a1237d1c79811920cf852d0b801b8518336/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frec-align-u64.rs?ref=8c994a1237d1c79811920cf852d0b801b8518336", "patch": "@@ -56,7 +56,6 @@ mod m {\n }\n \n #[cfg(target_os = \"windows\")]\n-/* NOTE: Remove after snapshot */#[cfg(stage0, target_os = \"win32\")]\n mod m {\n     #[cfg(target_arch = \"x86\")]\n     pub mod m {"}]}