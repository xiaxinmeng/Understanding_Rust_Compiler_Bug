{"sha": "b239611451e024f0323a7057e622564e72470f91", "node_id": "C_kwDOAAsO6NoAKGIyMzk2MTE0NTFlMDI0ZjAzMjNhNzA1N2U2MjI1NjRlNzI0NzBmOTE", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-05-20T18:29:45Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-06-07T21:29:07Z"}, "message": "Pass origin down to impl_trait_ty_to_ty", "tree": {"sha": "ab87266fe31b3d98f28e146bef99be228557990d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab87266fe31b3d98f28e146bef99be228557990d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b239611451e024f0323a7057e622564e72470f91", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmKfwyMACgkQgTGiTgx5\n76+PbA//T7AomT4kmtSaplpAtb5iPo+o/hCB0P3+0Ff/frliQhBr0YlIe0CJlewr\nejGU8v96FTclJg7nJOEA0RStugXADSg8j56sVTQ+/ql5U5PRnheq1HfJ/YncmJ6m\nfGsgxbBgTdIzrWYSrbUKTfq150qQeUzZme6sFno/PWABnwP1L4ptHDnsxwFyUhd/\nQbywwL7jyzYBKfDDN7vA/RNnzs03SPa6hCWOfjnHGys/1SnqH7B6eBIG331E23Fb\nRXdtN5+a+gz6aOdeOdFMNBR8lx97QjAB5R89BmdK9HKiHKYDYhiieyxaApXIpgUR\nJdwnz/Dm0iTehZbcgxSk0tR5UOQldCWvik4yNt9RXY6MBfTpvAkhi+ypZgt1eZgs\n0T5zWFordiAW1WctPbHokqlR5o5RcF5oPZmuc6P6v3M15qOP/iTFMVq03J1YEhBj\ns3EFuU5jOD9CsegFpA/kCxq8k4FvlnZMKaZdViIcLZyk/S4MNMj2QtdmEYKBqgJu\nONAG+LWo2/EgBYp6FBZYJjuksuscIwK9/JpUIzYLRYG+g9NhK/W3vwDSIXWzCHZ1\nLKsce2CBG926/3fAvlJ0bmLyr9eaIAXg7ahkRkVviaAWzLhg6cZilAJj38QspyaA\n6w9o4GWgRRlT5wBvfM26HnA+uxH4mzO5z+b4pIch02Byd1XbT0c=\n=NiIh\n-----END PGP SIGNATURE-----", "payload": "tree ab87266fe31b3d98f28e146bef99be228557990d\nparent 1e6ed67d373f2bbf3c78e9fef8f9b6eed1edeb14\nauthor Santiago Pastorino <spastorino@gmail.com> 1653071385 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1654637347 -0300\n\nPass origin down to impl_trait_ty_to_ty\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b239611451e024f0323a7057e622564e72470f91", "html_url": "https://github.com/rust-lang/rust/commit/b239611451e024f0323a7057e622564e72470f91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b239611451e024f0323a7057e622564e72470f91/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e6ed67d373f2bbf3c78e9fef8f9b6eed1edeb14", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e6ed67d373f2bbf3c78e9fef8f9b6eed1edeb14", "html_url": "https://github.com/rust-lang/rust/commit/1e6ed67d373f2bbf3c78e9fef8f9b6eed1edeb14"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "c766b217c461bad6368772c1214a15d7e18c4550", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b239611451e024f0323a7057e622564e72470f91/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b239611451e024f0323a7057e622564e72470f91/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=b239611451e024f0323a7057e622564e72470f91", "patch": "@@ -23,7 +23,7 @@ use rustc_hir::def::{CtorOf, DefKind, Namespace, Res};\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_hir::intravisit::{walk_generics, Visitor as _};\n use rustc_hir::lang_items::LangItem;\n-use rustc_hir::{GenericArg, GenericArgs};\n+use rustc_hir::{GenericArg, GenericArgs, OpaqueTyOrigin};\n use rustc_middle::middle::stability::AllowUnstable;\n use rustc_middle::ty::subst::{self, GenericArgKind, InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::GenericParamDefKind;\n@@ -2628,16 +2628,9 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 let def_id = item_id.def_id.to_def_id();\n \n                 match opaque_ty.kind {\n-                    hir::ItemKind::OpaqueTy(hir::OpaqueTy { origin, .. }) => self\n-                        .impl_trait_ty_to_ty(\n-                            def_id,\n-                            lifetimes,\n-                            matches!(\n-                                origin,\n-                                hir::OpaqueTyOrigin::FnReturn(..)\n-                                    | hir::OpaqueTyOrigin::AsyncFn(..)\n-                            ),\n-                        ),\n+                    hir::ItemKind::OpaqueTy(hir::OpaqueTy { origin, .. }) => {\n+                        self.impl_trait_ty_to_ty(def_id, lifetimes, origin)\n+                    }\n                     ref i => bug!(\"`impl Trait` pointed to non-opaque type?? {:#?}\", i),\n                 }\n             }\n@@ -2706,7 +2699,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         &self,\n         def_id: DefId,\n         lifetimes: &[hir::GenericArg<'_>],\n-        replace_parent_lifetimes: bool,\n+        origin: OpaqueTyOrigin,\n     ) -> Ty<'tcx> {\n         debug!(\"impl_trait_ty_to_ty(def_id={:?}, lifetimes={:?})\", def_id, lifetimes);\n         let tcx = self.tcx();\n@@ -2736,7 +2729,12 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     // For `impl Trait` in the types of statics, constants,\n                     // locals and type aliases. These capture all parent\n                     // lifetimes, so they can use their identity subst.\n-                    GenericParamDefKind::Lifetime if replace_parent_lifetimes => {\n+                    GenericParamDefKind::Lifetime\n+                        if matches!(\n+                            origin,\n+                            hir::OpaqueTyOrigin::FnReturn(..) | hir::OpaqueTyOrigin::AsyncFn(..)\n+                        ) =>\n+                    {\n                         tcx.lifetimes.re_static.into()\n                     }\n                     _ => tcx.mk_param_from_def(param),"}]}