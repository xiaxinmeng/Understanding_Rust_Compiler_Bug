{"sha": "7e6d97bc39b1a4169db9f139c24abaac8f94048e", "node_id": "C_kwDOAAsO6NoAKDdlNmQ5N2JjMzliMWE0MTY5ZGI5ZjEzOWMyNGFiYWFjOGY5NDA0OGU", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad.borowski@kontomatik.com", "date": "2022-01-11T18:31:36Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad.borowski@kontomatik.com", "date": "2022-01-11T18:33:46Z"}, "message": "Inline std::os::unix::ffi::OsStringExt methods", "tree": {"sha": "76b32eb3578889116f65bde04f90256738a7fd65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76b32eb3578889116f65bde04f90256738a7fd65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e6d97bc39b1a4169db9f139c24abaac8f94048e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e6d97bc39b1a4169db9f139c24abaac8f94048e", "html_url": "https://github.com/rust-lang/rust/commit/7e6d97bc39b1a4169db9f139c24abaac8f94048e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e6d97bc39b1a4169db9f139c24abaac8f94048e/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a7fb971c939d268abdbd0963cd45d046442f7af", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a7fb971c939d268abdbd0963cd45d046442f7af", "html_url": "https://github.com/rust-lang/rust/commit/4a7fb971c939d268abdbd0963cd45d046442f7af"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "650f712bc6eef979f7170175eaa0b294d42c58b8", "filename": "library/std/src/os/unix/ffi/os_str.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e6d97bc39b1a4169db9f139c24abaac8f94048e/library%2Fstd%2Fsrc%2Fos%2Funix%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e6d97bc39b1a4169db9f139c24abaac8f94048e/library%2Fstd%2Fsrc%2Fos%2Funix%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fffi%2Fos_str.rs?ref=7e6d97bc39b1a4169db9f139c24abaac8f94048e", "patch": "@@ -28,9 +28,11 @@ pub trait OsStringExt: Sealed {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl OsStringExt for OsString {\n+    #[inline]\n     fn from_vec(vec: Vec<u8>) -> OsString {\n         FromInner::from_inner(Buf { inner: vec })\n     }\n+    #[inline]\n     fn into_vec(self) -> Vec<u8> {\n         self.into_inner().inner\n     }"}]}