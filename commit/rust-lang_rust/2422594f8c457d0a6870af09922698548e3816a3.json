{"sha": "2422594f8c457d0a6870af09922698548e3816a3", "node_id": "C_kwDOAAsO6NoAKDI0MjI1OTRmOGM0NTdkMGE2ODcwYWYwOTkyMjY5ODU0OGUzODE2YTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-26T13:41:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-26T13:41:44Z"}, "message": "Auto merge of #10831 - disco07:master, r=flip1995\n\nFix redundant_pattern_match on matches! macro\n\nThis PR solve this issue https://github.com/rust-lang/rust-clippy/issues/10803\nr? `@flip1995`\n\nchangelog: none", "tree": {"sha": "a4ba5ff2b4397bf514babc0104ee50a4c232f948", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4ba5ff2b4397bf514babc0104ee50a4c232f948"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2422594f8c457d0a6870af09922698548e3816a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2422594f8c457d0a6870af09922698548e3816a3", "html_url": "https://github.com/rust-lang/rust/commit/2422594f8c457d0a6870af09922698548e3816a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2422594f8c457d0a6870af09922698548e3816a3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05740adf6ec2c79c9379e6f9ce804bd7b2567f57", "url": "https://api.github.com/repos/rust-lang/rust/commits/05740adf6ec2c79c9379e6f9ce804bd7b2567f57", "html_url": "https://github.com/rust-lang/rust/commit/05740adf6ec2c79c9379e6f9ce804bd7b2567f57"}, {"sha": "0b507c6f0434ced76da4bf068551b93b6df47a5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b507c6f0434ced76da4bf068551b93b6df47a5f", "html_url": "https://github.com/rust-lang/rust/commit/0b507c6f0434ced76da4bf068551b93b6df47a5f"}], "stats": {"total": 173, "additions": 125, "deletions": 48}, "files": [{"sha": "0d91051632a185244a0ec66829abe6f0d6fc931f", "filename": "clippy_lints/src/matches/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2422594f8c457d0a6870af09922698548e3816a3/clippy_lints%2Fsrc%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2422594f8c457d0a6870af09922698548e3816a3/clippy_lints%2Fsrc%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fmod.rs?ref=2422594f8c457d0a6870af09922698548e3816a3", "patch": "@@ -25,7 +25,7 @@ mod wild_in_or_pats;\n \n use clippy_utils::msrvs::{self, Msrv};\n use clippy_utils::source::{snippet_opt, walk_span_to_context};\n-use clippy_utils::{higher, in_constant, is_span_match, tokenize_with_text};\n+use clippy_utils::{higher, in_constant, is_direct_expn_of, is_span_match, tokenize_with_text};\n use rustc_hir::{Arm, Expr, ExprKind, Local, MatchSource, Pat};\n use rustc_lexer::TokenKind;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n@@ -974,12 +974,16 @@ impl_lint_pass!(Matches => [\n \n impl<'tcx> LateLintPass<'tcx> for Matches {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n-        if in_external_macro(cx.sess(), expr.span) {\n+        if is_direct_expn_of(expr.span, \"matches\").is_none() && in_external_macro(cx.sess(), expr.span) {\n             return;\n         }\n         let from_expansion = expr.span.from_expansion();\n \n         if let ExprKind::Match(ex, arms, source) = expr.kind {\n+            if is_direct_expn_of(expr.span, \"matches\").is_some() {\n+                redundant_pattern_match::check_match(cx, expr, ex, arms);\n+            }\n+\n             if source == MatchSource::Normal && !is_span_match(cx, expr.span) {\n                 return;\n             }"}, {"sha": "479cfd835126c0459a8919bf1827a1643c4e6545", "filename": "clippy_lints/src/matches/redundant_pattern_match.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2422594f8c457d0a6870af09922698548e3816a3/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2422594f8c457d0a6870af09922698548e3816a3/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs?ref=2422594f8c457d0a6870af09922698548e3816a3", "patch": "@@ -1,10 +1,10 @@\n use super::REDUNDANT_PATTERN_MATCHING;\n-use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::diagnostics::{span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::{snippet, walk_span_to_context};\n use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::{is_type_diagnostic_item, needs_ordered_drop};\n use clippy_utils::visitors::any_temporaries_need_ordered_drop;\n-use clippy_utils::{higher, is_trait_method};\n+use clippy_utils::{higher, is_expn_of, is_trait_method};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n@@ -190,24 +190,19 @@ pub(super) fn check_match<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, op\n         let node_pair = (&arms[0].pat.kind, &arms[1].pat.kind);\n \n         if let Some(good_method) = found_good_method(cx, arms, node_pair) {\n-            let span = expr.span.to(op.span);\n+            let span = is_expn_of(expr.span, \"matches\").unwrap_or(expr.span.to(op.span));\n             let result_expr = match &op.kind {\n                 ExprKind::AddrOf(_, _, borrowed) => borrowed,\n                 _ => op,\n             };\n-            span_lint_and_then(\n+            span_lint_and_sugg(\n                 cx,\n                 REDUNDANT_PATTERN_MATCHING,\n-                expr.span,\n+                span,\n                 &format!(\"redundant pattern matching, consider using `{good_method}`\"),\n-                |diag| {\n-                    diag.span_suggestion(\n-                        span,\n-                        \"try this\",\n-                        format!(\"{}.{good_method}\", snippet(cx, result_expr.span, \"_\")),\n-                        Applicability::MaybeIncorrect, // snippet\n-                    );\n-                },\n+                \"try this\",\n+                format!(\"{}.{good_method}\", snippet(cx, result_expr.span, \"_\")),\n+                Applicability::MachineApplicable,\n             );\n         }\n     }"}, {"sha": "dae931541d4543b8650f6cf3a56eed9d40c3a9bd", "filename": "tests/ui/redundant_pattern_matching_option.fixed", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_option.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_option.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.fixed?ref=2422594f8c457d0a6870af09922698548e3816a3", "patch": "@@ -47,6 +47,7 @@ fn main() {\n \n     issue6067();\n     issue10726();\n+    issue10803();\n \n     let _ = if gen_opt().is_some() {\n         1\n@@ -107,3 +108,14 @@ fn issue10726() {\n         _ => false,\n     };\n }\n+\n+fn issue10803() {\n+    let x = Some(42);\n+\n+    let _ = x.is_some();\n+\n+    let _ = x.is_none();\n+\n+    // Don't lint\n+    let _ = matches!(x, Some(16));\n+}"}, {"sha": "3f2fa3f53ce992323c9e12e0b660463b8262f70d", "filename": "tests/ui/redundant_pattern_matching_option.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.rs?ref=2422594f8c457d0a6870af09922698548e3816a3", "patch": "@@ -56,6 +56,7 @@ fn main() {\n \n     issue6067();\n     issue10726();\n+    issue10803();\n \n     let _ = if let Some(_) = gen_opt() {\n         1\n@@ -134,3 +135,14 @@ fn issue10726() {\n         _ => false,\n     };\n }\n+\n+fn issue10803() {\n+    let x = Some(42);\n+\n+    let _ = matches!(x, Some(_));\n+\n+    let _ = matches!(x, None);\n+\n+    // Don't lint\n+    let _ = matches!(x, Some(16));\n+}"}, {"sha": "93760ce97a8f6260657def44718d54bea44474e4", "filename": "tests/ui/redundant_pattern_matching_option.stderr", "status": "modified", "additions": 28, "deletions": 16, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.stderr?ref=2422594f8c457d0a6870af09922698548e3816a3", "patch": "@@ -77,49 +77,49 @@ LL |     let _ = if let Some(_) = opt { true } else { false };\n    |             -------^^^^^^^------ help: try this: `if opt.is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:60:20\n+  --> $DIR/redundant_pattern_matching_option.rs:61:20\n    |\n LL |     let _ = if let Some(_) = gen_opt() {\n    |             -------^^^^^^^------------ help: try this: `if gen_opt().is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:62:19\n+  --> $DIR/redundant_pattern_matching_option.rs:63:19\n    |\n LL |     } else if let None = gen_opt() {\n    |            -------^^^^------------ help: try this: `if gen_opt().is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:68:12\n+  --> $DIR/redundant_pattern_matching_option.rs:69:12\n    |\n LL |     if let Some(..) = gen_opt() {}\n    |     -------^^^^^^^^------------ help: try this: `if gen_opt().is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:83:12\n+  --> $DIR/redundant_pattern_matching_option.rs:84:12\n    |\n LL |     if let Some(_) = Some(42) {}\n    |     -------^^^^^^^----------- help: try this: `if Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:85:12\n+  --> $DIR/redundant_pattern_matching_option.rs:86:12\n    |\n LL |     if let None = None::<()> {}\n    |     -------^^^^------------- help: try this: `if None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:87:15\n+  --> $DIR/redundant_pattern_matching_option.rs:88:15\n    |\n LL |     while let Some(_) = Some(42) {}\n    |     ----------^^^^^^^----------- help: try this: `while Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:89:15\n+  --> $DIR/redundant_pattern_matching_option.rs:90:15\n    |\n LL |     while let None = None::<()> {}\n    |     ----------^^^^------------- help: try this: `while None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:91:5\n+  --> $DIR/redundant_pattern_matching_option.rs:92:5\n    |\n LL | /     match Some(42) {\n LL | |         Some(_) => true,\n@@ -128,7 +128,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:96:5\n+  --> $DIR/redundant_pattern_matching_option.rs:97:5\n    |\n LL | /     match None::<()> {\n LL | |         Some(_) => false,\n@@ -137,19 +137,19 @@ LL | |     };\n    | |_____^ help: try this: `None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:104:12\n+  --> $DIR/redundant_pattern_matching_option.rs:105:12\n    |\n LL |     if let None = *(&None::<()>) {}\n    |     -------^^^^----------------- help: try this: `if (&None::<()>).is_none()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:105:12\n+  --> $DIR/redundant_pattern_matching_option.rs:106:12\n    |\n LL |     if let None = *&None::<()> {}\n    |     -------^^^^--------------- help: try this: `if (&None::<()>).is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:111:5\n+  --> $DIR/redundant_pattern_matching_option.rs:112:5\n    |\n LL | /     match x {\n LL | |         Some(_) => true,\n@@ -158,7 +158,7 @@ LL | |     };\n    | |_____^ help: try this: `x.is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:116:5\n+  --> $DIR/redundant_pattern_matching_option.rs:117:5\n    |\n LL | /     match x {\n LL | |         None => true,\n@@ -167,7 +167,7 @@ LL | |     };\n    | |_____^ help: try this: `x.is_none()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:121:5\n+  --> $DIR/redundant_pattern_matching_option.rs:122:5\n    |\n LL | /     match x {\n LL | |         Some(_) => false,\n@@ -176,13 +176,25 @@ LL | |     };\n    | |_____^ help: try this: `x.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:126:5\n+  --> $DIR/redundant_pattern_matching_option.rs:127:5\n    |\n LL | /     match x {\n LL | |         None => false,\n LL | |         _ => true,\n LL | |     };\n    | |_____^ help: try this: `x.is_some()`\n \n-error: aborting due to 26 previous errors\n+error: redundant pattern matching, consider using `is_some()`\n+  --> $DIR/redundant_pattern_matching_option.rs:142:13\n+   |\n+LL |     let _ = matches!(x, Some(_));\n+   |             ^^^^^^^^^^^^^^^^^^^^ help: try this: `x.is_some()`\n+\n+error: redundant pattern matching, consider using `is_none()`\n+  --> $DIR/redundant_pattern_matching_option.rs:144:13\n+   |\n+LL |     let _ = matches!(x, None);\n+   |             ^^^^^^^^^^^^^^^^^ help: try this: `x.is_none()`\n+\n+error: aborting due to 28 previous errors\n "}, {"sha": "d77a2af761642cf72a99d9c2839160321c823937", "filename": "tests/ui/redundant_pattern_matching_result.fixed", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_result.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_result.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.fixed?ref=2422594f8c457d0a6870af09922698548e3816a3", "patch": "@@ -44,6 +44,7 @@ fn main() {\n     issue6067();\n     issue6065();\n     issue10726();\n+    issue10803();\n \n     let _ = if gen_res().is_ok() {\n         1\n@@ -133,3 +134,17 @@ fn issue10726() {\n         _ => true,\n     };\n }\n+\n+fn issue10803() {\n+    let x: Result<i32, i32> = Ok(42);\n+\n+    let _ = x.is_ok();\n+\n+    let _ = x.is_err();\n+\n+    // Don't lint\n+    let _ = matches!(x, Ok(16));\n+\n+    // Don't lint\n+    let _ = matches!(x, Err(16));\n+}"}, {"sha": "aa884ac6bb1ee2136afcb344c5cd2734c963b935", "filename": "tests/ui/redundant_pattern_matching_result.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.rs?ref=2422594f8c457d0a6870af09922698548e3816a3", "patch": "@@ -56,6 +56,7 @@ fn main() {\n     issue6067();\n     issue6065();\n     issue10726();\n+    issue10803();\n \n     let _ = if let Ok(_) = gen_res() {\n         1\n@@ -163,3 +164,17 @@ fn issue10726() {\n         _ => true,\n     };\n }\n+\n+fn issue10803() {\n+    let x: Result<i32, i32> = Ok(42);\n+\n+    let _ = matches!(x, Ok(_));\n+\n+    let _ = matches!(x, Err(_));\n+\n+    // Don't lint\n+    let _ = matches!(x, Ok(16));\n+\n+    // Don't lint\n+    let _ = matches!(x, Err(16));\n+}"}, {"sha": "b462f7f41b9cc71a70907b950c6b3dc1c41c18ad", "filename": "tests/ui/redundant_pattern_matching_result.stderr", "status": "modified", "additions": 29, "deletions": 17, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2422594f8c457d0a6870af09922698548e3816a3/tests%2Fui%2Fredundant_pattern_matching_result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.stderr?ref=2422594f8c457d0a6870af09922698548e3816a3", "patch": "@@ -73,67 +73,67 @@ LL |     let _ = if let Ok(_) = Ok::<usize, ()>(4) { true } else { false };\n    |             -------^^^^^--------------------- help: try this: `if Ok::<usize, ()>(4).is_ok()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:60:20\n+  --> $DIR/redundant_pattern_matching_result.rs:61:20\n    |\n LL |     let _ = if let Ok(_) = gen_res() {\n    |             -------^^^^^------------ help: try this: `if gen_res().is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:62:19\n+  --> $DIR/redundant_pattern_matching_result.rs:63:19\n    |\n LL |     } else if let Err(_) = gen_res() {\n    |            -------^^^^^^------------ help: try this: `if gen_res().is_err()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_result.rs:85:19\n+  --> $DIR/redundant_pattern_matching_result.rs:86:19\n    |\n LL |         while let Some(_) = r#try!(result_opt()) {}\n    |         ----------^^^^^^^----------------------- help: try this: `while r#try!(result_opt()).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_result.rs:86:16\n+  --> $DIR/redundant_pattern_matching_result.rs:87:16\n    |\n LL |         if let Some(_) = r#try!(result_opt()) {}\n    |         -------^^^^^^^----------------------- help: try this: `if r#try!(result_opt()).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_result.rs:92:12\n+  --> $DIR/redundant_pattern_matching_result.rs:93:12\n    |\n LL |     if let Some(_) = m!() {}\n    |     -------^^^^^^^------- help: try this: `if m!().is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_result.rs:93:15\n+  --> $DIR/redundant_pattern_matching_result.rs:94:15\n    |\n LL |     while let Some(_) = m!() {}\n    |     ----------^^^^^^^------- help: try this: `while m!().is_some()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:111:12\n+  --> $DIR/redundant_pattern_matching_result.rs:112:12\n    |\n LL |     if let Ok(_) = Ok::<i32, i32>(42) {}\n    |     -------^^^^^--------------------- help: try this: `if Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:113:12\n+  --> $DIR/redundant_pattern_matching_result.rs:114:12\n    |\n LL |     if let Err(_) = Err::<i32, i32>(42) {}\n    |     -------^^^^^^---------------------- help: try this: `if Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:115:15\n+  --> $DIR/redundant_pattern_matching_result.rs:116:15\n    |\n LL |     while let Ok(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:117:15\n+  --> $DIR/redundant_pattern_matching_result.rs:118:15\n    |\n LL |     while let Err(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:119:5\n+  --> $DIR/redundant_pattern_matching_result.rs:120:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n LL | |         Ok(_) => true,\n@@ -142,7 +142,7 @@ LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:124:5\n+  --> $DIR/redundant_pattern_matching_result.rs:125:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n LL | |         Ok(_) => false,\n@@ -151,7 +151,7 @@ LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:134:5\n+  --> $DIR/redundant_pattern_matching_result.rs:135:5\n    |\n LL | /     match x {\n LL | |         Ok(_) => true,\n@@ -160,7 +160,7 @@ LL | |     };\n    | |_____^ help: try this: `x.is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:139:5\n+  --> $DIR/redundant_pattern_matching_result.rs:140:5\n    |\n LL | /     match x {\n LL | |         Ok(_) => false,\n@@ -169,7 +169,7 @@ LL | |     };\n    | |_____^ help: try this: `x.is_err()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:144:5\n+  --> $DIR/redundant_pattern_matching_result.rs:145:5\n    |\n LL | /     match x {\n LL | |         Err(_) => true,\n@@ -178,13 +178,25 @@ LL | |     };\n    | |_____^ help: try this: `x.is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:149:5\n+  --> $DIR/redundant_pattern_matching_result.rs:150:5\n    |\n LL | /     match x {\n LL | |         Err(_) => false,\n LL | |         _ => true,\n LL | |     };\n    | |_____^ help: try this: `x.is_ok()`\n \n-error: aborting due to 26 previous errors\n+error: redundant pattern matching, consider using `is_ok()`\n+  --> $DIR/redundant_pattern_matching_result.rs:171:13\n+   |\n+LL |     let _ = matches!(x, Ok(_));\n+   |             ^^^^^^^^^^^^^^^^^^ help: try this: `x.is_ok()`\n+\n+error: redundant pattern matching, consider using `is_err()`\n+  --> $DIR/redundant_pattern_matching_result.rs:173:13\n+   |\n+LL |     let _ = matches!(x, Err(_));\n+   |             ^^^^^^^^^^^^^^^^^^^ help: try this: `x.is_err()`\n+\n+error: aborting due to 28 previous errors\n "}]}