{"sha": "d754722a04b99fdcae0fd97fa2a4395521145ef2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NTQ3MjJhMDRiOTlmZGNhZTBmZDk3ZmEyYTQzOTU1MjExNDVlZjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-03-31T18:26:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-03-31T18:26:20Z"}, "message": "Auto merge of #23678 - richo:check-flightcheck, r=alexcrichton\n\nRationale for this, is that I lurked `ulimit -c unlimited` into my .profile to debug an unrelated crash, that I kept forgetting to set before hand. I then ran the test suite and discovered that I had 150 gigs of core dumps in `/cores`.\r\n\r\nVery open to another approach, or to setting the limit to something higher than 0, but I think it would be nice if the build system tried to save you from yourself here.", "tree": {"sha": "41d2bff3aec8a949d71d74d566da27627996cabb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41d2bff3aec8a949d71d74d566da27627996cabb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d754722a04b99fdcae0fd97fa2a4395521145ef2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d754722a04b99fdcae0fd97fa2a4395521145ef2", "html_url": "https://github.com/rust-lang/rust/commit/d754722a04b99fdcae0fd97fa2a4395521145ef2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d754722a04b99fdcae0fd97fa2a4395521145ef2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80bf31dd514055177b22c3dc66836d39eb5b1648", "url": "https://api.github.com/repos/rust-lang/rust/commits/80bf31dd514055177b22c3dc66836d39eb5b1648", "html_url": "https://github.com/rust-lang/rust/commit/80bf31dd514055177b22c3dc66836d39eb5b1648"}, {"sha": "4af204ddee0fbb61eddf9579ede9f0214c942ba0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4af204ddee0fbb61eddf9579ede9f0214c942ba0", "html_url": "https://github.com/rust-lang/rust/commit/4af204ddee0fbb61eddf9579ede9f0214c942ba0"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "48ebe4e540e3d008ea24f838939a0e23c06a8122", "filename": "mk/tests.mk", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d754722a04b99fdcae0fd97fa2a4395521145ef2/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d754722a04b99fdcae0fd97fa2a4395521145ef2/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=d754722a04b99fdcae0fd97fa2a4395521145ef2", "patch": "@@ -166,7 +166,7 @@ $(foreach file,$(wildcard $(S)src/doc/trpl/*.md), \\\n ######################################################################\n \n # The main testing target. Tests lots of stuff.\n-check: cleantmptestlogs cleantestlibs all check-stage2 tidy\n+check: check-sanitycheck cleantmptestlogs cleantestlibs all check-stage2 tidy\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/check-summary.py tmp/*.log\n \n # As above but don't bother running tidy.\n@@ -193,6 +193,11 @@ check-docs: cleantestlibs cleantmptestlogs check-stage2-docs\n # Not run as part of the normal test suite, but tested by bors on checkin.\n check-secondary: check-build-compiletest check-build-lexer-verifier check-lexer check-pretty\n \n+.PHONY: check-sanitycheck\n+\n+check-sanitycheck:\n+\t$(Q)$(CFG_PYTHON) $(S)src/etc/check-sanitycheck.py\n+\n # check + check-secondary.\n #\n # Issue #17883: build check-secondary first so hidden dependencies in"}, {"sha": "0d9c430ec3acd9c5fcb3f7c96da0886bf8c740fc", "filename": "src/etc/check-sanitycheck.py", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/d754722a04b99fdcae0fd97fa2a4395521145ef2/src%2Fetc%2Fcheck-sanitycheck.py", "raw_url": "https://github.com/rust-lang/rust/raw/d754722a04b99fdcae0fd97fa2a4395521145ef2/src%2Fetc%2Fcheck-sanitycheck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcheck-sanitycheck.py?ref=d754722a04b99fdcae0fd97fa2a4395521145ef2", "patch": "@@ -0,0 +1,54 @@\n+#!/usr/bin/env python\n+#\n+# Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+import os\n+import sys\n+import functools\n+import resource\n+\n+STATUS = 0\n+\n+\n+def error_unless_permitted(env_var, message):\n+    global STATUS\n+    if not os.getenv(env_var):\n+        sys.stderr.write(message)\n+        STATUS = 1\n+\n+\n+def only_on(platforms):\n+    def decorator(func):\n+        @functools.wraps(func)\n+        def inner():\n+            if any(map(lambda x: sys.platform.startswith(x), platforms)):\n+                func()\n+        return inner\n+    return decorator\n+\n+\n+@only_on(('linux', 'darwin', 'freebsd', 'openbsd'))\n+def check_rlimit_core():\n+    soft, hard = resource.getrlimit(resource.RLIMIT_CORE)\n+    if soft > 0:\n+        error_unless_permitted('ALLOW_NONZERO_RLIMIT_CORE', \"\"\"\\\n+RLIMIT_CORE is set to a nonzero value (%d). During debuginfo, the test suite\n+will segfault many rustc's, creating many potentially large core files.\n+set ALLOW_NONZERO_RLIMIT_CORE to ignore this warning\n+\"\"\" % (soft))\n+\n+\n+def main():\n+    check_rlimit_core()\n+\n+if __name__ == '__main__':\n+    main()\n+    sys.exit(STATUS)"}]}