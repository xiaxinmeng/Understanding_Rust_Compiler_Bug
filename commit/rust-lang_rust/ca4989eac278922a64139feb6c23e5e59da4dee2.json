{"sha": "ca4989eac278922a64139feb6c23e5e59da4dee2", "node_id": "C_kwDOAAsO6NoAKGNhNDk4OWVhYzI3ODkyMmE2NDEzOWZlYjZjMjNlNWU1OWRhNGRlZTI", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-04-04T12:45:09Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-12-16T12:57:22Z"}, "message": "SplitInternal: always set `finished` in `get_end`", "tree": {"sha": "3c625ee255fba23f91966c68b2799a6dde3d13e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c625ee255fba23f91966c68b2799a6dde3d13e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca4989eac278922a64139feb6c23e5e59da4dee2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca4989eac278922a64139feb6c23e5e59da4dee2", "html_url": "https://github.com/rust-lang/rust/commit/ca4989eac278922a64139feb6c23e5e59da4dee2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca4989eac278922a64139feb6c23e5e59da4dee2/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5351ad4dcd9f3d73241b2acbfc6b4631da845c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5351ad4dcd9f3d73241b2acbfc6b4631da845c5", "html_url": "https://github.com/rust-lang/rust/commit/c5351ad4dcd9f3d73241b2acbfc6b4631da845c5"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "21278c99316ce5f6f04a356ddf06e1952272e7e8", "filename": "library/core/src/str/iter.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ca4989eac278922a64139feb6c23e5e59da4dee2/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca4989eac278922a64139feb6c23e5e59da4dee2/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs?ref=ca4989eac278922a64139feb6c23e5e59da4dee2", "patch": "@@ -585,16 +585,17 @@ where\n impl<'a, P: Pattern<'a>> SplitInternal<'a, P> {\n     #[inline]\n     fn get_end(&mut self) -> Option<&'a str> {\n-        if !self.finished && (self.allow_trailing_empty || self.end - self.start > 0) {\n+        if !self.finished {\n             self.finished = true;\n-            // SAFETY: `self.start` and `self.end` always lie on unicode boundaries.\n-            unsafe {\n-                let string = self.matcher.haystack().get_unchecked(self.start..self.end);\n-                Some(string)\n+\n+            if self.allow_trailing_empty || self.end - self.start > 0 {\n+                // SAFETY: `self.start` and `self.end` always lie on unicode boundaries.\n+                let string = unsafe { self.matcher.haystack().get_unchecked(self.start..self.end) };\n+                return Some(string);\n             }\n-        } else {\n-            None\n         }\n+\n+        None\n     }\n \n     #[inline]"}]}