{"sha": "dae24073687fca6682c351379d41d61397e7c329", "node_id": "C_kwDOAAsO6NoAKGRhZTI0MDczNjg3ZmNhNjY4MmMzNTEzNzlkNDFkNjEzOTdlN2MzMjk", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-11-05T17:11:08Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-11-05T17:40:26Z"}, "message": "resolve variables before erasing lifetimes", "tree": {"sha": "456c3f91eb2f143aef1c149a9c30afe248ab6435", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/456c3f91eb2f143aef1c149a9c30afe248ab6435"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dae24073687fca6682c351379d41d61397e7c329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dae24073687fca6682c351379d41d61397e7c329", "html_url": "https://github.com/rust-lang/rust/commit/dae24073687fca6682c351379d41d61397e7c329", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dae24073687fca6682c351379d41d61397e7c329/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6000b4844a954879df51dafe95dc88239cb485a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6000b4844a954879df51dafe95dc88239cb485a5", "html_url": "https://github.com/rust-lang/rust/commit/6000b4844a954879df51dafe95dc88239cb485a5"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "5e687a7063ce476b4b699add9886a02d6aac6bbc", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dae24073687fca6682c351379d41d61397e7c329/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dae24073687fca6682c351379d41d61397e7c329/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=dae24073687fca6682c351379d41d61397e7c329", "patch": "@@ -1585,9 +1585,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         unevaluated: ty::Unevaluated<'tcx>,\n         span: Option<Span>,\n     ) -> EvalToConstValueResult<'tcx> {\n-        let param_env = self.tcx.erase_regions(param_env);\n         let mut substs = unevaluated.substs(self.tcx);\n-        substs = self.tcx.erase_regions(substs);\n         substs = self.resolve_vars_if_possible(substs);\n \n         // Postpone the evaluation of constants whose substs depend on inference\n@@ -1596,15 +1594,18 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             return Err(ErrorHandled::TooGeneric);\n         }\n \n+        let param_env_erased = self.tcx.erase_regions(param_env);\n+        let substs_erased = self.tcx.erase_regions(substs);\n+\n         let unevaluated = ty::Unevaluated {\n             def: unevaluated.def,\n-            substs_: Some(substs),\n+            substs_: Some(substs_erased),\n             promoted: unevaluated.promoted,\n         };\n \n         // The return value is the evaluated value which doesn't contain any reference to inference\n         // variables, thus we don't need to substitute back the original values.\n-        self.tcx.const_eval_resolve(param_env, unevaluated, span)\n+        self.tcx.const_eval_resolve(param_env_erased, unevaluated, span)\n     }\n \n     /// If `typ` is a type variable of some kind, resolve it one level"}]}