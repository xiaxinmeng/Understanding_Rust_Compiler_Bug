{"sha": "d7a4dd10741d1e6e3526adb59d740e6a6faea7d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3YTRkZDEwNzQxZDFlNmUzNTI2YWRiNTlkNzQwZTZhNmZhZWE3ZDk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-08T23:15:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-08T23:15:59Z"}, "message": "Rollup merge of #58259 - taiki-e:librustc_codegen_utils-2018, r=Centril\n\nlibrustc_codegen_utils => 2018\n\nTransitions `librustc_codegen_utils` to Rust 2018; cc #58099\n\nr? @Centril", "tree": {"sha": "9f5fb0d00969152574ca4727d338343afac48e25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f5fb0d00969152574ca4727d338343afac48e25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcXg2vCRBK7hj4Ov3rIwAAdHIIAHoIaIrbgV7PHePSUi53iA/S\n2uAOheZWmS0bIuc898Agpf9laUb02NZm/oyBKBm/lctixGcWY+13fKOXhKQUL/Pf\n8IuAZlUrE+OLykYcicyNXVV254Egt1FpgYKvg2WUvwEN/3j6FRuAYrA9fbQyWb8M\nKUHcZPjeakCAjgWGcT81BO2MfTlb5fcQmYI3rNl6QJRfyZ6BA85Oeacg2Ua4qsls\n9Lu2k7y5hM5dh4G/FqbUVdKfLpUB4Br8yyQcIyFXQcyq++Bv7d8tpsiFHxie0qJq\nHIt6R5bi1vVVdsbhq2CoqXm6fkz8TST0AIjNO61UvHh4tOO+uazIuyMJUIIlHA0=\n=zmMd\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f5fb0d00969152574ca4727d338343afac48e25\nparent 869135cedac7bad5cf679c0caded28ebde4e93a6\nparent 0e622a8ba1d43904ff16231e4fe8a1907e66d563\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1549667759 +0100\ncommitter GitHub <noreply@github.com> 1549667759 +0100\n\nRollup merge of #58259 - taiki-e:librustc_codegen_utils-2018, r=Centril\n\nlibrustc_codegen_utils => 2018\n\nTransitions `librustc_codegen_utils` to Rust 2018; cc #58099\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9", "html_url": "https://github.com/rust-lang/rust/commit/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "869135cedac7bad5cf679c0caded28ebde4e93a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/869135cedac7bad5cf679c0caded28ebde4e93a6", "html_url": "https://github.com/rust-lang/rust/commit/869135cedac7bad5cf679c0caded28ebde4e93a6"}, {"sha": "0e622a8ba1d43904ff16231e4fe8a1907e66d563", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e622a8ba1d43904ff16231e4fe8a1907e66d563", "html_url": "https://github.com/rust-lang/rust/commit/0e622a8ba1d43904ff16231e4fe8a1907e66d563"}], "stats": {"total": 41, "additions": 18, "deletions": 23}, "files": [{"sha": "5f241eb20fb55a9373554b4bd6e3c12b6ac50fd7", "filename": "src/librustc_codegen_utils/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9/src%2Flibrustc_codegen_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9/src%2Flibrustc_codegen_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2FCargo.toml?ref=d7a4dd10741d1e6e3526adb59d740e6a6faea7d9", "patch": "@@ -2,6 +2,7 @@\n authors = [\"The Rust Project Developers\"]\n name = \"rustc_codegen_utils\"\n version = \"0.0.0\"\n+edition = \"2018\"\n \n [lib]\n name = \"rustc_codegen_utils\""}, {"sha": "28d7d184228415d7186107417ecc37f68fb92a61", "filename": "src/librustc_codegen_utils/codegen_backend.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs?ref=d7a4dd10741d1e6e3526adb59d740e6a6faea7d9", "patch": "@@ -29,7 +29,7 @@ use rustc::middle::cstore::EncodedMetadata;\n use rustc::middle::cstore::MetadataLoader;\n use rustc::dep_graph::DepGraph;\n use rustc_target::spec::Target;\n-use link::out_filename;\n+use crate::link::out_filename;\n \n pub use rustc_data_structures::sync::MetadataRef;\n \n@@ -42,8 +42,8 @@ pub trait CodegenBackend {\n     fn diagnostics(&self) -> &[(&'static str, &'static str)] { &[] }\n \n     fn metadata_loader(&self) -> Box<dyn MetadataLoader + Sync>;\n-    fn provide(&self, _providers: &mut Providers);\n-    fn provide_extern(&self, _providers: &mut Providers);\n+    fn provide(&self, _providers: &mut Providers<'_>);\n+    fn provide_extern(&self, _providers: &mut Providers<'_>);\n     fn codegen_crate<'a, 'tcx>(\n         &self,\n         tcx: TyCtxt<'a, 'tcx, 'tcx>,\n@@ -109,16 +109,16 @@ impl CodegenBackend for MetadataOnlyCodegenBackend {\n         box NoLlvmMetadataLoader\n     }\n \n-    fn provide(&self, providers: &mut Providers) {\n-        ::symbol_names::provide(providers);\n+    fn provide(&self, providers: &mut Providers<'_>) {\n+        crate::symbol_names::provide(providers);\n \n         providers.target_features_whitelist = |_tcx, _cnum| {\n             Default::default() // Just a dummy\n         };\n         providers.is_reachable_non_generic = |_tcx, _defid| true;\n         providers.exported_symbols = |_tcx, _crate| Arc::new(Vec::new());\n     }\n-    fn provide_extern(&self, providers: &mut Providers) {\n+    fn provide_extern(&self, providers: &mut Providers<'_>) {\n         providers.is_reachable_non_generic = |_tcx, _defid| true;\n     }\n \n@@ -129,12 +129,12 @@ impl CodegenBackend for MetadataOnlyCodegenBackend {\n     ) -> Box<dyn Any> {\n         use rustc_mir::monomorphize::item::MonoItem;\n \n-        ::check_for_rustc_errors_attr(tcx);\n-        ::symbol_names_test::report_symbol_names(tcx);\n-        ::rustc_incremental::assert_dep_graph(tcx);\n-        ::rustc_incremental::assert_module_sources::assert_module_sources(tcx);\n+        crate::check_for_rustc_errors_attr(tcx);\n+        crate::symbol_names_test::report_symbol_names(tcx);\n+        rustc_incremental::assert_dep_graph(tcx);\n+        rustc_incremental::assert_module_sources::assert_module_sources(tcx);\n         // FIXME: Fix this\n-        // ::rustc::middle::dependency_format::calculate(tcx);\n+        // rustc::middle::dependency_format::calculate(tcx);\n         let _ = tcx.link_args(LOCAL_CRATE);\n         let _ = tcx.native_libraries(LOCAL_CRATE);\n         let (_, cgus) = tcx.collect_and_partition_mono_items(LOCAL_CRATE);"}, {"sha": "2b70141894be98fabd4f743f0cb649f813ec44af", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=d7a4dd10741d1e6e3526adb59d740e6a6faea7d9", "patch": "@@ -14,18 +14,10 @@\n \n #![recursion_limit=\"256\"]\n \n-extern crate flate2;\n-#[macro_use]\n-extern crate log;\n+#![deny(rust_2018_idioms)]\n \n #[macro_use]\n extern crate rustc;\n-extern crate rustc_target;\n-extern crate rustc_metadata;\n-extern crate rustc_mir;\n-extern crate rustc_incremental;\n-extern crate syntax;\n-extern crate syntax_pos;\n #[macro_use] extern crate rustc_data_structures;\n \n use rustc::ty::TyCtxt;\n@@ -40,7 +32,7 @@ pub mod symbol_names_test;\n /// error in codegen. This is used to write compile-fail tests\n /// that actually test that compilation succeeds without\n /// reporting an error.\n-pub fn check_for_rustc_errors_attr(tcx: TyCtxt) {\n+pub fn check_for_rustc_errors_attr(tcx: TyCtxt<'_, '_, '_>) {\n     if let Some((def_id, _)) = tcx.entry_fn(LOCAL_CRATE) {\n         if tcx.has_attr(def_id, \"rustc_error\") {\n             tcx.sess.span_fatal(tcx.def_span(def_id), \"compilation successful\");"}, {"sha": "f3a1b219f8a84d1929119f01019d0d253b4f46be", "filename": "src/librustc_codegen_utils/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9/src%2Flibrustc_codegen_utils%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9/src%2Flibrustc_codegen_utils%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flink.rs?ref=d7a4dd10741d1e6e3526adb59d740e6a6faea7d9", "patch": "@@ -41,7 +41,7 @@ pub fn find_crate_name(sess: Option<&Session>,\n                        attrs: &[ast::Attribute],\n                        input: &Input) -> String {\n     let validate = |s: String, span: Option<Span>| {\n-        ::rustc_metadata::validate_crate_name(sess, &s, span);\n+        rustc_metadata::validate_crate_name(sess, &s, span);\n         s\n     };\n "}, {"sha": "8d105853d92f11e12f39da4273894d8738a9fb0c", "filename": "src/librustc_codegen_utils/symbol_names.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9/src%2Flibrustc_codegen_utils%2Fsymbol_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7a4dd10741d1e6e3526adb59d740e6a6faea7d9/src%2Flibrustc_codegen_utils%2Fsymbol_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fsymbol_names.rs?ref=d7a4dd10741d1e6e3526adb59d740e6a6faea7d9", "patch": "@@ -103,10 +103,12 @@ use rustc_mir::monomorphize::Instance;\n \n use syntax_pos::symbol::Symbol;\n \n+use log::debug;\n+\n use std::fmt::Write;\n use std::mem::discriminant;\n \n-pub fn provide(providers: &mut Providers) {\n+pub fn provide(providers: &mut Providers<'_>) {\n     *providers = Providers {\n         def_symbol_name,\n         symbol_name,"}]}