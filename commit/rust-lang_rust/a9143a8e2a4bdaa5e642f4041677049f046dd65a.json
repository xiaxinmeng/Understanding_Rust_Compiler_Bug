{"sha": "a9143a8e2a4bdaa5e642f4041677049f046dd65a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MTQzYThlMmE0YmRhYTVlNjQyZjQwNDE2NzcwNDlmMDQ2ZGQ2NWE=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-06-25T05:49:02Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-06-25T05:49:02Z"}, "message": "fix vec size_hint", "tree": {"sha": "0f9d09bebb9eb3cf3b6f6e3eacad660fbbe8dd74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f9d09bebb9eb3cf3b6f6e3eacad660fbbe8dd74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9143a8e2a4bdaa5e642f4041677049f046dd65a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9143a8e2a4bdaa5e642f4041677049f046dd65a", "html_url": "https://github.com/rust-lang/rust/commit/a9143a8e2a4bdaa5e642f4041677049f046dd65a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9143a8e2a4bdaa5e642f4041677049f046dd65a/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa6fff585f5c23146e6d8db7899f4bb1d71399b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa6fff585f5c23146e6d8db7899f4bb1d71399b4", "html_url": "https://github.com/rust-lang/rust/commit/fa6fff585f5c23146e6d8db7899f4bb1d71399b4"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "9f7250c951af6094ebb889e73d794e87b93f9a77", "filename": "vec.md", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a9143a8e2a4bdaa5e642f4041677049f046dd65a/vec.md", "raw_url": "https://github.com/rust-lang/rust/raw/a9143a8e2a4bdaa5e642f4041677049f046dd65a/vec.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/vec.md?ref=a9143a8e2a4bdaa5e642f4041677049f046dd65a", "patch": "@@ -496,7 +496,8 @@ impl<T> Iterator for IntoIter<T> {\n     }\n \n     fn size_hint(&self) -> (usize, Option<usize>) {\n-        let len = self.end as usize - self.start as usize;\n+        let len = (self.end as usize - self.start as usize)\n+                  / mem::size_of::<T>();\n         (len, Some(len))\n     }\n }\n@@ -949,7 +950,10 @@ impl<T> RawValIter<T> {\n ```\n \n Now we have a different bug. Instead of our iterators not running at all, our\n-iterators now run *forever*. We need to do the same trick in our iterator impls:\n+iterators now run *forever*. We need to do the same trick in our iterator impls.\n+Also, our size_hint computation code will divide by 0 for ZSTs. Since we'll\n+basically be treating the two pointers as if they point to bytes, we'll just\n+map size 0 to divide by 1.\n \n ```\n impl<T> Iterator for RawValIter<T> {\n@@ -971,7 +975,9 @@ impl<T> Iterator for RawValIter<T> {\n     }\n \n     fn size_hint(&self) -> (usize, Option<usize>) {\n-        let len = self.end as usize - self.start as usize;\n+        let elem_size = mem::size_of::<T>();\n+        let len = (self.end as usize - self.start as usize)\n+                  / if elem_size == 0 { 1 } else { elem_size };\n         (len, Some(len))\n     }\n }\n@@ -1018,6 +1024,10 @@ use std::mem;\n use std::ops::{Deref, DerefMut};\n use std::marker::PhantomData;\n \n+\n+\n+\n+\n struct RawVec<T> {\n     ptr: Unique<T>,\n     cap: usize,\n@@ -1079,6 +1089,10 @@ impl<T> Drop for RawVec<T> {\n     }\n }\n \n+\n+\n+\n+\n pub struct Vec<T> {\n     buf: RawVec<T>,\n     len: usize,\n@@ -1231,7 +1245,9 @@ impl<T> Iterator for RawValIter<T> {\n     }\n \n     fn size_hint(&self) -> (usize, Option<usize>) {\n-        let len = self.end as usize - self.start as usize;\n+        let elem_size = mem::size_of::<T>();\n+        let len = (self.end as usize - self.start as usize)\n+                  / if elem_size == 0 { 1 } else { elem_size };\n         (len, Some(len))\n     }\n }"}]}