{"sha": "f324704c0a010a2ba89bec67d89eb6eccfa4e412", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMjQ3MDRjMGEwMTBhMmJhODliZWM2N2Q4OWViNmVjY2ZhNGU0MTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-19T02:39:09Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-21T01:23:48Z"}, "message": "Parse obj methods as proto_bare\n\nI don't know if this is the right thing to do, but it works\nand it lets 'fn' always mean proto_bare", "tree": {"sha": "1f281bf03c6229d9238394d4fa4451f8124683d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f281bf03c6229d9238394d4fa4451f8124683d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f324704c0a010a2ba89bec67d89eb6eccfa4e412", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f324704c0a010a2ba89bec67d89eb6eccfa4e412", "html_url": "https://github.com/rust-lang/rust/commit/f324704c0a010a2ba89bec67d89eb6eccfa4e412", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f324704c0a010a2ba89bec67d89eb6eccfa4e412/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "391e12124b4ee96849b8b5959c2cab824400a384", "url": "https://api.github.com/repos/rust-lang/rust/commits/391e12124b4ee96849b8b5959c2cab824400a384", "html_url": "https://github.com/rust-lang/rust/commit/391e12124b4ee96849b8b5959c2cab824400a384"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "2e6a83c153dc3c86bdaec6063f3c1396d81e3044", "filename": "src/comp/metadata/tydecode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f324704c0a010a2ba89bec67d89eb6eccfa4e412/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f324704c0a010a2ba89bec67d89eb6eccfa4e412/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftydecode.rs?ref=f324704c0a010a2ba89bec67d89eb6eccfa4e412", "patch": "@@ -281,7 +281,7 @@ fn parse_ty(st: @pstate, sd: str_def) -> ty::t {\n             let proto;\n             alt next(st) as char {\n               'W' { proto = ast::proto_iter; }\n-              'F' { proto = ast::proto_fn; }\n+              'f' { proto = ast::proto_bare; }\n             }\n             let name = \"\";\n             while peek(st) as char != '[' {"}, {"sha": "e661d24873b0d5ed694f791668d4eb1aa196f5b7", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f324704c0a010a2ba89bec67d89eb6eccfa4e412/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f324704c0a010a2ba89bec67d89eb6eccfa4e412/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=f324704c0a010a2ba89bec67d89eb6eccfa4e412", "patch": "@@ -294,16 +294,6 @@ fn parse_ty_fn(proto: ast::proto, p: parser) -> ast::ty_ {\n     ret ast::ty_fn(proto, inputs.node, ret_ty, ret_style, constrs);\n }\n \n-fn parse_method_proto(p: parser) -> ast::proto {\n-    if eat_word(p, \"iter\") {\n-        ret ast::proto_iter;\n-    } else if eat_word(p, \"fn\") {\n-        ret ast::proto_fn;\n-    } else if eat_word(p, \"block\") {\n-        ret ast::proto_block;\n-    } else { unexpected(p, p.peek()); }\n-}\n-\n fn parse_ty_obj(p: parser, &hi: uint) -> ast::ty_ {\n     fn parse_method_sig(p: parser) -> ast::ty_method {\n         let flo = p.get_lo_pos();\n@@ -2179,6 +2169,14 @@ fn parse_fn_anon_proto(p: parser) -> ast::proto {\n     }\n }\n \n+fn parse_method_proto(p: parser) -> ast::proto {\n+    if eat_word(p, \"iter\") {\n+        ret ast::proto_iter;\n+    } else if eat_word(p, \"fn\") {\n+        ret ast::proto_bare;\n+    } else { unexpected(p, p.peek()); }\n+}\n+\n fn parse_item(p: parser, attrs: [ast::attribute]) -> option::t<@ast::item> {\n     if eat_word(p, \"const\") {\n         ret some(parse_item_const(p, attrs));"}]}