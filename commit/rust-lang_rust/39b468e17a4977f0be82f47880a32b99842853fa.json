{"sha": "39b468e17a4977f0be82f47880a32b99842853fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5YjQ2OGUxN2E0OTc3ZjBiZTgyZjQ3ODgwYTMyYjk5ODQyODUzZmE=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-06T07:40:42Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-06T07:40:56Z"}, "message": "Fix problem with polymorphic return value being instantiated as nil\n\nCloses #1005", "tree": {"sha": "e86edd99425929eb86a16bd2a1d1758434b87c16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e86edd99425929eb86a16bd2a1d1758434b87c16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39b468e17a4977f0be82f47880a32b99842853fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39b468e17a4977f0be82f47880a32b99842853fa", "html_url": "https://github.com/rust-lang/rust/commit/39b468e17a4977f0be82f47880a32b99842853fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39b468e17a4977f0be82f47880a32b99842853fa/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6d7b0cff3720e5bf31f27c0b1fda34648b905d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d7b0cff3720e5bf31f27c0b1fda34648b905d8", "html_url": "https://github.com/rust-lang/rust/commit/e6d7b0cff3720e5bf31f27c0b1fda34648b905d8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "10418cdfc5422733432011941eefc2b6bdc6f999", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39b468e17a4977f0be82f47880a32b99842853fa/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39b468e17a4977f0be82f47880a32b99842853fa/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=39b468e17a4977f0be82f47880a32b99842853fa", "patch": "@@ -3785,7 +3785,7 @@ fn trans_args(cx: @block_ctxt, outer_cx: @block_ctxt, llenv: ValueRef,\n     } else {\n         alt dest {\n           ignore. {\n-            if ty::type_is_nil(tcx, full_retty) ||\n+            if ty::type_is_nil(tcx, retty) ||\n                !option::is_none(lliterbody) {\n                 llvm::LLVMGetUndef(T_ptr(llretty))\n             } else { alloca(cx, llretty) }"}]}