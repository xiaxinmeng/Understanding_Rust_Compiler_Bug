{"sha": "59262dfc6280b81f56129aaa6deaf2f74c63efa6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5MjYyZGZjNjI4MGI4MWY1NjEyOWFhYTZkZWFmMmY3NGM2M2VmYTY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-25T05:52:51Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-25T05:52:51Z"}, "message": "std: Move spawn_high_level_loop to uv::hl", "tree": {"sha": "77fce67269f16b4896fe3959b5f66877d0a267fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77fce67269f16b4896fe3959b5f66877d0a267fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59262dfc6280b81f56129aaa6deaf2f74c63efa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59262dfc6280b81f56129aaa6deaf2f74c63efa6", "html_url": "https://github.com/rust-lang/rust/commit/59262dfc6280b81f56129aaa6deaf2f74c63efa6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59262dfc6280b81f56129aaa6deaf2f74c63efa6/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4db1beabf5b8837aa50b9f3991df47ac2cc575c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4db1beabf5b8837aa50b9f3991df47ac2cc575c", "html_url": "https://github.com/rust-lang/rust/commit/d4db1beabf5b8837aa50b9f3991df47ac2cc575c"}], "stats": {"total": 59, "additions": 31, "deletions": 28}, "files": [{"sha": "a350967802f0327c646ca036c28c41cc58c4e008", "filename": "src/libstd/uv_global_loop.rs", "status": "modified", "additions": 2, "deletions": 26, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/59262dfc6280b81f56129aaa6deaf2f74c63efa6/src%2Flibstd%2Fuv_global_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59262dfc6280b81f56129aaa6deaf2f74c63efa6/src%2Flibstd%2Fuv_global_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_global_loop.rs?ref=59262dfc6280b81f56129aaa6deaf2f74c63efa6", "patch": "@@ -7,7 +7,6 @@ export get, get_monitor_task_gl;\n import ll = uv_ll;\n import hl = uv_hl;\n import get_gl = get;\n-import task::{run, single_threaded};\n import priv::{chan_from_global_ptr, weaken_task};\n import comm::{port, chan, methods, select2, listen};\n import either::{left, right};\n@@ -45,7 +44,7 @@ fn get_monitor_task_gl() -> hl::high_level_loop unsafe {\n         task::set_opts(builder, {\n             supervise: false,\n             sched: some({\n-                mode: single_threaded,\n+                mode: task::single_threaded,\n                 native_stack_size: none\n             })\n             with task::get_opts(builder)\n@@ -111,30 +110,7 @@ fn spawn_loop() -> hl::high_level_loop unsafe {\n             }\n         }\n     }\n-    spawn_high_level_loop(builder)\n-}\n-\n-fn spawn_high_level_loop(-builder: task::builder\n-                        ) -> hl::high_level_loop unsafe {\n-\n-    let hll_po = port::<hl::high_level_loop>();\n-    let hll_ch = hll_po.chan();\n-\n-    task::set_opts(builder, {\n-        sched: some({\n-            mode: single_threaded,\n-            native_stack_size: none\n-        })\n-        with task::get_opts(builder)\n-    });\n-\n-    run(builder) {||\n-        #debug(\"entering libuv task\");\n-        hl::run_high_level_loop(hll_ch);\n-        #debug(\"libuv task exiting\");\n-    };\n-\n-    hll_po.recv()\n+    hl::spawn_high_level_loop(builder)\n }\n \n #[cfg(test)]"}, {"sha": "e873f2ed16fc04151bcefb080c54102a30298222", "filename": "src/libstd/uv_hl.rs", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/59262dfc6280b81f56129aaa6deaf2f74c63efa6/src%2Flibstd%2Fuv_hl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59262dfc6280b81f56129aaa6deaf2f74c63efa6/src%2Flibstd%2Fuv_hl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_hl.rs?ref=59262dfc6280b81f56129aaa6deaf2f74c63efa6", "patch": "@@ -6,8 +6,10 @@ provide a high-level, abstracted interface to some set of\n libuv functionality.\n \"];\n \n-export high_level_loop, high_level_msg;\n-export run_high_level_loop, interact, exit;\n+export high_level_loop;\n+export spawn_high_level_loop;\n+export interact;\n+export exit;\n \n import libc::c_void;\n import ptr::addr_of;\n@@ -22,6 +24,31 @@ enum high_level_loop = {\n     op_chan: chan<high_level_msg>\n };\n \n+fn spawn_high_level_loop(-builder: task::builder\n+                        ) -> high_level_loop unsafe {\n+\n+    import task::{set_opts, get_opts, single_threaded, run};\n+\n+    let hll_po = port::<high_level_loop>();\n+    let hll_ch = hll_po.chan();\n+\n+    set_opts(builder, {\n+        sched: some({\n+            mode: single_threaded,\n+            native_stack_size: none\n+        })\n+        with get_opts(builder)\n+    });\n+\n+    run(builder) {||\n+        #debug(\"entering libuv task\");\n+        run_high_level_loop(hll_ch);\n+        #debug(\"libuv task exiting\");\n+    };\n+\n+    hll_po.recv()\n+}\n+\n #[doc=\"\n Represents the range of interactions with a `high_level_loop`\n \"]"}]}