{"sha": "4f74f837b661b37ae05c386e8963f3e2cc5ccb2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNzRmODM3YjY2MWIzN2FlMDVjMzg2ZTg5NjNmM2UyY2M1Y2NiMmE=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-09-06T16:38:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-06T16:38:02Z"}, "message": "Rollup merge of #36128 - gavinb:error_msgs_p2, r=jonathandturner\n\nUpdate Error format for E0516, E0517, E0518\n\n- E0518 Update error format #36111\n- E0517 Update error format #36109\n- E0516 Update error format #36108\n- Part of #35233\n\nr? @jonathandturner", "tree": {"sha": "675a13065e6c16006c121b75290356857cb7464a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/675a13065e6c16006c121b75290356857cb7464a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a", "html_url": "https://github.com/rust-lang/rust/commit/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "613f35051f41f68c3a53958429f78a084757b397", "url": "https://api.github.com/repos/rust-lang/rust/commits/613f35051f41f68c3a53958429f78a084757b397", "html_url": "https://github.com/rust-lang/rust/commit/613f35051f41f68c3a53958429f78a084757b397"}, {"sha": "cd56d47da3a2c2ed2eb2a1e4e54ca471c2c9172a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd56d47da3a2c2ed2eb2a1e4e54ca471c2c9172a", "html_url": "https://github.com/rust-lang/rust/commit/cd56d47da3a2c2ed2eb2a1e4e54ca471c2c9172a"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "8ba52cdb64f5fd83a6c274f2dfa3720f676fdfdd", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=4f74f837b661b37ae05c386e8963f3e2cc5ccb2a", "patch": "@@ -42,7 +42,9 @@ struct CheckAttrVisitor<'a> {\n impl<'a> CheckAttrVisitor<'a> {\n     fn check_inline(&self, attr: &ast::Attribute, target: Target) {\n         if target != Target::Fn {\n-            span_err!(self.sess, attr.span, E0518, \"attribute should be applied to function\");\n+            struct_span_err!(self.sess, attr.span, E0518, \"attribute should be applied to function\")\n+                .span_label(attr.span, &format!(\"requires a function\"))\n+                .emit();\n         }\n     }\n \n@@ -56,18 +58,20 @@ impl<'a> CheckAttrVisitor<'a> {\n \n         let mut conflicting_reprs = 0;\n         for word in words {\n+\n             let name = match word.name() {\n                 Some(word) => word,\n                 None => continue,\n             };\n \n-            let message = match &*name {\n+            let (message, label) = match &*name {\n                 \"C\" => {\n                     conflicting_reprs += 1;\n                     if target != Target::Struct &&\n                             target != Target::Union &&\n                             target != Target::Enum {\n-                        \"attribute should be applied to struct, enum or union\"\n+                                (\"attribute should be applied to struct, enum or union\",\n+                                 \"a struct, enum or union\")\n                     } else {\n                         continue\n                     }\n@@ -77,15 +81,17 @@ impl<'a> CheckAttrVisitor<'a> {\n                     // can be used to modify another repr hint\n                     if target != Target::Struct &&\n                             target != Target::Union {\n-                        \"attribute should be applied to struct or union\"\n+                                (\"attribute should be applied to struct or union\",\n+                                 \"a struct or union\")\n                     } else {\n                         continue\n                     }\n                 }\n                 \"simd\" => {\n                     conflicting_reprs += 1;\n                     if target != Target::Struct {\n-                        \"attribute should be applied to struct\"\n+                        (\"attribute should be applied to struct\",\n+                         \"a struct\")\n                     } else {\n                         continue\n                     }\n@@ -95,15 +101,17 @@ impl<'a> CheckAttrVisitor<'a> {\n                 \"isize\" | \"usize\" => {\n                     conflicting_reprs += 1;\n                     if target != Target::Enum {\n-                        \"attribute should be applied to enum\"\n+                        (\"attribute should be applied to enum\",\n+                         \"an enum\")\n                     } else {\n                         continue\n                     }\n                 }\n                 _ => continue,\n             };\n-\n-            span_err!(self.sess, attr.span, E0517, \"{}\", message);\n+            struct_span_err!(self.sess, attr.span, E0517, \"{}\", message)\n+                .span_label(attr.span, &format!(\"requires {}\", label))\n+                .emit();\n         }\n         if conflicting_reprs > 1 {\n             span_warn!(self.sess, attr.span, E0566,"}, {"sha": "334b7a5063a3a0902383479c94ccf927a62b1487", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=4f74f837b661b37ae05c386e8963f3e2cc5ccb2a", "patch": "@@ -1769,8 +1769,11 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n                 }\n             }\n             hir::TyTypeof(ref _e) => {\n-                span_err!(tcx.sess, ast_ty.span, E0516,\n-                      \"`typeof` is a reserved keyword but unimplemented\");\n+                struct_span_err!(tcx.sess, ast_ty.span, E0516,\n+                                 \"`typeof` is a reserved keyword but unimplemented\")\n+                    .span_label(ast_ty.span, &format!(\"reserved keyword\"))\n+                    .emit();\n+\n                 tcx.types.err\n             }\n             hir::TyInfer => {"}, {"sha": "be2b89c5f396eb05f943c50ac6ed11bd76b6c9a8", "filename": "src/test/compile-fail/E0516.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a/src%2Ftest%2Fcompile-fail%2FE0516.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a/src%2Ftest%2Fcompile-fail%2FE0516.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0516.rs?ref=4f74f837b661b37ae05c386e8963f3e2cc5ccb2a", "patch": "@@ -10,4 +10,5 @@\n \n fn main() {\n     let x: typeof(92) = 92; //~ ERROR E0516\n+                            //~| reserved keyword\n }"}, {"sha": "b79cb2c44af3958e610d3e353c05b17a1da70007", "filename": "src/test/compile-fail/E0517.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a/src%2Ftest%2Fcompile-fail%2FE0517.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a/src%2Ftest%2Fcompile-fail%2FE0517.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0517.rs?ref=4f74f837b661b37ae05c386e8963f3e2cc5ccb2a", "patch": "@@ -9,15 +9,19 @@\n // except according to those terms.\n \n #[repr(C)] //~ ERROR E0517\n+           //~| requires a struct, enum or union\n type Foo = u8;\n \n #[repr(packed)] //~ ERROR E0517\n+                //~| requires a struct\n enum Foo2 {Bar, Baz}\n \n #[repr(u8)] //~ ERROR E0517\n+            //~| requires an enum\n struct Foo3 {bar: bool, baz: bool}\n \n #[repr(C)] //~ ERROR E0517\n+           //~| requires a struct, enum or union\n impl Foo3 {\n }\n "}, {"sha": "f9494e0bcb5310bcd385c879d095c9cbce4cb007", "filename": "src/test/compile-fail/E0518.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a/src%2Ftest%2Fcompile-fail%2FE0518.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f74f837b661b37ae05c386e8963f3e2cc5ccb2a/src%2Ftest%2Fcompile-fail%2FE0518.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0518.rs?ref=4f74f837b661b37ae05c386e8963f3e2cc5ccb2a", "patch": "@@ -9,9 +9,11 @@\n // except according to those terms.\n \n #[inline(always)] //~ ERROR E0518\n+                  //~| requires a function\n struct Foo;\n \n #[inline(never)] //~ ERROR E0518\n+                 //~| requires a function\n impl Foo {\n }\n "}]}