{"sha": "3b50b0b2b658006c23d21749627e413af5c2aa44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNTBiMGIyYjY1ODAwNmMyM2QyMTc0OTYyN2U0MTNhZjVjMmFhNDQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-24T14:26:26Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-24T14:54:21Z"}, "message": "Use a HashMap instead of Vec\n\nThis is no longer enforcing stack discipline, so a Vec isn't necessary\nor helpful", "tree": {"sha": "cfbe361198096d9dc62bc34c624b84dc470a1dcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfbe361198096d9dc62bc34c624b84dc470a1dcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b50b0b2b658006c23d21749627e413af5c2aa44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b50b0b2b658006c23d21749627e413af5c2aa44", "html_url": "https://github.com/rust-lang/rust/commit/3b50b0b2b658006c23d21749627e413af5c2aa44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b50b0b2b658006c23d21749627e413af5c2aa44/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59d4640b644fa12ecc8f5075d92e5c53124e5dd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/59d4640b644fa12ecc8f5075d92e5c53124e5dd7", "html_url": "https://github.com/rust-lang/rust/commit/59d4640b644fa12ecc8f5075d92e5c53124e5dd7"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "3ced648e56ffd9c9d255ac857f4f4b5d89821bf7", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3b50b0b2b658006c23d21749627e413af5c2aa44/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b50b0b2b658006c23d21749627e413af5c2aa44/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=3b50b0b2b658006c23d21749627e413af5c2aa44", "patch": "@@ -36,6 +36,7 @@ use crate::{\n \n use super::{ExprSource, PatSource};\n use ast::AstChildren;\n+use rustc_hash::FxHashMap;\n use std::sync::Arc;\n \n pub(crate) struct LowerCtx {\n@@ -74,7 +75,11 @@ pub(super) fn lower(\n             body_expr: dummy_expr_id(),\n             item_scope: Default::default(),\n         },\n-        item_trees: vec![(expander.current_file_id, item_tree)],\n+        item_trees: {\n+            let mut map = FxHashMap::default();\n+            map.insert(expander.current_file_id, item_tree);\n+            map\n+        },\n         expander,\n     }\n     .collect(params, body)\n@@ -87,7 +92,7 @@ struct ExprCollector<'a> {\n     body: Body,\n     source_map: BodySourceMap,\n \n-    item_trees: Vec<(HirFileId, Arc<ItemTree>)>,\n+    item_trees: FxHashMap<HirFileId, Arc<ItemTree>>,\n }\n \n impl ExprCollector<'_> {\n@@ -541,7 +546,7 @@ impl ExprCollector<'_> {\n                                 .insert(macro_call, self.expander.current_file_id);\n \n                             let item_tree = self.db.item_tree(self.expander.current_file_id);\n-                            self.item_trees.push((self.expander.current_file_id, item_tree));\n+                            self.item_trees.insert(self.expander.current_file_id, item_tree);\n                             let id = self.collect_expr(expansion);\n                             self.expander.exit(self.db, mark);\n                             id\n@@ -557,11 +562,7 @@ impl ExprCollector<'_> {\n     }\n \n     fn find_inner_item<S: ItemTreeNode>(&self, id: AstId<ast::ModuleItem>) -> FileItemTreeId<S> {\n-        let index =\n-            self.item_trees.iter().position(|(file, _)| *file == id.file_id).unwrap_or_else(|| {\n-                panic!(\"couldn't find item tree for file {:?}\", id.file_id);\n-            });\n-        let tree = &self.item_trees[index].1;\n+        let tree = &self.item_trees[&id.file_id];\n \n         // FIXME: This probably breaks with `use` items, since they produce multiple item tree nodes\n "}]}