{"sha": "f33890082603434eb640dfd256819b0d722e911d", "node_id": "C_kwDOAAsO6NoAKGYzMzg5MDA4MjYwMzQzNGViNjQwZGZkMjU2ODE5YjBkNzIyZTkxMWQ", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-09-19T17:46:05Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-09-21T02:21:43Z"}, "message": "Remove Drop-caused migration-added captures\n\nAll of these were added due to insignificant Drop types being present.", "tree": {"sha": "c5bc7c2ee776e619e87c8a76dab520235096b9ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5bc7c2ee776e619e87c8a76dab520235096b9ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f33890082603434eb640dfd256819b0d722e911d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f33890082603434eb640dfd256819b0d722e911d", "html_url": "https://github.com/rust-lang/rust/commit/f33890082603434eb640dfd256819b0d722e911d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f33890082603434eb640dfd256819b0d722e911d/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e344da2170da48f6fe7ba28770b11b00796fa5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e344da2170da48f6fe7ba28770b11b00796fa5f", "html_url": "https://github.com/rust-lang/rust/commit/5e344da2170da48f6fe7ba28770b11b00796fa5f"}], "stats": {"total": 48, "additions": 18, "deletions": 30}, "files": [{"sha": "11ee8fb17ad1b4abc01175e138d765b28e192bb1", "filename": "compiler/rustc_infer/src/infer/at.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fat.rs?ref=f33890082603434eb640dfd256819b0d722e911d", "patch": "@@ -195,10 +195,10 @@ impl<'a, 'tcx> Trace<'a, 'tcx> {\n         let Trace { at, trace, a_is_expected } = self;\n         at.infcx.commit_if_ok(|_| {\n             let mut fields = at.infcx.combine_fields(trace, at.param_env);\n-            fields.sub(a_is_expected).relate(a, b).map(move |_| {\n-                let _ = &fields;\n-                InferOk { value: (), obligations: fields.obligations }\n-            })\n+            fields\n+                .sub(a_is_expected)\n+                .relate(a, b)\n+                .map(move |_| InferOk { value: (), obligations: fields.obligations })\n         })\n     }\n \n@@ -212,10 +212,10 @@ impl<'a, 'tcx> Trace<'a, 'tcx> {\n         let Trace { at, trace, a_is_expected } = self;\n         at.infcx.commit_if_ok(|_| {\n             let mut fields = at.infcx.combine_fields(trace, at.param_env);\n-            fields.equate(a_is_expected).relate(a, b).map(move |_| {\n-                let _ = &fields;\n-                InferOk { value: (), obligations: fields.obligations }\n-            })\n+            fields\n+                .equate(a_is_expected)\n+                .relate(a, b)\n+                .map(move |_| InferOk { value: (), obligations: fields.obligations })\n         })\n     }\n \n@@ -227,10 +227,10 @@ impl<'a, 'tcx> Trace<'a, 'tcx> {\n         let Trace { at, trace, a_is_expected } = self;\n         at.infcx.commit_if_ok(|_| {\n             let mut fields = at.infcx.combine_fields(trace, at.param_env);\n-            fields.lub(a_is_expected).relate(a, b).map(move |t| {\n-                let _ = &fields;\n-                InferOk { value: t, obligations: fields.obligations }\n-            })\n+            fields\n+                .lub(a_is_expected)\n+                .relate(a, b)\n+                .map(move |t| InferOk { value: t, obligations: fields.obligations })\n         })\n     }\n \n@@ -242,10 +242,10 @@ impl<'a, 'tcx> Trace<'a, 'tcx> {\n         let Trace { at, trace, a_is_expected } = self;\n         at.infcx.commit_if_ok(|_| {\n             let mut fields = at.infcx.combine_fields(trace, at.param_env);\n-            fields.glb(a_is_expected).relate(a, b).map(move |t| {\n-                let _ = &fields;\n-                InferOk { value: t, obligations: fields.obligations }\n-            })\n+            fields\n+                .glb(a_is_expected)\n+                .relate(a, b)\n+                .map(move |t| InferOk { value: t, obligations: fields.obligations })\n         })\n     }\n }"}, {"sha": "ef8bd20d51098c3e94821c1ded39573525b9d0da", "filename": "compiler/rustc_mir_build/src/lints.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_mir_build%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_mir_build%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Flints.rs?ref=f33890082603434eb640dfd256819b0d722e911d", "patch": "@@ -41,7 +41,6 @@ crate fn check<'tcx>(tcx: TyCtxt<'tcx>, body: &Body<'tcx>) {\n         let hir_id = tcx.hir().local_def_id_to_hir_id(def_id);\n         let sp = tcx.sess.source_map().guess_head_span(tcx.hir().span_with_body(hir_id));\n         tcx.struct_span_lint_hir(UNCONDITIONAL_RECURSION, hir_id, sp, |lint| {\n-            let _ = &vis;\n             let mut db = lint.build(\"function cannot return without recursing\");\n             db.span_label(sp, \"cannot return without recursing\");\n             // offer some help to the programmer."}, {"sha": "b5398f8a4353b222599a49f008bb91a8ccc47035", "filename": "compiler/rustc_trait_selection/src/traits/query/type_op/custom.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs?ref=f33890082603434eb640dfd256819b0d722e911d", "patch": "@@ -40,10 +40,7 @@ where\n             info!(\"fully_perform({:?})\", self);\n         }\n \n-        scrape_region_constraints(infcx, || {\n-            let _ = &self;\n-            (self.closure)(infcx)\n-        })\n+        scrape_region_constraints(infcx, || (self.closure)(infcx))\n     }\n }\n "}, {"sha": "88aca794a6be6971ea4d7bfcb2b1bfb431fe5393", "filename": "compiler/rustc_trait_selection/src/traits/specialize/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs?ref=f33890082603434eb640dfd256819b0d722e911d", "patch": "@@ -394,7 +394,6 @@ fn report_conflicting_impls(\n     // now because the struct_lint methods don't return back the DiagnosticBuilder\n     // that's passed in.\n     let decorate = |err: LintDiagnosticBuilder<'_>| {\n-        let _ = &overlap;\n         let msg = format!(\n             \"conflicting implementations of trait `{}`{}{}\",\n             overlap.trait_desc,"}, {"sha": "2ecc169e1cf1dd12bfed21810fdc1b5d5a18018b", "filename": "compiler/rustc_trait_selection/src/traits/specialize/specialization_graph.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs?ref=f33890082603434eb640dfd256819b0d722e911d", "patch": "@@ -105,7 +105,6 @@ impl ChildrenExt for Children {\n \n                 // FIXME: should postpone string formatting until we decide to actually emit.\n                 with_no_trimmed_paths(|| {\n-                    let _ = &overlap;\n                     OverlapError {\n                         with_impl: possible_sibling,\n                         trait_desc: trait_ref.print_only_trait_path().to_string(),"}, {"sha": "d5b631df058aef9c12428677dbfa52f7aec344d3", "filename": "compiler/rustc_typeck/src/check/compare_method.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=f33890082603434eb640dfd256819b0d722e911d", "patch": "@@ -1192,7 +1192,6 @@ fn compare_type_predicate_entailment<'tcx>(\n         normalize_cause.clone(),\n     );\n     tcx.infer_ctxt().enter(|infcx| {\n-        let _ = &impl_ty_own_bounds;\n         let inh = Inherited::new(infcx, impl_ty.def_id.expect_local());\n         let infcx = &inh.infcx;\n "}, {"sha": "cbfdce96bc57bdd0b1554f8b4e32ec1e8343faf6", "filename": "compiler/rustc_typeck/src/check/method/probe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33890082603434eb640dfd256819b0d722e911d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=f33890082603434eb640dfd256819b0d722e911d", "patch": "@@ -441,7 +441,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         // this creates one big transaction so that all type variables etc\n         // that we create during the probe process are removed later\n         self.probe(|_| {\n-            let _ = &steps;\n             let mut probe_cx = ProbeContext::new(\n                 self,\n                 span,"}, {"sha": "dbeea9cddf3879af8b2ac43683d6e89dac7e199b", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f33890082603434eb640dfd256819b0d722e911d/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33890082603434eb640dfd256819b0d722e911d/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=f33890082603434eb640dfd256819b0d722e911d", "patch": "@@ -964,7 +964,6 @@ impl Tester for Collector {\n                 test_type: test::TestType::DocTest,\n             },\n             testfn: test::DynTestFn(Box::new(move || {\n-                let _ = &config;\n                 let report_unused_externs = |uext| {\n                     unused_externs.lock().unwrap().push(uext);\n                 };"}, {"sha": "3a94f47298390a22ef1fc51459b443691fffc70c", "filename": "src/tools/clippy/clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f33890082603434eb640dfd256819b0d722e911d/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33890082603434eb640dfd256819b0d722e911d/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs?ref=f33890082603434eb640dfd256819b0d722e911d", "patch": "@@ -990,10 +990,7 @@ pub fn can_move_expr_to_closure(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) ->\n         captures: HirIdMap::default(),\n     };\n     v.visit_expr(expr);\n-    v.allow_closure.then(|| {\n-        let _ = &v;\n-        v.captures\n-    })\n+    v.allow_closure.then(|| v.captures)\n }\n \n /// Returns the method names and argument list of nested method call expressions that make up"}]}