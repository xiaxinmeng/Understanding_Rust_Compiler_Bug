{"sha": "f9bd7184e924f5a3558cbc3f05d2cd44fb17f801", "node_id": "C_kwDOAAsO6NoAKGY5YmQ3MTg0ZTkyNGY1YTM1NThjYmMzZjA1ZDJjZDQ0ZmIxN2Y4MDE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-19T19:54:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-19T19:54:58Z"}, "message": "Rollup merge of #105895 - oli-obk:tait_coherence, r=lcnr\n\nTest that we don't add a new kind of breaking change with TAITs\n\nr? ``@lcnr``", "tree": {"sha": "30ad87bfc9db3bfe7902e5e12b0a5eeac7d2e394", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30ad87bfc9db3bfe7902e5e12b0a5eeac7d2e394"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9bd7184e924f5a3558cbc3f05d2cd44fb17f801", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjoMGSCRBK7hj4Ov3rIwAABXoIAGWVt2x9jvbiVjf4jDniBDMP\nMkztrFTHm82HpJXiYnNqQjOqFbkPmk56F+bHyByQZJvNqMzCFZJIYPPGQ1x21p8p\n6ivi1NbiiYxK2udmZPDdEU8v3wfYWQ8sJtHasfy+FlmVf18Dc+yq/XPDC1bbuVcf\nY5FItdcedn4HJYWUwk88wELlmwMBDhrmRnAEBK2Yi/O0xml6XKQx5AA1KzyOrzLi\ntIbNCT+njEWVCT2iLLYeoKWtK92pGU9aCpKxYnXxkzU9qxouCA2uFJUC+p1WV7aT\nkdfEF5Vj/qwcF1N3gxjICi9DrPac37BZM1ZbDikgJ7ZYqBpdtamJPGY66LPDB08=\n=eGU4\n-----END PGP SIGNATURE-----\n", "payload": "tree 30ad87bfc9db3bfe7902e5e12b0a5eeac7d2e394\nparent 6e6ec81a91e8766f54dfafd380c17ab6d718a1c7\nparent e62b75ef5f666de561726e44738de63ae4aa7726\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671479698 +0100\ncommitter GitHub <noreply@github.com> 1671479698 +0100\n\nRollup merge of #105895 - oli-obk:tait_coherence, r=lcnr\n\nTest that we don't add a new kind of breaking change with TAITs\n\nr? ``@lcnr``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9bd7184e924f5a3558cbc3f05d2cd44fb17f801", "html_url": "https://github.com/rust-lang/rust/commit/f9bd7184e924f5a3558cbc3f05d2cd44fb17f801", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9bd7184e924f5a3558cbc3f05d2cd44fb17f801/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e6ec81a91e8766f54dfafd380c17ab6d718a1c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e6ec81a91e8766f54dfafd380c17ab6d718a1c7", "html_url": "https://github.com/rust-lang/rust/commit/6e6ec81a91e8766f54dfafd380c17ab6d718a1c7"}, {"sha": "e62b75ef5f666de561726e44738de63ae4aa7726", "url": "https://api.github.com/repos/rust-lang/rust/commits/e62b75ef5f666de561726e44738de63ae4aa7726", "html_url": "https://github.com/rust-lang/rust/commit/e62b75ef5f666de561726e44738de63ae4aa7726"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "712ed55438e68c397fbb1f7db323465558169206", "filename": "src/test/ui/type-alias-impl-trait/auxiliary/coherence_cross_crate_trait_decl.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f9bd7184e924f5a3558cbc3f05d2cd44fb17f801/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauxiliary%2Fcoherence_cross_crate_trait_decl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9bd7184e924f5a3558cbc3f05d2cd44fb17f801/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauxiliary%2Fcoherence_cross_crate_trait_decl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauxiliary%2Fcoherence_cross_crate_trait_decl.rs?ref=f9bd7184e924f5a3558cbc3f05d2cd44fb17f801", "patch": "@@ -0,0 +1,9 @@\n+pub trait SomeTrait {}\n+\n+impl SomeTrait for () {}\n+\n+// Adding this `impl` would cause errors in this crate's dependent,\n+// so it would be a breaking change. We explicitly don't add this impl,\n+// as the dependent crate already assumes this impl exists and thus already\n+// does not compile.\n+//impl SomeTrait for i32 {}"}, {"sha": "a63e0a1ee6f70ec6d0e0f9087449ff5208321040", "filename": "src/test/ui/type-alias-impl-trait/coherence_cross_crate.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f9bd7184e924f5a3558cbc3f05d2cd44fb17f801/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcoherence_cross_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9bd7184e924f5a3558cbc3f05d2cd44fb17f801/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcoherence_cross_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcoherence_cross_crate.rs?ref=f9bd7184e924f5a3558cbc3f05d2cd44fb17f801", "patch": "@@ -0,0 +1,24 @@\n+// aux-build: coherence_cross_crate_trait_decl.rs\n+// This test ensures that adding an `impl SomeTrait for i32` within\n+// `coherence_cross_crate_trait_decl` is not a breaking change, by\n+// making sure that even without such an impl this test fails to compile.\n+\n+#![feature(type_alias_impl_trait)]\n+\n+extern crate coherence_cross_crate_trait_decl;\n+\n+use coherence_cross_crate_trait_decl::SomeTrait;\n+\n+trait OtherTrait {}\n+\n+type Alias = impl SomeTrait;\n+\n+fn constrain() -> Alias {\n+    ()\n+}\n+\n+impl OtherTrait for Alias {}\n+impl OtherTrait for i32 {}\n+//~^ ERROR: conflicting implementations of trait `OtherTrait` for type `Alias`\n+\n+fn main() {}"}, {"sha": "63a3ce29cc77bd64da5c749fc445771f652f935f", "filename": "src/test/ui/type-alias-impl-trait/coherence_cross_crate.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f9bd7184e924f5a3558cbc3f05d2cd44fb17f801/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcoherence_cross_crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f9bd7184e924f5a3558cbc3f05d2cd44fb17f801/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcoherence_cross_crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcoherence_cross_crate.stderr?ref=f9bd7184e924f5a3558cbc3f05d2cd44fb17f801", "patch": "@@ -0,0 +1,13 @@\n+error[E0119]: conflicting implementations of trait `OtherTrait` for type `Alias`\n+  --> $DIR/coherence_cross_crate.rs:21:1\n+   |\n+LL | impl OtherTrait for Alias {}\n+   | ------------------------- first implementation here\n+LL | impl OtherTrait for i32 {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Alias`\n+   |\n+   = note: upstream crates may add a new impl of trait `coherence_cross_crate_trait_decl::SomeTrait` for type `i32` in future versions\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0119`."}]}