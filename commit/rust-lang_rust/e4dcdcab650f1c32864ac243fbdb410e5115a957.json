{"sha": "e4dcdcab650f1c32864ac243fbdb410e5115a957", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZGNkY2FiNjUwZjFjMzI4NjRhYzI0M2ZiZGI0MTBlNTExNWE5NTc=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-30T01:08:45Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-30T01:08:45Z"}, "message": "Remove unnecessary Result return in push_stack_frame.", "tree": {"sha": "b901adaad9969e8f40d38a5eb250832fe8697587", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b901adaad9969e8f40d38a5eb250832fe8697587"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4dcdcab650f1c32864ac243fbdb410e5115a957", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4dcdcab650f1c32864ac243fbdb410e5115a957", "html_url": "https://github.com/rust-lang/rust/commit/e4dcdcab650f1c32864ac243fbdb410e5115a957", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4dcdcab650f1c32864ac243fbdb410e5115a957/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63fdd46f9af41398fd2191135336e63d118114c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/63fdd46f9af41398fd2191135336e63d118114c5", "html_url": "https://github.com/rust-lang/rust/commit/63fdd46f9af41398fd2191135336e63d118114c5"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "342ca3628c2471becbfd1d9d440a34554dd260b3", "filename": "src/interpreter.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e4dcdcab650f1c32864ac243fbdb410e5115a957/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4dcdcab650f1c32864ac243fbdb410e5115a957/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=e4dcdcab650f1c32864ac243fbdb410e5115a957", "patch": "@@ -162,9 +162,7 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n         Ok(())\n     }\n \n-    fn push_stack_frame(&mut self, mir: CachedMir<'a, 'tcx>, return_ptr: Option<Pointer>)\n-        -> EvalResult<()>\n-    {\n+    fn push_stack_frame(&mut self, mir: CachedMir<'a, 'tcx>, return_ptr: Option<Pointer>) {\n         let arg_tys = mir.arg_decls.iter().map(|a| a.ty);\n         let var_tys = mir.var_decls.iter().map(|v| v.ty);\n         let temp_tys = mir.temp_decls.iter().map(|t| t.ty);\n@@ -185,8 +183,6 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n             var_offset: num_args,\n             temp_offset: num_args + num_vars,\n         });\n-\n-        Ok(())\n     }\n \n     fn pop_stack_frame(&mut self) {\n@@ -310,7 +306,7 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n \n                                 let mir = self.load_mir(def_id);\n                                 self.substs_stack.push(substs);\n-                                try!(self.push_stack_frame(mir, return_ptr));\n+                                self.push_stack_frame(mir, return_ptr);\n \n                                 for (i, (src, size)) in arg_srcs.into_iter().enumerate() {\n                                     let dest = self.frame().locals[i];\n@@ -1149,7 +1145,7 @@ pub fn interpret_start_points<'tcx>(tcx: &TyCtxt<'tcx>, mir_map: &MirMap<'tcx>)\n                     }\n                     ty::FnDiverging => None,\n                 };\n-                miri.push_stack_frame(CachedMir::Ref(mir), return_ptr).unwrap();\n+                miri.push_stack_frame(CachedMir::Ref(mir), return_ptr);\n                 miri.run().unwrap();\n \n                 if let Some(ret) = return_ptr {"}]}