{"sha": "5082fe21a814e16f25cb8cfb0ebae7fff5541d0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwODJmZTIxYTgxNGUxNmYyNWNiOGNmYjBlYmFlN2ZmZjU1NDFkMGE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-03T11:31:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-03T11:31:24Z"}, "message": "Rollup merge of #70706 - gizmondo:check-theme, r=GuillaumeGomez\n\nMinor cleanup in rustdoc --check-theme\n\nExpand and remove try_something macro. Since https://github.com/rust-lang/rust/commit/2f6226518bd5085896a0f27cfd3ea396367ecd50 there has been only one invocation.\n\nr? @GuillaumeGomez", "tree": {"sha": "fb79f23b0d42b28e202075a2a264337b5597265a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb79f23b0d42b28e202075a2a264337b5597265a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5082fe21a814e16f25cb8cfb0ebae7fff5541d0a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJehx6MCRBK7hj4Ov3rIwAAdHIIADQG4q+OSQeR1AY81Xe64yWh\nuZ/ztE0yfOcD2XEp2NmtinRe8CmQ7EtGzxJv/AcI07Gd2p09zoYistZpExL7VO76\nUomWRIs8e37LdmjYRvLdRVJ/LdpQO5mGWv3RaldbGvG+JGrYSn71OLuEwWaHukNB\nEayznkTN+xCoRzLE5Ppj+nAYJXklpUeLpC3BwEKb0wwy/3Sa0gwN5IfY2C2FTcdd\nYOFc/UiVy8QdMSUgL+YHgiXbkR1qnpMvfnP/eWfix3ZkF8ew97gajsZtXS60TeFa\n1xUiwvvsKYeykDAAcl509G7UmtORDTeye/SzOFyPGAq0/mCs6A7wYIfZ+U8QUb0=\n=oSsX\n-----END PGP SIGNATURE-----\n", "payload": "tree fb79f23b0d42b28e202075a2a264337b5597265a\nparent ea28134f2d404c9c4f998457ca829bea45b63b7a\nparent 12785dd89c24e1a011b8f386ca1883d786db6f95\nauthor Dylan DPC <dylan.dpc@gmail.com> 1585913484 +0200\ncommitter GitHub <noreply@github.com> 1585913484 +0200\n\nRollup merge of #70706 - gizmondo:check-theme, r=GuillaumeGomez\n\nMinor cleanup in rustdoc --check-theme\n\nExpand and remove try_something macro. Since https://github.com/rust-lang/rust/commit/2f6226518bd5085896a0f27cfd3ea396367ecd50 there has been only one invocation.\n\nr? @GuillaumeGomez\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5082fe21a814e16f25cb8cfb0ebae7fff5541d0a", "html_url": "https://github.com/rust-lang/rust/commit/5082fe21a814e16f25cb8cfb0ebae7fff5541d0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5082fe21a814e16f25cb8cfb0ebae7fff5541d0a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea28134f2d404c9c4f998457ca829bea45b63b7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea28134f2d404c9c4f998457ca829bea45b63b7a", "html_url": "https://github.com/rust-lang/rust/commit/ea28134f2d404c9c4f998457ca829bea45b63b7a"}, {"sha": "12785dd89c24e1a011b8f386ca1883d786db6f95", "url": "https://api.github.com/repos/rust-lang/rust/commits/12785dd89c24e1a011b8f386ca1883d786db6f95", "html_url": "https://github.com/rust-lang/rust/commit/12785dd89c24e1a011b8f386ca1883d786db6f95"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "c8eb271c807d62f032d92c9f335e00fa6b19cab5", "filename": "src/librustdoc/theme.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5082fe21a814e16f25cb8cfb0ebae7fff5541d0a/src%2Flibrustdoc%2Ftheme.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5082fe21a814e16f25cb8cfb0ebae7fff5541d0a/src%2Flibrustdoc%2Ftheme.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftheme.rs?ref=5082fe21a814e16f25cb8cfb0ebae7fff5541d0a", "patch": "@@ -8,18 +8,6 @@ use rustc_errors::Handler;\n #[cfg(test)]\n mod tests;\n \n-macro_rules! try_something {\n-    ($e:expr, $diag:expr, $out:expr) => {{\n-        match $e {\n-            Ok(c) => c,\n-            Err(e) => {\n-                $diag.struct_err(&e.to_string()).emit();\n-                return $out;\n-            }\n-        }\n-    }};\n-}\n-\n #[derive(Debug, Clone, Eq)]\n pub struct CssPath {\n     pub name: String,\n@@ -265,7 +253,13 @@ pub fn test_theme_against<P: AsRef<Path>>(\n     against: &CssPath,\n     diag: &Handler,\n ) -> (bool, Vec<String>) {\n-    let data = try_something!(fs::read(f), diag, (false, vec![]));\n+    let data = match fs::read(f) {\n+        Ok(c) => c,\n+        Err(e) => {\n+            diag.struct_err(&e.to_string()).emit();\n+            return (false, vec![]);\n+        }\n+    };\n \n     let paths = load_css_paths(&data);\n     let mut ret = vec![];"}]}