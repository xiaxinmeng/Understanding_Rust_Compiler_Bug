{"sha": "ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYzgyMGUxZjhlYjhkOGQxNDJiZDkzZDU3OGJiNWM3ZDliYjY3NzU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-06T11:31:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-06T11:31:01Z"}, "message": "Rollup merge of #84950 - pietroalbini:revert-3478f83c0, r=Mark-Simulacrum\n\nRevert PR 83866\n\nhttps://github.com/rust-lang/rust/pull/83866 caused multiple test failures when Rust's channel is changed from nightly to anything else. The PR will have to be landed again after the test suite is fixed.\n\nThe two kinds of test failures were:\n\n* Rustdoc tests failed because the links in the generated HTML didn't point at nightly anymore, see https://github.com/rust-lang/rust/pull/84909#issuecomment-832028701\n* Rustdoc UI tests failed because the links included in error messages didn't point at nightly anymore, see https://github.com/rust-lang/rust/pull/84909#issuecomment-832517722\n\nr? ``@Mark-Simulacrum``\ncc ``@jyn514``", "tree": {"sha": "2ccebb0e19f229442bc7ab494b724bc3b6f6379b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ccebb0e19f229442bc7ab494b724bc3b6f6379b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgk9N1CRBK7hj4Ov3rIwAAfOkIAF9odytNn+qIZ2p/Ur4ttNF3\nnWVLQTzGwvoJZ+eA/8dSCEESj9hIttdRRefYHEtsgW29jzIU4xQVVgBc1w5t+01Z\nF08bet+W/BAUi367Dr9kY32eR80ZPhUyvnkHKZXmuo9Gp7LoQADrSDqpuN92vvsE\n5FfXY7GQRhYlJAiZsg4KrldDrTry1jSinvAT10A2ysHNfC/ShyjSPgILEZwUaT5b\n2IuDvgOG8tzh6ojluv+PrgemQ5D4YIQrGp3BuJcSaivhF+yt17sBKmqkHF2R70Ue\nfhB4SzmrYaRcz4HbpISRRIdk4ahc8bHLlNAMWk1Db8iYK8VTuLLuizYiZWw+dSI=\n=MtTN\n-----END PGP SIGNATURE-----\n", "payload": "tree 2ccebb0e19f229442bc7ab494b724bc3b6f6379b\nparent ccf0e3e068398eea85b0cc699948f406d3d35822\nparent 5b34bf460c68aea356633fd17760a99cc0794f4f\nauthor Dylan DPC <dylan.dpc@gmail.com> 1620300661 +0200\ncommitter GitHub <noreply@github.com> 1620300661 +0200\n\nRollup merge of #84950 - pietroalbini:revert-3478f83c0, r=Mark-Simulacrum\n\nRevert PR 83866\n\nhttps://github.com/rust-lang/rust/pull/83866 caused multiple test failures when Rust's channel is changed from nightly to anything else. The PR will have to be landed again after the test suite is fixed.\n\nThe two kinds of test failures were:\n\n* Rustdoc tests failed because the links in the generated HTML didn't point at nightly anymore, see https://github.com/rust-lang/rust/pull/84909#issuecomment-832028701\n* Rustdoc UI tests failed because the links included in error messages didn't point at nightly anymore, see https://github.com/rust-lang/rust/pull/84909#issuecomment-832517722\n\nr? ``@Mark-Simulacrum``\ncc ``@jyn514``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775", "html_url": "https://github.com/rust-lang/rust/commit/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccf0e3e068398eea85b0cc699948f406d3d35822", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccf0e3e068398eea85b0cc699948f406d3d35822", "html_url": "https://github.com/rust-lang/rust/commit/ccf0e3e068398eea85b0cc699948f406d3d35822"}, {"sha": "5b34bf460c68aea356633fd17760a99cc0794f4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b34bf460c68aea356633fd17760a99cc0794f4f", "html_url": "https://github.com/rust-lang/rust/commit/5b34bf460c68aea356633fd17760a99cc0794f4f"}], "stats": {"total": 55, "additions": 8, "deletions": 47}, "files": [{"sha": "47dae63f1fdf73f8f7bb65aaa547ac46c222ceb2", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775", "patch": "@@ -517,10 +517,9 @@ impl Item {\n                                 Some(ExternalLocation::Remote(ref s)) => {\n                                     format!(\"{}/std/\", s.trim_end_matches('/'))\n                                 }\n-                                Some(ExternalLocation::Unknown) | None => format!(\n-                                    \"https://doc.rust-lang.org/{}/std/\",\n-                                    crate::doc_rust_lang_org_channel(),\n-                                ),\n+                                Some(ExternalLocation::Unknown) | None => {\n+                                    \"https://doc.rust-lang.org/nightly/std/\".to_string()\n+                                }\n                             };\n                             // This is a primitive so the url is done \"by hand\".\n                             let tail = fragment.find('#').unwrap_or_else(|| fragment.len());"}, {"sha": "51a011cf1977364ec7081bac0e954156f8835b31", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775", "patch": "@@ -542,14 +542,3 @@ crate fn has_doc_flag(attrs: ty::Attributes<'_>, flag: Symbol) -> bool {\n             && attr.meta_item_list().map_or(false, |l| rustc_attr::list_contains_name(&l, flag))\n     })\n }\n-\n-/// Return a channel suitable for using in a `doc.rust-lang.org/{channel}` format string.\n-crate fn doc_rust_lang_org_channel() -> &'static str {\n-    match env!(\"CFG_RELEASE_CHANNEL\") {\n-        \"stable\" => env!(\"CFG_RELEASE_NUM\"),\n-        \"beta\" => \"beta\",\n-        \"nightly\" | \"dev\" => \"nightly\",\n-        // custom build of rustdoc maybe? link to the stable docs just in case\n-        _ => \"\",\n-    }\n-}"}, {"sha": "7b0c0b6699653a1f0a877140a4109b5db4e2c6ff", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775", "patch": "@@ -406,18 +406,15 @@ crate fn run_global_ctxt(\n     let mut krate = tcx.sess.time(\"clean_crate\", || clean::krate(&mut ctxt));\n \n     if krate.module.doc_value().map(|d| d.is_empty()).unwrap_or(true) {\n-        let help = format!(\n-            \"The following guide may be of use:\\n\\\n-            https://doc.rust-lang.org/{}/rustdoc/how-to-write-documentation.html\",\n-            crate::doc_rust_lang_org_channel(),\n-        );\n+        let help = \"The following guide may be of use:\\n\\\n+                https://doc.rust-lang.org/nightly/rustdoc/how-to-write-documentation.html\";\n         tcx.struct_lint_node(\n             crate::lint::MISSING_CRATE_LEVEL_DOCS,\n             DocContext::as_local_hir_id(tcx, krate.module.def_id).unwrap(),\n             |lint| {\n                 let mut diag =\n                     lint.build(\"no documentation found for this crate's top-level module\");\n-                diag.help(&help);\n+                diag.help(help);\n                 diag.emit();\n             },\n         );"}, {"sha": "169ef015fa88c71bff5c03da04b59b27fb83a1b5", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775", "patch": "@@ -82,8 +82,6 @@ use rustc_session::config::{make_crate_type_option, ErrorOutputType, RustcOptGro\n use rustc_session::getopts;\n use rustc_session::{early_error, early_warn};\n \n-use crate::clean::utils::doc_rust_lang_org_channel;\n-\n /// A macro to create a FxHashMap.\n ///\n /// Example:\n@@ -606,10 +604,7 @@ fn usage(argv0: &str) {\n     }\n     println!(\"{}\", options.usage(&format!(\"{} [options] <input>\", argv0)));\n     println!(\"    @path               Read newline separated options from `path`\\n\");\n-    println!(\n-        \"More information available at https://doc.rust-lang.org/{}/rustdoc/what-is-rustdoc.html\",\n-        doc_rust_lang_org_channel()\n-    );\n+    println!(\"More information available at https://doc.rust-lang.org/rustdoc/what-is-rustdoc.html\")\n }\n \n /// A result type used by several functions under `main()`."}, {"sha": "25b6c187f3b27315d67b68d56f63f96edb39d07e", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775", "patch": "@@ -2017,14 +2017,7 @@ fn disambiguator_error(\n     msg: &str,\n ) {\n     diag_info.link_range = disambiguator_range;\n-    report_diagnostic(cx.tcx, BROKEN_INTRA_DOC_LINKS, msg, &diag_info, |diag, _sp| {\n-        let msg = format!(\n-            \"see https://doc.rust-lang.org/{}/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators \\\n-             for more info about disambiguators\",\n-            crate::doc_rust_lang_org_channel(),\n-        );\n-        diag.note(&msg);\n-    });\n+    report_diagnostic(cx.tcx, BROKEN_INTRA_DOC_LINKS, msg, &diag_info, |_diag, _sp| {});\n }\n \n /// Report an ambiguity error, where there were multiple possible resolutions."}, {"sha": "de215b2163bd4e28d1100720c34876aa08ec4f8f", "filename": "src/test/rustdoc-ui/intra-doc/email-address-localhost.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.stderr?ref=ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775", "patch": "@@ -10,7 +10,6 @@ note: the lint level is defined here\n LL | #![deny(warnings)]\n    |         ^^^^^^^^\n    = note: `#[deny(rustdoc::broken_intra_doc_links)]` implied by `#[deny(warnings)]`\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: aborting due to previous error\n "}, {"sha": "195aaca32a27d860b1a4ac9eecddaeec966e73f7", "filename": "src/test/rustdoc-ui/intra-doc/unknown-disambiguator.stderr", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.stderr?ref=ccc820e1f8eb8d8d142bd93d578bb5c7d9bb6775", "patch": "@@ -10,47 +10,36 @@ note: the lint level is defined here\n LL | #![deny(warnings)]\n    |         ^^^^^^^^\n    = note: `#[deny(rustdoc::broken_intra_doc_links)]` implied by `#[deny(warnings)]`\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator `bar`\n   --> $DIR/unknown-disambiguator.rs:3:35\n    |\n LL | //! Linking to [foo@banana] and [`bar@banana!()`].\n    |                                   ^^^\n-   |\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator `foo`\n   --> $DIR/unknown-disambiguator.rs:9:34\n    |\n LL | //! And with weird backticks: [``foo@hello``] [foo`@`hello].\n    |                                  ^^^\n-   |\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator `foo`\n   --> $DIR/unknown-disambiguator.rs:9:48\n    |\n LL | //! And with weird backticks: [``foo@hello``] [foo`@`hello].\n    |                                                ^^^\n-   |\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator ``\n   --> $DIR/unknown-disambiguator.rs:6:31\n    |\n LL | //! And to [no disambiguator](@nectarine) and [another](@apricot!()).\n    |                               ^\n-   |\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator ``\n   --> $DIR/unknown-disambiguator.rs:6:57\n    |\n LL | //! And to [no disambiguator](@nectarine) and [another](@apricot!()).\n    |                                                         ^\n-   |\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: aborting due to 6 previous errors\n "}]}