{"sha": "194d96e5c3b3bf069ff791813641b7d22f4f42e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NGQ5NmU1YzNiM2JmMDY5ZmY3OTE4MTM2NDFiN2QyMmY0ZjQyZTk=", "commit": {"author": {"name": "Eunji Jeong", "email": "eun-ji.jeong@samsung.com", "date": "2015-02-16T08:48:50Z"}, "committer": {"name": "Eunji Jeong", "email": "eun-ji.jeong@samsung.com", "date": "2015-02-16T08:48:50Z"}, "message": "Lower the default dwarf version for android", "tree": {"sha": "03a9fa702464b32915f3c6d28cacc7b1d7faba4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03a9fa702464b32915f3c6d28cacc7b1d7faba4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/194d96e5c3b3bf069ff791813641b7d22f4f42e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/194d96e5c3b3bf069ff791813641b7d22f4f42e9", "html_url": "https://github.com/rust-lang/rust/commit/194d96e5c3b3bf069ff791813641b7d22f4f42e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/194d96e5c3b3bf069ff791813641b7d22f4f42e9/comments", "author": {"login": "ejjeong", "id": 10492346, "node_id": "MDQ6VXNlcjEwNDkyMzQ2", "avatar_url": "https://avatars.githubusercontent.com/u/10492346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejjeong", "html_url": "https://github.com/ejjeong", "followers_url": "https://api.github.com/users/ejjeong/followers", "following_url": "https://api.github.com/users/ejjeong/following{/other_user}", "gists_url": "https://api.github.com/users/ejjeong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejjeong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejjeong/subscriptions", "organizations_url": "https://api.github.com/users/ejjeong/orgs", "repos_url": "https://api.github.com/users/ejjeong/repos", "events_url": "https://api.github.com/users/ejjeong/events{/privacy}", "received_events_url": "https://api.github.com/users/ejjeong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ejjeong", "id": 10492346, "node_id": "MDQ6VXNlcjEwNDkyMzQ2", "avatar_url": "https://avatars.githubusercontent.com/u/10492346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejjeong", "html_url": "https://github.com/ejjeong", "followers_url": "https://api.github.com/users/ejjeong/followers", "following_url": "https://api.github.com/users/ejjeong/following{/other_user}", "gists_url": "https://api.github.com/users/ejjeong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejjeong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejjeong/subscriptions", "organizations_url": "https://api.github.com/users/ejjeong/orgs", "repos_url": "https://api.github.com/users/ejjeong/repos", "events_url": "https://api.github.com/users/ejjeong/events{/privacy}", "received_events_url": "https://api.github.com/users/ejjeong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f1411197bdc7c8c120a951ca340d205d266da12", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f1411197bdc7c8c120a951ca340d205d266da12", "html_url": "https://github.com/rust-lang/rust/commit/4f1411197bdc7c8c120a951ca340d205d266da12"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "64b0e0cfd6baca44462cd6b733329580aaf1c277", "filename": "src/librustc_back/target/aarch64_linux_android.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/194d96e5c3b3bf069ff791813641b7d22f4f42e9/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/194d96e5c3b3bf069ff791813641b7d22f4f42e9/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs?ref=194d96e5c3b3bf069ff791813641b7d22f4f42e9", "patch": "@@ -13,6 +13,7 @@ use target::Target;\n pub fn target() -> Target {\n     let mut base = super::linux_base::opts();\n     base.pre_link_args.push(\"-Wl,--allow-multiple-definition\".to_string());\n+    base.is_like_android = true;\n     base.position_independent_executables = true;\n     Target {\n         data_layout: \"e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-\\"}, {"sha": "fad9344143155628ee92b56fdda2ff0819dfd8af", "filename": "src/librustc_back/target/arm_linux_androideabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/194d96e5c3b3bf069ff791813641b7d22f4f42e9/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/194d96e5c3b3bf069ff791813641b7d22f4f42e9/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs?ref=194d96e5c3b3bf069ff791813641b7d22f4f42e9", "patch": "@@ -16,6 +16,7 @@ pub fn target() -> Target {\n     // Many of the symbols defined in compiler-rt are also defined in libgcc.  Android\n     // linker doesn't like that by default.\n     base.pre_link_args.push(\"-Wl,--allow-multiple-definition\".to_string());\n+    base.is_like_android = true;\n     // FIXME #17437 (and #17448): Android doesn't support position dependent executables anymore.\n     base.position_independent_executables = false;\n "}, {"sha": "66a405ef54e9438f549703420f8e5b8f542e19ce", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/194d96e5c3b3bf069ff791813641b7d22f4f42e9/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/194d96e5c3b3bf069ff791813641b7d22f4f42e9/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=194d96e5c3b3bf069ff791813641b7d22f4f42e9", "patch": "@@ -158,6 +158,9 @@ pub struct TargetOptions {\n     /// only realy used for figuring out how to find libraries, since Windows uses its own\n     /// library naming convention. Defaults to false.\n     pub is_like_windows: bool,\n+    /// Whether the target toolchain is like Android's. Only useful for compiling against Android.\n+    /// Defaults to false.\n+    pub is_like_android: bool,\n     /// Whether the linker support GNU-like arguments such as -O. Defaults to false.\n     pub linker_is_gnu: bool,\n     /// Whether the linker support rpaths or not. Defaults to false.\n@@ -197,6 +200,7 @@ impl Default for TargetOptions {\n             staticlib_suffix: \".a\".to_string(),\n             is_like_osx: false,\n             is_like_windows: false,\n+            is_like_android: false,\n             linker_is_gnu: false,\n             has_rpath: false,\n             no_compiler_rt: false,"}, {"sha": "23498089c5839cc2aad225b5acbb7f99ff5aa853", "filename": "src/librustc_trans/trans/debuginfo.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/194d96e5c3b3bf069ff791813641b7d22f4f42e9/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/194d96e5c3b3bf069ff791813641b7d22f4f42e9/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs?ref=194d96e5c3b3bf069ff791813641b7d22f4f42e9", "patch": "@@ -736,7 +736,9 @@ pub fn finalize(cx: &CrateContext) {\n         // instruct LLVM to emit an older version of dwarf, however,\n         // for OS X to understand. For more info see #11352\n         // This can be overridden using --llvm-opts -dwarf-version,N.\n-        if cx.sess().target.target.options.is_like_osx {\n+        // Android has the same issue (#22398)\n+        if cx.sess().target.target.options.is_like_osx ||\n+           cx.sess().target.target.options.is_like_android {\n             llvm::LLVMRustAddModuleFlag(cx.llmod(),\n                                         \"Dwarf Version\\0\".as_ptr() as *const _,\n                                         2)"}]}