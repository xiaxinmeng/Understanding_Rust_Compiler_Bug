{"sha": "303dbccf040de2f61434dc7d716c5feed817fbdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwM2RiY2NmMDQwZGUyZjYxNDM0ZGM3ZDcxNmM1ZmVlZDgxN2ZiZGM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-16T17:05:08Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-16T17:05:08Z"}, "message": "CTFE: dynamically make sure we do not call non-const-fn", "tree": {"sha": "f21c762ea1d8d5dec0ed09b098ca5b7f647110d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f21c762ea1d8d5dec0ed09b098ca5b7f647110d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/303dbccf040de2f61434dc7d716c5feed817fbdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/303dbccf040de2f61434dc7d716c5feed817fbdc", "html_url": "https://github.com/rust-lang/rust/commit/303dbccf040de2f61434dc7d716c5feed817fbdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/303dbccf040de2f61434dc7d716c5feed817fbdc/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b9b97bd9b704f85f0184f7a213cc4d62bd9654c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b9b97bd9b704f85f0184f7a213cc4d62bd9654c", "html_url": "https://github.com/rust-lang/rust/commit/6b9b97bd9b704f85f0184f7a213cc4d62bd9654c"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "51046399ec2017bed8a78d95f84f155f6fc38bd1", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/303dbccf040de2f61434dc7d716c5feed817fbdc/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/303dbccf040de2f61434dc7d716c5feed817fbdc/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=303dbccf040de2f61434dc7d716c5feed817fbdc", "patch": "@@ -365,13 +365,19 @@ impl<'a, 'mir, 'tcx> interpret::Machine<'a, 'mir, 'tcx>\n         ret: Option<mir::BasicBlock>,\n     ) -> EvalResult<'tcx, Option<&'mir mir::Mir<'tcx>>> {\n         debug!(\"eval_fn_call: {:?}\", instance);\n-        if !ecx.tcx.is_const_fn(instance.def_id()) {\n+        // Execution might have wandered off into other crates, so we cannot to a stability-\n+        // sensitive check here.  But we can at least rule out functions that are not const\n+        // at all.\n+        if !ecx.tcx.is_const_fn_raw(instance.def_id()) {\n             // Some functions we support even if they are non-const -- but avoid testing\n-            // that for const fn!\n-            if ecx.hook_fn(instance, args, dest)? {\n+            // that for const fn!  We certainly do *not* want to actually call the fn\n+            // though, so be sure we return here.\n+            return if ecx.hook_fn(instance, args, dest)? {\n                 ecx.goto_block(ret)?; // fully evaluated and done\n-                return Ok(None);\n-            }\n+                Ok(None)\n+            } else {\n+                err!(MachineError(format!(\"calling non-const function `{}`\", instance)))\n+            };\n         }\n         // This is a const fn. Call it.\n         Ok(Some(match ecx.load_mir(instance.def) {"}, {"sha": "bd407192cd7a1079e98050f9bb8b997b8dcf647b", "filename": "src/test/ui/consts/const-call.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/303dbccf040de2f61434dc7d716c5feed817fbdc/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/303dbccf040de2f61434dc7d716c5feed817fbdc/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs?ref=303dbccf040de2f61434dc7d716c5feed817fbdc", "patch": "@@ -15,4 +15,5 @@ fn f(x: usize) -> usize {\n fn main() {\n     let _ = [0; f(2)];\n     //~^ ERROR calls in constants are limited to constant functions\n+    //~| ERROR evaluation of constant value failed\n }"}, {"sha": "219fcec51b386f47196541a4d9d62dd2842351a4", "filename": "src/test/ui/consts/const-call.stderr", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/303dbccf040de2f61434dc7d716c5feed817fbdc/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/303dbccf040de2f61434dc7d716c5feed817fbdc/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr?ref=303dbccf040de2f61434dc7d716c5feed817fbdc", "patch": "@@ -4,6 +4,13 @@ error[E0015]: calls in constants are limited to constant functions, tuple struct\n LL |     let _ = [0; f(2)];\n    |                 ^^^^\n \n-error: aborting due to previous error\n+error[E0080]: evaluation of constant value failed\n+  --> $DIR/const-call.rs:16:17\n+   |\n+LL |     let _ = [0; f(2)];\n+   |                 ^^^^ calling non-const function `f`\n+\n+error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0015`.\n+Some errors occurred: E0015, E0080.\n+For more information about an error, try `rustc --explain E0015`."}]}