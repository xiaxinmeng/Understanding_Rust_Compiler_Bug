{"sha": "d264a56068d7fd881b2e082c4d80d81d22c4ce79", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNjRhNTYwNjhkN2ZkODgxYjJlMDgyYzRkODBkODFkMjJjNGNlNzk=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-08-30T06:53:34Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-11T00:59:05Z"}, "message": "Move call site of `dep_graph_future()`.\n\n`Compiler::register_plugins()` calls `passes::register_plugins()`, which\ncalls `Compiler::dep_graph_future()`. This is the only way in which a\n`passes` function calls a `Compiler` function.\n\nThis commit moves the `dep_graph_future()` call out of\n`passes::register_plugins()` and into `Compiler::register_plugins()`,\nwhich is a more sensible spot for it. This will delay the loading of the\ndep graph slightly -- from the middle of plugin registration to the end\nof plugin registration -- but plugin registration is fast enough\n(especially compared to expansion) that the impact should be neglible.", "tree": {"sha": "bac2a2f1e0ec73b957d0c7771b7eb37ee407e766", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bac2a2f1e0ec73b957d0c7771b7eb37ee407e766"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d264a56068d7fd881b2e082c4d80d81d22c4ce79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d264a56068d7fd881b2e082c4d80d81d22c4ce79", "html_url": "https://github.com/rust-lang/rust/commit/d264a56068d7fd881b2e082c4d80d81d22c4ce79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d264a56068d7fd881b2e082c4d80d81d22c4ce79/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd0c21b0e5b68e29c63c3c98db9147cb0e5a3bc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd0c21b0e5b68e29c63c3c98db9147cb0e5a3bc8", "html_url": "https://github.com/rust-lang/rust/commit/cd0c21b0e5b68e29c63c3c98db9147cb0e5a3bc8"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "200da05c57561f2d3d725fdccce77b6db9eb42f8", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d264a56068d7fd881b2e082c4d80d81d22c4ce79/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d264a56068d7fd881b2e082c4d80d81d22c4ce79/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=d264a56068d7fd881b2e082c4d80d81d22c4ce79", "patch": "@@ -223,7 +223,6 @@ pub struct PluginInfo {\n }\n \n pub fn register_plugins<'a>(\n-    compiler: &Compiler,\n     sess: &'a Session,\n     cstore: &'a CStore,\n     mut krate: ast::Crate,\n@@ -261,9 +260,6 @@ pub fn register_plugins<'a>(\n         });\n     }\n \n-    // If necessary, compute the dependency graph (in the background).\n-    compiler.dep_graph_future().ok();\n-\n     time(sess, \"recursion limit\", || {\n         middle::recursion_limit::update_limits(sess, &krate);\n     });"}, {"sha": "e056d3feb66ec0a0532f8ad8bbbbab1b7bfe0750", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d264a56068d7fd881b2e082c4d80d81d22c4ce79/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d264a56068d7fd881b2e082c4d80d81d22c4ce79/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=d264a56068d7fd881b2e082c4d80d81d22c4ce79", "patch": "@@ -114,13 +114,21 @@ impl Compiler {\n             let crate_name = self.crate_name()?.peek().clone();\n             let krate = self.parse()?.take();\n \n-            passes::register_plugins(\n-                self,\n+            let result = passes::register_plugins(\n                 self.session(),\n                 self.cstore(),\n                 krate,\n                 &crate_name,\n-            )\n+            );\n+\n+            // Compute the dependency graph (in the background). We want to do\n+            // this as early as possible, to give the DepGraph maximum time to\n+            // load before dep_graph() is called, but it also can't happen\n+            // until after rustc_incremental::prepare_session_directory() is\n+            // called, which happens within passes::register_plugins().\n+            self.dep_graph_future().ok();\n+\n+            result\n         })\n     }\n "}]}