{"sha": "07af55edd4253e9eef7c170cec246af1a3589e20", "node_id": "C_kwDOAAsO6NoAKDA3YWY1NWVkZDQyNTNlOWVlZjdjMTcwY2VjMjQ2YWYxYTM1ODllMjA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-11T05:05:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-11T05:05:29Z"}, "message": "Rollup merge of #111448 - compiler-errors:rustdoc-alias-impl, r=notriddle\n\nUse proper impl self type for alias impl in rustdoc\n\nWe don't want to use `type_of(type_alias)`, we want to use `type_of(impl)` -- this will give us the self type of the impl *properly substituted* in the case that it's an alias.\n\nFixes #111420", "tree": {"sha": "458d6d5e2e9b8202b580eca7c9d61f9bfd19889c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/458d6d5e2e9b8202b580eca7c9d61f9bfd19889c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07af55edd4253e9eef7c170cec246af1a3589e20", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkXHeZCRBK7hj4Ov3rIwAArJwIACdVHq+6WjR+usbFtvy8HKmQ\n6x3ikBceJWdQr3PUfEjfbtX8TC6nd8LKpsYO9xPZ3uBo2tXpQGxaJYpN8QHaCQ6U\nu8tuQzuBEgZjwSkrX9UtJHhbruPQJ9ZDoelvBVCRoXo/dpDxf/NDaJ4xIJ/SJADq\ntY1YQSBhQMCAnWDs0WcOhD/nvbsg6MzOAlVqdSn2GADE/NHLv6dkb6bIIVxkFJJI\nbu3iEQ89kJHbvJ1YvGkwfrawR7ELlzo0kAKfdgEI3gNW1AMnTwq63i6uHUbirMOn\nf8Lq49BCZToOKhG+ClKHwyKbZyZ8NMnK9x0Azfq9k6o0id5Nzjjl8fFMLDxLsgU=\n=XpHW\n-----END PGP SIGNATURE-----\n", "payload": "tree 458d6d5e2e9b8202b580eca7c9d61f9bfd19889c\nparent 968911dbc0fc58e19efb41bd6393a89723450b27\nparent 6509c42d165eab4a6a91fd94114e3df85532fd80\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1683781529 +0200\ncommitter GitHub <noreply@github.com> 1683781529 +0200\n\nRollup merge of #111448 - compiler-errors:rustdoc-alias-impl, r=notriddle\n\nUse proper impl self type for alias impl in rustdoc\n\nWe don't want to use `type_of(type_alias)`, we want to use `type_of(impl)` -- this will give us the self type of the impl *properly substituted* in the case that it's an alias.\n\nFixes #111420\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07af55edd4253e9eef7c170cec246af1a3589e20", "html_url": "https://github.com/rust-lang/rust/commit/07af55edd4253e9eef7c170cec246af1a3589e20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07af55edd4253e9eef7c170cec246af1a3589e20/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "968911dbc0fc58e19efb41bd6393a89723450b27", "url": "https://api.github.com/repos/rust-lang/rust/commits/968911dbc0fc58e19efb41bd6393a89723450b27", "html_url": "https://github.com/rust-lang/rust/commit/968911dbc0fc58e19efb41bd6393a89723450b27"}, {"sha": "6509c42d165eab4a6a91fd94114e3df85532fd80", "url": "https://api.github.com/repos/rust-lang/rust/commits/6509c42d165eab4a6a91fd94114e3df85532fd80", "html_url": "https://github.com/rust-lang/rust/commit/6509c42d165eab4a6a91fd94114e3df85532fd80"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "59a3e63172406892bf116ff252e1268fae0a39cd", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/07af55edd4253e9eef7c170cec246af1a3589e20/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07af55edd4253e9eef7c170cec246af1a3589e20/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=07af55edd4253e9eef7c170cec246af1a3589e20", "patch": "@@ -2414,14 +2414,15 @@ fn clean_impl<'tcx>(\n     }\n \n     let for_ = clean_ty(impl_.self_ty, cx);\n-    let type_alias = for_.def_id(&cx.cache).and_then(|did| match tcx.def_kind(did) {\n-        DefKind::TyAlias => Some(clean_middle_ty(\n-            ty::Binder::dummy(tcx.type_of(did).subst_identity()),\n-            cx,\n-            Some(did),\n-        )),\n-        _ => None,\n-    });\n+    let type_alias =\n+        for_.def_id(&cx.cache).and_then(|alias_def_id: DefId| match tcx.def_kind(alias_def_id) {\n+            DefKind::TyAlias => Some(clean_middle_ty(\n+                ty::Binder::dummy(tcx.type_of(def_id).subst_identity()),\n+                cx,\n+                Some(def_id.to_def_id()),\n+            )),\n+            _ => None,\n+        });\n     let mut make_item = |trait_: Option<Path>, for_: Type, items: Vec<Item>| {\n         let kind = ImplItem(Box::new(Impl {\n             unsafety: impl_.unsafety,"}, {"sha": "82dfffe5f1c223320d656de9bbfc9e2a8b899db1", "filename": "tests/rustdoc/impl-alias-substituted.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/07af55edd4253e9eef7c170cec246af1a3589e20/tests%2Frustdoc%2Fimpl-alias-substituted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07af55edd4253e9eef7c170cec246af1a3589e20/tests%2Frustdoc%2Fimpl-alias-substituted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fimpl-alias-substituted.rs?ref=07af55edd4253e9eef7c170cec246af1a3589e20", "patch": "@@ -0,0 +1,9 @@\n+pub struct Matrix<T, const N: usize, const M: usize>([[T; N]; M]);\n+\n+pub type Vector<T, const N: usize> = Matrix<T, N, 1>;\n+\n+// @has \"impl_alias_substituted/struct.Matrix.html\" '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n+//  \"impl<T: Copy> Matrix<T, 3, 1>\"\n+impl<T: Copy> Vector<T, 3> {\n+    pub fn test() {}\n+}"}]}