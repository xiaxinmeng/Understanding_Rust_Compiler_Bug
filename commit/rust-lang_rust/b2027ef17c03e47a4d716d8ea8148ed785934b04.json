{"sha": "b2027ef17c03e47a4d716d8ea8148ed785934b04", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMDI3ZWYxN2MwM2U0N2E0ZDcxNmQ4ZWE4MTQ4ZWQ3ODU5MzRiMDQ=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-04-05T15:20:08Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-04-11T22:13:51Z"}, "message": "Deprecate the std_unicode crate", "tree": {"sha": "d70cfc5e32ec8e61f8a612c7c6b4f3e54c044a7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d70cfc5e32ec8e61f8a612c7c6b4f3e54c044a7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2027ef17c03e47a4d716d8ea8148ed785934b04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2027ef17c03e47a4d716d8ea8148ed785934b04", "html_url": "https://github.com/rust-lang/rust/commit/b2027ef17c03e47a4d716d8ea8148ed785934b04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2027ef17c03e47a4d716d8ea8148ed785934b04/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5807be7ccb2c14df9db87a54038221bbf5ae00fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/5807be7ccb2c14df9db87a54038221bbf5ae00fa", "html_url": "https://github.com/rust-lang/rust/commit/5807be7ccb2c14df9db87a54038221bbf5ae00fa"}], "stats": {"total": 33, "additions": 13, "deletions": 20}, "files": [{"sha": "6e7c4b67acf24ade2fe82c5e9286830dde9d3e85", "filename": "src/Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -13,7 +13,6 @@ dependencies = [\n  \"compiler_builtins 0.0.0\",\n  \"core 0.0.0\",\n  \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"std_unicode 0.0.0\",\n ]\n \n [[package]]"}, {"sha": "853923ad947cd2ced021be50f5e7ef8e93c73c51", "filename": "src/ci/docker/wasm32-unknown/Dockerfile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fci%2Fdocker%2Fwasm32-unknown%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fci%2Fdocker%2Fwasm32-unknown%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fwasm32-unknown%2FDockerfile?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -34,4 +34,3 @@ ENV SCRIPT python2.7 /checkout/x.py test --target $TARGETS \\\n   src/test/mir-opt \\\n   src/test/codegen-units \\\n   src/libcore \\\n-  src/libstd_unicode/ \\"}, {"sha": "6a7aea7f1c27e5b60345786c9b6a020315577cd3", "filename": "src/doc/unstable-book/src/language-features/lang-items.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -243,7 +243,7 @@ the source code.\n   - `usize`: `libcore/num/mod.rs`\n   - `f32`: `libstd/f32.rs`\n   - `f64`: `libstd/f64.rs`\n-  - `char`: `libstd_unicode/char.rs`\n+  - `char`: `libcore/char.rs`\n   - `slice`: `liballoc/slice.rs`\n   - `str`: `liballoc/str.rs`\n   - `const_ptr`: `libcore/ptr.rs`"}, {"sha": "6383bd1e941ed48c4ae5c02fbc0c9b9bdfe02720", "filename": "src/liballoc/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2FCargo.toml?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -9,7 +9,6 @@ path = \"lib.rs\"\n \n [dependencies]\n core = { path = \"../libcore\" }\n-std_unicode = { path = \"../libstd_unicode\" }\n compiler_builtins = { path = \"../rustc/compiler_builtins_shim\" }\n \n [dev-dependencies]"}, {"sha": "d1a91ab4a9ce1ad7ec32a97f9f69442a635edc70", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -135,8 +135,6 @@ extern crate test;\n #[cfg(test)]\n extern crate rand;\n \n-extern crate std_unicode;\n-\n // Module with internal macros used by other modules (needs to be included before other modules).\n #[macro_use]\n mod macros;"}, {"sha": "eaca9eb49f9f0916bbf62b8f414f22376d8f523b", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -45,12 +45,11 @@ use core::str::pattern::{Searcher, ReverseSearcher, DoubleEndedSearcher};\n use core::mem;\n use core::ptr;\n use core::iter::FusedIterator;\n-use std_unicode::str::{UnicodeStr, Utf16Encoder};\n+use core::unicode::str::{UnicodeStr, Utf16Encoder};\n \n use vec_deque::VecDeque;\n use borrow::{Borrow, ToOwned};\n use string::String;\n-use std_unicode;\n use vec::Vec;\n use slice::{SliceConcatExt, SliceIndex};\n use boxed::Box;\n@@ -75,7 +74,7 @@ pub use core::str::{from_utf8, from_utf8_mut, Chars, CharIndices, Bytes};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::str::{from_utf8_unchecked, from_utf8_unchecked_mut, ParseBoolError};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use std_unicode::str::SplitWhitespace;\n+pub use core::unicode::str::SplitWhitespace;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::str::pattern;\n \n@@ -1960,7 +1959,7 @@ impl str {\n         }\n \n         fn case_ignoreable_then_cased<I: Iterator<Item = char>>(iter: I) -> bool {\n-            use std_unicode::derived_property::{Cased, Case_Ignorable};\n+            use core::unicode::derived_property::{Cased, Case_Ignorable};\n             match iter.skip_while(|&c| Case_Ignorable(c)).next() {\n                 Some(c) => Cased(c),\n                 None => false,"}, {"sha": "a902f0bb06b622f722c73450cd2d39904a7e2cac", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -64,7 +64,7 @@ use core::ops::{self, Add, AddAssign, Index, IndexMut, RangeBounds};\n use core::ptr;\n use core::str::pattern::Pattern;\n use core::str::lossy;\n-use std_unicode::char::{decode_utf16, REPLACEMENT_CHARACTER};\n+use core::unicode::char::{decode_utf16, REPLACEMENT_CHARACTER};\n \n use borrow::{Cow, ToOwned};\n use str::{self, from_boxed_utf8_unchecked, FromStr, Utf8Error, Chars};"}, {"sha": "fddf341d0d18eb2654e1c5aa51242a68a34e2725", "filename": "src/liballoc/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flib.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -29,7 +29,7 @@\n #![feature(inclusive_range_fields)]\n \n extern crate alloc_system;\n-extern crate std_unicode;\n+extern crate core;\n extern crate rand;\n \n use std::hash::{Hash, Hasher};"}, {"sha": "763dbe675b91d63a46cde708bc4c64b5666cf3e0", "filename": "src/liballoc/tests/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Ftests%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Ftests%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstr.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -1204,7 +1204,7 @@ fn test_rev_split_char_iterator_no_trailing() {\n \n #[test]\n fn test_utf16_code_units() {\n-    use std_unicode::str::Utf16Encoder;\n+    use core::unicode::str::Utf16Encoder;\n     assert_eq!(Utf16Encoder::new(vec!['\u00e9', '\\u{1F4A9}'].into_iter()).collect::<Vec<u16>>(),\n                [0xE9, 0xD83D, 0xDCA9])\n }"}, {"sha": "33f20be100db6721bcd39e0fbea398e49cbb9e93", "filename": "src/liballoc/tests/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Fliballoc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstring.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -132,7 +132,7 @@ fn test_from_utf16() {\n         let s_as_utf16 = s.encode_utf16().collect::<Vec<u16>>();\n         let u_as_string = String::from_utf16(&u).unwrap();\n \n-        assert!(::std_unicode::char::decode_utf16(u.iter().cloned()).all(|r| r.is_ok()));\n+        assert!(::core::unicode::char::decode_utf16(u.iter().cloned()).all(|r| r.is_ok()));\n         assert_eq!(s_as_utf16, u);\n \n         assert_eq!(u_as_string, s);"}, {"sha": "6e2626cc362ba26cf863f035e5a498a11abfd5c3", "filename": "src/libcore/char.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -10,7 +10,7 @@\n \n //! Character manipulation.\n //!\n-//! For more details, see ::std_unicode::char (a.k.a. std::char)\n+//! For more details, see ::core::unicode::char (a.k.a. std::char)\n \n #![allow(non_snake_case)]\n #![stable(feature = \"core_char\", since = \"1.2.0\")]"}, {"sha": "9ac034869acb845e4e4dc0063a45faa9fde9efdb", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -41,7 +41,6 @@ extern crate serialize;\n #[macro_use] extern crate syntax;\n extern crate syntax_pos;\n extern crate test as testing;\n-extern crate std_unicode;\n #[macro_use] extern crate log;\n extern crate rustc_errors as errors;\n extern crate pulldown_cmark;"}, {"sha": "16bca9ddcd3289bd6656335df944f9a9e50d551f", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -354,7 +354,6 @@ extern crate core as __core;\n #[macro_reexport(vec, format)]\n extern crate alloc;\n extern crate alloc_system;\n-extern crate std_unicode;\n #[doc(masked)]\n extern crate libc;\n \n@@ -455,7 +454,7 @@ pub use alloc::string;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use alloc::vec;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use std_unicode::char;\n+pub use core::unicode::char;\n #[stable(feature = \"i128\", since = \"1.26.0\")]\n pub use core::u128;\n "}, {"sha": "29de017c64d88f761563d7461318a26152120063", "filename": "src/libstd_unicode/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibstd_unicode%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibstd_unicode%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Flib.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -31,5 +31,6 @@\n \n #![feature(unicode)]\n #![feature(staged_api)]\n+#![rustc_deprecated(since = \"1.27.0\", reason = \"moved into libcore\")]\n \n pub use core::unicode::*;"}, {"sha": "9de905c01d6c7bbe17da9041559e9d4d301df52a", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -32,9 +32,9 @@\n extern crate rustc_cratesio_shim;\n \n #[macro_use] extern crate bitflags;\n+extern crate core;\n extern crate serialize;\n #[macro_use] extern crate log;\n-extern crate std_unicode;\n pub extern crate rustc_errors as errors;\n extern crate syntax_pos;\n extern crate rustc_data_structures;"}, {"sha": "cb3323c7eca4e68ab5ae40a2e8e515bc5401123f", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2027ef17c03e47a4d716d8ea8148ed785934b04/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=b2027ef17c03e47a4d716d8ea8148ed785934b04", "patch": "@@ -15,7 +15,7 @@ use errors::{FatalError, DiagnosticBuilder};\n use parse::{token, ParseSess};\n use str::char_at;\n use symbol::{Symbol, keywords};\n-use std_unicode::property::Pattern_White_Space;\n+use core::unicode::property::Pattern_White_Space;\n \n use std::borrow::Cow;\n use std::char;"}]}