{"sha": "8b710e95353d9f840f78645c9593a66adb0636b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNzEwZTk1MzUzZDlmODQwZjc4NjQ1Yzk1OTNhNjZhZGIwNjM2YjY=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-09-26T02:01:42Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-09-26T08:53:16Z"}, "message": "generate testsuite for impl_type", "tree": {"sha": "6a918130bce71b0a4fc331501086d2f65c46a957", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a918130bce71b0a4fc331501086d2f65c46a957"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b710e95353d9f840f78645c9593a66adb0636b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b710e95353d9f840f78645c9593a66adb0636b6", "html_url": "https://github.com/rust-lang/rust/commit/8b710e95353d9f840f78645c9593a66adb0636b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b710e95353d9f840f78645c9593a66adb0636b6/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edf1cc3582a842837d64fa6ec08df00c028521f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/edf1cc3582a842837d64fa6ec08df00c028521f9", "html_url": "https://github.com/rust-lang/rust/commit/edf1cc3582a842837d64fa6ec08df00c028521f9"}], "stats": {"total": 107, "additions": 94, "deletions": 13}, "files": [{"sha": "5dfdb470ca8e40264c0c3913e46d29ba7895592d", "filename": "crates/ra_syntax/src/grammar/items/traits.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b710e95353d9f840f78645c9593a66adb0636b6/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b710e95353d9f840f78645c9593a66adb0636b6/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=8b710e95353d9f840f78645c9593a66adb0636b6", "patch": "@@ -57,7 +57,7 @@ pub(super) fn impl_item(p: &mut Parser) {\n     p.eat(EXCL);\n     impl_type(p);\n     if p.eat(FOR_KW) {\n-        types::type_(p);\n+        impl_type(p);\n     }\n     type_params::opt_where_clause(p);\n     if p.at(L_CURLY) {\n@@ -116,10 +116,11 @@ fn choose_type_params_over_qpath(p: &Parser) -> bool {\n         && (p.nth(2) == R_ANGLE || p.nth(2) == COMMA || p.nth(2) == COLON || p.nth(2) == EQ)\n }\n \n+// test impl_type\n // impl Type {}\n-//      ^^^^\n-// impl Trait for T {}\n-//      ^^^^^\n+// impl Trait1 for T {}\n+// impl impl NotType {}\n+// impl Trait2 for impl NotType {}\n pub(crate) fn impl_type(p: &mut Parser) {\n     if p.at(IMPL_KW) {\n         p.error(\"expected trait or type\");\n@@ -128,4 +129,3 @@ pub(crate) fn impl_type(p: &mut Parser) {\n     types::type_(p);\n }\n \n-"}, {"sha": "829ca1c4be9f7289015cf9ca64f68bc7256b3072", "filename": "crates/ra_syntax/tests/data/parser/err/0026_imp_recovery.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8b710e95353d9f840f78645c9593a66adb0636b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b710e95353d9f840f78645c9593a66adb0636b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.rs?ref=8b710e95353d9f840f78645c9593a66adb0636b6", "patch": "@@ -1,3 +1,2 @@\n impl<T: Clone>\n-impl<T> OnceCell<T> {\n-}\n+impl<T> OnceCell<T> {}"}, {"sha": "9e26f58a08c6f077dc6160e1893c715a16742c41", "filename": "crates/ra_syntax/tests/data/parser/err/0026_imp_recovery.txt", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8b710e95353d9f840f78645c9593a66adb0636b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8b710e95353d9f840f78645c9593a66adb0636b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.txt?ref=8b710e95353d9f840f78645c9593a66adb0636b6", "patch": "@@ -1,4 +1,4 @@\n-ROOT@[0; 39)\n+ROOT@[0; 38)\n   IMPL_ITEM@[0; 14)\n     IMPL_KW@[0; 4)\n     TYPE_PARAM_LIST@[4; 14)\n@@ -17,7 +17,7 @@ ROOT@[0; 39)\n       err: `expected trait or type`\n       err: `expected `{``\n   WHITESPACE@[14; 15)\n-  IMPL_ITEM@[15; 38)\n+  IMPL_ITEM@[15; 37)\n     IMPL_KW@[15; 19)\n     TYPE_PARAM_LIST@[19; 22)\n       L_ANGLE@[19; 20)\n@@ -41,8 +41,7 @@ ROOT@[0; 39)\n                       IDENT@[32; 33) \"T\"\n             R_ANGLE@[33; 34)\n     WHITESPACE@[34; 35)\n-    ITEM_LIST@[35; 38)\n+    ITEM_LIST@[35; 37)\n       L_CURLY@[35; 36)\n-      WHITESPACE@[36; 37)\n-      R_CURLY@[37; 38)\n-  WHITESPACE@[38; 39)\n+      R_CURLY@[36; 37)\n+  WHITESPACE@[37; 38)"}, {"sha": "b8c7b65e31d75de01764e7bd95ff519edfa6b3fa", "filename": "crates/ra_syntax/tests/data/parser/inline/0111_impl_type.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b710e95353d9f840f78645c9593a66adb0636b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b710e95353d9f840f78645c9593a66adb0636b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.rs?ref=8b710e95353d9f840f78645c9593a66adb0636b6", "patch": "@@ -0,0 +1,4 @@\n+impl Type {}\n+impl Trait1 for T {}\n+impl impl NotType {}\n+impl Trait2 for impl NotType {}"}, {"sha": "a2907b060c75435cd21d9bffbadb4de394450d50", "filename": "crates/ra_syntax/tests/data/parser/inline/0111_impl_type.txt", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/8b710e95353d9f840f78645c9593a66adb0636b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8b710e95353d9f840f78645c9593a66adb0636b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.txt?ref=8b710e95353d9f840f78645c9593a66adb0636b6", "patch": "@@ -0,0 +1,79 @@\n+ROOT@[0; 87)\n+  IMPL_ITEM@[0; 12)\n+    IMPL_KW@[0; 4)\n+    WHITESPACE@[4; 5)\n+    PATH_TYPE@[5; 9)\n+      PATH@[5; 9)\n+        PATH_SEGMENT@[5; 9)\n+          NAME_REF@[5; 9)\n+            IDENT@[5; 9) \"Type\"\n+    WHITESPACE@[9; 10)\n+    ITEM_LIST@[10; 12)\n+      L_CURLY@[10; 11)\n+      R_CURLY@[11; 12)\n+  WHITESPACE@[12; 13)\n+  IMPL_ITEM@[13; 33)\n+    IMPL_KW@[13; 17)\n+    WHITESPACE@[17; 18)\n+    PATH_TYPE@[18; 24)\n+      PATH@[18; 24)\n+        PATH_SEGMENT@[18; 24)\n+          NAME_REF@[18; 24)\n+            IDENT@[18; 24) \"Trait1\"\n+    WHITESPACE@[24; 25)\n+    FOR_KW@[25; 28)\n+    WHITESPACE@[28; 29)\n+    PATH_TYPE@[29; 30)\n+      PATH@[29; 30)\n+        PATH_SEGMENT@[29; 30)\n+          NAME_REF@[29; 30)\n+            IDENT@[29; 30) \"T\"\n+    WHITESPACE@[30; 31)\n+    ITEM_LIST@[31; 33)\n+      L_CURLY@[31; 32)\n+      R_CURLY@[32; 33)\n+  WHITESPACE@[33; 34)\n+  IMPL_ITEM@[34; 38)\n+    IMPL_KW@[34; 38)\n+    err: `expected trait or type`\n+    err: `expected `{``\n+  WHITESPACE@[38; 39)\n+  IMPL_ITEM@[39; 54)\n+    IMPL_KW@[39; 43)\n+    WHITESPACE@[43; 44)\n+    PATH_TYPE@[44; 51)\n+      PATH@[44; 51)\n+        PATH_SEGMENT@[44; 51)\n+          NAME_REF@[44; 51)\n+            IDENT@[44; 51) \"NotType\"\n+    WHITESPACE@[51; 52)\n+    ITEM_LIST@[52; 54)\n+      L_CURLY@[52; 53)\n+      R_CURLY@[53; 54)\n+  WHITESPACE@[54; 55)\n+  IMPL_ITEM@[55; 70)\n+    IMPL_KW@[55; 59)\n+    WHITESPACE@[59; 60)\n+    PATH_TYPE@[60; 66)\n+      PATH@[60; 66)\n+        PATH_SEGMENT@[60; 66)\n+          NAME_REF@[60; 66)\n+            IDENT@[60; 66) \"Trait2\"\n+    WHITESPACE@[66; 67)\n+    FOR_KW@[67; 70)\n+    err: `expected trait or type`\n+    err: `expected `{``\n+  WHITESPACE@[70; 71)\n+  IMPL_ITEM@[71; 86)\n+    IMPL_KW@[71; 75)\n+    WHITESPACE@[75; 76)\n+    PATH_TYPE@[76; 83)\n+      PATH@[76; 83)\n+        PATH_SEGMENT@[76; 83)\n+          NAME_REF@[76; 83)\n+            IDENT@[76; 83) \"NotType\"\n+    WHITESPACE@[83; 84)\n+    ITEM_LIST@[84; 86)\n+      L_CURLY@[84; 85)\n+      R_CURLY@[85; 86)\n+  WHITESPACE@[86; 87)"}]}