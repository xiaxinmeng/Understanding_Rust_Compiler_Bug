{"sha": "057e2ed574bb54afeca35f032774bb8b94aaa1d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1N2UyZWQ1NzRiYjU0YWZlY2EzNWYwMzI3NzRiYjhiOTRhYWExZDE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-22T12:32:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-22T12:32:12Z"}, "message": "Merge #8921\n\n8921: Resolve any lifetime variables to 'static after inference r=flodiebold a=flodiebold\n\nChalk's unification can sometimes create lifetime variables, which we\r\ncurrently don't really deal with, but at least we don't want to leak\r\nthem outside of inference.\r\n\r\nShould fix #8919.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "fa4c9d439d9df245e16869e88f4ceceed26b3dde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa4c9d439d9df245e16869e88f4ceceed26b3dde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/057e2ed574bb54afeca35f032774bb8b94aaa1d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgqPnMCRBK7hj4Ov3rIwAA7CwIAEE1nifKUlTQ08mZKOzr0FpC\nD68PUqYqa/yQji6sbbEeRiMPamIfvZqRaG7mNGBOPN/7oMZmGtyDYFpHPGwX9Jg2\nB8hrkgfKy796xmgyZ/d1LF+KFS4pzfVmOMSgrSfqWCdpmxK6pPaGzb1XzxHb8VG+\nBMIF5uQ/aUCuiK/n6ZdygsuD/fLUpXwVZiyXVUjCU+tik8WbRRN7H5VIvefE3KpM\neSzWNxzCGyoKzBzGPaN/1TJN64oBSRM9NsdHDsZf8xyFKBR78x1NLoJ0VxatKsYn\n+HSfujQn0SWp1NvfJ6rj+lE/+mAk8M+f3V4wHNYblBT3NImzTeVFPo/mpEdsAbs=\n=i9FT\n-----END PGP SIGNATURE-----\n", "payload": "tree fa4c9d439d9df245e16869e88f4ceceed26b3dde\nparent 7d81e40e36a7b5451785e224a2f16822834f29a3\nparent 63614aafad6bfe984e67a9b9106b31decb3b59f4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1621686732 +0000\ncommitter GitHub <noreply@github.com> 1621686732 +0000\n\nMerge #8921\n\n8921: Resolve any lifetime variables to 'static after inference r=flodiebold a=flodiebold\n\nChalk's unification can sometimes create lifetime variables, which we\r\ncurrently don't really deal with, but at least we don't want to leak\r\nthem outside of inference.\r\n\r\nShould fix #8919.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/057e2ed574bb54afeca35f032774bb8b94aaa1d1", "html_url": "https://github.com/rust-lang/rust/commit/057e2ed574bb54afeca35f032774bb8b94aaa1d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/057e2ed574bb54afeca35f032774bb8b94aaa1d1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d81e40e36a7b5451785e224a2f16822834f29a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d81e40e36a7b5451785e224a2f16822834f29a3", "html_url": "https://github.com/rust-lang/rust/commit/7d81e40e36a7b5451785e224a2f16822834f29a3"}, {"sha": "63614aafad6bfe984e67a9b9106b31decb3b59f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/63614aafad6bfe984e67a9b9106b31decb3b59f4", "html_url": "https://github.com/rust-lang/rust/commit/63614aafad6bfe984e67a9b9106b31decb3b59f4"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "f8233cac393985af6f838ee35466e8befe52de2b", "filename": "crates/hir_ty/src/infer/unify.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/057e2ed574bb54afeca35f032774bb8b94aaa1d1/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/057e2ed574bb54afeca35f032774bb8b94aaa1d1/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs?ref=057e2ed574bb54afeca35f032774bb8b94aaa1d1", "patch": "@@ -435,7 +435,7 @@ mod resolve {\n     use super::InferenceTable;\n     use crate::{\n         ConcreteConst, Const, ConstData, ConstValue, DebruijnIndex, GenericArg, InferenceVar,\n-        Interner, Ty, TyVariableKind, VariableKind,\n+        Interner, Lifetime, Ty, TyVariableKind, VariableKind,\n     };\n     use chalk_ir::{\n         cast::Cast,\n@@ -524,5 +524,17 @@ mod resolve {\n             };\n             Ok(result)\n         }\n+\n+        fn fold_inference_lifetime(\n+            &mut self,\n+            _var: InferenceVar,\n+            _outer_binder: DebruijnIndex,\n+        ) -> Fallible<Lifetime> {\n+            // fall back all lifetimes to 'static -- currently we don't deal\n+            // with any lifetimes, but we can sometimes get some lifetime\n+            // variables through Chalk's unification, and this at least makes\n+            // sure we don't leak them outside of inference\n+            Ok(crate::static_lifetime())\n+        }\n     }\n }"}]}