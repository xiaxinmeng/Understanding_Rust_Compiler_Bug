{"sha": "d4700a83ce1721b94f2aa3ce070cf86c82cb9979", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NzAwYTgzY2UxNzIxYjk0ZjJhYTNjZTA3MGNmODZjODJjYjk5Nzk=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-27T05:38:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-27T05:38:06Z"}, "message": "Rollup merge of #69479 - matthiaskrgr:op_pred, r=Dylan-DPC\n\nclarify operator precedence", "tree": {"sha": "871b191f3bb40f62f2864cab6a6a8ce5fdac791b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/871b191f3bb40f62f2864cab6a6a8ce5fdac791b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4700a83ce1721b94f2aa3ce070cf86c82cb9979", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeV1W+CRBK7hj4Ov3rIwAAdHIIADw05ZUkIbX4dKL0enDgquv3\nkszwYU6l6+nAbiTA6mjD0MyJjZZEqpz82bl8Mzi4zGLAyS7c3Lfbgeh62bdgFAIx\nqJeK07RrN9CP++8f8MDOh77Puj9jmvI7syU7pYlBpteoK+sG6TL6gLfG2oAZyx38\nLATCOxVzKx4J/9tvK0o9/W5HRXAugQFdZIAsRofBWF51xl20r3W62dDpwifY4N3o\nUDJ4UgIakL2Mk8r1NY1TTksI9gwBu+kSVRZyG4kmeizf+rmT9EUioPHutSB+Xq1g\nD3yHGEO/MCElfvt+4tHXHDr07HZyqeYZjOBRFn8tlQ08x7k6M3UXqhGHmbnhqTs=\n=j1Nw\n-----END PGP SIGNATURE-----\n", "payload": "tree 871b191f3bb40f62f2864cab6a6a8ce5fdac791b\nparent 4cc0295be5f9dc7089d5b762dfeaf3754b3623f2\nparent 1a6b930eebe39aa11d948815b9cd9b792a6de8b4\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1582781886 +0900\ncommitter GitHub <noreply@github.com> 1582781886 +0900\n\nRollup merge of #69479 - matthiaskrgr:op_pred, r=Dylan-DPC\n\nclarify operator precedence\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4700a83ce1721b94f2aa3ce070cf86c82cb9979", "html_url": "https://github.com/rust-lang/rust/commit/d4700a83ce1721b94f2aa3ce070cf86c82cb9979", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4700a83ce1721b94f2aa3ce070cf86c82cb9979/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cc0295be5f9dc7089d5b762dfeaf3754b3623f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cc0295be5f9dc7089d5b762dfeaf3754b3623f2", "html_url": "https://github.com/rust-lang/rust/commit/4cc0295be5f9dc7089d5b762dfeaf3754b3623f2"}, {"sha": "1a6b930eebe39aa11d948815b9cd9b792a6de8b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6b930eebe39aa11d948815b9cd9b792a6de8b4", "html_url": "https://github.com/rust-lang/rust/commit/1a6b930eebe39aa11d948815b9cd9b792a6de8b4"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "aa50e7cdf578d5bae60bd9a5ecb2ed36d502faaf", "filename": "src/libcore/hash/sip.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4700a83ce1721b94f2aa3ce070cf86c82cb9979/src%2Flibcore%2Fhash%2Fsip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4700a83ce1721b94f2aa3ce070cf86c82cb9979/src%2Flibcore%2Fhash%2Fsip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fsip.rs?ref=d4700a83ce1721b94f2aa3ce070cf86c82cb9979", "patch": "@@ -304,7 +304,7 @@ impl<S: Sip> super::Hasher for Hasher<S> {\n \n         if self.ntail != 0 {\n             needed = 8 - self.ntail;\n-            self.tail |= unsafe { u8to64_le(msg, 0, cmp::min(length, needed)) } << 8 * self.ntail;\n+            self.tail |= unsafe { u8to64_le(msg, 0, cmp::min(length, needed)) } << (8 * self.ntail);\n             if length < needed {\n                 self.ntail += length;\n                 return;"}, {"sha": "f96bf6c110cec89eab727898ff41b027343aa38e", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4700a83ce1721b94f2aa3ce070cf86c82cb9979/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4700a83ce1721b94f2aa3ce070cf86c82cb9979/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=d4700a83ce1721b94f2aa3ce070cf86c82cb9979", "patch": "@@ -997,7 +997,7 @@ impl SpecializedEncoder<IntEncodedWithFixedSize> for opaque::Encoder {\n     fn specialized_encode(&mut self, x: &IntEncodedWithFixedSize) -> Result<(), Self::Error> {\n         let start_pos = self.position();\n         for i in 0..IntEncodedWithFixedSize::ENCODED_SIZE {\n-            ((x.0 >> i * 8) as u8).encode(self)?;\n+            ((x.0 >> (i * 8)) as u8).encode(self)?;\n         }\n         let end_pos = self.position();\n         assert_eq!((end_pos - start_pos), IntEncodedWithFixedSize::ENCODED_SIZE);"}, {"sha": "beb28dd072058fd4a74d0c5d28d71b3196f9b91f", "filename": "src/librustc_data_structures/sip128.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4700a83ce1721b94f2aa3ce070cf86c82cb9979/src%2Flibrustc_data_structures%2Fsip128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4700a83ce1721b94f2aa3ce070cf86c82cb9979/src%2Flibrustc_data_structures%2Fsip128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsip128.rs?ref=d4700a83ce1721b94f2aa3ce070cf86c82cb9979", "patch": "@@ -274,7 +274,7 @@ impl Hasher for SipHasher128 {\n \n         if self.ntail != 0 {\n             needed = 8 - self.ntail;\n-            self.tail |= unsafe { u8to64_le(msg, 0, cmp::min(length, needed)) } << 8 * self.ntail;\n+            self.tail |= unsafe { u8to64_le(msg, 0, cmp::min(length, needed)) } << (8 * self.ntail);\n             if length < needed {\n                 self.ntail += length;\n                 return;"}]}