{"sha": "ae3586c9b7521ddb98b7cc4550fdeb91987a66cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMzU4NmM5Yjc1MjFkZGI5OGI3Y2M0NTUwZmRlYjkxOTg3YTY2Y2M=", "commit": {"author": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2020-06-02T02:20:12Z"}, "committer": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2020-06-07T02:36:21Z"}, "message": "Order the Rust and C ABIs first to reduce test churn", "tree": {"sha": "d428fcc3b5b7dc6cc8d40ca9bb33b2bafbe142b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d428fcc3b5b7dc6cc8d40ca9bb33b2bafbe142b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc", "html_url": "https://github.com/rust-lang/rust/commit/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/comments", "author": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "118b50524b79e565f017e08bce9b90a16c63634f", "url": "https://api.github.com/repos/rust-lang/rust/commits/118b50524b79e565f017e08bce9b90a16c63634f", "html_url": "https://github.com/rust-lang/rust/commit/118b50524b79e565f017e08bce9b90a16c63634f"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "226fe0b8bc69bcb68bd73a4f6f4fbe32e8ac652d", "filename": "src/librustc_target/spec/abi.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Flibrustc_target%2Fspec%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Flibrustc_target%2Fspec%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fabi.rs?ref=ae3586c9b7521ddb98b7cc4550fdeb91987a66cc", "patch": "@@ -11,6 +11,15 @@ pub enum Abi {\n     // N.B., this ordering MUST match the AbiDatas array below.\n     // (This is ensured by the test indices_are_correct().)\n \n+    // Multiplatform / generic ABIs\n+    //\n+    // These ABIs come first because every time we add a new ABI, we\n+    // have to re-bless all the hashing tests. These are used in many\n+    // places, so giving them stable values reduces test churn. The\n+    // specific values are meaningless.\n+    Rust = 0,\n+    C = 1,\n+\n     // Single platform ABIs\n     Cdecl,\n     Stdcall,\n@@ -27,8 +36,6 @@ pub enum Abi {\n     EfiApi,\n \n     // Multiplatform / generic ABIs\n-    Rust,\n-    C,\n     System,\n     RustIntrinsic,\n     RustCall,\n@@ -49,6 +56,9 @@ pub struct AbiData {\n \n #[allow(non_upper_case_globals)]\n const AbiDatas: &[AbiData] = &[\n+    // Cross-platform ABIs\n+    AbiData { abi: Abi::Rust, name: \"Rust\", generic: true },\n+    AbiData { abi: Abi::C, name: \"C\", generic: true },\n     // Platform-specific ABIs\n     AbiData { abi: Abi::Cdecl, name: \"cdecl\", generic: false },\n     AbiData { abi: Abi::Stdcall, name: \"stdcall\", generic: false },\n@@ -64,8 +74,6 @@ const AbiDatas: &[AbiData] = &[\n     AbiData { abi: Abi::AmdGpuKernel, name: \"amdgpu-kernel\", generic: false },\n     AbiData { abi: Abi::EfiApi, name: \"efiapi\", generic: false },\n     // Cross-platform ABIs\n-    AbiData { abi: Abi::Rust, name: \"Rust\", generic: true },\n-    AbiData { abi: Abi::C, name: \"C\", generic: true },\n     AbiData { abi: Abi::System, name: \"system\", generic: true },\n     AbiData { abi: Abi::RustIntrinsic, name: \"rust-intrinsic\", generic: true },\n     AbiData { abi: Abi::RustCall, name: \"rust-call\", generic: true },"}, {"sha": "4d4440fd07f22b7b1d9986542ba49980482ede3d", "filename": "src/test/ui/codemap_tests/unicode.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode.stderr?ref=ae3586c9b7521ddb98b7cc4550fdeb91987a66cc", "patch": "@@ -4,7 +4,7 @@ error[E0703]: invalid ABI: found `\u8def\u6feb\u72fc\u00e1\u0301\u0301`\n LL | extern \"\u8def\u6feb\u72fc\u00e1\u0301\u0301\" fn foo() {}\n    |        ^^^^^^^^^ invalid ABI\n    |\n-   = help: valid ABIs: cdecl, stdcall, fastcall, vectorcall, thiscall, aapcs, win64, sysv64, ptx-kernel, msp430-interrupt, x86-interrupt, amdgpu-kernel, efiapi, Rust, C, system, rust-intrinsic, rust-call, platform-intrinsic, unadjusted\n+   = help: valid ABIs: Rust, C, cdecl, stdcall, fastcall, vectorcall, thiscall, aapcs, win64, sysv64, ptx-kernel, msp430-interrupt, x86-interrupt, amdgpu-kernel, efiapi, system, rust-intrinsic, rust-call, platform-intrinsic, unadjusted\n \n error: aborting due to previous error\n "}, {"sha": "9ff28ce51e047abb76fdead63a92e5f10a9912b8", "filename": "src/test/ui/parser/issue-8537.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fparser%2Fissue-8537.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fparser%2Fissue-8537.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-8537.stderr?ref=ae3586c9b7521ddb98b7cc4550fdeb91987a66cc", "patch": "@@ -4,7 +4,7 @@ error[E0703]: invalid ABI: found `invalid-ab_isize`\n LL |   \"invalid-ab_isize\"\n    |   ^^^^^^^^^^^^^^^^^^ invalid ABI\n    |\n-   = help: valid ABIs: cdecl, stdcall, fastcall, vectorcall, thiscall, aapcs, win64, sysv64, ptx-kernel, msp430-interrupt, x86-interrupt, amdgpu-kernel, efiapi, Rust, C, system, rust-intrinsic, rust-call, platform-intrinsic, unadjusted\n+   = help: valid ABIs: Rust, C, cdecl, stdcall, fastcall, vectorcall, thiscall, aapcs, win64, sysv64, ptx-kernel, msp430-interrupt, x86-interrupt, amdgpu-kernel, efiapi, system, rust-intrinsic, rust-call, platform-intrinsic, unadjusted\n \n error: aborting due to previous error\n "}, {"sha": "dec57e06ea24b8a9e9c4f414903ac150b41d6ae2", "filename": "src/test/ui/symbol-names/basic.legacy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fsymbol-names%2Fbasic.legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fsymbol-names%2Fbasic.legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fbasic.legacy.stderr?ref=ae3586c9b7521ddb98b7cc4550fdeb91987a66cc", "patch": "@@ -1,10 +1,10 @@\n-error: symbol-name(_ZN5basic4main17h81759b0695851718E)\n+error: symbol-name(_ZN5basic4main17h4272b3de5e868f5aE)\n   --> $DIR/basic.rs:8:1\n    |\n LL | #[rustc_symbol_name]\n    | ^^^^^^^^^^^^^^^^^^^^\n \n-error: demangling(basic::main::h81759b0695851718)\n+error: demangling(basic::main::h4272b3de5e868f5a)\n   --> $DIR/basic.rs:8:1\n    |\n LL | #[rustc_symbol_name]"}, {"sha": "52ee3452a48f7704188b2201d3422bae65b5795b", "filename": "src/test/ui/symbol-names/impl1.legacy.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.legacy.stderr?ref=ae3586c9b7521ddb98b7cc4550fdeb91987a66cc", "patch": "@@ -1,10 +1,10 @@\n-error: symbol-name(_ZN5impl13foo3Foo3bar17h92cf46db76791039E)\n+error: symbol-name(_ZN5impl13foo3Foo3bar17ha318160f105e638cE)\n   --> $DIR/impl1.rs:16:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n-error: demangling(impl1::foo::Foo::bar::h92cf46db76791039)\n+error: demangling(impl1::foo::Foo::bar::ha318160f105e638c)\n   --> $DIR/impl1.rs:16:9\n    |\n LL |         #[rustc_symbol_name]\n@@ -22,13 +22,13 @@ error: def-path(foo::Foo::bar)\n LL |         #[rustc_def_path]\n    |         ^^^^^^^^^^^^^^^^^\n \n-error: symbol-name(_ZN5impl13bar33_$LT$impl$u20$impl1..foo..Foo$GT$3baz17h90c4a800b1aa0df0E)\n+error: symbol-name(_ZN5impl13bar33_$LT$impl$u20$impl1..foo..Foo$GT$3baz17h6c2dbab6e66f9fa3E)\n   --> $DIR/impl1.rs:34:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n-error: demangling(impl1::bar::<impl impl1::foo::Foo>::baz::h90c4a800b1aa0df0)\n+error: demangling(impl1::bar::<impl impl1::foo::Foo>::baz::h6c2dbab6e66f9fa3)\n   --> $DIR/impl1.rs:34:9\n    |\n LL |         #[rustc_symbol_name]"}, {"sha": "380d20d0b12c684c22dff759e9082bae27d822be", "filename": "src/test/ui/symbol-names/impl1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.rs?ref=ae3586c9b7521ddb98b7cc4550fdeb91987a66cc", "patch": "@@ -3,8 +3,8 @@\n // revisions: legacy v0\n //[legacy]compile-flags: -Z symbol-mangling-version=legacy\n     //[v0]compile-flags: -Z symbol-mangling-version=v0\n-//[legacy]normalize-stderr-32bit: \"h5ef5dfc14aeecbfc\" -> \"SYMBOL_HASH\"\n-//[legacy]normalize-stderr-64bit: \"h9e54d216f70fcbc5\" -> \"SYMBOL_HASH\"\n+//[legacy]normalize-stderr-32bit: \"hee444285569b39c2\" -> \"SYMBOL_HASH\"\n+//[legacy]normalize-stderr-64bit: \"h310ea0259fc3d32d\" -> \"SYMBOL_HASH\"\n \n #![feature(optin_builtin_traits, rustc_attrs)]\n #![allow(dead_code)]"}, {"sha": "f5699052795b875639b065948c67cec3a143f7fe", "filename": "src/test/ui/symbol-names/issue-60925.legacy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae3586c9b7521ddb98b7cc4550fdeb91987a66cc/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.legacy.stderr?ref=ae3586c9b7521ddb98b7cc4550fdeb91987a66cc", "patch": "@@ -1,10 +1,10 @@\n-error: symbol-name(_ZN11issue_609253foo37Foo$LT$issue_60925..llv$u6d$..Foo$GT$3foo17hc86312d25b60f6eeE)\n+error: symbol-name(_ZN11issue_609253foo37Foo$LT$issue_60925..llv$u6d$..Foo$GT$3foo17h79d9aaa05f4b26d6E)\n   --> $DIR/issue-60925.rs:22:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n-error: demangling(issue_60925::foo::Foo<issue_60925::llvm::Foo>::foo::hc86312d25b60f6ee)\n+error: demangling(issue_60925::foo::Foo<issue_60925::llvm::Foo>::foo::h79d9aaa05f4b26d6)\n   --> $DIR/issue-60925.rs:22:9\n    |\n LL |         #[rustc_symbol_name]"}]}