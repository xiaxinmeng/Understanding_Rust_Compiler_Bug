{"sha": "30ec68a545ebc128ea8009186249b5b3616c3586", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZWM2OGE1NDVlYmMxMjhlYTgwMDkxODYyNDliNWIzNjE2YzM1ODY=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2019-12-31T13:08:25Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2020-01-07T20:28:22Z"}, "message": "Handle removal of llvm::make_unique()", "tree": {"sha": "763ce624d82551c762fec38dee63723019afcab6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/763ce624d82551c762fec38dee63723019afcab6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30ec68a545ebc128ea8009186249b5b3616c3586", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30ec68a545ebc128ea8009186249b5b3616c3586", "html_url": "https://github.com/rust-lang/rust/commit/30ec68a545ebc128ea8009186249b5b3616c3586", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30ec68a545ebc128ea8009186249b5b3616c3586/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ec3aa72d4ce2914d04f9dca401f38284be2c2c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ec3aa72d4ce2914d04f9dca401f38284be2c2c7", "html_url": "https://github.com/rust-lang/rust/commit/3ec3aa72d4ce2914d04f9dca401f38284be2c2c7"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "678d787571ed7c368fb3d05bf05f758df1b593b6", "filename": "src/rustllvm/ArchiveWrapper.cpp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/30ec68a545ebc128ea8009186249b5b3616c3586/src%2Frustllvm%2FArchiveWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/30ec68a545ebc128ea8009186249b5b3616c3586/src%2Frustllvm%2FArchiveWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FArchiveWrapper.cpp?ref=30ec68a545ebc128ea8009186249b5b3616c3586", "patch": "@@ -89,7 +89,11 @@ extern \"C\" void LLVMRustDestroyArchive(LLVMRustArchiveRef RustArchive) {\n extern \"C\" LLVMRustArchiveIteratorRef\n LLVMRustArchiveIteratorNew(LLVMRustArchiveRef RustArchive) {\n   Archive *Archive = RustArchive->getBinary();\n+#if LLVM_VERSION_GE(10, 0)\n+  std::unique_ptr<Error> Err = std::make_unique<Error>(Error::success());\n+#else\n   std::unique_ptr<Error> Err = llvm::make_unique<Error>(Error::success());\n+#endif\n   auto Cur = Archive->child_begin(*Err);\n   if (*Err) {\n     LLVMRustSetLastError(toString(std::move(*Err)).c_str());"}, {"sha": "69176f9cb1f6d528134a2109e5ca4348d1cbea90", "filename": "src/rustllvm/Linker.cpp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/30ec68a545ebc128ea8009186249b5b3616c3586/src%2Frustllvm%2FLinker.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/30ec68a545ebc128ea8009186249b5b3616c3586/src%2Frustllvm%2FLinker.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FLinker.cpp?ref=30ec68a545ebc128ea8009186249b5b3616c3586", "patch": "@@ -18,8 +18,7 @@ extern \"C\" RustLinker*\n LLVMRustLinkerNew(LLVMModuleRef DstRef) {\n   Module *Dst = unwrap(DstRef);\n \n-  auto Ret = llvm::make_unique<RustLinker>(*Dst);\n-  return Ret.release();\n+  return new RustLinker(*Dst);\n }\n \n extern \"C\" void"}, {"sha": "162193c0db79fcfd90abe5136c5c2f1cf1964ae9", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/30ec68a545ebc128ea8009186249b5b3616c3586/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/30ec68a545ebc128ea8009186249b5b3616c3586/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=30ec68a545ebc128ea8009186249b5b3616c3586", "patch": "@@ -863,7 +863,11 @@ LLVMRustCreateThinLTOData(LLVMRustThinLTOModule *modules,\n                           int num_modules,\n                           const char **preserved_symbols,\n                           int num_symbols) {\n+#if LLVM_VERSION_GE(10, 0)\n+  auto Ret = std::make_unique<LLVMRustThinLTOData>();\n+#else\n   auto Ret = llvm::make_unique<LLVMRustThinLTOData>();\n+#endif\n \n   // Load each module's summary and merge it into one combined index\n   for (int i = 0; i < num_modules; i++) {\n@@ -1095,7 +1099,11 @@ struct LLVMRustThinLTOBuffer {\n \n extern \"C\" LLVMRustThinLTOBuffer*\n LLVMRustThinLTOBufferCreate(LLVMModuleRef M) {\n+#if LLVM_VERSION_GE(10, 0)\n+  auto Ret = std::make_unique<LLVMRustThinLTOBuffer>();\n+#else\n   auto Ret = llvm::make_unique<LLVMRustThinLTOBuffer>();\n+#endif\n   {\n     raw_string_ostream OS(Ret->data);\n     {"}, {"sha": "224197a905ece5a4fae059a620d0ddf66759e746", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/30ec68a545ebc128ea8009186249b5b3616c3586/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/30ec68a545ebc128ea8009186249b5b3616c3586/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=30ec68a545ebc128ea8009186249b5b3616c3586", "patch": "@@ -1450,7 +1450,11 @@ struct LLVMRustModuleBuffer {\n \n extern \"C\" LLVMRustModuleBuffer*\n LLVMRustModuleBufferCreate(LLVMModuleRef M) {\n+#if LLVM_VERSION_GE(10, 0)\n+  auto Ret = std::make_unique<LLVMRustModuleBuffer>();\n+#else\n   auto Ret = llvm::make_unique<LLVMRustModuleBuffer>();\n+#endif\n   {\n     raw_string_ostream OS(Ret->data);\n     {"}]}