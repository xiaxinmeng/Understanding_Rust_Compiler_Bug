{"sha": "667d46bef9a17616e7aabfdd80f9646b6bde6191", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2N2Q0NmJlZjlhMTc2MTZlN2FhYmZkZDgwZjk2NDZiNmJkZTYxOTE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-07-03T01:01:58Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-07-03T01:02:46Z"}, "message": "Add an arr_iter2 function to common.ml", "tree": {"sha": "68e0b3654b98df73ba7752b351f722bae134b2bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68e0b3654b98df73ba7752b351f722bae134b2bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/667d46bef9a17616e7aabfdd80f9646b6bde6191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/667d46bef9a17616e7aabfdd80f9646b6bde6191", "html_url": "https://github.com/rust-lang/rust/commit/667d46bef9a17616e7aabfdd80f9646b6bde6191", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/667d46bef9a17616e7aabfdd80f9646b6bde6191/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50e75e049b0791a34065d3ce68ace10601ddcb63", "url": "https://api.github.com/repos/rust-lang/rust/commits/50e75e049b0791a34065d3ce68ace10601ddcb63", "html_url": "https://github.com/rust-lang/rust/commit/50e75e049b0791a34065d3ce68ace10601ddcb63"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "168c9f0ad87164b96a798b6db6b558d6387796fa", "filename": "src/boot/util/common.ml", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/667d46bef9a17616e7aabfdd80f9646b6bde6191/src%2Fboot%2Futil%2Fcommon.ml", "raw_url": "https://github.com/rust-lang/rust/raw/667d46bef9a17616e7aabfdd80f9646b6bde6191/src%2Fboot%2Futil%2Fcommon.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Futil%2Fcommon.ml?ref=667d46bef9a17616e7aabfdd80f9646b6bde6191", "patch": "@@ -430,6 +430,11 @@ let arr_map2 (f:'a -> 'b -> 'c) (a:'a array) (b:'b array) : 'c array =\n   Array.init (Array.length a) (fun i -> f a.(i) b.(i))\n ;;\n \n+let arr_iter2 (f:'a -> 'b -> unit) (a:'a array) (b:'b array) : unit =\n+  assert ((Array.length a) = (Array.length b));\n+  Array.iteri (fun i a_elem -> f a_elem b.(i)) a\n+;;\n+\n let arr_for_all (f:int -> 'a -> bool) (a:'a array) : bool =\n   let len = Array.length a in\n   let rec loop i ="}]}