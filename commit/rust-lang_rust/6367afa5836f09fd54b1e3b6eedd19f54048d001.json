{"sha": "6367afa5836f09fd54b1e3b6eedd19f54048d001", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNjdhZmE1ODM2ZjA5ZmQ1NGIxZTNiNmVlZGQxOWY1NDA0OGQwMDE=", "commit": {"author": {"name": "Eunji Jeong", "email": "eun-ji.jeong@samsung.com", "date": "2015-01-27T06:36:25Z"}, "committer": {"name": "Eunji Jeong", "email": "eun-ji.jeong@samsung.com", "date": "2015-02-10T06:48:07Z"}, "message": "Support for test/debuginfo on android", "tree": {"sha": "294fe9a49a1406d7950921515da975213f3df2bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/294fe9a49a1406d7950921515da975213f3df2bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6367afa5836f09fd54b1e3b6eedd19f54048d001", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6367afa5836f09fd54b1e3b6eedd19f54048d001", "html_url": "https://github.com/rust-lang/rust/commit/6367afa5836f09fd54b1e3b6eedd19f54048d001", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6367afa5836f09fd54b1e3b6eedd19f54048d001/comments", "author": {"login": "ejjeong", "id": 10492346, "node_id": "MDQ6VXNlcjEwNDkyMzQ2", "avatar_url": "https://avatars.githubusercontent.com/u/10492346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejjeong", "html_url": "https://github.com/ejjeong", "followers_url": "https://api.github.com/users/ejjeong/followers", "following_url": "https://api.github.com/users/ejjeong/following{/other_user}", "gists_url": "https://api.github.com/users/ejjeong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejjeong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejjeong/subscriptions", "organizations_url": "https://api.github.com/users/ejjeong/orgs", "repos_url": "https://api.github.com/users/ejjeong/repos", "events_url": "https://api.github.com/users/ejjeong/events{/privacy}", "received_events_url": "https://api.github.com/users/ejjeong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ejjeong", "id": 10492346, "node_id": "MDQ6VXNlcjEwNDkyMzQ2", "avatar_url": "https://avatars.githubusercontent.com/u/10492346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejjeong", "html_url": "https://github.com/ejjeong", "followers_url": "https://api.github.com/users/ejjeong/followers", "following_url": "https://api.github.com/users/ejjeong/following{/other_user}", "gists_url": "https://api.github.com/users/ejjeong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejjeong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejjeong/subscriptions", "organizations_url": "https://api.github.com/users/ejjeong/orgs", "repos_url": "https://api.github.com/users/ejjeong/repos", "events_url": "https://api.github.com/users/ejjeong/events{/privacy}", "received_events_url": "https://api.github.com/users/ejjeong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1e9a76326070bcb62684136089bb98e7f64db41", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e9a76326070bcb62684136089bb98e7f64db41", "html_url": "https://github.com/rust-lang/rust/commit/d1e9a76326070bcb62684136089bb98e7f64db41"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "056715e5d1d678a621e2bfbb046fbb7085b7e2fe", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6367afa5836f09fd54b1e3b6eedd19f54048d001/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6367afa5836f09fd54b1e3b6eedd19f54048d001/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=6367afa5836f09fd54b1e3b6eedd19f54048d001", "patch": "@@ -384,15 +384,21 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n     match &*config.target {\n         \"arm-linux-androideabi\" | \"aarch64-linux-android\" => {\n \n-            cmds = cmds.replace(\"run\", \"continue\").to_string();\n+            cmds = cmds.replace(\"run\", \"continue\");\n \n             // write debugger script\n-            let script_str = [\"set charset UTF-8\".to_string(),\n-                              format!(\"file {}\", exe_file.as_str().unwrap()\n-                                                         .to_string()),\n-                              \"target remote :5039\".to_string(),\n-                              cmds,\n-                              \"quit\".to_string()].connect(\"\\n\");\n+            let mut script_str = String::with_capacity(2048);\n+            script_str.push_str(\"set charset UTF-8\\n\");\n+            script_str.push_str(&format!(\"file {}\\n\", exe_file.as_str().unwrap()));\n+            script_str.push_str(\"target remote :5039\\n\");\n+            for line in breakpoint_lines.iter() {\n+                script_str.push_str(&format!(\"break {:?}:{}\\n\",\n+                                             testfile.filename_display(),\n+                                             *line)[]);\n+            }\n+            script_str.push_str(&cmds);\n+            script_str.push_str(\"quit\\n\");\n+\n             debug!(\"script_str = {}\", script_str);\n             dump_output_file(config,\n                              testfile,\n@@ -425,8 +431,10 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                 .expect(&format!(\"failed to exec `{:?}`\", config.adb_path));\n \n             let adb_arg = format!(\"export LD_LIBRARY_PATH={}; \\\n-                                   gdbserver :5039 {}/{}\",\n+                                   gdbserver{} :5039 {}/{}\",\n                                   config.adb_test_dir.clone(),\n+                                  if config.target.contains(\"aarch64\")\n+                                  {\"64\"} else {\"\"},\n                                   config.adb_test_dir.clone(),\n                                   str::from_utf8(\n                                       exe_file.filename()\n@@ -496,7 +504,9 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                 stderr: err,\n                 cmdline: cmdline\n             };\n-            process.signal_kill().unwrap();\n+            if process.signal_kill().is_err() {\n+                println!(\"Adb process is already finished.\");\n+            }\n         }\n \n         _=> {"}]}