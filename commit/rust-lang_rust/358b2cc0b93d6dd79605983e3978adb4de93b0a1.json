{"sha": "358b2cc0b93d6dd79605983e3978adb4de93b0a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1OGIyY2MwYjkzZDZkZDc5NjA1OTgzZTM5NzhhZGI0ZGU5M2IwYTE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-07-21T13:52:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-21T13:52:45Z"}, "message": "Rollup merge of #87206 - matthiaskrgr:clippy_collect, r=davidtwco\n\navoid temporary vectors/reuse iterators\n\nAvoid collecting an interator just to re-iterate immediately.\nRather reuse the previous iterator. (clippy::needless_collect)", "tree": {"sha": "e998f34ed2329f574885b47e3bc41c7a122c0457", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e998f34ed2329f574885b47e3bc41c7a122c0457"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/358b2cc0b93d6dd79605983e3978adb4de93b0a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg+CatCRBK7hj4Ov3rIwAAfYkIAHfuGjAOHVmdvQNISMuFxxJM\nYnjk1u3B3o9C/mQQijeJrVIVKq+RWX/MgCVfj7Q0kQO0FVkE62EfMeKvDPGsn4+U\n5cF9hJ4DNYgEsAxFcPFFKH3v7XmAWExPpZGKbI93bxu53E1Al226xrIz/JCP62Ev\n56zG3Bd4a2KSmno1MaSMXf2UG2+3lSDrKVzvQBb2LP/6A/1Cg0w2rJOWybwmf4gw\nszf2C2gkRb+dT5ctnZvhJjdBYGD1OqZK4olCJ+SNG9qkyyQ63ZS83v/Ex6cKR6J0\ne9bGBvJNjMhwSaxcwl1t1Lm3hfhhh0DrWnBdPW1tIqoe3aPElJUNfmcyDfCN73g=\n=xH6F\n-----END PGP SIGNATURE-----\n", "payload": "tree e998f34ed2329f574885b47e3bc41c7a122c0457\nparent 2861265f26ef89828a23f70fe9c6f6f1039d145d\nparent 8462a378f313f7f279fb8f98a7dad703ef9ef897\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1626875565 +0200\ncommitter GitHub <noreply@github.com> 1626875565 +0200\n\nRollup merge of #87206 - matthiaskrgr:clippy_collect, r=davidtwco\n\navoid temporary vectors/reuse iterators\n\nAvoid collecting an interator just to re-iterate immediately.\nRather reuse the previous iterator. (clippy::needless_collect)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/358b2cc0b93d6dd79605983e3978adb4de93b0a1", "html_url": "https://github.com/rust-lang/rust/commit/358b2cc0b93d6dd79605983e3978adb4de93b0a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/358b2cc0b93d6dd79605983e3978adb4de93b0a1/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2861265f26ef89828a23f70fe9c6f6f1039d145d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2861265f26ef89828a23f70fe9c6f6f1039d145d", "html_url": "https://github.com/rust-lang/rust/commit/2861265f26ef89828a23f70fe9c6f6f1039d145d"}, {"sha": "8462a378f313f7f279fb8f98a7dad703ef9ef897", "url": "https://api.github.com/repos/rust-lang/rust/commits/8462a378f313f7f279fb8f98a7dad703ef9ef897", "html_url": "https://github.com/rust-lang/rust/commit/8462a378f313f7f279fb8f98a7dad703ef9ef897"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "00d75be4399649987e9b491aa19fb81cf36e7838", "filename": "compiler/rustc_builtin_macros/src/deriving/generic/ty.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/358b2cc0b93d6dd79605983e3978adb4de93b0a1/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/358b2cc0b93d6dd79605983e3978adb4de93b0a1/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fty.rs?ref=358b2cc0b93d6dd79605983e3978adb4de93b0a1", "patch": "@@ -72,13 +72,9 @@ impl Path {\n     ) -> ast::Path {\n         let mut idents = self.path.iter().map(|s| Ident::new(*s, span)).collect();\n         let lt = mk_lifetimes(cx, span, &self.lifetime);\n-        let tys: Vec<P<ast::Ty>> =\n-            self.params.iter().map(|t| t.to_ty(cx, span, self_ty, self_generics)).collect();\n-        let params = lt\n-            .into_iter()\n-            .map(GenericArg::Lifetime)\n-            .chain(tys.into_iter().map(GenericArg::Type))\n-            .collect();\n+        let tys = self.params.iter().map(|t| t.to_ty(cx, span, self_ty, self_generics));\n+        let params =\n+            lt.into_iter().map(GenericArg::Lifetime).chain(tys.map(GenericArg::Type)).collect();\n \n         match self.kind {\n             PathKind::Global => cx.path_all(span, true, idents, params),"}, {"sha": "426db95aca16e8dab5657c489d3172b378d12bc2", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/358b2cc0b93d6dd79605983e3978adb4de93b0a1/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/358b2cc0b93d6dd79605983e3978adb4de93b0a1/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=358b2cc0b93d6dd79605983e3978adb4de93b0a1", "patch": "@@ -2130,7 +2130,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         let new_lt = generics\n             .as_ref()\n             .and_then(|(parent_g, g)| {\n-                let possible: Vec<_> = (b'a'..=b'z').map(|c| format!(\"'{}\", c as char)).collect();\n+                let mut possible = (b'a'..=b'z').map(|c| format!(\"'{}\", c as char));\n                 let mut lts_names = g\n                     .params\n                     .iter()\n@@ -2146,7 +2146,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     );\n                 }\n                 let lts = lts_names.iter().map(|s| -> &str { &*s }).collect::<Vec<_>>();\n-                possible.into_iter().find(|candidate| !lts.contains(&candidate.as_str()))\n+                possible.find(|candidate| !lts.contains(&candidate.as_str()))\n             })\n             .unwrap_or(\"'lt\".to_string());\n         let add_lt_sugg = generics"}]}