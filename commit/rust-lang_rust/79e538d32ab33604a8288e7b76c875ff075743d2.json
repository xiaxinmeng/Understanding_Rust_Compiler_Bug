{"sha": "79e538d32ab33604a8288e7b76c875ff075743d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZTUzOGQzMmFiMzM2MDRhODI4OGU3Yjc2Yzg3NWZmMDc1NzQzZDI=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2012-10-20T02:51:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-21T00:17:10Z"}, "message": "uv: use just getpeername for both ipv4 and ipv6.", "tree": {"sha": "e20890198e545d0f0e313332c71142cb88439aaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e20890198e545d0f0e313332c71142cb88439aaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79e538d32ab33604a8288e7b76c875ff075743d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79e538d32ab33604a8288e7b76c875ff075743d2", "html_url": "https://github.com/rust-lang/rust/commit/79e538d32ab33604a8288e7b76c875ff075743d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79e538d32ab33604a8288e7b76c875ff075743d2/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e2437bf5d4a1f863888d4b0b5995a695f966e73", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e2437bf5d4a1f863888d4b0b5995a695f966e73", "html_url": "https://github.com/rust-lang/rust/commit/0e2437bf5d4a1f863888d4b0b5995a695f966e73"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "86b3d6ba08f3e475e3d8ffee2d0ad422b76cd87d", "filename": "src/libstd/net_tcp.rs", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/79e538d32ab33604a8288e7b76c875ff075743d2/src%2Flibstd%2Fnet_tcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e538d32ab33604a8288e7b76c875ff075743d2/src%2Flibstd%2Fnet_tcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_tcp.rs?ref=79e538d32ab33604a8288e7b76c875ff075743d2", "patch": "@@ -134,6 +134,10 @@ pub fn connect(input_ip: ip::IpAddr, port: uint,\n         stream_handle_ptr: stream_handle_ptr,\n         connect_req: uv::ll::connect_t(),\n         write_req: uv::ll::write_t(),\n+        ipv6: match input_ip {\n+            ip::Ipv4(_) => { false }\n+            ip::Ipv6(_) => { true }\n+        },\n         iotask: iotask\n     };\n     let socket_data_ptr = ptr::addr_of(&(*socket_data));\n@@ -475,6 +479,7 @@ pub fn accept(new_conn: TcpNewConnection)\n             stream_handle_ptr : stream_handle_ptr,\n             connect_req : uv::ll::connect_t(),\n             write_req : uv::ll::write_t(),\n+            ipv6: (*server_data_ptr).ipv6,\n             iotask : iotask\n         };\n         let client_socket_data_ptr = ptr::addr_of(&(*client_socket_data));\n@@ -590,6 +595,10 @@ fn listen_common(host_ip: ip::IpAddr, port: uint, backlog: uint,\n         kill_ch: kill_ch,\n         on_connect_cb: move on_connect_cb,\n         iotask: iotask,\n+        ipv6: match host_ip {\n+            ip::Ipv4(_) => { false }\n+            ip::Ipv6(_) => { true }\n+        },\n         mut active: true\n     };\n     let server_data_ptr = ptr::addr_of(&server_data);\n@@ -748,18 +757,17 @@ impl TcpSocket {\n     }\n     pub fn getpeername() -> ip::IpAddr {\n         unsafe {\n-            let addr = uv::ll::ip4_addr(\"\", 0);\n-            uv::ll::tcp_getpeername(self.socket_data.stream_handle_ptr,\n-                                    ptr::addr_of(&addr));\n-            ip::Ipv4(move addr)\n-        }\n-    }\n-    pub fn getpeername6() -> ip::IpAddr {\n-        unsafe {\n-            let addr = uv::ll::ip6_addr(\"\", 0);\n-            uv::ll::tcp_getpeername6(self.socket_data.stream_handle_ptr,\n-                                     ptr::addr_of(&addr));\n-            ip::Ipv6(move addr)\n+            if self.socket_data.ipv6 {\n+                let addr = uv::ll::ip6_addr(\"\", 0);\n+                uv::ll::tcp_getpeername6(self.socket_data.stream_handle_ptr,\n+                                         ptr::addr_of(&addr));\n+                ip::Ipv6(move addr)\n+            } else {\n+                let addr = uv::ll::ip4_addr(\"\", 0);\n+                uv::ll::tcp_getpeername(self.socket_data.stream_handle_ptr,\n+                                        ptr::addr_of(&addr));\n+                ip::Ipv4(move addr)\n+            }\n         }\n     }\n }\n@@ -1019,6 +1027,7 @@ type TcpListenFcData = {\n     kill_ch: comm::Chan<Option<TcpErrData>>,\n     on_connect_cb: fn~(*uv::ll::uv_tcp_t),\n     iotask: IoTask,\n+    ipv6: bool,\n     mut active: bool\n };\n \n@@ -1217,6 +1226,7 @@ type TcpSocketData = {\n     stream_handle_ptr: *uv::ll::uv_tcp_t,\n     connect_req: uv::ll::uv_connect_t,\n     write_req: uv::ll::uv_write_t,\n+    ipv6: bool,\n     iotask: IoTask\n };\n "}]}