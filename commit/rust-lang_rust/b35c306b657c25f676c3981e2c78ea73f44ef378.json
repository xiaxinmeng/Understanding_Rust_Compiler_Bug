{"sha": "b35c306b657c25f676c3981e2c78ea73f44ef378", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNWMzMDZiNjU3YzI1ZjY3NmMzOTgxZTJjNzhlYTczZjQ0ZWYzNzg=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-12-02T23:10:44Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-12-18T23:23:23Z"}, "message": "Fix the path resolutions of glob imports.", "tree": {"sha": "5f51427956635751ecd10509080c046c6091a07d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f51427956635751ecd10509080c046c6091a07d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b35c306b657c25f676c3981e2c78ea73f44ef378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b35c306b657c25f676c3981e2c78ea73f44ef378", "html_url": "https://github.com/rust-lang/rust/commit/b35c306b657c25f676c3981e2c78ea73f44ef378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b35c306b657c25f676c3981e2c78ea73f44ef378/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f965cc8e9dc8f8b26eac99cffdef6501cf0c617", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f965cc8e9dc8f8b26eac99cffdef6501cf0c617", "html_url": "https://github.com/rust-lang/rust/commit/1f965cc8e9dc8f8b26eac99cffdef6501cf0c617"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "64a8e21f9e0a1e3e21a19ba586a4643f916a48de", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b35c306b657c25f676c3981e2c78ea73f44ef378/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b35c306b657c25f676c3981e2c78ea73f44ef378/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=b35c306b657c25f676c3981e2c78ea73f44ef378", "patch": "@@ -708,10 +708,7 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n         }\n \n         // Record the destination of this import\n-        if let Some(did) = module.def_id() {\n-            let resolution = PathResolution::new(Def::Mod(did));\n-            self.def_map.insert(directive.id, resolution);\n-        }\n+        self.def_map.insert(directive.id, PathResolution::new(module.def().unwrap()));\n     }\n \n     // Miscellaneous post-processing, including recording reexports, reporting conflicts,"}]}