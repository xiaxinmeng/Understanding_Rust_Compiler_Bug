{"sha": "9fff86619355f8fb28dc1211d1405ffdd0e0bd6e", "node_id": "C_kwDOAAsO6NoAKDlmZmY4NjYxOTM1NWY4ZmIyOGRjMTIxMWQxNDA1ZmZkZDBlMGJkNmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-17T16:27:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-17T16:27:30Z"}, "message": "Rollup merge of #112435 - antoyo:allow-overwrite-sysroot, r=Mark-Simulacrum\n\nAllow overwriting the sysroot compile flag via --rustc-args\n\nHi.\nAs discussed on [Zulip](https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20to.20overwrite.20sysroot.20in.20x.2Epy.20test/near/364272269), this is a solution to allow the codegens to overwrite the sysroot as part of their test suite.\nThanks for the review.", "tree": {"sha": "b0e784fe1e50985c00b5d9bd3f0d326c52afd3f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0e784fe1e50985c00b5d9bd3f0d326c52afd3f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fff86619355f8fb28dc1211d1405ffdd0e0bd6e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkjd7yCRBK7hj4Ov3rIwAAE2UIABNTjvfCZ3D7nENFIXxnmIKP\np8EtRy78ZK6eRTgxLEFS2l5iy4R6PSdGkUJkRkHzEgsUOkOHzlaM3pyrdWKuTtIt\nPhzJDsAGxt2Fb9qpGnLx6PDazsZtQ4U2L9ypjE4VXEtcS+AQ0UfT3ujv7apw3d01\nK8xjSpzxVsfOBWEI2VA4wpKMowwI4lTaNsA3IE3DgcE9tQhIWy7ywj7tWqxA6jrq\nbhQ6Pl1NkJmdTRR03Ojbm8FpGXUV3po03ZfZsF0MqXBAu2g44c1r2zD26voAtcFE\nRpt/LZRbZsT1v5jmHXfj/H92pP+ZX+fyw0YZePrAK6JRYPkIs5uDPGlYw/OcoLY=\n=EdTf\n-----END PGP SIGNATURE-----\n", "payload": "tree b0e784fe1e50985c00b5d9bd3f0d326c52afd3f9\nparent be0f3bdc3e30e255adaaf50658f6d07dc3ea3897\nparent 8d5e85607d3d52f920990334ae1cfa9798ad9259\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1687019250 +0200\ncommitter GitHub <noreply@github.com> 1687019250 +0200\n\nRollup merge of #112435 - antoyo:allow-overwrite-sysroot, r=Mark-Simulacrum\n\nAllow overwriting the sysroot compile flag via --rustc-args\n\nHi.\nAs discussed on [Zulip](https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20to.20overwrite.20sysroot.20in.20x.2Epy.20test/near/364272269), this is a solution to allow the codegens to overwrite the sysroot as part of their test suite.\nThanks for the review.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fff86619355f8fb28dc1211d1405ffdd0e0bd6e", "html_url": "https://github.com/rust-lang/rust/commit/9fff86619355f8fb28dc1211d1405ffdd0e0bd6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fff86619355f8fb28dc1211d1405ffdd0e0bd6e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be0f3bdc3e30e255adaaf50658f6d07dc3ea3897", "url": "https://api.github.com/repos/rust-lang/rust/commits/be0f3bdc3e30e255adaaf50658f6d07dc3ea3897", "html_url": "https://github.com/rust-lang/rust/commit/be0f3bdc3e30e255adaaf50658f6d07dc3ea3897"}, {"sha": "8d5e85607d3d52f920990334ae1cfa9798ad9259", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d5e85607d3d52f920990334ae1cfa9798ad9259", "html_url": "https://github.com/rust-lang/rust/commit/8d5e85607d3d52f920990334ae1cfa9798ad9259"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "25b16e38e534a461ba865bae71913539f1140da5", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9fff86619355f8fb28dc1211d1405ffdd0e0bd6e/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fff86619355f8fb28dc1211d1405ffdd0e0bd6e/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=9fff86619355f8fb28dc1211d1405ffdd0e0bd6e", "patch": "@@ -1951,7 +1951,9 @@ impl<'test> TestCx<'test> {\n         rustc.arg(\"-Ztranslate-remapped-path-to-local-path=no\");\n \n         // Optionally prevent default --sysroot if specified in test compile-flags.\n-        if !self.props.compile_flags.iter().any(|flag| flag.starts_with(\"--sysroot\")) {\n+        if !self.props.compile_flags.iter().any(|flag| flag.starts_with(\"--sysroot\"))\n+            && !self.config.host_rustcflags.iter().any(|flag| flag == \"--sysroot\")\n+        {\n             // In stage 0, make sure we use `stage0-sysroot` instead of the bootstrap sysroot.\n             rustc.arg(\"--sysroot\").arg(&self.config.sysroot_base);\n         }"}]}