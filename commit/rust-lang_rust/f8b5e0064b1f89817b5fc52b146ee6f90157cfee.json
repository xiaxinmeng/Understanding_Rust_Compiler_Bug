{"sha": "f8b5e0064b1f89817b5fc52b146ee6f90157cfee", "node_id": "C_kwDOAAsO6NoAKGY4YjVlMDA2NGIxZjg5ODE3YjVmYzUyYjE0NmVlNmY5MDE1N2NmZWU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-05-23T10:53:15Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-05-30T16:03:24Z"}, "message": "Lower the tracing level of some very verbose messages", "tree": {"sha": "59b7abcc18d71bb78bd68de5be8bcf5503042fb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59b7abcc18d71bb78bd68de5be8bcf5503042fb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8b5e0064b1f89817b5fc52b146ee6f90157cfee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b5e0064b1f89817b5fc52b146ee6f90157cfee", "html_url": "https://github.com/rust-lang/rust/commit/f8b5e0064b1f89817b5fc52b146ee6f90157cfee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8b5e0064b1f89817b5fc52b146ee6f90157cfee/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3266c36624e804f9f086ebd40db19039b55a4ec1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3266c36624e804f9f086ebd40db19039b55a4ec1", "html_url": "https://github.com/rust-lang/rust/commit/3266c36624e804f9f086ebd40db19039b55a4ec1"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f002d7f97b933b4ffedc7d05b9b0a9690843aa02", "filename": "compiler/rustc_metadata/src/rmeta/table.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8b5e0064b1f89817b5fc52b146ee6f90157cfee/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b5e0064b1f89817b5fc52b146ee6f90157cfee/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Ftable.rs?ref=f8b5e0064b1f89817b5fc52b146ee6f90157cfee", "patch": "@@ -439,7 +439,7 @@ where\n     /// Given the metadata, extract out the value at a particular index (if any).\n     #[inline(never)]\n     pub(super) fn get<'a, 'tcx, M: Metadata<'a, 'tcx>>(&self, metadata: M, i: I) -> T::Value<'tcx> {\n-        debug!(\"LazyTable::lookup: index={:?} len={:?}\", i, self.encoded_size);\n+        trace!(\"LazyTable::lookup: index={:?} len={:?}\", i, self.encoded_size);\n \n         let start = self.position.get();\n         let bytes = &metadata.blob()[start..start + self.encoded_size];"}, {"sha": "0c7e36b3bef740052d5cdf05e8971365cc84f6e1", "filename": "compiler/rustc_span/src/hygiene.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8b5e0064b1f89817b5fc52b146ee6f90157cfee/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b5e0064b1f89817b5fc52b146ee6f90157cfee/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs?ref=f8b5e0064b1f89817b5fc52b146ee6f90157cfee", "patch": "@@ -1288,7 +1288,7 @@ pub fn decode_expn_id(\n     decode_data: impl FnOnce(ExpnId) -> (ExpnData, ExpnHash),\n ) -> ExpnId {\n     if index == 0 {\n-        debug!(\"decode_expn_id: deserialized root\");\n+        trace!(\"decode_expn_id: deserialized root\");\n         return ExpnId::root();\n     }\n \n@@ -1321,7 +1321,7 @@ pub fn decode_syntax_context<D: Decoder, F: FnOnce(&mut D, u32) -> SyntaxContext\n ) -> SyntaxContext {\n     let raw_id: u32 = Decodable::decode(d);\n     if raw_id == 0 {\n-        debug!(\"decode_syntax_context: deserialized root\");\n+        trace!(\"decode_syntax_context: deserialized root\");\n         // The root is special\n         return SyntaxContext::root();\n     }"}]}