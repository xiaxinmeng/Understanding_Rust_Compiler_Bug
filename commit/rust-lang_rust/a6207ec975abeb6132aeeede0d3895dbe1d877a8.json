{"sha": "a6207ec975abeb6132aeeede0d3895dbe1d877a8", "node_id": "C_kwDOAAsO6NoAKGE2MjA3ZWM5NzVhYmViNjEzMmFlZWVkZTBkMzg5NWRiZTFkODc3YTg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-05T17:24:10Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-05T17:24:24Z"}, "message": "interpret: do not claim UB until we looked more into variadic functions", "tree": {"sha": "25e1f450ab522530c30e2c5c7a57f64c18a4cd40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25e1f450ab522530c30e2c5c7a57f64c18a4cd40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6207ec975abeb6132aeeede0d3895dbe1d877a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6207ec975abeb6132aeeede0d3895dbe1d877a8", "html_url": "https://github.com/rust-lang/rust/commit/a6207ec975abeb6132aeeede0d3895dbe1d877a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6207ec975abeb6132aeeede0d3895dbe1d877a8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4322a785cc99ea5fc81dd7f5fc8ba7f7a64b08ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/4322a785cc99ea5fc81dd7f5fc8ba7f7a64b08ef", "html_url": "https://github.com/rust-lang/rust/commit/4322a785cc99ea5fc81dd7f5fc8ba7f7a64b08ef"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "57d06b48ca4da44749657a307eeb8fd5cef6cce3", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a6207ec975abeb6132aeeede0d3895dbe1d877a8/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6207ec975abeb6132aeeede0d3895dbe1d877a8/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=a6207ec975abeb6132aeeede0d3895dbe1d877a8", "patch": "@@ -353,12 +353,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 // FIXME: for variadic support, do we have to somehow determine callee's extra_args?\n                 let callee_fn_abi = self.fn_abi_of_instance(instance, ty::List::empty())?;\n \n-                if callee_fn_abi.c_variadic != caller_fn_abi.c_variadic {\n-                    throw_ub_format!(\n-                        \"calling a c-variadic function via a non-variadic call site, or vice versa\"\n-                    );\n-                }\n-                if callee_fn_abi.c_variadic {\n+                if callee_fn_abi.c_variadic || caller_fn_abi.c_variadic {\n                     throw_unsup_format!(\"calling a c-variadic function is not supported\");\n                 }\n "}]}