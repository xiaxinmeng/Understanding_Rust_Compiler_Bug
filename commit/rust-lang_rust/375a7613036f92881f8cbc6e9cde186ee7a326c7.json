{"sha": "375a7613036f92881f8cbc6e9cde186ee7a326c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NWE3NjEzMDM2ZjkyODgxZjhjYmM2ZTljZGUxODZlZTdhMzI2Yzc=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-09T22:18:36Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-17T21:37:15Z"}, "message": "HashStable in libsyntax.", "tree": {"sha": "446d62e3ec713b6365bd6aa84687bb4914af64ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/446d62e3ec713b6365bd6aa84687bb4914af64ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/375a7613036f92881f8cbc6e9cde186ee7a326c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/375a7613036f92881f8cbc6e9cde186ee7a326c7", "html_url": "https://github.com/rust-lang/rust/commit/375a7613036f92881f8cbc6e9cde186ee7a326c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/375a7613036f92881f8cbc6e9cde186ee7a326c7/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "333c11433b537f7763f6a262655aadc61e58e600", "url": "https://api.github.com/repos/rust-lang/rust/commits/333c11433b537f7763f6a262655aadc61e58e600", "html_url": "https://github.com/rust-lang/rust/commit/333c11433b537f7763f6a262655aadc61e58e600"}], "stats": {"total": 17, "additions": 3, "deletions": 14}, "files": [{"sha": "bec1a14d6127898fede3b775c66e508bab39d668", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/375a7613036f92881f8cbc6e9cde186ee7a326c7/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375a7613036f92881f8cbc6e9cde186ee7a326c7/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=375a7613036f92881f8cbc6e9cde186ee7a326c7", "patch": "@@ -220,11 +220,6 @@ impl<'a> HashStable<StableHashingContext<'a>> for hir::ImplItem {\n     }\n }\n \n-impl_stable_hash_for!(enum ast::CrateSugar {\n-    JustCrate,\n-    PubCrate,\n-});\n-\n impl<'a> HashStable<StableHashingContext<'a>> for hir::VisibilityKind {\n     fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHasher) {\n         mem::discriminant(self).hash_stable(hcx, hasher);"}, {"sha": "7f50d859cde3a544ca2d56255db2cf42ea0890df", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/375a7613036f92881f8cbc6e9cde186ee7a326c7/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375a7613036f92881f8cbc6e9cde186ee7a326c7/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=375a7613036f92881f8cbc6e9cde186ee7a326c7", "patch": "@@ -159,11 +159,6 @@ where\n     }\n }\n \n-impl_stable_hash_for!(enum ::syntax::ast::Mutability {\n-    Immutable,\n-    Mutable\n-});\n-\n impl<'a> ToStableHashKey<StableHashingContext<'a>> for region::Scope {\n     type KeyType = region::Scope;\n "}, {"sha": "aa658986d87b7f0ae30bbb66bf75a409ad63741d", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/375a7613036f92881f8cbc6e9cde186ee7a326c7/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375a7613036f92881f8cbc6e9cde186ee7a326c7/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=375a7613036f92881f8cbc6e9cde186ee7a326c7", "patch": "@@ -722,9 +722,8 @@ pub enum PatKind {\n     Mac(Mac),\n }\n \n-#[derive(\n-    Clone, PartialEq, Eq, PartialOrd, Ord, Hash, RustcEncodable, RustcDecodable, Debug, Copy,\n-)]\n+#[derive(Clone, PartialEq, Eq, PartialOrd, Ord, Hash,\n+         RustcEncodable, RustcDecodable, Debug, Copy, HashStable_Generic)]\n pub enum Mutability {\n     Mutable,\n     Immutable,\n@@ -2334,7 +2333,7 @@ impl PolyTraitRef {\n     }\n }\n \n-#[derive(Copy, Clone, RustcEncodable, RustcDecodable, Debug)]\n+#[derive(Copy, Clone, RustcEncodable, RustcDecodable, Debug, HashStable_Generic)]\n pub enum CrateSugar {\n     /// Source is `pub(crate)`.\n     PubCrate,"}]}