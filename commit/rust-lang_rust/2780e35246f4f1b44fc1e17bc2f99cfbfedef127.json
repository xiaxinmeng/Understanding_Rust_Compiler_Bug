{"sha": "2780e35246f4f1b44fc1e17bc2f99cfbfedef127", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ODBlMzUyNDZmNGYxYjQ0ZmMxZTE3YmMyZjk5Y2ZiZmVkZWYxMjc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-19T20:31:11Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-19T20:31:11Z"}, "message": "Throw core::panic!(\"message\") as &str instead of String.\n\nThis makes it consistent with std::panic!(\"message\"), which also throws\na &str, not a String.", "tree": {"sha": "a8059f9799f192a5efa5da5e2718fbe55871e60c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8059f9799f192a5efa5da5e2718fbe55871e60c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2780e35246f4f1b44fc1e17bc2f99cfbfedef127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2780e35246f4f1b44fc1e17bc2f99cfbfedef127", "html_url": "https://github.com/rust-lang/rust/commit/2780e35246f4f1b44fc1e17bc2f99cfbfedef127", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2780e35246f4f1b44fc1e17bc2f99cfbfedef127/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad268bd63894953ab7038f082aa744d6a832639b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad268bd63894953ab7038f082aa744d6a832639b", "html_url": "https://github.com/rust-lang/rust/commit/ad268bd63894953ab7038f082aa744d6a832639b"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "3da0ebdd4982ae95fcce551a84f5f6cdca7d9a30", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2780e35246f4f1b44fc1e17bc2f99cfbfedef127/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2780e35246f4f1b44fc1e17bc2f99cfbfedef127/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=2780e35246f4f1b44fc1e17bc2f99cfbfedef127", "patch": "@@ -259,6 +259,7 @@\n #![feature(exhaustive_patterns)]\n #![feature(extend_one)]\n #![feature(external_doc)]\n+#![feature(fmt_as_str)]\n #![feature(fn_traits)]\n #![feature(format_args_nl)]\n #![feature(gen_future)]"}, {"sha": "221ae809e23a2dbbd6beac3a740d99eb86ad3d3b", "filename": "library/std/src/panicking.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2780e35246f4f1b44fc1e17bc2f99cfbfedef127/library%2Fstd%2Fsrc%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2780e35246f4f1b44fc1e17bc2f99cfbfedef127/library%2Fstd%2Fsrc%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpanicking.rs?ref=2780e35246f4f1b44fc1e17bc2f99cfbfedef127", "patch": "@@ -478,10 +478,26 @@ pub fn begin_panic_handler(info: &PanicInfo<'_>) -> ! {\n         }\n     }\n \n+    struct StrPanicPayload(&'static str);\n+\n+    unsafe impl BoxMeUp for StrPanicPayload {\n+        fn take_box(&mut self) -> *mut (dyn Any + Send) {\n+            Box::into_raw(Box::new(self.0))\n+        }\n+\n+        fn get(&mut self) -> &(dyn Any + Send) {\n+            &self.0\n+        }\n+    }\n+\n     let loc = info.location().unwrap(); // The current implementation always returns Some\n     let msg = info.message().unwrap(); // The current implementation always returns Some\n     crate::sys_common::backtrace::__rust_end_short_backtrace(move || {\n-        rust_panic_with_hook(&mut PanicPayload::new(msg), info.message(), loc);\n+        if let Some(msg) = msg.as_str() {\n+            rust_panic_with_hook(&mut StrPanicPayload(msg), info.message(), loc);\n+        } else {\n+            rust_panic_with_hook(&mut PanicPayload::new(msg), info.message(), loc);\n+        }\n     })\n }\n "}]}