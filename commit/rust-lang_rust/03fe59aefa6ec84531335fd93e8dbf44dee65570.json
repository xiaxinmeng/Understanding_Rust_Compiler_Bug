{"sha": "03fe59aefa6ec84531335fd93e8dbf44dee65570", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZmU1OWFlZmE2ZWM4NDUzMTMzNWZkOTNlOGRiZjQ0ZGVlNjU1NzA=", "commit": {"author": {"name": "Eric Reed", "email": "ereed@mozilla.com", "date": "2013-06-14T18:54:56Z"}, "committer": {"name": "Eric Reed", "email": "ereed@mozilla.com", "date": "2013-06-14T18:54:56Z"}, "message": "added bindings to extract udp handle from udp send requests", "tree": {"sha": "eb2b9a20077484b0dc7914743fb3ca5fa2ac0e73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb2b9a20077484b0dc7914743fb3ca5fa2ac0e73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03fe59aefa6ec84531335fd93e8dbf44dee65570", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03fe59aefa6ec84531335fd93e8dbf44dee65570", "html_url": "https://github.com/rust-lang/rust/commit/03fe59aefa6ec84531335fd93e8dbf44dee65570", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03fe59aefa6ec84531335fd93e8dbf44dee65570/comments", "author": null, "committer": null, "parents": [{"sha": "74e72551930d4c58e747a60e2b39d3010e40d0ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/74e72551930d4c58e747a60e2b39d3010e40d0ae", "html_url": "https://github.com/rust-lang/rust/commit/74e72551930d4c58e747a60e2b39d3010e40d0ae"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "4c0791b3b5c7c5f228006ff0519e6118f8271c74", "filename": "src/libstd/rt/uv/uvll.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/03fe59aefa6ec84531335fd93e8dbf44dee65570/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fe59aefa6ec84531335fd93e8dbf44dee65570/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs?ref=03fe59aefa6ec84531335fd93e8dbf44dee65570", "patch": "@@ -66,6 +66,9 @@ pub type uv_fs_t = c_void;\n pub type uv_udp_send_t = c_void;\n \n pub type uv_idle_cb = *u8;\n+pub type uv_alloc_cb = *u8;\n+pub type uv_udp_send_cb = *u8;\n+pub type uv_udp_recv_cb = *u8;\n \n pub type sockaddr_in = c_void;\n pub type sockaddr_in6 = c_void;\n@@ -198,27 +201,31 @@ pub unsafe fn udp_bind6(server: *uv_udp_t, addr: *sockaddr_in6, flags: c_uint) -\n }\n \n pub unsafe fn udp_send<T>(req: *uv_udp_send_t, handle: *T, buf_in: &[uv_buf_t],\n-                          addr: *sockaddr_in, cb: *u8) -> c_int {\n+                          addr: *sockaddr_in, cb: uv_udp_send_cb) -> c_int {\n     let buf_ptr = vec::raw::to_ptr(buf_in);\n     let buf_cnt = buf_in.len() as i32;\n     return rust_uv_udp_send(req, handle as *c_void, buf_ptr, buf_cnt, addr, cb);\n }\n \n pub unsafe fn udp_send6<T>(req: *uv_udp_send_t, handle: *T, buf_in: &[uv_buf_t],\n-                          addr: *sockaddr_in6, cb: *u8) -> c_int {\n+                          addr: *sockaddr_in6, cb: uv_udp_send_cb) -> c_int {\n     let buf_ptr = vec::raw::to_ptr(buf_in);\n     let buf_cnt = buf_in.len() as i32;\n     return rust_uv_udp_send(req, handle as *c_void, buf_ptr, buf_cnt, addr, cb);\n }\n \n-pub unsafe fn udp_recv_start(server: *uv_udp_t, on_alloc: *u8, on_recv: *u8) -> c_int {\n+pub unsafe fn udp_recv_start(server: *uv_udp_t, on_alloc: uv_alloc_cb, on_recv: uv_udp_recv_cb) -> c_int {\n     return rust_uv_udp_recv_start(server, on_alloc, on_recv);\n }\n \n pub unsafe fn udp_recv_stop(server: *uv_udp_t) -> c_int {\n     return rust_uv_udp_recv_stop(server);\n }\n \n+pub unsafe fn get_udp_handle_from_send_req(send_req: *uv_udp_send_t) -> *uv_udp_t {\n+    return rust_uv_get_udp_handle_from_send_req(send_req);\n+}\n+\n pub unsafe fn tcp_init(loop_handle: *c_void, handle: *uv_tcp_t) -> c_int {\n     return rust_uv_tcp_init(loop_handle, handle);\n }\n@@ -269,7 +276,7 @@ pub unsafe fn write<T>(req: *uv_write_t, stream: *T, buf_in: &[uv_buf_t], cb: *u\n     let buf_cnt = buf_in.len() as i32;\n     return rust_uv_write(req as *c_void, stream as *c_void, buf_ptr, buf_cnt, cb);\n }\n-pub unsafe fn read_start(stream: *uv_stream_t, on_alloc: *u8, on_read: *u8) -> c_int {\n+pub unsafe fn read_start(stream: *uv_stream_t, on_alloc: uv_alloc_cb, on_read: *u8) -> c_int {\n     return rust_uv_read_start(stream as *c_void, on_alloc, on_read);\n }\n \n@@ -463,6 +470,7 @@ extern {\n                          buf_cnt: c_int, addr: *sockaddr_in6, cb: *u8) -> c_int;\n     fn rust_uv_udp_recv_start(server: *uv_udp_t, on_alloc: *u8, on_recv: *u8) -> c_int;\n     fn rust_uv_udp_recv_stop(server: *uv_udp_t) -> c_int;\n+    fn rust_uv_get_udp_handle_from_send_req(req: *uv_udp_send_t) -> *uv_udp_t;\n \n     fn rust_uv_listen(stream: *c_void, backlog: c_int, cb: *u8) -> c_int;\n     fn rust_uv_accept(server: *c_void, client: *c_void) -> c_int;"}]}