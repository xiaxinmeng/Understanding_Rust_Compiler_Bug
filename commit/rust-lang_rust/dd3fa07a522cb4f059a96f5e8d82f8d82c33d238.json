{"sha": "dd3fa07a522cb4f059a96f5e8d82f8d82c33d238", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkM2ZhMDdhNTIyY2I0ZjA1OWE5NmY1ZThkODJmOGQ4MmMzM2QyMzg=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-01-28T18:49:48Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-01-29T09:02:03Z"}, "message": "Make `yield_in_scope_for_expr` work with patterns. Fixes #47758", "tree": {"sha": "90a4a184bc2dc6c06e6a9dc21e52d973c5a47b82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90a4a184bc2dc6c06e6a9dc21e52d973c5a47b82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238", "html_url": "https://github.com/rust-lang/rust/commit/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad058cfafe584e1848276a05c2b7b5d3fcc965ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad058cfafe584e1848276a05c2b7b5d3fcc965ff", "html_url": "https://github.com/rust-lang/rust/commit/ad058cfafe584e1848276a05c2b7b5d3fcc965ff"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "cbc061478f8531732ccc5eff99e481644c9c08b1", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=dd3fa07a522cb4f059a96f5e8d82f8d82c33d238", "patch": "@@ -471,6 +471,9 @@ impl<'tcx> Visitor<'tcx> for ExprLocatorVisitor {\n \n         self.expr_and_pat_count += 1;\n \n+        if pat.id == self.id {\n+            self.result = Some(self.expr_and_pat_count);\n+        }\n     }\n \n     fn visit_expr(&mut self, expr: &'tcx Expr) {"}, {"sha": "557a5e62f7e46229e61c2d78e7c6f4eade1b777c", "filename": "src/test/ui/generator/pattern-borrow.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238/src%2Ftest%2Fui%2Fgenerator%2Fpattern-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238/src%2Ftest%2Fui%2Fgenerator%2Fpattern-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fpattern-borrow.rs?ref=dd3fa07a522cb4f059a96f5e8d82f8d82c33d238", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(generators)]\n+\n+enum Test { A(i32), B, }\n+\n+fn main() { }\n+\n+fn fun(test: Test) {\n+    move || {\n+        if let Test::A(ref _a) = test { //~ ERROR borrow may still be in use when generator yields\n+            yield ();\n+        }\n+    };\n+}"}, {"sha": "6b39b272d0e428adc0a28ab2ae2a624d96a96ce1", "filename": "src/test/ui/generator/pattern-borrow.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238/src%2Ftest%2Fui%2Fgenerator%2Fpattern-borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238/src%2Ftest%2Fui%2Fgenerator%2Fpattern-borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fpattern-borrow.stderr?ref=dd3fa07a522cb4f059a96f5e8d82f8d82c33d238", "patch": "@@ -0,0 +1,10 @@\n+error[E0626]: borrow may still be in use when generator yields\n+  --> $DIR/pattern-borrow.rs:19:24\n+   |\n+19 |         if let Test::A(ref _a) = test { //~ ERROR borrow may still be in use when generator yields\n+   |                        ^^^^^^\n+20 |             yield ();\n+   |             -------- possible yield occurs here\n+\n+error: aborting due to previous error\n+"}]}