{"sha": "8183c74ec1f4747986eb177d7d93bee4c622b0b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxODNjNzRlYzFmNDc0Nzk4NmViMTc3ZDdkOTNiZWU0YzYyMmIwYjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-03T09:56:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-03T09:56:03Z"}, "message": "auto merge of #8940 : pnkfelix/rust/fsk-8468-allow-underscore-paramname-in-trait-default-method, r=alexcrichton\n\nFix #8468.  (Though the right answer in the end, as noted on the dialogue on the ticket, might be to just require trait methods to name their parameters, regardless of whether they have a default method implementation or not.)", "tree": {"sha": "87cef0103a379f4f0cc642487e531479758d82fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87cef0103a379f4f0cc642487e531479758d82fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8183c74ec1f4747986eb177d7d93bee4c622b0b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8183c74ec1f4747986eb177d7d93bee4c622b0b7", "html_url": "https://github.com/rust-lang/rust/commit/8183c74ec1f4747986eb177d7d93bee4c622b0b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8183c74ec1f4747986eb177d7d93bee4c622b0b7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58decdd7a115f2892d63fa3760fa2125eb784ac8", "url": "https://api.github.com/repos/rust-lang/rust/commits/58decdd7a115f2892d63fa3760fa2125eb784ac8", "html_url": "https://github.com/rust-lang/rust/commit/58decdd7a115f2892d63fa3760fa2125eb784ac8"}, {"sha": "1b3cd960decbaad3fc585c4ac4e5ec4dd8ceabc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b3cd960decbaad3fc585c4ac4e5ec4dd8ceabc9", "html_url": "https://github.com/rust-lang/rust/commit/1b3cd960decbaad3fc585c4ac4e5ec4dd8ceabc9"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "14b133b43798c22e89df0fe311707ec5f508450e", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8183c74ec1f4747986eb177d7d93bee4c622b0b7/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8183c74ec1f4747986eb177d7d93bee4c622b0b7/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=8183c74ec1f4747986eb177d7d93bee4c622b0b7", "patch": "@@ -347,6 +347,10 @@ impl Drop for Parser {\n     fn drop(&self) {}\n }\n \n+fn is_plain_ident_or_underscore(t: &token::Token) -> bool {\n+    is_plain_ident(t) || *t == token::UNDERSCORE\n+}\n+\n impl Parser {\n     // convert a token to a string using self's reader\n     pub fn token_to_str(&self, token: &token::Token) -> ~str {\n@@ -1242,11 +1246,13 @@ impl Parser {\n             _ => 0\n         };\n \n+        debug!(\"parser is_named_argument offset:%u\", offset);\n+\n         if offset == 0 {\n-            is_plain_ident(&*self.token)\n+            is_plain_ident_or_underscore(&*self.token)\n                 && self.look_ahead(1, |t| *t == token::COLON)\n         } else {\n-            self.look_ahead(offset, |t| is_plain_ident(t))\n+            self.look_ahead(offset, |t| is_plain_ident_or_underscore(t))\n                 && self.look_ahead(offset + 1, |t| *t == token::COLON)\n         }\n     }\n@@ -1256,6 +1262,8 @@ impl Parser {\n     pub fn parse_arg_general(&self, require_name: bool) -> arg {\n         let is_mutbl = self.eat_keyword(keywords::Mut);\n         let pat = if require_name || self.is_named_argument() {\n+            debug!(\"parse_arg_general parse_pat (require_name:%?)\",\n+                   require_name);\n             self.parse_arg_mode();\n             let pat = self.parse_pat();\n \n@@ -1266,6 +1274,7 @@ impl Parser {\n             self.expect(&token::COLON);\n             pat\n         } else {\n+            debug!(\"parse_arg_general ident_to_pat\");\n             ast_util::ident_to_pat(self.get_id(),\n                                    *self.last_span,\n                                    special_idents::invalid)"}, {"sha": "ec607102566aa761f1487a60649e2b1dd3294218", "filename": "src/test/run-pass/default-method-parsing.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8183c74ec1f4747986eb177d7d93bee4c622b0b7/src%2Ftest%2Frun-pass%2Fdefault-method-parsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8183c74ec1f4747986eb177d7d93bee4c622b0b7/src%2Ftest%2Frun-pass%2Fdefault-method-parsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault-method-parsing.rs?ref=8183c74ec1f4747986eb177d7d93bee4c622b0b7", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {\n+    fn m(&self, _:int) { }\n+}\n+\n+fn main() { }"}]}