{"sha": "be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "node_id": "C_kwDOAAsO6NoAKGJlMmVjMzJiMThmN2FkODU4ZGM3NDZiMjZlYjNhOTFhNjJhMmMzNjA", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-17T02:45:11Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-17T02:45:11Z"}, "message": "Account for `*` when looking for inner-most path in expression", "tree": {"sha": "179269f8d720b4a4edb46d47706e4af5f41fe3fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/179269f8d720b4a4edb46d47706e4af5f41fe3fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "html_url": "https://github.com/rust-lang/rust/commit/be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4f61afa779e01af24c6f20394de8e3950b368c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4f61afa779e01af24c6f20394de8e3950b368c2", "html_url": "https://github.com/rust-lang/rust/commit/e4f61afa779e01af24c6f20394de8e3950b368c2"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "d60facb91b4553971d9c39f8a389f5a666c8fa3f", "filename": "compiler/rustc_borrowck/src/diagnostics/explain_borrow.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fexplain_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fexplain_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fexplain_borrow.rs?ref=be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "patch": "@@ -75,7 +75,9 @@ impl<'tcx> BorrowExplanation<'tcx> {\n                 let mut expr_finder = FindExprBySpan::new(span);\n                 expr_finder.visit_expr(body.value);\n                 if let Some(mut expr) = expr_finder.result {\n-                    while let hir::ExprKind::AddrOf(_, _, inner) = &expr.kind {\n+                    while let hir::ExprKind::AddrOf(_, _, inner)\n+                        | hir::ExprKind::Unary(hir::UnOp::Deref, inner) = &expr.kind\n+                    {\n                         expr = inner;\n                     }\n                     if let hir::ExprKind::Path(hir::QPath::Resolved(None, p)) = expr.kind"}, {"sha": "e582ec605defee89b1a051f391d39d66f4833cfe", "filename": "tests/ui/borrowck/borrowck-bad-nested-calls-move.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fborrowck%2Fborrowck-bad-nested-calls-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fborrowck%2Fborrowck-bad-nested-calls-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fborrowck-bad-nested-calls-move.stderr?ref=be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "patch": "@@ -1,6 +1,9 @@\n error[E0505]: cannot move out of `a` because it is borrowed\n   --> $DIR/borrowck-bad-nested-calls-move.rs:25:9\n    |\n+LL |     let mut a: Box<_> = Box::new(1);\n+   |         ----- binding `a` declared here\n+...\n LL |     add(\n    |     --- borrow later used by call\n LL |         &*a,\n@@ -11,6 +14,8 @@ LL |         a);\n error[E0505]: cannot move out of `a` because it is borrowed\n   --> $DIR/borrowck-bad-nested-calls-move.rs:32:9\n    |\n+LL |     let mut a: Box<_> = Box::new(1);\n+   |         ----- binding `a` declared here\n LL |     add(\n    |     --- borrow later used by call\n LL |         &*a,"}, {"sha": "cdad20c52bfaf2fbb021bea3f6d39618db5bb828", "filename": "tests/ui/borrowck/borrowck-move-mut-base-ptr.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fborrowck%2Fborrowck-move-mut-base-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fborrowck%2Fborrowck-move-mut-base-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fborrowck-move-mut-base-ptr.stderr?ref=be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "patch": "@@ -1,6 +1,8 @@\n error[E0505]: cannot move out of `t0` because it is borrowed\n   --> $DIR/borrowck-move-mut-base-ptr.rs:10:14\n    |\n+LL | fn foo(t0: &mut isize) {\n+   |        -- binding `t0` declared here\n LL |     let p: &isize = &*t0; // Freezes `*t0`\n    |                     ---- borrow of `*t0` occurs here\n LL |     let t1 = t0;"}, {"sha": "f3b962059f5b467236970383083511b4f7bb9e12", "filename": "tests/ui/borrowck/borrowck-unary-move.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fborrowck%2Fborrowck-unary-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fborrowck%2Fborrowck-unary-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fborrowck-unary-move.stderr?ref=be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "patch": "@@ -1,6 +1,8 @@\n error[E0505]: cannot move out of `x` because it is borrowed\n   --> $DIR/borrowck-unary-move.rs:3:10\n    |\n+LL | fn foo(x: Box<isize>) -> isize {\n+   |        - binding `x` declared here\n LL |     let y = &*x;\n    |             --- borrow of `*x` occurs here\n LL |     free(x);"}, {"sha": "534813b2d9f5ae64c8b32f416f6f3a573e57b24e", "filename": "tests/ui/nll/polonius/polonius-smoke-test.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fnll%2Fpolonius%2Fpolonius-smoke-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fnll%2Fpolonius%2Fpolonius-smoke-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnll%2Fpolonius%2Fpolonius-smoke-test.stderr?ref=be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "patch": "@@ -18,7 +18,9 @@ error[E0505]: cannot move out of `x` because it is borrowed\n   --> $DIR/polonius-smoke-test.rs:18:13\n    |\n LL | pub fn use_while_mut_fr(x: &mut i32) -> &mut i32 {\n-   |                            - let's call the lifetime of this reference `'1`\n+   |                         -  - let's call the lifetime of this reference `'1`\n+   |                         |\n+   |                         binding `x` declared here\n LL |     let y = &mut *x;\n    |             ------- borrow of `*x` occurs here\n LL |     let z = x;\n@@ -29,6 +31,8 @@ LL |     y\n error[E0505]: cannot move out of `s` because it is borrowed\n   --> $DIR/polonius-smoke-test.rs:42:5\n    |\n+LL |     let s = &mut 1;\n+   |         - binding `s` declared here\n LL |     let r = &mut *s;\n    |             ------- borrow of `*s` occurs here\n LL |     let tmp = foo(&r);"}, {"sha": "097fb6219f1fde0924c304df52c75360e3b92699", "filename": "tests/ui/span/dropck-object-cycle.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fspan%2Fdropck-object-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fspan%2Fdropck-object-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fspan%2Fdropck-object-cycle.stderr?ref=be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "patch": "@@ -1,6 +1,8 @@\n error[E0597]: `*m` does not live long enough\n   --> $DIR/dropck-object-cycle.rs:27:31\n    |\n+LL |     let m : Box<dyn Trait+'static> = make_val();\n+   |         - binding `m` declared here\n LL |     assert_eq!(object_invoke1(&*m), (4,5));\n    |                               ^^^ borrowed value does not live long enough\n ..."}, {"sha": "47931db84cabe0086a8ad4cade5d4bb402e49b41", "filename": "tests/ui/span/regions-infer-borrow-scope-within-loop.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr?ref=be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "patch": "@@ -1,6 +1,9 @@\n error[E0597]: `*x` does not live long enough\n   --> $DIR/regions-infer-borrow-scope-within-loop.rs:13:20\n    |\n+LL |         let x = make_box();\n+   |             - binding `x` declared here\n+...\n LL |         y = borrow(&*x);\n    |                    ^^^ borrowed value does not live long enough\n ..."}, {"sha": "7dfe94bca603f553b1ac9437f80ed48bad8fcf6f", "filename": "tests/ui/span/send-is-not-static-std-sync.stderr", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be2ec32b18f7ad858dc746b26eb3a91a62a2c360/tests%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr?ref=be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "patch": "@@ -1,6 +1,9 @@\n error[E0505]: cannot move out of `y` because it is borrowed\n   --> $DIR/send-is-not-static-std-sync.rs:13:10\n    |\n+LL |     let y = Box::new(1);\n+   |         - binding `y` declared here\n+LL |     let lock = Mutex::new(&x);\n LL |     *lock.lock().unwrap() = &*y;\n    |                             --- borrow of `*y` occurs here\n LL |     drop(y);\n@@ -25,6 +28,9 @@ LL |     lock.use_ref(); // (Mutex is #[may_dangle] so its dtor does not use `z`\n error[E0505]: cannot move out of `y` because it is borrowed\n   --> $DIR/send-is-not-static-std-sync.rs:27:10\n    |\n+LL |     let y = Box::new(1);\n+   |         - binding `y` declared here\n+LL |     let lock = RwLock::new(&x);\n LL |     *lock.write().unwrap() = &*y;\n    |                              --- borrow of `*y` occurs here\n LL |     drop(y);\n@@ -49,6 +55,9 @@ LL |     lock.use_ref(); // (RwLock is #[may_dangle] so its dtor does not use `z\n error[E0505]: cannot move out of `y` because it is borrowed\n   --> $DIR/send-is-not-static-std-sync.rs:43:10\n    |\n+LL |     let y = Box::new(1);\n+   |         - binding `y` declared here\n+...\n LL |     tx.send(&*y);\n    |             --- borrow of `*y` occurs here\n LL |     drop(y);"}]}