{"sha": "0515e0541f6fed6e1b50d1b558ffe45625cd4a35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MTVlMDU0MWY2ZmVkNmUxYjUwZDFiNTU4ZmZlNDU2MjVjZDRhMzU=", "commit": {"author": {"name": "Dave Hodder", "email": "dmh@dmh.org.uk", "date": "2013-12-01T12:30:32Z"}, "committer": {"name": "Dave Hodder", "email": "dmh@dmh.org.uk", "date": "2013-12-01T12:30:32Z"}, "message": "Add struct and type doc comments for extra::url::*", "tree": {"sha": "aa807567e6a5b38bfb88e3ea502e72bea7da4ac9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa807567e6a5b38bfb88e3ea502e72bea7da4ac9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0515e0541f6fed6e1b50d1b558ffe45625cd4a35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0515e0541f6fed6e1b50d1b558ffe45625cd4a35", "html_url": "https://github.com/rust-lang/rust/commit/0515e0541f6fed6e1b50d1b558ffe45625cd4a35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0515e0541f6fed6e1b50d1b558ffe45625cd4a35/comments", "author": {"login": "dhodder", "id": 489065, "node_id": "MDQ6VXNlcjQ4OTA2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/489065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhodder", "html_url": "https://github.com/dhodder", "followers_url": "https://api.github.com/users/dhodder/followers", "following_url": "https://api.github.com/users/dhodder/following{/other_user}", "gists_url": "https://api.github.com/users/dhodder/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhodder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhodder/subscriptions", "organizations_url": "https://api.github.com/users/dhodder/orgs", "repos_url": "https://api.github.com/users/dhodder/repos", "events_url": "https://api.github.com/users/dhodder/events{/privacy}", "received_events_url": "https://api.github.com/users/dhodder/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhodder", "id": 489065, "node_id": "MDQ6VXNlcjQ4OTA2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/489065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhodder", "html_url": "https://github.com/dhodder", "followers_url": "https://api.github.com/users/dhodder/followers", "following_url": "https://api.github.com/users/dhodder/following{/other_user}", "gists_url": "https://api.github.com/users/dhodder/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhodder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhodder/subscriptions", "organizations_url": "https://api.github.com/users/dhodder/orgs", "repos_url": "https://api.github.com/users/dhodder/repos", "events_url": "https://api.github.com/users/dhodder/events{/privacy}", "received_events_url": "https://api.github.com/users/dhodder/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c470184c20167f9f41613d5f4a1d75840e0f5c3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c470184c20167f9f41613d5f4a1d75840e0f5c3a", "html_url": "https://github.com/rust-lang/rust/commit/c470184c20167f9f41613d5f4a1d75840e0f5c3a"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "034d7e110fbfeb82494c28a2f80a11e7ffe74a50", "filename": "src/libextra/url.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0515e0541f6fed6e1b50d1b558ffe45625cd4a35/src%2Flibextra%2Furl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0515e0541f6fed6e1b50d1b558ffe45625cd4a35/src%2Flibextra%2Furl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Furl.rs?ref=0515e0541f6fed6e1b50d1b558ffe45625cd4a35", "patch": "@@ -19,23 +19,37 @@ use std::hashmap::HashMap;\n use std::to_bytes;\n use std::uint;\n \n+/// A Uniform Resource Locator (URL).  A URL is a form of URI (Uniform Resource\n+/// Identifier) that includes network location information, such as hostname or\n+/// port number.\n #[deriving(Clone, Eq)]\n pub struct Url {\n+    /// The scheme part of a URL, such as `http`, `ftp` or `mailto`.\n     scheme: ~str,\n+    /// A URL subcomponent for user authentication.\n     user: Option<UserInfo>,\n+    /// A domain name or IP address.  For example, `www.example.com`.\n     host: ~str,\n+    /// A TCP port number, for example `8080`.\n     port: Option<~str>,\n+    /// The path component of a URL, for example `/users/jsmith`.\n     path: ~str,\n+    /// The query component of a URL.\n     query: Query,\n+    /// The fragment component.  Does not include the leading hash or pound sign.\n     fragment: Option<~str>\n }\n \n+/// An optional subcomponent of a URI authority component.\n #[deriving(Clone, Eq)]\n pub struct UserInfo {\n+    /// The user name.\n     user: ~str,\n+    /// Password or other scheme-specific authentication information.\n     pass: Option<~str>\n }\n \n+/// Represents the query component of a URI.\n pub type Query = ~[(~str, ~str)];\n \n impl Url {"}]}