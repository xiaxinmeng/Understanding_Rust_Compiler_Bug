{"sha": "767a7119a08b51ed6fa2d4f6092418e63ce2877a", "node_id": "C_kwDOAAsO6NoAKDc2N2E3MTE5YTA4YjUxZWQ2ZmEyZDRmNjA5MjQxOGU2M2NlMjg3N2E", "commit": {"author": {"name": "yanchith", "email": "yanchi.toth@gmail.com", "date": "2023-06-09T10:02:25Z"}, "committer": {"name": "yanchith", "email": "yanchi.toth@gmail.com", "date": "2023-06-09T10:02:25Z"}, "message": "Pass tidy again", "tree": {"sha": "0fbf0e678eea6bc24553d0ef853840146aeb57d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fbf0e678eea6bc24553d0ef853840146aeb57d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/767a7119a08b51ed6fa2d4f6092418e63ce2877a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/767a7119a08b51ed6fa2d4f6092418e63ce2877a", "html_url": "https://github.com/rust-lang/rust/commit/767a7119a08b51ed6fa2d4f6092418e63ce2877a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/767a7119a08b51ed6fa2d4f6092418e63ce2877a/comments", "author": {"login": "yanchith", "id": 1099245, "node_id": "MDQ6VXNlcjEwOTkyNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1099245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanchith", "html_url": "https://github.com/yanchith", "followers_url": "https://api.github.com/users/yanchith/followers", "following_url": "https://api.github.com/users/yanchith/following{/other_user}", "gists_url": "https://api.github.com/users/yanchith/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanchith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanchith/subscriptions", "organizations_url": "https://api.github.com/users/yanchith/orgs", "repos_url": "https://api.github.com/users/yanchith/repos", "events_url": "https://api.github.com/users/yanchith/events{/privacy}", "received_events_url": "https://api.github.com/users/yanchith/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yanchith", "id": 1099245, "node_id": "MDQ6VXNlcjEwOTkyNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1099245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanchith", "html_url": "https://github.com/yanchith", "followers_url": "https://api.github.com/users/yanchith/followers", "following_url": "https://api.github.com/users/yanchith/following{/other_user}", "gists_url": "https://api.github.com/users/yanchith/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanchith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanchith/subscriptions", "organizations_url": "https://api.github.com/users/yanchith/orgs", "repos_url": "https://api.github.com/users/yanchith/repos", "events_url": "https://api.github.com/users/yanchith/events{/privacy}", "received_events_url": "https://api.github.com/users/yanchith/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "208da513ccfd042cb2df9ef12d0bc116b7b63304", "url": "https://api.github.com/repos/rust-lang/rust/commits/208da513ccfd042cb2df9ef12d0bc116b7b63304", "html_url": "https://github.com/rust-lang/rust/commit/208da513ccfd042cb2df9ef12d0bc116b7b63304"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "657c380d65d761cd24f76aa7fb4142111344f747", "filename": "library/alloc/src/collections/binary_heap/mod.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/767a7119a08b51ed6fa2d4f6092418e63ce2877a/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/767a7119a08b51ed6fa2d4f6092418e63ce2877a/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs?ref=767a7119a08b51ed6fa2d4f6092418e63ce2877a", "patch": "@@ -538,11 +538,7 @@ impl<T: Ord, A: Allocator> BinaryHeap<T, A> {\n     /// otherwise it's *O*(1).\n     #[stable(feature = \"binary_heap_peek_mut\", since = \"1.12.0\")]\n     pub fn peek_mut(&mut self) -> Option<PeekMut<'_, T, A>> {\n-        if self.is_empty() {\n-            None\n-        } else {\n-            Some(PeekMut { heap: self, original_len: None })\n-        }\n+        if self.is_empty() { None } else { Some(PeekMut { heap: self, original_len: None }) }\n     }\n \n     /// Removes the greatest item from the binary heap and returns it, or `None` if it"}]}