{"sha": "d9628f9389319c1075d4a54a0a490226539cea81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5NjI4ZjkzODkzMTljMTA3NWQ0YTU0YTBhNDkwMjI2NTM5Y2VhODE=", "commit": {"author": {"name": "Felix Raimundo", "email": "felix.raimundo@tweag.io", "date": "2017-05-07T11:54:06Z"}, "committer": {"name": "Felix Raimundo", "email": "felix.raimundo@tweag.io", "date": "2017-05-07T11:54:06Z"}, "message": "Add `park` info to `unpark`.\n\n- Adds an explanantion of what `park` does in the `unpark` documentation.\n- Adds a link to the module doc.", "tree": {"sha": "71f683615302fad51f4add1411d031a8196de8c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71f683615302fad51f4add1411d031a8196de8c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9628f9389319c1075d4a54a0a490226539cea81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9628f9389319c1075d4a54a0a490226539cea81", "html_url": "https://github.com/rust-lang/rust/commit/d9628f9389319c1075d4a54a0a490226539cea81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9628f9389319c1075d4a54a0a490226539cea81/comments", "author": null, "committer": null, "parents": [{"sha": "c158962169e3cf0686cb70652282bcdf20772926", "url": "https://api.github.com/repos/rust-lang/rust/commits/c158962169e3cf0686cb70652282bcdf20772926", "html_url": "https://github.com/rust-lang/rust/commit/c158962169e3cf0686cb70652282bcdf20772926"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "bdf7b1134bfe7f2f9000a01368a78398b2964bda", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d9628f9389319c1075d4a54a0a490226539cea81/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9628f9389319c1075d4a54a0a490226539cea81/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=d9628f9389319c1075d4a54a0a490226539cea81", "patch": "@@ -768,7 +768,11 @@ impl Thread {\n \n     /// Atomically makes the handle's token available if it is not already.\n     ///\n-    /// See the module doc for more detail.\n+    /// Every thread is equipped with some basic low-level blocking support, via\n+    /// the [`park()`][park] function and the `unpark` method. These can be\n+    /// used as a more CPU-efficient implementation of a spinlock.\n+    ///\n+    /// See the [module doc][thread] for more detail.\n     ///\n     /// # Examples\n     ///\n@@ -784,6 +788,9 @@ impl Thread {\n     ///\n     /// handler.join().unwrap();\n     /// ```\n+    ///\n+    /// [thread]: index.html\n+    /// [park]: fn.park.html\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn unpark(&self) {\n         let mut guard = self.inner.lock.lock().unwrap();"}]}