{"sha": "13a30aed2dd0f7b71d023817d2c69053c3997bc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzYTMwYWVkMmRkMGY3YjcxZDAyMzgxN2QyYzY5MDUzYzM5OTdiYzg=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-07-15T22:30:08Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-07-15T22:30:08Z"}, "message": "Run `./util/update_lints.py`", "tree": {"sha": "a3fda68cebeff0e10e9cdeafecf18a91286aa144", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3fda68cebeff0e10e9cdeafecf18a91286aa144"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13a30aed2dd0f7b71d023817d2c69053c3997bc8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXiWQQAAoJEF5CfHlMukXom2MP/i6Dkmr26oNApCsxqzE9y255\nHzV8wUmdNDPzA6hAsED8v8977u/qpReyOl6QR8HLwFqMDYCAUtx1VMaJ3n3NJc3i\nqi33bv2qAEbEvjkb50ttrv1EXoJEK1HxNha+qS3zhOfY93X8rT6SZEF7rH9SgTgV\nhPTMBm7tsD8YgnFHNUB8ViTsfbFYeL7MNSrEfxfUHEEv06w9nZ6xiPjx3OT8B1Oy\n5VqF8+3DBJo4jfQq6mbULLUsKMl/w7vpb8TXs96re8SDt1AKIXmG+1C4ZBXcXxd8\nZchRscGNw5BXwje6ZkBzqgi1YGApPDHSy+Rg76hyuGPAKp0Z17+vz54aY9FSRnXV\nbeA8yHZXqjok+QNf8bqDp2WlQqkgF+8js6f8fddC21gWfPgt3bXYuGesf+qZ2D5Z\n251zJH1ZLB4FkclHsWASyr/9jvm7T6LmD8itK8FbOJ6lazZ6o9BsHeHVHzaIYELJ\nuCne5n9i6CKkqnTO2bOsdyWm/ArN2I9GJjlTloKUyWe2+l8wJ1tRXlnift9M3uOP\ndpP51rGtRX6gaF9AkDJIBcf7CDBb0jKf5/nmlJAEyx35uCReTpSll6F3aG9N6SBU\n+tZW63RzafmwjkRpu5peYLQAwSa8G7XygPX5sblljfmeMkLKLr1We/CJdN0PYjSY\n33e4aKv686rF0Xi2HqTq\n=vrQt\n-----END PGP SIGNATURE-----", "payload": "tree a3fda68cebeff0e10e9cdeafecf18a91286aa144\nparent caa76e119b5737e0e2275f7372396c1373c083a6\nauthor mcarton <cartonmartin+git@gmail.com> 1468621808 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1468621808 +0200\n\nRun `./util/update_lints.py`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13a30aed2dd0f7b71d023817d2c69053c3997bc8", "html_url": "https://github.com/rust-lang/rust/commit/13a30aed2dd0f7b71d023817d2c69053c3997bc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13a30aed2dd0f7b71d023817d2c69053c3997bc8/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caa76e119b5737e0e2275f7372396c1373c083a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/caa76e119b5737e0e2275f7372396c1373c083a6", "html_url": "https://github.com/rust-lang/rust/commit/caa76e119b5737e0e2275f7372396c1373c083a6"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b50412c732ce1d21aba257c228d40b9e81cb8fb0", "filename": "README.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/13a30aed2dd0f7b71d023817d2c69053c3997bc8/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/13a30aed2dd0f7b71d023817d2c69053c3997bc8/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=13a30aed2dd0f7b71d023817d2c69053c3997bc8", "patch": "@@ -43,7 +43,7 @@ name\n [clone_on_copy](https://github.com/Manishearth/rust-clippy/wiki#clone_on_copy)                                       | warn    | using `clone` on a `Copy` type\n [cmp_nan](https://github.com/Manishearth/rust-clippy/wiki#cmp_nan)                                                   | deny    | comparisons to NAN (which will always return false, which is probably not intended)\n [cmp_owned](https://github.com/Manishearth/rust-clippy/wiki#cmp_owned)                                               | warn    | creating owned instances for comparing with others, e.g. `x == \"foo\".to_string()`\n-[collapsible_if](https://github.com/Manishearth/rust-clippy/wiki#collapsible_if)                                     | warn    | two nested `if`-expressions can be collapsed into one, e.g. `if x { if y { foo() } }` can be written as `if x && y { foo() }` and an `else { if .. }` expression can be collapsed to `else if`\n+[collapsible_if](https://github.com/Manishearth/rust-clippy/wiki#collapsible_if)                                     | warn    | `if`s that can be collapsed (e.g. `if x { if y { \u2026 } }` and `else { if x { \u2026 } }`)\n [crosspointer_transmute](https://github.com/Manishearth/rust-clippy/wiki#crosspointer_transmute)                     | warn    | transmutes that have to or from types that are a pointer to the other\n [cyclomatic_complexity](https://github.com/Manishearth/rust-clippy/wiki#cyclomatic_complexity)                       | warn    | finds functions that should be split up into multiple functions\n [deprecated_semver](https://github.com/Manishearth/rust-clippy/wiki#deprecated_semver)                               | warn    | `Warn` on `#[deprecated(since = \"x\")]` where x is not semver\n@@ -98,21 +98,21 @@ name\n [mem_forget](https://github.com/Manishearth/rust-clippy/wiki#mem_forget)                                             | allow   | `mem::forget` usage on `Drop` types is likely to cause memory leaks\n [min_max](https://github.com/Manishearth/rust-clippy/wiki#min_max)                                                   | warn    | `min(_, max(_, _))` (or vice versa) with bounds clamping the result to a constant\n [modulo_one](https://github.com/Manishearth/rust-clippy/wiki#modulo_one)                                             | warn    | taking a number modulo 1, which always returns 0\n-[mut_mut](https://github.com/Manishearth/rust-clippy/wiki#mut_mut)                                                   | allow   | usage of double-mut refs, e.g. `&mut &mut ...` (either copy'n'paste error, or shows a fundamental misunderstanding of references)\n-[mutex_atomic](https://github.com/Manishearth/rust-clippy/wiki#mutex_atomic)                                         | warn    | using a Mutex where an atomic value could be used instead\n-[mutex_integer](https://github.com/Manishearth/rust-clippy/wiki#mutex_integer)                                       | allow   | using a Mutex for an integer type\n+[mut_mut](https://github.com/Manishearth/rust-clippy/wiki#mut_mut)                                                   | allow   | usage of double-mut refs, e.g. `&mut &mut ...`\n+[mutex_atomic](https://github.com/Manishearth/rust-clippy/wiki#mutex_atomic)                                         | warn    | using a mutex where an atomic value could be used instead\n+[mutex_integer](https://github.com/Manishearth/rust-clippy/wiki#mutex_integer)                                       | allow   | using a mutex for an integer type\n [needless_bool](https://github.com/Manishearth/rust-clippy/wiki#needless_bool)                                       | warn    | if-statements with plain booleans in the then- and else-clause, e.g. `if p { true } else { false }`\n [needless_borrow](https://github.com/Manishearth/rust-clippy/wiki#needless_borrow)                                   | warn    | taking a reference that is going to be automatically dereferenced\n [needless_lifetimes](https://github.com/Manishearth/rust-clippy/wiki#needless_lifetimes)                             | warn    | using explicit lifetimes for references in function arguments when elision rules would allow omitting them\n [needless_range_loop](https://github.com/Manishearth/rust-clippy/wiki#needless_range_loop)                           | warn    | for-looping over a range of indices where an iterator over items would do\n [needless_return](https://github.com/Manishearth/rust-clippy/wiki#needless_return)                                   | warn    | using a return statement like `return expr;` where an expression would suffice\n-[needless_update](https://github.com/Manishearth/rust-clippy/wiki#needless_update)                                   | warn    | using `{ ..base }` when there are no missing fields\n+[needless_update](https://github.com/Manishearth/rust-clippy/wiki#needless_update)                                   | warn    | using `Foo { ..base }` when there are no missing fields\n [neg_multiply](https://github.com/Manishearth/rust-clippy/wiki#neg_multiply)                                         | warn    | Warns on multiplying integers with -1\n [new_ret_no_self](https://github.com/Manishearth/rust-clippy/wiki#new_ret_no_self)                                   | warn    | not returning `Self` in a `new` method\n [new_without_default](https://github.com/Manishearth/rust-clippy/wiki#new_without_default)                           | warn    | `fn new() -> Self` method without `Default` implementation\n [new_without_default_derive](https://github.com/Manishearth/rust-clippy/wiki#new_without_default_derive)             | warn    | `fn new() -> Self` without `#[derive]`able `Default` implementation\n [no_effect](https://github.com/Manishearth/rust-clippy/wiki#no_effect)                                               | warn    | statements with no effect\n-[non_ascii_literal](https://github.com/Manishearth/rust-clippy/wiki#non_ascii_literal)                               | allow   | using any literal non-ASCII chars in a string literal; suggests using the \\\\u escape instead\n+[non_ascii_literal](https://github.com/Manishearth/rust-clippy/wiki#non_ascii_literal)                               | allow   | using any literal non-ASCII chars in a string literal; suggests using the `\\\\u` escape instead\n [nonminimal_bool](https://github.com/Manishearth/rust-clippy/wiki#nonminimal_bool)                                   | allow   | checks for boolean expressions that can be written more concisely\n [nonsensical_open_options](https://github.com/Manishearth/rust-clippy/wiki#nonsensical_open_options)                 | warn    | nonsensical combination of options for opening a file\n [not_unsafe_ptr_arg_deref](https://github.com/Manishearth/rust-clippy/wiki#not_unsafe_ptr_arg_deref)                 | warn    | public functions dereferencing raw pointer arguments but not marked `unsafe`\n@@ -124,7 +124,7 @@ name\n [out_of_bounds_indexing](https://github.com/Manishearth/rust-clippy/wiki#out_of_bounds_indexing)                     | deny    | out of bound constant indexing\n [overflow_check_conditional](https://github.com/Manishearth/rust-clippy/wiki#overflow_check_conditional)             | warn    | Using overflow checks which are likely to panic\n [panic_params](https://github.com/Manishearth/rust-clippy/wiki#panic_params)                                         | warn    | missing parameters in `panic!`\n-[precedence](https://github.com/Manishearth/rust-clippy/wiki#precedence)                                             | warn    | catches operations where precedence may be unclear. See the wiki for a list of cases caught\n+[precedence](https://github.com/Manishearth/rust-clippy/wiki#precedence)                                             | warn    | catches operations where precedence may be unclear\n [print_stdout](https://github.com/Manishearth/rust-clippy/wiki#print_stdout)                                         | allow   | printing on stdout\n [ptr_arg](https://github.com/Manishearth/rust-clippy/wiki#ptr_arg)                                                   | warn    | fn arguments of the type `&Vec<...>` or `&String`, suggesting to use `&[...]` or `&str` instead, respectively\n [range_step_by_zero](https://github.com/Manishearth/rust-clippy/wiki#range_step_by_zero)                             | warn    | using Range::step_by(0), which produces an infinite iterator"}]}