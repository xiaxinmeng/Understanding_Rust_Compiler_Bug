{"sha": "cb35a7b4815774f7d8c8b9770df5a9719532755f", "node_id": "C_kwDOAAsO6NoAKGNiMzVhN2I0ODE1Nzc0ZjdkOGM4Yjk3NzBkZjVhOTcxOTUzMjc1NWY", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-11-07T17:24:07Z"}, "committer": {"name": "b-naber", "email": "b_naber@gmx.de", "date": "2023-02-19T22:07:17Z"}, "message": "add BorrowckInferCtxt", "tree": {"sha": "34214e008df57bebb38ff683e5611c527eab2b6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34214e008df57bebb38ff683e5611c527eab2b6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb35a7b4815774f7d8c8b9770df5a9719532755f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb35a7b4815774f7d8c8b9770df5a9719532755f", "html_url": "https://github.com/rust-lang/rust/commit/cb35a7b4815774f7d8c8b9770df5a9719532755f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb35a7b4815774f7d8c8b9770df5a9719532755f/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7aa413d59206fd511137728df3d9e0fd377429bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aa413d59206fd511137728df3d9e0fd377429bd", "html_url": "https://github.com/rust-lang/rust/commit/7aa413d59206fd511137728df3d9e0fd377429bd"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "fef5f4bf466c8fdf3b8623c701a78417888e31d7", "filename": "compiler/rustc_borrowck/src/lib.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cb35a7b4815774f7d8c8b9770df5a9719532755f/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb35a7b4815774f7d8c8b9770df5a9719532755f/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs?ref=cb35a7b4815774f7d8c8b9770df5a9719532755f", "patch": "@@ -25,7 +25,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n use rustc_index::bit_set::ChunkedBitSet;\n use rustc_index::vec::IndexVec;\n-use rustc_infer::infer::{DefiningAnchor, InferCtxt, TyCtxtInferExt};\n+use rustc_infer::infer::{DefiningAnchor, InferCtxt, NllRegionVariableOrigin, TyCtxtInferExt};\n use rustc_middle::mir::{\n     traversal, Body, ClearCrossCrate, Local, Location, Mutability, NonDivergingIntrinsic, Operand,\n     Place, PlaceElem, PlaceRef, VarDebugInfoContents,\n@@ -43,6 +43,7 @@ use smallvec::SmallVec;\n use std::cell::OnceCell;\n use std::cell::RefCell;\n use std::collections::BTreeMap;\n+use std::ops::Deref;\n use std::rc::Rc;\n \n use rustc_mir_dataflow::impls::{\n@@ -481,6 +482,33 @@ pub struct BodyWithBorrowckFacts<'tcx> {\n     pub location_table: LocationTable,\n }\n \n+struct BorrowckInferCtxt<'cx, 'tcx> {\n+    pub(crate) infcx: &'cx InferCtxt<'tcx>,\n+\n+    #[cfg(debug_assertions)]\n+    pub(crate) _reg_var_to_origin: RefCell<FxHashMap<ty::Region<'tcx>, NllRegionVariableOrigin>>,\n+}\n+\n+impl<'cx, 'tcx> BorrowckInferCtxt<'cx, 'tcx> {\n+    #[cfg(not(debug_assertions))]\n+    pub(crate) fn _new(infcx: &'cx InferCtxt<'tcx>) -> Self {\n+        BorrowckInferCtxt { infcx }\n+    }\n+\n+    #[cfg(debug_assertions)]\n+    pub(crate) fn _new(infcx: &'cx InferCtxt<'tcx>) -> Self {\n+        BorrowckInferCtxt { infcx, _reg_var_to_origin: RefCell::new(Default::default()) }\n+    }\n+}\n+\n+impl<'cx, 'tcx> Deref for BorrowckInferCtxt<'cx, 'tcx> {\n+    type Target = InferCtxt<'tcx>;\n+\n+    fn deref(&self) -> &'cx Self::Target {\n+        self.infcx\n+    }\n+}\n+\n struct MirBorrowckCtxt<'cx, 'tcx> {\n     infcx: &'cx InferCtxt<'tcx>,\n     param_env: ParamEnv<'tcx>,"}]}