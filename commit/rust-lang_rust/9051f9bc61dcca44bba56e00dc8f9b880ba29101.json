{"sha": "9051f9bc61dcca44bba56e00dc8f9b880ba29101", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNTFmOWJjNjFkY2NhNDRiYmE1NmUwMGRjOGY5Yjg4MGJhMjkxMDE=", "commit": {"author": {"name": "Piotr Jawniak", "email": "sawyer47@gmail.com", "date": "2014-05-26T08:34:51Z"}, "committer": {"name": "Piotr Jawniak", "email": "sawyer47@gmail.com", "date": "2014-05-26T19:07:29Z"}, "message": "Improve docs for core::tuple", "tree": {"sha": "386a17336448219d78d855ab4735620de8b3a61a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/386a17336448219d78d855ab4735620de8b3a61a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9051f9bc61dcca44bba56e00dc8f9b880ba29101", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9051f9bc61dcca44bba56e00dc8f9b880ba29101", "html_url": "https://github.com/rust-lang/rust/commit/9051f9bc61dcca44bba56e00dc8f9b880ba29101", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9051f9bc61dcca44bba56e00dc8f9b880ba29101/comments", "author": {"login": "Sawyer47", "id": 1534302, "node_id": "MDQ6VXNlcjE1MzQzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1534302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sawyer47", "html_url": "https://github.com/Sawyer47", "followers_url": "https://api.github.com/users/Sawyer47/followers", "following_url": "https://api.github.com/users/Sawyer47/following{/other_user}", "gists_url": "https://api.github.com/users/Sawyer47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sawyer47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sawyer47/subscriptions", "organizations_url": "https://api.github.com/users/Sawyer47/orgs", "repos_url": "https://api.github.com/users/Sawyer47/repos", "events_url": "https://api.github.com/users/Sawyer47/events{/privacy}", "received_events_url": "https://api.github.com/users/Sawyer47/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Sawyer47", "id": 1534302, "node_id": "MDQ6VXNlcjE1MzQzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1534302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sawyer47", "html_url": "https://github.com/Sawyer47", "followers_url": "https://api.github.com/users/Sawyer47/followers", "following_url": "https://api.github.com/users/Sawyer47/following{/other_user}", "gists_url": "https://api.github.com/users/Sawyer47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sawyer47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sawyer47/subscriptions", "organizations_url": "https://api.github.com/users/Sawyer47/orgs", "repos_url": "https://api.github.com/users/Sawyer47/repos", "events_url": "https://api.github.com/users/Sawyer47/events{/privacy}", "received_events_url": "https://api.github.com/users/Sawyer47/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7ab73344dcf3bf0973317ae165f751f6bb42766", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7ab73344dcf3bf0973317ae165f751f6bb42766", "html_url": "https://github.com/rust-lang/rust/commit/a7ab73344dcf3bf0973317ae165f751f6bb42766"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "059b96ffac713fcbc6a3598d0f5c553cc23fc949", "filename": "src/libcore/tuple.rs", "status": "modified", "additions": 50, "deletions": 2, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/9051f9bc61dcca44bba56e00dc8f9b880ba29101/src%2Flibcore%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9051f9bc61dcca44bba56e00dc8f9b880ba29101/src%2Flibcore%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple.rs?ref=9051f9bc61dcca44bba56e00dc8f9b880ba29101", "patch": "@@ -9,8 +9,55 @@\n // except according to those terms.\n \n //! Operations on tuples\n-\n-#![allow(missing_doc)]\n+//!\n+//! To access a single element of a tuple one can use the following\n+//! methods:\n+//!\n+//! * `valN` - returns a value of _N_-th element\n+//! * `refN` - returns a reference to _N_-th element\n+//! * `mutN` - returns a mutable reference to _N_-th element\n+//!\n+//! Indexing starts from zero, so `val0` returns first value, `val1`\n+//! returns second value, and so on. In general, a tuple with _S_\n+//! elements provides aforementioned methods suffixed with numbers\n+//! from `0` to `S-1`. Traits which contain these methods are\n+//! implemented for tuples with up to 12 elements.\n+//!\n+//! If every type inside a tuple implements one of the following\n+//! traits, then a tuple itself also implements it.\n+//!\n+//! * `Clone`\n+//! * `Eq`\n+//! * `TotalEq`\n+//! * `Ord`\n+//! * `TotalOrd`\n+//! * `Default`\n+//!\n+//! # Examples\n+//!\n+//! Using methods:\n+//!\n+//! ```\n+//! let pair = (\"pi\", 3.14);\n+//! assert_eq!(pair.val0(), \"pi\");\n+//! assert_eq!(pair.val1(), 3.14);\n+//! ```\n+//!\n+//! Using traits implemented for tuples:\n+//!\n+//! ```\n+//! use std::default::Default;\n+//!\n+//! let a = (1, 2);\n+//! let b = (3, 4);\n+//! assert!(a != b);\n+//!\n+//! let c = b.clone();\n+//! assert!(b == c);\n+//!\n+//! let d : (u32, f32) = Default::default();\n+//! assert_eq!(d, (0u32, 0.0f32));\n+//! ```\n \n use clone::Clone;\n #[cfg(not(test))] use cmp::*;\n@@ -26,6 +73,7 @@ macro_rules! tuple_impls {\n         }\n     )+) => {\n         $(\n+            #[allow(missing_doc)]\n             pub trait $Tuple<$($T),+> {\n                 $(fn $valN(self) -> $T;)+\n                 $(fn $refN<'a>(&'a self) -> &'a $T;)+"}]}