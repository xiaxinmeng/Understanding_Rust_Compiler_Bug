{"sha": "c97cf7fed7f151e493e08b95ce4f04856974faab", "node_id": "C_kwDOAAsO6NoAKGM5N2NmN2ZlZDdmMTUxZTQ5M2UwOGI5NWNlNGYwNDg1Njk3NGZhYWI", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-10-18T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-10-19T18:45:43Z"}, "message": "Reject closures in patterns", "tree": {"sha": "0211d9448dff5d77d7231f0fb319d292be30f4b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0211d9448dff5d77d7231f0fb319d292be30f4b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c97cf7fed7f151e493e08b95ce4f04856974faab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c97cf7fed7f151e493e08b95ce4f04856974faab", "html_url": "https://github.com/rust-lang/rust/commit/c97cf7fed7f151e493e08b95ce4f04856974faab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c97cf7fed7f151e493e08b95ce4f04856974faab/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1af55d19c7a9189374d89472f97dc119659bb67e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1af55d19c7a9189374d89472f97dc119659bb67e", "html_url": "https://github.com/rust-lang/rust/commit/1af55d19c7a9189374d89472f97dc119659bb67e"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "dd16e3cde75aeff584ab37c15de47aeb22a94d62", "filename": "compiler/rustc_mir_build/src/thir/pattern/const_to_pat.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c97cf7fed7f151e493e08b95ce4f04856974faab/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97cf7fed7f151e493e08b95ce4f04856974faab/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs?ref=c97cf7fed7f151e493e08b95ce4f04856974faab", "patch": "@@ -130,6 +130,9 @@ impl<'a, 'tcx> ConstToPat<'a, 'tcx> {\n                     traits::NonStructuralMatchTy::Opaque => {\n                         \"opaque types cannot be used in patterns\".to_string()\n                     }\n+                    traits::NonStructuralMatchTy::Closure => {\n+                        \"closures cannot be used in patterns\".to_string()\n+                    }\n                     traits::NonStructuralMatchTy::Generator => {\n                         \"generators cannot be used in patterns\".to_string()\n                     }"}, {"sha": "a398e847b935458a003fab06e30ed423802e255c", "filename": "compiler/rustc_trait_selection/src/traits/structural_match.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c97cf7fed7f151e493e08b95ce4f04856974faab/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fstructural_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97cf7fed7f151e493e08b95ce4f04856974faab/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fstructural_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fstructural_match.rs?ref=c97cf7fed7f151e493e08b95ce4f04856974faab", "patch": "@@ -17,6 +17,7 @@ pub enum NonStructuralMatchTy<'tcx> {\n     Dynamic,\n     Foreign,\n     Opaque,\n+    Closure,\n     Generator,\n     Projection,\n }\n@@ -154,6 +155,9 @@ impl<'a, 'tcx> TypeVisitor<'tcx> for Search<'a, 'tcx> {\n             ty::Projection(..) => {\n                 return ControlFlow::Break(NonStructuralMatchTy::Projection);\n             }\n+            ty::Closure(..) => {\n+                return ControlFlow::Break(NonStructuralMatchTy::Closure);\n+            }\n             ty::Generator(..) | ty::GeneratorWitness(..) => {\n                 return ControlFlow::Break(NonStructuralMatchTy::Generator);\n             }\n@@ -197,7 +201,7 @@ impl<'a, 'tcx> TypeVisitor<'tcx> for Search<'a, 'tcx> {\n                 // First check all contained types and then tell the caller to continue searching.\n                 return ty.super_visit_with(self);\n             }\n-            ty::Closure(..) | ty::Infer(_) | ty::Placeholder(_) | ty::Bound(..) => {\n+            ty::Infer(_) | ty::Placeholder(_) | ty::Bound(..) => {\n                 bug!(\"unexpected type during structural-match checking: {:?}\", ty);\n             }\n             ty::Error(_) => {"}, {"sha": "7853ee41a90091c9991c942c5a09e0726ffd212b", "filename": "src/test/ui/consts/closure-structural-match-issue-90013.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c97cf7fed7f151e493e08b95ce4f04856974faab/src%2Ftest%2Fui%2Fconsts%2Fclosure-structural-match-issue-90013.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97cf7fed7f151e493e08b95ce4f04856974faab/src%2Ftest%2Fui%2Fconsts%2Fclosure-structural-match-issue-90013.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fclosure-structural-match-issue-90013.rs?ref=c97cf7fed7f151e493e08b95ce4f04856974faab", "patch": "@@ -0,0 +1,8 @@\n+// Regression test for issue 90013.\n+// check-pass\n+#![allow(incomplete_features)]\n+#![feature(inline_const)]\n+\n+fn main() {\n+    const { || {} };\n+}"}, {"sha": "713418fc5b29a6e5d87d4ec60d62d3129c2e1d87", "filename": "src/test/ui/pattern/non-structural-match-types.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c97cf7fed7f151e493e08b95ce4f04856974faab/src%2Ftest%2Fui%2Fpattern%2Fnon-structural-match-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97cf7fed7f151e493e08b95ce4f04856974faab/src%2Ftest%2Fui%2Fpattern%2Fnon-structural-match-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fnon-structural-match-types.rs?ref=c97cf7fed7f151e493e08b95ce4f04856974faab", "patch": "@@ -0,0 +1,14 @@\n+// edition:2021\n+#![allow(incomplete_features)]\n+#![allow(unreachable_code)]\n+#![feature(const_async_blocks)]\n+#![feature(inline_const)]\n+\n+fn main() {\n+    match loop {} {\n+        const { || {} } => {}, //~ ERROR cannot be used in patterns\n+    }\n+    match loop {} {\n+        const { async {} } => {}, //~ ERROR cannot be used in patterns\n+    }\n+}"}, {"sha": "91fed81eaeff6927e99aada93a1603a4ade43b93", "filename": "src/test/ui/pattern/non-structural-match-types.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c97cf7fed7f151e493e08b95ce4f04856974faab/src%2Ftest%2Fui%2Fpattern%2Fnon-structural-match-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c97cf7fed7f151e493e08b95ce4f04856974faab/src%2Ftest%2Fui%2Fpattern%2Fnon-structural-match-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fnon-structural-match-types.stderr?ref=c97cf7fed7f151e493e08b95ce4f04856974faab", "patch": "@@ -0,0 +1,14 @@\n+error: `[closure@$DIR/non-structural-match-types.rs:9:17: 9:22]` cannot be used in patterns\n+  --> $DIR/non-structural-match-types.rs:9:9\n+   |\n+LL |         const { || {} } => {},\n+   |         ^^^^^^^^^^^^^^^\n+\n+error: `impl Future` cannot be used in patterns\n+  --> $DIR/non-structural-match-types.rs:12:9\n+   |\n+LL |         const { async {} } => {},\n+   |         ^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}