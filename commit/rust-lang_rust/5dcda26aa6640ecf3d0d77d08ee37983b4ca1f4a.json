{"sha": "5dcda26aa6640ecf3d0d77d08ee37983b4ca1f4a", "node_id": "C_kwDOAAsO6NoAKDVkY2RhMjZhYTY2NDBlY2YzZDBkNzdkMDhlZTM3OTgzYjRjYTFmNGE", "commit": {"author": {"name": "Albert Larsan", "email": "74931857+albertlarsan68@users.noreply.github.com", "date": "2023-01-05T08:45:44Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-03-01T03:03:21Z"}, "message": "Change `src/test` to `tests` in source files, fix tidy and tests", "tree": {"sha": "e60fe79754359eff060919f67b231af7ef21eea1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e60fe79754359eff060919f67b231af7ef21eea1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dcda26aa6640ecf3d0d77d08ee37983b4ca1f4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dcda26aa6640ecf3d0d77d08ee37983b4ca1f4a", "html_url": "https://github.com/rust-lang/rust/commit/5dcda26aa6640ecf3d0d77d08ee37983b4ca1f4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dcda26aa6640ecf3d0d77d08ee37983b4ca1f4a/comments", "author": {"login": "albertlarsan68", "id": 74931857, "node_id": "MDQ6VXNlcjc0OTMxODU3", "avatar_url": "https://avatars.githubusercontent.com/u/74931857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertlarsan68", "html_url": "https://github.com/albertlarsan68", "followers_url": "https://api.github.com/users/albertlarsan68/followers", "following_url": "https://api.github.com/users/albertlarsan68/following{/other_user}", "gists_url": "https://api.github.com/users/albertlarsan68/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertlarsan68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertlarsan68/subscriptions", "organizations_url": "https://api.github.com/users/albertlarsan68/orgs", "repos_url": "https://api.github.com/users/albertlarsan68/repos", "events_url": "https://api.github.com/users/albertlarsan68/events{/privacy}", "received_events_url": "https://api.github.com/users/albertlarsan68/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa874b03e43aa4f3e136e1920e6016060418bb9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa874b03e43aa4f3e136e1920e6016060418bb9b", "html_url": "https://github.com/rust-lang/rust/commit/fa874b03e43aa4f3e136e1920e6016060418bb9b"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "97d5a8b006df4da74ab08d92272094a6d7ad91b6", "filename": "test.sh", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5dcda26aa6640ecf3d0d77d08ee37983b4ca1f4a/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/5dcda26aa6640ecf3d0d77d08ee37983b4ca1f4a/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=5dcda26aa6640ecf3d0d77d08ee37983b4ca1f4a", "patch": "@@ -228,15 +228,15 @@ llvm-filecheck = \"`which FileCheck-10 || which FileCheck-11 || which FileCheck-1\n EOF\n \n     rustc -V | cut -d' ' -f3 | tr -d '('\n-    git checkout $(rustc -V | cut -d' ' -f3 | tr -d '(') src/test\n+    git checkout $(rustc -V | cut -d' ' -f3 | tr -d '(') tests\n }\n \n function asm_tests() {\n     setup_rustc\n \n     echo \"[TEST] rustc test suite\"\n     RUSTC_ARGS=\"-Zpanic-abort-tests -Csymbol-mangling-version=v0 -Zcodegen-backend=\"$(pwd)\"/../target/\"$CHANNEL\"/librustc_codegen_gcc.\"$dylib_ext\" --sysroot \"$(pwd)\"/../build_sysroot/sysroot -Cpanic=abort\"\n-    COMPILETEST_FORCE_STAGE0=1 ./x.py test --run always --stage 0 src/test/assembly/asm --rustc-args \"$RUSTC_ARGS\"\n+    COMPILETEST_FORCE_STAGE0=1 ./x.py test --run always --stage 0 tests/assembly/asm --rustc-args \"$RUSTC_ARGS\"\n }\n \n # FIXME(antoyo): linker gives multiple definitions error on Linux\n@@ -332,21 +332,21 @@ function test_rustc() {\n \n     setup_rustc\n \n-    for test in $(rg -i --files-with-matches \"//(\\[\\w+\\])?~|// error-pattern:|// build-fail|// run-fail|-Cllvm-args\" src/test/ui); do\n+    for test in $(rg -i --files-with-matches \"//(\\[\\w+\\])?~|// error-pattern:|// build-fail|// run-fail|-Cllvm-args\" tests/ui); do\n       rm $test\n     done\n \n-    git checkout -- src/test/ui/issues/auxiliary/issue-3136-a.rs # contains //~ERROR, but shouldn't be removed\n+    git checkout -- tests/ui/issues/auxiliary/issue-3136-a.rs # contains //~ERROR, but shouldn't be removed\n \n-    rm -r src/test/ui/{abi*,extern/,unsized-locals/,proc-macro/,threads-sendsync/,thinlto/,borrowck/,chalkify/bugs/,test*,*lto*.rs,consts/const-float-bits-reject-conv.rs,consts/issue-miri-1910.rs} || true\n-    rm src/test/ui/mir/mir_heavy_promoted.rs # this tests is oom-killed in the CI.\n-    for test in $(rg --files-with-matches \"thread|lto\" src/test/ui); do\n+    rm -r tests/ui/{abi*,extern/,unsized-locals/,proc-macro/,threads-sendsync/,thinlto/,borrowck/,chalkify/bugs/,test*,*lto*.rs,consts/const-float-bits-reject-conv.rs,consts/issue-miri-1910.rs} || true\n+    rm tests/ui/mir/mir_heavy_promoted.rs # this tests is oom-killed in the CI.\n+    for test in $(rg --files-with-matches \"thread|lto\" tests/ui); do\n       rm $test\n     done\n-    git checkout src/test/ui/lto/auxiliary/dylib.rs\n-    git checkout src/test/ui/type-alias-impl-trait/auxiliary/cross_crate_ice.rs\n-    git checkout src/test/ui/type-alias-impl-trait/auxiliary/cross_crate_ice2.rs\n-    git checkout src/test/ui/macros/rfc-2011-nicer-assert-messages/auxiliary/common.rs\n+    git checkout tests/ui/lto/auxiliary/dylib.rs\n+    git checkout tests/ui/type-alias-impl-trait/auxiliary/cross_crate_ice.rs\n+    git checkout tests/ui/type-alias-impl-trait/auxiliary/cross_crate_ice2.rs\n+    git checkout tests/ui/macros/rfc-2011-nicer-assert-messages/auxiliary/common.rs\n \n     RUSTC_ARGS=\"$TEST_FLAGS -Csymbol-mangling-version=v0 -Zcodegen-backend=\"$(pwd)\"/../target/\"$CHANNEL\"/librustc_codegen_gcc.\"$dylib_ext\" --sysroot \"$(pwd)\"/../build_sysroot/sysroot\"\n \n@@ -358,14 +358,14 @@ function test_rustc() {\n         xargs -a ../failing-ui-tests.txt -d'\\n' rm\n     else\n         # Removing all tests.\n-        find src/test/ui -type f -name '*.rs' -not -path '*/auxiliary/*' -delete\n+        find tests/ui -type f -name '*.rs' -not -path '*/auxiliary/*' -delete\n         # Putting back only the failing ones.\n         xargs -a ../failing-ui-tests.txt -d'\\n' git checkout --\n     fi\n \n     if [ $nb_parts -gt 0 ]; then\n         echo \"Splitting ui_test into $nb_parts parts (and running part $current_part)\"\n-        find src/test/ui -type f -name '*.rs' -not -path \"*/auxiliary/*\" > ui_tests\n+        find tests/ui -type f -name '*.rs' -not -path \"*/auxiliary/*\" > ui_tests\n         # To ensure it'll be always the same sub files, we sort the content.\n         sort ui_tests -o ui_tests\n         count=$((`wc -l < ui_tests` / $nb_parts))\n@@ -374,13 +374,13 @@ function test_rustc() {\n         count=$((count + 1))\n         split -d -l $count -a 1 ui_tests ui_tests.split\n         # Removing all tests.\n-        find src/test/ui -type f -name '*.rs' -not -path \"*/auxiliary/*\" -delete\n+        find tests/ui -type f -name '*.rs' -not -path \"*/auxiliary/*\" -delete\n         # Putting back only the ones we want to test.\n         xargs -a \"ui_tests.split$current_part\" -d'\\n' git checkout --\n     fi\n \n     echo \"[TEST] rustc test suite\"\n-    COMPILETEST_FORCE_STAGE0=1 ./x.py test --run always --stage 0 src/test/ui/ --rustc-args \"$RUSTC_ARGS\"\n+    COMPILETEST_FORCE_STAGE0=1 ./x.py test --run always --stage 0 tests/ui/ --rustc-args \"$RUSTC_ARGS\"\n }\n \n function test_failing_rustc() {"}]}