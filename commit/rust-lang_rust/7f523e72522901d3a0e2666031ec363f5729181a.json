{"sha": "7f523e72522901d3a0e2666031ec363f5729181a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNTIzZTcyNTIyOTAxZDNhMGUyNjY2MDMxZWMzNjNmNTcyOTE4MWE=", "commit": {"author": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-10-24T19:17:50Z"}, "committer": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-10-28T16:54:16Z"}, "message": "Update tests with the new error messages", "tree": {"sha": "ff3cbe7fe5b2de9da63cce58a482c9d9de36ddb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff3cbe7fe5b2de9da63cce58a482c9d9de36ddb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f523e72522901d3a0e2666031ec363f5729181a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f523e72522901d3a0e2666031ec363f5729181a", "html_url": "https://github.com/rust-lang/rust/commit/7f523e72522901d3a0e2666031ec363f5729181a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f523e72522901d3a0e2666031ec363f5729181a/comments", "author": null, "committer": null, "parents": [{"sha": "cca84e9e21b3f021fb6a0d9dedaad270753531cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/cca84e9e21b3f021fb6a0d9dedaad270753531cc", "html_url": "https://github.com/rust-lang/rust/commit/cca84e9e21b3f021fb6a0d9dedaad270753531cc"}], "stats": {"total": 78, "additions": 45, "deletions": 33}, "files": [{"sha": "d204c8c750aae28797abd76cd3e1804076910690", "filename": "src/test/compile-fail/bad-bang-ann-3.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fbad-bang-ann-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fbad-bang-ann-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-bang-ann-3.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -11,8 +11,7 @@\n // Tests that a function with a ! annotation always actually fails\n \n fn bad_bang(i: uint) -> ! {\n-    return 7u;\n-    //~^ ERROR expected `!`, found `uint`\n+    return 7u; //~ ERROR `return` in a function declared as diverging [E0166]\n }\n \n fn main() { bad_bang(5u); }"}, {"sha": "69200ffedf9bb78d930dd8ae703b0484786947a9", "filename": "src/test/compile-fail/bad-bang-ann.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fbad-bang-ann.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fbad-bang-ann.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-bang-ann.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -10,9 +10,8 @@\n \n // Tests that a function with a ! annotation always actually fails\n \n-fn bad_bang(i: uint) -> ! {\n+fn bad_bang(i: uint) -> ! { //~ ERROR computation may converge in a function marked as diverging\n     if i < 0u { } else { fail!(); }\n-    //~^ ERROR expected `!`, found `()`\n }\n \n fn main() { bad_bang(5u); }"}, {"sha": "ec576ff4bd8c25f3964ae32a3be836387fba3469", "filename": "src/test/compile-fail/bang-tailexpr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fbang-tailexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fbang-tailexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbang-tailexpr.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn f() -> ! {\n-    3i //~ ERROR expected `!`, found `int`\n+fn f() -> ! { //~ ERROR computation may converge in a function marked as diverging\n+    3i\n }\n fn main() { }"}, {"sha": "2d6f8ccbfa25f378c8c457f5b0ffbb64fb46cdc7", "filename": "src/test/compile-fail/binop-fail-3.rs", "status": "renamed", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fbinop-fail-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fbinop-fail-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-fail-3.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:quux\n fn foo() -> ! { fail!(\"quux\"); }\n-fn main() { foo() == foo(); }\n+fn main() {\n+    foo() //~ ERROR the type of this value must be known in this context\n+    ==\n+    foo();\n+}", "previous_filename": "src/test/run-fail/binop-fail-3.rs"}, {"sha": "05317e9c6b029970ccd59d05e5b4ef2a5a80b0cc", "filename": "src/test/compile-fail/closure-that-fails.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fclosure-that-fails.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fclosure-that-fails.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-that-fails.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -14,7 +14,7 @@ fn main() {\n     // Type inference didn't use to be able to handle this:\n     foo(|| fail!());\n     foo(|| -> ! fail!());\n-    foo(|| 22); //~ ERROR mismatched types\n-    foo(|| -> ! 22); //~ ERROR mismatched types\n-    let x = || -> ! 1; //~ ERROR mismatched types\n+    foo(|| 22i); //~ ERROR computation may converge in a function marked as diverging\n+    foo(|| -> ! 22i); //~ ERROR computation may converge in a function marked as diverging\n+    let x = || -> ! 1i; //~ ERROR computation may converge in a function marked as diverging\n }"}, {"sha": "bd01d45fd44ecfd3af74c46da7e134114759e41d", "filename": "src/test/compile-fail/index-bot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Findex-bot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Findex-bot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Findex-bot.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n fn main() {\n-    (return)[0u]; //~ ERROR cannot index a value of type `!`\n+    (return)[0u]; //~ ERROR the type of this value must be known in this context\n }"}, {"sha": "aa823d9a70e7c3f5b631f8743345a98fc8b5c856", "filename": "src/test/compile-fail/issue-13847.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-13847.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-13847.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13847.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n fn main() {\n-    return.is_failure //~ ERROR unconstrained type variable\n+    return.is_failure //~ ERROR the type of this value must be known in this context\n }"}, {"sha": "37fcabef0ed9b0b4195dfbaa982beb56469f834c", "filename": "src/test/compile-fail/issue-15207.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-15207.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-15207.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15207.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -9,5 +9,9 @@\n // except according to those terms.\n \n fn main() {\n-    loop { break.push(1); } //~ ERROR type `!` does not implement any method in scope named `push`\n+    loop {\n+        break.push(1) //~ ERROR the type of this value must be known in this context\n+        //~^ ERROR multiple applicable methods in scope\n+        ;\n+    }\n }"}, {"sha": "856cd1b0f3f26c3397da7a98ced7b8a668c7cf3a", "filename": "src/test/compile-fail/issue-15965.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-15965.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-15965.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15965.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -9,5 +9,10 @@\n // except according to those terms.\n \n fn main() {\n-    return { return () } (); //~ ERROR expected function, found `!`\n+    return\n+        { return () } //~ ERROR the type of this value must be known in this context\n+    () //~^ ERROR the type of this value must be known in this context\n+//~^^ ERROR notation; the first type parameter for the function trait is neither a tuple nor unit\n+//~^^^ ERROR overloaded calls are experimental\n+    ;\n }"}, {"sha": "6895893adc4d0d503ccb14bf4a1af6ee17898b6b", "filename": "src/test/compile-fail/issue-17373.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-17373.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-17373.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17373.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -9,5 +9,6 @@\n // except according to those terms.\n \n fn main() {\n-    *return; //~ ERROR type `!` cannot be dereferenced\n+    *return //~ ERROR the type of this value must be known in this context\n+    ;\n }"}, {"sha": "3ddb713528c5511f8a158bda4cc8a18f1875ed94", "filename": "src/test/compile-fail/issue-5100.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -27,13 +27,13 @@ fn main() {\n \n     match (true, false) {\n         box (true, false) => ()\n-        //~^ ERROR mismatched types: expected `(bool,bool)`, found `Box<<generic #11>>`\n+        //~^ ERROR mismatched types: expected `(bool,bool)`, found `Box<<generic #15>>`\n         //         (expected tuple, found box)\n     }\n \n     match (true, false) {\n         &(true, false) => ()\n-        //~^ ERROR mismatched types: expected `(bool,bool)`, found `&<generic #15>`\n+        //~^ ERROR mismatched types: expected `(bool,bool)`, found `&<generic #21>`\n         //         (expected tuple, found &-ptr)\n     }\n "}, {"sha": "e972379944accb0f6bd84f2ae27b04b471b342e3", "filename": "src/test/compile-fail/issue-5500.rs", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:explicit failure\n-\n fn main() {\n     &fail!()\n+    //~^ ERROR mismatched types: expected `()`, found `&<generic #2>` (expected (), found &-ptr)\n }", "previous_filename": "src/test/run-fail/issue-5500.rs"}, {"sha": "e6b97b727a7e9f078be1114ea736a06c8aa61385", "filename": "src/test/compile-fail/issue-897-2.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -12,8 +12,12 @@\n \n fn g() -> ! { fail!(); }\n fn f() -> ! {\n-    return g();\n-    g(); //~ ERROR: unreachable statement\n+    return g(); //~ ERROR `return` in a function declared as diverging\n+    g();\n+}\n+fn h() -> ! {\n+    loop {}\n+    g();\n }\n \n fn main() { f() }"}, {"sha": "944546d0b4a61e53fdd8debef92f3f0c634b6638", "filename": "src/test/compile-fail/issue-897.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-897.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fissue-897.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-897.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -8,12 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: unreachable statement\n-\n #![deny(unreachable_code)]\n \n fn f() -> ! {\n-    return fail!();\n+    return fail!(); //~ ERROR `return` in a function declared as diverging\n     fail!(); // the unreachable statement error is in <std macro>, at this line, there\n              // only is a note\n }"}, {"sha": "04364e4e01088341af757036c32137862eca738a", "filename": "src/test/compile-fail/liveness-bad-bang-2.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fliveness-bad-bang-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Fliveness-bad-bang-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-bad-bang-2.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -9,8 +9,9 @@\n // except according to those terms.\n \n // Tests that a function with a ! annotation always actually fails\n-// error-pattern: some control paths may return\n \n-fn bad_bang(i: uint) -> ! { println!(\"{}\", 3i); }\n+fn bad_bang(i: uint) -> ! { //~ ERROR computation may converge in a function marked as diverging\n+    println!(\"{}\", 3i);\n+}\n \n fn main() { bad_bang(5u); }"}, {"sha": "9488e6bf969f023449c784ce977c34bea2bc9aab", "filename": "src/test/compile-fail/loop-does-not-diverge.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Floop-does-not-diverge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Floop-does-not-diverge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Floop-does-not-diverge.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -14,7 +14,7 @@ fn forever() -> ! {\n   loop {\n     break;\n   }\n-  return 42i; //~ ERROR expected `!`, found `int`\n+  return 42i; //~ ERROR `return` in a function declared as diverging\n }\n \n fn main() {"}, {"sha": "df39e9e894eae8dcf9f4a7aede27c096919473c9", "filename": "src/test/compile-fail/lub-match.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Flub-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Fcompile-fail%2Flub-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flub-match.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -33,7 +33,8 @@ pub fn opt_str1<'a>(maybestr: &'a Option<String>) -> &'a str {\n }\n \n pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n-    match *maybestr {  //~ ERROR cannot infer an appropriate lifetime for automatic coercion due to\n+    match *maybestr {\n+    //~^ ERROR cannot infer an appropriate lifetime due to conflicting requirements\n         None => \"(none)\",\n         Some(ref s) => {\n             let s: &'a str = s.as_slice();\n@@ -43,7 +44,8 @@ pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n }\n \n pub fn opt_str3<'a>(maybestr: &'a Option<String>) -> &'static str {\n-    match *maybestr {  //~ ERROR cannot infer an appropriate lifetime for automatic coercion due to\n+    match *maybestr {\n+    //~^ ERROR cannot infer an appropriate lifetime due to conflicting requirements\n         Some(ref s) => {\n             let s: &'a str = s.as_slice();\n             s"}, {"sha": "afebcb3cdfc7dae4a97b31ff6a34a0c97fd9d01d", "filename": "src/test/run-pass/issue-13352.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Frun-pass%2Fissue-13352.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Frun-pass%2Fissue-13352.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13352.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -17,5 +17,4 @@ fn main() {\n         unsafe { libc::exit(0 as libc::c_int); }\n     });\n     2u + (loop {});\n-    -(loop {});\n }"}, {"sha": "496be7e0e6abbec08ffa375b62bd10f9b87c0099", "filename": "src/test/run-pass/unreachable-code.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Frun-pass%2Funreachable-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f523e72522901d3a0e2666031ec363f5729181a/src%2Ftest%2Frun-pass%2Funreachable-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funreachable-code.rs?ref=7f523e72522901d3a0e2666031ec363f5729181a", "patch": "@@ -23,8 +23,6 @@ fn call_id_2() { id(true) && id(return); }\n \n fn call_id_3() { id(return) && id(return); }\n \n-fn ret_ret() -> int { return (return 2i) + 3i; }\n-\n fn ret_guard() {\n     match 2i {\n       x if (return) => { x; }"}]}