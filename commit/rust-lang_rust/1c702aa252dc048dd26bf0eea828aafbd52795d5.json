{"sha": "1c702aa252dc048dd26bf0eea828aafbd52795d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNzAyYWEyNTJkYzA0OGRkMjZiZjBlZWE4MjhhYWZiZDUyNzk1ZDU=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-16T07:42:11Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-16T08:43:06Z"}, "message": "Update tests", "tree": {"sha": "6b394d2f28c2953f0bdbbb7790e4a063706d606e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b394d2f28c2953f0bdbbb7790e4a063706d606e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c702aa252dc048dd26bf0eea828aafbd52795d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c702aa252dc048dd26bf0eea828aafbd52795d5", "html_url": "https://github.com/rust-lang/rust/commit/1c702aa252dc048dd26bf0eea828aafbd52795d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c702aa252dc048dd26bf0eea828aafbd52795d5/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34c24990296ff473511dbd471f5ff288f956add5", "url": "https://api.github.com/repos/rust-lang/rust/commits/34c24990296ff473511dbd471f5ff288f956add5", "html_url": "https://github.com/rust-lang/rust/commit/34c24990296ff473511dbd471f5ff288f956add5"}], "stats": {"total": 71, "additions": 36, "deletions": 35}, "files": [{"sha": "08803e5db4e20d685b833a2d97c1afd8ccdcacdf", "filename": "tests/target/expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1c702aa252dc048dd26bf0eea828aafbd52795d5/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c702aa252dc048dd26bf0eea828aafbd52795d5/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=1c702aa252dc048dd26bf0eea828aafbd52795d5", "patch": "@@ -402,9 +402,9 @@ fn newlines_between_list_like_expr() {\n     ];\n \n     match x {\n-        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx |\n-        yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy |\n-        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz => foo(a, b, c),\n+        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n+        | yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n+        | zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz => foo(a, b, c),\n         _ => bar(),\n     };\n }"}, {"sha": "0430cc6295485ba73e234e725418c02ab2157fb1", "filename": "tests/target/issue-855.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1c702aa252dc048dd26bf0eea828aafbd52795d5/tests%2Ftarget%2Fissue-855.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c702aa252dc048dd26bf0eea828aafbd52795d5/tests%2Ftarget%2Fissue-855.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-855.rs?ref=1c702aa252dc048dd26bf0eea828aafbd52795d5", "patch": "@@ -2,8 +2,8 @@ fn main() {\n     'running: loop {\n         for event in event_pump.poll_iter() {\n             match event {\n-                Event::Quit { .. } |\n-                Event::KeyDown {\n+                Event::Quit { .. }\n+                | Event::KeyDown {\n                     keycode: Some(Keycode::Escape),\n                     ..\n                 } => break 'running,\n@@ -16,8 +16,8 @@ fn main2() {\n     'running: loop {\n         for event in event_pump.poll_iter() {\n             match event {\n-                Event::Quit { .. } |\n-                Event::KeyDownXXXXXXXXXXXXX {\n+                Event::Quit { .. }\n+                | Event::KeyDownXXXXXXXXXXXXX {\n                     keycode: Some(Keycode::Escape),\n                     ..\n                 } => break 'running,"}, {"sha": "fe707080b16582c9a8de82f0d524d2f430e2d915", "filename": "tests/target/match.rs", "status": "modified", "additions": 29, "deletions": 28, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/1c702aa252dc048dd26bf0eea828aafbd52795d5/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c702aa252dc048dd26bf0eea828aafbd52795d5/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=1c702aa252dc048dd26bf0eea828aafbd52795d5", "patch": "@@ -17,12 +17,12 @@ fn foo() {\n             aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n         }\n         Pattern1 | Pattern2 | Pattern3 => false,\n-        Paternnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn |\n-        Paternnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn => blah,\n-        Patternnnnnnnnnnnnnnnnnnn |\n-        Patternnnnnnnnnnnnnnnnnnn |\n-        Patternnnnnnnnnnnnnnnnnnn |\n-        Patternnnnnnnnnnnnnnnnnnn => meh,\n+        Paternnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n+        | Paternnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn => blah,\n+        Patternnnnnnnnnnnnnnnnnnn\n+        | Patternnnnnnnnnnnnnnnnnnn\n+        | Patternnnnnnnnnnnnnnnnnnn\n+        | Patternnnnnnnnnnnnnnnnnnn => meh,\n \n         Patternnnnnnnnnnnnnnnnnnn | Patternnnnnnnnnnnnnnnnnnn if looooooooooooooooooong_guard => {\n             meh\n@@ -35,8 +35,9 @@ fn foo() {\n         }\n \n         // Test that earlier patterns can take the guard space\n-        (aaaa, bbbbb, ccccccc, aaaaa, bbbbbbbb, cccccc, aaaa, bbbbbbbb, cccccc, dddddd) |\n-        Patternnnnnnnnnnnnnnnnnnnnnnnnn if loooooooooooooooooooooooooooooooooooooooooong_guard => {}\n+        (aaaa, bbbbb, ccccccc, aaaaa, bbbbbbbb, cccccc, aaaa, bbbbbbbb, cccccc, dddddd)\n+        | Patternnnnnnnnnnnnnnnnnnnnnnnnn\n+            if loooooooooooooooooooooooooooooooooooooooooong_guard => {}\n \n         _ => {}\n         ast::PathParameters::AngleBracketedParameters(ref data)\n@@ -299,27 +300,27 @@ fn issue494() {\n fn issue386() {\n     match foo {\n         BiEq | BiLt | BiLe | BiNe | BiGt | BiGe => true,\n-        BiAnd |\n-        BiOr |\n-        BiAdd |\n-        BiSub |\n-        BiMul |\n-        BiDiv |\n-        BiRem |\n-        BiBitXor |\n-        BiBitAnd |\n-        BiBitOr |\n-        BiShl |\n-        BiShr => false,\n+        BiAnd\n+        | BiOr\n+        | BiAdd\n+        | BiSub\n+        | BiMul\n+        | BiDiv\n+        | BiRem\n+        | BiBitXor\n+        | BiBitAnd\n+        | BiBitOr\n+        | BiShl\n+        | BiShr => false,\n     }\n }\n \n fn guards() {\n     match foo {\n         aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n             if foooooooooooooo && barrrrrrrrrrrr => {}\n-        aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa |\n-        aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+        aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+        | aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n             if foooooooooooooo && barrrrrrrrrrrr => {}\n         aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n             if fooooooooooooooooooooo\n@@ -438,12 +439,12 @@ fn match_with_near_max_width() {\n         _ => unimplemented!(),\n     };\n     match m {\n-        Variant::Tag |\n-        Variant::Tag2 |\n-        Variant::Tag3 |\n-        Variant::Tag4 |\n-        Variant::Tag5 |\n-        Variant::Tag6 => {}\n+        Variant::Tag\n+        | Variant::Tag2\n+        | Variant::Tag3\n+        | Variant::Tag4\n+        | Variant::Tag5\n+        | Variant::Tag6 => {}\n     }\n }\n "}]}