{"sha": "b14f3e54906b9e0e8906affd406923bb8fc12b1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNGYzZTU0OTA2YjllMGU4OTA2YWZmZDQwNjkyM2JiOGZjMTJiMWU=", "commit": {"author": {"name": "Denis Merigoux", "email": "denis.merigoux@gmail.com", "date": "2018-09-24T08:51:13Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-11-16T12:34:26Z"}, "message": "Adapt code to latest rustc master changes", "tree": {"sha": "51bcc9ba1cfc34789935297b1d6f62bb66310d72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51bcc9ba1cfc34789935297b1d6f62bb66310d72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b14f3e54906b9e0e8906affd406923bb8fc12b1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b14f3e54906b9e0e8906affd406923bb8fc12b1e", "html_url": "https://github.com/rust-lang/rust/commit/b14f3e54906b9e0e8906affd406923bb8fc12b1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b14f3e54906b9e0e8906affd406923bb8fc12b1e/comments", "author": {"login": "denismerigoux", "id": 1766128, "node_id": "MDQ6VXNlcjE3NjYxMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1766128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denismerigoux", "html_url": "https://github.com/denismerigoux", "followers_url": "https://api.github.com/users/denismerigoux/followers", "following_url": "https://api.github.com/users/denismerigoux/following{/other_user}", "gists_url": "https://api.github.com/users/denismerigoux/gists{/gist_id}", "starred_url": "https://api.github.com/users/denismerigoux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denismerigoux/subscriptions", "organizations_url": "https://api.github.com/users/denismerigoux/orgs", "repos_url": "https://api.github.com/users/denismerigoux/repos", "events_url": "https://api.github.com/users/denismerigoux/events{/privacy}", "received_events_url": "https://api.github.com/users/denismerigoux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "441a7c10921341ca72423cd6230f9dee82a8dc47", "url": "https://api.github.com/repos/rust-lang/rust/commits/441a7c10921341ca72423cd6230f9dee82a8dc47", "html_url": "https://github.com/rust-lang/rust/commit/441a7c10921341ca72423cd6230f9dee82a8dc47"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "81d10609e2f9f0b8a429efaeb89c622f20fe3285", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b14f3e54906b9e0e8906affd406923bb8fc12b1e/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b14f3e54906b9e0e8906affd406923bb8fc12b1e/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=b14f3e54906b9e0e8906affd406923bb8fc12b1e", "patch": "@@ -2013,13 +2013,7 @@ pub fn create_vtable_metadata(\n         llvm::LLVMRustDIBuilderCreateStaticVariable(DIB(cx),\n                                                     NO_SCOPE_METADATA,\n                                                     name.as_ptr(),\n-                                                    // LLVM 3.9\n-                                                    // doesn't accept\n-                                                    // null here, so\n-                                                    // pass the name\n-                                                    // as the linkage\n-                                                    // name.\n-                                                    name.as_ptr(),\n+                                                    ptr::null(),\n                                                     unknown_file_metadata(cx),\n                                                     UNKNOWN_LINE_NUMBER,\n                                                     vtable_type,"}, {"sha": "4d1a28ad6e2a6963e9a595d185eede7afd8e182a", "filename": "src/librustc_codegen_llvm/declare.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b14f3e54906b9e0e8906affd406923bb8fc12b1e/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b14f3e54906b9e0e8906affd406923bb8fc12b1e/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdeclare.rs?ref=b14f3e54906b9e0e8906affd406923bb8fc12b1e", "patch": "@@ -23,7 +23,7 @@\n use llvm;\n use llvm::AttributePlace::Function;\n use rustc::ty::{self, PolyFnSig};\n-use rustc::ty::layout::{self, LayoutOf};\n+use rustc::ty::layout::LayoutOf;\n use rustc::session::config::Sanitizer;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_target::spec::PanicStrategy;\n@@ -144,7 +144,7 @@ impl DeclareMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         let fty = FnType::new(self, sig, &[]);\n         let llfn = declare_raw_fn(self, name, fty.llvm_cconv(), fty.llvm_type(self));\n \n-        if self.layout_of(sig.output()).abi == layout::Abi::Uninhabited {\n+        if self.layout_of(sig.output()).abi.is_uninhabited() {\n             llvm::Attribute::NoReturn.apply_llfn(Function, llfn);\n         }\n "}]}