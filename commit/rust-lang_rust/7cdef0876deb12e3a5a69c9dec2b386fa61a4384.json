{"sha": "7cdef0876deb12e3a5a69c9dec2b386fa61a4384", "node_id": "C_kwDOAAsO6NoAKDdjZGVmMDg3NmRlYjEyZTNhNWE2OWM5ZGVjMmIzODZmYTYxYTQzODQ", "commit": {"author": {"name": "Martin Pool", "email": "mbp@google.com", "date": "2022-04-12T02:00:29Z"}, "committer": {"name": "Martin Pool", "email": "mbp@google.com", "date": "2022-04-12T02:00:29Z"}, "message": "Document that DirEntry holds the directory open", "tree": {"sha": "05800aa2d886028120d439b02ad915f7ed91d426", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05800aa2d886028120d439b02ad915f7ed91d426"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cdef0876deb12e3a5a69c9dec2b386fa61a4384", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cdef0876deb12e3a5a69c9dec2b386fa61a4384", "html_url": "https://github.com/rust-lang/rust/commit/7cdef0876deb12e3a5a69c9dec2b386fa61a4384", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cdef0876deb12e3a5a69c9dec2b386fa61a4384/comments", "author": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de392c7d31602ddf0fae1143c5ad822a1abe89df", "url": "https://api.github.com/repos/rust-lang/rust/commits/de392c7d31602ddf0fae1143c5ad822a1abe89df", "html_url": "https://github.com/rust-lang/rust/commit/de392c7d31602ddf0fae1143c5ad822a1abe89df"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "433b4d530136b282a9e84d870039c5b1b07eb3de", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7cdef0876deb12e3a5a69c9dec2b386fa61a4384/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cdef0876deb12e3a5a69c9dec2b386fa61a4384/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=7cdef0876deb12e3a5a69c9dec2b386fa61a4384", "patch": "@@ -132,6 +132,16 @@ pub struct ReadDir(fs_imp::ReadDir);\n /// An instance of `DirEntry` represents an entry inside of a directory on the\n /// filesystem. Each entry can be inspected via methods to learn about the full\n /// path or possibly other metadata through per-platform extension traits.\n+///\n+/// # Platform-specific behavior\n+///\n+/// On Unix, the `DirEntry` struct contains an internal reference to the open\n+/// directory. Holding `DirEntry` objects will consume a file handle even\n+/// after the `ReadDir` iterator is dropped.\n+///\n+/// Note that this [may change in the future][changes].\n+///\n+/// [changes]: io#platform-specific-behavior\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct DirEntry(fs_imp::DirEntry);\n "}]}