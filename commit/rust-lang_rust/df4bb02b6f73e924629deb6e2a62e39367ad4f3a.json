{"sha": "df4bb02b6f73e924629deb6e2a62e39367ad4f3a", "node_id": "C_kwDOAAsO6NoAKGRmNGJiMDJiNmY3M2U5MjQ2MjlkZWI2ZTJhNjJlMzkzNjdhZDRmM2E", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-09-30T14:57:15Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-09-30T14:57:15Z"}, "message": "minor: don't drop binders when doing autoderef", "tree": {"sha": "014f8c9789d7cb5152621b84e4d5e582beb161d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/014f8c9789d7cb5152621b84e4d5e582beb161d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df4bb02b6f73e924629deb6e2a62e39367ad4f3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df4bb02b6f73e924629deb6e2a62e39367ad4f3a", "html_url": "https://github.com/rust-lang/rust/commit/df4bb02b6f73e924629deb6e2a62e39367ad4f3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df4bb02b6f73e924629deb6e2a62e39367ad4f3a/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b21f15a23767c8d06ab5da60f59b8b197c45831a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b21f15a23767c8d06ab5da60f59b8b197c45831a", "html_url": "https://github.com/rust-lang/rust/commit/b21f15a23767c8d06ab5da60f59b8b197c45831a"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "ff795d85be4ff047eafe7046706ee923dd7c572e", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/df4bb02b6f73e924629deb6e2a62e39367ad4f3a/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df4bb02b6f73e924629deb6e2a62e39367ad4f3a/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=df4bb02b6f73e924629deb6e2a62e39367ad4f3a", "patch": "@@ -2504,8 +2504,7 @@ impl Type {\n \n     pub fn autoderef<'a>(&'a self, db: &'a dyn HirDatabase) -> impl Iterator<Item = Type> + 'a {\n         // There should be no inference vars in types passed here\n-        let ty = hir_ty::replace_errors_with_variables(&self.ty).value;\n-        let canonical = Canonical { value: ty, binders: CanonicalVarKinds::empty(&Interner) };\n+        let canonical = hir_ty::replace_errors_with_variables(&self.ty);\n         let environment = self.env.env.clone();\n         let ty = InEnvironment { goal: canonical, environment };\n         autoderef(db, Some(self.krate), ty)"}]}