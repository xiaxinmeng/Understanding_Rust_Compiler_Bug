{"sha": "319b75c75b65985b7d3389d65a49f993ef3345fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxOWI3NWM3NWI2NTk4NWI3ZDMzODlkNjVhNDlmOTkzZWYzMzQ1ZmE=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-24T12:21:19Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-24T12:21:19Z"}, "message": "Merge #3349\n\n3349: Fixes #3347: Lint for wildcard dependencies in Cargo.toml r=ordovicia a=ordovicia\n\nAdd a lint for wildcard dependencies in Cargo.toml.\r\nHow should I write a test for this lint?\r\n\r\nFixes #3347\n\nCo-authored-by: Hidehito Yabuuchi <hdht.ybuc@gmail.com>", "tree": {"sha": "a751e44e0f2955f9d381fc6837585a6b09e9f1fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a751e44e0f2955f9d381fc6837585a6b09e9f1fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/319b75c75b65985b7d3389d65a49f993ef3345fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/319b75c75b65985b7d3389d65a49f993ef3345fa", "html_url": "https://github.com/rust-lang/rust/commit/319b75c75b65985b7d3389d65a49f993ef3345fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/319b75c75b65985b7d3389d65a49f993ef3345fa/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "03f8899fa53884b07e025bec0447a88c272c79da", "url": "https://api.github.com/repos/rust-lang/rust/commits/03f8899fa53884b07e025bec0447a88c272c79da", "html_url": "https://github.com/rust-lang/rust/commit/03f8899fa53884b07e025bec0447a88c272c79da"}, {"sha": "99b78f06506c4f04399d2186b434a5dd4e16e792", "url": "https://api.github.com/repos/rust-lang/rust/commits/99b78f06506c4f04399d2186b434a5dd4e16e792", "html_url": "https://github.com/rust-lang/rust/commit/99b78f06506c4f04399d2186b434a5dd4e16e792"}], "stats": {"total": 87, "additions": 77, "deletions": 10}, "files": [{"sha": "768751b2f0806ef88b837c6cb2f3197c37396f16", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/319b75c75b65985b7d3389d65a49f993ef3345fa/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/319b75c75b65985b7d3389d65a49f993ef3345fa/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=319b75c75b65985b7d3389d65a49f993ef3345fa", "patch": "@@ -893,6 +893,7 @@ All notable changes to this project will be documented in this file.\n [`while_immutable_condition`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#while_immutable_condition\n [`while_let_loop`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#while_let_loop\n [`while_let_on_iterator`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#while_let_on_iterator\n+[`wildcard_dependencies`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#wildcard_dependencies\n [`write_literal`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#write_literal\n [`write_with_newline`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#write_with_newline\n [`writeln_empty_string`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#writeln_empty_string"}, {"sha": "94fb8c6c02fddcf708d00ae8157cb56bf72fdc8e", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/319b75c75b65985b7d3389d65a49f993ef3345fa/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/319b75c75b65985b7d3389d65a49f993ef3345fa/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=319b75c75b65985b7d3389d65a49f993ef3345fa", "patch": "@@ -9,7 +9,7 @@ We are currently in the process of discussing Clippy 1.0 via the RFC process in\n \n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n-[There are 280 lints included in this crate!](https://rust-lang-nursery.github.io/rust-clippy/master/index.html)\n+[There are 281 lints included in this crate!](https://rust-lang-nursery.github.io/rust-clippy/master/index.html)\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n "}, {"sha": "8b2070561d25b2e9a733f300b6c9f35ef7a06e20", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/319b75c75b65985b7d3389d65a49f993ef3345fa/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/319b75c75b65985b7d3389d65a49f993ef3345fa/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=319b75c75b65985b7d3389d65a49f993ef3345fa", "patch": "@@ -200,6 +200,7 @@ pub mod unused_label;\n pub mod unwrap;\n pub mod use_self;\n pub mod vec;\n+pub mod wildcard_dependencies;\n pub mod write;\n pub mod zero_div_zero;\n // end lints modules, do not remove this comment, it\u2019s used in `update_lints`\n@@ -438,6 +439,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box question_mark::Pass);\n     reg.register_late_lint_pass(box suspicious_trait_impl::SuspiciousImpl);\n     reg.register_early_lint_pass(box multiple_crate_versions::Pass);\n+    reg.register_early_lint_pass(box wildcard_dependencies::Pass);\n     reg.register_late_lint_pass(box map_unit_fn::Pass);\n     reg.register_late_lint_pass(box infallible_destructuring_match::Pass);\n     reg.register_late_lint_pass(box inherent_impl::Pass::default());\n@@ -967,6 +969,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n \n     reg.register_lint_group(\"clippy::cargo\", Some(\"clippy_cargo\"), vec![\n         multiple_crate_versions::MULTIPLE_CRATE_VERSIONS,\n+        wildcard_dependencies::WILDCARD_DEPENDENCIES,\n     ]);\n \n     reg.register_lint_group(\"clippy::nursery\", Some(\"clippy_nursery\"), vec!["}, {"sha": "da1ccd8fdf07ea627198f97734334e10c2980ff0", "filename": "clippy_lints/src/multiple_crate_versions.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/319b75c75b65985b7d3389d65a49f993ef3345fa/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/319b75c75b65985b7d3389d65a49f993ef3345fa/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs?ref=319b75c75b65985b7d3389d65a49f993ef3345fa", "patch": "@@ -7,12 +7,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n //! lint on multiple versions of a crate being used\n \n use crate::rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use crate::rustc::{declare_tool_lint, lint_array};\n-use crate::syntax::ast::*;\n+use crate::syntax::{ast::*, source_map::DUMMY_SP};\n use crate::utils::span_lint;\n \n use cargo_metadata;\n@@ -54,12 +53,7 @@ impl EarlyLintPass for Pass {\n         let metadata = if let Ok(metadata) = cargo_metadata::metadata_deps(None, true) {\n             metadata\n         } else {\n-            span_lint(\n-                cx,\n-                MULTIPLE_CRATE_VERSIONS,\n-                krate.span,\n-                \"could not read cargo metadata\"\n-            );\n+            span_lint(cx, MULTIPLE_CRATE_VERSIONS, DUMMY_SP, \"could not read cargo metadata\");\n \n             return;\n         };\n@@ -76,7 +70,7 @@ impl EarlyLintPass for Pass {\n                 span_lint(\n                     cx,\n                     MULTIPLE_CRATE_VERSIONS,\n-                    krate.span,\n+                    DUMMY_SP,\n                     &format!(\"multiple versions for dependency `{}`: {}\", name, versions),\n                 );\n             }"}, {"sha": "c172b38a6cbe6efc7b887c47a9ce8509dd64b91f", "filename": "clippy_lints/src/wildcard_dependencies.rs", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/319b75c75b65985b7d3389d65a49f993ef3345fa/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/319b75c75b65985b7d3389d65a49f993ef3345fa/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs?ref=319b75c75b65985b7d3389d65a49f993ef3345fa", "patch": "@@ -0,0 +1,69 @@\n+// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use crate::rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n+use crate::rustc::{declare_tool_lint, lint_array};\n+use crate::syntax::{ast::*, source_map::DUMMY_SP};\n+use crate::utils::span_lint;\n+\n+use cargo_metadata;\n+use semver;\n+\n+/// **What it does:** Checks for wildcard dependencies in the `Cargo.toml`.\n+///\n+/// **Why is this bad?** [As the edition guide says](https://rust-lang-nursery.github.io/edition-guide/rust-2018/cargo-and-crates-io/crates-io-disallows-wildcard-dependencies.html),\n+/// it is highly unlikely that you work with any possible version of your dependency,\n+/// and wildcard dependencies would cause unnecessary breakage in the ecosystem.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+///\n+/// ```toml\n+/// [dependencies]\n+/// regex = \"*\"\n+/// ```\n+declare_clippy_lint! {\n+    pub WILDCARD_DEPENDENCIES,\n+    cargo,\n+    \"wildcard dependencies being used\"\n+}\n+\n+pub struct Pass;\n+\n+impl LintPass for Pass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(WILDCARD_DEPENDENCIES)\n+    }\n+}\n+\n+impl EarlyLintPass for Pass {\n+    fn check_crate(&mut self, cx: &EarlyContext<'_>, krate: &Crate) {\n+        let metadata = if let Ok(metadata) = cargo_metadata::metadata(None) {\n+            metadata\n+        } else {\n+            span_lint(cx, WILDCARD_DEPENDENCIES, DUMMY_SP, \"could not read cargo metadata\");\n+            return;\n+        };\n+\n+        for dep in &metadata.packages[0].dependencies {\n+            // VersionReq::any() does not work\n+            if let Ok(wildcard_ver) = semver::VersionReq::parse(\"*\") {\n+                if dep.req == wildcard_ver {\n+                    span_lint(\n+                        cx,\n+                        WILDCARD_DEPENDENCIES,\n+                        DUMMY_SP,\n+                        &format!(\"wildcard dependency for `{}`\", dep.name),\n+                    );\n+                }\n+            }\n+        }\n+    }\n+}"}]}