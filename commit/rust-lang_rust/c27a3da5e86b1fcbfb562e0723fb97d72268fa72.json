{"sha": "c27a3da5e86b1fcbfb562e0723fb97d72268fa72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyN2EzZGE1ZTg2YjFmY2JmYjU2MmUwNzIzZmI5N2Q3MjI2OGZhNzI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-22T13:04:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-22T13:04:56Z"}, "message": "remove path_ident from CompletionContext\n\nWe really shouldn't be looking at the identifier at point. Instead,\nall filtering and sorting should be implemented at the layer above.\n\nThis layer should probably be home for auto-import completions as\nwell, but, since that is not yet implemented, let's just stick this\ninto complete_scope.", "tree": {"sha": "1a78d5e88244a4689cfd71cfadf76b0830a1280d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a78d5e88244a4689cfd71cfadf76b0830a1280d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c27a3da5e86b1fcbfb562e0723fb97d72268fa72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c27a3da5e86b1fcbfb562e0723fb97d72268fa72", "html_url": "https://github.com/rust-lang/rust/commit/c27a3da5e86b1fcbfb562e0723fb97d72268fa72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c27a3da5e86b1fcbfb562e0723fb97d72268fa72/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e01052d1f0b8bf70a418a10538528923c5f400d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e01052d1f0b8bf70a418a10538528923c5f400d5", "html_url": "https://github.com/rust-lang/rust/commit/e01052d1f0b8bf70a418a10538528923c5f400d5"}], "stats": {"total": 77, "additions": 38, "deletions": 39}, "files": [{"sha": "2473e58b405819b112e4f44c27bd5ae19fc04c85", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 36, "deletions": 34, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/c27a3da5e86b1fcbfb562e0723fb97d72268fa72/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c27a3da5e86b1fcbfb562e0723fb97d72268fa72/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=c27a3da5e86b1fcbfb562e0723fb97d72268fa72", "patch": "@@ -1,6 +1,6 @@\n use rustc_hash::FxHashMap;\n use ra_text_edit::TextEditBuilder;\n-use ra_syntax::SmolStr;\n+use ra_syntax::{SmolStr, ast, AstNode};\n use ra_assists::auto_import;\n \n use crate::completion::{CompletionItem, Completions, CompletionKind, CompletionContext};\n@@ -9,41 +9,43 @@ pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) {\n     if ctx.is_trivial_path {\n         let names = ctx.analyzer.all_names(ctx.db);\n         names.into_iter().for_each(|(name, res)| acc.add_resolution(ctx, name.to_string(), &res));\n-    }\n \n-    if let Some(name) = ctx.path_ident.as_ref() {\n-        let import_resolver = ImportResolver::new();\n-        let import_names = import_resolver.all_names(&name.to_string());\n-        import_names.into_iter().for_each(|(name, path)| {\n-            let edit = {\n-                let mut builder = TextEditBuilder::default();\n-                builder.replace(ctx.source_range(), name.to_string());\n-                auto_import::auto_import_text_edit(\n-                    ctx.token.parent(),\n-                    ctx.token.parent(),\n-                    &path,\n-                    &mut builder,\n-                );\n-                builder.finish()\n-            };\n+        // auto-import\n+        // We fetch ident from the original file, because we need to pre-filter auto-imports\n+        if ast::NameRef::cast(ctx.token.parent()).is_some() {\n+            let import_resolver = ImportResolver::new();\n+            let import_names = import_resolver.all_names(ctx.token.text());\n+            import_names.into_iter().for_each(|(name, path)| {\n+                let edit = {\n+                    let mut builder = TextEditBuilder::default();\n+                    builder.replace(ctx.source_range(), name.to_string());\n+                    auto_import::auto_import_text_edit(\n+                        ctx.token.parent(),\n+                        ctx.token.parent(),\n+                        &path,\n+                        &mut builder,\n+                    );\n+                    builder.finish()\n+                };\n \n-            // Hack: copied this check form conv.rs beacause auto import can produce edits\n-            // that invalidate assert in conv_with.\n-            if edit\n-                .as_atoms()\n-                .iter()\n-                .filter(|atom| !ctx.source_range().is_subrange(&atom.delete))\n-                .all(|atom| ctx.source_range().intersection(&atom.delete).is_none())\n-            {\n-                CompletionItem::new(\n-                    CompletionKind::Reference,\n-                    ctx.source_range(),\n-                    build_import_label(&name, &path),\n-                )\n-                .text_edit(edit)\n-                .add_to(acc);\n-            }\n-        });\n+                // Hack: copied this check form conv.rs beacause auto import can produce edits\n+                // that invalidate assert in conv_with.\n+                if edit\n+                    .as_atoms()\n+                    .iter()\n+                    .filter(|atom| !ctx.source_range().is_subrange(&atom.delete))\n+                    .all(|atom| ctx.source_range().intersection(&atom.delete).is_none())\n+                {\n+                    CompletionItem::new(\n+                        CompletionKind::Reference,\n+                        ctx.source_range(),\n+                        build_import_label(&name, &path),\n+                    )\n+                    .text_edit(edit)\n+                    .add_to(acc);\n+                }\n+            });\n+        }\n     }\n }\n "}, {"sha": "a8c8cc7b0470b469c616dedd6fa16edbffb4acdd", "filename": "crates/ra_ide_api/src/completion/completion_context.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c27a3da5e86b1fcbfb562e0723fb97d72268fa72/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c27a3da5e86b1fcbfb562e0723fb97d72268fa72/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=c27a3da5e86b1fcbfb562e0723fb97d72268fa72", "patch": "@@ -5,10 +5,10 @@ use ra_syntax::{\n     algo::{find_token_at_offset, find_covering_element, find_node_at_offset},\n     SyntaxKind::*,\n };\n-\n-use hir::{ source_binder, Name };\n+use hir::source_binder;\n \n use crate::{db, FilePosition};\n+\n /// `CompletionContext` is created early during completion to figure out, where\n /// exactly is the cursor, syntax-wise.\n #[derive(Debug)]\n@@ -29,8 +29,6 @@ pub(crate) struct CompletionContext<'a> {\n     pub(super) is_trivial_path: bool,\n     /// If not a trivial path, the prefix (qualifier).\n     pub(super) path_prefix: Option<hir::Path>,\n-    /// If a trivial path, the ident.\n-    pub(super) path_ident: Option<Name>,\n     pub(super) after_if: bool,\n     /// `true` if we are a statement or a last expr in the block.\n     pub(super) can_be_stmt: bool,\n@@ -65,7 +63,6 @@ impl<'a> CompletionContext<'a> {\n             is_pat_binding: false,\n             is_trivial_path: false,\n             path_prefix: None,\n-            path_ident: None,\n             after_if: false,\n             can_be_stmt: false,\n             is_new_item: false,"}]}