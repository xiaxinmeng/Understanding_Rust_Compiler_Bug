{"sha": "adc4bb54062bd0bdff8bfaecce238990f4225bac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYzRiYjU0MDYyYmQwYmRmZjhiZmFlY2NlMjM4OTkwZjQyMjViYWM=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-07-20T21:25:48Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-07-20T21:42:48Z"}, "message": "Allow client to respond to workspace/configuration with null values\n\nThis is allowed per the spec if the client doesn't know about the configuration\nwe've requested.", "tree": {"sha": "aebb71b2cfd4528f487edeae75685610cf205d1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aebb71b2cfd4528f487edeae75685610cf205d1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adc4bb54062bd0bdff8bfaecce238990f4225bac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adc4bb54062bd0bdff8bfaecce238990f4225bac", "html_url": "https://github.com/rust-lang/rust/commit/adc4bb54062bd0bdff8bfaecce238990f4225bac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adc4bb54062bd0bdff8bfaecce238990f4225bac/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76c1fac9c3ed9fa3f784e5cdde7dd770c9fac6c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/76c1fac9c3ed9fa3f784e5cdde7dd770c9fac6c1", "html_url": "https://github.com/rust-lang/rust/commit/76c1fac9c3ed9fa3f784e5cdde7dd770c9fac6c1"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "3a0aa418331dbe1ef20c26271c36a1f8eb0bcdcd", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/adc4bb54062bd0bdff8bfaecce238990f4225bac/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc4bb54062bd0bdff8bfaecce238990f4225bac/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=adc4bb54062bd0bdff8bfaecce238990f4225bac", "patch": "@@ -177,6 +177,11 @@ impl Config {\n \n     pub fn update(&mut self, json: serde_json::Value) {\n         log::info!(\"Config::update({:#})\", json);\n+\n+        if json.is_null() {\n+            return;\n+        }\n+\n         let data = ConfigData::from_json(json);\n \n         self.with_sysroot = data.withSysroot;"}, {"sha": "bb7c4c0c64f9975175ffdff8d579ac4633fcf118", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adc4bb54062bd0bdff8bfaecce238990f4225bac/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc4bb54062bd0bdff8bfaecce238990f4225bac/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=adc4bb54062bd0bdff8bfaecce238990f4225bac", "patch": "@@ -468,6 +468,8 @@ impl GlobalState {\n                             }\n                             (None, Some(mut configs)) => {\n                                 if let Some(json) = configs.get_mut(0) {\n+                                    // Note that json can be null according to the spec if the client can't\n+                                    // provide a configuration. This is handled in Config::update below.\n                                     let mut config = this.config.clone();\n                                     config.update(json.take());\n                                     this.update_configuration(config);"}]}