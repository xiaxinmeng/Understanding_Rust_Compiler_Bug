{"sha": "724f811794bf30141922eb9ff26cd9ce7febe64e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNGY4MTE3OTRiZjMwMTQxOTIyZWI5ZmYyNmNkOWNlN2ZlYmU2NGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-07-31T06:21:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-31T06:21:46Z"}, "message": "Auto merge of #35060 - japaric:arm-musl, r=alexcrichton\n\nAdd ARM MUSL targets\n\nRebase of #33189.\n\nI tested this by producing a std for `arm-unknown-linux-musleabi` then I cross compiled Hello world to said target. Checked that the produced binary was statically linked and verified that the binary worked under QEMU.\n\nThis depends on rust-lang/libc#341. I'll have to update this PR after that libc PR is merged.\n\nI'm also working on generating ARM musl cross toolchain via crosstool-ng. Once I verified those work, I'll send a PR to rust-buildbot.\n\nr? @alexcrichton\ncc @timonvo", "tree": {"sha": "fd75396b366bee728b0b2036c86170118b991538", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd75396b366bee728b0b2036c86170118b991538"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/724f811794bf30141922eb9ff26cd9ce7febe64e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/724f811794bf30141922eb9ff26cd9ce7febe64e", "html_url": "https://github.com/rust-lang/rust/commit/724f811794bf30141922eb9ff26cd9ce7febe64e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/724f811794bf30141922eb9ff26cd9ce7febe64e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c267ab4e3b40dddde3804b8b80321049d9879eb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c267ab4e3b40dddde3804b8b80321049d9879eb9", "html_url": "https://github.com/rust-lang/rust/commit/c267ab4e3b40dddde3804b8b80321049d9879eb9"}, {"sha": "eb6173806d972b839711139ae107dda690febe3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb6173806d972b839711139ae107dda690febe3a", "html_url": "https://github.com/rust-lang/rust/commit/eb6173806d972b839711139ae107dda690febe3a"}], "stats": {"total": 165, "additions": 144, "deletions": 21}, "files": [{"sha": "a7e24a506fbef989170e3dfd346545594df1ee31", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/configure", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -1192,7 +1192,7 @@ do\n             ;;\n \n \n-        x86_64-*-musl)\n+        x86_64-*-musl | arm-*-musleabi)\n             if [ ! -f $CFG_MUSL_ROOT/lib/libc.a ]\n             then\n                 err \"musl libc $CFG_MUSL_ROOT/lib/libc.a not found\""}, {"sha": "8120250150d43abae3d03e0be4fe31573d862b61", "filename": "mk/cfg/arm-unknown-linux-musleabi.mk", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/mk%2Fcfg%2Farm-unknown-linux-musleabi.mk", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/mk%2Fcfg%2Farm-unknown-linux-musleabi.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Farm-unknown-linux-musleabi.mk?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -0,0 +1,3 @@\n+# This file is intentially left empty to indicate that, while this target is\n+# supported, it's not supported using plain GNU Make builds. Use a --rustbuild\n+# instead.\n\\ No newline at end of file"}, {"sha": "8120250150d43abae3d03e0be4fe31573d862b61", "filename": "mk/cfg/arm-unknown-linux-musleabihf.mk", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/mk%2Fcfg%2Farm-unknown-linux-musleabihf.mk", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/mk%2Fcfg%2Farm-unknown-linux-musleabihf.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Farm-unknown-linux-musleabihf.mk?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -0,0 +1,3 @@\n+# This file is intentially left empty to indicate that, while this target is\n+# supported, it's not supported using plain GNU Make builds. Use a --rustbuild\n+# instead.\n\\ No newline at end of file"}, {"sha": "8120250150d43abae3d03e0be4fe31573d862b61", "filename": "mk/cfg/armv7-unknown-linux-musleabihf.mk", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/mk%2Fcfg%2Farmv7-unknown-linux-musleabihf.mk", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/mk%2Fcfg%2Farmv7-unknown-linux-musleabihf.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Farmv7-unknown-linux-musleabihf.mk?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -0,0 +1,3 @@\n+# This file is intentially left empty to indicate that, while this target is\n+# supported, it's not supported using plain GNU Make builds. Use a --rustbuild\n+# instead.\n\\ No newline at end of file"}, {"sha": "02698d6f7a1237cdbd014173bd1a0b52a6ac3eb0", "filename": "src/bootstrap/Cargo.lock", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Fbootstrap%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Fbootstrap%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.lock?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -7,8 +7,8 @@ dependencies = [\n  \"filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"gcc 0.3.31 (git+https://github.com/alexcrichton/gcc-rs)\",\n  \"getopts 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"kernel32-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"md5 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-serialize 0.3.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -33,7 +33,7 @@ name = \"filetime\"\n version = \"0.1.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -53,7 +53,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"kernel32-sys\"\n-version = \"0.2.1\"\n+version = \"0.2.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"winapi 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -62,7 +62,7 @@ dependencies = [\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.9\"\n+version = \"0.2.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -75,7 +75,7 @@ name = \"num_cpus\"\n version = \"0.2.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]"}, {"sha": "061192ebd1340b318aedbea2441339eebb4282fe", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -92,8 +92,7 @@ pub fn std_link(build: &Build,\n     }\n     add_to_sysroot(&out_dir, &libdir);\n \n-    if target.contains(\"musl\") &&\n-       (target.contains(\"x86_64\") || target.contains(\"i686\")) {\n+    if target.contains(\"musl\") && !target.contains(\"mips\") {\n         copy_third_party_objects(build, target, &libdir);\n     }\n }"}, {"sha": "09f96782e7184a9af4a9564430164224fcfb6fb2", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -109,7 +109,7 @@ pub fn check(build: &mut Build) {\n         }\n \n         // Make sure musl-root is valid if specified\n-        if target.contains(\"musl\") && (target.contains(\"x86_64\") || target.contains(\"i686\")) {\n+        if target.contains(\"musl\") && !target.contains(\"mips\") {\n             match build.config.musl_root {\n                 Some(ref root) => {\n                     if fs::metadata(root.join(\"lib/libc.a\")).is_err() {"}, {"sha": "25b3c8a3a0a8355a89888a305ddb9c373cd04f05", "filename": "src/liballoc_jemalloc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Fliballoc_jemalloc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Fliballoc_jemalloc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2FCargo.toml?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -16,7 +16,7 @@ libc = { path = \"../rustc/libc_shim\" }\n \n [build-dependencies]\n build_helper = { path = \"../build_helper\" }\n-gcc = \"0.3.17\"\n+gcc = \"0.3.27\"\n \n [features]\n debug = []"}, {"sha": "dc1b8d6ea983509ef7b91dfb2f9867552e718f20", "filename": "src/liballoc_jemalloc/build.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Fliballoc_jemalloc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Fliballoc_jemalloc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Fbuild.rs?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -73,7 +73,16 @@ fn main() {\n                    .replace(\"\\\\\", \"/\"))\n        .current_dir(&build_dir)\n        .env(\"CC\", compiler.path())\n-       .env(\"EXTRA_CFLAGS\", cflags)\n+       .env(\"EXTRA_CFLAGS\", cflags.clone())\n+       // jemalloc generates Makefile deps using GCC's \"-MM\" flag. This means\n+       // that GCC will run the preprocessor, and only the preprocessor, over\n+       // jemalloc's source files. If we don't specify CPPFLAGS, then at least\n+       // on ARM that step fails with a \"Missing implementation for 32-bit\n+       // atomic operations\" error. This is because no \"-march\" flag will be\n+       // passed to GCC, and then GCC won't define the\n+       // \"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\" macro that jemalloc needs to\n+       // select an atomic operation implementation.\n+       .env(\"CPPFLAGS\", cflags.clone())\n        .env(\"AR\", &ar)\n        .env(\"RANLIB\", format!(\"{} s\", ar.display()));\n "}, {"sha": "5423da9c81c02880c991871943c00b6442751fe6", "filename": "src/libflate/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibflate%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibflate%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibflate%2FCargo.toml?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -11,4 +11,4 @@ crate-type = [\"dylib\"]\n \n [build-dependencies]\n build_helper = { path = \"../build_helper\" }\n-gcc = \"0.3\"\n+gcc = \"0.3.27\""}, {"sha": "5066b7dcab7e700844b0e2ba71b8af9dc627a59b", "filename": "src/liblibc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -1 +1 @@\n-Subproject commit b0d62534d48b711c8978d1bbe8cca0558ae7b1cb\n+Subproject commit 5066b7dcab7e700844b0e2ba71b8af9dc627a59b"}, {"sha": "028c91eadaeb3e672b00f016a1f9df6278c13f08", "filename": "src/librustc_back/target/arm_unknown_linux_musleabi.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::{Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::linux_musl_base::opts();\n+\n+    // Most of these settings are copied from the arm_unknown_linux_gnueabi\n+    // target.\n+    base.features = \"+v6\".to_string();\n+    base.max_atomic_width = 64;\n+    Ok(Target {\n+        // It's important we use \"gnueabi\" and not \"musleabi\" here. LLVM uses it\n+        // to determine the calling convention and float ABI, and it doesn't\n+        // support the \"musleabi\" value.\n+        llvm_target: \"arm-unknown-linux-gnueabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"linux\".to_string(),\n+        target_env: \"musl\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        options: base,\n+    })\n+}"}, {"sha": "c7dda186f42589cb97a8be622a7e5c635381aa86", "filename": "src/librustc_back/target/arm_unknown_linux_musleabihf.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::{Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::linux_musl_base::opts();\n+\n+    // Most of these settings are copied from the arm_unknown_linux_gnueabihf\n+    // target.\n+    base.features = \"+v6,+vfp2\".to_string();\n+    base.max_atomic_width = 64;\n+    Ok(Target {\n+        // It's important we use \"gnueabihf\" and not \"musleabihf\" here. LLVM\n+        // uses it to determine the calling convention and float ABI, and it\n+        // doesn't support the \"musleabihf\" value.\n+        llvm_target: \"arm-unknown-linux-gnueabihf\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"linux\".to_string(),\n+        target_env: \"musl\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        options: base,\n+    })\n+}"}, {"sha": "e40704e5d49975e56c51bb88b22b0485bba7f530", "filename": "src/librustc_back/target/armv7_unknown_linux_musleabihf.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_musleabihf.rs?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::{Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::linux_musl_base::opts();\n+\n+    // Most of these settings are copied from the armv7_unknown_linux_gnueabihf\n+    // target.\n+    base.features = \"+v7,+vfp3,+neon\".to_string();\n+    base.cpu = \"cortex-a8\".to_string();\n+    base.max_atomic_width = 64;\n+    Ok(Target {\n+        // It's important we use \"gnueabihf\" and not \"musleabihf\" here. LLVM\n+        // uses it to determine the calling convention and float ABI, and LLVM\n+        // doesn't support the \"musleabihf\" value.\n+        llvm_target: \"armv7-unknown-linux-gnueabihf\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"linux\".to_string(),\n+        target_env: \"musl\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        options: base,\n+    })\n+}"}, {"sha": "ecfbeaca351725588e148ac3dda8c3b96d679f10", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -134,7 +134,10 @@ supported_targets! {\n     (\"powerpc64le-unknown-linux-gnu\", powerpc64le_unknown_linux_gnu),\n     (\"arm-unknown-linux-gnueabi\", arm_unknown_linux_gnueabi),\n     (\"arm-unknown-linux-gnueabihf\", arm_unknown_linux_gnueabihf),\n+    (\"arm-unknown-linux-musleabi\", arm_unknown_linux_musleabi),\n+    (\"arm-unknown-linux-musleabihf\", arm_unknown_linux_musleabihf),\n     (\"armv7-unknown-linux-gnueabihf\", armv7_unknown_linux_gnueabihf),\n+    (\"armv7-unknown-linux-musleabihf\", armv7_unknown_linux_musleabihf),\n     (\"aarch64-unknown-linux-gnu\", aarch64_unknown_linux_gnu),\n     (\"x86_64-unknown-linux-musl\", x86_64_unknown_linux_musl),\n     (\"i686-unknown-linux-musl\", i686_unknown_linux_musl),"}, {"sha": "f97daa22ff6624c26487dfe8b9a5e1d1a1c43fb0", "filename": "src/librustc_llvm/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustc_llvm%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustc_llvm%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2FCargo.toml?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -17,4 +17,4 @@ rustc_bitflags = { path = \"../librustc_bitflags\" }\n \n [build-dependencies]\n build_helper = { path = \"../build_helper\" }\n-gcc = \"0.3\"\n+gcc = \"0.3.27\""}, {"sha": "3e510bdc9002e2cbbc5b0089a1c53386a205d439", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -28,4 +28,4 @@ log = { path = \"../liblog\" }\n \n [build-dependencies]\n build_helper = { path = \"../build_helper\" }\n-gcc = \"0.3\"\n+gcc = \"0.3.27\""}, {"sha": "3ce6841fdd4c6a1d4d1448047e1b5848ee21f5df", "filename": "src/libstd/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibstd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibstd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2FCargo.toml?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -24,7 +24,7 @@ unwind = { path = \"../libunwind\" }\n \n [build-dependencies]\n build_helper = { path = \"../build_helper\" }\n-gcc = \"0.3\"\n+gcc = \"0.3.27\"\n \n [features]\n backtrace = []"}, {"sha": "fd446f5a4f9428ff852097c4ecd25882bdb1b6ef", "filename": "src/libunwind/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibunwind%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Flibunwind%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Fbuild.rs?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -16,7 +16,7 @@ fn main() {\n     let target = env::var(\"TARGET\").unwrap();\n \n     if target.contains(\"linux\") {\n-        if target.contains(\"musl\") && (target.contains(\"x86_64\") || target.contains(\"i686\")) {\n+        if target.contains(\"musl\") && !target.contains(\"mips\") {\n             println!(\"cargo:rustc-link-lib=static=unwind\");\n         } else if !target.contains(\"android\") {\n             println!(\"cargo:rustc-link-lib=gcc_s\");"}, {"sha": "70aef55d799c114be7c0a975a7ba94af02a3b960", "filename": "src/rustc/std_shim/Cargo.lock", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Frustc%2Fstd_shim%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/724f811794bf30141922eb9ff26cd9ce7febe64e/src%2Frustc%2Fstd_shim%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fstd_shim%2FCargo.lock?ref=724f811794bf30141922eb9ff26cd9ce7febe64e", "patch": "@@ -18,7 +18,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"build_helper 0.1.0\",\n  \"core 0.0.0\",\n- \"gcc 0.3.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.0.0\",\n ]\n \n@@ -49,7 +49,7 @@ version = \"0.0.0\"\n \n [[package]]\n name = \"gcc\"\n-version = \"0.3.26\"\n+version = \"0.3.27\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -101,7 +101,7 @@ dependencies = [\n  \"build_helper 0.1.0\",\n  \"collections 0.0.0\",\n  \"core 0.0.0\",\n- \"gcc 0.3.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.0.0\",\n  \"panic_abort 0.0.0\",\n  \"panic_unwind 0.0.0\","}]}