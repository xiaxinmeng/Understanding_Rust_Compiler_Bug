{"sha": "ab19e5870ea28584ecf3ff4885e29afbbcaf0854", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMTllNTg3MGVhMjg1ODRlY2YzZmY0ODg1ZTI5YWZiYmNhZjA4NTQ=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-03-14T14:12:56Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-03-14T14:12:56Z"}, "message": "Use try blocks in rustc_codegen_ssa", "tree": {"sha": "478e471e9ed1d14ba0cadc8daa5f8732dfd4b489", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/478e471e9ed1d14ba0cadc8daa5f8732dfd4b489"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab19e5870ea28584ecf3ff4885e29afbbcaf0854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab19e5870ea28584ecf3ff4885e29afbbcaf0854", "html_url": "https://github.com/rust-lang/rust/commit/ab19e5870ea28584ecf3ff4885e29afbbcaf0854", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab19e5870ea28584ecf3ff4885e29afbbcaf0854/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a8f6a7806a9072fb5a5279a48bef316b749a433", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a8f6a7806a9072fb5a5279a48bef316b749a433", "html_url": "https://github.com/rust-lang/rust/commit/2a8f6a7806a9072fb5a5279a48bef316b749a433"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "e6470dbb61ce18649625555d582ede8430586b6a", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ab19e5870ea28584ecf3ff4885e29afbbcaf0854/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab19e5870ea28584ecf3ff4885e29afbbcaf0854/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=ab19e5870ea28584ecf3ff4885e29afbbcaf0854", "patch": "@@ -382,29 +382,27 @@ impl<'a> Linker for GccLinker<'a> {\n \n         if self.sess.target.target.options.is_like_osx {\n             // Write a plain, newline-separated list of symbols\n-            let res = (|| -> io::Result<()> {\n+            let res: io::Result<()> = try {\n                 let mut f = BufWriter::new(File::create(&path)?);\n                 for sym in self.info.exports[&crate_type].iter() {\n                     debug!(\"  _{}\", sym);\n                     writeln!(f, \"_{}\", sym)?;\n                 }\n-                Ok(())\n-            })();\n+            };\n             if let Err(e) = res {\n                 self.sess.fatal(&format!(\"failed to write lib.def file: {}\", e));\n             }\n         } else {\n             // Write an LD version script\n-            let res = (|| -> io::Result<()> {\n+            let res: io::Result<()> = try {\n                 let mut f = BufWriter::new(File::create(&path)?);\n                 writeln!(f, \"{{\\n  global:\")?;\n                 for sym in self.info.exports[&crate_type].iter() {\n                     debug!(\"    {};\", sym);\n                     writeln!(f, \"    {};\", sym)?;\n                 }\n                 writeln!(f, \"\\n  local:\\n    *;\\n}};\")?;\n-                Ok(())\n-            })();\n+            };\n             if let Err(e) = res {\n                 self.sess.fatal(&format!(\"failed to write version script: {}\", e));\n             }\n@@ -644,7 +642,7 @@ impl<'a> Linker for MsvcLinker<'a> {\n                       tmpdir: &Path,\n                       crate_type: CrateType) {\n         let path = tmpdir.join(\"lib.def\");\n-        let res = (|| -> io::Result<()> {\n+        let res: io::Result<()> = try {\n             let mut f = BufWriter::new(File::create(&path)?);\n \n             // Start off with the standard module name header and then go\n@@ -655,8 +653,7 @@ impl<'a> Linker for MsvcLinker<'a> {\n                 debug!(\"  _{}\", symbol);\n                 writeln!(f, \"  {}\", symbol)?;\n             }\n-            Ok(())\n-        })();\n+        };\n         if let Err(e) = res {\n             self.sess.fatal(&format!(\"failed to write lib.def file: {}\", e));\n         }"}, {"sha": "fe9b88c85f009fc5507ef57390d94284287a9e8a", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab19e5870ea28584ecf3ff4885e29afbbcaf0854/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab19e5870ea28584ecf3ff4885e29afbbcaf0854/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=ab19e5870ea28584ecf3ff4885e29afbbcaf0854", "patch": "@@ -7,6 +7,7 @@\n #![feature(libc)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(stmt_expr_attributes)]\n+#![feature(try_blocks)]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n #![allow(unused_attributes)]"}]}