{"sha": "12e60719c4cd2f1f4f8790eb0452869c5816f7dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZTYwNzE5YzRjZDJmMWY0Zjg3OTBlYjA0NTI4NjljNTgxNmY3ZGQ=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2014-12-26T00:17:30Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2014-12-26T00:17:30Z"}, "message": "Fix up remaining usage of `to_ascii`.", "tree": {"sha": "9fd2b89d997517ef1fe405150e6054ecbbad0990", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fd2b89d997517ef1fe405150e6054ecbbad0990"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12e60719c4cd2f1f4f8790eb0452869c5816f7dd", "comment_count": 12, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12e60719c4cd2f1f4f8790eb0452869c5816f7dd", "html_url": "https://github.com/rust-lang/rust/commit/12e60719c4cd2f1f4f8790eb0452869c5816f7dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12e60719c4cd2f1f4f8790eb0452869c5816f7dd/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd0baf7f01fc470fb7406b785d03e24fa116ed1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd0baf7f01fc470fb7406b785d03e24fa116ed1c", "html_url": "https://github.com/rust-lang/rust/commit/dd0baf7f01fc470fb7406b785d03e24fa116ed1c"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "71b8a08e52665fc08164b38536f98eec3c9d98df", "filename": "src/test/bench/shootout-k-nucleotide-pipes.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/12e60719c4cd2f1f4f8790eb0452869c5816f7dd/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12e60719c4cd2f1f4f8790eb0452869c5816f7dd/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs?ref=12e60719c4cd2f1f4f8790eb0452869c5816f7dd", "patch": "@@ -17,6 +17,7 @@\n \n extern crate collections;\n \n+use std::ascii::{AsciiExt, OwnedAsciiExt};\n use std::collections::HashMap;\n use std::mem::replace;\n use std::num::Float;\n@@ -64,18 +65,16 @@ fn sort_and_fmt(mm: &HashMap<Vec<u8> , uint>, total: uint) -> String {\n    let mut buffer = String::new();\n    for &(ref k, v) in pairs_sorted.iter() {\n        buffer.push_str(format!(\"{} {:0.3}\\n\",\n-                               k.as_slice()\n-                               .to_ascii()\n-                               .to_uppercase()\n-                               .into_string(), v).as_slice());\n+                               k.to_ascii_uppercase(),\n+                               v).as_slice());\n    }\n \n    return buffer\n }\n \n // given a map, search for the frequency of a pattern\n fn find(mm: &HashMap<Vec<u8> , uint>, key: String) -> uint {\n-   let key = key.into_ascii().as_slice().to_lowercase().into_string();\n+   let key = key.into_ascii_lowercase();\n    match mm.get(key.as_bytes()) {\n       option::Option::None      => { return 0u; }\n       option::Option::Some(&num) => { return num; }"}, {"sha": "a0ef392ed3af2d2310e78dfba1984b2b66cc2f66", "filename": "src/test/bench/shootout-k-nucleotide.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/12e60719c4cd2f1f4f8790eb0452869c5816f7dd/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12e60719c4cd2f1f4f8790eb0452869c5816f7dd/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs?ref=12e60719c4cd2f1f4f8790eb0452869c5816f7dd", "patch": "@@ -42,6 +42,7 @@\n \n #![feature(slicing_syntax)]\n \n+use std::ascii::OwnedAsciiExt;\n use std::string::String;\n use std::slice;\n use std::sync::{Arc, Future};\n@@ -286,10 +287,7 @@ fn get_sequence<R: Buffer>(r: &mut R, key: &str) -> Vec<u8> {\n     {\n         res.push_all(l.as_slice().trim().as_bytes());\n     }\n-    for b in res.iter_mut() {\n-        *b = b.to_ascii().to_uppercase().to_byte();\n-    }\n-    res\n+    res.into_ascii_uppercase()\n }\n \n fn main() {"}]}