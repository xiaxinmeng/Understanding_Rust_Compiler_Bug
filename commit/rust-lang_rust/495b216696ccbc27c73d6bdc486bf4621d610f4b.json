{"sha": "495b216696ccbc27c73d6bdc486bf4621d610f4b", "node_id": "C_kwDOAAsO6NoAKDQ5NWIyMTY2OTZjY2JjMjdjNzNkNmJkYzQ4NmJmNDYyMWQ2MTBmNGI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-03T19:39:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-03T19:39:28Z"}, "message": "Auto merge of #98439 - ehuss:cleanup-ci-script, r=Mark-Simulacrum\n\nClean up submodule checkout scripts\n\nThis is just some small cleanup:\n\n* Removed unused CACHE_DIR stuff\n* Removed duplicate fetch_github_commit_archive function which is no longer used\n* Combined init_repo.sh and checkout-submodules.sh, as checkout-submodules.sh was doing nothing but calling init_repo.sh", "tree": {"sha": "42faa70885016dd5dafd77521f006cb059679d67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42faa70885016dd5dafd77521f006cb059679d67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/495b216696ccbc27c73d6bdc486bf4621d610f4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/495b216696ccbc27c73d6bdc486bf4621d610f4b", "html_url": "https://github.com/rust-lang/rust/commit/495b216696ccbc27c73d6bdc486bf4621d610f4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/495b216696ccbc27c73d6bdc486bf4621d610f4b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e21a27075a8c508f00d1a4430497f17ce93d5c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e21a27075a8c508f00d1a4430497f17ce93d5c9", "html_url": "https://github.com/rust-lang/rust/commit/0e21a27075a8c508f00d1a4430497f17ce93d5c9"}, {"sha": "124557c05d25e4f7f6a4f549816e9be012e46d57", "url": "https://api.github.com/repos/rust-lang/rust/commits/124557c05d25e4f7f6a4f549816e9be012e46d57", "html_url": "https://github.com/rust-lang/rust/commit/124557c05d25e4f7f6a4f549816e9be012e46d57"}], "stats": {"total": 167, "additions": 63, "deletions": 104}, "files": [{"sha": "291f26bdaeb3794a781f1528b58a10b43227dc7f", "filename": "src/ci/docker/host-x86_64/dist-various-2/shared.sh", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fshared.sh?ref=495b216696ccbc27c73d6bdc486bf4621d610f4b", "patch": "@@ -33,15 +33,3 @@ function retry {\n     }\n   done\n }\n-\n-# Copied from ../../init_repo.sh\n-function fetch_github_commit_archive {\n-    local module=$1\n-    local cached=\"download-${module//\\//-}.tar.gz\"\n-    retry sh -c \"rm -f $cached && \\\n-        curl -f -sSL -o $cached $2\"\n-    mkdir $module\n-    touch \"$module/.git\"\n-    tar -C $module --strip-components=1 -xf $cached\n-    rm $cached\n-}"}, {"sha": "e8c1e2b0f59aeb228a751b887363ba66a1e3b539", "filename": "src/ci/init_repo.sh", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/0e21a27075a8c508f00d1a4430497f17ce93d5c9/src%2Fci%2Finit_repo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/0e21a27075a8c508f00d1a4430497f17ce93d5c9/src%2Fci%2Finit_repo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Finit_repo.sh?ref=0e21a27075a8c508f00d1a4430497f17ce93d5c9", "patch": "@@ -1,83 +0,0 @@\n-#!/usr/bin/env bash\n-\n-set -o errexit\n-set -o pipefail\n-set -o nounset\n-\n-ci_dir=$(cd $(dirname $0) && pwd)\n-. \"$ci_dir/shared.sh\"\n-\n-REPO_DIR=\"$1\"\n-CACHE_DIR=\"$2\"\n-\n-cache_src_dir=\"$CACHE_DIR/src\"\n-\n-if [ ! -d \"$REPO_DIR\" -o ! -d \"$REPO_DIR/.git\" ]; then\n-    echo \"Error: $REPO_DIR does not exist or is not a git repo\"\n-    exit 1\n-fi\n-cd $REPO_DIR\n-if [ ! -d \"$CACHE_DIR\" ]; then\n-    echo \"Error: $CACHE_DIR does not exist or is not an absolute path\"\n-    exit 1\n-fi\n-\n-rm -rf \"$CACHE_DIR\"\n-mkdir \"$CACHE_DIR\"\n-\n-# On the beta channel we'll be automatically calculating the prerelease version\n-# via the git history, so unshallow our shallow clone from CI.\n-if [ \"$(releaseChannel)\" = \"beta\" ]; then\n-  git fetch origin --unshallow beta master\n-fi\n-\n-# Duplicated in docker/dist-various-2/shared.sh\n-function fetch_github_commit_archive {\n-    local module=$1\n-    local cached=\"download-${module//\\//-}.tar.gz\"\n-    retry sh -c \"rm -f $cached && \\\n-        curl -f -sSL -o $cached $2\"\n-    mkdir $module\n-    touch \"$module/.git\"\n-    # On Windows, the default behavior is to emulate symlinks by copying\n-    # files. However, that ends up being order-dependent while extracting,\n-    # which can cause a failure if the symlink comes first. This env var\n-    # causes tar to use real symlinks instead, which are allowed to dangle.\n-    export MSYS=winsymlinks:nativestrict\n-    tar -C $module --strip-components=1 -xf $cached\n-    rm $cached\n-}\n-\n-# Archive downloads are temporarily disabled due to sudden 504\n-# gateway timeout errors.\n-# included=\"src/llvm-project src/doc/book src/doc/rust-by-example\"\n-included=\"\"\n-modules=\"$(git config --file .gitmodules --get-regexp '\\.path$' | cut -d' ' -f2)\"\n-modules=($modules)\n-use_git=\"\"\n-urls=\"$(git config --file .gitmodules --get-regexp '\\.url$' | cut -d' ' -f2)\"\n-urls=($urls)\n-# shellcheck disable=SC2068\n-for i in ${!modules[@]}; do\n-    module=${modules[$i]}\n-    if [[ \" $included \" = *\" $module \"* ]]; then\n-        commit=\"$(git ls-tree HEAD $module | awk '{print $3}')\"\n-        git rm $module\n-        url=${urls[$i]}\n-        url=${url/\\.git/}\n-        fetch_github_commit_archive $module \"$url/archive/$commit.tar.gz\" &\n-        bg_pids[${i}]=$!\n-        continue\n-    else\n-        use_git=\"$use_git $module\"\n-    fi\n-done\n-retry sh -c \"git submodule deinit -f $use_git && \\\n-    git submodule sync && \\\n-    git submodule update -j 16 --init --recursive --depth 1 $use_git\"\n-# STATUS=0\n-# for pid in ${bg_pids[*]}\n-# do\n-#     wait $pid || STATUS=1\n-# done\n-# exit ${STATUS}"}, {"sha": "3eb4b8f9058328183d498b60c858cc173bf238c1", "filename": "src/ci/scripts/checkout-submodules.sh", "status": "modified", "additions": 63, "deletions": 9, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Fci%2Fscripts%2Fcheckout-submodules.sh", "raw_url": "https://github.com/rust-lang/rust/raw/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Fci%2Fscripts%2Fcheckout-submodules.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fcheckout-submodules.sh?ref=495b216696ccbc27c73d6bdc486bf4621d610f4b", "patch": "@@ -2,16 +2,70 @@\n # Check out all our submodules, but more quickly than using git by using one of\n # our custom scripts\n \n-set -euo pipefail\n-IFS=$'\\n\\t'\n+set -o errexit\n+set -o pipefail\n+set -o nounset\n \n-source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n+if [ ! -d \".git\" ]; then\n+    echo \"Error: This must run in the root of the repository\"\n+    exit 1\n+fi\n+\n+ci_dir=$(cd $(dirname $0) && pwd)/..\n+. \"$ci_dir/shared.sh\"\n \n-if isWindows; then\n-    path=\"/c/cache/rustsrc\"\n-else\n-    path=\"${HOME}/rustsrc\"\n+# On the beta channel we'll be automatically calculating the prerelease version\n+# via the git history, so unshallow our shallow clone from CI.\n+if [ \"$(releaseChannel)\" = \"beta\" ]; then\n+  git fetch origin --unshallow beta master\n fi\n \n-mkdir -p \"${path}\"\n-\"$(cd \"$(dirname \"$0\")\" && pwd)/../init_repo.sh\" . \"${path}\"\n+function fetch_github_commit_archive {\n+    local module=$1\n+    local cached=\"download-${module//\\//-}.tar.gz\"\n+    retry sh -c \"rm -f $cached && \\\n+        curl -f -sSL -o $cached $2\"\n+    mkdir $module\n+    touch \"$module/.git\"\n+    # On Windows, the default behavior is to emulate symlinks by copying\n+    # files. However, that ends up being order-dependent while extracting,\n+    # which can cause a failure if the symlink comes first. This env var\n+    # causes tar to use real symlinks instead, which are allowed to dangle.\n+    export MSYS=winsymlinks:nativestrict\n+    tar -C $module --strip-components=1 -xf $cached\n+    rm $cached\n+}\n+\n+# Archive downloads are temporarily disabled due to sudden 504\n+# gateway timeout errors.\n+# included=\"src/llvm-project src/doc/book src/doc/rust-by-example\"\n+included=\"\"\n+modules=\"$(git config --file .gitmodules --get-regexp '\\.path$' | cut -d' ' -f2)\"\n+modules=($modules)\n+use_git=\"\"\n+urls=\"$(git config --file .gitmodules --get-regexp '\\.url$' | cut -d' ' -f2)\"\n+urls=($urls)\n+# shellcheck disable=SC2068\n+for i in ${!modules[@]}; do\n+    module=${modules[$i]}\n+    if [[ \" $included \" = *\" $module \"* ]]; then\n+        commit=\"$(git ls-tree HEAD $module | awk '{print $3}')\"\n+        git rm $module\n+        url=${urls[$i]}\n+        url=${url/\\.git/}\n+        fetch_github_commit_archive $module \"$url/archive/$commit.tar.gz\" &\n+        bg_pids[${i}]=$!\n+        continue\n+    else\n+        use_git=\"$use_git $module\"\n+    fi\n+done\n+retry sh -c \"git submodule deinit -f $use_git && \\\n+    git submodule sync && \\\n+    git submodule update -j 16 --init --recursive --depth 1 $use_git\"\n+# STATUS=0\n+# for pid in ${bg_pids[*]}\n+# do\n+#     wait $pid || STATUS=1\n+# done\n+# exit ${STATUS}"}]}