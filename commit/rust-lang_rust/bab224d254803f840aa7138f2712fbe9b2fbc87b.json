{"sha": "bab224d254803f840aa7138f2712fbe9b2fbc87b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYjIyNGQyNTQ4MDNmODQwYWE3MTM4ZjI3MTJmYmU5YjJmYmM4N2I=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-28T16:26:03Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-28T16:26:03Z"}, "message": "Remove outdated FIXME", "tree": {"sha": "cdd17b7c0a73f88c959c74a42a400018aab7da1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdd17b7c0a73f88c959c74a42a400018aab7da1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bab224d254803f840aa7138f2712fbe9b2fbc87b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bab224d254803f840aa7138f2712fbe9b2fbc87b", "html_url": "https://github.com/rust-lang/rust/commit/bab224d254803f840aa7138f2712fbe9b2fbc87b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bab224d254803f840aa7138f2712fbe9b2fbc87b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e62516496b9b47bcf25a03195ba024fd326f162", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e62516496b9b47bcf25a03195ba024fd326f162", "html_url": "https://github.com/rust-lang/rust/commit/2e62516496b9b47bcf25a03195ba024fd326f162"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "12c8862879487e045a6d5cfdf32f3da96a646ae8", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bab224d254803f840aa7138f2712fbe9b2fbc87b/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bab224d254803f840aa7138f2712fbe9b2fbc87b/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=bab224d254803f840aa7138f2712fbe9b2fbc87b", "patch": "@@ -968,8 +968,6 @@ pub(crate) fn codegen_intrinsic_call<'tcx>(\n             let old = CValue::by_val(old, layout);\n             ret.write_cvalue(fx, old);\n         };\n-\n-        // FIXME https://github.com/bytecodealliance/wasmtime/issues/2647\n         _ if intrinsic.as_str().starts_with(\"atomic_nand\"), (v ptr, c src) {\n             let layout = src.layout();\n             validate_atomic_type!(fx, intrinsic, span, layout.ty);"}]}