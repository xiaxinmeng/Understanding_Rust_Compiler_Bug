{"sha": "ab171c5279df8ed2449ca995c3e5402abc3cf8e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMTcxYzUyNzlkZjhlZDI0NDljYTk5NWMzZTU0MDJhYmMzY2Y4ZTk=", "commit": {"author": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2021-07-17T07:44:19Z"}, "committer": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2021-07-20T14:14:43Z"}, "message": "Add internal attribute and tests.", "tree": {"sha": "572e37198444bbfe7fd345d244d98428a0609b92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/572e37198444bbfe7fd345d244d98428a0609b92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab171c5279df8ed2449ca995c3e5402abc3cf8e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab171c5279df8ed2449ca995c3e5402abc3cf8e9", "html_url": "https://github.com/rust-lang/rust/commit/ab171c5279df8ed2449ca995c3e5402abc3cf8e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/comments", "author": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2dc4276fdb5d5c4d8d7ff6906213db6c6ed4d7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2dc4276fdb5d5c4d8d7ff6906213db6c6ed4d7e", "html_url": "https://github.com/rust-lang/rust/commit/d2dc4276fdb5d5c4d8d7ff6906213db6c6ed4d7e"}], "stats": {"total": 184, "additions": 183, "deletions": 1}, "files": [{"sha": "36d035cdfd3ae34bd53566d79b0ccad199852d04", "filename": "compiler/rustc_feature/src/builtin_attrs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs?ref=ab171c5279df8ed2449ca995c3e5402abc3cf8e9", "patch": "@@ -603,6 +603,7 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     rustc_attr!(TEST, rustc_dump_program_clauses, AssumedUsed, template!(Word)),\n     rustc_attr!(TEST, rustc_dump_env_program_clauses, AssumedUsed, template!(Word)),\n     rustc_attr!(TEST, rustc_object_lifetime_default, AssumedUsed, template!(Word)),\n+    rustc_attr!(TEST, rustc_dump_vtable, AssumedUsed, template!(Word)),\n     rustc_attr!(TEST, rustc_dummy, Normal, template!(Word /* doesn't matter*/)),\n     gated!(\n         omit_gdb_pretty_printer_section, AssumedUsed, template!(Word),"}, {"sha": "c0f63f40853da98e98cfd043d2e054bb5b903b70", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=ab171c5279df8ed2449ca995c3e5402abc3cf8e9", "patch": "@@ -1047,6 +1047,7 @@ symbols! {\n         rustc_dump_env_program_clauses,\n         rustc_dump_program_clauses,\n         rustc_dump_user_substs,\n+        rustc_dump_vtable,\n         rustc_error,\n         rustc_evaluate_where_clauses,\n         rustc_expected_cgu_reuse,"}, {"sha": "5c3b3926f4cbc11444a2e7f2692ca709305a972d", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=ab171c5279df8ed2449ca995c3e5402abc3cf8e9", "patch": "@@ -34,7 +34,7 @@ use rustc_middle::ty::{\n     self, GenericParamDefKind, ToPredicate, Ty, TyCtxt, VtblEntry, WithConstness,\n     COMMON_VTABLE_ENTRIES,\n };\n-use rustc_span::Span;\n+use rustc_span::{sym, Span};\n use smallvec::SmallVec;\n \n use std::fmt::Debug;\n@@ -614,6 +614,11 @@ fn prepare_vtable_segments<'tcx, T>(\n     }\n }\n \n+fn dump_vtable_entries<'tcx>(tcx: TyCtxt<'tcx>, entries: &[VtblEntry<'tcx>]) {\n+    let msg = format!(\"Vtable Entries: {:#?}\", entries);\n+    tcx.sess.struct_span_err(rustc_span::DUMMY_SP, &msg).emit();\n+}\n+\n /// Given a trait `trait_ref`, iterates the vtable entries\n /// that come from `trait_ref`, including its supertraits.\n fn vtable_entries<'tcx>(\n@@ -691,6 +696,11 @@ fn vtable_entries<'tcx>(\n     };\n \n     let _ = prepare_vtable_segments(tcx, trait_ref, vtable_segment_callback);\n+\n+    if tcx.has_attr(trait_ref.def_id(), sym::rustc_dump_vtable) {\n+        dump_vtable_entries(tcx, &entries);\n+    }\n+\n     tcx.arena.alloc_from_iter(entries.into_iter())\n }\n "}, {"sha": "ea26c60af72c2de0264ee6b1578bed28d118a265", "filename": "src/test/ui/traits/vtable/vtable-diamond.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-diamond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-diamond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-diamond.rs?ref=ab171c5279df8ed2449ca995c3e5402abc3cf8e9", "patch": "@@ -0,0 +1,39 @@\n+// build-fail\n+//~^ error Vtable\n+//~^^ error Vtable\n+#![feature(rustc_attrs)]\n+\n+#[rustc_dump_vtable]\n+trait A {\n+    fn foo_a(&self) {}\n+}\n+\n+#[rustc_dump_vtable]\n+trait B: A {\n+    fn foo_b(&self) {}\n+}\n+\n+#[rustc_dump_vtable]\n+trait C: A {\n+    fn foo_c(&self) {}\n+}\n+\n+#[rustc_dump_vtable]\n+trait D: B + C {\n+    fn foo_d(&self) {}\n+}\n+\n+struct S;\n+\n+impl A for S {}\n+impl B for S {}\n+impl C for S {}\n+impl D for S {}\n+\n+fn foo(d: &dyn D) {\n+    d.foo_d();\n+}\n+\n+fn main() {\n+    foo(&S);\n+}"}, {"sha": "582c8184107a2dfa46e3faeb0cea276879d4e843", "filename": "src/test/ui/traits/vtable/vtable-diamond.stderr", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-diamond.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-diamond.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-diamond.stderr?ref=ab171c5279df8ed2449ca995c3e5402abc3cf8e9", "patch": "@@ -0,0 +1,56 @@\n+error: Vtable Entries: [\n+    MetadataDropInPlace,\n+    MetadataSize,\n+    MetadataAlign,\n+    Method(\n+        DefId(0:4 ~ vtable_diamond[4564]::A::foo_a),\n+        [\n+            S,\n+        ],\n+    ),\n+    Method(\n+        DefId(0:6 ~ vtable_diamond[4564]::B::foo_b),\n+        [\n+            S,\n+        ],\n+    ),\n+    Method(\n+        DefId(0:8 ~ vtable_diamond[4564]::C::foo_c),\n+        [\n+            S,\n+        ],\n+    ),\n+    TraitVPtr(\n+        Binder(\n+            C,\n+            [],\n+        ),\n+    ),\n+    Method(\n+        DefId(0:10 ~ vtable_diamond[4564]::D::foo_d),\n+        [\n+            S,\n+        ],\n+    ),\n+]\n+\n+error: Vtable Entries: [\n+    MetadataDropInPlace,\n+    MetadataSize,\n+    MetadataAlign,\n+    Method(\n+        DefId(0:4 ~ vtable_diamond[4564]::A::foo_a),\n+        [\n+            S,\n+        ],\n+    ),\n+    Method(\n+        DefId(0:8 ~ vtable_diamond[4564]::C::foo_c),\n+        [\n+            S,\n+        ],\n+    ),\n+]\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "d689ae96d41c72ab1c8775101ab6a08821e5ae5c", "filename": "src/test/ui/traits/vtable/vtable-multiple.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-multiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-multiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-multiple.rs?ref=ab171c5279df8ed2449ca995c3e5402abc3cf8e9", "patch": "@@ -0,0 +1,31 @@\n+// build-fail\n+//~^ error Vtable\n+//~^^ error Vtable\n+#![feature(rustc_attrs)]\n+\n+#[rustc_dump_vtable]\n+trait A {\n+    fn foo_a(&self) {}\n+}\n+\n+#[rustc_dump_vtable]\n+trait B {\n+    fn foo_b(&self) {}\n+}\n+\n+#[rustc_dump_vtable]\n+trait C: A + B {\n+    fn foo_c(&self) {}\n+}\n+\n+struct S;\n+\n+impl A for S {}\n+impl B for S {}\n+impl C for S {}\n+\n+fn foo(c: &dyn C) {}\n+\n+fn main() {\n+    foo(&S);\n+}"}, {"sha": "222fe9cb0e4922057187d16d80fdf0ff137af8d9", "filename": "src/test/ui/traits/vtable/vtable-multiple.stderr", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-multiple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab171c5279df8ed2449ca995c3e5402abc3cf8e9/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-multiple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fvtable%2Fvtable-multiple.stderr?ref=ab171c5279df8ed2449ca995c3e5402abc3cf8e9", "patch": "@@ -0,0 +1,44 @@\n+error: Vtable Entries: [\n+    MetadataDropInPlace,\n+    MetadataSize,\n+    MetadataAlign,\n+    Method(\n+        DefId(0:4 ~ vtable_multiple[5246]::A::foo_a),\n+        [\n+            S,\n+        ],\n+    ),\n+    Method(\n+        DefId(0:6 ~ vtable_multiple[5246]::B::foo_b),\n+        [\n+            S,\n+        ],\n+    ),\n+    TraitVPtr(\n+        Binder(\n+            B,\n+            [],\n+        ),\n+    ),\n+    Method(\n+        DefId(0:8 ~ vtable_multiple[5246]::C::foo_c),\n+        [\n+            S,\n+        ],\n+    ),\n+]\n+\n+error: Vtable Entries: [\n+    MetadataDropInPlace,\n+    MetadataSize,\n+    MetadataAlign,\n+    Method(\n+        DefId(0:6 ~ vtable_multiple[5246]::B::foo_b),\n+        [\n+            S,\n+        ],\n+    ),\n+]\n+\n+error: aborting due to 2 previous errors\n+"}]}