{"sha": "9f88f8ae4831a6f78781dd7c06181c8f3d21ad75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmODhmOGFlNDgzMWE2Zjc4NzgxZGQ3YzA2MTgxYzhmM2QyMWFkNzU=", "commit": {"author": {"name": "Matthew Piziak", "email": "matthew.piziak@gmail.com", "date": "2016-08-18T21:19:17Z"}, "committer": {"name": "Matthew Piziak", "email": "matthew.piziak@gmail.com", "date": "2016-08-22T21:04:18Z"}, "message": "replace `BitAnd` example with something more evocative of bitwise AND\n\nreformat method chain according to ubsan Rustic Style Guide\n\nhttps://ubsan.github.io/style/", "tree": {"sha": "87a7c577ac6e23146cc31f3021b5a449f5f5f738", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87a7c577ac6e23146cc31f3021b5a449f5f5f738"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f88f8ae4831a6f78781dd7c06181c8f3d21ad75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f88f8ae4831a6f78781dd7c06181c8f3d21ad75", "html_url": "https://github.com/rust-lang/rust/commit/9f88f8ae4831a6f78781dd7c06181c8f3d21ad75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f88f8ae4831a6f78781dd7c06181c8f3d21ad75/comments", "author": {"login": "matthew-piziak", "id": 6801001, "node_id": "MDQ6VXNlcjY4MDEwMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/6801001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-piziak", "html_url": "https://github.com/matthew-piziak", "followers_url": "https://api.github.com/users/matthew-piziak/followers", "following_url": "https://api.github.com/users/matthew-piziak/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-piziak/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-piziak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-piziak/subscriptions", "organizations_url": "https://api.github.com/users/matthew-piziak/orgs", "repos_url": "https://api.github.com/users/matthew-piziak/repos", "events_url": "https://api.github.com/users/matthew-piziak/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-piziak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthew-piziak", "id": 6801001, "node_id": "MDQ6VXNlcjY4MDEwMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/6801001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-piziak", "html_url": "https://github.com/matthew-piziak", "followers_url": "https://api.github.com/users/matthew-piziak/followers", "following_url": "https://api.github.com/users/matthew-piziak/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-piziak/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-piziak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-piziak/subscriptions", "organizations_url": "https://api.github.com/users/matthew-piziak/orgs", "repos_url": "https://api.github.com/users/matthew-piziak/repos", "events_url": "https://api.github.com/users/matthew-piziak/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-piziak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11f880588791930cb130071c2cb972fc3c3354ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/11f880588791930cb130071c2cb972fc3c3354ed", "html_url": "https://github.com/rust-lang/rust/commit/11f880588791930cb130071c2cb972fc3c3354ed"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "da90bdbde04fa1aa0f0441042e83c34b1d7508d6", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/9f88f8ae4831a6f78781dd7c06181c8f3d21ad75/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f88f8ae4831a6f78781dd7c06181c8f3d21ad75/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=9f88f8ae4831a6f78781dd7c06181c8f3d21ad75", "patch": "@@ -591,26 +591,41 @@ not_impl! { bool usize u8 u16 u32 u64 isize i8 i16 i32 i64 }\n ///\n /// # Examples\n ///\n-/// A trivial implementation of `BitAnd`. When `Foo & Foo` happens, it ends up\n-/// calling `bitand`, and therefore, `main` prints `Bitwise And-ing!`.\n+/// In this example, the `BitAnd` trait is implemented for a `BooleanVector`\n+/// struct.\n ///\n /// ```\n /// use std::ops::BitAnd;\n ///\n-/// struct Foo;\n-///\n-/// impl BitAnd for Foo {\n-///     type Output = Foo;\n-///\n-///     fn bitand(self, _rhs: Foo) -> Foo {\n-///         println!(\"Bitwise And-ing!\");\n-///         self\n+/// #[derive(Debug)]\n+/// struct BooleanVector {\n+///     value: Vec<bool>,\n+/// };\n+///\n+/// impl BitAnd for BooleanVector {\n+///     type Output = Self;\n+///\n+///     fn bitand(self, rhs: Self) -> Self {\n+///         BooleanVector {\n+///             value: self.value\n+///                 .iter()\n+///                 .zip(rhs.value.iter())\n+///                 .map(|(x, y)| *x && *y)\n+///                 .collect(),\n+///         }\n ///     }\n /// }\n ///\n-/// fn main() {\n-///     Foo & Foo;\n+/// impl PartialEq for BooleanVector {\n+///     fn eq(&self, other: &Self) -> bool {\n+///         self.value == other.value\n+///     }\n /// }\n+///\n+/// let bv1 = BooleanVector { value: vec![true, true, false, false] };\n+/// let bv2 = BooleanVector { value: vec![true, false, true, false] };\n+/// let expected = BooleanVector { value: vec![true, false, false, false] };\n+/// assert_eq!(bv1 & bv2, expected);\n /// ```\n #[lang = \"bitand\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}