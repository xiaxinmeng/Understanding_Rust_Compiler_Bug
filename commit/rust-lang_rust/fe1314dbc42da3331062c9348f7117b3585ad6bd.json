{"sha": "fe1314dbc42da3331062c9348f7117b3585ad6bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMTMxNGRiYzQyZGEzMzMxMDYyYzkzNDhmNzExN2IzNTg1YWQ2YmQ=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-02-04T01:28:11Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-02-04T01:35:56Z"}, "message": "fix couple of perf related clipyp warnings\n\nlibrustc: don't clone a type that is copy\nlibrustc_incremental: use faster vector initialization\nlibrustc_typeck: don't clone a type that is copy\nlibrustdoc: don't create a vector where a slice will do", "tree": {"sha": "3d3ca392f5a190b0335bbd22e4e32fb3b1eb6c6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d3ca392f5a190b0335bbd22e4e32fb3b1eb6c6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe1314dbc42da3331062c9348f7117b3585ad6bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe1314dbc42da3331062c9348f7117b3585ad6bd", "html_url": "https://github.com/rust-lang/rust/commit/fe1314dbc42da3331062c9348f7117b3585ad6bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe1314dbc42da3331062c9348f7117b3585ad6bd/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8417d68de5e063426ab6bb7f383df6117d1beeed", "url": "https://api.github.com/repos/rust-lang/rust/commits/8417d68de5e063426ab6bb7f383df6117d1beeed", "html_url": "https://github.com/rust-lang/rust/commit/8417d68de5e063426ab6bb7f383df6117d1beeed"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "9cfd64d638234682822ea353d840cf1a6e36d437", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1314dbc42da3331062c9348f7117b3585ad6bd/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1314dbc42da3331062c9348f7117b3585ad6bd/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=fe1314dbc42da3331062c9348f7117b3585ad6bd", "patch": "@@ -1344,7 +1344,7 @@ pub trait ToPredicate<'tcx> {\n impl<'tcx> ToPredicate<'tcx> for ConstnessAnd<TraitRef<'tcx>> {\n     fn to_predicate(&self) -> Predicate<'tcx> {\n         ty::Predicate::Trait(\n-            ty::Binder::dummy(ty::TraitPredicate { trait_ref: self.value.clone() }),\n+            ty::Binder::dummy(ty::TraitPredicate { trait_ref: self.value }),\n             self.constness,\n         )\n     }"}, {"sha": "5c72b049d97e98647e56efe307c7433eb0085b85", "filename": "src/librustc_incremental/persist/file_format.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe1314dbc42da3331062c9348f7117b3585ad6bd/src%2Flibrustc_incremental%2Fpersist%2Ffile_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1314dbc42da3331062c9348f7117b3585ad6bd/src%2Flibrustc_incremental%2Fpersist%2Ffile_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Ffile_format.rs?ref=fe1314dbc42da3331062c9348f7117b3585ad6bd", "patch": "@@ -90,8 +90,7 @@ pub fn read_file(\n         let mut rustc_version_str_len = [0u8; 1];\n         file.read_exact(&mut rustc_version_str_len)?;\n         let rustc_version_str_len = rustc_version_str_len[0] as usize;\n-        let mut buffer = Vec::with_capacity(rustc_version_str_len);\n-        buffer.resize(rustc_version_str_len, 0);\n+        let mut buffer = vec![0; rustc_version_str_len];\n         file.read_exact(&mut buffer)?;\n \n         if buffer != rustc_version().as_bytes() {"}, {"sha": "231aed48fb6be7ff580c1e5c895c28275b04d77b", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe1314dbc42da3331062c9348f7117b3585ad6bd/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1314dbc42da3331062c9348f7117b3585ad6bd/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=fe1314dbc42da3331062c9348f7117b3585ad6bd", "patch": "@@ -1438,10 +1438,8 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n \n         // Expand trait aliases recursively and check that only one regular (non-auto) trait\n         // is used and no 'maybe' bounds are used.\n-        let expanded_traits = traits::expand_trait_aliases(\n-            tcx,\n-            bounds.trait_bounds.iter().map(|&(a, b, _)| (a.clone(), b)),\n-        );\n+        let expanded_traits =\n+            traits::expand_trait_aliases(tcx, bounds.trait_bounds.iter().map(|&(a, b, _)| (a, b)));\n         let (mut auto_traits, regular_traits): (Vec<_>, Vec<_>) =\n             expanded_traits.partition(|i| tcx.trait_is_auto(i.trait_ref().def_id()));\n         if regular_traits.len() > 1 {"}, {"sha": "a16f7248baac7378eb76f2272e491b5aed43b895", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fe1314dbc42da3331062c9348f7117b3585ad6bd/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1314dbc42da3331062c9348f7117b3585ad6bd/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=fe1314dbc42da3331062c9348f7117b3585ad6bd", "patch": "@@ -3629,14 +3629,7 @@ fn render_impl(\n                 for it in &i.inner_impl().items {\n                     if let clean::TypedefItem(ref tydef, _) = it.inner {\n                         write!(w, \"<span class=\\\"where fmt-newline\\\">  \");\n-                        assoc_type(\n-                            w,\n-                            it,\n-                            &vec![],\n-                            Some(&tydef.type_),\n-                            AssocItemLink::Anchor(None),\n-                            \"\",\n-                        );\n+                        assoc_type(w, it, &[], Some(&tydef.type_), AssocItemLink::Anchor(None), \"\");\n                         write!(w, \";</span>\");\n                     }\n                 }"}]}