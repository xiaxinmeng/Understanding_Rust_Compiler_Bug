{"sha": "383e3fd13b99827b5dbb107da7433bd0a70dea80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4M2UzZmQxM2I5OTgyN2I1ZGJiMTA3ZGE3NDMzYmQwYTcwZGVhODA=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-01-29T15:59:47Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-01-29T21:31:46Z"}, "message": "use a more efficient vtable representation\n\n[TyDesc, ... methods] -> [destructor, ... methods]", "tree": {"sha": "8e15df7864beaa87c35a327783100c63a8ff09af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e15df7864beaa87c35a327783100c63a8ff09af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/383e3fd13b99827b5dbb107da7433bd0a70dea80", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/383e3fd13b99827b5dbb107da7433bd0a70dea80", "html_url": "https://github.com/rust-lang/rust/commit/383e3fd13b99827b5dbb107da7433bd0a70dea80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/383e3fd13b99827b5dbb107da7433bd0a70dea80/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50bee30459974d4ac9b5be085d8b797c6d0e4995", "url": "https://api.github.com/repos/rust-lang/rust/commits/50bee30459974d4ac9b5be085d8b797c6d0e4995", "html_url": "https://github.com/rust-lang/rust/commit/50bee30459974d4ac9b5be085d8b797c6d0e4995"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "ab77d105e5feaf85c51a8d04dfa7131f3d582278", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/383e3fd13b99827b5dbb107da7433bd0a70dea80/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/383e3fd13b99827b5dbb107da7433bd0a70dea80/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=383e3fd13b99827b5dbb107da7433bd0a70dea80", "patch": "@@ -367,17 +367,9 @@ fn make_drop_glue<'a>(bcx: &'a Block<'a>, v0: ValueRef, t: ty::t) -> &'a Block<'\n             let lluniquevalue = GEPi(bcx, v0, [0, abi::trt_field_box]);\n             // Only drop the value when it is non-null\n             with_cond(bcx, IsNotNull(bcx, Load(bcx, lluniquevalue)), |bcx| {\n-                let llvtable = Load(bcx, GEPi(bcx, v0, [0, abi::trt_field_vtable]));\n-\n-                // Cast the vtable to a pointer to a pointer to a tydesc.\n-                let llvtable = PointerCast(bcx, llvtable,\n-                                           ccx.tydesc_type.ptr_to().ptr_to());\n-                let lltydesc = Load(bcx, llvtable);\n-                call_tydesc_glue_full(bcx,\n-                                      lluniquevalue,\n-                                      lltydesc,\n-                                      abi::tydesc_field_drop_glue,\n-                                      None);\n+                let lldtor_ptr = Load(bcx, GEPi(bcx, v0, [0, abi::trt_field_vtable]));\n+                let lldtor = Load(bcx, lldtor_ptr);\n+                Call(bcx, lldtor, [PointerCast(bcx, lluniquevalue, Type::i8p())], []);\n                 bcx\n             })\n         }"}, {"sha": "09bfa36ddc172445e3003ad3c3cec425b8ff35a5", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/383e3fd13b99827b5dbb107da7433bd0a70dea80/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/383e3fd13b99827b5dbb107da7433bd0a70dea80/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=383e3fd13b99827b5dbb107da7433bd0a70dea80", "patch": "@@ -498,7 +498,7 @@ pub fn make_vtable(ccx: &CrateContext,\n     unsafe {\n         let _icx = push_ctxt(\"meth::make_vtable\");\n \n-        let mut components = ~[ tydesc.tydesc ];\n+        let mut components = ~[tydesc.drop_glue.get().unwrap()];\n         for &ptr in ptrs.iter() {\n             components.push(ptr)\n         }"}, {"sha": "39a99ef995012f9d9cceb7ef24cb4f484ac982f5", "filename": "src/librustc/middle/trans/type_.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/383e3fd13b99827b5dbb107da7433bd0a70dea80/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/383e3fd13b99827b5dbb107da7433bd0a70dea80/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs?ref=383e3fd13b99827b5dbb107da7433bd0a70dea80", "patch": "@@ -180,7 +180,7 @@ impl Type {\n     }\n \n     pub fn vtable() -> Type {\n-        Type::array(&Type::i8().ptr_to(), 1)\n+        Type::array(&Type::i8p().ptr_to(), 1)\n     }\n \n     pub fn generic_glue_fn(cx: &CrateContext) -> Type {\n@@ -246,13 +246,13 @@ impl Type {\n     }\n \n     pub fn opaque_trait(ctx: &CrateContext, store: ty::TraitStore) -> Type {\n-        let tydesc_ptr = ctx.tydesc_type.ptr_to();\n+        let vtable = Type::glue_fn(Type::i8p()).ptr_to().ptr_to();\n         let box_ty = match store {\n             ty::BoxTraitStore => Type::at_box(ctx, Type::i8()),\n             ty::UniqTraitStore => Type::i8(),\n             ty::RegionTraitStore(..) => Type::i8()\n         };\n-        Type::struct_([tydesc_ptr, box_ty.ptr_to()], false)\n+        Type::struct_([vtable, box_ty.ptr_to()], false)\n     }\n \n     pub fn kind(&self) -> TypeKind {"}]}