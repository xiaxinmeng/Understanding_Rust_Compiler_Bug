{"sha": "4757a931cd69f57ab3e1d823ffa44b18c37e1223", "node_id": "C_kwDOAAsO6NoAKDQ3NTdhOTMxY2Q2OWY1N2FiM2UxZDgyM2ZmYTQ0YjE4YzM3ZTEyMjM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-31T06:00:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-31T06:00:47Z"}, "message": "Rollup merge of #93494 - solid-rs:fix-kmc-solid-spawned-task-priority, r=Mark-Simulacrum\n\nkmc-solid: Inherit the calling task's base priority in `Thread::new`\n\nThis PR fixes the initial priority calculation of spawned threads on the [`*-kmc-solid_*`](https://doc.rust-lang.org/nightly/rustc/platform-support/kmc-solid.html) Tier 3 targets.\n\nFixes a spawned task (an RTOS object on top of which threads are implemented for this target; unrelated to async tasks) getting an unexpectedly higher priority if it's spawned by a task whose priority is temporarily boosted by a priority-protection mutex.", "tree": {"sha": "a4c00cca430aac6bb465c6ea43c11a123f86d98a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4c00cca430aac6bb465c6ea43c11a123f86d98a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4757a931cd69f57ab3e1d823ffa44b18c37e1223", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh93sPCRBK7hj4Ov3rIwAAqVUIAGEbnYkWA5VZZ3fS0iDUzz3J\nZBpimu1f9rLp89a+v+vUjsOwWGnlWuIFJ82p5F6WSvlV1GM8BEqckwCe1xvYIiLm\nGGFDE/8xAplRK8QUXK7WnTU+5GNf3M6V+jHIkXWrzcYy9gAYVWAgwaiep9ut8UVe\nCJOCv6ZwZbomvGojwowHUh7uaP4s2hrLPARi14J/DcRMIyYbU/AuWRuHpkIKIlgR\n7Jt2JrWPscrQyohH64/H+fkEiZ5BAdlXlSYeebKhkIt+GdAZhRq8j4ph6k+SivKj\ng8UIgyq4pM+m7XqJ7HQVKmsl2Mp5taZ5RbkJtmEPmAowGsUyif0MSsXKOljazAk=\n=vN+8\n-----END PGP SIGNATURE-----\n", "payload": "tree a4c00cca430aac6bb465c6ea43c11a123f86d98a\nparent 24737bd1abaf5955905cc153ec8ec4bdef074d3f\nparent 09233ce3c0fbcf83abedd7525faa324a2fa2c21c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1643608847 +0100\ncommitter GitHub <noreply@github.com> 1643608847 +0100\n\nRollup merge of #93494 - solid-rs:fix-kmc-solid-spawned-task-priority, r=Mark-Simulacrum\n\nkmc-solid: Inherit the calling task's base priority in `Thread::new`\n\nThis PR fixes the initial priority calculation of spawned threads on the [`*-kmc-solid_*`](https://doc.rust-lang.org/nightly/rustc/platform-support/kmc-solid.html) Tier 3 targets.\n\nFixes a spawned task (an RTOS object on top of which threads are implemented for this target; unrelated to async tasks) getting an unexpectedly higher priority if it's spawned by a task whose priority is temporarily boosted by a priority-protection mutex.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4757a931cd69f57ab3e1d823ffa44b18c37e1223", "html_url": "https://github.com/rust-lang/rust/commit/4757a931cd69f57ab3e1d823ffa44b18c37e1223", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4757a931cd69f57ab3e1d823ffa44b18c37e1223/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24737bd1abaf5955905cc153ec8ec4bdef074d3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/24737bd1abaf5955905cc153ec8ec4bdef074d3f", "html_url": "https://github.com/rust-lang/rust/commit/24737bd1abaf5955905cc153ec8ec4bdef074d3f"}, {"sha": "09233ce3c0fbcf83abedd7525faa324a2fa2c21c", "url": "https://api.github.com/repos/rust-lang/rust/commits/09233ce3c0fbcf83abedd7525faa324a2fa2c21c", "html_url": "https://github.com/rust-lang/rust/commit/09233ce3c0fbcf83abedd7525faa324a2fa2c21c"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "a8ecc1ada4ad4736e7927765fdce225116a02f3b", "filename": "library/std/src/sys/itron/thread.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4757a931cd69f57ab3e1d823ffa44b18c37e1223/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4757a931cd69f57ab3e1d823ffa44b18c37e1223/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fthread.rs?ref=4757a931cd69f57ab3e1d823ffa44b18c37e1223", "patch": "@@ -84,10 +84,6 @@ impl Thread {\n     ///\n     /// See `thread::Builder::spawn_unchecked` for safety requirements.\n     pub unsafe fn new(stack: usize, p: Box<dyn FnOnce()>) -> io::Result<Thread> {\n-        // Inherit the current task's priority\n-        let current_task = task::try_current_task_id().map_err(|e| e.as_io_error())?;\n-        let priority = task::try_task_priority(current_task).map_err(|e| e.as_io_error())?;\n-\n         let inner = Box::new(ThreadInner {\n             start: UnsafeCell::new(ManuallyDrop::new(p)),\n             lifecycle: AtomicUsize::new(LIFECYCLE_INIT),\n@@ -175,7 +171,8 @@ impl Thread {\n                 exinf: inner_ptr as abi::EXINF,\n                 // The entry point\n                 task: Some(trampoline),\n-                itskpri: priority,\n+                // Inherit the calling task's base priority\n+                itskpri: abi::TPRI_SELF,\n                 stksz: stack,\n                 // Let the kernel allocate the stack,\n                 stk: crate::ptr::null_mut(),"}]}