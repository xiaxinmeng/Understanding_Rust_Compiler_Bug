{"sha": "6a14dc7fd45dc620f3b873f939cff4205585342d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMTRkYzdmZDQ1ZGM2MjBmM2I4NzNmOTM5Y2ZmNDIwNTU4NTM0MmQ=", "commit": {"author": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2016-11-02T00:48:32Z"}, "committer": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2016-11-02T00:48:32Z"}, "message": "Remove false positives from `get_unwrap` lint\n\nHashMap and BTreeMap don't implement `IndexMut`, so we shouldn't lint\nfor use of `get_mut().unwrap()` for those types.", "tree": {"sha": "d3dfbbf36dcaed66b82b1aebe52ab730fd38af77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3dfbbf36dcaed66b82b1aebe52ab730fd38af77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a14dc7fd45dc620f3b873f939cff4205585342d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a14dc7fd45dc620f3b873f939cff4205585342d", "html_url": "https://github.com/rust-lang/rust/commit/6a14dc7fd45dc620f3b873f939cff4205585342d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a14dc7fd45dc620f3b873f939cff4205585342d/comments", "author": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e0d182d1dce21b370abb4cb67bc521ecca0eb00", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e0d182d1dce21b370abb4cb67bc521ecca0eb00", "html_url": "https://github.com/rust-lang/rust/commit/4e0d182d1dce21b370abb4cb67bc521ecca0eb00"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "32d230bd73d5884e69ba59f05aa73da179bd1a04", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6a14dc7fd45dc620f3b873f939cff4205585342d/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a14dc7fd45dc620f3b873f939cff4205585342d/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=6a14dc7fd45dc620f3b873f939cff4205585342d", "patch": "@@ -854,16 +854,18 @@ fn lint_iter_nth(cx: &LateContext, expr: &hir::Expr, iter_args: &MethodArgs, is_\n }\n \n fn lint_get_unwrap(cx: &LateContext, expr: &hir::Expr, get_args: &MethodArgs, is_mut: bool) {\n+    // Note: we don't want to lint `get_mut().unwrap` for HashMap or BTreeMap,\n+    // because they do not implement `IndexMut`\n     let expr_ty = cx.tcx.expr_ty(&get_args[0]);\n     let caller_type = if derefs_to_slice(cx, &get_args[0], expr_ty).is_some() {\n         \"slice\"\n     } else if match_type(cx, expr_ty, &paths::VEC) {\n         \"Vec\"\n     } else if match_type(cx, expr_ty, &paths::VEC_DEQUE) {\n         \"VecDeque\"\n-    } else if match_type(cx, expr_ty, &paths::HASHMAP) {\n+    } else if !is_mut && match_type(cx, expr_ty, &paths::HASHMAP) {\n         \"HashMap\"\n-    } else if match_type(cx, expr_ty, &paths::BTREEMAP) {\n+    } else if !is_mut && match_type(cx, expr_ty, &paths::BTREEMAP) {\n         \"BTreeMap\"\n     } else {\n         return; // caller is not a type that we want to lint"}, {"sha": "9d430e7ac7ca87a7281a6f89c6cc25ab340bc7a8", "filename": "tests/compile-fail/methods.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6a14dc7fd45dc620f3b873f939cff4205585342d/tests%2Fcompile-fail%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a14dc7fd45dc620f3b873f939cff4205585342d/tests%2Fcompile-fail%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmethods.rs?ref=6a14dc7fd45dc620f3b873f939cff4205585342d", "patch": "@@ -445,15 +445,10 @@ fn get_unwrap() {\n         //~^ERROR called `.get_mut().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n         //~|HELP try this\n         //~|SUGGESTION &mut some_vecdeque[0]\n+\n+        // Check false positives\n         *some_hashmap.get_mut(&1).unwrap() = 'b';\n-        //~^ERROR called `.get_mut().unwrap()` on a HashMap. Using `[]` is more clear and more concise\n-        //~|HELP try this\n-        //~|SUGGESTION &mut some_hashmap[&1]\n         *some_btreemap.get_mut(&1).unwrap() = 'b';\n-        //~^ERROR called `.get_mut().unwrap()` on a BTreeMap. Using `[]` is more clear and more concise\n-        //~|HELP try this\n-        //~|SUGGESTION &mut some_btreemap[&1]\n-\n         *false_positive.get_mut(0).unwrap() = 1;\n     }\n }"}]}