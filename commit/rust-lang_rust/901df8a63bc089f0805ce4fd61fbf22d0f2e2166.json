{"sha": "901df8a63bc089f0805ce4fd61fbf22d0f2e2166", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwMWRmOGE2M2JjMDg5ZjA4MDVjZTRmZDYxZmJmMjJkMGYyZTIxNjY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T20:14:13Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:02:00Z"}, "message": "libsyntax: Remove unused `MultiRenamer`", "tree": {"sha": "45e0975cc31f08eb46f4449f8579f0b5fcef3f04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45e0975cc31f08eb46f4449f8579f0b5fcef3f04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/901df8a63bc089f0805ce4fd61fbf22d0f2e2166", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/901df8a63bc089f0805ce4fd61fbf22d0f2e2166", "html_url": "https://github.com/rust-lang/rust/commit/901df8a63bc089f0805ce4fd61fbf22d0f2e2166", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/901df8a63bc089f0805ce4fd61fbf22d0f2e2166/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d29163e9c12a56d5401325f2d0d51c3e825ff72", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d29163e9c12a56d5401325f2d0d51c3e825ff72", "html_url": "https://github.com/rust-lang/rust/commit/1d29163e9c12a56d5401325f2d0d51c3e825ff72"}], "stats": {"total": 20, "additions": 3, "deletions": 17}, "files": [{"sha": "eaf18a454a0bbb2e93728783e62de7bc0811a44a", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/901df8a63bc089f0805ce4fd61fbf22d0f2e2166/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/901df8a63bc089f0805ce4fd61fbf22d0f2e2166/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=901df8a63bc089f0805ce4fd61fbf22d0f2e2166", "patch": "@@ -493,13 +493,14 @@ fn expand_non_macro_stmt(s: &Stmt, fld: &mut MacroExpander)\n             let mut name_finder = new_name_finder(~[]);\n             name_finder.visit_pat(expanded_pat,());\n             // generate fresh names, push them to a new pending list\n-            let new_pending_renames = @mut ~[];\n+            let mut new_pending_renames = ~[];\n             for ident in name_finder.ident_accumulator.iter() {\n                 let new_name = fresh_name(ident);\n                 new_pending_renames.push((*ident,new_name));\n             }\n             let rewritten_pat = {\n-                let mut rename_fld = renames_to_fold(new_pending_renames);\n+                let mut rename_fld =\n+                    renames_to_fold(&mut new_pending_renames);\n                 // rewrite the pattern using the new names (the old ones\n                 // have already been applied):\n                 rename_fld.fold_pat(expanded_pat)\n@@ -981,21 +982,6 @@ impl CtxtFn for Renamer {\n     }\n }\n \n-// a renamer that performs a whole bunch of renames\n-pub struct MultiRenamer {\n-    renames : @mut ~[(ast::Ident,ast::Name)]\n-}\n-\n-impl CtxtFn for MultiRenamer {\n-    fn f(&self, starting_ctxt : ast::SyntaxContext) -> ast::SyntaxContext {\n-        // the individual elements are memoized... it would\n-        // also be possible to memoize on the whole list at once.\n-        self.renames.iter().fold(starting_ctxt,|ctxt,&(from,to)| {\n-            new_rename(from,to,ctxt)\n-        })\n-    }\n-}\n-\n // a marker adds the given mark to the syntax context\n pub struct Marker { mark : Mrk }\n "}]}