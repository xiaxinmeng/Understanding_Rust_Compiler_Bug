{"sha": "16ca0b9f6335db824e44629be1cafb6e3fcc4628", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2Y2EwYjlmNjMzNWRiODI0ZTQ0NjI5YmUxY2FmYjZlM2ZjYzQ2Mjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-12T00:44:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-12T00:44:24Z"}, "message": "Auto merge of #58180 - davidtwco:issue-58053, r=estebank\n\nFix span for closure return type when annotated.\n\nFixes #58053.\n\nThis PR adjusts the span used to label closure return types so that\nif the user specifies the return type, i.e. `|_| -> X {}` instead of\n`|_| {}`, we correctly highlight all of it and not just the last\ncharacter.\n\nr? @pnkfelix", "tree": {"sha": "a1e6d92f2ff1346a68e89c5ec653161728ca30ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1e6d92f2ff1346a68e89c5ec653161728ca30ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16ca0b9f6335db824e44629be1cafb6e3fcc4628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16ca0b9f6335db824e44629be1cafb6e3fcc4628", "html_url": "https://github.com/rust-lang/rust/commit/16ca0b9f6335db824e44629be1cafb6e3fcc4628", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16ca0b9f6335db824e44629be1cafb6e3fcc4628/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57d7cfc3cf50f0c427ad3043ff09eaef20671320", "url": "https://api.github.com/repos/rust-lang/rust/commits/57d7cfc3cf50f0c427ad3043ff09eaef20671320", "html_url": "https://github.com/rust-lang/rust/commit/57d7cfc3cf50f0c427ad3043ff09eaef20671320"}, {"sha": "b377d0b14ce141b8ce6c9bb22c22b1fb12d8232f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b377d0b14ce141b8ce6c9bb22c22b1fb12d8232f", "html_url": "https://github.com/rust-lang/rust/commit/b377d0b14ce141b8ce6c9bb22c22b1fb12d8232f"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "3bb22d326f4e58b59c4905b1ffe32f9b90d29131", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/region_name.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/16ca0b9f6335db824e44629be1cafb6e3fcc4628/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16ca0b9f6335db824e44629be1cafb6e3fcc4628/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs?ref=16ca0b9f6335db824e44629be1cafb6e3fcc4628", "patch": "@@ -681,10 +681,13 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n \n         let (return_span, mir_description) = match tcx.hir().get(mir_node_id) {\n             hir::Node::Expr(hir::Expr {\n-                node: hir::ExprKind::Closure(_, _, _, span, gen_move),\n+                node: hir::ExprKind::Closure(_, return_ty, _, span, gen_move),\n                 ..\n             }) => (\n-                tcx.sess.source_map().end_point(*span),\n+                match return_ty.output {\n+                    hir::FunctionRetTy::DefaultReturn(_) => tcx.sess.source_map().end_point(*span),\n+                    hir::FunctionRetTy::Return(_) => return_ty.output.span(),\n+                },\n                 if gen_move.is_some() {\n                     \" of generator\"\n                 } else {"}, {"sha": "d4338905ed2df6ee2fdc6c07d858a06d96bebecf", "filename": "src/test/ui/nll/issue-58053.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/16ca0b9f6335db824e44629be1cafb6e3fcc4628/src%2Ftest%2Fui%2Fnll%2Fissue-58053.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16ca0b9f6335db824e44629be1cafb6e3fcc4628/src%2Ftest%2Fui%2Fnll%2Fissue-58053.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-58053.rs?ref=16ca0b9f6335db824e44629be1cafb6e3fcc4628", "patch": "@@ -0,0 +1,14 @@\n+#![allow(warnings)]\n+#![feature(nll)]\n+\n+fn main() {\n+    let i = &3;\n+\n+    let f = |x: &i32| -> &i32 { x };\n+    //~^ ERROR lifetime may not live long enough\n+    let j = f(i);\n+\n+    let g = |x: &i32| { x };\n+    //~^ ERROR lifetime may not live long enough\n+    let k = g(i);\n+}"}, {"sha": "9048983318b361a97f5c76f5b1587b388828a419", "filename": "src/test/ui/nll/issue-58053.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/16ca0b9f6335db824e44629be1cafb6e3fcc4628/src%2Ftest%2Fui%2Fnll%2Fissue-58053.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16ca0b9f6335db824e44629be1cafb6e3fcc4628/src%2Ftest%2Fui%2Fnll%2Fissue-58053.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-58053.stderr?ref=16ca0b9f6335db824e44629be1cafb6e3fcc4628", "patch": "@@ -0,0 +1,20 @@\n+error: lifetime may not live long enough\n+  --> $DIR/issue-58053.rs:7:33\n+   |\n+LL |     let f = |x: &i32| -> &i32 { x };\n+   |                 -        ----   ^ returning this value requires that `'1` must outlive `'2`\n+   |                 |        |\n+   |                 |        return type of closure is &'2 i32\n+   |                 let's call the lifetime of this reference `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/issue-58053.rs:11:25\n+   |\n+LL |     let g = |x: &i32| { x };\n+   |                 -   -   ^ returning this value requires that `'1` must outlive `'2`\n+   |                 |   |\n+   |                 |   return type of closure is &'2 i32\n+   |                 let's call the lifetime of this reference `'1`\n+\n+error: aborting due to 2 previous errors\n+"}]}