{"sha": "b1752f616f532c068a19e8b690c31b5411be89cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNzUyZjYxNmY1MzJjMDY4YTE5ZThiNjkwYzMxYjU0MTFiZTg5Y2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-04T11:49:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-04T11:49:23Z"}, "message": "Auto merge of #7319 - m-ou-se:cfg-not-const, r=camsteffen\n\nDon't warn about `cfg!(..)` as a constant in assertions\n\nThis makes clippy understand that `cfg!(..)` is not just a hardcoded `true` or `false` (even though it expands to one of those).\n\ncc `@khyperia`\n\nchangelog: Don't treat `cfg!(..)` as a constant in [`assertions-on-constants`]", "tree": {"sha": "f1073b9d73e1bd72a62ff7bf8dacc3f5ae3e3676", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1073b9d73e1bd72a62ff7bf8dacc3f5ae3e3676"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1752f616f532c068a19e8b690c31b5411be89cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1752f616f532c068a19e8b690c31b5411be89cd", "html_url": "https://github.com/rust-lang/rust/commit/b1752f616f532c068a19e8b690c31b5411be89cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1752f616f532c068a19e8b690c31b5411be89cd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f746a1c2ae130ef84704c941b962075af6693ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f746a1c2ae130ef84704c941b962075af6693ac", "html_url": "https://github.com/rust-lang/rust/commit/5f746a1c2ae130ef84704c941b962075af6693ac"}, {"sha": "38ab1a616631944e8cef21c9441e2ef2ffa3a594", "url": "https://api.github.com/repos/rust-lang/rust/commits/38ab1a616631944e8cef21c9441e2ef2ffa3a594", "html_url": "https://github.com/rust-lang/rust/commit/38ab1a616631944e8cef21c9441e2ef2ffa3a594"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "15c27d1a996d74e97abfc58d4f9752405b8f727a", "filename": "clippy_utils/src/consts.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b1752f616f532c068a19e8b690c31b5411be89cd/clippy_utils%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1752f616f532c068a19e8b690c31b5411be89cd/clippy_utils%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fconsts.rs?ref=b1752f616f532c068a19e8b690c31b5411be89cd", "patch": "@@ -1,6 +1,6 @@\n #![allow(clippy::float_cmp)]\n \n-use crate::{clip, sext, unsext};\n+use crate::{clip, is_direct_expn_of, sext, unsext};\n use if_chain::if_chain;\n use rustc_ast::ast::{self, LitFloatType, LitKind};\n use rustc_data_structures::sync::Lrc;\n@@ -230,7 +230,13 @@ impl<'a, 'tcx> ConstEvalLateContext<'a, 'tcx> {\n         match e.kind {\n             ExprKind::Path(ref qpath) => self.fetch_path(qpath, e.hir_id, self.typeck_results.expr_ty(e)),\n             ExprKind::Block(block, _) => self.block(block),\n-            ExprKind::Lit(ref lit) => Some(lit_to_constant(&lit.node, self.typeck_results.expr_ty_opt(e))),\n+            ExprKind::Lit(ref lit) => {\n+                if is_direct_expn_of(e.span, \"cfg\").is_some() {\n+                    None\n+                } else {\n+                    Some(lit_to_constant(&lit.node, self.typeck_results.expr_ty_opt(e)))\n+                }\n+            },\n             ExprKind::Array(vec) => self.multi(vec).map(Constant::Vec),\n             ExprKind::Tup(tup) => self.multi(tup).map(Constant::Tuple),\n             ExprKind::Repeat(value, _) => {"}, {"sha": "6617ca183a8cb2cbd37c0fa60c3b4fe1a1eb23cc", "filename": "tests/ui/assertions_on_constants.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b1752f616f532c068a19e8b690c31b5411be89cd/tests%2Fui%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1752f616f532c068a19e8b690c31b5411be89cd/tests%2Fui%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_constants.rs?ref=b1752f616f532c068a19e8b690c31b5411be89cd", "patch": "@@ -28,4 +28,7 @@ fn main() {\n     debug_assert!(false); // #3948\n     assert_const!(3);\n     assert_const!(-1);\n+\n+    // Don't lint on this:\n+    assert!(cfg!(feature = \"hey\") || cfg!(not(feature = \"asdf\")));\n }"}]}