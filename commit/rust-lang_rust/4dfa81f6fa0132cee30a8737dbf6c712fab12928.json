{"sha": "4dfa81f6fa0132cee30a8737dbf6c712fab12928", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZmE4MWY2ZmEwMTMyY2VlMzBhODczN2RiZjZjNzEyZmFiMTI5Mjg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-23T20:30:14Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-03-04T20:05:52Z"}, "message": "Extract out the `filter_to_traits` functionality", "tree": {"sha": "7ce8245dfc91bf973837a8b7031d5786409fd4dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ce8245dfc91bf973837a8b7031d5786409fd4dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dfa81f6fa0132cee30a8737dbf6c712fab12928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dfa81f6fa0132cee30a8737dbf6c712fab12928", "html_url": "https://github.com/rust-lang/rust/commit/4dfa81f6fa0132cee30a8737dbf6c712fab12928", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dfa81f6fa0132cee30a8737dbf6c712fab12928/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba1b5ee1d19de24d311335d3735e5100b47c2cf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1b5ee1d19de24d311335d3735e5100b47c2cf6", "html_url": "https://github.com/rust-lang/rust/commit/ba1b5ee1d19de24d311335d3735e5100b47c2cf6"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "fdd8d2ee97727961a44af794c11774eb42307908", "filename": "src/librustc/middle/traits/util.rs", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4dfa81f6fa0132cee30a8737dbf6c712fab12928/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dfa81f6fa0132cee30a8737dbf6c712fab12928/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs?ref=4dfa81f6fa0132cee30a8737dbf6c712fab12928", "patch": "@@ -110,8 +110,8 @@ pub fn elaborate_predicates<'cx, 'tcx>(\n }\n \n impl<'cx, 'tcx> Elaborator<'cx, 'tcx> {\n-    pub fn filter_to_traits(self) -> Supertraits<'cx, 'tcx> {\n-        Supertraits { elaborator: self }\n+    pub fn filter_to_traits(self) -> JustTraits<Elaborator<'cx, 'tcx>> {\n+        JustTraits::new(self)\n     }\n \n     fn push(&mut self, predicate: &ty::Predicate<'tcx>) {\n@@ -185,11 +185,7 @@ impl<'cx, 'tcx> Iterator for Elaborator<'cx, 'tcx> {\n // Supertrait iterator\n ///////////////////////////////////////////////////////////////////////////\n \n-/// A filter around the `Elaborator` that just yields up supertrait references,\n-/// not other kinds of predicates.\n-pub struct Supertraits<'cx, 'tcx:'cx> {\n-    elaborator: Elaborator<'cx, 'tcx>,\n-}\n+pub type Supertraits<'cx, 'tcx> = JustTraits<Elaborator<'cx, 'tcx>>;\n \n pub fn supertraits<'cx, 'tcx>(tcx: &'cx ty::ctxt<'tcx>,\n                               trait_ref: ty::PolyTraitRef<'tcx>)\n@@ -205,12 +201,28 @@ pub fn transitive_bounds<'cx, 'tcx>(tcx: &'cx ty::ctxt<'tcx>,\n     elaborate_trait_refs(tcx, bounds).filter_to_traits()\n }\n \n-impl<'cx, 'tcx> Iterator for Supertraits<'cx, 'tcx> {\n+///////////////////////////////////////////////////////////////////////////\n+// Other\n+///////////////////////////////////////////////////////////////////////////\n+\n+/// A filter around an iterator of predicates that makes it yield up\n+/// just trait references.\n+pub struct JustTraits<I> {\n+    base_iterator: I\n+}\n+\n+impl<I> JustTraits<I> {\n+    fn new(base: I) -> JustTraits<I> {\n+        JustTraits { base_iterator: base }\n+    }\n+}\n+\n+impl<'tcx,I:Iterator<Item=ty::Predicate<'tcx>>> Iterator for JustTraits<I> {\n     type Item = ty::PolyTraitRef<'tcx>;\n \n     fn next(&mut self) -> Option<ty::PolyTraitRef<'tcx>> {\n         loop {\n-            match self.elaborator.next() {\n+            match self.base_iterator.next() {\n                 None => {\n                     return None;\n                 }\n@@ -224,6 +236,7 @@ impl<'cx, 'tcx> Iterator for Supertraits<'cx, 'tcx> {\n     }\n }\n \n+\n ///////////////////////////////////////////////////////////////////////////\n // Other\n ///////////////////////////////////////////////////////////////////////////"}]}