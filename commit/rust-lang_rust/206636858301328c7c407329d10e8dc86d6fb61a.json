{"sha": "206636858301328c7c407329d10e8dc86d6fb61a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNjYzNjg1ODMwMTMyOGM3YzQwNzMyOWQxMGU4ZGM4NmQ2ZmI2MWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-11T23:52:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-11T23:52:52Z"}, "message": "Auto merge of #3758 - phansch:document_macro, r=flip1995\n\nDocument `declare_clippy_lint` macro\n\nSplit up from my work on updating CONTRIBUTING.md, which is slowly\nmaking progress.\n\ncc #2666", "tree": {"sha": "9fd88eb28ca55b097827e4649f2daacaf3e2721e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fd88eb28ca55b097827e4649f2daacaf3e2721e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/206636858301328c7c407329d10e8dc86d6fb61a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/206636858301328c7c407329d10e8dc86d6fb61a", "html_url": "https://github.com/rust-lang/rust/commit/206636858301328c7c407329d10e8dc86d6fb61a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/206636858301328c7c407329d10e8dc86d6fb61a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd23cb89ec0ea63403a17d3fc5e50c88e38dd54f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd23cb89ec0ea63403a17d3fc5e50c88e38dd54f", "html_url": "https://github.com/rust-lang/rust/commit/bd23cb89ec0ea63403a17d3fc5e50c88e38dd54f"}, {"sha": "a14247b50086eed81916a3e78112879614abb8fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/a14247b50086eed81916a3e78112879614abb8fa", "html_url": "https://github.com/rust-lang/rust/commit/a14247b50086eed81916a3e78112879614abb8fa"}], "stats": {"total": 64, "additions": 62, "deletions": 2}, "files": [{"sha": "2f114c065bb131b038ece95b293c6cb0314ea744", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 62, "deletions": 2, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/206636858301328c7c407329d10e8dc86d6fb61a/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/206636858301328c7c407329d10e8dc86d6fb61a/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=206636858301328c7c407329d10e8dc86d6fb61a", "patch": "@@ -37,8 +37,53 @@ extern crate syntax_pos;\n \n use toml;\n \n-// Currently, categories \"style\", \"correctness\", \"complexity\" and \"perf\" are enabled by default,\n-// as said in the README.md of this repository. If this changes, please update README.md.\n+/// Macro used to declare a Clippy lint.\n+///\n+/// Every lint declaration consists of 4 parts:\n+///\n+/// 1. The documentation above the lint, which is used for the website\n+/// 2. The `LINT_NAME`. See [lint naming][lint_naming] on lint naming conventions.\n+/// 3. The `lint_level`, which is a mapping from *one* of our lint groups to `Allow`, `Warn` or\n+///    `Deny`. The lint level here has nothing to do with what lint groups the lint is a part of.\n+/// 4. The `description` that contains a short explanation on what's wrong with code where the\n+///    lint is triggered.\n+///\n+/// Currently the categories `style`, `correctness`, `complexity` and `perf` are enabled by default.\n+/// As said in the README.md of this repository, if the lint level mapping changes, please update\n+/// README.md.\n+///\n+/// # Example\n+///\n+/// ```\n+/// # #![feature(rustc_private)]\n+/// # #[allow(unused_extern_crates)]\n+/// # extern crate rustc;\n+/// # #[macro_use]\n+/// # use clippy_lints::declare_clippy_lint;\n+/// use rustc::declare_tool_lint;\n+///\n+/// /// **What it does:** Checks for ... (describe what the lint matches).\n+/// ///\n+/// /// **Why is this bad?** Supply the reason for linting the code.\n+/// ///\n+/// /// **Known problems:** None. (Or describe where it could go wrong.)\n+/// ///\n+/// /// **Example:**\n+/// ///\n+/// /// ```rust\n+/// /// // Bad\n+/// /// Insert a short example of code that triggers the lint\n+/// ///\n+/// /// // Good\n+/// /// Insert a short example of improved code that doesn't trigger the lint\n+/// /// ```\n+/// declare_clippy_lint! {\n+///     pub LINT_NAME,\n+///     pedantic,\n+///     \"description\"\n+/// }\n+/// ```\n+/// [lint_naming]: https://rust-lang.github.io/rfcs/0344-conventions-galore.html#lints\n #[macro_export]\n macro_rules! declare_clippy_lint {\n     { pub $name:tt, style, $description:tt } => {\n@@ -211,6 +256,14 @@ mod reexport {\n     crate use syntax::ast::{Name, NodeId};\n }\n \n+/// Register all pre expansion lints\n+///\n+/// Pre-expansion lints run before any macro expansion has happened.\n+///\n+/// Note that due to the architechture of the compiler, currently `cfg_attr` attributes on crate\n+/// level (i.e `#![cfg_attr(...)]`) will still be expanded even when using a pre-expansion pass.\n+///\n+/// Used in `./src/driver.rs`.\n pub fn register_pre_expansion_lints(\n     session: &rustc::session::Session,\n     store: &mut rustc::lint::LintStore,\n@@ -235,6 +288,7 @@ pub fn register_pre_expansion_lints(\n     store.register_pre_expansion_pass(Some(session), true, false, box dbg_macro::Pass);\n }\n \n+#[doc(hidden)]\n pub fn read_conf(reg: &rustc_plugin::Registry<'_>) -> Conf {\n     match utils::conf::file_from_args(reg.args()) {\n         Ok(file_name) => {\n@@ -292,6 +346,9 @@ pub fn read_conf(reg: &rustc_plugin::Registry<'_>) -> Conf {\n     }\n }\n \n+/// Register all lints and lint groups with the rustc plugin registry\n+///\n+/// Used in `./src/driver.rs`.\n #[allow(clippy::too_many_lines)]\n #[rustfmt::skip]\n pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n@@ -1046,6 +1103,9 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     ]);\n }\n \n+/// Register renamed lints.\n+///\n+/// Used in `./src/driver.rs`.\n pub fn register_renamed(ls: &mut rustc::lint::LintStore) {\n     ls.register_renamed(\"clippy::stutter\", \"clippy::module_name_repetitions\");\n     ls.register_renamed(\"clippy::new_without_default_derive\", \"clippy::new_without_default\");"}]}