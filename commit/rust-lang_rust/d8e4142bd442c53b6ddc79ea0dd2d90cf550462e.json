{"sha": "d8e4142bd442c53b6ddc79ea0dd2d90cf550462e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZTQxNDJiZDQ0MmM1M2I2ZGRjNzllYTBkZDJkOTBjZjU1MDQ2MmU=", "commit": {"author": {"name": "James Cowgill", "email": "jcowgill@debian.org", "date": "2018-01-24T11:50:10Z"}, "committer": {"name": "James Cowgill", "email": "jcowgill@debian.org", "date": "2018-01-30T11:54:52Z"}, "message": "rustc_trans: clobber $1 (aka $at) on mips\n\nThis copies what clang does. There is a long explanation as to why this\nis needed in the clang source (tools/clang/lib/Basic/Targets/Mips.h).", "tree": {"sha": "bdb9ae1e6ad431d6a1fe0ad7e5bc2fb2e2cc6c52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdb9ae1e6ad431d6a1fe0ad7e5bc2fb2e2cc6c52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8e4142bd442c53b6ddc79ea0dd2d90cf550462e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8e4142bd442c53b6ddc79ea0dd2d90cf550462e", "html_url": "https://github.com/rust-lang/rust/commit/d8e4142bd442c53b6ddc79ea0dd2d90cf550462e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8e4142bd442c53b6ddc79ea0dd2d90cf550462e/comments", "author": {"login": "jcowgill", "id": 1226825, "node_id": "MDQ6VXNlcjEyMjY4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1226825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcowgill", "html_url": "https://github.com/jcowgill", "followers_url": "https://api.github.com/users/jcowgill/followers", "following_url": "https://api.github.com/users/jcowgill/following{/other_user}", "gists_url": "https://api.github.com/users/jcowgill/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcowgill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcowgill/subscriptions", "organizations_url": "https://api.github.com/users/jcowgill/orgs", "repos_url": "https://api.github.com/users/jcowgill/repos", "events_url": "https://api.github.com/users/jcowgill/events{/privacy}", "received_events_url": "https://api.github.com/users/jcowgill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcowgill", "id": 1226825, "node_id": "MDQ6VXNlcjEyMjY4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1226825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcowgill", "html_url": "https://github.com/jcowgill", "followers_url": "https://api.github.com/users/jcowgill/followers", "following_url": "https://api.github.com/users/jcowgill/following{/other_user}", "gists_url": "https://api.github.com/users/jcowgill/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcowgill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcowgill/subscriptions", "organizations_url": "https://api.github.com/users/jcowgill/orgs", "repos_url": "https://api.github.com/users/jcowgill/repos", "events_url": "https://api.github.com/users/jcowgill/events{/privacy}", "received_events_url": "https://api.github.com/users/jcowgill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe7e1a45f37f4265434cead827f587e75412f85c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe7e1a45f37f4265434cead827f587e75412f85c", "html_url": "https://github.com/rust-lang/rust/commit/fe7e1a45f37f4265434cead827f587e75412f85c"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "751f8148a2a9086fde59c055a8b22d83890e6ef3", "filename": "src/librustc_trans/asm.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d8e4142bd442c53b6ddc79ea0dd2d90cf550462e/src%2Flibrustc_trans%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8e4142bd442c53b6ddc79ea0dd2d90cf550462e/src%2Flibrustc_trans%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fasm.rs?ref=d8e4142bd442c53b6ddc79ea0dd2d90cf550462e", "patch": "@@ -59,8 +59,9 @@ pub fn trans_inline_asm<'a, 'tcx>(\n     // Default per-arch clobbers\n     // Basically what clang does\n     let arch_clobbers = match &bx.sess().target.target.arch[..] {\n-        \"x86\" | \"x86_64\" => vec![\"~{dirflag}\", \"~{fpsr}\", \"~{flags}\"],\n-        _                => Vec::new()\n+        \"x86\" | \"x86_64\"  => vec![\"~{dirflag}\", \"~{fpsr}\", \"~{flags}\"],\n+        \"mips\" | \"mips64\" => vec![\"~{$1}\"],\n+        _                 => Vec::new()\n     };\n \n     let all_constraints ="}]}