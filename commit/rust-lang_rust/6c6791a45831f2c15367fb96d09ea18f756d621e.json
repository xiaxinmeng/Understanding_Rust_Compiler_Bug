{"sha": "6c6791a45831f2c15367fb96d09ea18f756d621e", "node_id": "C_kwDOAAsO6NoAKDZjNjc5MWE0NTgzMWYyYzE1MzY3ZmI5NmQwOWVhMThmNzU2ZDYyMWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-08T06:00:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-08T06:00:39Z"}, "message": "Rollup merge of #98798 - jyn514:download-rustc-cached, r=Mark-Simulacrum\n\nFix caching bug in `download-rustc = true`\n\nWhen moving this to rustbuild, I introduced a bug: if you had the file already downloaded, but\ndeleted the sysroot for whatever reason, rustbuil would fail to unpack the cached tarball.\n\nThis only affects people if they have a cached tarball, which is probably why we haven't seen an issue yet -\nwiping `build/cache` would work around the issue, or just not deleting `build/$TARGET/stage2`.\n\nFixes the following error:\n```\nthread 'main' panicked at 'fs::read_dir(&lib_dir) failed with No such file or directory (os error 2) (\"/home/jnelson/rust-lang/rust2/build/x86_64-unknown-linux-gnu/ci-rustc/lib\")', config.rs:1563:20\n```\n\nr? ``@Mark-Simulacrum``", "tree": {"sha": "7a0b9a8e8b14becef9a8d7d9cccfe31e63b1d06d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a0b9a8e8b14becef9a8d7d9cccfe31e63b1d06d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c6791a45831f2c15367fb96d09ea18f756d621e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJix8gHCRBK7hj4Ov3rIwAAlEkIABkwCLYXP9egfwzd4IUDD5Yd\nERsYvg7U26VetscvlPP0ZcZryZiBOOJ+gJnniOG8iXBorUYDgxrWDoDA3mSHm6Ip\nOu7ybEwZRfCAsIvZxwGHlAFhuguWRiY0Us3wxz4UJWG6k1oCFFioZqMVu/a+mWTL\nB2CBnudkbJ4SE4vX/AcCQjdFu+dNN1QObXWUekOuQEtnNb7qz2wfru9XeYjUTYuu\nxOUNdByAWlqoMDvNT/3TAUuapheIJ6rWO+OU3r2/oTNG3Dx/XWCtGEE8cLZPS/tq\nzn4S0PWXsihBD4B23Pq0EHEwU2oujwbzm1BFSo+Ojmjjc+QbAOqnV0CbduWCaeg=\n=kOB6\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a0b9a8e8b14becef9a8d7d9cccfe31e63b1d06d\nparent 5dcd28cd1964969d605cddfcaec102006aa020c9\nparent 75dfd5e1c1a51c44c8eb8d7474879f6ae5969085\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1657260039 +0200\ncommitter GitHub <noreply@github.com> 1657260039 +0200\n\nRollup merge of #98798 - jyn514:download-rustc-cached, r=Mark-Simulacrum\n\nFix caching bug in `download-rustc = true`\n\nWhen moving this to rustbuild, I introduced a bug: if you had the file already downloaded, but\ndeleted the sysroot for whatever reason, rustbuil would fail to unpack the cached tarball.\n\nThis only affects people if they have a cached tarball, which is probably why we haven't seen an issue yet -\nwiping `build/cache` would work around the issue, or just not deleting `build/$TARGET/stage2`.\n\nFixes the following error:\n```\nthread 'main' panicked at 'fs::read_dir(&lib_dir) failed with No such file or directory (os error 2) (\"/home/jnelson/rust-lang/rust2/build/x86_64-unknown-linux-gnu/ci-rustc/lib\")', config.rs:1563:20\n```\n\nr? ``@Mark-Simulacrum``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c6791a45831f2c15367fb96d09ea18f756d621e", "html_url": "https://github.com/rust-lang/rust/commit/6c6791a45831f2c15367fb96d09ea18f756d621e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c6791a45831f2c15367fb96d09ea18f756d621e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dcd28cd1964969d605cddfcaec102006aa020c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dcd28cd1964969d605cddfcaec102006aa020c9", "html_url": "https://github.com/rust-lang/rust/commit/5dcd28cd1964969d605cddfcaec102006aa020c9"}, {"sha": "75dfd5e1c1a51c44c8eb8d7474879f6ae5969085", "url": "https://api.github.com/repos/rust-lang/rust/commits/75dfd5e1c1a51c44c8eb8d7474879f6ae5969085", "html_url": "https://github.com/rust-lang/rust/commit/75dfd5e1c1a51c44c8eb8d7474879f6ae5969085"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "fa6a5ee1668f8edf229af72c600e19cd35b03472", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c6791a45831f2c15367fb96d09ea18f756d621e/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c6791a45831f2c15367fb96d09ea18f756d621e/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=6c6791a45831f2c15367fb96d09ea18f756d621e", "patch": "@@ -949,6 +949,7 @@ impl<'a> Builder<'a> {\n     }\n \n     pub(crate) fn download_component(&self, url: &str, dest_path: &Path, help_on_error: &str) {\n+        self.verbose(&format!(\"download {url}\"));\n         // Use a temporary file in case we crash while downloading, to avoid a corrupt download in cache/.\n         let tempfile = self.tempdir().join(dest_path.file_name().unwrap());\n         // While bootstrap itself only supports http and https downloads, downstream forks might"}, {"sha": "ee3b072fe35f2944cf35938a7379973e9f012292", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c6791a45831f2c15367fb96d09ea18f756d621e/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c6791a45831f2c15367fb96d09ea18f756d621e/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=6c6791a45831f2c15367fb96d09ea18f756d621e", "patch": "@@ -1558,7 +1558,7 @@ fn download_ci_rustc(builder: &Builder<'_>, commit: &str) {\n         builder.fix_bin_or_dylib(&bin_root.join(\"bin\").join(\"rustc\"));\n         builder.fix_bin_or_dylib(&bin_root.join(\"bin\").join(\"rustdoc\"));\n         let lib_dir = bin_root.join(\"lib\");\n-        for lib in t!(fs::read_dir(lib_dir)) {\n+        for lib in t!(fs::read_dir(&lib_dir), lib_dir.display().to_string()) {\n             let lib = t!(lib);\n             if lib.path().extension() == Some(OsStr::new(\"so\")) {\n                 builder.fix_bin_or_dylib(&lib.path());\n@@ -1634,6 +1634,7 @@ fn download_component(\n         }\n         Some(sha256)\n     } else if tarball.exists() {\n+        builder.unpack(&tarball, &bin_root, prefix);\n         return;\n     } else {\n         None"}]}