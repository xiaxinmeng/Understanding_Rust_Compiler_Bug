{"sha": "1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYzFiMWYxZWIxYmQwZWExZjkzOTZhZGUxMDE1ZDAwZjkxNDlhMWQ=", "commit": {"author": {"name": "Giles Cope", "email": "gilescope@gmail.com", "date": "2017-06-13T13:17:59Z"}, "committer": {"name": "Giles Cope", "email": "gilescope@gmail.com", "date": "2017-06-13T13:17:59Z"}, "message": "updated assert_eq test, fixed incorrect assert_ne message and added test.", "tree": {"sha": "42c7c83b636715301c4d557b166b31d809ee445a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42c7c83b636715301c4d557b166b31d809ee445a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d", "html_url": "https://github.com/rust-lang/rust/commit/1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d/comments", "author": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f062832b208e94f2f0f26ed7fb5c48c172069fbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f062832b208e94f2f0f26ed7fb5c48c172069fbe", "html_url": "https://github.com/rust-lang/rust/commit/f062832b208e94f2f0f26ed7fb5c48c172069fbe"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "f8316d6857880f6e35309a7bd1fbc0c9bd950542", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d", "patch": "@@ -116,8 +116,9 @@ macro_rules! assert_eq {\n         match (&$left, &$right) {\n             (left_val, right_val) => {\n                 if !(*left_val == *right_val) {\n-                    panic!(\"assertion failed: `(left == right)` \\\n-                           (left: `{:?}`, right: `{:?}`)\", left_val, right_val)\n+                    panic!(r#\"assertion failed: `(left == right)`\n+  left: `{:?}`\n+ right: `{:?}`\"#, left_val, right_val)\n                 }\n             }\n         }\n@@ -126,8 +127,9 @@ macro_rules! assert_eq {\n         match (&($left), &($right)) {\n             (left_val, right_val) => {\n                 if !(*left_val == *right_val) {\n-                    panic!(\"assertion failed: `(left == right)` \\\n-                           (left: `{:?}`, right: `{:?}`): {}\", left_val, right_val,\n+                    panic!(r#\"assertion failed: `(left == right)`\n+  left: `{:?}`\n+ right: `{:?}`: {}\"#, left_val, right_val,\n                            format_args!($($arg)+))\n                 }\n             }\n@@ -162,8 +164,9 @@ macro_rules! assert_ne {\n         match (&$left, &$right) {\n             (left_val, right_val) => {\n                 if *left_val == *right_val {\n-                    panic!(\"assertion failed: `(left != right)` \\\n-                           (left: `{:?}`, right: `{:?}`)\", left_val, right_val)\n+\t\t    panic!(r#\"assertion failed: `(left != right)`\n+  left: `{:?}`\n+ right: `{:?}`\"#, left_val, right_val)\n                 }\n             }\n         }\n@@ -172,8 +175,9 @@ macro_rules! assert_ne {\n         match (&($left), &($right)) {\n             (left_val, right_val) => {\n                 if *left_val == *right_val {\n-                    panic!(\"assertion failed: `(left != right)` \\\n-                           (left: `{:?}`, right: `{:?}`): {}\", left_val, right_val,\n+                                        panic!(r#\"assertion failed: `(left != right)`\n+  left: `{:?}`\n+ right: `{:?}`: {}\"#, left_val, right_val,\n                            format_args!($($arg)+))\n                 }\n             }"}, {"sha": "fed2ee0beab29656f720d9b170c7abdf184aa460", "filename": "src/test/run-fail/assert-eq-macro-panic.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d/src%2Ftest%2Frun-fail%2Fassert-eq-macro-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d/src%2Ftest%2Frun-fail%2Fassert-eq-macro-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-eq-macro-panic.rs?ref=1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d", "patch": "@@ -8,7 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:assertion failed: `(left == right)` (left: `14`, right: `15`)\n+// error-pattern:assertion failed: `(left == right)`\n+// error-pattern: left: `14`\n+// error-pattern:right: `15`\n \n fn main() {\n     assert_eq!(14, 15);"}, {"sha": "d57bb0fb67fb0bf1257b094eb39b66dfa010e62f", "filename": "src/test/run-fail/assert-ne-macro-panic.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d/src%2Ftest%2Frun-fail%2Fassert-ne-macro-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d/src%2Ftest%2Frun-fail%2Fassert-ne-macro-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-ne-macro-panic.rs?ref=1ec1b1f1eb1bd0ea1f9396ade1015d00f9149a1d", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// error-pattern:assertion failed: `(left != right)`\n+// error-pattern: left: `14`\n+// error-pattern:right: `14`\n+\n+fn main() {\n+    assert_ne!(14, 14);\n+}"}]}