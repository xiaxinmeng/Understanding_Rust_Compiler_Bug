{"sha": "4c2aef650ae115d0fc504d0511a4f4809d625050", "node_id": "C_kwDOAAsO6NoAKDRjMmFlZjY1MGFlMTE1ZDBmYzUwNGQwNTExYTRmNDgwOWQ2MjUwNTA", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-14T16:18:46Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-14T16:40:24Z"}, "message": "Slim down AssociatedTypeBinding by one usize", "tree": {"sha": "1902febb7dd4d94e6521cd654a7229dfb3d0781c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1902febb7dd4d94e6521cd654a7229dfb3d0781c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c2aef650ae115d0fc504d0511a4f4809d625050", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c2aef650ae115d0fc504d0511a4f4809d625050", "html_url": "https://github.com/rust-lang/rust/commit/4c2aef650ae115d0fc504d0511a4f4809d625050", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c2aef650ae115d0fc504d0511a4f4809d625050/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41db8c2b5935ac876b7f16fd361809a725edcc55", "url": "https://api.github.com/repos/rust-lang/rust/commits/41db8c2b5935ac876b7f16fd361809a725edcc55", "html_url": "https://github.com/rust-lang/rust/commit/41db8c2b5935ac876b7f16fd361809a725edcc55"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "e8653274cf42979a3fe391cc12bc9ada3a7bf055", "filename": "crates/hir-def/src/item_tree/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Flower.rs?ref=4c2aef650ae115d0fc504d0511a4f4809d625050", "patch": "@@ -664,7 +664,7 @@ fn desugar_future_path(orig: TypeRef) -> Path {\n         name: name![Output],\n         args: None,\n         type_ref: Some(orig),\n-        bounds: Vec::new(),\n+        bounds: Box::default(),\n     };\n     last.bindings.push(binding);\n     generic_args.push(Some(Interned::new(last)));"}, {"sha": "b9e79fd462ee47e3c6d81c91e0fac2f862e5353a", "filename": "crates/hir-def/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fpath.rs?ref=4c2aef650ae115d0fc504d0511a4f4809d625050", "patch": "@@ -77,7 +77,7 @@ pub struct AssociatedTypeBinding {\n     /// Bounds for the associated type, like in `Iterator<Item:\n     /// SomeOtherTrait>`. (This is the unstable `associated_type_bounds`\n     /// feature.)\n-    pub bounds: Vec<Interned<TypeBound>>,\n+    pub bounds: Box<[Interned<TypeBound>]>,\n }\n \n /// A single generic argument."}, {"sha": "51f1ba79a47e44ac32f1841185134c13a5e17c07", "filename": "crates/hir-def/src/path/lower.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-def%2Fsrc%2Fpath%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-def%2Fsrc%2Fpath%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fpath%2Flower.rs?ref=4c2aef650ae115d0fc504d0511a4f4809d625050", "patch": "@@ -187,7 +187,7 @@ pub(super) fn lower_generic_args(\n                             .map(|it| Interned::new(TypeBound::from_ast(lower_ctx, it)))\n                             .collect()\n                     } else {\n-                        Vec::new()\n+                        Box::default()\n                     };\n                     bindings.push(AssociatedTypeBinding { name, args, type_ref, bounds });\n                 }\n@@ -234,7 +234,7 @@ fn lower_generic_args_from_fn_path(\n             name: name![Output],\n             args: None,\n             type_ref: Some(type_ref),\n-            bounds: Vec::new(),\n+            bounds: Box::default(),\n         });\n     } else {\n         // -> ()\n@@ -243,7 +243,7 @@ fn lower_generic_args_from_fn_path(\n             name: name![Output],\n             args: None,\n             type_ref: Some(type_ref),\n-            bounds: Vec::new(),\n+            bounds: Box::default(),\n         });\n     }\n     Some(GenericArgs { args, has_self_type: false, bindings, desugared_from_fn: true })"}, {"sha": "51b6c4d10b1b1f4ff89de4bba48ebb2cab6edac7", "filename": "crates/hir-def/src/type_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-def%2Fsrc%2Ftype_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-def%2Fsrc%2Ftype_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Ftype_ref.rs?ref=4c2aef650ae115d0fc504d0511a4f4809d625050", "patch": "@@ -305,7 +305,7 @@ impl TypeRef {\n                         if let Some(type_ref) = &binding.type_ref {\n                             go(type_ref, f);\n                         }\n-                        for bound in &binding.bounds {\n+                        for bound in binding.bounds.iter() {\n                             match bound.as_ref() {\n                                 TypeBound::Path(path, _) | TypeBound::ForLifetime(_, path) => {\n                                     go_path(path, f)"}, {"sha": "1f2e56f5bd3c8d1ff04c921e7c55db87e512a8f8", "filename": "crates/hir-ty/src/display.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fdisplay.rs?ref=4c2aef650ae115d0fc504d0511a4f4809d625050", "patch": "@@ -1445,7 +1445,7 @@ impl HirDisplay for Path {\n                         }\n                         None => {\n                             write!(f, \": \")?;\n-                            f.write_joined(&binding.bounds, \" + \")?;\n+                            f.write_joined(binding.bounds.iter(), \" + \")?;\n                         }\n                     }\n                 }"}, {"sha": "f93d710e1aa5dd30d5a94eadf0d168928183ddeb", "filename": "crates/hir-ty/src/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c2aef650ae115d0fc504d0511a4f4809d625050/crates%2Fhir-ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flower.rs?ref=4c2aef650ae115d0fc504d0511a4f4809d625050", "patch": "@@ -1068,7 +1068,7 @@ impl<'a> TyLoweringContext<'a> {\n                         AliasEq { alias: AliasTy::Projection(projection_ty.clone()), ty };\n                     preds.push(crate::wrap_empty_binders(WhereClause::AliasEq(alias_eq)));\n                 }\n-                for bound in &binding.bounds {\n+                for bound in binding.bounds.iter() {\n                     preds.extend(self.lower_type_bound(\n                         bound,\n                         TyKind::Alias(AliasTy::Projection(projection_ty.clone())).intern(Interner),"}]}