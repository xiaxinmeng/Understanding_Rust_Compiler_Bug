{"sha": "8a74be6684a6b0f02c5d4a36cbc19201a9d6f34f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNzRiZTY2ODRhNmIwZjAyYzVkNGEzNmNiYzE5MjAxYTlkNmYzNGY=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-05T17:54:50Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-05T18:49:47Z"}, "message": "Add source information the const propagation of places", "tree": {"sha": "eda3d8f417d363cbd00635764c0d76499d6bd02d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eda3d8f417d363cbd00635764c0d76499d6bd02d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a74be6684a6b0f02c5d4a36cbc19201a9d6f34f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a74be6684a6b0f02c5d4a36cbc19201a9d6f34f", "html_url": "https://github.com/rust-lang/rust/commit/8a74be6684a6b0f02c5d4a36cbc19201a9d6f34f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a74be6684a6b0f02c5d4a36cbc19201a9d6f34f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5950496c92f99d15d85432c0c0eace5fb6b25c02", "url": "https://api.github.com/repos/rust-lang/rust/commits/5950496c92f99d15d85432c0c0eace5fb6b25c02", "html_url": "https://github.com/rust-lang/rust/commit/5950496c92f99d15d85432c0c0eace5fb6b25c02"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "24382815084619dee7a74c01d18979e26b5309a1", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8a74be6684a6b0f02c5d4a36cbc19201a9d6f34f/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a74be6684a6b0f02c5d4a36cbc19201a9d6f34f/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=8a74be6684a6b0f02c5d4a36cbc19201a9d6f34f", "patch": "@@ -233,14 +233,14 @@ impl<'b, 'a, 'tcx:'b> ConstPropagator<'b, 'a, 'tcx> {\n         }\n     }\n \n-    fn eval_place(&mut self, place: &Place<'tcx>) -> Option<Const<'tcx>> {\n+    fn eval_place(&mut self, place: &Place<'tcx>, source_info: SourceInfo) -> Option<Const<'tcx>> {\n         match *place {\n             Place::Local(loc) => self.places[loc].clone(),\n             Place::Projection(ref proj) => match proj.elem {\n                 ProjectionElem::Field(field, _) => {\n                     trace!(\"field proj on {:?}\", proj.base);\n-                    let (base, ty, span) = self.eval_place(&proj.base)?;\n-                    let valty = self.use_ecx(span, |this| {\n+                    let (base, ty, span) = self.eval_place(&proj.base, source_info)?;\n+                    let valty = self.use_ecx(source_info, |this| {\n                         this.ecx.read_field(base, None, field, ty)\n                     })?;\n                     Some((valty.value, valty.ty, span))\n@@ -254,7 +254,8 @@ impl<'b, 'a, 'tcx:'b> ConstPropagator<'b, 'a, 'tcx> {\n     fn eval_operand(&mut self, op: &Operand<'tcx>, source_info: SourceInfo) -> Option<Const<'tcx>> {\n         match *op {\n             Operand::Constant(ref c) => self.eval_constant(c, source_info),\n-            Operand::Move(ref place) | Operand::Copy(ref place) => self.eval_place(place),\n+            | Operand::Move(ref place)\n+            | Operand::Copy(ref place) => self.eval_place(place, source_info),\n         }\n     }\n "}]}