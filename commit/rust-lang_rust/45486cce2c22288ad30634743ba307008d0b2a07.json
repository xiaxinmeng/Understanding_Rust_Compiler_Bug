{"sha": "45486cce2c22288ad30634743ba307008d0b2a07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NDg2Y2NlMmMyMjI4OGFkMzA2MzQ3NDNiYTMwNzAwOGQwYjJhMDc=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-01-29T21:16:57Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-02-01T14:43:57Z"}, "message": "Tidy fixes", "tree": {"sha": "e2e56123c0e9e6d954e52b11de42a5b69168a947", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2e56123c0e9e6d954e52b11de42a5b69168a947"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45486cce2c22288ad30634743ba307008d0b2a07", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAlxUWy0ACgkQtAh+UQ6Y\nsWTvgg/+OFsZZ1Q/U1bin/vo50I40hEWq65mgJl4x//MmPWdJxfTzyn7d0fYN6Kq\ngQGVemNqI31hTHnXgWIExENc7el6vhYRFz+E1SnwvIzItBzfoPH8bRAB29JfU4mU\n0J3SRZn3f+z1JcR8WFOFeabwyruTdAQ14evFQriinVsAHFvcT30sQ77dIAJQUQy9\ngQyoAlj0aXSioXL5bqchtpXwqAb2rb3hKHDERVwv1Nrd7e7LgyDL5cSVXX5ZVX8V\nFdlk1aTCAykQMeM1/lAev/wE+7xs54EPKGyncitnDRlbVjzyXXFRZ00BC1SKkQoL\n78SyO3j+lbwbrjihKTsoV7AzK7kdfxBlZeoxG4ww3jAPVW9nHnRCnoIcB0YeN8fa\nslOFoFlHO1NDAb4Fq40KwJSRV0B29ZPNkC+aRPTsOAXZIG1cxjK1Vh71iOWIsFZg\njVrHcfhaHtt+t5SB0qqUHc0/2+lE1s+CnS0rBRqcZPlQTPLotlqmm8UbNZefYuEh\nxtH0Aq9fbsdxp6BaYtvE31FkT02moheMiwis9Jmiw1Re79gK/LEiHR0iOV1npVL7\nt1rBb1NvXA2D5AIkf0s+EuUK2jX9RYO10oDvJELdhnMxAiz+qutv+ZKCG+Rjg5Zb\n5TV20v0RQM52/kZteaBcrnkx0AQK36WXm954p66VyrLSGjmOiOc=\n=FGfH\n-----END PGP SIGNATURE-----", "payload": "tree e2e56123c0e9e6d954e52b11de42a5b69168a947\nparent fe15f7177f59f4ac9e9eb22dff727cd58a097e11\nauthor Aaron Hill <aa1ronham@gmail.com> 1548796617 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1549032237 -0500\n\nTidy fixes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45486cce2c22288ad30634743ba307008d0b2a07", "html_url": "https://github.com/rust-lang/rust/commit/45486cce2c22288ad30634743ba307008d0b2a07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45486cce2c22288ad30634743ba307008d0b2a07/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe15f7177f59f4ac9e9eb22dff727cd58a097e11", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe15f7177f59f4ac9e9eb22dff727cd58a097e11", "html_url": "https://github.com/rust-lang/rust/commit/fe15f7177f59f4ac9e9eb22dff727cd58a097e11"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "8e6a48f9d56bc8f527a426e720a66b15ac49f804", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45486cce2c22288ad30634743ba307008d0b2a07/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45486cce2c22288ad30634743ba307008d0b2a07/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=45486cce2c22288ad30634743ba307008d0b2a07", "patch": "@@ -1917,7 +1917,7 @@ pub fn build_session_options_and_crate_config(\n     let crate_types = parse_crate_types_from_list(unparsed_crate_types)\n         .unwrap_or_else(|e| early_error(error_format, &e[..]));\n \n-    \n+\n     let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n \n     let mut debugging_opts = build_debugging_options(matches, error_format);"}, {"sha": "4084e0495db5bd16d60aff5a96d301193071197a", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/45486cce2c22288ad30634743ba307008d0b2a07/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45486cce2c22288ad30634743ba307008d0b2a07/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=45486cce2c22288ad30634743ba307008d0b2a07", "patch": "@@ -1762,9 +1762,10 @@ fn privacy_access_levels<'tcx>(\n         queries::check_mod_privacy::ensure(tcx, tcx.hir().local_def_id(module));\n     }\n \n-    let public_crates: Option<FxHashSet<CrateNum>> = tcx.sess.opts.extern_public.as_ref().map(|s| s.iter().flat_map(|c| {\n-        tcx.crates().iter().find(|&&krate| &tcx.crate_name(krate) == c).cloned()\n-    }).collect());\n+    let public_crates: Option<FxHashSet<CrateNum>> = tcx.sess.opts.extern_public.as_ref()\n+        .map(|s| s.iter().flat_map(|c| {\n+            tcx.crates().iter().find(|&&krate| &tcx.crate_name(krate) == c).cloned()\n+        }).collect());\n \n \n     // Build up a set of all exported items in the AST. This is a set of all"}]}