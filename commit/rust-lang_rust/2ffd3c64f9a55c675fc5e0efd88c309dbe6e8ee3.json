{"sha": "2ffd3c64f9a55c675fc5e0efd88c309dbe6e8ee3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZmQzYzY0ZjlhNTVjNjc1ZmM1ZTBlZmQ4OGMzMDlkYmU2ZThlZTM=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-19T18:59:59Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-20T03:08:39Z"}, "message": "Avoid cloning Place in limit_capture_mutability", "tree": {"sha": "c97a31735da335e68bd53fb1ab5a19c617a17bf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c97a31735da335e68bd53fb1ab5a19c617a17bf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ffd3c64f9a55c675fc5e0efd88c309dbe6e8ee3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ffd3c64f9a55c675fc5e0efd88c309dbe6e8ee3", "html_url": "https://github.com/rust-lang/rust/commit/2ffd3c64f9a55c675fc5e0efd88c309dbe6e8ee3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ffd3c64f9a55c675fc5e0efd88c309dbe6e8ee3/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10470797a612af227fbbe39e829c4cc204fb482a", "url": "https://api.github.com/repos/rust-lang/rust/commits/10470797a612af227fbbe39e829c4cc204fb482a", "html_url": "https://github.com/rust-lang/rust/commit/10470797a612af227fbbe39e829c4cc204fb482a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "851a6b0b07cf6632c1b0d95bcc904feebfc09e7b", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ffd3c64f9a55c675fc5e0efd88c309dbe6e8ee3/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ffd3c64f9a55c675fc5e0efd88c309dbe6e8ee3/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=2ffd3c64f9a55c675fc5e0efd88c309dbe6e8ee3", "patch": "@@ -531,9 +531,9 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     elem: ProjectionElem::Deref,\n                 }),\n             } => {\n-                let place = Place {\n-                    base: base.clone(),\n-                    projection: base_proj.clone(),\n+                let place = PlaceRef {\n+                    base,\n+                    projection: base_proj,\n                 };\n \n                 // Not projected from the implicit `self` in a closure."}]}