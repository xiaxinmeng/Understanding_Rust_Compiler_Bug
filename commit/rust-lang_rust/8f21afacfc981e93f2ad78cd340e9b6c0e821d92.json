{"sha": "8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMjFhZmFjZmM5ODFlOTNmMmFkNzhjZDM0MGU5YjZjMGU4MjFkOTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-08T15:34:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-08T15:34:26Z"}, "message": "Optional patterns in fn types", "tree": {"sha": "de7edde0b99d913c9f6ec049f794e71a26f1cecc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de7edde0b99d913c9f6ec049f794e71a26f1cecc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "html_url": "https://github.com/rust-lang/rust/commit/8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de7b1887ae46c78c3c0abf6d264b2649b1b5cf0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/de7b1887ae46c78c3c0abf6d264b2649b1b5cf0b", "html_url": "https://github.com/rust-lang/rust/commit/de7b1887ae46c78c3c0abf6d264b2649b1b5cf0b"}], "stats": {"total": 162, "additions": 151, "deletions": 11}, "files": [{"sha": "32e905cb22497640efcd5342beb0b96587695043", "filename": "src/grammar/params.rs", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/src%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/src%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fparams.rs?ref=8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "patch": "@@ -33,12 +33,6 @@ impl Flavor {\n             _ => true,\n         }\n     }\n-    fn pattern_required(self) -> bool {\n-        match self {\n-            Flavor::OptionalPattern => false,\n-            _ => true,\n-        }\n-    }\n }\n \n fn list_(p: &mut Parser, flavor: Flavor) {\n@@ -65,9 +59,29 @@ fn list_(p: &mut Parser, flavor: Flavor) {\n \n fn value_parameter(p: &mut Parser, flavor: Flavor) {\n     let m = p.start();\n-    patterns::pattern(p);\n-    if p.at(COLON) || flavor.type_required() {\n-        types::ascription(p)\n+    match flavor {\n+        Flavor::OptionalType | Flavor::Normal => {\n+            patterns::pattern(p);\n+            if p.at(COLON) || flavor.type_required() {\n+                types::ascription(p)\n+            }\n+        },\n+        // test value_parameters_no_patterns\n+        // type F = Box<Fn(a: i32, &b: &i32, &mut c: &i32, ())>;\n+        Flavor::OptionalPattern => {\n+            let la0 = p.current();\n+            let la1 = p.nth(1);\n+            let la2 = p.nth(2);\n+            let la3 = p.nth(3);\n+            if la0 == IDENT && la1 == COLON\n+                || la0 == AMP && la1 == IDENT && la2 == COLON\n+                || la0 == AMP && la1 == MUT_KW && la2 == IDENT && la3 == COLON {\n+                patterns::pattern(p);\n+                types::ascription(p);\n+            } else {\n+                types::type_(p);\n+            }\n+        },\n     }\n     m.complete(p, PARAM);\n }"}, {"sha": "c277e2a6b5ba2a48b3f5ca412dafdb89a7d8f41b", "filename": "src/grammar/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/src%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/src%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fpaths.rs?ref=8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "patch": "@@ -75,7 +75,7 @@ fn path_generic_args(p: &mut Parser, mode: Mode) {\n             // test path_fn_trait_args\n             // type F = Box<Fn(x: i32) -> ()>;\n             if p.at(L_PAREN) {\n-                params::param_list(p);\n+                params::param_list_opt_patterns(p);\n                 fn_ret_type(p);\n             } else {\n                 type_args::type_arg_list(p, false)"}, {"sha": "c8ced3d285d997f4480b137ed8d74af8a93ac904", "filename": "src/grammar/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/src%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/src%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Ftypes.rs?ref=8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "patch": "@@ -166,7 +166,7 @@ fn fn_pointer_type(p: &mut Parser) {\n         return;\n     }\n \n-    params::param_list(p);\n+    params::param_list_opt_patterns(p);\n     // test fn_pointer_type_with_ret\n     // type F = fn() -> ();\n     fn_ret_type(p);"}, {"sha": "d8c23c76a7ba0d66c53059bd01e601024ce205c6", "filename": "tests/data/parser/inline/0096_value_parameters_no_patterns.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/tests%2Fdata%2Fparser%2Finline%2F0096_value_parameters_no_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/tests%2Fdata%2Fparser%2Finline%2F0096_value_parameters_no_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0096_value_parameters_no_patterns.rs?ref=8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "patch": "@@ -0,0 +1 @@\n+type F = Box<Fn(a: i32, &b: &i32, &mut c: &i32, ())>;"}, {"sha": "c3f9bf685fc05dc4b5dfcd8ed5063fe5a8bbdc6b", "filename": "tests/data/parser/inline/0096_value_parameters_no_patterns.txt", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/tests%2Fdata%2Fparser%2Finline%2F0096_value_parameters_no_patterns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/tests%2Fdata%2Fparser%2Finline%2F0096_value_parameters_no_patterns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0096_value_parameters_no_patterns.txt?ref=8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "patch": "@@ -0,0 +1,81 @@\n+FILE@[0; 54)\n+  TYPE_ITEM@[0; 53)\n+    TYPE_KW@[0; 4)\n+    WHITESPACE@[4; 5)\n+    NAME@[5; 6)\n+      IDENT@[5; 6) \"F\"\n+    WHITESPACE@[6; 7)\n+    EQ@[7; 8)\n+    WHITESPACE@[8; 9)\n+    PATH_TYPE@[9; 52)\n+      PATH@[9; 52)\n+        PATH_SEGMENT@[9; 52)\n+          NAME_REF@[9; 12)\n+            IDENT@[9; 12) \"Box\"\n+          TYPE_ARG_LIST@[12; 52)\n+            L_ANGLE@[12; 13)\n+            TYPE_ARG@[13; 51)\n+              PATH_TYPE@[13; 51)\n+                PATH@[13; 51)\n+                  PATH_SEGMENT@[13; 51)\n+                    NAME_REF@[13; 15)\n+                      IDENT@[13; 15) \"Fn\"\n+                    PARAM_LIST@[15; 51)\n+                      L_PAREN@[15; 16)\n+                      PARAM@[16; 22)\n+                        BIND_PAT@[16; 17)\n+                          NAME@[16; 17)\n+                            IDENT@[16; 17) \"a\"\n+                        COLON@[17; 18)\n+                        WHITESPACE@[18; 19)\n+                        PATH_TYPE@[19; 22)\n+                          PATH@[19; 22)\n+                            PATH_SEGMENT@[19; 22)\n+                              NAME_REF@[19; 22)\n+                                IDENT@[19; 22) \"i32\"\n+                      COMMA@[22; 23)\n+                      WHITESPACE@[23; 24)\n+                      PARAM@[24; 32)\n+                        REF_PAT@[24; 26)\n+                          AMP@[24; 25)\n+                          BIND_PAT@[25; 26)\n+                            NAME@[25; 26)\n+                              IDENT@[25; 26) \"b\"\n+                        COLON@[26; 27)\n+                        WHITESPACE@[27; 28)\n+                        REFERENCE_TYPE@[28; 32)\n+                          AMP@[28; 29)\n+                          PATH_TYPE@[29; 32)\n+                            PATH@[29; 32)\n+                              PATH_SEGMENT@[29; 32)\n+                                NAME_REF@[29; 32)\n+                                  IDENT@[29; 32) \"i32\"\n+                      COMMA@[32; 33)\n+                      WHITESPACE@[33; 34)\n+                      PARAM@[34; 46)\n+                        REF_PAT@[34; 40)\n+                          AMP@[34; 35)\n+                          MUT_KW@[35; 38)\n+                          WHITESPACE@[38; 39)\n+                          BIND_PAT@[39; 40)\n+                            NAME@[39; 40)\n+                              IDENT@[39; 40) \"c\"\n+                        COLON@[40; 41)\n+                        WHITESPACE@[41; 42)\n+                        REFERENCE_TYPE@[42; 46)\n+                          AMP@[42; 43)\n+                          PATH_TYPE@[43; 46)\n+                            PATH@[43; 46)\n+                              PATH_SEGMENT@[43; 46)\n+                                NAME_REF@[43; 46)\n+                                  IDENT@[43; 46) \"i32\"\n+                      COMMA@[46; 47)\n+                      WHITESPACE@[47; 48)\n+                      PARAM@[48; 50)\n+                        TUPLE_TYPE@[48; 50)\n+                          L_PAREN@[48; 49)\n+                          R_PAREN@[49; 50)\n+                      R_PAREN@[50; 51)\n+            R_ANGLE@[51; 52)\n+    SEMI@[52; 53)\n+  WHITESPACE@[53; 54)"}, {"sha": "9b93442c0f21cfb44e902f514f63068a153b09a6", "filename": "tests/data/parser/inline/0097_param_list_opt_patterns.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/tests%2Fdata%2Fparser%2Finline%2F0097_param_list_opt_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/tests%2Fdata%2Fparser%2Finline%2F0097_param_list_opt_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0097_param_list_opt_patterns.rs?ref=8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "patch": "@@ -0,0 +1 @@\n+fn foo<F: FnMut(&mut Foo<'a>)>(){}"}, {"sha": "f8a37aebbe1a214b265c7170604d23e35723c66a", "filename": "tests/data/parser/inline/0097_param_list_opt_patterns.txt", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/tests%2Fdata%2Fparser%2Finline%2F0097_param_list_opt_patterns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8f21afacfc981e93f2ad78cd340e9b6c0e821d92/tests%2Fdata%2Fparser%2Finline%2F0097_param_list_opt_patterns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0097_param_list_opt_patterns.txt?ref=8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "patch": "@@ -0,0 +1,43 @@\n+FILE@[0; 35)\n+  FN_ITEM@[0; 34)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    TYPE_PARAM_LIST@[6; 30)\n+      L_ANGLE@[6; 7)\n+      TYPE_PARAM@[7; 29)\n+        NAME@[7; 8)\n+          IDENT@[7; 8) \"F\"\n+        COLON@[8; 9)\n+        WHITESPACE@[9; 10)\n+        PATH@[10; 29)\n+          PATH_SEGMENT@[10; 29)\n+            NAME_REF@[10; 15)\n+              IDENT@[10; 15) \"FnMut\"\n+            PARAM_LIST@[15; 29)\n+              L_PAREN@[15; 16)\n+              PARAM@[16; 28)\n+                REFERENCE_TYPE@[16; 28)\n+                  AMP@[16; 17)\n+                  MUT_KW@[17; 20)\n+                  WHITESPACE@[20; 21)\n+                  PATH_TYPE@[21; 28)\n+                    PATH@[21; 28)\n+                      PATH_SEGMENT@[21; 28)\n+                        NAME_REF@[21; 24)\n+                          IDENT@[21; 24) \"Foo\"\n+                        TYPE_ARG_LIST@[24; 28)\n+                          L_ANGLE@[24; 25)\n+                          LIFETIME_ARG@[25; 27)\n+                            LIFETIME@[25; 27) \"'a\"\n+                          R_ANGLE@[27; 28)\n+              R_PAREN@[28; 29)\n+      R_ANGLE@[29; 30)\n+    PARAM_LIST@[30; 32)\n+      L_PAREN@[30; 31)\n+      R_PAREN@[31; 32)\n+    BLOCK_EXPR@[32; 34)\n+      L_CURLY@[32; 33)\n+      R_CURLY@[33; 34)\n+  WHITESPACE@[34; 35)"}]}