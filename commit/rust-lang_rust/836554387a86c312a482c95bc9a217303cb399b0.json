{"sha": "836554387a86c312a482c95bc9a217303cb399b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNjU1NDM4N2E4NmMzMTJhNDgyYzk1YmM5YTIxNzMwM2NiMzk5YjA=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-16T14:19:17Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-16T14:21:11Z"}, "message": "Fix FP with `WHILE_LET_LOOP` and break expressions", "tree": {"sha": "2d32a3bccf3ad43f5208a841182c10fe2189429b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d32a3bccf3ad43f5208a841182c10fe2189429b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/836554387a86c312a482c95bc9a217303cb399b0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXYrXYAAoJEF5CfHlMukXomfwP/jOJ5pDKh1MZ9Wt13gUdSLdM\nGqOieonTB4eAWyxRcg9bzXQT0iUUzSULBNz9cyxJrmgGCtVWl1z01Ffkv9WPnsMg\n24B/NCd9U1kPIajfK5nPZQisp8AymcrQc+haOvGMdoQbw0sP2mvzAfBeoR4+7Hgo\nwTw5DM+mAjpvzhzj04qQtIYRt42vw939eJrtpQaWrYvkijXufIxUCW9gTGq58bX9\nPI5gaQ2hnzGvejI0Ak9PzwExAVqjAdYOw0TNToAe4ycBI4/MTaeVnLD9W06SkiF1\nrrzzma5YvVuUmvvC+FCKVZbD59SM5TQSiBpYWdK9DWTg36mMxCqxyEOrma/mC7pL\n2DdLKhlHl7y1og4/u7oCAzQqzTT9RmYmoC9WjDgxfF5mln5uZxZ1TivHBeGSSDLV\nWLtCb6xACgfWUpC/Czq5Lo9BcUseXCCvsPw9bU1qiwZIbXZq81mbtgBF9O4tfRia\nBazSKopcTqt8Yy69KjXmH1v4YC9ngM2seTDG4HBf52Gj636s891OdH9IjDlhxP4P\nDGRjz2EhnA2R8lvlT1BGEgu8g/P7l1KA/1xy6BPjcVkBW4V3p01tgt+PT6XIr7Eb\n4GLpY/EC2N3SjSwGZNf9GUWmE8MVsVpEADsRU6C0XSV9d69awRn6tC+zyyWkVABF\na4jcyB+vRzju52xEkd+H\n=UeXW\n-----END PGP SIGNATURE-----", "payload": "tree 2d32a3bccf3ad43f5208a841182c10fe2189429b\nparent 06fd2468b281efac77af487fcd2cd16233f66e3a\nauthor mcarton <cartonmartin+git@gmail.com> 1466086757 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1466086871 +0200\n\nFix FP with `WHILE_LET_LOOP` and break expressions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/836554387a86c312a482c95bc9a217303cb399b0", "html_url": "https://github.com/rust-lang/rust/commit/836554387a86c312a482c95bc9a217303cb399b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/836554387a86c312a482c95bc9a217303cb399b0/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06fd2468b281efac77af487fcd2cd16233f66e3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/06fd2468b281efac77af487fcd2cd16233f66e3a", "html_url": "https://github.com/rust-lang/rust/commit/06fd2468b281efac77af487fcd2cd16233f66e3a"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "3df766c95d441dfa207b5a7c70f656a888ebb82a", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/836554387a86c312a482c95bc9a217303cb399b0/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836554387a86c312a482c95bc9a217303cb399b0/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=836554387a86c312a482c95bc9a217303cb399b0", "patch": "@@ -249,7 +249,8 @@ impl LateLintPass for LoopsPass {\n                     match *source {\n                         MatchSource::Normal |\n                         MatchSource::IfLetDesugar { .. } => {\n-                            if arms.len() == 2 && arms[0].pats.len() == 1 && arms[0].guard.is_none() &&\n+                            if arms.len() == 2 &&\n+                               arms[0].pats.len() == 1 && arms[0].guard.is_none() &&\n                                arms[1].pats.len() == 1 && arms[1].guard.is_none() &&\n                                is_break_expr(&arms[1].body) {\n                                 if in_external_macro(cx, expr.span) {\n@@ -787,12 +788,11 @@ fn extract_expr_from_first_stmt(block: &Block) -> Option<&Expr> {\n /// If a block begins with an expression (with or without semicolon), return it.\n fn extract_first_expr(block: &Block) -> Option<&Expr> {\n     match block.expr {\n-        Some(ref expr) => Some(expr),\n+        Some(ref expr) if block.stmts.is_empty() => Some(expr),\n         None if !block.stmts.is_empty() => {\n             match block.stmts[0].node {\n-                StmtExpr(ref expr, _) |\n-                StmtSemi(ref expr, _) => Some(expr),\n-                _ => None,\n+                StmtExpr(ref expr, _) | StmtSemi(ref expr, _) => Some(expr),\n+                StmtDecl(..) => None,\n             }\n         }\n         _ => None,\n@@ -803,7 +803,6 @@ fn extract_first_expr(block: &Block) -> Option<&Expr> {\n fn is_break_expr(expr: &Expr) -> bool {\n     match expr.node {\n         ExprBreak(None) => true,\n-        // there won't be a `let <pat> = break` and so we can safely ignore the StmtDecl case\n         ExprBlock(ref b) => {\n             match extract_first_expr(b) {\n                 Some(ref subexpr) => is_break_expr(subexpr),"}, {"sha": "d8cea42e20bf22a4acd1f142669c09720adf2779", "filename": "tests/compile-fail/while_loop.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/836554387a86c312a482c95bc9a217303cb399b0/tests%2Fcompile-fail%2Fwhile_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836554387a86c312a482c95bc9a217303cb399b0/tests%2Fcompile-fail%2Fwhile_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fwhile_loop.rs?ref=836554387a86c312a482c95bc9a217303cb399b0", "patch": "@@ -150,3 +150,18 @@ fn no_panic<T>(slice: &[T]) {\n         loop {} //~ERROR empty `loop {}` detected.\n     }\n }\n+\n+fn issue1017() {\n+    let r: Result<u32, u32> = Ok(42);\n+    let mut len = 1337;\n+\n+    loop {\n+        match r {\n+            Err(_) => len = 0,\n+            Ok(length) => {\n+                len = length;\n+                break\n+            }\n+        }\n+    }\n+}"}]}