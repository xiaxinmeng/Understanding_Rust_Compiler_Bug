{"sha": "b56ad148db0c69eb279c225f45d324b4e80e7367", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1NmFkMTQ4ZGIwYzY5ZWIyNzljMjI1ZjQ1ZDMyNGI0ZTgwZTczNjc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-12T14:28:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-12T14:28:40Z"}, "message": "Merge #4857\n\n4857: Fix invalid shorthand initialization diagnostic for tuple structs r=jonas-schievink a=OptimalStrategy\n\nInitializing tuple structs explicitly, like in the example below, produces a \"Shorthand struct initialization\" diagnostic that leads to a compilation error when applied:\r\n```rust\r\nstruct S(usize);\r\n\r\nfn main() { \r\n    let s = S { 0: 0 };  // OK, but triggers the diagnostic\r\n    // let s = S { 0 };  // Compilation error\r\n}\r\n```\r\n\r\nThis PR adds a check that the field name is not a literal.\n\nCo-authored-by: OptimalStrategy <george@usan-podgornov.com>\nCo-authored-by: OptimalStrategy <17456182+OptimalStrategy@users.noreply.github.com>", "tree": {"sha": "e900043096a53b92b96ea4eec77d158bc4991717", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e900043096a53b92b96ea4eec77d158bc4991717"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b56ad148db0c69eb279c225f45d324b4e80e7367", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe45EYCRBK7hj4Ov3rIwAAdHIIAAf4tQxGHkUDtrA0aqYEpFDR\n9JexXszGgl0pALxVzX6TPKf+fBvN8pMG39UlxGG27mdAjKn7OVAsvsKf4nTegfLb\n0dOP9nq2mufs/6Mst7CygHAAbFx2nsjzzA93XfWKNnQCWoi9Rpw+qilSzXS/rQdY\n59cVuNPCgG4tbn856FPAXXkBIL0hOhKvZd5IIz9Sr1gPSvEjX7aF9GNhsy35Yoa4\nNBSuMs1MyT3fE70RP3bQxYaF+1zsJrMarR6FdjhL8KW08gW3tu6uJFIqymyWaKlz\nvLKpN22c0M5EKBLjRWuZuuZLcAdIh2uVbBN7rXFV4fTDWu+okTFZPeb+xhtkOR8=\n=SO28\n-----END PGP SIGNATURE-----\n", "payload": "tree e900043096a53b92b96ea4eec77d158bc4991717\nparent f3d73865d6ce6989018b3ebee8e199853253bfd7\nparent 591b5ec2c15a83fd10da7049b5f3ea1a783d52ed\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1591972120 +0000\ncommitter GitHub <noreply@github.com> 1591972120 +0000\n\nMerge #4857\n\n4857: Fix invalid shorthand initialization diagnostic for tuple structs r=jonas-schievink a=OptimalStrategy\n\nInitializing tuple structs explicitly, like in the example below, produces a \"Shorthand struct initialization\" diagnostic that leads to a compilation error when applied:\r\n```rust\r\nstruct S(usize);\r\n\r\nfn main() { \r\n    let s = S { 0: 0 };  // OK, but triggers the diagnostic\r\n    // let s = S { 0 };  // Compilation error\r\n}\r\n```\r\n\r\nThis PR adds a check that the field name is not a literal.\n\nCo-authored-by: OptimalStrategy <george@usan-podgornov.com>\nCo-authored-by: OptimalStrategy <17456182+OptimalStrategy@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b56ad148db0c69eb279c225f45d324b4e80e7367", "html_url": "https://github.com/rust-lang/rust/commit/b56ad148db0c69eb279c225f45d324b4e80e7367", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b56ad148db0c69eb279c225f45d324b4e80e7367/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3d73865d6ce6989018b3ebee8e199853253bfd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3d73865d6ce6989018b3ebee8e199853253bfd7", "html_url": "https://github.com/rust-lang/rust/commit/f3d73865d6ce6989018b3ebee8e199853253bfd7"}, {"sha": "591b5ec2c15a83fd10da7049b5f3ea1a783d52ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/591b5ec2c15a83fd10da7049b5f3ea1a783d52ed", "html_url": "https://github.com/rust-lang/rust/commit/591b5ec2c15a83fd10da7049b5f3ea1a783d52ed"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "e1bfd72f96af4d310332b70473b66b01bb2a7d5d", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b56ad148db0c69eb279c225f45d324b4e80e7367/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56ad148db0c69eb279c225f45d324b4e80e7367/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=b56ad148db0c69eb279c225f45d324b4e80e7367", "patch": "@@ -187,7 +187,8 @@ fn check_struct_shorthand_initialization(\n         if let (Some(name_ref), Some(expr)) = (record_field.name_ref(), record_field.expr()) {\n             let field_name = name_ref.syntax().text().to_string();\n             let field_expr = expr.syntax().text().to_string();\n-            if field_name == field_expr {\n+            let field_name_is_tup_index = name_ref.as_tuple_field().is_some();\n+            if field_name == field_expr && !field_name_is_tup_index {\n                 let mut edit_builder = TextEditBuilder::default();\n                 edit_builder.delete(record_field.syntax().text_range());\n                 edit_builder.insert(record_field.syntax().text_range().start(), field_name);\n@@ -719,6 +720,18 @@ mod tests {\n         \"#,\n             check_struct_shorthand_initialization,\n         );\n+        check_not_applicable(\n+            r#\"\n+            struct A(usize);\n+\n+            fn main() {\n+                A {\n+                    0: 0\n+                }\n+            }\n+        \"#,\n+            check_struct_shorthand_initialization,\n+        );\n \n         check_apply(\n             r#\""}]}