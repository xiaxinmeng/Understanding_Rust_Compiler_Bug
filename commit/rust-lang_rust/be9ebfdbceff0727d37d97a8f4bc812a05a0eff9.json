{"sha": "be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "node_id": "C_kwDOAAsO6NoAKGJlOWViZmRiY2VmZjA3MjdkMzdkOTdhOGY0YmM4MTJhMDVhMGVmZjk", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-22T13:17:34Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-27T07:53:42Z"}, "message": "privacy: port \"field is private\" diag\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "e59f767750ed52f817c5677a6f705754d39395fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e59f767750ed52f817c5677a6f705754d39395fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "html_url": "https://github.com/rust-lang/rust/commit/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae612241dc1f474cfa0b3a3895599c984a43caeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae612241dc1f474cfa0b3a3895599c984a43caeb", "html_url": "https://github.com/rust-lang/rust/commit/ae612241dc1f474cfa0b3a3895599c984a43caeb"}], "stats": {"total": 71, "additions": 52, "deletions": 19}, "files": [{"sha": "96d9449db57c076c5db7f44fa8c9dc92c12a479d", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "patch": "@@ -4280,6 +4280,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n+ \"rustc_macros\",\n  \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\","}, {"sha": "737aee5e364e1986e319a8df60b4bfa4aff2d117", "filename": "compiler/rustc_error_messages/locales/en-US/privacy.ftl", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl?ref=be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "patch": "@@ -0,0 +1,3 @@\n+privacy-field-is-private = field `{$field_name}` of {$variant_descr} `{$def_path_str}` is private\n+privacy-field-is-private-is-update-syntax-label = field `{$field_name}` is private\n+privacy-field-is-private-label = private field"}, {"sha": "90eb5ef54462d87181a41f1d0549746d9ca37360", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "patch": "@@ -32,6 +32,7 @@ pub use unic_langid::{langid, LanguageIdentifier};\n // Generates `DEFAULT_LOCALE_RESOURCES` static and `fluent_generated` module.\n fluent_messages! {\n     parser => \"../locales/en-US/parser.ftl\",\n+    privacy => \"../locales/en-US/privacy.ftl\",\n     typeck => \"../locales/en-US/typeck.ftl\",\n     builtin_macros => \"../locales/en-US/builtin_macros.ftl\",\n }"}, {"sha": "5785921fb1eda3b14f6d517700aa05c9ab01daa8", "filename": "compiler/rustc_privacy/Cargo.toml", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/compiler%2Frustc_privacy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/compiler%2Frustc_privacy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2FCargo.toml?ref=be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "patch": "@@ -4,14 +4,15 @@ version = \"0.0.0\"\n edition = \"2021\"\n \n [dependencies]\n-rustc_middle = { path = \"../rustc_middle\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_attr = { path = \"../rustc_attr\" }\n+rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_hir = { path = \"../rustc_hir\" }\n-rustc_typeck = { path = \"../rustc_typeck\" }\n+rustc_macros = { path = \"../rustc_macros\" }\n+rustc_middle = { path = \"../rustc_middle\" }\n rustc_session = { path = \"../rustc_session\" }\n rustc_span = { path = \"../rustc_span\" }\n-rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_trait_selection = { path = \"../rustc_trait_selection\" }\n+rustc_typeck = { path = \"../rustc_typeck\" }\n tracing = \"0.1\""}, {"sha": "b101fae0f9414fb4a2c265f3648ca97a1221de40", "filename": "compiler/rustc_privacy/src/errors.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/compiler%2Frustc_privacy%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/compiler%2Frustc_privacy%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Ferrors.rs?ref=be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "patch": "@@ -0,0 +1,29 @@\n+use rustc_macros::{SessionDiagnostic, SessionSubdiagnostic};\n+use rustc_span::{Span, Symbol};\n+\n+#[derive(SessionDiagnostic)]\n+#[error(privacy::field_is_private, code = \"E0451\")]\n+pub struct FieldIsPrivate {\n+    #[primary_span]\n+    pub span: Span,\n+    pub field_name: Symbol,\n+    pub variant_descr: &'static str,\n+    pub def_path_str: String,\n+    #[subdiagnostic]\n+    pub label: FieldIsPrivateLabel,\n+}\n+\n+#[derive(SessionSubdiagnostic)]\n+pub enum FieldIsPrivateLabel {\n+    #[label(privacy::field_is_private_is_update_syntax_label)]\n+    IsUpdateSyntax {\n+        #[primary_span]\n+        span: Span,\n+        field_name: Symbol,\n+    },\n+    #[label(privacy::field_is_private_label)]\n+    Other {\n+        #[primary_span]\n+        span: Span,\n+    },\n+}"}, {"sha": "efe1e4bad367dd2f9809654cd6c0880188b4e6a6", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "patch": "@@ -5,6 +5,8 @@\n #![recursion_limit = \"256\"]\n #![allow(rustc::potential_query_instability)]\n \n+mod errors;\n+\n use rustc_ast::MacroDef;\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n@@ -34,6 +36,8 @@ use std::marker::PhantomData;\n use std::ops::ControlFlow;\n use std::{cmp, fmt, mem};\n \n+use errors::{FieldIsPrivate, FieldIsPrivateLabel};\n+\n ////////////////////////////////////////////////////////////////////////////////\n /// Generic infrastructure used to implement specific visitors below.\n ////////////////////////////////////////////////////////////////////////////////\n@@ -935,23 +939,17 @@ impl<'tcx> NamePrivacyVisitor<'tcx> {\n         let hir_id = self.tcx.hir().local_def_id_to_hir_id(self.current_item);\n         let def_id = self.tcx.adjust_ident_and_get_scope(ident, def.did(), hir_id).1;\n         if !field.vis.is_accessible_from(def_id, self.tcx) {\n-            let label = if in_update_syntax {\n-                format!(\"field `{}` is private\", field.name)\n-            } else {\n-                \"private field\".to_string()\n-            };\n-\n-            struct_span_err!(\n-                self.tcx.sess,\n+            self.tcx.sess.emit_err(FieldIsPrivate {\n                 span,\n-                E0451,\n-                \"field `{}` of {} `{}` is private\",\n-                field.name,\n-                def.variant_descr(),\n-                self.tcx.def_path_str(def.did())\n-            )\n-            .span_label(span, label)\n-            .emit();\n+                field_name: field.name,\n+                variant_descr: def.variant_descr(),\n+                def_path_str: self.tcx.def_path_str(def.did()),\n+                label: if in_update_syntax {\n+                    FieldIsPrivateLabel::IsUpdateSyntax { span, field_name: field.name }\n+                } else {\n+                    FieldIsPrivateLabel::Other { span }\n+                },\n+            });\n         }\n     }\n }"}]}