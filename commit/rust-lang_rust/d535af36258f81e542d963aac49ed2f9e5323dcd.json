{"sha": "d535af36258f81e542d963aac49ed2f9e5323dcd", "node_id": "C_kwDOAAsO6NoAKGQ1MzVhZjM2MjU4ZjgxZTU0MmQ5NjNhYWM0OWVkMmY5ZTUzMjNkY2Q", "commit": {"author": {"name": "Erik Hofmayer", "email": "ehofmayer@outlook.de", "date": "2023-04-06T20:48:52Z"}, "committer": {"name": "Erik Hofmayer", "email": "ehofmayer@outlook.de", "date": "2023-04-16T10:50:32Z"}, "message": "Add needs-git-hash header to compiletest\n\nThis header can be used for tests which check the output of `--version --verbose` commands.", "tree": {"sha": "6a77387a8f77748ec5d2aba6b93dd7a686240559", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a77387a8f77748ec5d2aba6b93dd7a686240559"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d535af36258f81e542d963aac49ed2f9e5323dcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d535af36258f81e542d963aac49ed2f9e5323dcd", "html_url": "https://github.com/rust-lang/rust/commit/d535af36258f81e542d963aac49ed2f9e5323dcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d535af36258f81e542d963aac49ed2f9e5323dcd/comments", "author": {"login": "duckymirror", "id": 33291860, "node_id": "MDQ6VXNlcjMzMjkxODYw", "avatar_url": "https://avatars.githubusercontent.com/u/33291860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duckymirror", "html_url": "https://github.com/duckymirror", "followers_url": "https://api.github.com/users/duckymirror/followers", "following_url": "https://api.github.com/users/duckymirror/following{/other_user}", "gists_url": "https://api.github.com/users/duckymirror/gists{/gist_id}", "starred_url": "https://api.github.com/users/duckymirror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duckymirror/subscriptions", "organizations_url": "https://api.github.com/users/duckymirror/orgs", "repos_url": "https://api.github.com/users/duckymirror/repos", "events_url": "https://api.github.com/users/duckymirror/events{/privacy}", "received_events_url": "https://api.github.com/users/duckymirror/received_events", "type": "User", "site_admin": false}, "committer": {"login": "duckymirror", "id": 33291860, "node_id": "MDQ6VXNlcjMzMjkxODYw", "avatar_url": "https://avatars.githubusercontent.com/u/33291860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duckymirror", "html_url": "https://github.com/duckymirror", "followers_url": "https://api.github.com/users/duckymirror/followers", "following_url": "https://api.github.com/users/duckymirror/following{/other_user}", "gists_url": "https://api.github.com/users/duckymirror/gists{/gist_id}", "starred_url": "https://api.github.com/users/duckymirror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duckymirror/subscriptions", "organizations_url": "https://api.github.com/users/duckymirror/orgs", "repos_url": "https://api.github.com/users/duckymirror/repos", "events_url": "https://api.github.com/users/duckymirror/events{/privacy}", "received_events_url": "https://api.github.com/users/duckymirror/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28d27fd1644b75a6bbd3f7ff85169cfd374e8022", "url": "https://api.github.com/repos/rust-lang/rust/commits/28d27fd1644b75a6bbd3f7ff85169cfd374e8022", "html_url": "https://github.com/rust-lang/rust/commit/28d27fd1644b75a6bbd3f7ff85169cfd374e8022"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "cbdacfc5f80be36750098dd87239798f4c2d4cd9", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d535af36258f81e542d963aac49ed2f9e5323dcd/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d535af36258f81e542d963aac49ed2f9e5323dcd/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=d535af36258f81e542d963aac49ed2f9e5323dcd", "patch": "@@ -1804,6 +1804,10 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n \n         cmd.arg(\"--channel\").arg(&builder.config.channel);\n \n+        if !builder.config.ignore_git {\n+            cmd.arg(\"--git-hash\");\n+        }\n+\n         if let Some(commit) = builder.config.download_rustc_commit() {\n             cmd.env(\"FAKE_DOWNLOAD_RUSTC_PREFIX\", format!(\"/rustc/{commit}\"));\n         }"}, {"sha": "3f36cc5bbcc91e204131ee41c37e81246eb93a99", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d535af36258f81e542d963aac49ed2f9e5323dcd/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d535af36258f81e542d963aac49ed2f9e5323dcd/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=d535af36258f81e542d963aac49ed2f9e5323dcd", "patch": "@@ -303,6 +303,9 @@ pub struct Config {\n     /// The current Rust channel\n     pub channel: String,\n \n+    /// Whether adding git commit information such as the commit hash has been enabled for building\n+    pub git_hash: bool,\n+\n     /// The default Rust edition\n     pub edition: Option<String>,\n "}, {"sha": "81179480ed8100e33eb7b365cebd25e81fbdc844", "filename": "src/tools/compiletest/src/header/needs.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d535af36258f81e542d963aac49ed2f9e5323dcd/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fneeds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d535af36258f81e542d963aac49ed2f9e5323dcd/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fneeds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fneeds.rs?ref=d535af36258f81e542d963aac49ed2f9e5323dcd", "patch": "@@ -115,6 +115,11 @@ pub(super) fn handle_needs(\n             condition: cache.x86_64_dlltool,\n             ignore_reason: \"ignored when dlltool for x86_64 is not present\",\n         },\n+        Need {\n+            name: \"needs-git-hash\",\n+            condition: config.git_hash,\n+            ignore_reason: \"ignored when git hashes have been omitted for building\",\n+        },\n     ];\n \n     let (name, comment) = match ln.split_once([':', ' ']) {"}, {"sha": "362fba11697befc67b47a1b8b5a3364e5cbd076c", "filename": "src/tools/compiletest/src/header/tests.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d535af36258f81e542d963aac49ed2f9e5323dcd/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d535af36258f81e542d963aac49ed2f9e5323dcd/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs?ref=d535af36258f81e542d963aac49ed2f9e5323dcd", "patch": "@@ -251,6 +251,16 @@ fn debugger() {\n     assert!(check_ignore(&config, \"// ignore-lldb\"));\n }\n \n+#[test]\n+fn git_hash() {\n+    let mut config = config();\n+    config.git_hash = false;\n+    assert!(check_ignore(&config, \"// needs-git-hash\"));\n+\n+    config.git_hash = true;\n+    assert!(!check_ignore(&config, \"// needs-git-hash\"));\n+}\n+\n #[test]\n fn sanitizers() {\n     let mut config = config();"}, {"sha": "c4bef998f3171d45e9a4e01cb1bef300782f9f81", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d535af36258f81e542d963aac49ed2f9e5323dcd/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d535af36258f81e542d963aac49ed2f9e5323dcd/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=d535af36258f81e542d963aac49ed2f9e5323dcd", "patch": "@@ -159,6 +159,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         .optflag(\"\", \"nocapture\", \"\")\n         .optflag(\"h\", \"help\", \"show this message\")\n         .reqopt(\"\", \"channel\", \"current Rust channel\", \"CHANNEL\")\n+        .optflag(\"\", \"git-hash\", \"run tests which rely on commit version being compiled into the binaries\")\n         .optopt(\"\", \"edition\", \"default Rust edition\", \"EDITION\");\n \n     let (argv0, args_) = args.split_first().unwrap();\n@@ -302,6 +303,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         rustfix_coverage: matches.opt_present(\"rustfix-coverage\"),\n         has_tidy,\n         channel: matches.opt_str(\"channel\").unwrap(),\n+        git_hash: matches.opt_present(\"git-hash\"),\n         edition: matches.opt_str(\"edition\"),\n \n         cc: matches.opt_str(\"cc\").unwrap(),"}]}