{"sha": "e7944419d4b7403c51028204ec5c4c53e776e94a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3OTQ0NDE5ZDRiNzQwM2M1MTAyODIwNGVjNWM0YzUzZTc3NmU5NGE=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-05T17:44:23Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-05T17:44:23Z"}, "message": "Use Deadlock machine stop uniformly", "tree": {"sha": "bc8c05e3c72b5c3e45e79e60ce77103fc698ce1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc8c05e3c72b5c3e45e79e60ce77103fc698ce1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7944419d4b7403c51028204ec5c4c53e776e94a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7944419d4b7403c51028204ec5c4c53e776e94a", "html_url": "https://github.com/rust-lang/rust/commit/e7944419d4b7403c51028204ec5c4c53e776e94a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7944419d4b7403c51028204ec5c4c53e776e94a/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "100141f57c27d0b282aec6156d60ab9d26583a47", "url": "https://api.github.com/repos/rust-lang/rust/commits/100141f57c27d0b282aec6156d60ab9d26583a47", "html_url": "https://github.com/rust-lang/rust/commit/100141f57c27d0b282aec6156d60ab9d26583a47"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "90d7104b9e7b0671c1a09f11cc14acc8a78fb4b0", "filename": "src/shims/sync.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7944419d4b7403c51028204ec5c4c53e776e94a/src%2Fshims%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7944419d4b7403c51028204ec5c4c53e776e94a/src%2Fshims%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fsync.rs?ref=e7944419d4b7403c51028204ec5c4c53e776e94a", "patch": "@@ -352,9 +352,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let readers = rwlock_get_readers(this, rwlock_op)?.to_u32()?;\n         let writers = rwlock_get_writers(this, rwlock_op)?.to_u32()?;\n         if writers != 0 {\n-            throw_unsup_format!(\n-                \"Deadlock due to read-locking a pthreads read-write lock while it is already write-locked\"\n-            );\n+            throw_machine_stop!(TerminationInfo::Deadlock);\n         } else {\n             match readers.checked_add(1) {\n                 Some(new_readers) => {\n@@ -390,13 +388,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let readers = rwlock_get_readers(this, rwlock_op)?.to_u32()?;\n         let writers = rwlock_get_writers(this, rwlock_op)?.to_u32()?;\n         if readers != 0 {\n-            throw_unsup_format!(\n-                \"Deadlock due to write-locking a pthreads read-write lock while it is already read-locked\"\n-            );\n+            throw_machine_stop!(TerminationInfo::Deadlock);\n         } else if writers != 0 {\n-            throw_unsup_format!(\n-                \"Deadlock due to write-locking a pthreads read-write lock while it is already write-locked\"\n-            );\n+            throw_machine_stop!(TerminationInfo::Deadlock);\n         } else {\n             rwlock_set_writers(this, rwlock_op, Scalar::from_u32(1))?;\n             Ok(0)"}]}