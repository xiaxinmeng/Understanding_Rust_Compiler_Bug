{"sha": "0ac5e48069bcd2e54fa72086d0a9a206cf1a7bcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhYzVlNDgwNjliY2QyZTU0ZmE3MjA4NmQwYTlhMjA2Y2YxYTdiY2Y=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-04-06T19:00:00Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2016-04-07T09:17:24Z"}, "message": "test the substs ppaux code both with and without -Z verbose", "tree": {"sha": "266572ac72e206331eddbde6edd38a61570dbffb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/266572ac72e206331eddbde6edd38a61570dbffb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ac5e48069bcd2e54fa72086d0a9a206cf1a7bcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ac5e48069bcd2e54fa72086d0a9a206cf1a7bcf", "html_url": "https://github.com/rust-lang/rust/commit/0ac5e48069bcd2e54fa72086d0a9a206cf1a7bcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ac5e48069bcd2e54fa72086d0a9a206cf1a7bcf/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "832b7075b6c2e4ed37978d00a7c629e468f3dab1", "url": "https://api.github.com/repos/rust-lang/rust/commits/832b7075b6c2e4ed37978d00a7c629e468f3dab1", "html_url": "https://github.com/rust-lang/rust/commit/832b7075b6c2e4ed37978d00a7c629e468f3dab1"}], "stats": {"total": 111, "additions": 63, "deletions": 48}, "files": [{"sha": "6a9827387efc5889bae56f5106d82c105e5e9f12", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0ac5e48069bcd2e54fa72086d0a9a206cf1a7bcf/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ac5e48069bcd2e54fa72086d0a9a206cf1a7bcf/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=0ac5e48069bcd2e54fa72086d0a9a206cf1a7bcf", "patch": "@@ -436,7 +436,8 @@ pub fn report_selection_error<'a, 'tcx>(infcx: &InferCtxt<'a, 'tcx>,\n                                 // If we can't show anything useful, try to find\n                                 // similar impls.\n \n-                                let impl_candidates = find_similar_impl_candidates(infcx, trait_ref);\n+                                let impl_candidates =\n+                                    find_similar_impl_candidates(infcx, trait_ref);\n                                 if impl_candidates.len() > 0 {\n                                     report_similar_impl_candidates(obligation.cause.span,\n                                                                    &mut err, &impl_candidates);"}, {"sha": "851e31b942ed1bca99742e3468edf8e7ca8b8c4b", "filename": "src/test/compile-fail/substs-ppaux.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/0ac5e48069bcd2e54fa72086d0a9a206cf1a7bcf/src%2Ftest%2Fcompile-fail%2Fsubsts-ppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ac5e48069bcd2e54fa72086d0a9a206cf1a7bcf/src%2Ftest%2Fcompile-fail%2Fsubsts-ppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsubsts-ppaux.rs?ref=0ac5e48069bcd2e54fa72086d0a9a206cf1a7bcf", "patch": "@@ -0,0 +1,61 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n+// revisions: verbose normal\n+//\n+//[verbose] compile-flags: -Z verbose\n+\n+trait Foo<'b, 'c, S=u32> {\n+    fn bar<'a, T>() where T: 'a {}\n+    fn baz() {}\n+}\n+\n+impl<'a,'b,T,S> Foo<'a, 'b, S> for T {}\n+\n+fn main() {}\n+\n+fn foo<'z>() where &'z (): Sized {\n+    let x: () = <i8 as Foo<'static, 'static,  u8>>::bar::<'static, char>;\n+    //[verbose]~^ ERROR mismatched types\n+    //[verbose]~| expected `()`\n+    //[verbose]~| found `fn() {<i8 as Foo<ReStatic, ReStatic, u8>>::bar::<ReStatic, char>}`\n+    //[normal]~^^^^ ERROR mismatched types\n+    //[normal]~| expected `()`\n+    //[normal]~| found  `fn() {<i8 as Foo<'static, 'static, u8>>::bar::<'static, char>}`\n+\n+\n+    let x: () = <i8 as Foo<'static, 'static,  u32>>::bar::<'static, char>;\n+    //[verbose]~^ ERROR mismatched types\n+    //[verbose]~| expected `()`\n+    //[verbose]~| found `fn() {<i8 as Foo<ReStatic, ReStatic, u32>>::bar::<ReStatic, char>}`\n+    //[normal]~^^^^ ERROR mismatched types\n+    //[normal]~| expected `()`\n+    //[normal]~| found `fn() {<i8 as Foo<'static, 'static>>::bar::<'static, char>}`\n+\n+    let x: () = <i8 as Foo<'static, 'static,  u8>>::baz;\n+    //[verbose]~^ ERROR mismatched types\n+    //[verbose]~| expected `()`\n+    //[verbose]~| found `fn() {<i8 as Foo<ReStatic, ReStatic, u8>>::baz}`\n+    //[normal]~^^^^ ERROR mismatched types\n+    //[normal]~| expected `()`\n+    //[normal]~| found `fn() {<i8 as Foo<'static, 'static, u8>>::baz}`\n+\n+    let x: () = foo::<'static>;\n+    //[verbose]~^ ERROR mismatched types\n+    //[verbose]~| expected `()`\n+    //[verbose]~| found `fn() {foo::<ReStatic>}`\n+    //[normal]~^^^^ ERROR mismatched types\n+    //[normal]~| expected `()`\n+    //[normal]~| found `fn() {foo::<'static>}`\n+\n+    <str as Foo<u8>>::bar;\n+    //[verbose]~^ ERROR `str: std::marker::Sized` is not satisfied\n+    //[normal]~^^ ERROR `str: std::marker::Sized` is not satisfied\n+}"}, {"sha": "0ee7e67bebb19e17bfece9543b0ad62c8ad25428", "filename": "src/test/compile-fail/substs-verbose.rs", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/832b7075b6c2e4ed37978d00a7c629e468f3dab1/src%2Ftest%2Fcompile-fail%2Fsubsts-verbose.rs", "raw_url": "https://github.com/rust-lang/rust/raw/832b7075b6c2e4ed37978d00a7c629e468f3dab1/src%2Ftest%2Fcompile-fail%2Fsubsts-verbose.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsubsts-verbose.rs?ref=832b7075b6c2e4ed37978d00a7c629e468f3dab1", "patch": "@@ -1,47 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-//\n-// compile-flags: -Z verbose\n-\n-// TODO nikomatsakis: test with both verbose and without\n-\n-trait Foo<'b, 'c, S=u32> {\n-    fn bar<'a, T>() where T: 'a {}\n-    fn baz() {}\n-}\n-\n-impl<'a,'b,T,S> Foo<'a, 'b, S> for T {}\n-\n-fn main() {}\n-\n-fn foo<'z>() where &'z (): Sized {\n-    let x: () = <i8 as Foo<'static, 'static,  u8>>::bar::<'static, char>;\n-    //~^ ERROR mismatched types\n-    //~| expected `()`\n-    //~| found `fn() {<i8 as Foo<ReStatic, ReStatic, u8>>::bar::<ReStatic, char>}`\n-\n-    let x: () = <i8 as Foo<'static, 'static,  u32>>::bar::<'static, char>;\n-    //~^ ERROR mismatched types\n-    //~| expected `()`\n-    //~| found `fn() {<i8 as Foo<ReStatic, ReStatic, u32>>::bar::<ReStatic, char>}`\n-\n-    let x: () = <i8 as Foo<'static, 'static,  u8>>::baz;\n-    //~^ ERROR mismatched types\n-    //~| expected `()`\n-    //~| found `fn() {<i8 as Foo<ReStatic, ReStatic, u8>>::baz}`\n-\n-    let x: () = foo::<'static>;\n-    //~^ ERROR mismatched types\n-    //~| expected `()`\n-    //~| found `fn() {foo::<ReStatic>}`\n-\n-    <str as Foo<u8>>::bar;\n-    //~^ ERROR `str: std::marker::Sized` is not satisfied\n-}"}]}