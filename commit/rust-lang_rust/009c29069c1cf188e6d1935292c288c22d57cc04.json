{"sha": "009c29069c1cf188e6d1935292c288c22d57cc04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwOWMyOTA2OWMxY2YxODhlNmQxOTM1MjkyYzI4OGMyMmQ1N2NjMDQ=", "commit": {"author": {"name": "daubaris", "email": "paulius.daubaris@gmail.com", "date": "2018-09-04T15:56:48Z"}, "committer": {"name": "daubaris", "email": "paulius.daubaris@gmail.com", "date": "2018-09-04T15:56:48Z"}, "message": "switched to ticks for chars", "tree": {"sha": "d456c800c6fb87846208c4b45cae7f46723b9e32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d456c800c6fb87846208c4b45cae7f46723b9e32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/009c29069c1cf188e6d1935292c288c22d57cc04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/009c29069c1cf188e6d1935292c288c22d57cc04", "html_url": "https://github.com/rust-lang/rust/commit/009c29069c1cf188e6d1935292c288c22d57cc04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/009c29069c1cf188e6d1935292c288c22d57cc04/comments", "author": {"login": "daubaris", "id": 16244425, "node_id": "MDQ6VXNlcjE2MjQ0NDI1", "avatar_url": "https://avatars.githubusercontent.com/u/16244425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daubaris", "html_url": "https://github.com/daubaris", "followers_url": "https://api.github.com/users/daubaris/followers", "following_url": "https://api.github.com/users/daubaris/following{/other_user}", "gists_url": "https://api.github.com/users/daubaris/gists{/gist_id}", "starred_url": "https://api.github.com/users/daubaris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daubaris/subscriptions", "organizations_url": "https://api.github.com/users/daubaris/orgs", "repos_url": "https://api.github.com/users/daubaris/repos", "events_url": "https://api.github.com/users/daubaris/events{/privacy}", "received_events_url": "https://api.github.com/users/daubaris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daubaris", "id": 16244425, "node_id": "MDQ6VXNlcjE2MjQ0NDI1", "avatar_url": "https://avatars.githubusercontent.com/u/16244425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daubaris", "html_url": "https://github.com/daubaris", "followers_url": "https://api.github.com/users/daubaris/followers", "following_url": "https://api.github.com/users/daubaris/following{/other_user}", "gists_url": "https://api.github.com/users/daubaris/gists{/gist_id}", "starred_url": "https://api.github.com/users/daubaris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daubaris/subscriptions", "organizations_url": "https://api.github.com/users/daubaris/orgs", "repos_url": "https://api.github.com/users/daubaris/repos", "events_url": "https://api.github.com/users/daubaris/events{/privacy}", "received_events_url": "https://api.github.com/users/daubaris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db391c46130c823d9087ffb6b8855cf0da43238d", "url": "https://api.github.com/repos/rust-lang/rust/commits/db391c46130c823d9087ffb6b8855cf0da43238d", "html_url": "https://github.com/rust-lang/rust/commit/db391c46130c823d9087ffb6b8855cf0da43238d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f9cdffea79c5096efe22f064cf9600015c3b5cee", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/009c29069c1cf188e6d1935292c288c22d57cc04/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009c29069c1cf188e6d1935292c288c22d57cc04/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=009c29069c1cf188e6d1935292c288c22d57cc04", "patch": "@@ -149,7 +149,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                         let start = start.map_or(\"\".to_owned(), |x| Sugg::hir(cx, x, \"x\").to_string());\n                         let end = Sugg::hir(cx, y, \"y\");\n                         if let Some(is_wrapped) = &snippet_opt(cx, expr.span) {\n-                            if is_wrapped.starts_with(\"(\") && is_wrapped.ends_with(\")\") {\n+                            if is_wrapped.starts_with('(') && is_wrapped.ends_with(')') {\n                                 db.span_suggestion(expr.span,\n                                            \"use\",\n                                            format!(\"({}..={})\", start, end));"}]}