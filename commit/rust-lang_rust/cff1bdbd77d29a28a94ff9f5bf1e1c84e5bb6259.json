{"sha": "cff1bdbd77d29a28a94ff9f5bf1e1c84e5bb6259", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmZjFiZGJkNzdkMjlhMjhhOTRmZjlmNWJmMWUxYzg0ZTViYjYyNTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-10T15:29:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-10T15:29:40Z"}, "message": "Auto merge of #60588 - cuviper:be-simd-swap, r=alexcrichton\n\nRevert \"Disable big-endian simd in swap_nonoverlapping_bytes\"\n\nThis reverts commit 77bd4dc65406ba3cedbc779e6f6280868231912e (#43159).\n\nIssue #42778 was formerly easy to reproduce on two big-endian targets,\n`powerpc64` and `s390x`, so we disabled SIMD on this function for all\nbig-endian targets as a workaround.\n\nI have re-tested this code on `powerpc64` and `s390x`, each with the\nbundled LLVM 8 and with external LLVM 7 and LLVM 6, and the problems no\nlonger appear. So it seems safe to remove this workaround, although I'm\nstill a little uncomfortable that we never found a root-cause...\n\nCloses #42778.\nr? @arielb1", "tree": {"sha": "d25f94d26cd00383f33ca22b1df396293cae2061", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d25f94d26cd00383f33ca22b1df396293cae2061"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cff1bdbd77d29a28a94ff9f5bf1e1c84e5bb6259", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cff1bdbd77d29a28a94ff9f5bf1e1c84e5bb6259", "html_url": "https://github.com/rust-lang/rust/commit/cff1bdbd77d29a28a94ff9f5bf1e1c84e5bb6259", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cff1bdbd77d29a28a94ff9f5bf1e1c84e5bb6259/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ac53da03dad79655e2f3e65a58f94a2f3314d5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ac53da03dad79655e2f3e65a58f94a2f3314d5f", "html_url": "https://github.com/rust-lang/rust/commit/0ac53da03dad79655e2f3e65a58f94a2f3314d5f"}, {"sha": "9a0a87a654303c69856d55dac419a2c440efc3d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a0a87a654303c69856d55dac419a2c440efc3d4", "html_url": "https://github.com/rust-lang/rust/commit/9a0a87a654303c69856d55dac419a2c440efc3d4"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "a4e7ea5eff5ba35a182b81bca30762b9a5d984db", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cff1bdbd77d29a28a94ff9f5bf1e1c84e5bb6259/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cff1bdbd77d29a28a94ff9f5bf1e1c84e5bb6259/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=cff1bdbd77d29a28a94ff9f5bf1e1c84e5bb6259", "patch": "@@ -374,10 +374,7 @@ unsafe fn swap_nonoverlapping_bytes(x: *mut u8, y: *mut u8, len: usize) {\n     // #[repr(simd)], even if we don't actually use this struct directly.\n     //\n     // FIXME repr(simd) broken on emscripten and redox\n-    // It's also broken on big-endian powerpc64 and s390x.  #42778\n-    #[cfg_attr(not(any(target_os = \"emscripten\", target_os = \"redox\",\n-                       target_endian = \"big\")),\n-               repr(simd))]\n+    #[cfg_attr(not(any(target_os = \"emscripten\", target_os = \"redox\")), repr(simd))]\n     struct Block(u64, u64, u64, u64);\n     struct UnalignedBlock(u64, u64, u64, u64);\n "}]}