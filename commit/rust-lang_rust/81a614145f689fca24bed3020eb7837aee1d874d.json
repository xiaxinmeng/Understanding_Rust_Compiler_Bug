{"sha": "81a614145f689fca24bed3020eb7837aee1d874d", "node_id": "C_kwDOAAsO6NoAKDgxYTYxNDE0NWY2ODlmY2EyNGJlZDMwMjBlYjc4MzdhZWUxZDg3NGQ", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-04-28T17:17:46Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-04-28T17:24:48Z"}, "message": "uplift `clippy::clone_double_ref` as `suspicious_double_ref_op`", "tree": {"sha": "e821cdb8285f6eb07e894a937f9f78ae8e424670", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e821cdb8285f6eb07e894a937f9f78ae8e424670"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81a614145f689fca24bed3020eb7837aee1d874d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81a614145f689fca24bed3020eb7837aee1d874d", "html_url": "https://github.com/rust-lang/rust/commit/81a614145f689fca24bed3020eb7837aee1d874d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81a614145f689fca24bed3020eb7837aee1d874d/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0339d4e982e21dd29c473f945bf23a0a119648f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0339d4e982e21dd29c473f945bf23a0a119648f5", "html_url": "https://github.com/rust-lang/rust/commit/0339d4e982e21dd29c473f945bf23a0a119648f5"}], "stats": {"total": 231, "additions": 61, "deletions": 170}, "files": [{"sha": "fa726a649370e7825b4a99be0a0cdfa086df4009", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/81a614145f689fca24bed3020eb7837aee1d874d/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a614145f689fca24bed3020eb7837aee1d874d/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=81a614145f689fca24bed3020eb7837aee1d874d", "patch": "@@ -313,7 +313,6 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::methods::CHARS_NEXT_CMP_INFO,\n     crate::methods::CLEAR_WITH_DRAIN_INFO,\n     crate::methods::CLONED_INSTEAD_OF_COPIED_INFO,\n-    crate::methods::CLONE_DOUBLE_REF_INFO,\n     crate::methods::CLONE_ON_COPY_INFO,\n     crate::methods::CLONE_ON_REF_PTR_INFO,\n     crate::methods::COLLAPSIBLE_STR_REPLACE_INFO,"}, {"sha": "65fd50dff58465b3995189c1a51eea6e3aba507a", "filename": "clippy_lints/src/methods/clone_on_copy.rs", "status": "modified", "additions": 2, "deletions": 38, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/81a614145f689fca24bed3020eb7837aee1d874d/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a614145f689fca24bed3020eb7837aee1d874d/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_copy.rs?ref=81a614145f689fca24bed3020eb7837aee1d874d", "patch": "@@ -1,15 +1,13 @@\n-use clippy_utils::diagnostics::{span_lint_and_sugg, span_lint_and_then};\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::get_parent_node;\n use clippy_utils::source::snippet_with_context;\n-use clippy_utils::sugg;\n use clippy_utils::ty::is_copy;\n use rustc_errors::Applicability;\n use rustc_hir::{BindingAnnotation, ByRef, Expr, ExprKind, MatchSource, Node, PatKind, QPath};\n use rustc_lint::LateContext;\n use rustc_middle::ty::{self, adjustment::Adjust, print::with_forced_trimmed_paths};\n use rustc_span::symbol::{sym, Symbol};\n \n-use super::CLONE_DOUBLE_REF;\n use super::CLONE_ON_COPY;\n \n /// Checks for the `CLONE_ON_COPY` lint.\n@@ -42,41 +40,7 @@ pub(super) fn check(\n \n     let ty = cx.typeck_results().expr_ty(expr);\n     if let ty::Ref(_, inner, _) = arg_ty.kind() {\n-        if let ty::Ref(_, innermost, _) = inner.kind() {\n-            span_lint_and_then(\n-                cx,\n-                CLONE_DOUBLE_REF,\n-                expr.span,\n-                &with_forced_trimmed_paths!(format!(\n-                    \"using `clone` on a double-reference; \\\n-                    this will copy the reference of type `{ty}` instead of cloning the inner type\"\n-                )),\n-                |diag| {\n-                    if let Some(snip) = sugg::Sugg::hir_opt(cx, arg) {\n-                        let mut ty = innermost;\n-                        let mut n = 0;\n-                        while let ty::Ref(_, inner, _) = ty.kind() {\n-                            ty = inner;\n-                            n += 1;\n-                        }\n-                        let refs = \"&\".repeat(n + 1);\n-                        let derefs = \"*\".repeat(n);\n-                        let explicit = with_forced_trimmed_paths!(format!(\"<{refs}{ty}>::clone({snip})\"));\n-                        diag.span_suggestion(\n-                            expr.span,\n-                            \"try dereferencing it\",\n-                            with_forced_trimmed_paths!(format!(\"{refs}({derefs}{}).clone()\", snip.deref())),\n-                            Applicability::MaybeIncorrect,\n-                        );\n-                        diag.span_suggestion(\n-                            expr.span,\n-                            \"or try being explicit if you are sure, that you want to clone a reference\",\n-                            explicit,\n-                            Applicability::MaybeIncorrect,\n-                        );\n-                    }\n-                },\n-            );\n+        if let ty::Ref(..) = inner.kind() {\n             return; // don't report clone_on_copy\n         }\n     }"}, {"sha": "e4a659d3ce73c1e650db16792f8b9404defded77", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/81a614145f689fca24bed3020eb7837aee1d874d/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a614145f689fca24bed3020eb7837aee1d874d/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=81a614145f689fca24bed3020eb7837aee1d874d", "patch": "@@ -984,29 +984,6 @@ declare_clippy_lint! {\n     \"using 'clone' on a ref-counted pointer\"\n }\n \n-declare_clippy_lint! {\n-    /// ### What it does\n-    /// Checks for usage of `.clone()` on an `&&T`.\n-    ///\n-    /// ### Why is this bad?\n-    /// Cloning an `&&T` copies the inner `&T`, instead of\n-    /// cloning the underlying `T`.\n-    ///\n-    /// ### Example\n-    /// ```rust\n-    /// fn main() {\n-    ///     let x = vec![1];\n-    ///     let y = &&x;\n-    ///     let z = y.clone();\n-    ///     println!(\"{:p} {:p}\", *y, z); // prints out the same pointer\n-    /// }\n-    /// ```\n-    #[clippy::version = \"pre 1.29.0\"]\n-    pub CLONE_DOUBLE_REF,\n-    correctness,\n-    \"using `clone` on `&&T`\"\n-}\n-\n declare_clippy_lint! {\n     /// ### What it does\n     /// Checks for usage of `.to_string()` on an `&&T` where\n@@ -3258,7 +3235,6 @@ impl_lint_pass!(Methods => [\n     CHARS_LAST_CMP,\n     CLONE_ON_COPY,\n     CLONE_ON_REF_PTR,\n-    CLONE_DOUBLE_REF,\n     COLLAPSIBLE_STR_REPLACE,\n     ITER_OVEREAGER_CLONED,\n     CLONED_INSTEAD_OF_COPIED,"}, {"sha": "5e81a01a461ab4c6508affd27e48128d4374885d", "filename": "clippy_lints/src/renamed_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/81a614145f689fca24bed3020eb7837aee1d874d/clippy_lints%2Fsrc%2Frenamed_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a614145f689fca24bed3020eb7837aee1d874d/clippy_lints%2Fsrc%2Frenamed_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Frenamed_lints.rs?ref=81a614145f689fca24bed3020eb7837aee1d874d", "patch": "@@ -30,6 +30,7 @@ pub static RENAMED_LINTS: &[(&str, &str)] = &[\n     (\"clippy::stutter\", \"clippy::module_name_repetitions\"),\n     (\"clippy::to_string_in_display\", \"clippy::recursive_format_impl\"),\n     (\"clippy::zero_width_space\", \"clippy::invisible_characters\"),\n+    (\"clippy::clone_double_ref\", \"suspicious_double_ref_op\"),\n     (\"clippy::drop_bounds\", \"drop_bounds\"),\n     (\"clippy::for_loop_over_option\", \"for_loops_over_fallibles\"),\n     (\"clippy::for_loop_over_result\", \"for_loops_over_fallibles\"),"}, {"sha": "60482c66da7c437a7f213622c9a4f05aa73b45ad", "filename": "tests/ui/explicit_deref_methods.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Fexplicit_deref_methods.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Fexplicit_deref_methods.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_deref_methods.fixed?ref=81a614145f689fca24bed3020eb7837aee1d874d", "patch": "@@ -3,7 +3,7 @@\n #![allow(unused_variables)]\n #![allow(\n     clippy::borrow_deref_ref,\n-    clippy::clone_double_ref,\n+    suspicious_double_ref_op,\n     clippy::explicit_auto_deref,\n     clippy::needless_borrow,\n     clippy::uninlined_format_args"}, {"sha": "e3613e216bb223ac7e935d803dd22e810c70b9f1", "filename": "tests/ui/explicit_deref_methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Fexplicit_deref_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Fexplicit_deref_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_deref_methods.rs?ref=81a614145f689fca24bed3020eb7837aee1d874d", "patch": "@@ -3,7 +3,7 @@\n #![allow(unused_variables)]\n #![allow(\n     clippy::borrow_deref_ref,\n-    clippy::clone_double_ref,\n+    suspicious_double_ref_op,\n     clippy::explicit_auto_deref,\n     clippy::needless_borrow,\n     clippy::uninlined_format_args"}, {"sha": "ff19a042825d8a60106661d557612f5d245e8ce1", "filename": "tests/ui/rename.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Frename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Frename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.fixed?ref=81a614145f689fca24bed3020eb7837aee1d874d", "patch": "@@ -36,6 +36,7 @@\n #![allow(enum_intrinsics_non_enums)]\n #![allow(non_fmt_panics)]\n #![allow(named_arguments_used_positionally)]\n+#![allow(suspicious_double_ref_op)]\n #![allow(temporary_cstring_as_ptr)]\n #![allow(unknown_lints)]\n #![allow(unused_labels)]\n@@ -67,6 +68,7 @@\n #![warn(clippy::module_name_repetitions)]\n #![warn(clippy::recursive_format_impl)]\n #![warn(clippy::invisible_characters)]\n+#![warn(suspicious_double_ref_op)]\n #![warn(drop_bounds)]\n #![warn(for_loops_over_fallibles)]\n #![warn(for_loops_over_fallibles)]"}, {"sha": "38b1647c0cca03be2d083b2858109470b9fe8e60", "filename": "tests/ui/rename.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.rs?ref=81a614145f689fca24bed3020eb7837aee1d874d", "patch": "@@ -36,6 +36,7 @@\n #![allow(enum_intrinsics_non_enums)]\n #![allow(non_fmt_panics)]\n #![allow(named_arguments_used_positionally)]\n+#![allow(suspicious_double_ref_op)]\n #![allow(temporary_cstring_as_ptr)]\n #![allow(unknown_lints)]\n #![allow(unused_labels)]\n@@ -67,6 +68,7 @@\n #![warn(clippy::stutter)]\n #![warn(clippy::to_string_in_display)]\n #![warn(clippy::zero_width_space)]\n+#![warn(clippy::clone_double_ref)]\n #![warn(clippy::drop_bounds)]\n #![warn(clippy::for_loop_over_option)]\n #![warn(clippy::for_loop_over_result)]"}, {"sha": "70d15408b9fc14eade2bc5d36ced6c9cc23e8ed9", "filename": "tests/ui/rename.stderr", "status": "modified", "additions": 49, "deletions": 43, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.stderr?ref=81a614145f689fca24bed3020eb7837aee1d874d", "patch": "@@ -1,256 +1,262 @@\n error: lint `clippy::almost_complete_letter_range` has been renamed to `clippy::almost_complete_range`\n-  --> $DIR/rename.rs:42:9\n+  --> $DIR/rename.rs:43:9\n    |\n LL | #![warn(clippy::almost_complete_letter_range)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::almost_complete_range`\n    |\n    = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `clippy::blacklisted_name` has been renamed to `clippy::disallowed_names`\n-  --> $DIR/rename.rs:43:9\n+  --> $DIR/rename.rs:44:9\n    |\n LL | #![warn(clippy::blacklisted_name)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_names`\n \n error: lint `clippy::block_in_if_condition_expr` has been renamed to `clippy::blocks_in_if_conditions`\n-  --> $DIR/rename.rs:44:9\n+  --> $DIR/rename.rs:45:9\n    |\n LL | #![warn(clippy::block_in_if_condition_expr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::blocks_in_if_conditions`\n \n error: lint `clippy::block_in_if_condition_stmt` has been renamed to `clippy::blocks_in_if_conditions`\n-  --> $DIR/rename.rs:45:9\n+  --> $DIR/rename.rs:46:9\n    |\n LL | #![warn(clippy::block_in_if_condition_stmt)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::blocks_in_if_conditions`\n \n error: lint `clippy::box_vec` has been renamed to `clippy::box_collection`\n-  --> $DIR/rename.rs:46:9\n+  --> $DIR/rename.rs:47:9\n    |\n LL | #![warn(clippy::box_vec)]\n    |         ^^^^^^^^^^^^^^^ help: use the new name: `clippy::box_collection`\n \n error: lint `clippy::const_static_lifetime` has been renamed to `clippy::redundant_static_lifetimes`\n-  --> $DIR/rename.rs:47:9\n+  --> $DIR/rename.rs:48:9\n    |\n LL | #![warn(clippy::const_static_lifetime)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::redundant_static_lifetimes`\n \n error: lint `clippy::cyclomatic_complexity` has been renamed to `clippy::cognitive_complexity`\n-  --> $DIR/rename.rs:48:9\n+  --> $DIR/rename.rs:49:9\n    |\n LL | #![warn(clippy::cyclomatic_complexity)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::cognitive_complexity`\n \n error: lint `clippy::derive_hash_xor_eq` has been renamed to `clippy::derived_hash_with_manual_eq`\n-  --> $DIR/rename.rs:49:9\n+  --> $DIR/rename.rs:50:9\n    |\n LL | #![warn(clippy::derive_hash_xor_eq)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::derived_hash_with_manual_eq`\n \n error: lint `clippy::disallowed_method` has been renamed to `clippy::disallowed_methods`\n-  --> $DIR/rename.rs:50:9\n+  --> $DIR/rename.rs:51:9\n    |\n LL | #![warn(clippy::disallowed_method)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_methods`\n \n error: lint `clippy::disallowed_type` has been renamed to `clippy::disallowed_types`\n-  --> $DIR/rename.rs:51:9\n+  --> $DIR/rename.rs:52:9\n    |\n LL | #![warn(clippy::disallowed_type)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_types`\n \n error: lint `clippy::eval_order_dependence` has been renamed to `clippy::mixed_read_write_in_expression`\n-  --> $DIR/rename.rs:52:9\n+  --> $DIR/rename.rs:53:9\n    |\n LL | #![warn(clippy::eval_order_dependence)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::mixed_read_write_in_expression`\n \n error: lint `clippy::identity_conversion` has been renamed to `clippy::useless_conversion`\n-  --> $DIR/rename.rs:53:9\n+  --> $DIR/rename.rs:54:9\n    |\n LL | #![warn(clippy::identity_conversion)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::useless_conversion`\n \n error: lint `clippy::if_let_some_result` has been renamed to `clippy::match_result_ok`\n-  --> $DIR/rename.rs:54:9\n+  --> $DIR/rename.rs:55:9\n    |\n LL | #![warn(clippy::if_let_some_result)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::match_result_ok`\n \n error: lint `clippy::logic_bug` has been renamed to `clippy::overly_complex_bool_expr`\n-  --> $DIR/rename.rs:55:9\n+  --> $DIR/rename.rs:56:9\n    |\n LL | #![warn(clippy::logic_bug)]\n    |         ^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::overly_complex_bool_expr`\n \n error: lint `clippy::new_without_default_derive` has been renamed to `clippy::new_without_default`\n-  --> $DIR/rename.rs:56:9\n+  --> $DIR/rename.rs:57:9\n    |\n LL | #![warn(clippy::new_without_default_derive)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::new_without_default`\n \n error: lint `clippy::option_and_then_some` has been renamed to `clippy::bind_instead_of_map`\n-  --> $DIR/rename.rs:57:9\n+  --> $DIR/rename.rs:58:9\n    |\n LL | #![warn(clippy::option_and_then_some)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::bind_instead_of_map`\n \n error: lint `clippy::option_expect_used` has been renamed to `clippy::expect_used`\n-  --> $DIR/rename.rs:58:9\n+  --> $DIR/rename.rs:59:9\n    |\n LL | #![warn(clippy::option_expect_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::expect_used`\n \n error: lint `clippy::option_map_unwrap_or` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:59:9\n+  --> $DIR/rename.rs:60:9\n    |\n LL | #![warn(clippy::option_map_unwrap_or)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::option_map_unwrap_or_else` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:60:9\n+  --> $DIR/rename.rs:61:9\n    |\n LL | #![warn(clippy::option_map_unwrap_or_else)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::option_unwrap_used` has been renamed to `clippy::unwrap_used`\n-  --> $DIR/rename.rs:61:9\n+  --> $DIR/rename.rs:62:9\n    |\n LL | #![warn(clippy::option_unwrap_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::unwrap_used`\n \n error: lint `clippy::ref_in_deref` has been renamed to `clippy::needless_borrow`\n-  --> $DIR/rename.rs:62:9\n+  --> $DIR/rename.rs:63:9\n    |\n LL | #![warn(clippy::ref_in_deref)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::needless_borrow`\n \n error: lint `clippy::result_expect_used` has been renamed to `clippy::expect_used`\n-  --> $DIR/rename.rs:63:9\n+  --> $DIR/rename.rs:64:9\n    |\n LL | #![warn(clippy::result_expect_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::expect_used`\n \n error: lint `clippy::result_map_unwrap_or_else` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:64:9\n+  --> $DIR/rename.rs:65:9\n    |\n LL | #![warn(clippy::result_map_unwrap_or_else)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::result_unwrap_used` has been renamed to `clippy::unwrap_used`\n-  --> $DIR/rename.rs:65:9\n+  --> $DIR/rename.rs:66:9\n    |\n LL | #![warn(clippy::result_unwrap_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::unwrap_used`\n \n error: lint `clippy::single_char_push_str` has been renamed to `clippy::single_char_add_str`\n-  --> $DIR/rename.rs:66:9\n+  --> $DIR/rename.rs:67:9\n    |\n LL | #![warn(clippy::single_char_push_str)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::single_char_add_str`\n \n error: lint `clippy::stutter` has been renamed to `clippy::module_name_repetitions`\n-  --> $DIR/rename.rs:67:9\n+  --> $DIR/rename.rs:68:9\n    |\n LL | #![warn(clippy::stutter)]\n    |         ^^^^^^^^^^^^^^^ help: use the new name: `clippy::module_name_repetitions`\n \n error: lint `clippy::to_string_in_display` has been renamed to `clippy::recursive_format_impl`\n-  --> $DIR/rename.rs:68:9\n+  --> $DIR/rename.rs:69:9\n    |\n LL | #![warn(clippy::to_string_in_display)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::recursive_format_impl`\n \n error: lint `clippy::zero_width_space` has been renamed to `clippy::invisible_characters`\n-  --> $DIR/rename.rs:69:9\n+  --> $DIR/rename.rs:70:9\n    |\n LL | #![warn(clippy::zero_width_space)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::invisible_characters`\n \n+error: lint `clippy::clone_double_ref` has been renamed to `suspicious_double_ref_op`\n+  --> $DIR/rename.rs:71:9\n+   |\n+LL | #![warn(clippy::clone_double_ref)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `suspicious_double_ref_op`\n+\n error: lint `clippy::drop_bounds` has been renamed to `drop_bounds`\n-  --> $DIR/rename.rs:70:9\n+  --> $DIR/rename.rs:72:9\n    |\n LL | #![warn(clippy::drop_bounds)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `drop_bounds`\n \n error: lint `clippy::for_loop_over_option` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:71:9\n+  --> $DIR/rename.rs:73:9\n    |\n LL | #![warn(clippy::for_loop_over_option)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n error: lint `clippy::for_loop_over_result` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:72:9\n+  --> $DIR/rename.rs:74:9\n    |\n LL | #![warn(clippy::for_loop_over_result)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n error: lint `clippy::for_loops_over_fallibles` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:73:9\n+  --> $DIR/rename.rs:75:9\n    |\n LL | #![warn(clippy::for_loops_over_fallibles)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n error: lint `clippy::into_iter_on_array` has been renamed to `array_into_iter`\n-  --> $DIR/rename.rs:74:9\n+  --> $DIR/rename.rs:76:9\n    |\n LL | #![warn(clippy::into_iter_on_array)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `array_into_iter`\n \n error: lint `clippy::invalid_atomic_ordering` has been renamed to `invalid_atomic_ordering`\n-  --> $DIR/rename.rs:75:9\n+  --> $DIR/rename.rs:77:9\n    |\n LL | #![warn(clippy::invalid_atomic_ordering)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_atomic_ordering`\n \n error: lint `clippy::invalid_ref` has been renamed to `invalid_value`\n-  --> $DIR/rename.rs:76:9\n+  --> $DIR/rename.rs:78:9\n    |\n LL | #![warn(clippy::invalid_ref)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_value`\n \n error: lint `clippy::let_underscore_drop` has been renamed to `let_underscore_drop`\n-  --> $DIR/rename.rs:77:9\n+  --> $DIR/rename.rs:79:9\n    |\n LL | #![warn(clippy::let_underscore_drop)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `let_underscore_drop`\n \n error: lint `clippy::mem_discriminant_non_enum` has been renamed to `enum_intrinsics_non_enums`\n-  --> $DIR/rename.rs:78:9\n+  --> $DIR/rename.rs:80:9\n    |\n LL | #![warn(clippy::mem_discriminant_non_enum)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `enum_intrinsics_non_enums`\n \n error: lint `clippy::panic_params` has been renamed to `non_fmt_panics`\n-  --> $DIR/rename.rs:79:9\n+  --> $DIR/rename.rs:81:9\n    |\n LL | #![warn(clippy::panic_params)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `non_fmt_panics`\n \n error: lint `clippy::positional_named_format_parameters` has been renamed to `named_arguments_used_positionally`\n-  --> $DIR/rename.rs:80:9\n+  --> $DIR/rename.rs:82:9\n    |\n LL | #![warn(clippy::positional_named_format_parameters)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `named_arguments_used_positionally`\n \n error: lint `clippy::temporary_cstring_as_ptr` has been renamed to `temporary_cstring_as_ptr`\n-  --> $DIR/rename.rs:81:9\n+  --> $DIR/rename.rs:83:9\n    |\n LL | #![warn(clippy::temporary_cstring_as_ptr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `temporary_cstring_as_ptr`\n \n error: lint `clippy::unknown_clippy_lints` has been renamed to `unknown_lints`\n-  --> $DIR/rename.rs:82:9\n+  --> $DIR/rename.rs:84:9\n    |\n LL | #![warn(clippy::unknown_clippy_lints)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unknown_lints`\n \n error: lint `clippy::unused_label` has been renamed to `unused_labels`\n-  --> $DIR/rename.rs:83:9\n+  --> $DIR/rename.rs:85:9\n    |\n LL | #![warn(clippy::unused_label)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unused_labels`\n \n-error: aborting due to 42 previous errors\n+error: aborting due to 43 previous errors\n "}, {"sha": "7ceed3c75fd85a5b50815a13c0f1ca23644c9048", "filename": "tests/ui/unnecessary_clone.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Funnecessary_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Funnecessary_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.rs?ref=81a614145f689fca24bed3020eb7837aee1d874d", "patch": "@@ -42,14 +42,6 @@ fn clone_on_copy_generic<T: Copy>(t: T) {\n     Some(t).clone();\n }\n \n-fn clone_on_double_ref() {\n-    let x = vec![1];\n-    let y = &&x;\n-    let z: &Vec<_> = y.clone();\n-\n-    println!(\"{:p} {:p}\", *y, z);\n-}\n-\n mod many_derefs {\n     struct A;\n     struct B;\n@@ -84,11 +76,6 @@ mod many_derefs {\n         let _: E = a.clone();\n         let _: E = *****a;\n     }\n-\n-    fn check(mut encoded: &[u8]) {\n-        let _ = &mut encoded.clone();\n-        let _ = &encoded.clone();\n-    }\n }\n \n mod issue2076 {"}, {"sha": "5686ab6b4531ee60ca0c671ec6d0af45a29a84e5", "filename": "tests/ui/unnecessary_clone.stderr", "status": "modified", "additions": 3, "deletions": 49, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Funnecessary_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81a614145f689fca24bed3020eb7837aee1d874d/tests%2Fui%2Funnecessary_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.stderr?ref=81a614145f689fca24bed3020eb7837aee1d874d", "patch": "@@ -44,63 +44,17 @@ error: using `clone` on type `Option<T>` which implements the `Copy` trait\n LL |     Some(t).clone();\n    |     ^^^^^^^^^^^^^^^ help: try removing the `clone` call: `Some(t)`\n \n-error: using `clone` on a double-reference; this will copy the reference of type `&Vec<i32>` instead of cloning the inner type\n-  --> $DIR/unnecessary_clone.rs:48:22\n-   |\n-LL |     let z: &Vec<_> = y.clone();\n-   |                      ^^^^^^^^^\n-   |\n-   = note: `#[deny(clippy::clone_double_ref)]` on by default\n-help: try dereferencing it\n-   |\n-LL |     let z: &Vec<_> = &(*y).clone();\n-   |                      ~~~~~~~~~~~~~\n-help: or try being explicit if you are sure, that you want to clone a reference\n-   |\n-LL |     let z: &Vec<_> = <&Vec<i32>>::clone(y);\n-   |                      ~~~~~~~~~~~~~~~~~~~~~\n-\n error: using `clone` on type `E` which implements the `Copy` trait\n-  --> $DIR/unnecessary_clone.rs:84:20\n+  --> $DIR/unnecessary_clone.rs:76:20\n    |\n LL |         let _: E = a.clone();\n    |                    ^^^^^^^^^ help: try dereferencing it: `*****a`\n \n-error: using `clone` on a double-reference; this will copy the reference of type `&[u8]` instead of cloning the inner type\n-  --> $DIR/unnecessary_clone.rs:89:22\n-   |\n-LL |         let _ = &mut encoded.clone();\n-   |                      ^^^^^^^^^^^^^^^\n-   |\n-help: try dereferencing it\n-   |\n-LL |         let _ = &mut &(*encoded).clone();\n-   |                      ~~~~~~~~~~~~~~~~~~~\n-help: or try being explicit if you are sure, that you want to clone a reference\n-   |\n-LL |         let _ = &mut <&[u8]>::clone(encoded);\n-   |                      ~~~~~~~~~~~~~~~~~~~~~~~\n-\n-error: using `clone` on a double-reference; this will copy the reference of type `&[u8]` instead of cloning the inner type\n-  --> $DIR/unnecessary_clone.rs:90:18\n-   |\n-LL |         let _ = &encoded.clone();\n-   |                  ^^^^^^^^^^^^^^^\n-   |\n-help: try dereferencing it\n-   |\n-LL |         let _ = &&(*encoded).clone();\n-   |                  ~~~~~~~~~~~~~~~~~~~\n-help: or try being explicit if you are sure, that you want to clone a reference\n-   |\n-LL |         let _ = &<&[u8]>::clone(encoded);\n-   |                  ~~~~~~~~~~~~~~~~~~~~~~~\n-\n error: using `.clone()` on a ref-counted pointer\n-  --> $DIR/unnecessary_clone.rs:108:14\n+  --> $DIR/unnecessary_clone.rs:95:14\n    |\n LL |         Some(try_opt!(Some(rc)).clone())\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `Rc::<u8>::clone(&try_opt!(Some(rc)))`\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 9 previous errors\n "}]}