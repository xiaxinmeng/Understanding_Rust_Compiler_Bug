{"sha": "fec00573a5c1ca233b4aeeaa087168c6cafa3d44", "node_id": "C_kwDOAAsO6NoAKGZlYzAwNTczYTVjMWNhMjMzYjRhZWVhYTA4NzE2OGM2Y2FmYTNkNDQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-01T22:49:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-01T22:49:40Z"}, "message": "Auto merge of #10013 - Jarcho:issue_9886, r=Manishearth\n\nDon't lint `manual_assert` in `else if`\n\nfixes #9886\nchangelog: `manual_assert`: Don't lint in `else if`", "tree": {"sha": "0552fe1119e7018627853f17d458b40bc4cc272b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0552fe1119e7018627853f17d458b40bc4cc272b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fec00573a5c1ca233b4aeeaa087168c6cafa3d44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fec00573a5c1ca233b4aeeaa087168c6cafa3d44", "html_url": "https://github.com/rust-lang/rust/commit/fec00573a5c1ca233b4aeeaa087168c6cafa3d44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fec00573a5c1ca233b4aeeaa087168c6cafa3d44/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e16a8b93ba08b93a8d4b835f4842b77d70451bf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e16a8b93ba08b93a8d4b835f4842b77d70451bf2", "html_url": "https://github.com/rust-lang/rust/commit/e16a8b93ba08b93a8d4b835f4842b77d70451bf2"}, {"sha": "47fb67fa086d88a878c11d7edc38f322f3b98fb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/47fb67fa086d88a878c11d7edc38f322f3b98fb9", "html_url": "https://github.com/rust-lang/rust/commit/47fb67fa086d88a878c11d7edc38f322f3b98fb9"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "4277455a3a21c8e096e0c36e588724d065372d99", "filename": "clippy_lints/src/manual_assert.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fec00573a5c1ca233b4aeeaa087168c6cafa3d44/clippy_lints%2Fsrc%2Fmanual_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fec00573a5c1ca233b4aeeaa087168c6cafa3d44/clippy_lints%2Fsrc%2Fmanual_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_assert.rs?ref=fec00573a5c1ca233b4aeeaa087168c6cafa3d44", "patch": "@@ -2,7 +2,7 @@ use crate::rustc_lint::LintContext;\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::macros::{root_macro_call, FormatArgsExpn};\n use clippy_utils::source::snippet_with_applicability;\n-use clippy_utils::{peel_blocks_with_stmt, span_extract_comment, sugg};\n+use clippy_utils::{is_else_clause, peel_blocks_with_stmt, span_extract_comment, sugg};\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n@@ -47,6 +47,10 @@ impl<'tcx> LateLintPass<'tcx> for ManualAssert {\n             if cx.tcx.item_name(macro_call.def_id) == sym::panic;\n             if !cx.tcx.sess.source_map().is_multiline(cond.span);\n             if let Some(format_args) = FormatArgsExpn::find_nested(cx, then, macro_call.expn);\n+            // Don't change `else if foo { panic!(..) }` to `else { assert!(foo, ..) }` as it just\n+            // shuffles the condition around.\n+            // Should this have a config value?\n+            if !is_else_clause(cx.tcx, expr);\n             then {\n                 let mut applicability = Applicability::MachineApplicable;\n                 let format_args_snip = snippet_with_applicability(cx, format_args.inputs_span(), \"..\", &mut applicability);"}, {"sha": "638320dd6eec439a76ea745736dd2b7fcfd1672f", "filename": "tests/ui/manual_assert.edition2018.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fec00573a5c1ca233b4aeeaa087168c6cafa3d44/tests%2Fui%2Fmanual_assert.edition2018.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/fec00573a5c1ca233b4aeeaa087168c6cafa3d44/tests%2Fui%2Fmanual_assert.edition2018.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2018.fixed?ref=fec00573a5c1ca233b4aeeaa087168c6cafa3d44", "patch": "@@ -62,6 +62,11 @@ fn main() {\n         panic!(\"panic5\");\n     }\n     assert!(!a.is_empty(), \"with expansion {}\", one!());\n+    if a.is_empty() {\n+        let _ = 0;\n+    } else if a.len() == 1 {\n+        panic!(\"panic6\");\n+    }\n }\n \n fn issue7730(a: u8) {"}, {"sha": "8c7e919bf62a10d52bc6a343454b438f89c8857b", "filename": "tests/ui/manual_assert.edition2021.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fec00573a5c1ca233b4aeeaa087168c6cafa3d44/tests%2Fui%2Fmanual_assert.edition2021.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/fec00573a5c1ca233b4aeeaa087168c6cafa3d44/tests%2Fui%2Fmanual_assert.edition2021.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2021.fixed?ref=fec00573a5c1ca233b4aeeaa087168c6cafa3d44", "patch": "@@ -50,6 +50,11 @@ fn main() {\n     assert!(!(b.is_empty() || a.is_empty()), \"panic4\");\n     assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");\n     assert!(!a.is_empty(), \"with expansion {}\", one!());\n+    if a.is_empty() {\n+        let _ = 0;\n+    } else if a.len() == 1 {\n+        panic!(\"panic6\");\n+    }\n }\n \n fn issue7730(a: u8) {"}, {"sha": "3555ac29243a1cb0d819a368d8bb22bf02aea2de", "filename": "tests/ui/manual_assert.edition2021.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fec00573a5c1ca233b4aeeaa087168c6cafa3d44/tests%2Fui%2Fmanual_assert.edition2021.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fec00573a5c1ca233b4aeeaa087168c6cafa3d44/tests%2Fui%2Fmanual_assert.edition2021.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2021.stderr?ref=fec00573a5c1ca233b4aeeaa087168c6cafa3d44", "patch": "@@ -65,7 +65,7 @@ LL | |     }\n    | |_____^ help: try instead: `assert!(!a.is_empty(), \"with expansion {}\", one!());`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:73:5\n+  --> $DIR/manual_assert.rs:78:5\n    |\n LL | /     if a > 2 {\n LL | |         // comment"}, {"sha": "f037c5b8405c721cc6755b1874cf5d47f229206b", "filename": "tests/ui/manual_assert.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fec00573a5c1ca233b4aeeaa087168c6cafa3d44/tests%2Fui%2Fmanual_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fec00573a5c1ca233b4aeeaa087168c6cafa3d44/tests%2Fui%2Fmanual_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.rs?ref=fec00573a5c1ca233b4aeeaa087168c6cafa3d44", "patch": "@@ -66,6 +66,11 @@ fn main() {\n     if a.is_empty() {\n         panic!(\"with expansion {}\", one!())\n     }\n+    if a.is_empty() {\n+        let _ = 0;\n+    } else if a.len() == 1 {\n+        panic!(\"panic6\");\n+    }\n }\n \n fn issue7730(a: u8) {"}]}