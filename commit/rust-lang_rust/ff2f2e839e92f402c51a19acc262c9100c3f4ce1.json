{"sha": "ff2f2e839e92f402c51a19acc262c9100c3f4ce1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMmYyZTgzOWU5MmY0MDJjNTFhMTlhY2MyNjJjOTEwMGMzZjRjZTE=", "commit": {"author": {"name": "Steven Stewart-Gallus", "email": "sstewartgallus00@mylangara.bc.ca", "date": "2014-03-24T23:58:12Z"}, "committer": {"name": "Steven Stewart-Gallus", "email": "sstewartgallus00@mylangara.bc.ca", "date": "2014-03-24T23:58:12Z"}, "message": "Correct issue workaround references", "tree": {"sha": "72846e0aed7299f9f037d09044d06ef26a438e97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72846e0aed7299f9f037d09044d06ef26a438e97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff2f2e839e92f402c51a19acc262c9100c3f4ce1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff2f2e839e92f402c51a19acc262c9100c3f4ce1", "html_url": "https://github.com/rust-lang/rust/commit/ff2f2e839e92f402c51a19acc262c9100c3f4ce1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff2f2e839e92f402c51a19acc262c9100c3f4ce1/comments", "author": {"login": "mstewartgallus", "id": 4070335, "node_id": "MDQ6VXNlcjQwNzAzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4070335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mstewartgallus", "html_url": "https://github.com/mstewartgallus", "followers_url": "https://api.github.com/users/mstewartgallus/followers", "following_url": "https://api.github.com/users/mstewartgallus/following{/other_user}", "gists_url": "https://api.github.com/users/mstewartgallus/gists{/gist_id}", "starred_url": "https://api.github.com/users/mstewartgallus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mstewartgallus/subscriptions", "organizations_url": "https://api.github.com/users/mstewartgallus/orgs", "repos_url": "https://api.github.com/users/mstewartgallus/repos", "events_url": "https://api.github.com/users/mstewartgallus/events{/privacy}", "received_events_url": "https://api.github.com/users/mstewartgallus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mstewartgallus", "id": 4070335, "node_id": "MDQ6VXNlcjQwNzAzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4070335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mstewartgallus", "html_url": "https://github.com/mstewartgallus", "followers_url": "https://api.github.com/users/mstewartgallus/followers", "following_url": "https://api.github.com/users/mstewartgallus/following{/other_user}", "gists_url": "https://api.github.com/users/mstewartgallus/gists{/gist_id}", "starred_url": "https://api.github.com/users/mstewartgallus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mstewartgallus/subscriptions", "organizations_url": "https://api.github.com/users/mstewartgallus/orgs", "repos_url": "https://api.github.com/users/mstewartgallus/repos", "events_url": "https://api.github.com/users/mstewartgallus/events{/privacy}", "received_events_url": "https://api.github.com/users/mstewartgallus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "451160fbfabcdfa14e986e7e699c88052cabd222", "url": "https://api.github.com/repos/rust-lang/rust/commits/451160fbfabcdfa14e986e7e699c88052cabd222", "html_url": "https://github.com/rust-lang/rust/commit/451160fbfabcdfa14e986e7e699c88052cabd222"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "50d72663ce8b13c5d91c53c0c57f1dfc45ef813a", "filename": "src/libnum/bigint.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ff2f2e839e92f402c51a19acc262c9100c3f4ce1/src%2Flibnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff2f2e839e92f402c51a19acc262c9100c3f4ce1/src%2Flibnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Fbigint.rs?ref=ff2f2e839e92f402c51a19acc262c9100c3f4ce1", "patch": "@@ -406,22 +406,22 @@ impl Integer for BigUint {\n                 let mut d0 = d0;\n                 let mut prod = b * d0;\n                 while prod > m {\n-                    // FIXME(#6050): overloaded operators force moves with generic types\n+                    // FIXME(#5992): assignment operator overloads\n                     // d0 -= d_unit\n                     d0   = d0 - d_unit;\n-                    // FIXME(#6050): overloaded operators force moves with generic types\n-                    // prod = prod - b_unit;\n+                    // FIXME(#5992): assignment operator overloads\n+                    // prod -= b_unit;\n                     prod = prod - b_unit\n                 }\n                 if d0.is_zero() {\n                     n = 2;\n                     continue;\n                 }\n                 n = 1;\n-                // FIXME(#6102): Assignment operator for BigInt causes ICE\n+                // FIXME(#5992): assignment operator overloads\n                 // d += d0;\n                 d = d + d0;\n-                // FIXME(#6102): Assignment operator for BigInt causes ICE\n+                // FIXME(#5992): assignment operator overloads\n                 // m -= prod;\n                 m = m - prod;\n             }\n@@ -724,8 +724,7 @@ impl BigUint {\n                     let d: Option<BigUint> = FromPrimitive::from_uint(d);\n                     match d {\n                         Some(d) => {\n-                            // FIXME(#6102): Assignment operator for BigInt\n-                            // causes ICE:\n+                            // FIXME(#5992): assignment operator overloads\n                             // n += d * power;\n                             n = n + d * power;\n                         }\n@@ -738,7 +737,7 @@ impl BigUint {\n                 return Some(n);\n             }\n             end -= unit_len;\n-            // FIXME(#6050): overloaded operators force moves with generic types\n+            // FIXME(#5992): assignment operator overloads\n             // power *= base_num;\n             power = power * base_num;\n         }\n@@ -2068,7 +2067,7 @@ mod biguint_tests {\n         fn factor(n: uint) -> BigUint {\n             let mut f: BigUint = One::one();\n             for i in range(2, n + 1) {\n-                // FIXME(#6102): Assignment operator for BigInt causes ICE\n+                // FIXME(#5992): assignment operator overloads\n                 // f *= FromPrimitive::from_uint(i);\n                 f = f * FromPrimitive::from_uint(i).unwrap();\n             }"}, {"sha": "bea003bcf1886c9a54617a8470fa930fb8c28f12", "filename": "src/libnum/rational.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff2f2e839e92f402c51a19acc262c9100c3f4ce1/src%2Flibnum%2Frational.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff2f2e839e92f402c51a19acc262c9100c3f4ce1/src%2Flibnum%2Frational.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Frational.rs?ref=ff2f2e839e92f402c51a19acc262c9100c3f4ce1", "patch": "@@ -87,10 +87,10 @@ impl<T: Clone + Integer + Ord>\n     fn reduce(&mut self) {\n         let g : T = self.numer.gcd(&self.denom);\n \n-        // FIXME(#6050): overloaded operators force moves with generic types\n+        // FIXME(#5992): assignment operator overloads\n         // self.numer /= g;\n         self.numer = self.numer / g;\n-        // FIXME(#6050): overloaded operators force moves with generic types\n+        // FIXME(#5992): assignment operator overloads\n         // self.denom /= g;\n         self.denom = self.denom / g;\n "}]}