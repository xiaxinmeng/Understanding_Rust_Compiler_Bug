{"sha": "9e43ebda534c14885124fbde2915083f43ec1c99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNDNlYmRhNTM0YzE0ODg1MTI0ZmJkZTI5MTUwODNmNDNlYzFjOTk=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-08-01T08:12:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-01T08:12:44Z"}, "message": "Rollup merge of #52822 - MajorBreakfast:fix-from-local-waker, r=cramertj\n\nFix From<LocalWaker>\n\nThis is a follow-up to https://github.com/rust-lang/rust/pull/52640\n\nFixes `From<LocalWaker>` which is affected by the same accidental drop bug (unless I'm totally mistaken)\n\nr? @cramertj", "tree": {"sha": "7bda4a733049b213efd1c5c5386e0216b2682cb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bda4a733049b213efd1c5c5386e0216b2682cb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e43ebda534c14885124fbde2915083f43ec1c99", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbYWt8CRBK7hj4Ov3rIwAAdHIIALCwvioubCEgeUN811JHWDPO\njAj696xJQb69osqTX0rqkt1pxbLomO+7pBaW0EjfV1G7ENnCmMEdpfuJ9++w9Xkw\n1B5gYtiqqqlw+oKylf1ufpMMTyQHgcuj3JhAqtqHXyiS7ymMzRSqQYkuNJj7UqLV\n2f2AHS96EyyzTG4ZpiwnyCN9V4BRdC0YMcKNStID/9lWLK779q5rQfEp2ew0wKKw\nmHrciAKa1E8kKq6sjSgXo/Ex/fvqCIzkT0NYz6qytz3+E3vyl2rBEItnGHH/gpKg\nDX6yjl48AS3SQ3R1PWDPRGcK4O4hAy05Rl1HNVPas19DNxTJSlsPX7ePxKMGS1U=\n=9WW/\n-----END PGP SIGNATURE-----\n", "payload": "tree 7bda4a733049b213efd1c5c5386e0216b2682cb2\nparent 39406ee241714085bfcd2aa0bec2a6c75c28c01a\nparent ea25cf1cc6da92c85e7c17753e6b1defd8effee9\nauthor Pietro Albini <pietro@pietroalbini.org> 1533111164 +0200\ncommitter GitHub <noreply@github.com> 1533111164 +0200\n\nRollup merge of #52822 - MajorBreakfast:fix-from-local-waker, r=cramertj\n\nFix From<LocalWaker>\n\nThis is a follow-up to https://github.com/rust-lang/rust/pull/52640\n\nFixes `From<LocalWaker>` which is affected by the same accidental drop bug (unless I'm totally mistaken)\n\nr? @cramertj\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e43ebda534c14885124fbde2915083f43ec1c99", "html_url": "https://github.com/rust-lang/rust/commit/9e43ebda534c14885124fbde2915083f43ec1c99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e43ebda534c14885124fbde2915083f43ec1c99/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39406ee241714085bfcd2aa0bec2a6c75c28c01a", "url": "https://api.github.com/repos/rust-lang/rust/commits/39406ee241714085bfcd2aa0bec2a6c75c28c01a", "html_url": "https://github.com/rust-lang/rust/commit/39406ee241714085bfcd2aa0bec2a6c75c28c01a"}, {"sha": "ea25cf1cc6da92c85e7c17753e6b1defd8effee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea25cf1cc6da92c85e7c17753e6b1defd8effee9", "html_url": "https://github.com/rust-lang/rust/commit/ea25cf1cc6da92c85e7c17753e6b1defd8effee9"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "d770536ef4279aebad5730209851c70ae0d63ec4", "filename": "src/libcore/task/wake.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9e43ebda534c14885124fbde2915083f43ec1c99/src%2Flibcore%2Ftask%2Fwake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e43ebda534c14885124fbde2915083f43ec1c99/src%2Flibcore%2Ftask%2Fwake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask%2Fwake.rs?ref=9e43ebda534c14885124fbde2915083f43ec1c99", "patch": "@@ -42,7 +42,7 @@ impl Waker {\n     /// `Arc` type and the safe `Wake` trait.\n     #[inline]\n     pub unsafe fn new(inner: NonNull<dyn UnsafeWake>) -> Self {\n-        Waker { inner: inner }\n+        Waker { inner }\n     }\n \n     /// Wake up the task associated with this `Waker`.\n@@ -120,7 +120,7 @@ impl LocalWaker {\n     /// on the current thread.\n     #[inline]\n     pub unsafe fn new(inner: NonNull<dyn UnsafeWake>) -> Self {\n-        LocalWaker { inner: inner }\n+        LocalWaker { inner }\n     }\n \n     /// Wake up the task associated with this `LocalWaker`.\n@@ -159,7 +159,9 @@ impl LocalWaker {\n impl From<LocalWaker> for Waker {\n     #[inline]\n     fn from(local_waker: LocalWaker) -> Self {\n-        Waker { inner: local_waker.inner }\n+        let inner = local_waker.inner;\n+        mem::forget(local_waker);\n+        Waker { inner }\n     }\n }\n "}]}