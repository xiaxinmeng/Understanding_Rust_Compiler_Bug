{"sha": "7a52154d78ff85fe87647685885e9958a50cb42e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNTIxNTRkNzhmZjg1ZmU4NzY0NzY4NTg4NWU5OTU4YTUwY2I0MmU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-09-02T03:36:25Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-09-02T04:19:34Z"}, "message": "repr: print functions as `fn()`", "tree": {"sha": "596a53e0a77e233837542210e302101cefae21a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/596a53e0a77e233837542210e302101cefae21a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a52154d78ff85fe87647685885e9958a50cb42e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a52154d78ff85fe87647685885e9958a50cb42e", "html_url": "https://github.com/rust-lang/rust/commit/7a52154d78ff85fe87647685885e9958a50cb42e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a52154d78ff85fe87647685885e9958a50cb42e/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73a28e595c2aacf38c12a56807547e7cda6839ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/73a28e595c2aacf38c12a56807547e7cda6839ee", "html_url": "https://github.com/rust-lang/rust/commit/73a28e595c2aacf38c12a56807547e7cda6839ee"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "381cd449695f6fec6cd588df36f8a1e911571158", "filename": "src/libstd/repr.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7a52154d78ff85fe87647685885e9958a50cb42e/src%2Flibstd%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a52154d78ff85fe87647685885e9958a50cb42e/src%2Flibstd%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frepr.rs?ref=7a52154d78ff85fe87647685885e9958a50cb42e", "patch": "@@ -551,13 +551,19 @@ impl<'self> TyVisitor for ReprVisitor<'self> {\n     }\n \n     fn visit_enter_fn(&mut self, _purity: uint, _proto: uint,\n-                      _n_inputs: uint, _retstyle: uint) -> bool { true }\n+                      _n_inputs: uint, _retstyle: uint) -> bool {\n+        self.writer.write(\"fn(\".as_bytes());\n+        true\n+    }\n \n     fn visit_fn_input(&mut self, _i: uint, _mode: uint, _inner: *TyDesc) -> bool {\n+        // FIXME: #8917: should print out the parameter types here, separated by commas\n         true\n     }\n \n     fn visit_fn_output(&mut self, _retstyle: uint, _inner: *TyDesc) -> bool {\n+        self.writer.write(\")\".as_bytes());\n+        // FIXME: #8917: should print out the output type here, as `-> T`\n         true\n     }\n \n@@ -596,6 +602,7 @@ struct P {a: int, b: float}\n \n #[test]\n fn test_repr() {\n+    use prelude::*;\n     use str;\n     use str::Str;\n     use rt::io::Decorator;\n@@ -653,6 +660,8 @@ fn test_repr() {\n     exact_test(&(10u64, ~\"hello\"),\n                \"(10u64, ~\\\"hello\\\")\");\n \n+    exact_test(&(&println), \"&fn()\");\n+\n     struct Foo;\n     exact_test(&(~[Foo, Foo]), \"~[repr::test_repr::Foo, repr::test_repr::Foo]\");\n }"}]}