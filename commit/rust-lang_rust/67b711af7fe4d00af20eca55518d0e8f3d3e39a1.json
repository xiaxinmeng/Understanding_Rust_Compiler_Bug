{"sha": "67b711af7fe4d00af20eca55518d0e8f3d3e39a1", "node_id": "C_kwDOAAsO6NoAKDY3YjcxMWFmN2ZlNGQwMGFmMjBlY2E1NTUxOGQwZThmM2QzZTM5YTE", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-12-12T14:47:32Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-12-13T17:08:35Z"}, "message": "Rename `assert_uninit_valid` intrinsic\n\nIt's not about \"uninit\" anymore but about \"filling with 0x01 bytes\" so\nthe name should at least try to reflect that.", "tree": {"sha": "a0ccca03a7a93b52118a69ea602c9b7d6aed9b07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0ccca03a7a93b52118a69ea602c9b7d6aed9b07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67b711af7fe4d00af20eca55518d0e8f3d3e39a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67b711af7fe4d00af20eca55518d0e8f3d3e39a1", "html_url": "https://github.com/rust-lang/rust/commit/67b711af7fe4d00af20eca55518d0e8f3d3e39a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67b711af7fe4d00af20eca55518d0e8f3d3e39a1/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34336b8d94cee06628f0f4d9d932634135e32a38", "url": "https://api.github.com/repos/rust-lang/rust/commits/34336b8d94cee06628f0f4d9d932634135e32a38", "html_url": "https://github.com/rust-lang/rust/commit/34336b8d94cee06628f0f4d9d932634135e32a38"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "e4a27f1bb6d403896b08207f7f2a07a8e141b4cc", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/67b711af7fe4d00af20eca55518d0e8f3d3e39a1/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67b711af7fe4d00af20eca55518d0e8f3d3e39a1/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=67b711af7fe4d00af20eca55518d0e8f3d3e39a1", "patch": "@@ -713,7 +713,7 @@ fn codegen_regular_intrinsic_call<'tcx>(\n             let res = CValue::by_val(swap(&mut fx.bcx, val), arg.layout());\n             ret.write_cvalue(fx, res);\n         }\n-        sym::assert_inhabited | sym::assert_zero_valid | sym::assert_uninit_valid => {\n+        sym::assert_inhabited | sym::assert_zero_valid | sym::assert_mem_uninitialized_valid => {\n             intrinsic_args!(fx, args => (); intrinsic);\n \n             let layout = fx.layout_of(substs.type_at(0));\n@@ -742,7 +742,9 @@ fn codegen_regular_intrinsic_call<'tcx>(\n                 return;\n             }\n \n-            if intrinsic == sym::assert_uninit_valid && !fx.tcx.permits_uninit_init(layout) {\n+            if intrinsic == sym::assert_mem_uninitialized_valid\n+                && !fx.tcx.permits_uninit_init(layout)\n+            {\n                 with_no_trimmed_paths!({\n                     crate::base::codegen_panic(\n                         fx,"}]}