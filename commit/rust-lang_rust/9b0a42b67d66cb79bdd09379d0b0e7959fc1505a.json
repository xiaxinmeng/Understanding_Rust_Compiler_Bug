{"sha": "9b0a42b67d66cb79bdd09379d0b0e7959fc1505a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMGE0MmI2N2Q2NmNiNzliZGQwOTM3OWQwYjBlNzk1OWZjMTUwNWE=", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-04T10:46:44Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-11T10:37:16Z"}, "message": "move zst_offset to its own module", "tree": {"sha": "0f130271523320ee945b1558b34c4fa5e9c39d01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f130271523320ee945b1558b34c4fa5e9c39d01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b0a42b67d66cb79bdd09379d0b0e7959fc1505a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b0a42b67d66cb79bdd09379d0b0e7959fc1505a", "html_url": "https://github.com/rust-lang/rust/commit/9b0a42b67d66cb79bdd09379d0b0e7959fc1505a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b0a42b67d66cb79bdd09379d0b0e7959fc1505a/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6376da70be18d6cb9dbe22b5a661896cf916bc51", "url": "https://api.github.com/repos/rust-lang/rust/commits/6376da70be18d6cb9dbe22b5a661896cf916bc51", "html_url": "https://github.com/rust-lang/rust/commit/6376da70be18d6cb9dbe22b5a661896cf916bc51"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "c944568dc6194e70d21a2570632c863d395340e9", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9b0a42b67d66cb79bdd09379d0b0e7959fc1505a/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b0a42b67d66cb79bdd09379d0b0e7959fc1505a/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=9b0a42b67d66cb79bdd09379d0b0e7959fc1505a", "patch": "@@ -20,6 +20,7 @@ mod uninit_assumed_init;\n mod unnecessary_filter_map;\n mod unnecessary_lazy_eval;\n mod unwrap_used;\n+mod zst_offset;\n \n use std::borrow::Cow;\n use std::fmt;\n@@ -1726,7 +1727,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n                 manual_saturating_arithmetic::check(cx, expr, &arg_lists, &arith[\"checked_\".len()..])\n             },\n             [\"add\" | \"offset\" | \"sub\" | \"wrapping_offset\" | \"wrapping_add\" | \"wrapping_sub\"] => {\n-                check_pointer_offset(cx, expr, arg_lists[0])\n+                zst_offset::check(cx, expr, arg_lists[0])\n             },\n             [\"is_file\", ..] => filetype_is_file::check(cx, expr, arg_lists[0]),\n             [\"map\", \"as_ref\"] => {\n@@ -3801,18 +3802,6 @@ fn is_bool(ty: &hir::Ty<'_>) -> bool {\n     }\n }\n \n-fn check_pointer_offset(cx: &LateContext<'_>, expr: &hir::Expr<'_>, args: &[hir::Expr<'_>]) {\n-    if_chain! {\n-        if args.len() == 2;\n-        if let ty::RawPtr(ty::TypeAndMut { ref ty, .. }) = cx.typeck_results().expr_ty(&args[0]).kind();\n-        if let Ok(layout) = cx.tcx.layout_of(cx.param_env.and(ty));\n-        if layout.is_zst();\n-        then {\n-            span_lint(cx, ZST_OFFSET, expr.span, \"offset calculation on zero-sized value\");\n-        }\n-    }\n-}\n-\n fn lint_from_iter(cx: &LateContext<'_>, expr: &hir::Expr<'_>, args: &[hir::Expr<'_>]) {\n     let ty = cx.typeck_results().expr_ty(expr);\n     let arg_ty = cx.typeck_results().expr_ty(&args[0]);"}, {"sha": "f1335726736ca4d85f3e927091d078edd0a1247d", "filename": "clippy_lints/src/methods/zst_offset.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9b0a42b67d66cb79bdd09379d0b0e7959fc1505a/clippy_lints%2Fsrc%2Fmethods%2Fzst_offset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b0a42b67d66cb79bdd09379d0b0e7959fc1505a/clippy_lints%2Fsrc%2Fmethods%2Fzst_offset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fzst_offset.rs?ref=9b0a42b67d66cb79bdd09379d0b0e7959fc1505a", "patch": "@@ -0,0 +1,19 @@\n+use crate::utils::span_lint;\n+use if_chain::if_chain;\n+use rustc_hir as hir;\n+use rustc_lint::LateContext;\n+use rustc_middle::ty;\n+\n+use super::ZST_OFFSET;\n+\n+pub(super) fn check(cx: &LateContext<'_>, expr: &hir::Expr<'_>, args: &[hir::Expr<'_>]) {\n+    if_chain! {\n+        if args.len() == 2;\n+        if let ty::RawPtr(ty::TypeAndMut { ref ty, .. }) = cx.typeck_results().expr_ty(&args[0]).kind();\n+        if let Ok(layout) = cx.tcx.layout_of(cx.param_env.and(ty));\n+        if layout.is_zst();\n+        then {\n+            span_lint(cx, ZST_OFFSET, expr.span, \"offset calculation on zero-sized value\");\n+        }\n+    }\n+}"}]}