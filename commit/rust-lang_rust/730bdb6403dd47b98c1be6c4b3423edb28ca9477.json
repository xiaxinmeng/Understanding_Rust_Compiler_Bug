{"sha": "730bdb6403dd47b98c1be6c4b3423edb28ca9477", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMGJkYjY0MDNkZDQ3Yjk4YzFiZTZjNGIzNDIzZWRiMjhjYTk0Nzc=", "commit": {"author": {"name": "Derek Guenther", "email": "dguenther9@gmail.com", "date": "2014-02-05T22:33:10Z"}, "committer": {"name": "Derek Guenther", "email": "dguenther9@gmail.com", "date": "2014-02-07T18:49:24Z"}, "message": "Added tests to make tidy", "tree": {"sha": "9d6923ca67637c0ca19464e9df0d31ca1332d3db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d6923ca67637c0ca19464e9df0d31ca1332d3db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/730bdb6403dd47b98c1be6c4b3423edb28ca9477", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/730bdb6403dd47b98c1be6c4b3423edb28ca9477", "html_url": "https://github.com/rust-lang/rust/commit/730bdb6403dd47b98c1be6c4b3423edb28ca9477", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/730bdb6403dd47b98c1be6c4b3423edb28ca9477/comments", "author": {"login": "dguenther", "id": 767083, "node_id": "MDQ6VXNlcjc2NzA4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/767083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dguenther", "html_url": "https://github.com/dguenther", "followers_url": "https://api.github.com/users/dguenther/followers", "following_url": "https://api.github.com/users/dguenther/following{/other_user}", "gists_url": "https://api.github.com/users/dguenther/gists{/gist_id}", "starred_url": "https://api.github.com/users/dguenther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dguenther/subscriptions", "organizations_url": "https://api.github.com/users/dguenther/orgs", "repos_url": "https://api.github.com/users/dguenther/repos", "events_url": "https://api.github.com/users/dguenther/events{/privacy}", "received_events_url": "https://api.github.com/users/dguenther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dguenther", "id": 767083, "node_id": "MDQ6VXNlcjc2NzA4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/767083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dguenther", "html_url": "https://github.com/dguenther", "followers_url": "https://api.github.com/users/dguenther/followers", "following_url": "https://api.github.com/users/dguenther/following{/other_user}", "gists_url": "https://api.github.com/users/dguenther/gists{/gist_id}", "starred_url": "https://api.github.com/users/dguenther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dguenther/subscriptions", "organizations_url": "https://api.github.com/users/dguenther/orgs", "repos_url": "https://api.github.com/users/dguenther/repos", "events_url": "https://api.github.com/users/dguenther/events{/privacy}", "received_events_url": "https://api.github.com/users/dguenther/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3ccaacc6c90fc678cbba9c3c0427f0a7dece75c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3ccaacc6c90fc678cbba9c3c0427f0a7dece75c", "html_url": "https://github.com/rust-lang/rust/commit/c3ccaacc6c90fc678cbba9c3c0427f0a7dece75c"}], "stats": {"total": 2878, "additions": 2730, "deletions": 148}, "files": [{"sha": "c86676d65126d3e737244474a6a3b4fbd5eded3b", "filename": "mk/tests.mk", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -242,7 +242,6 @@ ALL_HS := $(filter-out $(S)src/rt/vg/valgrind.h \\\n tidy:\n \t\t@$(call E, check: formatting)\n \t\t$(Q)find $(S)src -name '*.r[sc]' \\\n-\t\t| grep '^$(S)src/test' -v \\\n \t\t| grep '^$(S)src/libuv' -v \\\n \t\t| grep '^$(S)src/llvm' -v \\\n \t\t| grep '^$(S)src/gyp' -v \\"}, {"sha": "9bab9a3d9986a824cac49e848471643005e7c2bc", "filename": "src/etc/tidy.py", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Fetc%2Ftidy.py", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Fetc%2Ftidy.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftidy.py?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -14,6 +14,9 @@\n \n err=0\n cols=100\n+cr_flag=\"xfail-tidy-cr\"\n+tab_flag=\"xfail-tidy-tab\"\n+linelength_flag=\"xfail-tidy-linelength\"\n \n # Be careful to support Python 2.4, 2.6, and 3.x here!\n config_proc=subprocess.Popen([ \"git\", \"config\", \"core.autocrlf\" ],\n@@ -46,12 +49,22 @@ def do_license_check(name, contents):\n \n current_name = \"\"\n current_contents = \"\"\n+check_tab = True\n+check_cr = True\n+check_linelength = True\n+\n \n try:\n     for line in fileinput.input(file_names,\n                                 openhook=fileinput.hook_encoded(\"utf-8\")):\n \n         if fileinput.filename().find(\"tidy.py\") == -1:\n+            if line.find(cr_flag) != -1:\n+                check_cr = False\n+            if line.find(tab_flag) != -1:\n+                check_tab = False\n+            if line.find(linelength_flag) != -1:\n+                check_linelength = False\n             if line.find(\"// XXX\") != -1:\n                 report_err(\"XXX is no longer necessary, use FIXME\")\n             if line.find(\"TODO\") != -1:\n@@ -72,16 +85,16 @@ def do_license_check(name, contents):\n                 if \"SNAP\" in line:\n                     report_warn(\"unmatched SNAP line: \" + line)\n \n-        if (line.find('\\t') != -1 and\n+        if check_tab and (line.find('\\t') != -1 and\n             fileinput.filename().find(\"Makefile\") == -1):\n             report_err(\"tab character\")\n-        if not autocrlf and line.find('\\r') != -1:\n+        if check_cr and not autocrlf and line.find('\\r') != -1:\n             report_err(\"CR character\")\n         if line.endswith(\" \\n\") or line.endswith(\"\\t\\n\"):\n             report_err(\"trailing whitespace\")\n         line_len = len(line)-2 if autocrlf else len(line)-1\n \n-        if line_len > cols:\n+        if check_linelength and line_len > cols:\n             report_err(\"line longer than %d chars\" % cols)\n \n         if fileinput.isfirstline() and current_name != \"\":\n@@ -90,6 +103,9 @@ def do_license_check(name, contents):\n         if fileinput.isfirstline():\n             current_name = fileinput.filename()\n             current_contents = \"\"\n+            check_cr = True\n+            check_tab = True\n+            check_linelength = True\n \n         current_contents += line\n "}, {"sha": "cf00f077e0762e1d92d90c2f4f134aac30c1e0ef", "filename": "src/test/auxiliary/extern_mod_ordering_lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fextern_mod_ordering_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fextern_mod_ordering_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fextern_mod_ordering_lib.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type=\"lib\"];\n \n pub mod extern_mod_ordering_lib {"}, {"sha": "356990e1e01cfdaf7f0238ad5bf8ebebfe746a32", "filename": "src/test/auxiliary/impl_privacy_xc_1.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_1.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"lib\"];\n \n pub struct Fish {"}, {"sha": "92e6ca1cc480cc257173123b44846e50ee94a37c", "filename": "src/test/auxiliary/impl_privacy_xc_2.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"lib\"];\n \n pub struct Fish {"}, {"sha": "25d2e3399cf41727c6891e17ea5d9886b285b736", "filename": "src/test/auxiliary/issue_3907_1.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fissue_3907_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fissue_3907_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_3907_1.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub trait Foo {\n         fn bar();\n }"}, {"sha": "387767f374f637112a52a06269826a2237a2588b", "filename": "src/test/auxiliary/kinds_in_metadata.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fkinds_in_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fkinds_in_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fkinds_in_metadata.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n /* Any copyright is dedicated to the Public Domain.\n  * http://creativecommons.org/publicdomain/zero/1.0/ */\n "}, {"sha": "3833b549b5fc009877402bb42edeea1ec22d0e3f", "filename": "src/test/auxiliary/newtype_struct_xc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fnewtype_struct_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fnewtype_struct_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fnewtype_struct_xc.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type=\"lib\"];\n \n pub struct Au(int);"}, {"sha": "0160c7d3cb3b7bd180e2535aafdf6691c6a7644a", "filename": "src/test/auxiliary/no_std_crate.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fno_std_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fno_std_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fno_std_crate.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[no_std];\n \n pub fn foo() {}"}, {"sha": "54b2658e380d22d47fe065a21ff7c20fec4e44e5", "filename": "src/test/auxiliary/packed.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fpacked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fpacked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fpacked.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[packed]\n pub struct S {\n     a: u8,"}, {"sha": "f9308ff7497984f782169b4d24f49ca7f527a2e4", "filename": "src/test/auxiliary/private_variant_xc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fprivate_variant_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fprivate_variant_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fprivate_variant_xc.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub enum Foo {\n     Bar,\n     priv Baz,"}, {"sha": "8785a8085dc359ac7e75e6938b4b8d8cc5c17f09", "filename": "src/test/auxiliary/static_fn_trait_xc_aux.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fstatic_fn_trait_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fstatic_fn_trait_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fstatic_fn_trait_xc_aux.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub mod num {\n     pub trait Num2 {\n         fn from_int2(n: int) -> Self;"}, {"sha": "5660fd5b61f9db76ca044052d26e5cb208832339", "filename": "src/test/auxiliary/static_mut_xc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fstatic_mut_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fstatic_mut_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fstatic_mut_xc.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub static mut a: int = 3;"}, {"sha": "f9f8a6be7d8a8769afd7586b8745b3b1da536e56", "filename": "src/test/auxiliary/trait_default_method_xc_aux.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_id=\"trait_default_method_xc_aux\"];\n \n pub struct Something { x: int }"}, {"sha": "145f84e558fb869de585c7d47584bccf8ddb6ecc", "filename": "src/test/auxiliary/trait_default_method_xc_aux_2.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux_2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // aux-build:trait_default_method_xc_aux.rs\n \n extern mod aux = \"trait_default_method_xc_aux\";"}, {"sha": "19e53fcc61aa3ee33d3b96232eb3c7d08490205b", "filename": "src/test/auxiliary/use_from_trait_xc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fuse_from_trait_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fuse_from_trait_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fuse_from_trait_xc.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub trait Trait {\n     fn foo();\n }"}, {"sha": "a9e5775fb4e6f1f6acca70b081ac8381ba861761", "filename": "src/test/auxiliary/xc_private_method_lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fxc_private_method_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fauxiliary%2Fxc_private_method_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fxc_private_method_lib.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type=\"lib\"];\n \n pub struct Struct {"}, {"sha": "e9e59924acc7254908bbd79a2d4bd0a54792bf93", "filename": "src/test/bench/noise.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Fnoise.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Fnoise.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fnoise.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Perlin noise benchmark from https://gist.github.com/1170424\n \n use std::f64;"}, {"sha": "b42644f39cb30d7ce84456c2f9e81c909c0cb048", "filename": "src/test/bench/rt-messaging-ping-pong.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Frt-messaging-ping-pong.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Frt-messaging-ping-pong.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Frt-messaging-ping-pong.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "0b76e128587fbc3cdd3e754ad3d9177b4f4e5a4f", "filename": "src/test/bench/shootout-fannkuch-redux.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test reading from os::args()[1] - bogus!\n \n use std::from_str::FromStr;"}, {"sha": "cb24550e277767fc9d2a9b9c02abb20d4db24e75", "filename": "src/test/bench/shootout-fasta-redux.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test reading from os::args()[1] - bogus!\n \n use std::cast::transmute;"}, {"sha": "be8daf34df70678aa9122938e50336be662a3e65", "filename": "src/test/bench/shootout-k-nucleotide.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test\n \n extern mod extra;"}, {"sha": "ce49b8b2141ef9b8497e157494c416d82f8dcba8", "filename": "src/test/bench/shootout-nbody.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-nbody.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n use std::os;\n \n static PI: f64 = 3.141592653589793;"}, {"sha": "fe4045e441047ed2c7f376a0f2274a699d4dc973", "filename": "src/test/bench/task-perf-linked-failure.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Ftask-perf-linked-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fbench%2Ftask-perf-linked-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-linked-failure.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-pretty\n // xfail-test linked failure\n "}, {"sha": "1741210f9ed50fa780eee59f06f53a6f63a64e3b", "filename": "src/test/compile-fail/autoderef-full-lval.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fautoderef-full-lval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fautoderef-full-lval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fautoderef-full-lval.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -27,7 +27,8 @@ fn main() {\n     assert_eq!(z, 21);\n     let forty: fish = fish{a: @40};\n     let two: fish = fish{a: @2};\n-    let answer: int = forty.a + two.a;  //~ ERROR binary operation `+` cannot be applied to type `@int`\n+    let answer: int = forty.a + two.a;\n+    //~^ ERROR binary operation `+` cannot be applied to type `@int`\n     info!(\"{:?}\", answer);\n     assert_eq!(answer, 42);\n }"}, {"sha": "6aa7f3ed06d04cd827a5414d7b5aeefdb4dd9e7e", "filename": "src/test/compile-fail/bad-char-literals3.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fbad-char-literals3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fbad-char-literals3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-char-literals3.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,8 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-tidy-cr\n fn main() {\n     // note that this is a literal \"\\r\" byte\n-    '\r';\n-    //~^ ERROR: character constant must be escaped\n+    '\n+'; //~^ ERROR: character constant must be escaped\n }"}, {"sha": "1e1a99270e7f5f9c514a9844f3e2e6fdb0b61683", "filename": "src/test/compile-fail/bad-char-literals4.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fbad-char-literals4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fbad-char-literals4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-char-literals4.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-tidy-tab\n fn main() {\n     // note that this is a literal tab character here\n     '\t';"}, {"sha": "39c3ed3e2a3d2ab230ff9b5394143e72dc7a369d", "filename": "src/test/compile-fail/bad-match.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fbad-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fbad-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-match.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // error-pattern: expected\n \n fn main() {"}, {"sha": "b02397c510a1f2c048e6ca68f3e4c9279b1ce0dc", "filename": "src/test/compile-fail/bad-mid-path-type-params.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fbad-mid-path-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fbad-mid-path-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-mid-path-type-params.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-tidy-linelength\n+\n #[no_std];\n \n struct S<T> {\n@@ -29,10 +41,12 @@ impl Trait<int> for S2 {\n }\n \n fn foo<'a>() {\n-    let _ = S::new::<int,f64>(1, 1.0);    //~ ERROR the impl referenced by this path needs 1 type parameter, but 0 type parameters were supplied\n-    let _ = S::<'a,int>::new::<f64>(1, 1.0);  //~ ERROR expected 0 lifetime parameter(s)\n-    let _: S2 = Trait::new::<int,f64>(1, 1.0);    //~ ERROR the trait referenced by this path needs 1 type parameter, but 0 type parameters were supplied\n-    let _: S2 = Trait::<'a,int>::new::<f64>(1, 1.0);   //~ ERROR expected 0 lifetime parameter(s)\n+    let _ = S::new::<int,f64>(1, 1.0);\n+    //~^ ERROR the impl referenced by this path needs 1 type parameter, but 0 type parameters were supplied\n+    let _ = S::<'a,int>::new::<f64>(1, 1.0); //~ ERROR expected 0 lifetime parameter(s)\n+    let _: S2 = Trait::new::<int,f64>(1, 1.0);\n+    //~^ ERROR the trait referenced by this path needs 1 type parameter, but 0 type parameters were supplied\n+    let _: S2 = Trait::<'a,int>::new::<f64>(1, 1.0); //~ ERROR expected 0 lifetime parameter(s)\n }\n \n fn main() {}"}, {"sha": "514dd584c6a027a1696fa3897c5b4da5d435a95f", "filename": "src/test/compile-fail/borrowck-anon-fields-struct.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-anon-fields-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-anon-fields-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-anon-fields-struct.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Tests that we are able to distinguish when loans borrow different\n // anonymous fields of a tuple vs the same anonymous field.\n "}, {"sha": "ebaed01756fb227911f4a92092f7b9bc212b5eb7", "filename": "src/test/compile-fail/borrowck-anon-fields-tuple.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-anon-fields-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-anon-fields-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-anon-fields-tuple.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Tests that we are able to distinguish when loans borrow different\n // anonymous fields of a tuple vs the same anonymous field.\n "}, {"sha": "12624a49f7a295508a0e954c32f85eeeed1b080f", "filename": "src/test/compile-fail/borrowck-anon-fields-variant.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-anon-fields-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-anon-fields-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-anon-fields-variant.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Tests that we are able to distinguish when loans borrow different\n // anonymous fields of an enum variant vs the same anonymous field.\n "}, {"sha": "5af1f8312aaa55b78cd9ed4a1aebdce5cc3e9fed", "filename": "src/test/compile-fail/borrowck-move-by-capture.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-by-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-by-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-move-by-capture.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn main() {\n     // FIXME(#2202) - Due to the way that borrowck treats closures,\n     // you get two error reports here."}, {"sha": "63f88347090e4ec397d77bebe7476c9e4b3cc53f", "filename": "src/test/compile-fail/borrowck-move-in-irrefut-pat.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-in-irrefut-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-in-irrefut-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-move-in-irrefut-pat.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn with(f: |&~str|) {}\n \n fn arg_item(&_x: &~str) {}"}, {"sha": "53b5d866b81d9329e6349d75b3acec32f1d23658", "filename": "src/test/compile-fail/borrowck-move-moved-value-into-closure.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-moved-value-into-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-moved-value-into-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-move-moved-value-into-closure.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn call_f(f: proc() -> int) -> int {\n     f()\n }"}, {"sha": "0015ddf368e2ec0754f39c36f91de6395be8488f", "filename": "src/test/compile-fail/borrowck-move-mut-base-ptr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-mut-base-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-mut-base-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-move-mut-base-ptr.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Test that attempt to move `&mut` pointer while pointee is borrowed\n // yields an error.\n //"}, {"sha": "c4c0544428598b6f9d4ee35e2546fee0036ef452", "filename": "src/test/compile-fail/borrowck-move-out-of-struct-with-dtor.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-struct-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-struct-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-struct-with-dtor.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct S {f:~str}\n impl Drop for S {\n     fn drop(&mut self) { println!(\"{}\", self.f); }"}, {"sha": "66d16f88172f4d1821df2312c31cc8e424ee785c", "filename": "src/test/compile-fail/borrowck-move-out-of-tuple-struct-with-dtor.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-tuple-struct-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-tuple-struct-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-tuple-struct-with-dtor.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct S(~str);\n impl Drop for S {\n     fn drop(&mut self) { }"}, {"sha": "27b831f3d2bd2c2ea94238e70a74e93114e95274", "filename": "src/test/compile-fail/borrowck-move-out-of-vec-tail.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-vec-tail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-vec-tail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-vec-tail.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Test that we do not permit moves from &[] matched by a vec pattern.\n \n #[deriving(Clone)]"}, {"sha": "0e1c4758c1be10a23e43e79df363cb01ea6d7ca5", "filename": "src/test/compile-fail/borrowck-reborrow-from-shorter-lived-andmut.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-reborrow-from-shorter-lived-andmut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-reborrow-from-shorter-lived-andmut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-reborrow-from-shorter-lived-andmut.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -16,7 +16,8 @@ struct S<'a> {\n }\n \n fn copy_borrowed_ptr<'a,'b>(p: &'a mut S<'b>) -> S<'b> {\n-    S { pointer: &mut *p.pointer } //~ ERROR lifetime of `p` is too short to guarantee its contents can be safely reborrowed\n+    S { pointer: &mut *p.pointer }\n+    //~^ ERROR lifetime of `p` is too short to guarantee its contents can be safely reborrowed\n }\n \n fn main() {"}, {"sha": "1822cd4a89231b0fbbc5f8f6c798ca0c691c71cb", "filename": "src/test/compile-fail/borrowck-report-with-custom-diagnostic.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-report-with-custom-diagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-report-with-custom-diagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-report-with-custom-diagnostic.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[allow(dead_code)];\n fn main() {\n     // Original borrow ends at end of function"}, {"sha": "06b66c2627cc774692c7de55c9ee182cc5d4aa04", "filename": "src/test/compile-fail/borrowck-swap-mut-base-ptr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-swap-mut-base-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-swap-mut-base-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-swap-mut-base-ptr.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Test that attempt to swap `&mut` pointer while pointee is borrowed\n // yields an error.\n //"}, {"sha": "97f781cffc9ce9c514b7a9129d2520b86ab35060", "filename": "src/test/compile-fail/borrowck-vec-pattern-element-loan.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-element-loan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-element-loan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-element-loan.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn a() -> &[int] {\n     let vec = ~[1, 2, 3, 4];\n     let tail = match vec {"}, {"sha": "da692e330b673a4218708a5e336ac6deb1e10f57", "filename": "src/test/compile-fail/borrowck-vec-pattern-loan-from-mut.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-loan-from-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-loan-from-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-loan-from-mut.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn a() {\n     let mut v = ~[1, 2, 3];\n     match v {"}, {"sha": "909af7da96084246efc0bef160681643a92bb2f9", "filename": "src/test/compile-fail/borrowck-vec-pattern-move-tail.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-move-tail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-move-tail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-move-tail.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {\n     let mut a = [1, 2, 3, 4];\n     let t = match a {"}, {"sha": "be66dcf372ed39123c70973c399b5245e4bc2bea", "filename": "src/test/compile-fail/borrowck-vec-pattern-nesting.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn a() {\n     let mut vec = ~[~1, ~2, ~3];\n     match vec {"}, {"sha": "cf20d57ac58bea82672db985de39c06f241e8b39", "filename": "src/test/compile-fail/borrowck-vec-pattern-tail-element-loan.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-tail-element-loan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-tail-element-loan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-tail-element-loan.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn a() -> &int {\n     let vec = ~[1, 2, 3, 4];\n     let tail = match vec {"}, {"sha": "45a42f821456de4f58e59a4a40a21ee8fc2ccf61", "filename": "src/test/compile-fail/box-static-bound.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fbox-static-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fbox-static-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbox-static-bound.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[feature(managed_boxes)];\n \n fn f<T>(x: T) -> @T {"}, {"sha": "c789c83d9adf53e6dc2a75c30dba63d682203337", "filename": "src/test/compile-fail/by-move-pattern-binding.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fby-move-pattern-binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fby-move-pattern-binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fby-move-pattern-binding.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n enum E {\n     Foo,\n     Bar(~str)"}, {"sha": "6b25e4be2d9a3f033e9e51d53ebcc379a74ef3e4", "filename": "src/test/compile-fail/closure-bounds-not-builtin.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-not-builtin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-not-builtin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-not-builtin.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n \n trait Foo {}\n "}, {"sha": "9747a44cef074ee903d295052a148681d3869619", "filename": "src/test/compile-fail/closure-bounds-subtype.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-subtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-subtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-bounds-subtype.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n \n fn take_any(_: ||:) {\n }"}, {"sha": "a5168c46045805948e728e64139313070f9d5256", "filename": "src/test/compile-fail/closure-reform-bad.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fclosure-reform-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fclosure-reform-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-reform-bad.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n /* Any copyright is dedicated to the Public Domain.\n  * http://creativecommons.org/publicdomain/zero/1.0/ */\n "}, {"sha": "60c80f872ec0fdfafee092f1be70c0f21a3d606f", "filename": "src/test/compile-fail/closure-that-fails.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fclosure-that-fails.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fclosure-that-fails.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-that-fails.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn foo(f: || -> !) {}\n \n fn main() {"}, {"sha": "5b38b17ad959d92ff15c9ad057cbf6ef90954551", "filename": "src/test/compile-fail/column-offset-1-based.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fcolumn-offset-1-based.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fcolumn-offset-1-based.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcolumn-offset-1-based.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n-# //~ ERROR 1:1: 1:2 error: expected item\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+# //~ ERROR 11:1: 11:2 error: expected item"}, {"sha": "3a1f696193e96a94cea05034f190f91ab1737222", "filename": "src/test/compile-fail/conflicting-implementations-aux.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fconflicting-implementations-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fconflicting-implementations-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconflicting-implementations-aux.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -17,7 +17,8 @@ use trait_impl_conflict::Foo;\n \n impl<A> Foo for A {\n //~^ ERROR conflicting implementations for trait `trait_impl_conflict::Foo`\n-//~^^ ERROR cannot provide an extension implementation where both trait and type are not defined in this crate\n+//~^^ ERROR cannot provide an extension implementation where both trait and type\n+//          are not defined in this crate\n }\n \n fn main() {"}, {"sha": "7860e19ea3e80270e40a75d41c79cede136059eb", "filename": "src/test/compile-fail/dead-code-ret.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test\n \n // xfail'd because the lint pass doesn't know to ignore standard library"}, {"sha": "23b9f0482424796ed9b8b2fc6ad8be3c0c24616d", "filename": "src/test/compile-fail/does-nothing.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,2 +1,12 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // error-pattern: unresolved name `this_does_nothing_what_the`.\n fn main() { info!(\"doing\"); this_does_nothing_what_the; info!(\"boing\"); }"}, {"sha": "92b7b601e4dc36430bf5447ed5f17209916e2176", "filename": "src/test/compile-fail/eval-enum.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Feval-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Feval-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Feval-enum.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n enum test {\n     div_zero = 1/0, //~ERROR expected constant: attempted to divide by zero\n     rem_zero = 1%0  //~ERROR expected constant: attempted remainder with a divisor of zero"}, {"sha": "d99d4dc33a27ac257743bffb2aee2e506e9f63a9", "filename": "src/test/compile-fail/extenv-not-defined-default.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fextenv-not-defined-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fextenv-not-defined-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextenv-not-defined-default.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,4 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn main() { env!(\"__HOPEFULLY_NOT_DEFINED__\"); } //~ ERROR: environment variable `__HOPEFULLY_NOT_DEFINED__` not defined\n+fn main() {\n+    env!(\"__HOPEFULLY_NOT_DEFINED__\");\n+    //~^ ERROR: environment variable `__HOPEFULLY_NOT_DEFINED__` not defined\n+}"}, {"sha": "a95124239a94f523c0578d482e341b73467aca27", "filename": "src/test/compile-fail/generic-impl-less-params-with-defaults.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fgeneric-impl-less-params-with-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fgeneric-impl-less-params-with-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgeneric-impl-less-params-with-defaults.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -17,6 +17,8 @@ impl<A, B, C = (A, B)> Foo<A, B, C> {\n }\n \n fn main() {\n-    Foo::<int>::new(); //~ ERROR the impl referenced by this path needs at least 2 type parameters, but 1 type parameter were supplied\n-    //~^ ERROR not enough type parameters provided: expected at least 2, found 1\n+    Foo::<int>::new();\n+    //~^ ERROR the impl referenced by this path needs at least 2 type parameters,\n+    //         but 1 was supplied\n+    //~^^^ ERROR not enough type parameters provided: expected at least 2, found 1\n }"}, {"sha": "c6ee8a870ee5313e98e944b102cf5f5b55ff3478", "filename": "src/test/compile-fail/generic-impl-more-params-with-defaults.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fgeneric-impl-more-params-with-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fgeneric-impl-more-params-with-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgeneric-impl-more-params-with-defaults.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -19,6 +19,8 @@ impl<T, A = Heap> Vec<T, A> {\n }\n \n fn main() {\n-    Vec::<int, Heap, bool>::new(); //~ ERROR the impl referenced by this path needs at most 2 type parameters, but 3 type parameters were supplied\n-    //~^ ERROR too many type parameters provided: expected at most 2, found 3\n+    Vec::<int, Heap, bool>::new();\n+    //~^ ERROR the impl referenced by this path needs at most 2 type parameters,\n+    //         but 3 were supplied\n+    //~^^^ ERROR too many type parameters provided: expected at most 2, found 3\n }"}, {"sha": "b4c80bc1e3d13ebca08911bb74a8ba0c097b3f1a", "filename": "src/test/compile-fail/generic-type-more-params-with-defaults.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fgeneric-type-more-params-with-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fgeneric-type-more-params-with-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgeneric-type-more-params-with-defaults.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -15,5 +15,6 @@ struct Heap;\n struct Vec<T, A = Heap>;\n \n fn main() {\n-    let _: Vec<int, Heap, bool>; //~ ERROR wrong number of type arguments: expected at most 2 but found 3\n+    let _: Vec<int, Heap, bool>;\n+    //~^ ERROR wrong number of type arguments: expected at most 2 but found 3\n }"}, {"sha": "e1398b2a361a1f0af5cab20ed52a3a4b72e3241d", "filename": "src/test/compile-fail/invalid-crate-type.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Finvalid-crate-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Finvalid-crate-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finvalid-crate-type.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // regression test for issue 11256\n #[crate_type=\"foo\"];    //~ ERROR invalid `crate_type` value\n "}, {"sha": "b78e01f2b7a677c948e77b8d8730ea2d61945586", "filename": "src/test/compile-fail/issue-2718-a.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-2718-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-2718-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2718-a.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -18,7 +18,8 @@ pub struct send_packet<T> {\n mod pingpong {\n     use send_packet;\n     pub type ping = send_packet<pong>;\n-    pub struct pong(send_packet<ping>); //~ ERROR illegal recursive enum type; wrap the inner value in a box to make it representable\n+    pub struct pong(send_packet<ping>);\n+    //~^ ERROR illegal recursive enum type; wrap the inner value in a box to make it representable\n }\n \n fn main() {}"}, {"sha": "3613fb8ccbe12a26f1ade178b3474e470cfddbe9", "filename": "src/test/compile-fail/issue-3008-1.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3008-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3008-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3008-1.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -9,7 +9,8 @@\n // except according to those terms.\n \n enum foo { foo(bar) }\n-enum bar { bar_none, bar_some(bar) } //~ ERROR illegal recursive enum type; wrap the inner value in a box to make it representable\n+enum bar { bar_none, bar_some(bar) }\n+//~^ ERROR illegal recursive enum type; wrap the inner value in a box to make it representable\n \n fn main() {\n }"}, {"sha": "db3124214bd9775ea4b051e75a49d219e1eb240e", "filename": "src/test/compile-fail/issue-3008-2.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3008-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3008-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3008-2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -9,8 +9,9 @@\n // except according to those terms.\n \n enum foo { foo(bar) }\n-struct bar { x: bar } //~ ERROR illegal recursive struct type; wrap the inner value in a box to make it representable\n-//~^ ERROR this type cannot be instantiated without an instance of itself\n+struct bar { x: bar }\n+//~^ ERROR illegal recursive struct type; wrap the inner value in a box to make it representable\n+//~^^ ERROR this type cannot be instantiated without an instance of itself\n \n fn main() {\n }"}, {"sha": "b8ef57e2dd34de7e0a9b39f066db344222188f8d", "filename": "src/test/compile-fail/issue-3008-3.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3008-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3008-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3008-3.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -9,7 +9,8 @@\n // except according to those terms.\n \n enum E1 { V1(E2<E1>), }\n-enum E2<T> { V2(E2<E1>), } //~ ERROR illegal recursive enum type; wrap the inner value in a box to make it representable\n+enum E2<T> { V2(E2<E1>), }\n+//~^ ERROR illegal recursive enum type; wrap the inner value in a box to make it representable\n \n fn main() {\n }"}, {"sha": "df9af9c6bcca162c1c059176b75e245d2c90fc54", "filename": "src/test/compile-fail/issue-3477.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3477.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3477.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3477.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {\n     let _p: char = 100; //~ ERROR mismatched types: expected `char` but found\n }"}, {"sha": "9f60cceb152ec006603d6935103d3c0ab01e6119", "filename": "src/test/compile-fail/issue-3668.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3668.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3668.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3668.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -17,7 +17,8 @@ trait PTrait {\n \n impl PTrait for P {\n    fn getChildOption(&self) -> Option<@P> {\n-       static childVal: @P = self.child.get(); //~ ERROR attempt to use a non-constant value in a constant\n+       static childVal: @P = self.child.get();\n+       //~^ ERROR attempt to use a non-constant value in a constant\n        fail!();\n    }\n }"}, {"sha": "f6b5be349d0ebe97502c26812b8ac89e919fd6de", "filename": "src/test/compile-fail/issue-3680.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -10,6 +10,8 @@\n \n fn main() {\n     match None {\n-        Err(_) => () //~ ERROR mismatched types: expected `std::option::Option<<generic #1>>` but found `std::result::Result<<generic #2>,<generic #3>>`\n+        Err(_) => ()\n+        //~^ ERROR mismatched types: expected `std::option::Option<<generic #1>>`\n+        //         but found `std::result::Result<<generic #2>,<generic #3>>`\n     }\n }"}, {"sha": "19a7ed05bf4424ebe3d3a1df70c91731cceb0e16", "filename": "src/test/compile-fail/issue-3779.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3779.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-3779.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3779.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-struct S { //~ ERROR illegal recursive struct type; wrap the inner value in a box to make it representable\n+struct S {\n+    //~^ ERROR illegal recursive struct type; wrap the inner value in a box to make it representable\n     element: Option<S>\n }\n "}, {"sha": "b280365a7bacc694a7b8c6102ddbc4abb1ecfe2e", "filename": "src/test/compile-fail/issue-4517.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-4517.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-4517.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4517.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,6 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn bar(int_param: int) {}\n \n fn main() {\n-     let foo: [u8, ..4] = [1u8, ..4u8];\n-     bar(foo); //~ ERROR mismatched types: expected `int` but found `[u8, .. 4]` (expected int but found vector)\n+    let foo: [u8, ..4] = [1u8, ..4u8];\n+    bar(foo);\n+    //~^ ERROR mismatched types: expected `int` but found `[u8, .. 4]`\n+    //         (expected int but found vector)\n }"}, {"sha": "ec1f62c33fcbb7648b204766c59b48d2dfe0dd0e", "filename": "src/test/compile-fail/issue-4968.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -12,5 +12,7 @@\n \n static A: (int,int) = (4,2);\n fn main() {\n-    match 42 { A => () } //~ ERROR mismatched types: expected `<generic integer #0>` but found `(int,int)` (expected integral variable but found tuple)\n+    match 42 { A => () }\n+    //~^ ERROR mismatched types: expected `<generic integer #0>` but found `(int,int)`\n+    //         (expected integral variable but found tuple)\n }"}, {"sha": "ae523e1a9c4742590c789a6152dbed9b523927d2", "filename": "src/test/compile-fail/issue-5100.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -17,15 +17,19 @@ fn main() {\n     }\n \n     match (true, false) {\n-        (true, false, false) => () //~ ERROR mismatched types: expected `(bool,bool)` but found tuple (expected a tuple with 2 elements but found one with 3 elements)\n+        (true, false, false) => ()\n+        //~^ ERROR mismatched types: expected `(bool,bool)` but found tuple\n+        //         (expected a tuple with 2 elements but found one with 3 elements)\n     }\n \n     match (true, false) {\n-        ~(true, false) => () //~ ERROR mismatched types: expected `(bool,bool)` but found a ~-box pattern\n+        ~(true, false) => ()\n+        //~^ ERROR mismatched types: expected `(bool,bool)` but found a ~-box pattern\n     }\n \n     match (true, false) {\n-        &(true, false) => () //~ ERROR mismatched types: expected `(bool,bool)` but found an &-pointer pattern\n+        &(true, false) => ()\n+        //~^ ERROR mismatched types: expected `(bool,bool)` but found an &-pointer pattern\n     }\n \n "}, {"sha": "88b08655caad2547d3fc066932c15cf1e1062859", "filename": "src/test/compile-fail/issue-5239-1.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-5239-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-5239-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5239-1.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -11,5 +11,6 @@\n // Regression test for issue #5239\n \n fn main() {\n-    let x: |int| -> int = |ref x| { x += 1; }; //~ ERROR binary assignment operation `+=` cannot be applied to type `&int`\n+    let x: |int| -> int = |ref x| { x += 1; };\n+    //~^ ERROR binary assignment operation `+=` cannot be applied to type `&int`\n }"}, {"sha": "8ac2429a3317c5fedc0c995cf893ace58777b01e", "filename": "src/test/compile-fail/issue-5806.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-5806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-5806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5806.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // opyright 2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "235a8003958d88430461c584ca0ebb5f1c17bf4e", "filename": "src/test/compile-fail/issue-6596.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-6596.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-6596.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6596.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[feature(macro_rules)];\n \n // error-pattern: unknown macro variable `nonexistent`"}, {"sha": "bdb8c7299c5eae858094bf60b5421cf330812a6e", "filename": "src/test/compile-fail/issue-6762.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-6762.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-6762.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6762.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n //xfail-test\n \n // Creating a stack closure which references an owned pointer and then"}, {"sha": "60f16275fc4ac45b17d82605c0eff4a928142a07", "filename": "src/test/compile-fail/issue-6804.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-6804.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-6804.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6804.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[allow(dead_code)];\n \n // Matching against NaN should result in a warning"}, {"sha": "d0ff116b42fe1b829856b3142a757ce7ae211051", "filename": "src/test/compile-fail/issue-6977.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-6977.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-6977.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6977.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Trying to create a fixed-length vector with a negative size\n \n fn main() {"}, {"sha": "05d7b878d767b146711caabb03e06254424d4b07", "filename": "src/test/compile-fail/issue-7013.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-7013.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-7013.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7013.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -36,7 +36,8 @@ struct A\n \n fn main()\n {\n-    let a = A {v: ~B{v: None} as ~Foo}; //~ ERROR cannot pack type `~B`, which does not fulfill `Send`\n+    let a = A {v: ~B{v: None} as ~Foo};\n+    //~^ ERROR cannot pack type `~B`, which does not fulfill `Send`\n     let v = Rc::new(RefCell::new(a));\n     let w = v.clone();\n     let b = v.borrow();"}, {"sha": "74bc1ac0d86a1b3870c047626aad700d08199aa6", "filename": "src/test/compile-fail/issue-7246.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-7246.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-7246.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7246.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -13,7 +13,7 @@\n \n use std::ptr;\n pub unsafe fn g() {\n-    return; \n+    return;\n     if *ptr::null() {}; //~ ERROR unreachable\n }\n "}, {"sha": "5c7778807510b7ce331d29c3e9b479a1f1d751a5", "filename": "src/test/compile-fail/issue-897-2.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test\n // xfail'd because the lint pass doesn't know to ignore standard library\n // stuff."}, {"sha": "0a4ec841bd3cebc81b2b2475e2f635ac18fb3d95", "filename": "src/test/compile-fail/keyword-super.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fkeyword-super.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fkeyword-super.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkeyword-super.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {\n     let super: int; //~ ERROR found `super` in ident position\n }"}, {"sha": "1557aff6689f243904de63777be1b5f045f639b0", "filename": "src/test/compile-fail/kindck-destructor-owned.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,10 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[feature(managed_boxes)];\n \n struct Foo {\n     f: @int,\n }\n \n-impl Drop for Foo { //~ ERROR cannot implement a destructor on a structure that does not satisfy Send\n+impl Drop for Foo {\n+    //~^ ERROR cannot implement a destructor on a structure that does not satisfy Send\n     fn drop(&mut self) {\n     }\n }"}, {"sha": "234043a879972efe2b883cb93fbd5a95877de324", "filename": "src/test/compile-fail/kindck-owned-trait-scoped.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait-scoped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait-scoped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait-scoped.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test\n // xfail'd because to_foo() doesn't work.\n "}, {"sha": "e6c535925a4a00648217a5aa658eae2f7150eaeb", "filename": "src/test/compile-fail/lint-type-overflow.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Flint-type-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Flint-type-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-type-overflow.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -34,9 +34,9 @@ fn main() {\n     test(1000); //~ error: literal out of range for its type\n \n     let x = 128_i8; //~ error: literal out of range for its type\n-    let x = 127_i8; \n-    let x = -128_i8; \n-    let x = -(128_i8); \n+    let x = 127_i8;\n+    let x = -128_i8;\n+    let x = -(128_i8);\n     let x = -129_i8; //~ error: literal out of range for its type\n \n     let x: i32 = 2147483647; // should be OK"}, {"sha": "1b32c008af182c48da621c1feb3079f7e2c5bd77", "filename": "src/test/compile-fail/liveness-return-last-stmt-semi.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fliveness-return-last-stmt-semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fliveness-return-last-stmt-semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-return-last-stmt-semi.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -12,8 +12,9 @@\n \n #[feature(macro_rules)];\n \n-macro_rules! test ( () => { fn foo() -> int { 1i; } } ) //~ ERROR  not all control paths return a value\n-                                             //~^ NOTE consider removing this semicolon\n+macro_rules! test ( () => { fn foo() -> int { 1i; } } )\n+                                             //~^ ERROR not all control paths return a value\n+                                             //~^^ NOTE consider removing this semicolon\n \n fn no_return() -> int {} //~ ERROR  not all control paths return a value\n "}, {"sha": "7a2d89ecfc7f9af47c4e64297ce716191bcf76d8", "filename": "src/test/compile-fail/liveness-unused.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test\n // xfail'd because lint is messed up with the new visitor transition\n "}, {"sha": "104438848c4c0cfc5aa6d8aefee27dd49fe44658", "filename": "src/test/compile-fail/macro-inner-attributes.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmacro-inner-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmacro-inner-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-inner-attributes.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[feature(macro_rules)];\n \n macro_rules! test ( ($nm:ident,"}, {"sha": "6bd184ce6a67b64c785e654313018a99f23af296", "filename": "src/test/compile-fail/macro-outer-attributes.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmacro-outer-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmacro-outer-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-outer-attributes.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[feature(macro_rules)];\n \n macro_rules! test ( ($nm:ident,"}, {"sha": "a3b5a1264f7298c959edd35d49b3fa22cf2e2951", "filename": "src/test/compile-fail/map-types.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmap-types.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -17,5 +17,6 @@ fn main() {\n     let x: ~HashMap<~str, ~str> = ~HashMap::new();\n     let x: ~Map<~str, ~str> = x;\n     let y: ~Map<uint, ~str> = ~x;\n-    //~^ ERROR failed to find an implementation of trait std::container::Map<uint,~str> for ~std::container::Map<~str,~str>:Send\n+    //~^ ERROR failed to find an implementation of trait std::container::Map<uint,~str>\n+    //         for ~std::container::Map<~str,~str>:Send\n }"}, {"sha": "5ffcb26e12ed53b549e2098a8cba19d71826f56d", "filename": "src/test/compile-fail/match-ill-type1.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-ill-type1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-ill-type1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-ill-type1.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {\n     match 1 {\n         1..2u => 1, //~ ERROR mismatched types in range"}, {"sha": "d8d665e2af6b0a56c930a9faa94edfb9895a77e3", "filename": "src/test/compile-fail/match-ill-type2.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-ill-type2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-ill-type2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-ill-type2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {\n     match 1 {\n         1 => 1, //~ ERROR mismatched types between arms"}, {"sha": "1ebb8ed5ddc62d0231871935264f44e7bf0a7a2d", "filename": "src/test/compile-fail/match-struct.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-struct.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n \n struct S { a: int }\n enum E { C(int) }"}, {"sha": "e778dd18e68d3e64ac24d34bacad4d4741371ab7", "filename": "src/test/compile-fail/match-vec-fixed.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-vec-fixed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-vec-fixed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-vec-fixed.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn a() {\n     let v = [1, 2, 3];\n     match v {"}, {"sha": "5a50cb48da665b07c80999964919391d799c8b37", "filename": "src/test/compile-fail/match-vec-invalid.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-vec-invalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-vec-invalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-vec-invalid.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {\n     let a = ~[];\n     match a {"}, {"sha": "c3a06aa0e2c274184bcb213d041454cd61d9f062", "filename": "src/test/compile-fail/match-vec-mismatch-2.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch-2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {\n     match () {\n         [()] => { } //~ ERROR mismatched types: expected `()` but found a vector pattern"}, {"sha": "56c7264e36ef5135285576bed63bc8a5d1bdfad4", "filename": "src/test/compile-fail/match-vec-mismatch.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {\n     match ~\"foo\" {\n         ['f', 'o', ..] => { } //~ ERROR mismatched types: expected `~str` but found a vector pattern"}, {"sha": "d595effcb4b048826aa29863ce7b2a36c65534f1", "filename": "src/test/compile-fail/match-vec-unreachable.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-vec-unreachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmatch-vec-unreachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-vec-unreachable.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {\n     let x: ~[(int, int)] = ~[];\n     match x {"}, {"sha": "f07d4fcf70c2058bb3be731c9ebc71a435a1f806", "filename": "src/test/compile-fail/moves-based-on-type-access-to-field.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-access-to-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-access-to-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-access-to-field.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Tests that if you move from `x.f` or `x[0]`, `x` is inaccessible.\n // Also tests that we give a more specific error message.\n "}, {"sha": "4172d03d3de6a60990bafb99a0028683b22587af", "filename": "src/test/compile-fail/moves-based-on-type-block-bad.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct S {\n     x: ~E\n }"}, {"sha": "ca22907062bd0f89c3cb4464189fe7b26888a4f1", "filename": "src/test/compile-fail/moves-based-on-type-capture-clause-bad.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-capture-clause-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-capture-clause-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-capture-clause-bad.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n use std::task;\n \n fn main() {"}, {"sha": "2cadb3422e5c4531a9ec6d909c1c1b4ae6705efa", "filename": "src/test/compile-fail/moves-based-on-type-distribute-copy-over-paren.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-distribute-copy-over-paren.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-distribute-copy-over-paren.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-distribute-copy-over-paren.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Tests that references to move-by-default values trigger moves when\n // they occur as part of various kinds of expressions.\n "}, {"sha": "4c62e47965e08209a3778fdaf1184884639db167", "filename": "src/test/compile-fail/moves-based-on-type-exprs.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-exprs.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Tests that references to move-by-default values trigger moves when\n // they occur as part of various kinds of expressions.\n "}, {"sha": "6ea4b488738dfeb5085b67faa86fe42615e820ad", "filename": "src/test/compile-fail/moves-based-on-type-match-bindings.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-match-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-match-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-match-bindings.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Tests that bindings to move-by-default values trigger moves of the\n // discriminant. Also tests that the compiler explains the move in\n // terms of the binding, not the discriminant."}, {"sha": "a4cbb30f93f61667fc8f353fc230a65ed59c08b9", "filename": "src/test/compile-fail/moves-sru-moved-field.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-sru-moved-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmoves-sru-moved-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-sru-moved-field.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n type Noncopyable = proc();\n \n struct Foo {"}, {"sha": "501b17b202cfafbce991003788321fefaf689818", "filename": "src/test/compile-fail/mutable-enum-indirect.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmutable-enum-indirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fmutable-enum-indirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmutable-enum-indirect.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Tests that an `&` pointer to something inherently mutable is itself\n // to be considered mutable.\n "}, {"sha": "4b00334899dc7a5e7fc461d4984cfcff3f5b2927", "filename": "src/test/compile-fail/new-box-syntax-bad.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fnew-box-syntax-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fnew-box-syntax-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnew-box-syntax-bad.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n /* Any copyright is dedicated to the Public Domain.\n  * http://creativecommons.org/publicdomain/zero/1.0/ */\n "}, {"sha": "51ca71ae2cc5365a494385dad698708802f8677b", "filename": "src/test/compile-fail/no_crate_type.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_crate_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_crate_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_crate_type.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // regresion test for issue 11256\n #[crate_type];  //~ ERROR `crate_type` requires a value\n "}, {"sha": "e27b9dd85b471d865d295e886d729e0f1e8ca8f6", "filename": "src/test/compile-fail/no_freeze-enum.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_freeze-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_freeze-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_freeze-enum.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -16,5 +16,7 @@ fn bar<T: Freeze>(_: T) {}\n \n fn main() {\n     let x = A(marker::NoFreeze);\n-    bar(x); //~ ERROR instantiating a type parameter with an incompatible type `Foo`, which does not fulfill `Freeze`\n+    bar(x);\n+    //~^ ERROR instantiating a type parameter with an incompatible type `Foo`,\n+    //         which does not fulfill `Freeze`\n }"}, {"sha": "b814a71dcbe63cf323a245ff871f0693cd71024a", "filename": "src/test/compile-fail/no_freeze-rc.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_freeze-rc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_freeze-rc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_freeze-rc.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -15,5 +15,7 @@ fn bar<T: Freeze>(_: T) {}\n \n fn main() {\n     let x = Rc::new(RefCell::new(5));\n-    bar(x); //~ ERROR instantiating a type parameter with an incompatible type `std::rc::Rc<std::cell::RefCell<int>>`, which does not fulfill `Freeze`\n+    bar(x);\n+    //~^ ERROR instantiating a type parameter with an incompatible type\n+    //         `std::rc::Rc<std::cell::RefCell<int>>`, which does not fulfill `Freeze`\n }"}, {"sha": "c85574438ba3b57225adf2fea97f3dbb31170720", "filename": "src/test/compile-fail/no_freeze-struct.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_freeze-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_freeze-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_freeze-struct.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -16,5 +16,7 @@ fn bar<T: Freeze>(_: T) {}\n \n fn main() {\n     let x = Foo { a: 5, m: marker::NoFreeze };\n-    bar(x); //~ ERROR instantiating a type parameter with an incompatible type `Foo`, which does not fulfill `Freeze`\n+    bar(x);\n+    //~^ ERROR instantiating a type parameter with an incompatible type `Foo`,\n+    //         which does not fulfill `Freeze`\n }"}, {"sha": "4395151cbc1571c96f12353f4e262324be0be47f", "filename": "src/test/compile-fail/no_send-enum.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_send-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_send-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_send-enum.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -18,5 +18,7 @@ fn bar<T: Send>(_: T) {}\n \n fn main() {\n     let x = A(marker::NoSend);\n-    bar(x); //~ ERROR instantiating a type parameter with an incompatible type `Foo`, which does not fulfill `Send`\n+    bar(x);\n+    //~^ ERROR instantiating a type parameter with an incompatible type `Foo`,\n+    //         which does not fulfill `Send`\n }"}, {"sha": "20f1cbc47bcd6dfb583650674d75140be45d3376", "filename": "src/test/compile-fail/no_send-rc.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_send-rc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_send-rc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_send-rc.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -14,5 +14,7 @@ fn bar<T: Send>(_: T) {}\n \n fn main() {\n     let x = Rc::new(5);\n-    bar(x); //~ ERROR instantiating a type parameter with an incompatible type `std::rc::Rc<int>`, which does not fulfill `Send`\n+    bar(x);\n+    //~^ ERROR instantiating a type parameter with an incompatible type `std::rc::Rc<int>`,\n+    //         which does not fulfill `Send`\n }"}, {"sha": "5b083374c51e68265a5ed43e3d1e5bed242ef236", "filename": "src/test/compile-fail/no_send-struct.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_send-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fno_send-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_send-struct.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -19,5 +19,7 @@ fn bar<T: Send>(_: T) {}\n \n fn main() {\n     let x = Foo { a: 5, ns: marker::NoSend };\n-    bar(x); //~ ERROR instantiating a type parameter with an incompatible type `Foo`, which does not fulfill `Send`\n+    bar(x);\n+    //~^ ERROR instantiating a type parameter with an incompatible type `Foo`,\n+    //         which does not fulfill `Send`\n }"}, {"sha": "a4eba4b4cbf77a1defb520494e58d429232e6c01", "filename": "src/test/compile-fail/non-constant-enum-for-vec-repeat.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fnon-constant-enum-for-vec-repeat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fnon-constant-enum-for-vec-repeat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnon-constant-enum-for-vec-repeat.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -11,5 +11,6 @@\n enum State { ST_NULL, ST_WHITESPACE }\n \n fn main() {\n-    ~[ST_NULL, ..(ST_WHITESPACE as uint)]; //~ ERROR expected constant integer for repeat count but found variable\n+    ~[ST_NULL, ..(ST_WHITESPACE as uint)];\n+    //~^ ERROR expected constant integer for repeat count but found variable\n }"}, {"sha": "52c60971708fa1d8c7f4e76850bef52b0b9aea55", "filename": "src/test/compile-fail/non-constant-expr-for-fixed-len-vec.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fnon-constant-expr-for-fixed-len-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fnon-constant-expr-for-fixed-len-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnon-constant-expr-for-fixed-len-vec.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -12,6 +12,7 @@\n \n fn main() {\n     fn bar(n: int) {\n-        let _x: [int, ..n]; //~ ERROR expected constant expr for vector length: Non-constant path in constant expr\n+        let _x: [int, ..n];\n+        //~^ ERROR expected constant expr for vector length: Non-constant path in constant expr\n     }\n }"}, {"sha": "eac0dcb310e54c476e98bb51c54878b37d66ec51", "filename": "src/test/compile-fail/non-exhaustive-match.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fnon-exhaustive-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fnon-exhaustive-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnon-exhaustive-match.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -35,7 +35,8 @@ fn main() {\n       (_, a) => {}\n       (b, b) => {}\n     }\n-    match ~[Some(42), None, Some(21)] { //~ ERROR non-exhaustive patterns: vectors of length 0 not covered\n+    match ~[Some(42), None, Some(21)] {\n+        //~^ ERROR non-exhaustive patterns: vectors of length 0 not covered\n         [Some(..), None, ..tail] => {}\n         [Some(..), Some(..), ..tail] => {}\n         [None] => {}"}, {"sha": "a26733ebcee662b24b121eba10c77a812753a7bf", "filename": "src/test/compile-fail/pattern-tyvar-2.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -14,6 +14,7 @@ extern mod extra;\n enum bar { t1((), Option<~[int]>), t2, }\n \n // n.b. my change changes this error message, but I think it's right -- tjc\n-fn foo(t: bar) -> int { match t { t1(_, Some(x)) => { return x * 3; } _ => { fail!(); } } } //~ ERROR binary operation `*` cannot be applied to\n+fn foo(t: bar) -> int { match t { t1(_, Some(x)) => { return x * 3; } _ => { fail!(); } } }\n+//~^ ERROR binary operation `*` cannot be applied to\n \n fn main() { }"}, {"sha": "c6419991b112c4a860bb6859e0e75188c0946a15", "filename": "src/test/compile-fail/private-method-inherited.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fprivate-method-inherited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fprivate-method-inherited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-method-inherited.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Tests that inherited visibility applies to methods.\n \n mod a {"}, {"sha": "357e650ffce4d29d428e0a8396b67c5786281bd0", "filename": "src/test/compile-fail/private-variant-xc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fprivate-variant-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fprivate-variant-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-variant-xc.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // aux-build:private_variant_xc.rs\n // xfail-test\n "}, {"sha": "2cd96735a07090685e9da4e3d72b0bb9f8f40c1d", "filename": "src/test/compile-fail/regions-addr-of-self.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-addr-of-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-addr-of-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-addr-of-self.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -14,7 +14,8 @@ struct dog {\n \n impl dog {\n     pub fn chase_cat(&mut self) {\n-        let p: &'static mut uint = &mut self.cats_chased; //~ ERROR cannot infer an appropriate lifetime\n+        let p: &'static mut uint = &mut self.cats_chased;\n+        //~^ ERROR cannot infer an appropriate lifetime\n         *p += 1u;\n     }\n "}, {"sha": "c8fe60a2490fa4b2816a713ad66d75409be0831f", "filename": "src/test/compile-fail/regions-addr-of-upvar-self.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-addr-of-upvar-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-addr-of-upvar-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-addr-of-upvar-self.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -17,7 +17,8 @@ struct dog {\n impl dog {\n     pub fn chase_cat(&mut self) {\n         let _f = || {\n-            let p: &'static mut uint = &mut self.food; //~ ERROR cannot infer an appropriate lifetime\n+            let p: &'static mut uint = &mut self.food;\n+            //~^ ERROR cannot infer an appropriate lifetime\n             *p = 3u;\n         };\n     }"}, {"sha": "817a4265a992ab99be240ae63d5c6cf8564d5099", "filename": "src/test/compile-fail/regions-fn-bound.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-fn-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-fn-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-fn-bound.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test\n // xfail'd because the first error does not show up.\n "}, {"sha": "940a7f9afbbb3f29c16a1d6a518714e81523fb0b", "filename": "src/test/compile-fail/regions-freevar.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-freevar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-freevar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-freevar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -12,7 +12,8 @@ fn wants_static_fn(_x: 'static ||) {}\n \n fn main() {\n     let i = 3;\n-    wants_static_fn(|| { //~ ERROR cannot infer an appropriate lifetime due to conflicting requirements\n+    wants_static_fn(|| {\n+        //~^ ERROR cannot infer an appropriate lifetime due to conflicting requirements\n         info!(\"i={}\", i);\n     })\n }"}, {"sha": "db091092589de807e3bbe67e2eb422c1e7a15b08", "filename": "src/test/compile-fail/regions-infer-paramd-method.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-infer-paramd-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-infer-paramd-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-paramd-method.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test\n // xfail'd due to problems with by value self.\n "}, {"sha": "8c8404f7abc83e49394c361678cbc1086a54d2e9", "filename": "src/test/compile-fail/regions-ref-in-fn-arg.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-ref-in-fn-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-ref-in-fn-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-ref-in-fn-arg.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn arg_item(~ref x: ~int) -> &'static int {\n     x //~^ ERROR borrowed value does not live long enough\n }"}, {"sha": "6cd22799d42cec6b5de1280347886adf53553588", "filename": "src/test/compile-fail/regions-trait-3.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-trait-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fregions-trait-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-trait-3.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test\n // xfail'd due to problems with by-value self.\n "}, {"sha": "a230e813a48e0d89174bdbfa6a8028aca57011a3", "filename": "src/test/compile-fail/resolve-inconsistent-binding-mode.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fresolve-inconsistent-binding-mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fresolve-inconsistent-binding-mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-inconsistent-binding-mode.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -14,21 +14,24 @@ enum opts {\n \n fn matcher1(x: opts) {\n     match x {\n-      a(ref i) | b(i) => {} //~ ERROR variable `i` is bound with different mode in pattern #2 than in pattern #1\n+      a(ref i) | b(i) => {}\n+      //~^ ERROR variable `i` is bound with different mode in pattern #2 than in pattern #1\n       c(_) => {}\n     }\n }\n \n fn matcher2(x: opts) {\n     match x {\n-      a(ref i) | b(i) => {} //~ ERROR variable `i` is bound with different mode in pattern #2 than in pattern #1\n+      a(ref i) | b(i) => {}\n+      //~^ ERROR variable `i` is bound with different mode in pattern #2 than in pattern #1\n       c(_) => {}\n     }\n }\n \n fn matcher4(x: opts) {\n     match x {\n-      a(ref mut i) | b(ref i) => {} //~ ERROR variable `i` is bound with different mode in pattern #2 than in pattern #1\n+      a(ref mut i) | b(ref i) => {}\n+      //~^ ERROR variable `i` is bound with different mode in pattern #2 than in pattern #1\n       c(_) => {}\n     }\n }"}, {"sha": "6a57ee76cdff28958aadde6fde814ccd83dc897d", "filename": "src/test/compile-fail/simd-type.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fsimd-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fsimd-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsimd-type.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[feature(simd)];\n \n #[simd]"}, {"sha": "d9e3846c5060bf6e54c7bac794321f1d328c7cc6", "filename": "src/test/compile-fail/static-assert.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstatic-assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstatic-assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-assert.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[allow(dead_code)];\n \n #[static_assert]"}, {"sha": "30c6f05bd6084d9f73edcd21c5959e659250b2f3", "filename": "src/test/compile-fail/static-assert2.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstatic-assert2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstatic-assert2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-assert2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[allow(dead_code)];\n \n #[static_assert]"}, {"sha": "5e175aa0feef4cffd9e7e5af82560c43dacdb0ab", "filename": "src/test/compile-fail/static-method-privacy.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstatic-method-privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstatic-method-privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-method-privacy.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n mod a {\n     pub struct S;\n     impl S {"}, {"sha": "ed9d3cd74d045b1de2ef05abc58d0cd5ecf33abe", "filename": "src/test/compile-fail/static-region-bound.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstatic-region-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstatic-region-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-region-bound.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[feature(managed_boxes)];\n \n fn f<T:'static>(_: T) {}"}, {"sha": "03be2cc8f0f02741a85cb0fa3492a56bb8f91ff6", "filename": "src/test/compile-fail/static-vec-repeat-not-constant.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstatic-vec-repeat-not-constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstatic-vec-repeat-not-constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-vec-repeat-not-constant.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -10,6 +10,7 @@\n \n fn foo() -> int { 23 }\n \n-static a: [int, ..2] = [foo(), ..2]; //~ ERROR: function calls in constants are limited to struct and enum constructors\n+static a: [int, ..2] = [foo(), ..2];\n+//~^ ERROR: function calls in constants are limited to struct and enum constructors\n \n fn main() {}"}, {"sha": "a6082d3148071c7b46bbbaa0ef23fa8a82157240", "filename": "src/test/compile-fail/staticness-mismatch.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstaticness-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fstaticness-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstaticness-mismatch.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -14,7 +14,8 @@ trait foo {\n }\n \n impl foo for int {\n-    fn bar(&self) {} //~ ERROR method `bar` has a `&self` declaration in the impl, but not in the trait\n+    fn bar(&self) {}\n+    //~^ ERROR method `bar` has a `&self` declaration in the impl, but not in the trait\n }\n \n fn main() {}"}, {"sha": "7176d5f92f9a15587a74129ac43fd97b5e6d44a1", "filename": "src/test/compile-fail/super-at-top-level.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n use super::f; //~ ERROR failed to resolve import\n \n fn main() {"}, {"sha": "297d36c3a0e8374c1c975241ec77e0314be8b43b", "filename": "src/test/compile-fail/trait-coercion-generic-bad.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-bad.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -23,8 +23,8 @@ impl Trait<&'static str> for Struct {\n }\n \n fn main() {\n-    let s: ~Trait<int> = ~Struct { person: \"Fred\" };    //~ ERROR expected Trait<int>, but found Trait<&'static str>\n+    let s: ~Trait<int> = ~Struct { person: \"Fred\" };\n     //~^ ERROR expected Trait<int>, but found Trait<&'static str>\n+    //~^^ ERROR expected Trait<int>, but found Trait<&'static str>\n     s.f(1);\n }\n-"}, {"sha": "677c4943043faa61582dfeb57d35fd68230a8d11", "filename": "src/test/compile-fail/tuple-arity-mismatch.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Ftuple-arity-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Ftuple-arity-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftuple-arity-mismatch.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -13,5 +13,6 @@\n fn first((value, _): (int, f64)) -> int { value }\n \n fn main() {\n-    let y = first ((1,2,3)); //~ ERROR expected a tuple with 2 elements but found one with 3 elements\n+    let y = first ((1,2,3));\n+    //~^ ERROR expected a tuple with 2 elements but found one with 3 elements\n }"}, {"sha": "da8478de98585e2d5ef701a44f226042b7926f84", "filename": "src/test/compile-fail/type-parameter-names.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Ftype-parameter-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Ftype-parameter-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-parameter-names.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Test that we print out the names of type parameters correctly in\n // our error messages.\n "}, {"sha": "fad20a7e37374a07f0f15f23a435b35198e77098", "filename": "src/test/compile-fail/uninhabited-enum-cast.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Funinhabited-enum-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Funinhabited-enum-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funinhabited-enum-cast.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n enum E {}\n \n fn f(e: E) {"}, {"sha": "316e17c54adca141ff19a03343e907e6ab894dce", "filename": "src/test/compile-fail/unop-neg-bool.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Funop-neg-bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Funop-neg-bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funop-neg-bool.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {\n     -true; //~ ERROR cannot apply unary operator `-` to type `bool`\n }"}, {"sha": "d79461a577ec9499a6560d8115cc5ea11b7bf8e0", "filename": "src/test/compile-fail/use-after-move-implicity-coerced-object.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fuse-after-move-implicity-coerced-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fuse-after-move-implicity-coerced-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-after-move-implicity-coerced-object.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-tidy-linelength\n+\n struct Number {\n     n: i64\n }\n@@ -32,6 +34,6 @@ fn main() {\n     let n = ~Number { n: 42 };\n     let mut l = ~List { list: ~[] };\n     l.push(n);\n-    //^~ NOTE: `n` moved here because it has type `~Number`, which is non-copyable (perhaps you meant to use clone()?)\n-    let x = n.to_str(); //~ ERROR: use of moved value: `n`\n+    let x = n.to_str();\n+    //~^ ERROR: use of moved value: `n`\n }"}, {"sha": "b93fc2680cd30b762afba8c0be18f725b4dc8124", "filename": "src/test/compile-fail/use-after-move-self-based-on-type.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct S {\n     x: int,\n }"}, {"sha": "56e5fdce3cf71f733e6cb5fae96af5187fe75c02", "filename": "src/test/compile-fail/use-after-move-self.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct S {\n     x: ~int\n }"}, {"sha": "a4db5457750cd86372d5be2281fa027971cf09bb", "filename": "src/test/compile-fail/use-from-trait-xc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fuse-from-trait-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fuse-from-trait-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-from-trait-xc.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // aux-build:use_from_trait_xc.rs\n \n extern mod use_from_trait_xc;"}, {"sha": "8f8d96f8024e7c2353fe28a895af37b582fb40a4", "filename": "src/test/compile-fail/use-from-trait.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n use Trait::foo;  //~ ERROR cannot import from a trait or type implementation\n //~^ ERROR failed to resolve import\n use Foo::new;    //~ ERROR cannot import from a trait or type implementation"}, {"sha": "d0599c2ba4bdb8586350c0e04c98fd677f5f4dea", "filename": "src/test/compile-fail/variadic-ffi.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -24,10 +24,14 @@ fn main() {\n         foo(1); //~ ERROR: this function takes at least 2 parameters but 1 parameter was supplied\n \n         let x: extern \"C\" unsafe fn(f: int, x: u8) = foo;\n-        //~^ ERROR: mismatched types: expected `extern \"C\" unsafe fn(int, u8)` but found `extern \"C\" unsafe fn(int, u8, ...)` (expected non-variadic fn but found variadic function)\n+        //~^ ERROR: mismatched types: expected `extern \"C\" unsafe fn(int, u8)`\n+        //          but found `extern \"C\" unsafe fn(int, u8, ...)`\n+        //          (expected non-variadic fn but found variadic function)\n \n         let y: extern \"C\" unsafe fn(f: int, x: u8, ...) = bar;\n-        //~^ ERROR: mismatched types: expected `extern \"C\" unsafe fn(int, u8, ...)` but found `extern \"C\" extern fn(int, u8)` (expected variadic fn but found non-variadic function)\n+        //~^ ERROR: mismatched types: expected `extern \"C\" unsafe fn(int, u8, ...)`\n+        //          but found `extern \"C\" extern fn(int, u8)`\n+        //          (expected variadic fn but found non-variadic function)\n \n         foo(1, 2, 3f32); //~ ERROR: can't pass an f32 to variadic function, cast to c_double\n         foo(1, 2, true); //~ ERROR: can't pass bool to variadic function, cast to c_int"}, {"sha": "012245f9451c42864479338b7cd289a6e80c50a9", "filename": "src/test/compile-fail/xc-private-method2.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fxc-private-method2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fcompile-fail%2Fxc-private-method2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fxc-private-method2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -14,7 +14,9 @@\n extern mod xc_private_method_lib;\n \n fn main() {\n-    let _ = xc_private_method_lib::Struct{ x: 10 }.meth_struct();  //~ ERROR method `meth_struct` is private\n+    let _ = xc_private_method_lib::Struct{ x: 10 }.meth_struct();\n+    //~^ ERROR method `meth_struct` is private\n \n-    let _ = xc_private_method_lib::Variant1(20).meth_enum();  //~ ERROR method `meth_enum` is private\n+    let _ = xc_private_method_lib::Variant1(20).meth_enum();\n+    //~^ ERROR method `meth_enum` is private\n }"}, {"sha": "e6094fdef9fe07e134b34d698bd126d1531281ff", "filename": "src/test/debug-info/borrowed-enum.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fborrowed-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fborrowed-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fborrowed-enum.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -31,8 +31,8 @@\n // the size of the discriminant value is machine dependent, this has be taken into account when\n // datatype layout should be predictable as in this case.\n enum ABC {\n-\tTheA { x: i64, y: i64 },\n-\tTheB (i64, i32, i32),\n+    TheA { x: i64, y: i64 },\n+    TheB (i64, i32, i32),\n }\n \n // This is a special case since it does not have the implicit discriminant field.\n@@ -42,10 +42,10 @@ enum Univariant {\n \n fn main() {\n \n-\t// 0b0111110001111100011111000111110001111100011111000111110001111100 = 8970181431921507452\n-\t// 0b01111100011111000111110001111100 = 2088533116\n-\t// 0b0111110001111100 = 31868\n-\t// 0b01111100 = 124\n+    // 0b0111110001111100011111000111110001111100011111000111110001111100 = 8970181431921507452\n+    // 0b01111100011111000111110001111100 = 2088533116\n+    // 0b0111110001111100 = 31868\n+    // 0b01111100 = 124\n     let the_a = TheA { x: 0, y: 8970181431921507452 };\n     let the_a_ref: &ABC = &the_a;\n "}, {"sha": "ed711e2ca0be62ee7e404017bedab8211e1fd3f1", "filename": "src/test/debug-info/destructured-fn-argument.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fdestructured-fn-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fdestructured-fn-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fdestructured-fn-argument.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -232,7 +232,8 @@ fn different_order_of_struct_fields(Struct { b: s, a: t }: Struct ) {\n }\n \n fn complex_nesting(((u,   v  ), ((w,   (x,   Struct { a: y, b: z})), Struct { a: ae, b: oe }), ue ):\n-                   ((i16, i32), ((i64, (i32, Struct,             )), Struct                 ), u16)) {\n+                   ((i16, i32), ((i64, (i32, Struct,             )), Struct                 ), u16))\n+{\n     zzz();\n }\n "}, {"sha": "5930af11567774fa14ff75d8cef06e0e25fb1891", "filename": "src/test/debug-info/generic-struct-style-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fgeneric-struct-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fgeneric-struct-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fgeneric-struct-style-enum.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-tidy-linelength\n // xfail-android: FIXME(#10381)\n \n // compile-flags:-Z extra-debug-info"}, {"sha": "0a737ffe0732ce92f669575f2b6552e5016e41da", "filename": "src/test/debug-info/generic-tuple-style-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fgeneric-tuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fgeneric-tuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fgeneric-tuple-style-enum.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-tidy-linelength\n // xfail-android: FIXME(#10381)\n \n // compile-flags:-Z extra-debug-info"}, {"sha": "74064bb57822dba2d3b70bad337c04e7c3be2642", "filename": "src/test/debug-info/include_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Finclude_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Finclude_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Finclude_string.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -24,7 +24,7 @@\n \n #[allow(unused_variable)];\n \n-// This test case makes sure that debug info does not ICE when include_str is \n+// This test case makes sure that debug info does not ICE when include_str is\n // used multiple times (see issue #11322).\n \n fn main() {"}, {"sha": "00e240d147c4b3febda1684416160a5c8af5fdf5", "filename": "src/test/debug-info/issue11600.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fissue11600.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fissue11600.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fissue11600.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {\n     let args : ~[~str] = ::std::os::args();\n     ::std::io::println(args[0]);"}, {"sha": "ef94fd3e331f4dd277e5cf1478ce71c61aa22144", "filename": "src/test/debug-info/managed-enum.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fmanaged-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fmanaged-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmanaged-enum.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -31,8 +31,8 @@\n // the size of the discriminant value is machine dependent, this has be taken into account when\n // datatype layout should be predictable as in this case.\n enum ABC {\n-\tTheA { x: i64, y: i64 },\n-\tTheB (i64, i32, i32),\n+    TheA { x: i64, y: i64 },\n+    TheB (i64, i32, i32),\n }\n \n // This is a special case since it does not have the implicit discriminant field.\n@@ -46,10 +46,10 @@ fn main() {\n     // repeated byte. This way each interpretation of the union should look the same, no matter if\n     // this is a big or little endian machine.\n \n-\t// 0b0111110001111100011111000111110001111100011111000111110001111100 = 8970181431921507452\n-\t// 0b01111100011111000111110001111100 = 2088533116\n-\t// 0b0111110001111100 = 31868\n-\t// 0b01111100 = 124\n+    // 0b0111110001111100011111000111110001111100011111000111110001111100 = 8970181431921507452\n+    // 0b01111100011111000111110001111100 = 2088533116\n+    // 0b0111110001111100 = 31868\n+    // 0b01111100 = 124\n     let the_a = @TheA { x: 0, y: 8970181431921507452 };\n \n     // 0b0001000100010001000100010001000100010001000100010001000100010001 = 1229782938247303441"}, {"sha": "29a7de4a3169cc56ff55c185b98be66a8c0f25f9", "filename": "src/test/debug-info/multiple-functions-equal-var-names.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fmultiple-functions-equal-var-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fmultiple-functions-equal-var-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmultiple-functions-equal-var-names.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -31,26 +31,26 @@\n #[allow(unused_variable)];\n \n fn function_one() {\n-\tlet abc = 10101;\n-\tzzz();\n+    let abc = 10101;\n+    zzz();\n }\n \n fn function_two() {\n-\tlet abc = 20202;\n-\tzzz();\n+    let abc = 20202;\n+    zzz();\n }\n \n \n fn function_three() {\n-\tlet abc = 30303;\n-\tzzz();\n+    let abc = 30303;\n+    zzz();\n }\n \n \n fn main() {\n-\tfunction_one();\n-\tfunction_two();\n-\tfunction_three();\n+    function_one();\n+    function_two();\n+    function_three();\n }\n \n fn zzz() {()}"}, {"sha": "f5abe6e249d712cf41ce79006502224d37897acb", "filename": "src/test/debug-info/multiple-functions.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fmultiple-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fmultiple-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmultiple-functions.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -31,26 +31,26 @@\n #[allow(unused_variable)];\n \n fn function_one() {\n-\tlet a = 10101;\n-\tzzz();\n+    let a = 10101;\n+    zzz();\n }\n \n fn function_two() {\n-\tlet b = 20202;\n-\tzzz();\n+    let b = 20202;\n+    zzz();\n }\n \n \n fn function_three() {\n-\tlet c = 30303;\n-\tzzz();\n+    let c = 30303;\n+    zzz();\n }\n \n \n fn main() {\n-\tfunction_one();\n-\tfunction_two();\n-\tfunction_three();\n+    function_one();\n+    function_two();\n+    function_three();\n }\n \n fn zzz() {()}"}, {"sha": "5e6480fa8c5601579c21cfacaea3b561e58a8572", "filename": "src/test/debug-info/packed-struct-with-destructor.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fpacked-struct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fpacked-struct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fpacked-struct-with-destructor.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-tidy-linelength\n // xfail-android: FIXME(#10381)\n \n // compile-flags:-Z extra-debug-info"}, {"sha": "795b9d275dd78c219a29446ce6f7d2b266ddf2e6", "filename": "src/test/debug-info/packed-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fpacked-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fpacked-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fpacked-struct.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-tidy-linelength\n // xfail-android: FIXME(#10381)\n \n // compile-flags:-Z extra-debug-info"}, {"sha": "b706ad1c38cc4ae8b4b204d4e19436da84c4fbe1", "filename": "src/test/debug-info/struct-in-enum.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fstruct-in-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fstruct-in-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fstruct-in-enum.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-tidy-linelength\n // xfail-android: FIXME(#10381)\n \n // compile-flags:-Z extra-debug-info\n@@ -28,9 +29,9 @@\n #[allow(unused_variable)];\n \n struct Struct {\n-\tx: u32,\n-\ty: i32,\n-\tz: i16\n+    x: u32,\n+    y: i32,\n+    z: i16\n }\n \n // The first element is to ensure proper alignment, irrespective of the machines word size. Since\n@@ -42,7 +43,7 @@ enum Regular {\n }\n \n enum Univariant {\n-\tTheOnlyCase(Struct)\n+    TheOnlyCase(Struct)\n }\n \n fn main() {"}, {"sha": "d7804da78941a5e043eb1c9ef8e5611526f03d05", "filename": "src/test/debug-info/struct-style-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fstruct-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Fstruct-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fstruct-style-enum.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-tidy-linelength\n // xfail-android: FIXME(#10381)\n \n // compile-flags:-Z extra-debug-info"}, {"sha": "c9d577a24917ecede5b5a2aa137c4ad78b10cc0d", "filename": "src/test/debug-info/tuple-style-enum.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Ftuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Ftuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Ftuple-style-enum.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-tidy-linelength\n // xfail-android: FIXME(#10381)\n \n // compile-flags:-Z extra-debug-info\n@@ -40,7 +41,7 @@ enum Regular {\n }\n \n enum Univariant {\n-\tTheOnlyCase(i64)\n+    TheOnlyCase(i64)\n }\n \n fn main() {"}, {"sha": "647a6e55f98574c2b192035c03b3f7b346bdbc88", "filename": "src/test/debug-info/unique-enum.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Funique-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fdebug-info%2Funique-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Funique-enum.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -31,8 +31,8 @@\n // the size of the discriminant value is machine dependent, this has be taken into account when\n // datatype layout should be predictable as in this case.\n enum ABC {\n-\tTheA { x: i64, y: i64 },\n-\tTheB (i64, i32, i32),\n+    TheA { x: i64, y: i64 },\n+    TheB (i64, i32, i32),\n }\n \n // This is a special case since it does not have the implicit discriminant field.\n@@ -46,10 +46,10 @@ fn main() {\n     // repeated byte. This way each interpretation of the union should look the same, no matter if\n     // this is a big or little endian machine.\n \n-\t// 0b0111110001111100011111000111110001111100011111000111110001111100 = 8970181431921507452\n-\t// 0b01111100011111000111110001111100 = 2088533116\n-\t// 0b0111110001111100 = 31868\n-\t// 0b01111100 = 124\n+    // 0b0111110001111100011111000111110001111100011111000111110001111100 = 8970181431921507452\n+    // 0b01111100011111000111110001111100 = 2088533116\n+    // 0b0111110001111100 = 31868\n+    // 0b01111100 = 124\n     let the_a = ~TheA { x: 0, y: 8970181431921507452 };\n \n     // 0b0001000100010001000100010001000100010001000100010001000100010001 = 1229782938247303441"}, {"sha": "4ddf0c5816ec74db039a6be5f2f9369a114486ea", "filename": "src/test/pretty/block-comment-wchar.pp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fblock-comment-wchar.pp", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fblock-comment-wchar.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fblock-comment-wchar.pp?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -11,7 +11,8 @@\n // This is meant as a test case for Issue 3961.\n //\n // Test via: rustc --pretty normal src/test/pretty/block-comment-wchar.rs\n-//\n+// xfail-tidy-cr\n+// xfail-tidy-tab\n // pp-exact:block-comment-wchar.pp\n fn f() {\n     fn nested() {"}, {"sha": "0c2daa06f83e73b926a3c55d5315e25a954d4041", "filename": "src/test/pretty/block-comment-wchar.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fblock-comment-wchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fblock-comment-wchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fblock-comment-wchar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -11,7 +11,8 @@\n // This is meant as a test case for Issue 3961.\n //\n // Test via: rustc --pretty normal src/test/pretty/block-comment-wchar.rs\n-//\n+// xfail-tidy-cr\n+// xfail-tidy-tab\n // pp-exact:block-comment-wchar.pp\n fn f() {\n     fn nested() {"}, {"sha": "a9d0d1f67d5f6d9ffe7bace12f0ac984fb10c1b8", "filename": "src/test/pretty/closure-reform-pretty.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fclosure-reform-pretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fclosure-reform-pretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fclosure-reform-pretty.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Any copyright is dedicated to the Public Domain.\n // http://creativecommons.org/publicdomain/zero/1.0/\n "}, {"sha": "f22f1b409526900b3f1909221c9cf50ec1d667c0", "filename": "src/test/pretty/empty-impl.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fempty-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fempty-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fempty-impl.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n trait X { }\n impl X for uint { }\n "}, {"sha": "c5f24160db51a34b3315abf0e3cfc890a1b3a5dc", "filename": "src/test/pretty/path-type-bounds.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fpath-type-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fpath-type-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fpath-type-bounds.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // pp-exact\n \n trait Tr { }"}, {"sha": "acd534ccbfa2c8125cd51d5ca06b11976b106013", "filename": "src/test/pretty/struct-tuple.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fstruct-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Fpretty%2Fstruct-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fstruct-tuple.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // pp-exact\n struct Foo;\n struct Bar(int, int);"}, {"sha": "c52c11b1b91881c68963d854fa45242ebedae8bc", "filename": "src/test/run-fail/assert-as-macro.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-fail%2Fassert-as-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-fail%2Fassert-as-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-as-macro.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // error-pattern:assertion failed: 1 == 2\n \n fn main() {"}, {"sha": "7cebfc723de5f0ce2442cbd24038a195f58fc54e", "filename": "src/test/run-fail/assert-eq-macro-fail.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-fail%2Fassert-eq-macro-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-fail%2Fassert-eq-macro-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-eq-macro-fail.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // error-pattern:assertion failed: `(left == right) && (right == left)` (left: `14`, right: `15`)\n \n #[deriving(Eq)]"}, {"sha": "7f7eddd86cf67e6fbc5db21293ec1b5621fdaa7a", "filename": "src/test/run-fail/die-macro-expr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-fail%2Fdie-macro-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-fail%2Fdie-macro-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fdie-macro-expr.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // error-pattern:test\n \n fn main() {"}, {"sha": "f1d9b15c42a0b09fd0f6ae7d0186554fddebd7cc", "filename": "src/test/run-fail/die-macro-pure.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-fail%2Fdie-macro-pure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-fail%2Fdie-macro-pure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fdie-macro-pure.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // error-pattern:test\n \n fn f() {"}, {"sha": "82e790c5d9fd90f7f916afb8577bd46663d389c4", "filename": "src/test/run-fail/die-macro.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-fail%2Fdie-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-fail%2Fdie-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fdie-macro.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // error-pattern:test\n \n fn main() {"}, {"sha": "fa21dfac47cdc8e55198cfc041ed32bca52f60cd", "filename": "src/test/run-make/c-dynamic-dylib/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2Fbar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod foo;\n \n fn main() {"}, {"sha": "5c24e69d79f9f11b2ff38f9ee0d0cd6bc40fa1bc", "filename": "src/test/run-make/c-dynamic-dylib/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"dylib\"];\n \n #[link(name = \"cfoo\")]"}, {"sha": "fa21dfac47cdc8e55198cfc041ed32bca52f60cd", "filename": "src/test/run-make/c-dynamic-rlib/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-dynamic-rlib%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-dynamic-rlib%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-dynamic-rlib%2Fbar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod foo;\n \n fn main() {"}, {"sha": "1f13d610144fd848f463b537d3f2d6ff1057e473", "filename": "src/test/run-make/c-dynamic-rlib/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-dynamic-rlib%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-dynamic-rlib%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-dynamic-rlib%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"rlib\"];\n \n #[link(name = \"cfoo\")]"}, {"sha": "0f8ca1e6ef18b3a04de4e9750fadc4214d11be25", "filename": "src/test/run-make/c-link-to-rust-dylib/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-link-to-rust-dylib%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-link-to-rust-dylib%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-link-to-rust-dylib%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"dylib\"];\n \n #[no_mangle]"}, {"sha": "4cb7a7493857a0ced19c09805d178349934d20f3", "filename": "src/test/run-make/c-link-to-rust-staticlib/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"staticlib\"];\n \n #[no_mangle]"}, {"sha": "fa21dfac47cdc8e55198cfc041ed32bca52f60cd", "filename": "src/test/run-make/c-static-dylib/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-static-dylib%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-static-dylib%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-static-dylib%2Fbar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod foo;\n \n fn main() {"}, {"sha": "5c24e69d79f9f11b2ff38f9ee0d0cd6bc40fa1bc", "filename": "src/test/run-make/c-static-dylib/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-static-dylib%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-static-dylib%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-static-dylib%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"dylib\"];\n \n #[link(name = \"cfoo\")]"}, {"sha": "fa21dfac47cdc8e55198cfc041ed32bca52f60cd", "filename": "src/test/run-make/c-static-rlib/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-static-rlib%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-static-rlib%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-static-rlib%2Fbar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod foo;\n \n fn main() {"}, {"sha": "1f13d610144fd848f463b537d3f2d6ff1057e473", "filename": "src/test/run-make/c-static-rlib/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-static-rlib%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fc-static-rlib%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-static-rlib%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"rlib\"];\n \n #[link(name = \"cfoo\")]"}, {"sha": "71b54f6c3414cd47204720df5c8762d04a584b20", "filename": "src/test/run-make/crate-data-smoke/crate.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Fcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Fcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Fcrate.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_id = \"foo#0.10-pre\"];\n \n // Querying about the crate metadata should *not* parse the entire crate, it"}, {"sha": "546d987b90c95ba24d0aa15bcf2cd12ebc15fffa", "filename": "src/test/run-make/crate-data-smoke/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Flib.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,2 +1,12 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_id = \"mylib\"];\n #[crate_type = \"lib\"];"}, {"sha": "c94f7df4c92989f3af463d321efb56ce53790926", "filename": "src/test/run-make/crate-data-smoke/rlib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Frlib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Frlib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Frlib.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,2 +1,12 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_id = \"mylib\"];\n #[crate_type = \"rlib\"];"}, {"sha": "4c79f7e2855356528414cdf805b4f5215d8d7c7c", "filename": "src/test/run-make/dep-info-custom/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info-custom%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info-custom%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info-custom%2Fbar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn bar() {}"}, {"sha": "2661b1f4eb49b7a93d03ca34e2563991eb2e37c3", "filename": "src/test/run-make/dep-info-custom/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info-custom%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info-custom%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info-custom%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn foo() {}"}, {"sha": "b88687711304418ace0f28350a1be9b5f0c9f2ba", "filename": "src/test/run-make/dep-info-custom/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info-custom%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info-custom%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info-custom%2Flib.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_id=\"foo#0.1\"];\n \n pub mod foo;"}, {"sha": "4c79f7e2855356528414cdf805b4f5215d8d7c7c", "filename": "src/test/run-make/dep-info/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info%2Fbar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn bar() {}"}, {"sha": "2661b1f4eb49b7a93d03ca34e2563991eb2e37c3", "filename": "src/test/run-make/dep-info/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn foo() {}"}, {"sha": "b88687711304418ace0f28350a1be9b5f0c9f2ba", "filename": "src/test/run-make/dep-info/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdep-info%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info%2Flib.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_id=\"foo#0.1\"];\n \n pub mod foo;"}, {"sha": "fbe967786e25ecb61c99a398e60a81ef37134689", "filename": "src/test/run-make/duplicate-output-flavors/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fduplicate-output-flavors%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fduplicate-output-flavors%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fduplicate-output-flavors%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"rlib\"];"}, {"sha": "dd7f5f14e40e797dd5cb5514744fde020300cea1", "filename": "src/test/run-make/dylib-chain/m1.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm1.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,2 +1,12 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"dylib\"];\n pub fn m1() {}"}, {"sha": "98e9a9ee95071c93ea2104f0526d0be9716c791d", "filename": "src/test/run-make/dylib-chain/m2.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"dylib\"];\n extern mod m1;\n "}, {"sha": "b963a4c4f0aef2a27bc729a8d30e97035b7a4212", "filename": "src/test/run-make/dylib-chain/m3.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm3.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"dylib\"];\n extern mod m2;\n "}, {"sha": "ea2975d6b6ee3b30e931cbc13f7ae1bf89f42eca", "filename": "src/test/run-make/dylib-chain/m4.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdylib-chain%2Fm4.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod m3;\n \n fn main() { m3::m3() }"}, {"sha": "8ae3d072362ed6b5db81a00be3becce691926a7f", "filename": "src/test/run-make/ls-metadata/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fls-metadata%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fls-metadata%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fls-metadata%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() {}"}, {"sha": "4cb7a7493857a0ced19c09805d178349934d20f3", "filename": "src/test/run-make/lto-smoke-c/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Flto-smoke-c%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Flto-smoke-c%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flto-smoke-c%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"staticlib\"];\n \n #[no_mangle]"}, {"sha": "fbe967786e25ecb61c99a398e60a81ef37134689", "filename": "src/test/run-make/lto-smoke/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Flto-smoke%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Flto-smoke%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flto-smoke%2Flib.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"rlib\"];"}, {"sha": "61ee2481c2cd17549d71a0955f8e67c617b42e9a", "filename": "src/test/run-make/lto-smoke/main.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Flto-smoke%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Flto-smoke%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flto-smoke%2Fmain.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod lib;\n \n fn main() {}"}, {"sha": "358b6512ae560aec8e9f9fece487444758e3ccad", "filename": "src/test/run-make/mixing-deps/both.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-deps%2Fboth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-deps%2Fboth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmixing-deps%2Fboth.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"rlib\"];\n #[crate_type = \"dylib\"];\n "}, {"sha": "9aafd086480299c4d6afc7e4903a6570454781cc", "filename": "src/test/run-make/mixing-deps/dylib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-deps%2Fdylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-deps%2Fdylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmixing-deps%2Fdylib.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"dylib\"];\n extern mod both;\n "}, {"sha": "5d21c01c63137031c698440b7a4fb3a956d91640", "filename": "src/test/run-make/mixing-deps/prog.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-deps%2Fprog.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-deps%2Fprog.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmixing-deps%2Fprog.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod dylib;\n extern mod both;\n "}, {"sha": "8bdff1d8f08dfebcc765ef82d018569ebde8b0df", "filename": "src/test/run-make/mixing-libs/dylib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-libs%2Fdylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-libs%2Fdylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmixing-libs%2Fdylib.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"dylib\"];\n extern mod rlib;\n "}, {"sha": "9a97ddfd1b594a28340254d560506202e272e1f0", "filename": "src/test/run-make/mixing-libs/prog.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-libs%2Fprog.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-libs%2Fprog.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmixing-libs%2Fprog.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod dylib;\n extern mod rlib;\n "}, {"sha": "8ed6dbd865be0f0e7fd8235cfa06dfca29f85301", "filename": "src/test/run-make/mixing-libs/rlib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-libs%2Frlib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fmixing-libs%2Frlib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmixing-libs%2Frlib.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,2 +1,12 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"rlib\"];\n pub fn rlib() {}"}, {"sha": "5565ae3186c12aecca507f280f8ec61ae19482e8", "filename": "src/test/run-make/output-type-permutations/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Foutput-type-permutations%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Foutput-type-permutations%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-type-permutations%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_id = \"bar\"];\n \n fn main() {}"}, {"sha": "4c79f7e2855356528414cdf805b4f5215d8d7c7c", "filename": "src/test/run-make/prefer-dylib/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fprefer-dylib%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fprefer-dylib%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fprefer-dylib%2Fbar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn bar() {}"}, {"sha": "2c22cea09aa29ab61e5f09a6b7a2072e8d7c3ce5", "filename": "src/test/run-make/prefer-dylib/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fprefer-dylib%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fprefer-dylib%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fprefer-dylib%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod bar;\n \n fn main() {"}, {"sha": "4c79f7e2855356528414cdf805b4f5215d8d7c7c", "filename": "src/test/run-make/prefer-rlib/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fprefer-rlib%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fprefer-rlib%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fprefer-rlib%2Fbar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn bar() {}"}, {"sha": "2c22cea09aa29ab61e5f09a6b7a2072e8d7c3ce5", "filename": "src/test/run-make/prefer-rlib/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fprefer-rlib%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fprefer-rlib%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fprefer-rlib%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod bar;\n \n fn main() {"}, {"sha": "a9e231b0ea839791c963402de9fd4719b0b5a414", "filename": "src/test/run-make/prune-link-args/empty.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fprune-link-args%2Fempty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fprune-link-args%2Fempty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fprune-link-args%2Fempty.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn main() { }"}, {"sha": "ddf90e9157b79b27e836b72213188a01a67ab742", "filename": "src/test/run-make/rlib-chain/m1.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frlib-chain%2Fm1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frlib-chain%2Fm1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frlib-chain%2Fm1.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,2 +1,12 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"rlib\"];\n pub fn m1() {}"}, {"sha": "612e59d10827d1920fe6d62ac322c0d2a398cbf8", "filename": "src/test/run-make/rlib-chain/m2.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frlib-chain%2Fm2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frlib-chain%2Fm2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frlib-chain%2Fm2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"rlib\"];\n extern mod m1;\n "}, {"sha": "7545eed6f01b2fdbc777ba2ac7d6c3bf83f31562", "filename": "src/test/run-make/rlib-chain/m3.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frlib-chain%2Fm3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frlib-chain%2Fm3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frlib-chain%2Fm3.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"rlib\"];\n extern mod m2;\n "}, {"sha": "ea2975d6b6ee3b30e931cbc13f7ae1bf89f42eca", "filename": "src/test/run-make/rlib-chain/m4.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frlib-chain%2Fm4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frlib-chain%2Fm4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frlib-chain%2Fm4.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod m3;\n \n fn main() { m3::m3() }"}, {"sha": "d9b7810cc86186e904d6814562d0e3353be465cf", "filename": "src/test/run-make/rustdoc-hidden-line/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frustdoc-hidden-line%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frustdoc-hidden-line%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-hidden-line%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_id=\"foo#0.1\"];\n \n /// The '# ' lines should be removed from the output, but the #[deriving] should be"}, {"sha": "818ec1e5eb79013ce4ad7275cf9559d6bce200a5", "filename": "src/test/run-make/rustdoc-smoke/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frustdoc-smoke%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Frustdoc-smoke%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-smoke%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_id = \"foo#0.1\"];\n \n //! Very docs"}, {"sha": "4c79f7e2855356528414cdf805b4f5215d8d7c7c", "filename": "src/test/run-make/simple-dylib/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fsimple-dylib%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fsimple-dylib%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsimple-dylib%2Fbar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn bar() {}"}, {"sha": "2c22cea09aa29ab61e5f09a6b7a2072e8d7c3ce5", "filename": "src/test/run-make/simple-dylib/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fsimple-dylib%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fsimple-dylib%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsimple-dylib%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod bar;\n \n fn main() {"}, {"sha": "4c79f7e2855356528414cdf805b4f5215d8d7c7c", "filename": "src/test/run-make/simple-rlib/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fsimple-rlib%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fsimple-rlib%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsimple-rlib%2Fbar.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn bar() {}"}, {"sha": "2c22cea09aa29ab61e5f09a6b7a2072e8d7c3ce5", "filename": "src/test/run-make/simple-rlib/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fsimple-rlib%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fsimple-rlib%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsimple-rlib%2Ffoo.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod bar;\n \n fn main() {"}, {"sha": "9fe2f947c7092e6a404b4d713d97ae4723fe2079", "filename": "src/test/run-make/static-unwinding/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fstatic-unwinding%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fstatic-unwinding%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstatic-unwinding%2Flib.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[crate_type = \"rlib\"];\n \n pub static mut statik: int = 0;"}, {"sha": "c47d20583936b3c60604d1bdbe06ce84c5b106ae", "filename": "src/test/run-make/static-unwinding/main.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fstatic-unwinding%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-make%2Fstatic-unwinding%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstatic-unwinding%2Fmain.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod lib;\n \n use std::task;"}, {"sha": "88e0d24ffe1d9d2690c1263a1bb6b879c9cb8a51", "filename": "src/test/run-pass/borrowck-macro-interaction-issue-6304.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fborrowck-macro-interaction-issue-6304.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fborrowck-macro-interaction-issue-6304.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-macro-interaction-issue-6304.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Check that we do not ICE when compiling this\n // macro, which reuses the expression `$id`\n "}, {"sha": "8ceef83094876131d60473008dbd5d03ce340a0a", "filename": "src/test/run-pass/borrowck-move-by-capture-ok.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fborrowck-move-by-capture-ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fborrowck-move-by-capture-ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-move-by-capture-ok.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn main() {\n     let bar = ~3;\n     let h: proc() -> int = proc() *bar;"}, {"sha": "0650b03b4853f637179a70d7fcc117431afd874f", "filename": "src/test/run-pass/borrowck-preserve-box-in-moved-value.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-moved-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-moved-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-moved-value.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // exec-env:RUST_POISON_ON_FREE=1\n \n // Test that we root `x` even though it is found in immutable memory,"}, {"sha": "a6a56a68c5a04d5ab49abaec485cb279709564dd", "filename": "src/test/run-pass/can-copy-pod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcan-copy-pod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcan-copy-pod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcan-copy-pod.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n /* Any copyright is dedicated to the Public Domain.\n  * http://creativecommons.org/publicdomain/zero/1.0/ */\n "}, {"sha": "c53375c1f5b52455c2fc9387feec67da29bad667", "filename": "src/test/run-pass/cleanup-arm-conditional.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // copyright 2014 the rust project developers. see the copyright\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/copyright."}, {"sha": "ec422a54b3a7a54e19e602110cac9fd49551950b", "filename": "src/test/run-pass/cleanup-rvalue-temp-during-incomplete-alloc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-temp-during-incomplete-alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-temp-during-incomplete-alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-temp-during-incomplete-alloc.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Test cleanup of rvalue temporary that occurs while `~` construction\n // is in progress. This scenario revealed a rather terrible bug.  The\n // ingredients are:"}, {"sha": "4df457fd86223a29ee5e931708a6160aa925af5f", "filename": "src/test/run-pass/cleanup-shortcircuit.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcleanup-shortcircuit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcleanup-shortcircuit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-shortcircuit.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // copyright 2014 the rust project developers. see the copyright\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/copyright."}, {"sha": "51511009beec71a7fa267389f65ecc87d430b5b7", "filename": "src/test/run-pass/closure-reform.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fclosure-reform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fclosure-reform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-reform.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n /* Any copyright is dedicated to the Public Domain.\n  * http://creativecommons.org/publicdomain/zero/1.0/ */\n "}, {"sha": "0bbabcb859993007f39415a493b8ff7162c45210", "filename": "src/test/run-pass/coerce-reborrow-imm-ptr-arg.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-ptr-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-ptr-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-ptr-arg.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn negate(x: &int) -> int {\n     -*x\n }"}, {"sha": "419df84bdf55ba1b914b441cdb425d584ec399ef", "filename": "src/test/run-pass/coerce-reborrow-imm-ptr-rcvr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-ptr-rcvr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-ptr-rcvr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-ptr-rcvr.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct SpeechMaker {\n     speeches: uint\n }"}, {"sha": "f6abfda03e3f46f5265666f940c0d258c214721c", "filename": "src/test/run-pass/coerce-reborrow-imm-vec-arg.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-vec-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-vec-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-vec-arg.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn sum(x: &[int]) -> int {\n     let mut sum = 0;\n     for y in x.iter() { sum += *y; }"}, {"sha": "dee2b6f2568d72ed05d0f6a7e33dbe63cdea98fc", "filename": "src/test/run-pass/coerce-reborrow-imm-vec-rcvr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-vec-rcvr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-vec-rcvr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-imm-vec-rcvr.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn bar(v: &mut [uint]) -> ~[uint] {\n     v.to_owned()\n }"}, {"sha": "4a680027b46e2adb91f70047567acd5fd1e992e3", "filename": "src/test/run-pass/coerce-reborrow-mut-ptr-arg.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-ptr-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-ptr-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-ptr-arg.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct SpeechMaker {\n     speeches: uint\n }"}, {"sha": "2f866955ff46cafcf836287e646e1859d9379e66", "filename": "src/test/run-pass/coerce-reborrow-mut-ptr-rcvr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-ptr-rcvr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-ptr-rcvr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-ptr-rcvr.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct SpeechMaker {\n     speeches: uint\n }"}, {"sha": "0e205617173cb2d3739a31adfb9178b6b8cbf1dd", "filename": "src/test/run-pass/coerce-reborrow-mut-vec-arg.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-vec-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-vec-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-vec-arg.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn reverse(v: &mut [uint]) {\n     v.reverse();\n }"}, {"sha": "3deb31efd311dc92ccc10c300b1de313836c2932", "filename": "src/test/run-pass/coerce-reborrow-mut-vec-rcvr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-vec-rcvr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-vec-rcvr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoerce-reborrow-mut-vec-rcvr.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn bar(v: &mut [uint]) {\n     v.reverse();\n     v.reverse();"}, {"sha": "b79d9d6beba8706db217535047d9ac11cab9f6aa", "filename": "src/test/run-pass/const-struct-offsets.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fconst-struct-offsets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fconst-struct-offsets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-struct-offsets.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n enum Foo {\n     IntVal(i32),\n     Int64Val(i64)"}, {"sha": "075a9431b195e97c8d40bf206bcc24921481db64", "filename": "src/test/run-pass/deriving-enum-single-variant.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fderiving-enum-single-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fderiving-enum-single-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-enum-single-variant.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n type task_id = int;\n \n #[deriving(Eq)]"}, {"sha": "832474c714d0b21f56496df8b6cc428dbd061ea1", "filename": "src/test/run-pass/deriving-global.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-global.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-fast #7103 `extern mod` does not work on check-fast\n // xfail-pretty - does not converge\n "}, {"sha": "38ecd6db63cbc4821b2256677dc003acae98eb45", "filename": "src/test/run-pass/deriving-via-extension-struct-like-enum-variant.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-like-enum-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-like-enum-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-like-enum-variant.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[feature(struct_variant)];\n \n #[deriving(Eq)]"}, {"sha": "0d58cae703663d1ab214f596e587f4125dc58248", "filename": "src/test/run-pass/die-macro.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fdie-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fdie-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdie-macro.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Just testing that fail!() type checks in statement or expr\n \n #[allow(unreachable_code)];"}, {"sha": "1d7ec0aa1bc37664295f4197f82e69f9f83c56fe", "filename": "src/test/run-pass/enum-discr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fenum-discr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fenum-discr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-discr.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n enum Animal {\n     Cat = 0u,\n     Dog = 1u,"}, {"sha": "43bcd284dc2704d0a5f3dc6a2d3215ff1452b957", "filename": "src/test/run-pass/enum-variants.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fenum-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fenum-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-variants.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[allow(dead_assignment)];\n #[allow(unused_variable)];\n #[feature(struct_variant)];"}, {"sha": "c34c902b8147bb41d55cde86e0ad28737f7d553d", "filename": "src/test/run-pass/expr-repeat-vstore.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[feature(managed_boxes)];\n \n pub fn main() {"}, {"sha": "3437f5621e4bf99fc8f3fc3c314c60543d1e17ff", "filename": "src/test/run-pass/extern-mod-ordering-exe.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // aux-build:extern_mod_ordering_lib.rs\n // xfail-fast\n "}, {"sha": "2802572847211088bacfe1d613812940710ec96e", "filename": "src/test/run-pass/extern-pub.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fextern-pub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fextern-pub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pub.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern {\n     pub fn free(p: *u8);\n }"}, {"sha": "130f04b3fb2adee9246171c411d3537118d837db", "filename": "src/test/run-pass/foreign-call-no-runtime.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n use std::cast;\n use std::libc;\n use std::unstable::run_in_bare_thread;"}, {"sha": "6dc9ef2fa4bbf24e55a6f3a3531ca9e26e184051", "filename": "src/test/run-pass/func-arg-incomplete-pattern.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Ffunc-arg-incomplete-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Ffunc-arg-incomplete-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffunc-arg-incomplete-pattern.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Test that we do not leak when the arg pattern must drop part of the\n // argument (in this case, the `y` field).\n "}, {"sha": "11df22d7433d644c608b93a0e1456e10c4be4783", "filename": "src/test/run-pass/func-arg-ref-pattern.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Ffunc-arg-ref-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Ffunc-arg-ref-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffunc-arg-ref-pattern.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // exec-env:RUST_POISON_ON_FREE=1\n \n // Test argument patterns where we create refs to the inside of `~`"}, {"sha": "97ba561baea39a45450b5fad2d031a0474850a71", "filename": "src/test/run-pass/func-arg-wild-pattern.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Ffunc-arg-wild-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Ffunc-arg-wild-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffunc-arg-wild-pattern.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Test that we can compile code that uses a `_` in function argument\n // patterns.\n "}, {"sha": "f87e11cbb6147358ebb268702e41e9d611360b77", "filename": "src/test/run-pass/generic-newtype-struct.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fgeneric-newtype-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fgeneric-newtype-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-newtype-struct.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct S<T>(T);\n \n pub fn main() {"}, {"sha": "4496769ec56464e9e7ed37b6c83ac1f03340f8ce", "filename": "src/test/run-pass/guards-not-exhaustive.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fguards-not-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fguards-not-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fguards-not-exhaustive.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n enum Q { R(Option<uint>) }\n \n fn xyzzy(q: Q) -> uint {"}, {"sha": "96d1b8b38d6316a4a34129d664c84ce747156d14", "filename": "src/test/run-pass/impl-privacy-xc-1.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // aux-build:impl_privacy_xc_1.rs\n // xfail-fast\n "}, {"sha": "06df8da3c38aaa6dc5d77277b1b86f8789614f45", "filename": "src/test/run-pass/impl-privacy-xc-2.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // aux-build:impl_privacy_xc_2.rs\n // xfail-fast\n "}, {"sha": "88fab664e69ed7fbe6dc51bf024c8289c6d9170f", "filename": "src/test/run-pass/issue-2185.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-2185.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-2185.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2185.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -14,7 +14,8 @@\n \n // notes on this test case:\n // On Thu, Apr 18, 2013 at 6:30 PM, John Clements <clements@brinckerhoff.org> wrote:\n-// the \"issue-2185.rs\" test was xfailed with a ref to #2263. Issue #2263 is now fixed, so I tried it again, and after adding some &self parameters, I got this error:\n+// the \"issue-2185.rs\" test was xfailed with a ref to #2263. Issue #2263 is now fixed,\n+// so I tried it again, and after adding some &self parameters, I got this error:\n //\n // Running /usr/local/bin/rustc:\n // issue-2185.rs:24:0: 26:1 error: conflicting implementations for a trait\n@@ -26,10 +27,15 @@\n // issue-2185.rs:21     fn iter(&self, blk: |A|) { self(blk); }\n // issue-2185.rs:22 }\n //\n-// \u2026 so it looks like it's just not possible to implement both the generic iterable<uint> and iterable<A> for the type iterable<uint>. Is it okay if I just remove this test?\n+// \u2026 so it looks like it's just not possible to implement both\n+// the generic iterable<uint> and iterable<A> for the type iterable<uint>.\n+// Is it okay if I just remove this test?\n //\n // but Niko responded:\n-// think it's fine to remove this test, just because it's old and cruft and not hard to reproduce. *However* it should eventually be possible to implement the same interface for the same type multiple times with different type parameters, it's just that our current trait implementation has accidental limitations.\n+// think it's fine to remove this test, just because it's old and cruft and not hard to reproduce.\n+// *However* it should eventually be possible to implement the same interface for the same type\n+// multiple times with different type parameters, it's just that our current trait implementation\n+// has accidental limitations.\n \n // so I'm leaving it in.\n // actually, it looks like this is related to bug #3429. I'll rename this bug."}, {"sha": "bb288e88b206df74e916ac61adb5b6f57c3ba813", "filename": "src/test/run-pass/issue-2804.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-2804.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-2804.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2804.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -53,7 +53,8 @@ fn add_interface(_store: int, managed_ip: ~str, data: extra::json::Json) -> (~st\n     }\n }\n \n-fn add_interfaces(store: int, managed_ip: ~str, device: HashMap<~str, extra::json::Json>) -> ~[(~str, object)]\n+fn add_interfaces(store: int, managed_ip: ~str, device: HashMap<~str, extra::json::Json>)\n+-> ~[(~str, object)]\n {\n     match device.get(&~\"interfaces\")\n     {"}, {"sha": "6921ba649e6c484bc3a771bb3dae0369e5b22b07", "filename": "src/test/run-pass/issue-3211.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-3211.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-3211.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3211.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn main() {\n     let mut x = 0;\n     for _ in range(0, 4096) { x += 1; }"}, {"sha": "255f6b1635c1fca81508e3256fd21c2a70ee8ed3", "filename": "src/test/run-pass/issue-3250.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-3250.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-3250.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3250.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[auto_serialize]\n \n type t = (uint, uint);"}, {"sha": "9e20de16ae1bb02caa4990562693fc9818a4b6e9", "filename": "src/test/run-pass/issue-3556.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-3556.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-3556.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3556.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -13,31 +13,31 @@\n extern mod extra;\n \n enum Token {\n-        Text(@~str),\n-        ETag(@~[~str], @~str),\n-        UTag(@~[~str], @~str),\n-        Section(@~[~str], bool, @~[Token], @~str, @~str, @~str, @~str, @~str),\n-        IncompleteSection(@~[~str], bool, @~str, bool),\n-        Partial(@~str, @~str, @~str),\n+    Text(@~str),\n+    ETag(@~[~str], @~str),\n+    UTag(@~[~str], @~str),\n+    Section(@~[~str], bool, @~[Token], @~str, @~str, @~str, @~str, @~str),\n+    IncompleteSection(@~[~str], bool, @~str, bool),\n+    Partial(@~str, @~str, @~str),\n }\n \n fn check_strs(actual: &str, expected: &str) -> bool\n {\n-        if actual != expected\n-        {\n-            println!(\"Found {}, but expected {}\", actual, expected);\n-            return false;\n-        }\n-        return true;\n+    if actual != expected\n+    {\n+        println!(\"Found {}, but expected {}\", actual, expected);\n+        return false;\n+    }\n+    return true;\n }\n \n pub fn main()\n {\n- //       assert!(check_strs(fmt!(\"%?\", Text(@~\"foo\")), \"Text(@~\\\"foo\\\")\"));\n- //       assert!(check_strs(fmt!(\"%?\", ETag(@~[~\"foo\"], @~\"bar\")), \"ETag(@~[ ~\\\"foo\\\" ], @~\\\"bar\\\")\"));\n+// assert!(check_strs(fmt!(\"%?\", Text(@~\"foo\")), \"Text(@~\\\"foo\\\")\"));\n+// assert!(check_strs(fmt!(\"%?\", ETag(@~[~\"foo\"], @~\"bar\")), \"ETag(@~[ ~\\\"foo\\\" ], @~\\\"bar\\\")\"));\n \n-        let t = Text(@~\"foo\");\n-        let u = Section(@~[~\"alpha\"], true, @~[t], @~\"foo\", @~\"foo\", @~\"foo\", @~\"foo\", @~\"foo\");\n-        let v = format!(\"{:?}\", u);    // this is the line that causes the seg fault\n-        assert!(v.len() > 0);\n+    let t = Text(@~\"foo\");\n+    let u = Section(@~[~\"alpha\"], true, @~[t], @~\"foo\", @~\"foo\", @~\"foo\", @~\"foo\", @~\"foo\");\n+    let v = format!(\"{:?}\", u);    // this is the line that causes the seg fault\n+    assert!(v.len() > 0);\n }"}, {"sha": "f60d8b2de64a1b14abecd3e13f76e08ad8259a75", "filename": "src/test/run-pass/issue-3563-3.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-3563-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-3563-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3563-3.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -41,8 +41,6 @@ struct Rect {\n     size: Size,\n }\n \n-// TODO: operators\n-\n // Contains the information needed to do shape rendering via ASCII art.\n struct AsciiArt {\n     width: uint,"}, {"sha": "9f6b1578b9575b74f8cd6daf67ce3bc87a5afe39", "filename": "src/test/run-pass/issue-3609.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-3609.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-3609.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3609.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern mod extra;\n \n use std::comm::Chan;"}, {"sha": "d0968633d9fae4b1d376090c6d918c7d14d51adf", "filename": "src/test/run-pass/issue-4120.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-4120.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-4120.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4120.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test\n \n // XFAIL'd due to Valgrind complaining about TLS loss."}, {"sha": "35675225aae0c4e2e6bcc7ea3050f15c23b4c22c", "filename": "src/test/run-pass/issue-4401.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-4401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-4401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4401.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn main() {\n     let mut count = 0;\n     for _ in range(0, 999_999) { count += 1; }"}, {"sha": "863acc5c0c3c0c1d30067885c5347c55dbe449a0", "filename": "src/test/run-pass/issue-5239-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-5239-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-5239-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5239-2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -10,7 +10,7 @@\n \n // Regression test for issue #5239\n \n-pub fn main() { \n+pub fn main() {\n     let _f: |int| -> int = |ref x: int| { *x };\n     let foo = 10;\n     assert!(_f(foo) == 10);"}, {"sha": "d71e30eb64a454378a1a72c5070695acea06ee0d", "filename": "src/test/run-pass/issue-5572.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-5572.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-5572.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5572.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn foo<T: ::std::cmp::Eq>(_t: T) { }\n \n pub fn main() { }"}, {"sha": "11d392f1fb1b358e6d2515a162474e46f641bce5", "filename": "src/test/run-pass/issue-7563.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-7563.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-7563.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7563.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n trait IDummy {\n     fn do_nothing(&self);\n }"}, {"sha": "6f4618a3b3b21a01f4a3bed304b0de7778ed6170", "filename": "src/test/run-pass/issue-7911.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-7911.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fissue-7911.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7911.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -10,7 +10,7 @@\n \n // xfail-pretty\n \n-// (Closes #7911) Test that we can use the same self expression \n+// (Closes #7911) Test that we can use the same self expression\n // with different mutability in macro in two methods\n \n #[allow(unused_variable)]; // unused foobar_immut + foobar_mut"}, {"sha": "302ea5a4b01ef83c4cf38444decbca53b43ac7dc", "filename": "src/test/run-pass/ivec-tag.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fivec-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fivec-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fivec-tag.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n use std::task;\n \n fn producer(c: &Chan<~[u8]>) {"}, {"sha": "12eff66f72db6744e111dafc467ff024d65d45ff", "filename": "src/test/run-pass/kinds-in-metadata.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fkinds-in-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fkinds-in-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fkinds-in-metadata.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-fast\n // aux-build:kinds_in_metadata.rs\n "}, {"sha": "c58fd89bb41f5d5bee240df02cbc2ab3c1da1b3a", "filename": "src/test/run-pass/let-destruct-ref.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Flet-destruct-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Flet-destruct-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flet-destruct-ref.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n pub fn main() {\n     let x = ~\"hello\";\n     let ref y = x;"}, {"sha": "38b5a858aff083cd2358091b440392ea06947677", "filename": "src/test/run-pass/link-section.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Flink-section.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Flink-section.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flink-section.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[cfg(not(target_os = \"macos\"))]\n #[link_section=\".moretext\"]\n fn i_live_in_more_text() -> &'static str {"}, {"sha": "5fbe6b4aa6325e3c289ff009dec93192c29c4ff6", "filename": "src/test/run-pass/match-drop-strs-issue-4541.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmatch-drop-strs-issue-4541.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmatch-drop-strs-issue-4541.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-drop-strs-issue-4541.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Tests a tricky scenario involving string matching,\n // copying, and moving to ensure that we don't segfault\n // or double-free, as we were wont to do in the past."}, {"sha": "039b3f9a26c5b413eadcddb8f7d07f6464502c7d", "filename": "src/test/run-pass/match-range-static.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmatch-range-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmatch-range-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-range-static.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n static s: int = 1;\n static e: int = 42;\n "}, {"sha": "20693897236a7d29a88eef1cd40eed428e209462", "filename": "src/test/run-pass/match-vec-rvalue.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmatch-vec-rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmatch-vec-rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-vec-rvalue.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Tests that matching rvalues with drops does not crash.\n \n pub fn main() {"}, {"sha": "4a04a71f9a0162f4c4a828355dac1680d09468fe", "filename": "src/test/run-pass/mid-path-type-params.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmid-path-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmid-path-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmid-path-type-params.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct S<T> {\n     contents: T,\n }"}, {"sha": "2041c69ceccbc953463e23824ed2166f5e2036f8", "filename": "src/test/run-pass/move-out-of-field.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmove-out-of-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmove-out-of-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-out-of-field.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct StringBuffer {\n     s: ~str\n }"}, {"sha": "854beea70025d856ff069eddc0f32828daa76202", "filename": "src/test/run-pass/move-self.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmove-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmove-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-self.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct S {\n     x: ~str\n }"}, {"sha": "6751cca798a8990e69ad90181b3c45f18e96808a", "filename": "src/test/run-pass/moves-based-on-type-capture-clause.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmoves-based-on-type-capture-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmoves-based-on-type-capture-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmoves-based-on-type-capture-clause.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n use std::task;\n \n pub fn main() {"}, {"sha": "fc052b6a389558d926ad476bd3ace98be141138a", "filename": "src/test/run-pass/multiple-trait-bounds.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmultiple-trait-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fmultiple-trait-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmultiple-trait-bounds.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n fn f<T:Eq + Ord>(_: T) {\n }\n "}, {"sha": "7a90ea436e0567c995eda1d33cd4edfa4a79ede6", "filename": "src/test/run-pass/new-box-syntax.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnew-box-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnew-box-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnew-box-syntax.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n /* Any copyright is dedicated to the Public Domain.\n  * http://creativecommons.org/publicdomain/zero/1.0/ */\n "}, {"sha": "6def21a389a5bbb9d7b8c848d82546cc296c4e53", "filename": "src/test/run-pass/new-impl-syntax.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnew-impl-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnew-impl-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnew-impl-syntax.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n struct Thingy {\n     x: int,\n     y: int"}, {"sha": "ca79c304802bd3c6b76fa6f060ff00cbd696d873", "filename": "src/test/run-pass/newtype-struct-with-dtor.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnewtype-struct-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnewtype-struct-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewtype-struct-with-dtor.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n use std::libc::c_int;\n use std::libc;\n "}, {"sha": "7c1e1e05098fb184ff8ec32cd77d31077a31972b", "filename": "src/test/run-pass/newtype-struct-xc-2.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc-2.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-fast\n // aux-build:newtype_struct_xc.rs\n "}, {"sha": "3237db1288e2fb89a586b236a8b8c817ac188ab6", "filename": "src/test/run-pass/newtype-struct-xc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-fast\n // aux-build:newtype_struct_xc.rs\n "}, {"sha": "5d688c1f030de3bc9d312e08d3da3e78a223caf2", "filename": "src/test/run-pass/nullable-pointer-iotareduction.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-test\n \n // xfail'd due to a bug in move detection for macros."}, {"sha": "94984db4df150e615fa703dffd9a9301a93b7de8", "filename": "src/test/run-pass/packed-struct-size-xc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fpacked-struct-size-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fpacked-struct-size-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-size-xc.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-fast\n // aux-build:packed.rs\n "}, {"sha": "742df0f5c6d87f60bd8f72aa654be60a482a2ea5", "filename": "src/test/run-pass/pub-extern-privacy.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fpub-extern-privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fpub-extern-privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpub-extern-privacy.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n use std::cast::transmute;\n \n mod a {"}, {"sha": "95a6d1e5941a92da406e2ad28bd7d56b6808d26e", "filename": "src/test/run-pass/raw-str.rs", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fraw-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fraw-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fraw-str.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477"}, {"sha": "a0d6fc4c157f52e95a6164f0f16f4c23a95ffa38", "filename": "src/test/run-pass/reflect-visit-type.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -114,7 +114,8 @@ impl TyVisitor for MyVisitor {\n                                 _disr_val: Disr,\n                                 _n_fields: uint,\n                                 _name: &str) -> bool { true }\n-    fn visit_enum_variant_field(&mut self, _i: uint, _offset: uint, _inner: *TyDesc) -> bool { true }\n+    fn visit_enum_variant_field(&mut self, _i: uint, _offset: uint, _inner: *TyDesc)\n+        -> bool { true }\n     fn visit_leave_enum_variant(&mut self,\n                                 _variant: uint,\n                                 _disr_val: Disr,\n@@ -128,7 +129,8 @@ impl TyVisitor for MyVisitor {\n     fn visit_enter_fn(&mut self, _purity: uint, _proto: uint,\n                       _n_inputs: uint, _retstyle: uint) -> bool { true }\n     fn visit_fn_input(&mut self, _i: uint, _mode: uint, _inner: *TyDesc) -> bool { true }\n-    fn visit_fn_output(&mut self, _retstyle: uint, _variadic: bool, _inner: *TyDesc) -> bool { true }\n+    fn visit_fn_output(&mut self, _retstyle: uint, _variadic: bool, _inner: *TyDesc)\n+        -> bool { true }\n     fn visit_leave_fn(&mut self, _purity: uint, _proto: uint,\n                       _n_inputs: uint, _retstyle: uint) -> bool { true }\n "}, {"sha": "5c4e2f5ebd52b297e557424eac52d1a18c42101b", "filename": "src/test/run-pass/self-type-param.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fself-type-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fself-type-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fself-type-param.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n trait MyTrait {\n     fn f(&self) -> Self;\n }"}, {"sha": "f4686ee1ba705aa7694a9bad599b23a026c3f47b", "filename": "src/test/run-pass/signal-exit-status.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // copyright 2013 the rust project developers. see the copyright\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/copyright."}, {"sha": "0893f943995267ea4ab5e9efef0ea8ce33347913", "filename": "src/test/run-pass/simd-type.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fsimd-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730bdb6403dd47b98c1be6c4b3423edb28ca9477/src%2Ftest%2Frun-pass%2Fsimd-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-type.rs?ref=730bdb6403dd47b98c1be6c4b3423edb28ca9477", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // xfail-fast feature doesn't work\n \n #[feature(simd)];"}]}