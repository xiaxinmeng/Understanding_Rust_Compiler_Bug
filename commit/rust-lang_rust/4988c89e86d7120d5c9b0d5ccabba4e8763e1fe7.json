{"sha": "4988c89e86d7120d5c9b0d5ccabba4e8763e1fe7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ODhjODllODZkNzEyMGQ1YzliMGQ1Y2NhYmJhNGU4NzYzZTFmZTc=", "commit": {"author": {"name": "James Miller", "email": "james@aatch.net", "date": "2013-05-28T05:55:16Z"}, "committer": {"name": "James Miller", "email": "james@aatch.net", "date": "2013-05-29T02:16:49Z"}, "message": "Move the initial dead prototype removal pass", "tree": {"sha": "dede2adcc4e9cc4d79eed3f5629dfb931575e0f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dede2adcc4e9cc4d79eed3f5629dfb931575e0f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4988c89e86d7120d5c9b0d5ccabba4e8763e1fe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4988c89e86d7120d5c9b0d5ccabba4e8763e1fe7", "html_url": "https://github.com/rust-lang/rust/commit/4988c89e86d7120d5c9b0d5ccabba4e8763e1fe7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4988c89e86d7120d5c9b0d5ccabba4e8763e1fe7/comments", "author": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5b87d71e09889da28510f960a6fd47fca3dcbf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5b87d71e09889da28510f960a6fd47fca3dcbf9", "html_url": "https://github.com/rust-lang/rust/commit/a5b87d71e09889da28510f960a6fd47fca3dcbf9"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "9b140ac590714612a5a392598ff4356f027f1e2d", "filename": "src/librustc/back/passes.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4988c89e86d7120d5c9b0d5ccabba4e8763e1fe7/src%2Flibrustc%2Fback%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4988c89e86d7120d5c9b0d5ccabba4e8763e1fe7/src%2Flibrustc%2Fback%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fpasses.rs?ref=4988c89e86d7120d5c9b0d5ccabba4e8763e1fe7", "patch": "@@ -10,9 +10,8 @@\n \n use core::prelude::*;\n \n-use driver::session::{Session, Session_, No, Less, Default};\n use driver::session;\n-use lib::llvm::{PassRef, ModuleRef,PassManagerRef,ValueRef,TargetDataRef};\n+use lib::llvm::{PassRef, ModuleRef,PassManagerRef,TargetDataRef};\n use lib::llvm::llvm;\n use lib;\n \n@@ -56,12 +55,12 @@ impl PassManager {\n \n pub fn populatePassManager(pm: &mut PassManager, level:session::OptLevel) {\n     unsafe {\n-        // We add a lot of potentially-unused prototypes, so strip them right at the\n-        // start. We do it again later when we know for certain which ones are used\n-        pm.addPass(llvm::LLVMCreateStripDeadPrototypesPass());\n-\n         if level == session::No {\n             pm.addPass(llvm::LLVMCreateAlwaysInlinerPass());\n+\n+            // We add a lot of unused prototypes, so strip them no matter\n+            // what\n+            pm.addPass(llvm::LLVMCreateStripDeadPrototypesPass());\n             return;\n         }\n "}]}