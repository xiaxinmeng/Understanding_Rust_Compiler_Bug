{"sha": "4eac6fe21e1f82b1cc3c528b6a4b241fe5509b40", "node_id": "C_kwDOAAsO6NoAKDRlYWM2ZmUyMWUxZjgyYjFjYzNjNTI4YjZhNGIyNDFmZTU1MDliNDA", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-07T17:23:03Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-19T19:06:09Z"}, "message": "Add test for `a.f(|this| a.g())`", "tree": {"sha": "12d6e1a5a636927ff1ed09dc21491e26a14c2c6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12d6e1a5a636927ff1ed09dc21491e26a14c2c6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4eac6fe21e1f82b1cc3c528b6a4b241fe5509b40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4eac6fe21e1f82b1cc3c528b6a4b241fe5509b40", "html_url": "https://github.com/rust-lang/rust/commit/4eac6fe21e1f82b1cc3c528b6a4b241fe5509b40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4eac6fe21e1f82b1cc3c528b6a4b241fe5509b40/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "html_url": "https://github.com/rust-lang/rust/commit/d7f9e81650dcee3e2d5ad1973a71da644a2eff93"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "161679145120cb72a9ab7bafe003b7bcbd55a367", "filename": "tests/ui/borrowck/issue-109271-pass-self-into-closure.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/4eac6fe21e1f82b1cc3c528b6a4b241fe5509b40/tests%2Fui%2Fborrowck%2Fissue-109271-pass-self-into-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eac6fe21e1f82b1cc3c528b6a4b241fe5509b40/tests%2Fui%2Fborrowck%2Fissue-109271-pass-self-into-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fissue-109271-pass-self-into-closure.rs?ref=4eac6fe21e1f82b1cc3c528b6a4b241fe5509b40", "patch": "@@ -0,0 +1,38 @@\n+#![allow(unused)]\n+struct S;\n+\n+impl S {\n+    fn call(&mut self, f: impl FnOnce((), &mut Self)) {\n+        // change state or something ...\n+        f((), self);\n+        // change state or something ...\n+    }\n+\n+    fn get(&self) {}\n+    fn set(&mut self) {}\n+}\n+\n+fn main() {\n+    let mut v = S;\n+\n+    v.call(|(), this: &mut S| v.get());\n+    //~^ error: cannot borrow `v` as mutable because it is also borrowed as immutable\n+    v.call(|(), this: &mut S| v.set());\n+    //~^ error: cannot borrow `v` as mutable more than once at a time\n+    //~| error: cannot borrow `v` as mutable more than once at a time\n+\n+    v.call(|(), this: &mut S| {\n+        //~^ error: cannot borrow `v` as mutable more than once at a time\n+        //~| error: cannot borrow `v` as mutable more than once at a time\n+\n+        _ = v;\n+        v.set();\n+        v.get();\n+        S::get(&v);\n+\n+        use std::ops::Add;\n+        let v = 0u32;\n+        _ = v + v;\n+        _ = v.add(3);\n+    });\n+}"}, {"sha": "8abbecad02a99b0970b4a8295b8a6fd13a9e5c18", "filename": "tests/ui/borrowck/issue-109271-pass-self-into-closure.stderr", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/4eac6fe21e1f82b1cc3c528b6a4b241fe5509b40/tests%2Fui%2Fborrowck%2Fissue-109271-pass-self-into-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4eac6fe21e1f82b1cc3c528b6a4b241fe5509b40/tests%2Fui%2Fborrowck%2Fissue-109271-pass-self-into-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fissue-109271-pass-self-into-closure.stderr?ref=4eac6fe21e1f82b1cc3c528b6a4b241fe5509b40", "patch": "@@ -0,0 +1,75 @@\n+error[E0502]: cannot borrow `v` as mutable because it is also borrowed as immutable\n+  --> $DIR/issue-109271-pass-self-into-closure.rs:18:5\n+   |\n+LL |     v.call(|(), this: &mut S| v.get());\n+   |     ^^----^------------------^-^^^^^^^\n+   |     | |    |                  |\n+   |     | |    |                  first borrow occurs due to use of `v` in closure\n+   |     | |    immutable borrow occurs here\n+   |     | immutable borrow later used by call\n+   |     mutable borrow occurs here\n+\n+error[E0499]: cannot borrow `v` as mutable more than once at a time\n+  --> $DIR/issue-109271-pass-self-into-closure.rs:20:5\n+   |\n+LL |     v.call(|(), this: &mut S| v.set());\n+   |     ^^----^------------------^-^^^^^^^\n+   |     | |    |                  |\n+   |     | |    |                  first borrow occurs due to use of `v` in closure\n+   |     | |    first mutable borrow occurs here\n+   |     | first borrow later used by call\n+   |     second mutable borrow occurs here\n+\n+error[E0499]: cannot borrow `v` as mutable more than once at a time\n+  --> $DIR/issue-109271-pass-self-into-closure.rs:20:12\n+   |\n+LL |     v.call(|(), this: &mut S| v.set());\n+   |     -------^^^^^^^^^^^^^^^^^^---------\n+   |     | |    |                  |\n+   |     | |    |                  second borrow occurs due to use of `v` in closure\n+   |     | |    second mutable borrow occurs here\n+   |     | first borrow later used by call\n+   |     first mutable borrow occurs here\n+\n+error[E0499]: cannot borrow `v` as mutable more than once at a time\n+  --> $DIR/issue-109271-pass-self-into-closure.rs:24:5\n+   |\n+LL |       v.call(|(), this: &mut S| {\n+   |       ^ ---- ------------------ first mutable borrow occurs here\n+   |       | |\n+   |  _____| first borrow later used by call\n+   | |\n+LL | |\n+LL | |\n+LL | |\n+LL | |         _ = v;\n+LL | |         v.set();\n+   | |         - first borrow occurs due to use of `v` in closure\n+...  |\n+LL | |         _ = v.add(3);\n+LL | |     });\n+   | |______^ second mutable borrow occurs here\n+\n+error[E0499]: cannot borrow `v` as mutable more than once at a time\n+  --> $DIR/issue-109271-pass-self-into-closure.rs:24:12\n+   |\n+LL |       v.call(|(), this: &mut S| {\n+   |       - ---- ^^^^^^^^^^^^^^^^^^ second mutable borrow occurs here\n+   |       | |\n+   |  _____| first borrow later used by call\n+   | |\n+LL | |\n+LL | |\n+LL | |\n+LL | |         _ = v;\n+LL | |         v.set();\n+   | |         - second borrow occurs due to use of `v` in closure\n+...  |\n+LL | |         _ = v.add(3);\n+LL | |     });\n+   | |______- first mutable borrow occurs here\n+\n+error: aborting due to 5 previous errors\n+\n+Some errors have detailed explanations: E0499, E0502.\n+For more information about an error, try `rustc --explain E0499`."}]}