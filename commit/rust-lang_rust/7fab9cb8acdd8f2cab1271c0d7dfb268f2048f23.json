{"sha": "7fab9cb8acdd8f2cab1271c0d7dfb268f2048f23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmYWI5Y2I4YWNkZDhmMmNhYjEyNzFjMGQ3ZGZiMjY4ZjIwNDhmMjM=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2020-12-12T12:34:48Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2020-12-12T12:34:48Z"}, "message": "bufwriter::WriterPanicked: Provide panicking example\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "c7c00a269ba7a6f0ed4cca796ffc92c199890b0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7c00a269ba7a6f0ed4cca796ffc92c199890b0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fab9cb8acdd8f2cab1271c0d7dfb268f2048f23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fab9cb8acdd8f2cab1271c0d7dfb268f2048f23", "html_url": "https://github.com/rust-lang/rust/commit/7fab9cb8acdd8f2cab1271c0d7dfb268f2048f23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fab9cb8acdd8f2cab1271c0d7dfb268f2048f23/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "381763185eaf0940d3b587c5c3ae54cdd4fbe64e", "url": "https://api.github.com/repos/rust-lang/rust/commits/381763185eaf0940d3b587c5c3ae54cdd4fbe64e", "html_url": "https://github.com/rust-lang/rust/commit/381763185eaf0940d3b587c5c3ae54cdd4fbe64e"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "94e625b941007161b2716f97ff5e6f1485bf5559", "filename": "library/std/src/io/buffered/bufwriter.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7fab9cb8acdd8f2cab1271c0d7dfb268f2048f23/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufwriter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fab9cb8acdd8f2cab1271c0d7dfb268f2048f23/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufwriter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufwriter.rs?ref=7fab9cb8acdd8f2cab1271c0d7dfb268f2048f23", "patch": "@@ -324,6 +324,30 @@ impl<W: Write> BufWriter<W> {\n #[unstable(feature = \"bufwriter_into_raw_parts\", issue = \"none\")]\n /// Error returned for the buffered data from `BufWriter::into_raw_parts`, when the underlying\n /// writer has previously panicked.  Contains the (possibly partly written) buffered data.\n+///\n+/// # Example\n+///\n+/// ```\n+/// #![feature(bufwriter_into_raw_parts)]\n+/// use std::io::{self, BufWriter, Write};\n+/// use std::panic::{catch_unwind, AssertUnwindSafe};\n+///\n+/// struct PanickingWriter;\n+/// impl Write for PanickingWriter {\n+///   fn write(&mut self, buf: &[u8]) -> io::Result<usize> { panic!() }\n+///   fn flush(&mut self) -> io::Result<()> { panic!() }\n+/// }\n+///\n+/// let mut stream = BufWriter::new(PanickingWriter);\n+/// write!(stream, \"some data\").unwrap();\n+/// let result = catch_unwind(AssertUnwindSafe(|| {\n+///     stream.flush().unwrap()\n+/// }));\n+/// assert!(result.is_err());\n+/// let (recovered_writer, buffered_data) = stream.into_raw_parts();\n+/// assert!(matches!(recovered_writer, PanickingWriter));\n+/// assert_eq!(buffered_data.unwrap_err().into_inner(), b\"some data\");\n+/// ```\n pub struct WriterPanicked {\n     buf: Vec<u8>,\n }"}]}