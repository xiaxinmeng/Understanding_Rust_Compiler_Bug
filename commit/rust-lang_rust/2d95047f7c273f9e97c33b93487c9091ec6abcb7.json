{"sha": "2d95047f7c273f9e97c33b93487c9091ec6abcb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkOTUwNDdmN2MyNzNmOWU5N2MzM2I5MzQ4N2M5MDkxZWM2YWJjYjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-07T13:55:47Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-07T13:55:47Z"}, "message": "Cleanup", "tree": {"sha": "789a69f0bdee1eefbfbce498863fff5e78911009", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/789a69f0bdee1eefbfbce498863fff5e78911009"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d95047f7c273f9e97c33b93487c9091ec6abcb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d95047f7c273f9e97c33b93487c9091ec6abcb7", "html_url": "https://github.com/rust-lang/rust/commit/2d95047f7c273f9e97c33b93487c9091ec6abcb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d95047f7c273f9e97c33b93487c9091ec6abcb7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b831b17b3dbc475420924834b250f07bccd673d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b831b17b3dbc475420924834b250f07bccd673d0", "html_url": "https://github.com/rust-lang/rust/commit/b831b17b3dbc475420924834b250f07bccd673d0"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "b71df7e5d5640bfb5f99f607177a52e0d3d87fc8", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2d95047f7c273f9e97c33b93487c9091ec6abcb7/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d95047f7c273f9e97c33b93487c9091ec6abcb7/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=2d95047f7c273f9e97c33b93487c9091ec6abcb7", "patch": "@@ -11,6 +11,8 @@ mod marks;\n mod doc_tests;\n pub mod ast_transform;\n \n+use std::cmp::Ordering;\n+\n use either::Either;\n use ra_db::FileRange;\n use ra_ide_db::RootDatabase;\n@@ -85,13 +87,12 @@ pub fn resolved_assists(db: &RootDatabase, range: FileRange) -> Vec<ResolvedAssi\n             Assist::Resolved { assist } => assist,\n             Assist::Unresolved { .. } => unreachable!(),\n         })\n-        .collect();\n+        .collect::<Vec<_>>();\n     sort_assists(&mut a);\n     a\n }\n \n-fn sort_assists(assists: &mut Vec<ResolvedAssist>) {\n-    use std::cmp::Ordering;\n+fn sort_assists(assists: &mut [ResolvedAssist]) {\n     assists.sort_by(|a, b| match (a.get_first_action().target, b.get_first_action().target) {\n         (Some(a), Some(b)) => a.len().cmp(&b.len()),\n         (Some(_), None) => Ordering::Less,"}]}