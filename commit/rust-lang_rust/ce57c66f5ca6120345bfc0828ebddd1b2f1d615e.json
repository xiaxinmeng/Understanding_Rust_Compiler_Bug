{"sha": "ce57c66f5ca6120345bfc0828ebddd1b2f1d615e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNTdjNjZmNWNhNjEyMDM0NWJmYzA4MjhlYmRkZDFiMmYxZDYxNWU=", "commit": {"author": {"name": "Brett Cooley", "email": "brett@cooleyweb.org", "date": "2016-11-17T19:23:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-17T19:23:57Z"}, "message": "Fix grammar error in lifetimes.md", "tree": {"sha": "c56c7c8fadd85c5e506d591f65a600195fcfd8c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c56c7c8fadd85c5e506d591f65a600195fcfd8c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce57c66f5ca6120345bfc0828ebddd1b2f1d615e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce57c66f5ca6120345bfc0828ebddd1b2f1d615e", "html_url": "https://github.com/rust-lang/rust/commit/ce57c66f5ca6120345bfc0828ebddd1b2f1d615e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce57c66f5ca6120345bfc0828ebddd1b2f1d615e/comments", "author": {"login": "brcooley", "id": 713563, "node_id": "MDQ6VXNlcjcxMzU2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/713563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brcooley", "html_url": "https://github.com/brcooley", "followers_url": "https://api.github.com/users/brcooley/followers", "following_url": "https://api.github.com/users/brcooley/following{/other_user}", "gists_url": "https://api.github.com/users/brcooley/gists{/gist_id}", "starred_url": "https://api.github.com/users/brcooley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brcooley/subscriptions", "organizations_url": "https://api.github.com/users/brcooley/orgs", "repos_url": "https://api.github.com/users/brcooley/repos", "events_url": "https://api.github.com/users/brcooley/events{/privacy}", "received_events_url": "https://api.github.com/users/brcooley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c57b8261496d548e0a3cd8468061ddc5a4dcafe2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c57b8261496d548e0a3cd8468061ddc5a4dcafe2", "html_url": "https://github.com/rust-lang/rust/commit/c57b8261496d548e0a3cd8468061ddc5a4dcafe2"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "140e27d19248ce3a936d5570740b7d537e13338b", "filename": "src/doc/book/lifetimes.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce57c66f5ca6120345bfc0828ebddd1b2f1d615e/src%2Fdoc%2Fbook%2Flifetimes.md", "raw_url": "https://github.com/rust-lang/rust/raw/ce57c66f5ca6120345bfc0828ebddd1b2f1d615e/src%2Fdoc%2Fbook%2Flifetimes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Flifetimes.md?ref=ce57c66f5ca6120345bfc0828ebddd1b2f1d615e", "patch": "@@ -352,7 +352,7 @@ to it.\n Rust supports powerful local type inference in the bodies of functions but not in their item signatures. \n It's forbidden to allow reasoning about types based on the item signature alone. \n However, for ergonomic reasons, a very restricted secondary inference algorithm called \n-\u201clifetime elision\u201d does apply when judging lifetimes. Lifetime elision is concerned solely to infer \n+\u201clifetime elision\u201d does apply when judging lifetimes. Lifetime elision is concerned solely with inferring \n lifetime parameters using three easily memorizable and unambiguous rules. This means lifetime elision \n acts as a shorthand for writing an item signature, while not hiding\n away the actual types involved as full local inference would if applied to it."}]}