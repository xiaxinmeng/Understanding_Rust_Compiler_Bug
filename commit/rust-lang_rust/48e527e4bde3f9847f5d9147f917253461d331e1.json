{"sha": "48e527e4bde3f9847f5d9147f917253461d331e1", "node_id": "C_kwDOAAsO6NoAKDQ4ZTUyN2U0YmRlM2Y5ODQ3ZjVkOTE0N2Y5MTcyNTM0NjFkMzMxZTE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-05T00:20:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-05T00:20:33Z"}, "message": "Auto merge of #9117 - Jarcho:unsafe_block_closure, r=giraffate\n\nFix `undocumented_unsafe_blocks` in closures\n\nfixes #9114\nchangelog: Fix `undocumented_unsafe_blocks` not checking for comments before the start of a closure", "tree": {"sha": "5632e27572aa6fd8e844ec04ad82f8b6a7fc8ea5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5632e27572aa6fd8e844ec04ad82f8b6a7fc8ea5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48e527e4bde3f9847f5d9147f917253461d331e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48e527e4bde3f9847f5d9147f917253461d331e1", "html_url": "https://github.com/rust-lang/rust/commit/48e527e4bde3f9847f5d9147f917253461d331e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48e527e4bde3f9847f5d9147f917253461d331e1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c257f098a8f0854e52a6c773eed2ba04ee75de97", "url": "https://api.github.com/repos/rust-lang/rust/commits/c257f098a8f0854e52a6c773eed2ba04ee75de97", "html_url": "https://github.com/rust-lang/rust/commit/c257f098a8f0854e52a6c773eed2ba04ee75de97"}, {"sha": "975667945c5be3ab84a0f7fd5bd6715168285a95", "url": "https://api.github.com/repos/rust-lang/rust/commits/975667945c5be3ab84a0f7fd5bd6715168285a95", "html_url": "https://github.com/rust-lang/rust/commit/975667945c5be3ab84a0f7fd5bd6715168285a95"}], "stats": {"total": 89, "additions": 54, "deletions": 35}, "files": [{"sha": "04f16fd2161c51a0cdbed5e35419540052e912c5", "filename": "clippy_lints/src/undocumented_unsafe_blocks.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/48e527e4bde3f9847f5d9147f917253461d331e1/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48e527e4bde3f9847f5d9147f917253461d331e1/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs?ref=48e527e4bde3f9847f5d9147f917253461d331e1", "patch": "@@ -265,14 +265,28 @@ fn span_from_macro_expansion_has_safety_comment(cx: &LateContext<'_>, span: Span\n     }\n }\n \n+fn get_body_search_span(cx: &LateContext<'_>) -> Option<Span> {\n+    let body = cx.enclosing_body?;\n+    let map = cx.tcx.hir();\n+    let mut span = map.body(body).value.span;\n+    for (_, node) in map.parent_iter(body.hir_id) {\n+        match node {\n+            Node::Expr(e) => span = e.span,\n+            Node::Block(_) | Node::Arm(_) | Node::Stmt(_) | Node::Local(_) => (),\n+            _ => break,\n+        }\n+    }\n+    Some(span)\n+}\n+\n fn span_in_body_has_safety_comment(cx: &LateContext<'_>, span: Span) -> bool {\n     let source_map = cx.sess().source_map();\n     let ctxt = span.ctxt();\n     if ctxt == SyntaxContext::root()\n-        && let Some(body) = cx.enclosing_body\n+        && let Some(search_span) = get_body_search_span(cx)\n     {\n         if let Ok(unsafe_line) = source_map.lookup_line(span.lo())\n-            && let Some(body_span) = walk_span_to_context(cx.tcx.hir().body(body).value.span, SyntaxContext::root())\n+            && let Some(body_span) = walk_span_to_context(search_span, SyntaxContext::root())\n             && let Ok(body_line) = source_map.lookup_line(body_span.lo())\n             && Lrc::ptr_eq(&unsafe_line.sf, &body_line.sf)\n             && let Some(src) = unsafe_line.sf.src.as_deref()"}, {"sha": "08aee4332151446a6fdd17603bd651cae7ee7306", "filename": "tests/ui/undocumented_unsafe_blocks.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/48e527e4bde3f9847f5d9147f917253461d331e1/tests%2Fui%2Fundocumented_unsafe_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48e527e4bde3f9847f5d9147f917253461d331e1/tests%2Fui%2Fundocumented_unsafe_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fundocumented_unsafe_blocks.rs?ref=48e527e4bde3f9847f5d9147f917253461d331e1", "patch": "@@ -250,6 +250,11 @@ fn from_proc_macro() {\n     proc_macro_unsafe::unsafe_block!(token);\n }\n \n+fn in_closure(x: *const u32) {\n+    // Safety: reason\n+    let _ = || unsafe { *x };\n+}\n+\n // Invalid comments\n \n #[rustfmt::skip]\n@@ -351,9 +356,9 @@ mod unsafe_impl_smoke_test {\n \n     #[rustfmt::skip]\n     mod sub_mod2 {\n-        // \n+        //\n         // SAFETY: ok\n-        // \n+        //\n \n         unsafe impl B for (u32) {}\n         unsafe trait B {}"}, {"sha": "c6a2127443befce4441fcc68018784fc0b362377", "filename": "tests/ui/undocumented_unsafe_blocks.stderr", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/48e527e4bde3f9847f5d9147f917253461d331e1/tests%2Fui%2Fundocumented_unsafe_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48e527e4bde3f9847f5d9147f917253461d331e1/tests%2Fui%2Fundocumented_unsafe_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fundocumented_unsafe_blocks.stderr?ref=48e527e4bde3f9847f5d9147f917253461d331e1", "patch": "@@ -1,5 +1,5 @@\n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:257:19\n+  --> $DIR/undocumented_unsafe_blocks.rs:262:19\n    |\n LL |     /* Safety: */ unsafe {}\n    |                   ^^^^^^^^^\n@@ -8,103 +8,103 @@ LL |     /* Safety: */ unsafe {}\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:261:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:266:5\n    |\n LL |     unsafe {}\n    |     ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:265:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:270:14\n    |\n LL |     let _ = [unsafe { 14 }, unsafe { 15 }, 42, unsafe { 16 }];\n    |              ^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:265:29\n+  --> $DIR/undocumented_unsafe_blocks.rs:270:29\n    |\n LL |     let _ = [unsafe { 14 }, unsafe { 15 }, 42, unsafe { 16 }];\n    |                             ^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:265:48\n+  --> $DIR/undocumented_unsafe_blocks.rs:270:48\n    |\n LL |     let _ = [unsafe { 14 }, unsafe { 15 }, 42, unsafe { 16 }];\n    |                                                ^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:269:18\n+  --> $DIR/undocumented_unsafe_blocks.rs:274:18\n    |\n LL |     let _ = (42, unsafe {}, \"test\", unsafe {});\n    |                  ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:269:37\n+  --> $DIR/undocumented_unsafe_blocks.rs:274:37\n    |\n LL |     let _ = (42, unsafe {}, \"test\", unsafe {});\n    |                                     ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:273:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:278:14\n    |\n LL |     let _ = *unsafe { &42 };\n    |              ^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:278:19\n+  --> $DIR/undocumented_unsafe_blocks.rs:283:19\n    |\n LL |     let _ = match unsafe {} {\n    |                   ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:284:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:289:14\n    |\n LL |     let _ = &unsafe {};\n    |              ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:288:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:293:14\n    |\n LL |     let _ = [unsafe {}; 5];\n    |              ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:292:13\n+  --> $DIR/undocumented_unsafe_blocks.rs:297:13\n    |\n LL |     let _ = unsafe {};\n    |             ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:302:8\n+  --> $DIR/undocumented_unsafe_blocks.rs:307:8\n    |\n LL |     t!(unsafe {});\n    |        ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:308:13\n+  --> $DIR/undocumented_unsafe_blocks.rs:313:13\n    |\n LL |             unsafe {}\n    |             ^^^^^^^^^\n@@ -116,55 +116,55 @@ LL |     t!();\n    = note: this error originates in the macro `t` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:316:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:321:5\n    |\n LL |     unsafe {} // SAFETY:\n    |     ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:320:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:325:5\n    |\n LL |     unsafe {\n    |     ^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:330:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:335:5\n    |\n LL |     unsafe {};\n    |     ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:334:20\n+  --> $DIR/undocumented_unsafe_blocks.rs:339:20\n    |\n LL |     println!(\"{}\", unsafe { String::from_utf8_unchecked(vec![]) });\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:341:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:346:5\n    |\n LL |     unsafe impl A for () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:348:9\n+  --> $DIR/undocumented_unsafe_blocks.rs:353:9\n    |\n LL |         unsafe impl B for (u32) {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:369:13\n+  --> $DIR/undocumented_unsafe_blocks.rs:374:13\n    |\n LL |             unsafe impl T for $t {}\n    |             ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -176,7 +176,7 @@ LL |     no_safety_comment!(());\n    = note: this error originates in the macro `no_safety_comment` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:394:13\n+  --> $DIR/undocumented_unsafe_blocks.rs:399:13\n    |\n LL |             unsafe impl T for $t {}\n    |             ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -188,15 +188,15 @@ LL |     no_safety_comment!(());\n    = note: this error originates in the macro `no_safety_comment` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:402:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:407:5\n    |\n LL |     unsafe impl T for (i32) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:394:13\n+  --> $DIR/undocumented_unsafe_blocks.rs:399:13\n    |\n LL |             unsafe impl T for $t {}\n    |             ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -208,55 +208,55 @@ LL |     no_safety_comment!(u32);\n    = note: this error originates in the macro `no_safety_comment` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:408:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:413:5\n    |\n LL |     unsafe impl T for (bool) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:454:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:459:5\n    |\n LL |     unsafe impl NoComment for () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:458:19\n+  --> $DIR/undocumented_unsafe_blocks.rs:463:19\n    |\n LL |     /* SAFETY: */ unsafe impl InlineComment for () {}\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:462:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:467:5\n    |\n LL |     unsafe impl TrailingComment for () {} // SAFETY:\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:467:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:472:5\n    |\n LL |     unsafe impl Interference for () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:474:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:479:5\n    |\n LL |     unsafe impl ImplInFn for () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe impl missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:483:1\n+  --> $DIR/undocumented_unsafe_blocks.rs:488:1\n    |\n LL | unsafe impl CrateRoot for () {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}