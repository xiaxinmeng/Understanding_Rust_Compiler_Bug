{"sha": "c5829c2ee544eb9931ce0d34f46b113b0a1e7f04", "node_id": "C_kwDOAAsO6NoAKGM1ODI5YzJlZTU0NGViOTkzMWNlMGQzNGY0NmIxMTNiMGExZTdmMDQ", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-03-06T16:36:42Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-06T08:34:16Z"}, "message": "Fix new usage of old api", "tree": {"sha": "462612abbcf6fc85b3a0b96eabcf5a86079941dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/462612abbcf6fc85b3a0b96eabcf5a86079941dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5829c2ee544eb9931ce0d34f46b113b0a1e7f04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5829c2ee544eb9931ce0d34f46b113b0a1e7f04", "html_url": "https://github.com/rust-lang/rust/commit/c5829c2ee544eb9931ce0d34f46b113b0a1e7f04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5829c2ee544eb9931ce0d34f46b113b0a1e7f04/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e29b5badbcf1d2f5e16bca00d067e07c18770f12", "url": "https://api.github.com/repos/rust-lang/rust/commits/e29b5badbcf1d2f5e16bca00d067e07c18770f12", "html_url": "https://github.com/rust-lang/rust/commit/e29b5badbcf1d2f5e16bca00d067e07c18770f12"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "54028dfe87b73328d25740d306305af41563b687", "filename": "compiler/rustc_mir_build/src/build/custom/parse/instruction.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c5829c2ee544eb9931ce0d34f46b113b0a1e7f04/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5829c2ee544eb9931ce0d34f46b113b0a1e7f04/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs?ref=c5829c2ee544eb9931ce0d34f46b113b0a1e7f04", "patch": "@@ -56,7 +56,7 @@ impl<'tcx, 'body> ParseCtxt<'tcx, 'body> {\n                 Ok(TerminatorKind::Drop {\n                     place: self.parse_place(args[0])?,\n                     target: self.parse_block(args[1])?,\n-                    unwind: None,\n+                    unwind: UnwindAction::Continue,\n                 })\n             },\n             @call(\"mir_call\", args) => {\n@@ -126,7 +126,7 @@ impl<'tcx, 'body> ParseCtxt<'tcx, 'body> {\n                     args,\n                     destination,\n                     target: Some(target),\n-                    cleanup: None,\n+                    unwind: UnwindAction::Continue,\n                     from_hir_call: *from_hir_call,\n                     fn_span: *fn_span,\n                 })"}, {"sha": "f32d2db4e71201758fe4a1f1b5fb40617ceec2e7", "filename": "compiler/rustc_mir_build/src/build/scope.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c5829c2ee544eb9931ce0d34f46b113b0a1e7f04/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5829c2ee544eb9931ce0d34f46b113b0a1e7f04/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs?ref=c5829c2ee544eb9931ce0d34f46b113b0a1e7f04", "patch": "@@ -1438,11 +1438,11 @@ impl<'tcx> DropTreeBuilder<'tcx> for Unwind {\n         let term = &mut cfg.block_data_mut(from).terminator_mut();\n         match &mut term.kind {\n             TerminatorKind::Drop { unwind, .. } => {\n-                if let Some(unwind) = *unwind {\n+                if let UnwindAction::Cleanup(unwind) = *unwind {\n                     let source_info = term.source_info;\n                     cfg.terminate(unwind, source_info, TerminatorKind::Goto { target: to });\n                 } else {\n-                    *unwind = Some(to);\n+                    *unwind = UnwindAction::Cleanup(to);\n                 }\n             }\n             TerminatorKind::FalseUnwind { unwind, .. }"}, {"sha": "a702113bd9998cce8bbcbf2a2ea9e69d58921ad9", "filename": "compiler/rustc_mir_transform/src/elaborate_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5829c2ee544eb9931ce0d34f46b113b0a1e7f04/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5829c2ee544eb9931ce0d34f46b113b0a1e7f04/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs?ref=c5829c2ee544eb9931ce0d34f46b113b0a1e7f04", "patch": "@@ -160,7 +160,7 @@ fn remove_dead_unwinds<'tcx>(\n     let basic_blocks = body.basic_blocks.as_mut();\n     for &bb in dead_unwinds.iter() {\n         if let Some(unwind) = basic_blocks[bb].terminator_mut().unwind_mut() {\n-            *unwind = None;\n+            *unwind = UnwindAction::Unreachable;\n         }\n     }\n }"}]}