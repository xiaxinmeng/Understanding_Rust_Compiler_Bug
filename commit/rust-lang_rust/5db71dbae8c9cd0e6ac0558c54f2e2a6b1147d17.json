{"sha": "5db71dbae8c9cd0e6ac0558c54f2e2a6b1147d17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkYjcxZGJhZThjOWNkMGU2YWMwNTU4YzU0ZjJlMmE2YjExNDdkMTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-15T12:02:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-15T12:02:00Z"}, "message": "Auto merge of #53133 - Zoxc:gen-int, r=eddyb\n\nRecord adjustments and original type for expressions in the generator interior\n\nFixes https://github.com/rust-lang/rust/issues/50878 and https://github.com/rust-lang/rust/issues/52398.\n\nr? @eddyb", "tree": {"sha": "2be921b4b994c820a382ab5dec1bbfbfb7eecda4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2be921b4b994c820a382ab5dec1bbfbfb7eecda4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5db71dbae8c9cd0e6ac0558c54f2e2a6b1147d17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5db71dbae8c9cd0e6ac0558c54f2e2a6b1147d17", "html_url": "https://github.com/rust-lang/rust/commit/5db71dbae8c9cd0e6ac0558c54f2e2a6b1147d17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5db71dbae8c9cd0e6ac0558c54f2e2a6b1147d17/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18a4c38a1df5bf79b427ed7d68609dec12bd7c0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/18a4c38a1df5bf79b427ed7d68609dec12bd7c0e", "html_url": "https://github.com/rust-lang/rust/commit/18a4c38a1df5bf79b427ed7d68609dec12bd7c0e"}, {"sha": "401af7994d26747c21e58dcbffa45bc3cd423696", "url": "https://api.github.com/repos/rust-lang/rust/commits/401af7994d26747c21e58dcbffa45bc3cd423696", "html_url": "https://github.com/rust-lang/rust/commit/401af7994d26747c21e58dcbffa45bc3cd423696"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "6e0c0bac186f4a652fddfb7c78851ea5d805006b", "filename": "src/librustc_typeck/check/generator_interior.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5db71dbae8c9cd0e6ac0558c54f2e2a6b1147d17/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db71dbae8c9cd0e6ac0558c54f2e2a6b1147d17/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs?ref=5db71dbae8c9cd0e6ac0558c54f2e2a6b1147d17", "patch": "@@ -167,7 +167,13 @@ impl<'a, 'gcx, 'tcx> Visitor<'tcx> for InteriorVisitor<'a, 'gcx, 'tcx> {\n \n         let scope = self.region_scope_tree.temporary_scope(expr.hir_id.local_id);\n \n-        let ty = self.fcx.tables.borrow().expr_ty_adjusted(expr);\n+        // Record the unadjusted type\n+        let ty = self.fcx.tables.borrow().expr_ty(expr);\n         self.record(ty, scope, Some(expr), expr.span);\n+\n+        // Also include the adjusted types, since these can result in MIR locals\n+        for adjustment in self.fcx.tables.borrow().expr_adjustments(expr) {\n+            self.record(adjustment.target, scope, Some(expr), expr.span);\n+        }\n     }\n }"}, {"sha": "0fb8f277ea9d4323ccde321f5b62fb9f4709909e", "filename": "src/test/run-pass/generator/issue-52398.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/5db71dbae8c9cd0e6ac0558c54f2e2a6b1147d17/src%2Ftest%2Frun-pass%2Fgenerator%2Fissue-52398.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db71dbae8c9cd0e6ac0558c54f2e2a6b1147d17/src%2Ftest%2Frun-pass%2Fgenerator%2Fissue-52398.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fissue-52398.rs?ref=5db71dbae8c9cd0e6ac0558c54f2e2a6b1147d17", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(generators)]\n+\n+use std::cell::RefCell;\n+\n+struct A;\n+\n+impl A {\n+    fn test(&self, a: ()) {}\n+}\n+\n+fn main() {\n+    // Test that the MIR local with type &A created for the auto-borrow adjustment\n+    // is caught by typeck\n+    move || {\n+        A.test(yield);\n+    };\n+\n+    // Test that the std::cell::Ref temporary returned from the `borrow` call\n+    // is caught by typeck\n+    let y = RefCell::new(true);\n+    static move || {\n+        yield *y.borrow();\n+        return \"Done\";\n+    };\n+}"}]}