{"sha": "e9292b76525aaaaf3ad96b1231defdffc309fa03", "node_id": "C_kwDOAAsO6NoAKGU5MjkyYjc2NTI1YWFhYWYzYWQ5NmIxMjMxZGVmZGZmYzMwOWZhMDM", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-10T09:17:33Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-10T09:17:33Z"}, "message": "fill new tracking issue for `feature(strict_provenance_atomic_ptr)`", "tree": {"sha": "fc3562134fe65d3fee794e767f6bddb32b645903", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc3562134fe65d3fee794e767f6bddb32b645903"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9292b76525aaaaf3ad96b1231defdffc309fa03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9292b76525aaaaf3ad96b1231defdffc309fa03", "html_url": "https://github.com/rust-lang/rust/commit/e9292b76525aaaaf3ad96b1231defdffc309fa03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9292b76525aaaaf3ad96b1231defdffc309fa03/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95e77648e466c780a9adce2fa3d3eb5e423dc04e", "url": "https://api.github.com/repos/rust-lang/rust/commits/95e77648e466c780a9adce2fa3d3eb5e423dc04e", "html_url": "https://github.com/rust-lang/rust/commit/95e77648e466c780a9adce2fa3d3eb5e423dc04e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "3780d330547b7dfd5f6bab63de08c06d94962dd0", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e9292b76525aaaaf3ad96b1231defdffc309fa03/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9292b76525aaaaf3ad96b1231defdffc309fa03/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=e9292b76525aaaaf3ad96b1231defdffc309fa03", "patch": "@@ -1487,7 +1487,7 @@ impl<T> AtomicPtr<T> {\n     /// ```\n     #[inline]\n     #[cfg(target_has_atomic = \"ptr\")]\n-    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"95228\")]\n+    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"99108\")]\n     pub fn fetch_ptr_add(&self, val: usize, order: Ordering) -> *mut T {\n         self.fetch_byte_add(val.wrapping_mul(core::mem::size_of::<T>()), order)\n     }\n@@ -1531,7 +1531,7 @@ impl<T> AtomicPtr<T> {\n     /// ```\n     #[inline]\n     #[cfg(target_has_atomic = \"ptr\")]\n-    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"95228\")]\n+    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"99108\")]\n     pub fn fetch_ptr_sub(&self, val: usize, order: Ordering) -> *mut T {\n         self.fetch_byte_sub(val.wrapping_mul(core::mem::size_of::<T>()), order)\n     }\n@@ -1566,7 +1566,7 @@ impl<T> AtomicPtr<T> {\n     /// ```\n     #[inline]\n     #[cfg(target_has_atomic = \"ptr\")]\n-    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"95228\")]\n+    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"99108\")]\n     pub fn fetch_byte_add(&self, val: usize, order: Ordering) -> *mut T {\n         #[cfg(not(bootstrap))]\n         // SAFETY: data races are prevented by atomic intrinsics.\n@@ -1609,7 +1609,7 @@ impl<T> AtomicPtr<T> {\n     /// ```\n     #[inline]\n     #[cfg(target_has_atomic = \"ptr\")]\n-    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"95228\")]\n+    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"99108\")]\n     pub fn fetch_byte_sub(&self, val: usize, order: Ordering) -> *mut T {\n         #[cfg(not(bootstrap))]\n         // SAFETY: data races are prevented by atomic intrinsics.\n@@ -1667,7 +1667,7 @@ impl<T> AtomicPtr<T> {\n     /// ```\n     #[inline]\n     #[cfg(target_has_atomic = \"ptr\")]\n-    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"95228\")]\n+    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"99108\")]\n     pub fn fetch_or(&self, val: usize, order: Ordering) -> *mut T {\n         #[cfg(not(bootstrap))]\n         // SAFETY: data races are prevented by atomic intrinsics.\n@@ -1724,7 +1724,7 @@ impl<T> AtomicPtr<T> {\n     /// ```\n     #[inline]\n     #[cfg(target_has_atomic = \"ptr\")]\n-    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"95228\")]\n+    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"99108\")]\n     pub fn fetch_and(&self, val: usize, order: Ordering) -> *mut T {\n         #[cfg(not(bootstrap))]\n         // SAFETY: data races are prevented by atomic intrinsics.\n@@ -1779,7 +1779,7 @@ impl<T> AtomicPtr<T> {\n     /// ```\n     #[inline]\n     #[cfg(target_has_atomic = \"ptr\")]\n-    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"95228\")]\n+    #[unstable(feature = \"strict_provenance_atomic_ptr\", issue = \"99108\")]\n     pub fn fetch_xor(&self, val: usize, order: Ordering) -> *mut T {\n         #[cfg(not(bootstrap))]\n         // SAFETY: data races are prevented by atomic intrinsics."}]}