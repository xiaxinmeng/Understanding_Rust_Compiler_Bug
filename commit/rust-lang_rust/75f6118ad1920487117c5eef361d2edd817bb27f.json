{"sha": "75f6118ad1920487117c5eef361d2edd817bb27f", "node_id": "C_kwDOAAsO6NoAKDc1ZjYxMThhZDE5MjA0ODcxMTdjNWVlZjM2MWQyZWRkODE3YmIyN2Y", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2021-12-14T21:32:21Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2021-12-15T02:30:26Z"}, "message": "Remove `SymbolStr`.\n\nBy changing `as_str()` to take `&self` instead of `self`, we can just\nreturn `&str`. We're still lying about lifetimes, but it's a smaller lie\nthan before, where `SymbolStr` contained a (fake) `&'static str`!", "tree": {"sha": "2f9cd0c155fef272a4c2eac5d0bc0907b33721ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f9cd0c155fef272a4c2eac5d0bc0907b33721ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75f6118ad1920487117c5eef361d2edd817bb27f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75f6118ad1920487117c5eef361d2edd817bb27f", "html_url": "https://github.com/rust-lang/rust/commit/75f6118ad1920487117c5eef361d2edd817bb27f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75f6118ad1920487117c5eef361d2edd817bb27f/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e05ad7f8199f0da52892d96f37c72581f1f56e87", "url": "https://api.github.com/repos/rust-lang/rust/commits/e05ad7f8199f0da52892d96f37c72581f1f56e87", "html_url": "https://github.com/rust-lang/rust/commit/e05ad7f8199f0da52892d96f37c72581f1f56e87"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "9a6c45ae98d5f5aeffeb09dd2c16f36fb6ecacef", "filename": "src/constant.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/75f6118ad1920487117c5eef361d2edd817bb27f/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75f6118ad1920487117c5eef361d2edd817bb27f/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=75f6118ad1920487117c5eef361d2edd817bb27f", "patch": "@@ -369,7 +369,7 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n             TodoItem::Static(def_id) => {\n                 //println!(\"static {:?}\", def_id);\n \n-                let section_name = tcx.codegen_fn_attrs(def_id).link_section.map(|s| s.as_str());\n+                let section_name = tcx.codegen_fn_attrs(def_id).link_section;\n \n                 let alloc = tcx.eval_static_initializer(def_id).unwrap();\n \n@@ -388,6 +388,7 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n \n         if let Some(section_name) = section_name {\n             let (segment_name, section_name) = if tcx.sess.target.is_like_osx {\n+                let section_name = section_name.as_str();\n                 if let Some(names) = section_name.split_once(',') {\n                     names\n                 } else {\n@@ -397,7 +398,7 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n                     ));\n                 }\n             } else {\n-                (\"\", &*section_name)\n+                (\"\", section_name.as_str())\n             };\n             data_ctx.set_segment_section(segment_name, section_name);\n         }"}]}