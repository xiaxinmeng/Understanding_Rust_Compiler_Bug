{"sha": "afd094a602196f53d3d78f72dc44e522f8a64ce8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZDA5NGE2MDIxOTZmNTNkM2Q3OGY3MmRjNDRlNTIyZjhhNjRjZTg=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-11-28T01:38:19Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-11-28T01:38:19Z"}, "message": "link to never type docs", "tree": {"sha": "1df87fb56cb0fafbf93d8244116583708faa323d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1df87fb56cb0fafbf93d8244116583708faa323d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afd094a602196f53d3d78f72dc44e522f8a64ce8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afd094a602196f53d3d78f72dc44e522f8a64ce8", "html_url": "https://github.com/rust-lang/rust/commit/afd094a602196f53d3d78f72dc44e522f8a64ce8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afd094a602196f53d3d78f72dc44e522f8a64ce8/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd7d541dbdc2280c49cd0ee148df5f004758c783", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd7d541dbdc2280c49cd0ee148df5f004758c783", "html_url": "https://github.com/rust-lang/rust/commit/bd7d541dbdc2280c49cd0ee148df5f004758c783"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "46a48779bd8a616a90efb94ffe4b83d830cc0c93", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afd094a602196f53d3d78f72dc44e522f8a64ce8/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afd094a602196f53d3d78f72dc44e522f8a64ce8/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=afd094a602196f53d3d78f72dc44e522f8a64ce8", "patch": "@@ -638,7 +638,7 @@ fn fmt_type(t: &clean::Type, f: &mut fmt::Formatter, use_absolute: bool) -> fmt:\n             fmt::Display::fmt(t, f)?;\n             primitive_link(f, PrimitiveType::Array, &format!(\"; {}]\", n))\n         }\n-        clean::Never => f.write_str(\"!\"),\n+        clean::Never => primitive_link(f, PrimitiveType::Never, \"!\"),\n         clean::RawPointer(m, ref t) => {\n             match **t {\n                 clean::Generic(_) | clean::ResolvedPath {is_generic: true, ..} => {"}]}