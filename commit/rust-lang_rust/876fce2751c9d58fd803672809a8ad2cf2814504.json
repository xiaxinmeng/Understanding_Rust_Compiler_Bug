{"sha": "876fce2751c9d58fd803672809a8ad2cf2814504", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NmZjZTI3NTFjOWQ1OGZkODAzNjcyODA5YThhZDJjZjI4MTQ1MDQ=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-09-24T19:31:24Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-09-24T19:31:24Z"}, "message": "cleanup", "tree": {"sha": "7f640ded5535934eae108857de84f3cf2eb38a1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f640ded5535934eae108857de84f3cf2eb38a1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/876fce2751c9d58fd803672809a8ad2cf2814504", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/876fce2751c9d58fd803672809a8ad2cf2814504", "html_url": "https://github.com/rust-lang/rust/commit/876fce2751c9d58fd803672809a8ad2cf2814504", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/876fce2751c9d58fd803672809a8ad2cf2814504/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32f97cc891a6a2857338b4fcc7bb022e609eac1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/32f97cc891a6a2857338b4fcc7bb022e609eac1c", "html_url": "https://github.com/rust-lang/rust/commit/32f97cc891a6a2857338b4fcc7bb022e609eac1c"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "797fd5ba7f6d89c1e22d120d59dc9a9648e342b6", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/876fce2751c9d58fd803672809a8ad2cf2814504/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/876fce2751c9d58fd803672809a8ad2cf2814504/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=876fce2751c9d58fd803672809a8ad2cf2814504", "patch": "@@ -868,7 +868,6 @@ fn consume_whitespace(rdr: @mut StringReader) {\n mod test {\n     use super::*;\n \n-    use ast;\n     use codemap::{BytePos, CodeMap, Span};\n     use diagnostic;\n     use parse::token;"}, {"sha": "f5fe53ddb4f713bd67ef09559872c12bb83c6a6b", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/876fce2751c9d58fd803672809a8ad2cf2814504/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/876fce2751c9d58fd803672809a8ad2cf2814504/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=876fce2751c9d58fd803672809a8ad2cf2814504", "patch": "@@ -324,17 +324,10 @@ mod test {\n     use abi;\n     use parse::parser::Parser;\n     use parse::token::{str_to_ident};\n-    use util::parser_testing::{string_to_tts_and_sess, string_to_parser};\n+    use util::parser_testing::{string_to_tts, string_to_parser};\n     use util::parser_testing::{string_to_expr, string_to_item};\n     use util::parser_testing::string_to_stmt;\n \n-    // map a string to tts, return the tt without its parsesess\n-    fn string_to_tts_only(source_str : @str) -> ~[ast::token_tree] {\n-        let (tts,_ps) = string_to_tts_and_sess(source_str);\n-        tts\n-    }\n-\n-\n     #[cfg(test)] fn to_json_str<E : Encodable<extra::json::Encoder>>(val: @E) -> ~str {\n         do io::with_str_writer |writer| {\n             let mut encoder = extra::json::Encoder(writer);\n@@ -396,7 +389,7 @@ mod test {\n     }\n \n     #[test] fn string_to_tts_1 () {\n-        let (tts,_ps) = string_to_tts_and_sess(@\"fn a (b : int) { b; }\");\n+        let tts = string_to_tts(@\"fn a (b : int) { b; }\");\n         assert_eq!(to_json_str(@tts),\n         ~\"[\\\n     {\\"}, {"sha": "4e64508944e2c20638e54bbe4352d4d5e4657b7d", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/876fce2751c9d58fd803672809a8ad2cf2814504/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/876fce2751c9d58fd803672809a8ad2cf2814504/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=876fce2751c9d58fd803672809a8ad2cf2814504", "patch": "@@ -2035,6 +2035,11 @@ impl Parser {\n \n     // parse a single token tree from the input.\n     pub fn parse_token_tree(&self) -> token_tree {\n+        // FIXME #6994: currently, this is too eager. It\n+        // parses token trees but also identifies tt_seq's\n+        // and tt_nonterminals; it's too early to know yet\n+        // whether something will be a nonterminal or a seq\n+        // yet.\n         maybe_whole!(deref self, nt_tt);\n \n         // this is the fall-through for the 'match' below."}]}