{"sha": "ddb77185d36985aeac85094cb4742da93a7e821d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkYjc3MTg1ZDM2OTg1YWVhYzg1MDk0Y2I0NzQyZGE5M2E3ZTgyMWQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-11-27T14:04:20Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-11-27T14:04:20Z"}, "message": "impl Clone for Cow", "tree": {"sha": "8fd2b5d258c82f6134ad92c47b96d3681cf27de1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fd2b5d258c82f6134ad92c47b96d3681cf27de1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddb77185d36985aeac85094cb4742da93a7e821d", "comment_count": 8, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddb77185d36985aeac85094cb4742da93a7e821d", "html_url": "https://github.com/rust-lang/rust/commit/ddb77185d36985aeac85094cb4742da93a7e821d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddb77185d36985aeac85094cb4742da93a7e821d/comments", "author": null, "committer": null, "parents": [{"sha": "82fc1aa8756bf47679e09a30c5968da9f84b89e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/82fc1aa8756bf47679e09a30c5968da9f84b89e5", "html_url": "https://github.com/rust-lang/rust/commit/82fc1aa8756bf47679e09a30c5968da9f84b89e5"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "0bfa3dac1b0ee68b8d03f4a2cdaf20de6c5f03f2", "filename": "src/libcore/borrow.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ddb77185d36985aeac85094cb4742da93a7e821d/src%2Flibcore%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddb77185d36985aeac85094cb4742da93a7e821d/src%2Flibcore%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fborrow.rs?ref=ddb77185d36985aeac85094cb4742da93a7e821d", "patch": "@@ -137,6 +137,18 @@ pub enum Cow<'a, T, Sized? B: 'a> where B: ToOwned<T> {\n     Owned(T)\n }\n \n+impl<'a, T, Sized? B> Clone for Cow<'a, T, B> where B: ToOwned<T> {\n+    fn clone(&self) -> Cow<'a, T, B> {\n+        match *self {\n+            Borrowed(b) => Borrowed(b),\n+            Owned(ref o) => {\n+                let b: &B = BorrowFrom::borrow_from(o);\n+                Owned(b.to_owned())\n+            },\n+        }\n+    }\n+}\n+\n impl<'a, T, Sized? B> Cow<'a, T, B> where B: ToOwned<T> {\n     /// Acquire a mutable reference to the owned form of the data.\n     ///"}]}