{"sha": "b6e234c6cf5044218b04ff6c35675e217689c157", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZTIzNGM2Y2Y1MDQ0MjE4YjA0ZmY2YzM1Njc1ZTIxNzY4OWMxNTc=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-19T01:14:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-19T01:14:11Z"}, "message": "Rollup merge of #86407 - LingMan:map-or, r=LeSeulArtichaut\n\nUse `map_or` instead of open-coding it\n\n`@rustbot` modify labels +C-cleanup +T-compiler", "tree": {"sha": "382a93166d008ef5a6d29d6757cd80eed9dd92a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/382a93166d008ef5a6d29d6757cd80eed9dd92a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6e234c6cf5044218b04ff6c35675e217689c157", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgzUTkCRBK7hj4Ov3rIwAA0oEIAGnzSeRdovhhxlD8Zc+MABUR\nKltTxOX5gMMdpHiLBGykiKovnQVhZdEAdkf+63cWza+zY0e7br+iFTdUwHb29wt/\nSey7xVXSVPfMxK8v/c81ALKNQnjUaaI7E4Gq72w7Ld0g7zImoIY8dJ1Vb1+/PwHC\nJJlDkA2DFcR5L5+aRbbVwbvsfpmzGm74jhuYahC0yURu2CLy3/nWS0ageNUYxM5x\nnSevc0cDPj4pP4qOmM/yXpY+/eIY2FrfaMYJer2b+4ewchphkKdOymWYmeg3CfGQ\nkvC/3XXOesDeiIEfUlyzXjZ8s8N3YrNHG5bBwhje2KMvLnvuXSdp5L8250skH6w=\n=sdQH\n-----END PGP SIGNATURE-----\n", "payload": "tree 382a93166d008ef5a6d29d6757cd80eed9dd92a5\nparent 90e82c950bbad2b9747b8688edbcc8026f81d63d\nparent 382ba79380c3e294cb18c2439f6aff945ee7b2d2\nauthor Yuki Okushi <jtitor@2k36.org> 1624065251 +0900\ncommitter GitHub <noreply@github.com> 1624065251 +0900\n\nRollup merge of #86407 - LingMan:map-or, r=LeSeulArtichaut\n\nUse `map_or` instead of open-coding it\n\n`@rustbot` modify labels +C-cleanup +T-compiler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6e234c6cf5044218b04ff6c35675e217689c157", "html_url": "https://github.com/rust-lang/rust/commit/b6e234c6cf5044218b04ff6c35675e217689c157", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6e234c6cf5044218b04ff6c35675e217689c157/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90e82c950bbad2b9747b8688edbcc8026f81d63d", "url": "https://api.github.com/repos/rust-lang/rust/commits/90e82c950bbad2b9747b8688edbcc8026f81d63d", "html_url": "https://github.com/rust-lang/rust/commit/90e82c950bbad2b9747b8688edbcc8026f81d63d"}, {"sha": "382ba79380c3e294cb18c2439f6aff945ee7b2d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/382ba79380c3e294cb18c2439f6aff945ee7b2d2", "html_url": "https://github.com/rust-lang/rust/commit/382ba79380c3e294cb18c2439f6aff945ee7b2d2"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "b56c247127ce4734e465c7f191fc193d5163aa9f", "filename": "compiler/rustc_mir/src/transform/const_prop.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b6e234c6cf5044218b04ff6c35675e217689c157/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6e234c6cf5044218b04ff6c35675e217689c157/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs?ref=b6e234c6cf5044218b04ff6c35675e217689c157", "patch": "@@ -1205,12 +1205,9 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n                         let mut eval_to_int = |op| {\n                             // This can be `None` if the lhs wasn't const propagated and we just\n                             // triggered the assert on the value of the rhs.\n-                            match self.eval_operand(op, source_info) {\n-                                Some(op) => DbgVal::Val(\n-                                    self.ecx.read_immediate(&op).unwrap().to_const_int(),\n-                                ),\n-                                None => DbgVal::Underscore,\n-                            }\n+                            self.eval_operand(op, source_info).map_or(DbgVal::Underscore, |op| {\n+                                DbgVal::Val(self.ecx.read_immediate(&op).unwrap().to_const_int())\n+                            })\n                         };\n                         let msg = match msg {\n                             AssertKind::DivisionByZero(op) => {"}]}