{"sha": "6f946f96563bac1f214f86f463287d94968e3688", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmOTQ2Zjk2NTYzYmFjMWYyMTRmODZmNDYzMjg3ZDk0OTY4ZTM2ODg=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-12T15:53:33Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-06-15T16:21:23Z"}, "message": "Add test for Deref", "tree": {"sha": "37919910c72aaa4ecdf10275e967b0efebe16b70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37919910c72aaa4ecdf10275e967b0efebe16b70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f946f96563bac1f214f86f463287d94968e3688", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f946f96563bac1f214f86f463287d94968e3688", "html_url": "https://github.com/rust-lang/rust/commit/6f946f96563bac1f214f86f463287d94968e3688", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f946f96563bac1f214f86f463287d94968e3688/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41c56c8a0d01d395e49cd199e6050b02a91cff1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/41c56c8a0d01d395e49cd199e6050b02a91cff1d", "html_url": "https://github.com/rust-lang/rust/commit/41c56c8a0d01d395e49cd199e6050b02a91cff1d"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "e587dca3181e65c57486049e3e00e0ab093c9dbb", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6f946f96563bac1f214f86f463287d94968e3688/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f946f96563bac1f214f86f463287d94968e3688/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=6f946f96563bac1f214f86f463287d94968e3688", "patch": "@@ -2737,6 +2737,35 @@ fn main() {\n     assert_eq!(t, \"Foo\");\n }\n \n+#[test]\n+fn deref_trait() {\n+    let t = type_at(\n+        r#\"\n+//- /main.rs\n+#[lang = \"deref\"]\n+trait Deref {\n+    type Target;\n+    fn deref(&self) -> &Self::Target;\n+}\n+\n+struct Arc<T>;\n+impl<T> Deref for Arc<T> {\n+    type Target = T;\n+}\n+\n+struct S;\n+impl S {\n+    fn foo(&self) -> u128 {}\n+}\n+\n+fn test(s: Arc<S>) {\n+    (*s, s.foo())<|>\n+}\n+\"#,\n+    );\n+    assert_eq!(t, \"(S, u128)\");\n+}\n+\n fn type_at_pos(db: &MockDatabase, pos: FilePosition) -> String {\n     let file = db.parse(pos.file_id).ok().unwrap();\n     let expr = algo::find_node_at_offset::<ast::Expr>(file.syntax(), pos.offset).unwrap();"}]}