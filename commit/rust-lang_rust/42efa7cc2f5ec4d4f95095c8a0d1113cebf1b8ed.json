{"sha": "42efa7cc2f5ec4d4f95095c8a0d1113cebf1b8ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyZWZhN2NjMmY1ZWM0ZDRmOTUwOTVjOGEwZDExMTNjZWJmMWI4ZWQ=", "commit": {"author": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2018-01-21T06:56:14Z"}, "committer": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2018-01-26T05:05:19Z"}, "message": "Wrapping `match_arm_blocks=true` snippet in function", "tree": {"sha": "1e92566c41c2ef807cb6587f9f9a87c3c5caaa98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e92566c41c2ef807cb6587f9f9a87c3c5caaa98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42efa7cc2f5ec4d4f95095c8a0d1113cebf1b8ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42efa7cc2f5ec4d4f95095c8a0d1113cebf1b8ed", "html_url": "https://github.com/rust-lang/rust/commit/42efa7cc2f5ec4d4f95095c8a0d1113cebf1b8ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42efa7cc2f5ec4d4f95095c8a0d1113cebf1b8ed/comments", "author": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d27393528cf5ad00fb7032bb5bf266e72711e04d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d27393528cf5ad00fb7032bb5bf266e72711e04d", "html_url": "https://github.com/rust-lang/rust/commit/d27393528cf5ad00fb7032bb5bf266e72711e04d"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "eb8d2ae0a3d43c37772c2badbb77cb4b4eadcb86", "filename": "Configurations.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/42efa7cc2f5ec4d4f95095c8a0d1113cebf1b8ed/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/42efa7cc2f5ec4d4f95095c8a0d1113cebf1b8ed/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=42efa7cc2f5ec4d4f95095c8a0d1113cebf1b8ed", "patch": "@@ -1841,11 +1841,13 @@ Wrap the body of arms in blocks when it does not fit on the same line with the p\n #### `true` (default):\n \n ```rust\n-match lorem {\n-    true => {\n-        foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(x)\n+fn main() {\n+    match lorem {\n+        true => {\n+            foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(x)\n+        }\n+        false => println!(\"{}\", sit),\n     }\n-    false => println!(\"{}\", sit),\n }\n ```\n "}]}