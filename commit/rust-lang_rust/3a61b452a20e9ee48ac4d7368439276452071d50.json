{"sha": "3a61b452a20e9ee48ac4d7368439276452071d50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNjFiNDUyYTIwZTllZTQ4YWM0ZDczNjg0MzkyNzY0NTIwNzFkNTA=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-07-03T13:24:52Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-01T10:55:52Z"}, "message": "Create a lint authoring helper (generates matching code)", "tree": {"sha": "0e79664efe3bf6ef31102d94cd7589c4c482d5cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e79664efe3bf6ef31102d94cd7589c4c482d5cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a61b452a20e9ee48ac4d7368439276452071d50", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmAXjgACgkQpp+NIls6\n19nkSw/+NWiGwzjUo+acQYGtZBw2fTC+2gsZlj09nTaC8THN7JUHiel1GtpU4HMe\nt68eXp6KZTkzbv5CX/m9H6V2ftB0maJf3UpJUNYG14bEk3+HVkjTeisUHvgb0nNH\nOKkjzMOIj7qBLQqR31J8w9UV1VF7HRry789TBcnBtTvViQaz1p5ju1PfUmIBn5mI\njXkHtkJJctOVwwiQ8eVyq1PQSbVtCD6sBR5w+IFyWHhocTlUasS6K9tNyjygHE83\njQLQF4KLPKbsfA3+nL8U6Swyilyg0+HGwILHhqu8ZWryESH8S/KntHfkQ0oZT3S7\nLz7DVrFLuw8wfUrXPjoPz0RLjbBSJSMa0SZvibuODw+kG99syXrwGI71HcQdHZ/H\nt9LECxzMxyEoSriMvlBJM/85OpLKvpzRgfjZLpPPf2txJI9Dr1jFCDLxcQ9XgaX0\ncLa+sBntTo+D0AjI5+Jzn66aY/RzKoBXUSwBb6MaTEzs01sDoWh2jeb0Ki4m+qJA\n3r1lW+9BBA9We5xJ3FcDwDasCoAVzZQPJlzWcSc4vY+X7QjqBZfdkd6ysVLiPqXw\nOsXtlechB2BiLI9hDhAfm32ITTndsOnpvHZ9ISzK9TSRDXy+xG9Y4YPWXi5MpNBt\nN14nOFwQMIfC3JBuuwJmeuGfXWjc5o2LRkVXqDykXuO5jiEVMHo=\n=Fez9\n-----END PGP SIGNATURE-----", "payload": "tree 0e79664efe3bf6ef31102d94cd7589c4c482d5cd\nparent 86d6cec138c98080e6152831a2d5700ab0128a44\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1499088292 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1501584952 +0200\n\nCreate a lint authoring helper (generates matching code)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a61b452a20e9ee48ac4d7368439276452071d50", "html_url": "https://github.com/rust-lang/rust/commit/3a61b452a20e9ee48ac4d7368439276452071d50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a61b452a20e9ee48ac4d7368439276452071d50/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86d6cec138c98080e6152831a2d5700ab0128a44", "url": "https://api.github.com/repos/rust-lang/rust/commits/86d6cec138c98080e6152831a2d5700ab0128a44", "html_url": "https://github.com/rust-lang/rust/commit/86d6cec138c98080e6152831a2d5700ab0128a44"}], "stats": {"total": 506, "additions": 501, "deletions": 5}, "files": [{"sha": "2891bcf24eed0bc97d8a9431f1fae49684048755", "filename": ".gitignore", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=3a61b452a20e9ee48ac4d7368439276452071d50", "patch": "@@ -31,6 +31,4 @@ util/gh-pages/lints.json\n \n helper.txt\n \n-*.stdout\n-\n .vscode"}, {"sha": "f1998235d3064bbf464a31506fa61060409f6b07", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=3a61b452a20e9ee48ac4d7368439276452071d50", "patch": "@@ -222,6 +222,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_early_lint_pass(box utils::internal_lints::Clippy);\n     reg.register_late_lint_pass(box utils::internal_lints::LintWithoutLintPass::default());\n     reg.register_late_lint_pass(box utils::inspector::Pass);\n+    reg.register_late_lint_pass(box utils::author::Pass);\n     reg.register_late_lint_pass(box types::TypePass);\n     reg.register_late_lint_pass(box booleans::NonminimalBool);\n     reg.register_late_lint_pass(box eq_op::EqOp);"}, {"sha": "af92589b4d28be5d27567324bf919788ae06e656", "filename": "clippy_lints/src/utils/author.rs", "status": "added", "additions": 470, "deletions": 0, "changes": 470, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=3a61b452a20e9ee48ac4d7368439276452071d50", "patch": "@@ -0,0 +1,470 @@\n+//! A group of attributes that can be attached to Rust code in order\n+//! to generate a clippy lint detecting said code automatically.\n+\n+#![allow(print_stdout, use_debug)]\n+\n+use rustc::lint::*;\n+use rustc::hir;\n+use rustc::hir::{Expr, QPath, Expr_};\n+use rustc::hir::intravisit::{Visitor, NestedVisitorMap};\n+use syntax::ast::{Attribute, NodeId, LitKind, DUMMY_NODE_ID, self};\n+use syntax::codemap::Span;\n+use std::collections::HashMap;\n+\n+/// **What it does:** Generates clippy code that detects the offending pattern\n+///\n+/// **Example:**\n+/// ```rust\n+/// fn foo() {\n+///     // detect the following pattern\n+///     #[clippy(author)]\n+///     if x == 42 {\n+///         // but ignore everything from here on\n+///         #![clippy(author = \"ignore\")]\n+///     }\n+/// }\n+/// ```\n+///\n+/// prints\n+///\n+/// ```\n+/// if_let_chain!{[\n+///     let Expr_::ExprIf(ref cond, ref then, None) = item.node,\n+///     let Expr_::ExprBinary(BinOp::Eq, ref left, ref right) = cond.node,\n+///     let Expr_::ExprPath(ref path) = left.node,\n+///     let Expr_::ExprLit(ref lit) = right.node,\n+///     let LitKind::Int(42, _) = lit.node,\n+/// ], {\n+///     // report your lint here\n+/// }}\n+/// ```\n+declare_lint! {\n+    pub LINT_AUTHOR,\n+    Warn,\n+    \"helper for writing lints\"\n+}\n+\n+pub struct Pass;\n+\n+impl LintPass for Pass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(LINT_AUTHOR)\n+    }\n+}\n+\n+fn prelude() {\n+    println!(\"if_let_chain!{{[\");\n+}\n+\n+fn done() {\n+    println!(\"], {{\");\n+    println!(\"    // report your lint here\");\n+    println!(\"}}}}\");\n+}\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n+    fn check_item(&mut self, _cx: &LateContext<'a, 'tcx>, item: &'tcx hir::Item) {\n+        if !has_attr(&item.attrs) {\n+            return;\n+        }\n+        prelude();\n+        PrintVisitor::new(\"item\").visit_item(item);\n+        done();\n+    }\n+\n+    fn check_impl_item(&mut self, _cx: &LateContext<'a, 'tcx>, item: &'tcx hir::ImplItem) {\n+        if !has_attr(&item.attrs) {\n+            return;\n+        }\n+        prelude();\n+        PrintVisitor::new(\"item\").visit_impl_item(item);\n+        done();\n+    }\n+\n+    fn check_trait_item(&mut self, _cx: &LateContext<'a, 'tcx>, item: &'tcx hir::TraitItem) {\n+        if !has_attr(&item.attrs) {\n+            return;\n+        }\n+        prelude();\n+        PrintVisitor::new(\"item\").visit_trait_item(item);\n+        done();\n+    }\n+\n+    fn check_variant(&mut self, _cx: &LateContext<'a, 'tcx>, var: &'tcx hir::Variant, generics: &hir::Generics) {\n+        if !has_attr(&var.node.attrs) {\n+            return;\n+        }\n+        prelude();\n+        PrintVisitor::new(\"var\").visit_variant(var, generics, DUMMY_NODE_ID);\n+        done();\n+    }\n+\n+    fn check_struct_field(&mut self, _cx: &LateContext<'a, 'tcx>, field: &'tcx hir::StructField) {\n+        if !has_attr(&field.attrs) {\n+            return;\n+        }\n+        prelude();\n+        PrintVisitor::new(\"field\").visit_struct_field(field);\n+        done();\n+    }\n+\n+    fn check_expr(&mut self, _cx: &LateContext<'a, 'tcx>, expr: &'tcx hir::Expr) {\n+        if !has_attr(&expr.attrs) {\n+            return;\n+        }\n+        prelude();\n+        PrintVisitor::new(\"expr\").visit_expr(expr);\n+        done();\n+    }\n+\n+    fn check_arm(&mut self, _cx: &LateContext<'a, 'tcx>, arm: &'tcx hir::Arm) {\n+        if !has_attr(&arm.attrs) {\n+            return;\n+        }\n+        prelude();\n+        PrintVisitor::new(\"arm\").visit_arm(arm);\n+        done();\n+    }\n+\n+    fn check_stmt(&mut self, _cx: &LateContext<'a, 'tcx>, stmt: &'tcx hir::Stmt) {\n+        if !has_attr(stmt.node.attrs()) {\n+            return;\n+        }\n+        prelude();\n+        PrintVisitor::new(\"stmt\").visit_stmt(stmt);\n+        done();\n+    }\n+\n+    fn check_foreign_item(&mut self, _cx: &LateContext<'a, 'tcx>, item: &'tcx hir::ForeignItem) {\n+        if !has_attr(&item.attrs) {\n+            return;\n+        }\n+        prelude();\n+        PrintVisitor::new(\"item\").visit_foreign_item(item);\n+        done();\n+    }\n+}\n+\n+impl PrintVisitor {\n+    fn new(s: &'static str) -> Self {\n+        PrintVisitor {\n+            ids: HashMap::new(),\n+            current: s.to_owned(),\n+        }\n+    }\n+\n+    fn next(&mut self, s: &'static str) -> String {\n+        use std::collections::hash_map::Entry::*;\n+        match self.ids.entry(s) {\n+            // already there: start numbering from `1`\n+            Occupied(mut occ) => {\n+                let val = occ.get_mut();\n+                *val += 1;\n+                format!(\"{}{}\", s, *val)\n+            },\n+            // not there: insert and return name as given\n+            Vacant(vac) => {\n+                vac.insert(0);\n+                s.to_owned()\n+            }\n+        }\n+    }\n+}\n+\n+struct PrintVisitor {\n+    /// Fields are the current index that needs to be appended to pattern binding names\n+    ids: HashMap<&'static str, usize>,\n+    /// the name that needs to be destructured\n+    current: String,\n+}\n+\n+impl<'tcx> Visitor<'tcx> for PrintVisitor {\n+    fn visit_expr(&mut self, expr: &Expr) {\n+        print!(\"    let Expr_::Expr\");\n+        let current = format!(\"{}.node\", self.current);\n+        match expr.node {\n+            Expr_::ExprBox(ref inner) => {\n+                let inner_pat = self.next(\"inner\");\n+                println!(\"Box(ref {}) = {},\", inner_pat, current);\n+                self.current = inner_pat;\n+                self.visit_expr(inner);\n+            },\n+            Expr_::ExprArray(ref elements) => {\n+                let elements_pat = self.next(\"elements\");\n+                println!(\"Array(ref {}) = {},\", elements_pat, current);\n+                println!(\"    {}.len() == {},\", elements_pat, elements.len());\n+                for (i, element) in elements.iter().enumerate() {\n+                    self.current = format!(\"{}[{}]\", elements_pat, i);\n+                    self.visit_expr(element);\n+                }\n+            },\n+            Expr_::ExprCall(ref _func, ref _args) => {\n+                println!(\"Call(ref func, ref args) = {},\", current);\n+                println!(\"    // unimplemented: `ExprCall` is not further destructured at the moment\");\n+            },\n+            Expr_::ExprMethodCall(ref _method_name, ref _generics, ref _args) => {\n+                println!(\"MethodCall(ref method_name, ref generics, ref args) = {},\", current);\n+                println!(\"    // unimplemented: `ExprMethodCall` is not further destructured at the moment\");\n+            },\n+            Expr_::ExprTup(ref elements) => {\n+                let elements_pat = self.next(\"elements\");\n+                println!(\"Tup(ref {}) = {},\", elements_pat, current);\n+                println!(\"    {}.len() == {},\", elements_pat, elements.len());\n+                for (i, element) in elements.iter().enumerate() {\n+                    self.current = format!(\"{}[{}]\", elements_pat, i);\n+                    self.visit_expr(element);\n+                }\n+            },\n+            Expr_::ExprBinary(ref op, ref left, ref right) => {\n+                let op_pat = self.next(\"op\");\n+                let left_pat = self.next(\"left\");\n+                let right_pat = self.next(\"right\");\n+                println!(\"Binary(ref {}, ref {}, ref {}) = {},\", op_pat, left_pat, right_pat, current);\n+                println!(\"    BinOp_::{:?} == {}.node,\", op.node, op_pat);\n+                self.current = left_pat;\n+                self.visit_expr(left);\n+                self.current = right_pat;\n+                self.visit_expr(right);\n+            },\n+            Expr_::ExprUnary(ref op, ref inner) => {\n+                let inner_pat = self.next(\"inner\");\n+                println!(\"Unary(UnOp::{:?}, ref {}) = {},\", op, inner_pat, current);\n+                self.current = inner_pat;\n+                self.visit_expr(inner);\n+            },\n+            Expr_::ExprLit(ref lit) => {\n+                let lit_pat = self.next(\"lit\");\n+                println!(\"Lit(ref {}) = {},\", lit_pat, current);\n+                match lit.node {\n+                    LitKind::Bool(val) => println!(\"    let LitKind::Bool({:?}) = {}.node,\", val, lit_pat),\n+                    LitKind::Char(c) => println!(\"    let LitKind::Char({:?}) = {}.node,\", c, lit_pat),\n+                    LitKind::Byte(b) => println!(\"    let LitKind::Byte({}) = {}.node,\", b, lit_pat),\n+                    // FIXME: also check int type\n+                    LitKind::Int(i, _) => println!(\"    let LitKind::Int({}, _) = {}.node,\", i, lit_pat),\n+                    LitKind::Float(..) => println!(\"    let LitKind::Float(..) = {}.node,\", lit_pat),\n+                    LitKind::FloatUnsuffixed(_) => println!(\"    let LitKind::FloatUnsuffixed(_) = {}.node,\", lit_pat),\n+                    LitKind::ByteStr(ref vec) => {\n+                        let vec_pat = self.next(\"vec\");\n+                        println!(\"    let LitKind::ByteStr(ref {}) = {}.node,\", vec_pat, lit_pat);\n+                        println!(\"    let [{:?}] = **{},\", vec, vec_pat);\n+                    },\n+                    LitKind::Str(ref text, _) => {\n+                        let str_pat = self.next(\"s\");\n+                        println!(\"    let LitKind::Str(ref {}) = {}.node,\", str_pat, lit_pat);\n+                        println!(\"    {}.as_str() == {:?}\", str_pat, &*text.as_str())\n+                    },\n+                }\n+            }\n+            Expr_::ExprCast(ref expr, ref _ty) => {\n+                let cast_pat = self.next(\"expr\");\n+                println!(\"Cast(ref {}, _) = {},\", cast_pat, current);\n+                self.current = cast_pat;\n+                self.visit_expr(expr);\n+            },\n+            Expr_::ExprType(ref expr, ref _ty) => {\n+                let cast_pat = self.next(\"expr\");\n+                println!(\"Type(ref {}, _) = {},\", cast_pat, current);\n+                self.current = cast_pat;\n+                self.visit_expr(expr);\n+            },\n+            Expr_::ExprIf(ref cond, ref then, ref opt_else) => {\n+                let cond_pat = self.next(\"cond\");\n+                let then_pat = self.next(\"then\");\n+                if let Some(ref else_) = *opt_else {\n+                    let else_pat = self.next(\"else_\");\n+                    println!(\"If(ref {}, ref {}, Some(ref {})) = {},\", cond_pat, then_pat, else_pat, current);\n+                    self.current = else_pat;\n+                    self.visit_expr(else_);\n+                } else {\n+                    println!(\"If(ref {}, ref {}, None) = {},\", cond_pat, then_pat, current);\n+                }\n+                self.current = cond_pat;\n+                self.visit_expr(cond);\n+                self.current = then_pat;\n+                self.visit_expr(then);\n+            }\n+            Expr_::ExprWhile(ref _cond, ref _body, ref _opt_label) => {\n+                println!(\"While(ref cond, ref body, ref opt_label) = {},\", current);\n+                println!(\"    // unimplemented: `ExprWhile` is not further destructured at the moment\");\n+            },\n+            Expr_::ExprLoop(ref _body, ref _opt_label, ref _desuraging) => {\n+                println!(\"Loop(ref body, ref opt_label, ref desugaring) = {},\", current);\n+                println!(\"    // unimplemented: `ExprLoop` is not further destructured at the moment\");\n+            },\n+            Expr_::ExprMatch(ref _expr, ref _arms, ref _desugaring) => {\n+                println!(\"Match(ref expr, ref arms, ref desugaring) = {},\", current);\n+                println!(\"    // unimplemented: `ExprMatch` is not further destructured at the moment\");\n+            },\n+            Expr_::ExprClosure(ref _capture_clause, ref _func, _, _) => {\n+                println!(\"Closure(ref capture_clause, ref func, _, _) = {},\", current);\n+                println!(\"    // unimplemented: `ExprClosure` is not further destructured at the moment\");\n+            },\n+            Expr_::ExprBlock(ref block) => {\n+                let block_pat = self.next(\"block\");\n+                println!(\"Block(ref {}) = {},\", block_pat, current);\n+                self.current = block_pat;\n+                self.visit_block(block);\n+            },\n+            Expr_::ExprAssign(ref target, ref value) => {\n+                let target_pat = self.next(\"target\");\n+                let value_pat = self.next(\"value\");\n+                println!(\"Assign(ref {}, ref {}) = {},\", target_pat, value_pat, current);\n+                self.current = target_pat;\n+                self.visit_expr(target);\n+                self.current = value_pat;\n+                self.visit_expr(value);\n+            },\n+            Expr_::ExprAssignOp(ref op, ref target, ref value) => {\n+                let op_pat = self.next(\"op\");\n+                let target_pat = self.next(\"target\");\n+                let value_pat = self.next(\"value\");\n+                println!(\"AssignOp(ref {}, ref {}, ref {}) = {},\", op_pat, target_pat, value_pat, current);\n+                println!(\"    BinOp_::{:?} == {}.node,\", op.node, op_pat);\n+                self.current = target_pat;\n+                self.visit_expr(target);\n+                self.current = value_pat;\n+                self.visit_expr(value);\n+            },\n+            Expr_::ExprField(ref object, ref field_name) => {\n+                let obj_pat = self.next(\"object\");\n+                let field_name_pat = self.next(\"field_name\");\n+                println!(\"Field(ref {}, ref {}) = {},\", obj_pat, field_name_pat, current);\n+                println!(\"    {}.node.as_str() == {:?}\", field_name_pat, field_name.node.as_str());\n+                self.current = obj_pat;\n+                self.visit_expr(object);\n+            },\n+            Expr_::ExprTupField(ref object, ref field_id) => {\n+                let obj_pat = self.next(\"object\");\n+                let field_id_pat = self.next(\"field_id\");\n+                println!(\"TupField(ref {}, ref {}) = {},\", obj_pat, field_id_pat, current);\n+                println!(\"    {}.node == {}\", field_id_pat, field_id.node);\n+                self.current = obj_pat;\n+                self.visit_expr(object);\n+            },\n+            Expr_::ExprIndex(ref object, ref index) => {\n+                let object_pat = self.next(\"object\");\n+                let index_pat = self.next(\"index\");\n+                println!(\"Index(ref {}, ref {}) = {},\", object_pat, index_pat, current);\n+                self.current = object_pat;\n+                self.visit_expr(object);\n+                self.current = index_pat;\n+                self.visit_expr(index);\n+            },\n+            Expr_::ExprPath(ref path) => {\n+                let path_pat = self.next(\"path\");\n+                println!(\"Path(ref {}) = {},\", path_pat, current);\n+                self.current = path_pat;\n+                self.visit_qpath(path, expr.id, expr.span);\n+            },\n+            Expr_::ExprAddrOf(mutability, ref inner) => {\n+                let inner_pat = self.next(\"inner\");\n+                println!(\"AddrOf({:?}, ref {}) = {},\", mutability, inner_pat, current);\n+                self.current = inner_pat;\n+                self.visit_expr(inner);\n+            },\n+            Expr_::ExprBreak(ref _destination, ref opt_value) => {\n+                let destination_pat = self.next(\"destination\");\n+                if let Some(ref value) = *opt_value {\n+                    let value_pat = self.next(\"value\");\n+                    println!(\"Break(ref {}, Some(ref {})) = {},\", destination_pat, value_pat, current);\n+                    self.current = value_pat;\n+                    self.visit_expr(value);\n+                } else {\n+                    println!(\"Break(ref {}, None) = {},\", destination_pat, current);\n+                }\n+                // FIXME: implement label printing\n+            },\n+            Expr_::ExprAgain(ref _destination) => {\n+                let destination_pat = self.next(\"destination\");\n+                println!(\"Again(ref {}) = {},\", destination_pat, current);\n+                // FIXME: implement label printing\n+            },\n+            Expr_::ExprRet(ref opt_value) => {\n+                if let Some(ref value) = *opt_value {\n+                    let value_pat = self.next(\"value\");\n+                    println!(\"Ret(Some(ref {})) = {},\", value_pat, current);\n+                    self.current = value_pat;\n+                    self.visit_expr(value);\n+                } else {\n+                    println!(\"Ret(None) = {},\", current);\n+                }\n+            },\n+            Expr_::ExprInlineAsm(_, ref _input, ref _output) => {\n+                println!(\"InlineAsm(_, ref input, ref output) = {},\", current);\n+                println!(\"    // unimplemented: `ExprInlineAsm` is not further destructured at the moment\");\n+            },\n+            Expr_::ExprStruct(ref path, ref fields, ref opt_base) => {\n+                let path_pat = self.next(\"path\");\n+                let fields_pat = self.next(\"fields\");\n+                if let Some(ref base) = *opt_base {\n+                    let base_pat = self.next(\"base\");\n+                    println!(\"Struct(ref {}, ref {}, Some(ref {})) = {},\", path_pat, fields_pat, base_pat, current);\n+                    self.current = base_pat;\n+                    self.visit_expr(base);\n+                } else {\n+                    println!(\"Struct(ref {}, ref {}, None) = {},\", path_pat, fields_pat, current);\n+                }\n+                self.current = path_pat;\n+                self.visit_qpath(path, expr.id, expr.span);\n+                println!(\"    {}.len() == {},\", fields_pat, fields.len());\n+                println!(\"    // unimplemented: field checks\");\n+            },\n+            // FIXME: compute length (needs type info)\n+            Expr_::ExprRepeat(ref value, _) => {\n+                let value_pat = self.next(\"value\");\n+                println!(\"Repeat(ref {}, _) = {},\", value_pat, current);\n+                println!(\"// unimplemented: repeat count check\");\n+                self.current = value_pat;\n+                self.visit_expr(value);\n+            },\n+        }\n+    }\n+\n+    fn visit_qpath(&mut self, path: &QPath, _: NodeId, _: Span) {\n+        print!(\"    match_path({}, &[\", self.current);\n+        print_path(path, &mut true);\n+        println!(\"]),\");\n+    }\n+    fn nested_visit_map<'this>(&'this mut self) -> NestedVisitorMap<'this, 'tcx> {\n+        NestedVisitorMap::None\n+    }\n+}\n+\n+fn has_attr(attrs: &[Attribute]) -> bool {\n+    attrs.iter().any(|attr| {\n+        attr.check_name(\"clippy\") &&\n+        attr.meta_item_list().map_or(false, |list| {\n+            list.len() == 1 && match list[0].node {\n+                ast::NestedMetaItemKind::MetaItem(ref it) => it.name == \"author\",\n+                ast::NestedMetaItemKind::Literal(_) => false,\n+            }\n+        })\n+    })\n+}\n+\n+fn print_path(path: &QPath, first: &mut bool) {\n+    match *path {\n+        QPath::Resolved(_, ref path) => for segment in &path.segments {\n+            if *first {\n+                *first = false;\n+            } else {\n+                print!(\", \");\n+            }\n+            print!(\"{:?}\", segment.name.as_str());\n+        },\n+        QPath::TypeRelative(ref ty, ref segment) => {\n+            match ty.node {\n+                hir::Ty_::TyPath(ref inner_path) => {\n+                    print_path(inner_path, first);\n+                    if *first {\n+                        *first = false;\n+                    } else {\n+                        print!(\", \");\n+                    }\n+                    print!(\"{:?}\", segment.name.as_str());\n+                },\n+                ref other => print!(\"/* unimplemented: {:?}*/\", other),\n+            }\n+        },\n+    }\n+}"}, {"sha": "cdce1108be2b21bc6e86f5f21e2b7b4c780df09a", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=3a61b452a20e9ee48ac4d7368439276452071d50", "patch": "@@ -29,6 +29,7 @@ pub mod paths;\n pub mod sugg;\n pub mod inspector;\n pub mod internal_lints;\n+pub mod author;\n pub use self::hir_utils::{SpanlessEq, SpanlessHash};\n \n pub type MethodArgs = HirVec<P<Expr>>;"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/absurd-extreme-comparisons.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fabsurd-extreme-comparisons.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fabsurd-extreme-comparisons.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fabsurd-extreme-comparisons.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/approx_const.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fapprox_const.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fapprox_const.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fapprox_const.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/arithmetic.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Farithmetic.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Farithmetic.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Farithmetic.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/array_indexing.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Farray_indexing.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Farray_indexing.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Farray_indexing.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/assign_ops.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fassign_ops.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fassign_ops.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fassign_ops.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/assign_ops2.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fassign_ops2.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fassign_ops2.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fassign_ops2.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/attrs.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fattrs.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fattrs.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fattrs.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/bit_masks.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fbit_masks.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fbit_masks.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fbit_masks.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/blacklisted_name.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fblacklisted_name.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fblacklisted_name.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fblacklisted_name.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/block_in_if_condition.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fblock_in_if_condition.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fblock_in_if_condition.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fblock_in_if_condition.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/bool_comparison.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fbool_comparison.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fbool_comparison.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fbool_comparison.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/booleans.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fbooleans.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fbooleans.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fbooleans.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/borrow_box.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fborrow_box.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fborrow_box.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fborrow_box.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/box_vec.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fbox_vec.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fbox_vec.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fbox_vec.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/cast.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcast.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcast.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fcast.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/char_lit_as_u8.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fchar_lit_as_u8.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fchar_lit_as_u8.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fchar_lit_as_u8.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/cmp_nan.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcmp_nan.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcmp_nan.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fcmp_nan.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/cmp_null.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcmp_null.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcmp_null.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fcmp_null.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/cmp_owned.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcmp_owned.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcmp_owned.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fcmp_owned.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/collapsible_if.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcollapsible_if.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcollapsible_if.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fcollapsible_if.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/complex_types.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcomplex_types.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcomplex_types.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fcomplex_types.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/copies.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcopies.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcopies.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fcopies.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/cyclomatic_complexity.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcyclomatic_complexity.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcyclomatic_complexity.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fcyclomatic_complexity.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/cyclomatic_complexity_attr_used.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcyclomatic_complexity_attr_used.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fcyclomatic_complexity_attr_used.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fcyclomatic_complexity_attr_used.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/derive.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fderive.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fderive.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fderive.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/diverging_sub_expression.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdiverging_sub_expression.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdiverging_sub_expression.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fdiverging_sub_expression.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/dlist.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdlist.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdlist.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fdlist.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/doc.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdoc.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdoc.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fdoc.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/double_neg.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdouble_neg.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdouble_neg.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fdouble_neg.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/double_parens.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdouble_parens.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdouble_parens.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fdouble_parens.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/drop_forget_copy.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdrop_forget_copy.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdrop_forget_copy.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fdrop_forget_copy.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/drop_forget_ref.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdrop_forget_ref.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fdrop_forget_ref.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fdrop_forget_ref.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/duplicate_underscore_argument.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fduplicate_underscore_argument.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fduplicate_underscore_argument.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fduplicate_underscore_argument.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/empty_enum.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fempty_enum.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fempty_enum.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fempty_enum.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/entry.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fentry.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fentry.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fentry.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/enum_glob_use.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fenum_glob_use.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fenum_glob_use.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fenum_glob_use.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/enum_variants.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fenum_variants.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fenum_variants.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fenum_variants.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/enums_clike.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fenums_clike.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fenums_clike.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fenums_clike.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/eq_op.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Feq_op.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Feq_op.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Feq_op.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/escape_analysis.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fescape_analysis.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fescape_analysis.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fescape_analysis.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/eta.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Feta.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Feta.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Feta.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/eval_order_dependence.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Feval_order_dependence.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Feval_order_dependence.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Feval_order_dependence.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/filter_methods.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ffilter_methods.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ffilter_methods.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ffilter_methods.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/float_cmp.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ffloat_cmp.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ffloat_cmp.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ffloat_cmp.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/for_loop.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ffor_loop.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ffor_loop.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ffor_loop.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/format.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fformat.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fformat.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fformat.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/formatting.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fformatting.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fformatting.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fformatting.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/functions.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ffunctions.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ffunctions.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ffunctions.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/identity_op.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fidentity_op.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fidentity_op.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fidentity_op.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/if_let_redundant_pattern_matching.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fif_let_redundant_pattern_matching.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fif_let_redundant_pattern_matching.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fif_let_redundant_pattern_matching.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/if_not_else.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fif_not_else.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fif_not_else.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fif_not_else.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/invalid_upcast_comparisons.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Finvalid_upcast_comparisons.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Finvalid_upcast_comparisons.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Finvalid_upcast_comparisons.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/item_after_statement.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fitem_after_statement.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fitem_after_statement.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fitem_after_statement.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/large_enum_variant.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flarge_enum_variant.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flarge_enum_variant.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flarge_enum_variant.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/len_zero.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flen_zero.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flen_zero.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flen_zero.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/let_if_seq.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flet_if_seq.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flet_if_seq.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flet_if_seq.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/let_return.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flet_return.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flet_return.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flet_return.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/let_unit.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flet_unit.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flet_unit.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flet_unit.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/lifetimes.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flifetimes.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flifetimes.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flifetimes.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/lint_pass.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flint_pass.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Flint_pass.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flint_pass.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/literals.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fliterals.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fliterals.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fliterals.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/map_clone.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmap_clone.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmap_clone.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmap_clone.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/matches.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmatches.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmatches.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmatches.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/mem_forget.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmem_forget.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmem_forget.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmem_forget.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/methods.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmethods.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmethods.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmethods.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/min_max.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmin_max.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmin_max.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmin_max.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/missing-doc.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmissing-doc.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmissing-doc.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmissing-doc.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/module_inception.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmodule_inception.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmodule_inception.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmodule_inception.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/modulo_one.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmodulo_one.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmodulo_one.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmodulo_one.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/mut_from_ref.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmut_from_ref.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmut_from_ref.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmut_from_ref.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/mut_mut.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmut_mut.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmut_mut.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmut_mut.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/mut_reference.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmut_reference.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmut_reference.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmut_reference.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/mutex_atomic.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmutex_atomic.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fmutex_atomic.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmutex_atomic.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/needless_bool.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_bool.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_bool.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fneedless_bool.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/needless_borrow.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_borrow.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_borrow.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fneedless_borrow.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/needless_continue.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_continue.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_continue.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fneedless_continue.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/needless_pass_by_value.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_pass_by_value.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_pass_by_value.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fneedless_pass_by_value.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/needless_return.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_return.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_return.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fneedless_return.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/needless_update.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_update.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneedless_update.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fneedless_update.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/neg_multiply.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneg_multiply.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fneg_multiply.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fneg_multiply.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/never_loop.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fnever_loop.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fnever_loop.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fnever_loop.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/new_without_default.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fnew_without_default.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fnew_without_default.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fnew_without_default.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/no_effect.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fno_effect.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fno_effect.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fno_effect.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/non_expressive_names.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fnon_expressive_names.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fnon_expressive_names.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fnon_expressive_names.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/ok_if_let.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fok_if_let.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fok_if_let.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fok_if_let.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/op_ref.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fop_ref.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fop_ref.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fop_ref.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/open_options.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fopen_options.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fopen_options.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fopen_options.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/overflow_check_conditional.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Foverflow_check_conditional.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Foverflow_check_conditional.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Foverflow_check_conditional.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/panic.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fpanic.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fpanic.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fpanic.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/partialeq_ne_impl.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fpartialeq_ne_impl.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fpartialeq_ne_impl.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fpartialeq_ne_impl.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/patterns.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fpatterns.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fpatterns.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fpatterns.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/precedence.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fprecedence.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fprecedence.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fprecedence.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/print.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fprint.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fprint.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fprint.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/print_with_newline.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fprint_with_newline.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fprint_with_newline.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fprint_with_newline.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/ptr_arg.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fptr_arg.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fptr_arg.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fptr_arg.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/range.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Frange.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Frange.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Frange.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/redundant_closure_call.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fredundant_closure_call.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fredundant_closure_call.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fredundant_closure_call.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/reference.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Freference.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Freference.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Freference.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/regex.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fregex.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fregex.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fregex.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/serde.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fserde.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fserde.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fserde.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/shadow.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fshadow.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fshadow.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fshadow.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/short_circuit_statement.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fshort_circuit_statement.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fshort_circuit_statement.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fshort_circuit_statement.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/should_assert_eq.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fshould_assert_eq.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fshould_assert_eq.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fshould_assert_eq.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/strings.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fstrings.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fstrings.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fstrings.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/stutter.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fstutter.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fstutter.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fstutter.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/swap.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fswap.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fswap.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fswap.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/temporary_assignment.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ftemporary_assignment.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ftemporary_assignment.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ftemporary_assignment.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/toplevel_ref_arg.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ftoplevel_ref_arg.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ftoplevel_ref_arg.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ftoplevel_ref_arg.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "ff73228f3f73654a77662e2d4cab469cc88156c2", "filename": "clippy_tests/examples/trailing_zeros.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ftrailing_zeros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ftrailing_zeros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ftrailing_zeros.rs?ref=3a61b452a20e9ee48ac4d7368439276452071d50", "patch": "@@ -0,0 +1,10 @@\n+#![feature(plugin, custom_attribute, stmt_expr_attributes)]\n+#![plugin(clippy)]\n+#![allow(unused_parens)]\n+\n+fn main() {\n+    let x: i32 = 42;\n+    let _ = #[clippy(author)] (x & 0b1111 == 0);  // suggest trailing_zeros\n+    let _ = x & 0b11111 == 0; // suggest trailing_zeros\n+    let _ = x & 0b11010 == 0; // do not lint\n+}"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/trailing_zeros.stderr", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ftrailing_zeros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ftrailing_zeros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ftrailing_zeros.stderr?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "7f1e8a60096a4d93dcf50e2b7c5aee226c3a7e27", "filename": "clippy_tests/examples/trailing_zeros.stdout", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ftrailing_zeros.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Ftrailing_zeros.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ftrailing_zeros.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50", "patch": "@@ -0,0 +1,14 @@\n+if_let_chain!{[\n+    let Expr_::ExprBinary(ref op, ref left, ref right) = expr.node,\n+    BinOp_::BiEq == op.node,\n+    let Expr_::ExprBinary(ref op1, ref left1, ref right1) = left.node,\n+    BinOp_::BiBitAnd == op1.node,\n+    let Expr_::ExprPath(ref path) = left1.node,\n+    match_path(path, &[\"x\"]),\n+    let Expr_::ExprLit(ref lit) = right1.node,\n+    let LitKind::Int(15, _) = lit.node,\n+    let Expr_::ExprLit(ref lit1) = right.node,\n+    let LitKind::Int(0, _) = lit1.node,\n+]} {\n+    // report your lint here\n+}"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/unicode.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funicode.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funicode.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Funicode.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/unit_cmp.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funit_cmp.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funit_cmp.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Funit_cmp.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/unneeded_field_pattern.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funneeded_field_pattern.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funneeded_field_pattern.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Funneeded_field_pattern.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/unsafe_removed_from_name.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funsafe_removed_from_name.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funsafe_removed_from_name.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Funsafe_removed_from_name.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/unused_io_amount.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funused_io_amount.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funused_io_amount.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Funused_io_amount.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/unused_labels.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funused_labels.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funused_labels.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Funused_labels.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/unused_lt.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funused_lt.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Funused_lt.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Funused_lt.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/used_underscore_binding.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fused_underscore_binding.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fused_underscore_binding.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fused_underscore_binding.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/useless_attribute.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fuseless_attribute.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fuseless_attribute.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fuseless_attribute.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/vec.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fvec.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fvec.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fvec.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/while_loop.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fwhile_loop.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fwhile_loop.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fwhile_loop.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/wrong_self_convention.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fwrong_self_convention.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fwrong_self_convention.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fwrong_self_convention.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/zero_div_zero.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fzero_div_zero.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fzero_div_zero.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fzero_div_zero.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_tests/examples/zero_ptr.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fzero_ptr.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/clippy_tests%2Fexamples%2Fzero_ptr.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fzero_ptr.stdout?ref=3a61b452a20e9ee48ac4d7368439276452071d50"}, {"sha": "44488f11c5c6abb8814d9aee12e6b21a01a8f666", "filename": "tests/examples.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3a61b452a20e9ee48ac4d7368439276452071d50/tests%2Fexamples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a61b452a20e9ee48ac4d7368439276452071d50/tests%2Fexamples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fexamples.rs?ref=3a61b452a20e9ee48ac4d7368439276452071d50", "patch": "@@ -27,18 +27,20 @@ fn examples() {\n             continue;\n         }\n         cmd!(\"touch\", &file).run().unwrap();\n-        let output = file.with_extension(\"stderr\");\n+        let stderr = file.with_extension(\"stderr\");\n+        let stdout = file.with_extension(\"stdout\");\n         cmd!(\"cargo\", \"rustc\", \"-q\", \"--example\", file.file_stem().unwrap(), \"--\", \"-Dwarnings\",\n              \"-Zremap-path-prefix-from=examples/\", \"-Zremap-path-prefix-to=\",\n              \"-Zremap-path-prefix-from=examples\\\\\", \"-Zremap-path-prefix-to=\"\n              )\n             .unchecked()\n-            .stderr(&output)\n+            .stdout(&stdout)\n+            .stderr(&stderr)\n             .env(\"CLIPPY_DISABLE_WIKI_LINKS\", \"true\")\n             .dir(\"clippy_tests\")\n             .run()\n             .unwrap();\n-        if cmd!(\"git\", \"diff\", \"--exit-code\", output).run().is_err() {\n+        if cmd!(\"git\", \"diff\", \"--exit-code\", stderr).run().is_err() || cmd!(\"git\", \"diff\", \"--exit-code\", stdout).run().is_err() {\n             error = true;\n             println!(\"ERROR\");\n         } else {"}]}