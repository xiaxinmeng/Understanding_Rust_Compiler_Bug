{"sha": "096c3ed6c6ed98147d5d22ba5c5b0c109912b837", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NmMzZWQ2YzZlZDk4MTQ3ZDVkMjJiYTVjNWIwYzEwOTkxMmI4Mzc=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-07-27T23:55:25Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-01T19:06:44Z"}, "message": "Refactor away `resolution.try_define()`.", "tree": {"sha": "0365c14e0579965b4d889672a1b5352b2f517c0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0365c14e0579965b4d889672a1b5352b2f517c0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/096c3ed6c6ed98147d5d22ba5c5b0c109912b837", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/096c3ed6c6ed98147d5d22ba5c5b0c109912b837", "html_url": "https://github.com/rust-lang/rust/commit/096c3ed6c6ed98147d5d22ba5c5b0c109912b837", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/096c3ed6c6ed98147d5d22ba5c5b0c109912b837/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5868e78b09880f701c78d5d7122164494d928637", "url": "https://api.github.com/repos/rust-lang/rust/commits/5868e78b09880f701c78d5d7122164494d928637", "html_url": "https://github.com/rust-lang/rust/commit/5868e78b09880f701c78d5d7122164494d928637"}], "stats": {"total": 33, "additions": 15, "deletions": 18}, "files": [{"sha": "8e2c21f880f1c9757b11d690f1ab247bb19ba5e5", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/096c3ed6c6ed98147d5d22ba5c5b0c109912b837/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096c3ed6c6ed98147d5d22ba5c5b0c109912b837/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=096c3ed6c6ed98147d5d22ba5c5b0c109912b837", "patch": "@@ -137,23 +137,6 @@ impl<'a> SingleImports<'a> {\n }\n \n impl<'a> NameResolution<'a> {\n-    fn try_define(&mut self, binding: &'a NameBinding<'a>) -> Result<(), &'a NameBinding<'a>> {\n-        if let Some(old_binding) = self.binding {\n-            if binding.is_glob_import() {\n-                self.duplicate_globs.push(binding);\n-            } else if old_binding.is_glob_import() {\n-                self.duplicate_globs.push(old_binding);\n-                self.binding = Some(binding);\n-            } else {\n-                return Err(old_binding);\n-            }\n-        } else {\n-            self.binding = Some(binding);\n-        }\n-\n-        Ok(())\n-    }\n-\n     // Returns the binding for the name if it is known or None if it not known.\n     fn binding(&self) -> Option<&'a NameBinding<'a>> {\n         self.binding.and_then(|binding| match self.single_imports {\n@@ -246,8 +229,22 @@ impl<'a> ::ModuleS<'a> {\n     // Define the name or return the existing binding if there is a collision.\n     pub fn try_define_child(&self, name: Name, ns: Namespace, binding: NameBinding<'a>)\n                             -> Result<(), &'a NameBinding<'a>> {\n+        let binding = self.arenas.alloc_name_binding(binding);\n         self.update_resolution(name, ns, |resolution| {\n-            resolution.try_define(self.arenas.alloc_name_binding(binding))\n+            if let Some(old_binding) = resolution.binding {\n+                if binding.is_glob_import() {\n+                    resolution.duplicate_globs.push(binding);\n+                } else if old_binding.is_glob_import() {\n+                    resolution.duplicate_globs.push(old_binding);\n+                    resolution.binding = Some(binding);\n+                } else {\n+                    return Err(old_binding);\n+                }\n+            } else {\n+                resolution.binding = Some(binding);\n+            }\n+\n+            Ok(())\n         })\n     }\n "}]}