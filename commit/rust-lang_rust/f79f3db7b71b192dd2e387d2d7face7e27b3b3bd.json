{"sha": "f79f3db7b71b192dd2e387d2d7face7e27b3b3bd", "node_id": "C_kwDOAAsO6NoAKGY3OWYzZGI3YjcxYjE5MmRkMmUzODdkMmQ3ZmFjZTdlMjdiM2IzYmQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-16T13:26:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-16T13:26:16Z"}, "message": "Merge #11030\n\n11030: Add comma for \"move if to guard\" r=Veykril a=weirane\n\nAs I mentioned in #11017, there is a little issue in the implementation for if branch. This code\r\n```rust\r\nlet y = match 92 {\r\n    x => {\r\n        if x == 0 {$0\r\n            false\r\n        }\r\n    }\r\n    _ => true,\r\n};\r\n```\r\nwill be transformed to\r\n```rust\r\nlet y = match 92 {\r\n    x if x == 0 => false\r\n    _ => true,\r\n};\r\n```\r\na comma is missing after the false. I moved the fix from the code handling else branch to above.\n\nCo-authored-by: Wang Ruochen <wrc@ruo-chen.wang>", "tree": {"sha": "4b5a50adc20566bfbed300a8d4d4656d5159da1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b5a50adc20566bfbed300a8d4d4656d5159da1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f79f3db7b71b192dd2e387d2d7face7e27b3b3bd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhuz54CRBK7hj4Ov3rIwAAW3QIAIL+vExGX+evAYYQpq5ymtCT\nDVk0/S7dk0MXmXmWEFsXMArbfEPbc7XAvdu77CftL/zeYzJU/HgcUtYCGpSLSVjJ\nfj91norw/CphRCJZ5ip50DHaNF8pCOYpww8GP2L40yalYvt8u4zxzGyu9sr+r5J6\nwC0mjKPYcv+k0fFcS79aP+QhoTYVC2qgICCVgOfG/550O1mPoMZ4YRZz+9RLlPHE\ngGoN2WHzV+yZp4mivuUK4NAJQ4ounLx/V8Zyo6oFFSODfjZKW3nFYZ/HJcYUVMrm\nESCba7TO7uLjmldmjQUg6HNdrWeI/rutA05DmsDcpIxX8dHiVuAKDY+CMwVOLOg=\n=xaSz\n-----END PGP SIGNATURE-----\n", "payload": "tree 4b5a50adc20566bfbed300a8d4d4656d5159da1e\nparent 098b1f248682f87a69f6f00ff0683ca724521b5d\nparent ee079561b1d65d40f67a9d6c3df3e8022b2e3d0a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1639661176 +0000\ncommitter GitHub <noreply@github.com> 1639661176 +0000\n\nMerge #11030\n\n11030: Add comma for \"move if to guard\" r=Veykril a=weirane\n\nAs I mentioned in #11017, there is a little issue in the implementation for if branch. This code\r\n```rust\r\nlet y = match 92 {\r\n    x => {\r\n        if x == 0 {$0\r\n            false\r\n        }\r\n    }\r\n    _ => true,\r\n};\r\n```\r\nwill be transformed to\r\n```rust\r\nlet y = match 92 {\r\n    x if x == 0 => false\r\n    _ => true,\r\n};\r\n```\r\na comma is missing after the false. I moved the fix from the code handling else branch to above.\n\nCo-authored-by: Wang Ruochen <wrc@ruo-chen.wang>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f79f3db7b71b192dd2e387d2d7face7e27b3b3bd", "html_url": "https://github.com/rust-lang/rust/commit/f79f3db7b71b192dd2e387d2d7face7e27b3b3bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f79f3db7b71b192dd2e387d2d7face7e27b3b3bd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "098b1f248682f87a69f6f00ff0683ca724521b5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/098b1f248682f87a69f6f00ff0683ca724521b5d", "html_url": "https://github.com/rust-lang/rust/commit/098b1f248682f87a69f6f00ff0683ca724521b5d"}, {"sha": "ee079561b1d65d40f67a9d6c3df3e8022b2e3d0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee079561b1d65d40f67a9d6c3df3e8022b2e3d0a", "html_url": "https://github.com/rust-lang/rust/commit/ee079561b1d65d40f67a9d6c3df3e8022b2e3d0a"}], "stats": {"total": 45, "additions": 37, "deletions": 8}, "files": [{"sha": "8a2c51d33b82fb8830842140e77b38bee01fa740", "filename": "crates/ide_assists/src/handlers/move_guard.rs", "status": "modified", "additions": 37, "deletions": 8, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/f79f3db7b71b192dd2e387d2d7face7e27b3b3bd/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f79f3db7b71b192dd2e387d2d7face7e27b3b3bd/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs?ref=f79f3db7b71b192dd2e387d2d7face7e27b3b3bd", "patch": "@@ -135,7 +135,15 @@ pub(crate) fn move_arm_cond_to_match_guard(acc: &mut Assists, ctx: &AssistContex\n \n             match &then_block.tail_expr() {\n                 Some(then_expr) if then_only_expr => {\n-                    edit.replace(replace_node.text_range(), then_expr.syntax().text())\n+                    edit.replace(replace_node.text_range(), then_expr.syntax().text());\n+                    // Insert comma for expression if there isn't one\n+                    match match_arm.syntax().last_child_or_token() {\n+                        Some(NodeOrToken::Token(t)) if t.kind() == COMMA => {}\n+                        _ => {\n+                            cov_mark::hit!(move_guard_if_add_comma);\n+                            edit.insert(match_arm.syntax().text_range().end(), \",\");\n+                        }\n+                    }\n                 }\n                 _ if replace_node != *if_expr.syntax() => {\n                     // Dedent because if_expr is in a BlockExpr\n@@ -150,13 +158,6 @@ pub(crate) fn move_arm_cond_to_match_guard(acc: &mut Assists, ctx: &AssistContex\n             // If with only an else branch\n             if let Some(ElseBranch::Block(else_block)) = if_expr.else_branch() {\n                 let then_arm_end = match_arm.syntax().text_range().end();\n-                if then_block.tail_expr().is_some() && then_only_expr {\n-                    // Insert comma for expression if there isn't one\n-                    match match_arm.syntax().last_child_or_token() {\n-                        Some(NodeOrToken::Token(t)) if t.kind() == COMMA => {}\n-                        _ => edit.insert(then_arm_end, \",\"),\n-                    }\n-                }\n                 let else_only_expr = else_block.statements().next().is_none();\n                 let indent_level = match_arm.indent_level();\n                 let spaces = \"    \".repeat(indent_level.0 as _);\n@@ -318,6 +319,34 @@ fn main() {\n         );\n     }\n \n+    #[test]\n+    fn move_arm_cond_in_block_to_match_guard_add_comma_works() {\n+        cov_mark::check!(move_guard_if_add_comma);\n+        check_assist(\n+            move_arm_cond_to_match_guard,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x => {\n+            $0if x > 10 {\n+                false\n+            }\n+        }\n+        _ => true\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x if x > 10 => false,\n+        _ => true\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn move_arm_cond_to_match_guard_if_let_not_works() {\n         check_assist_not_applicable("}]}