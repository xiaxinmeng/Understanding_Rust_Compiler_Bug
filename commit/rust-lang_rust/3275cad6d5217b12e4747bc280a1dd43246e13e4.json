{"sha": "3275cad6d5217b12e4747bc280a1dd43246e13e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNzVjYWQ2ZDUyMTdiMTJlNDc0N2JjMjgwYTFkZDQzMjQ2ZTEzZTQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T00:26:34Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T18:35:29Z"}, "message": "stdlib: Implement ivec::unsafe::set_len", "tree": {"sha": "9c15b3e6871f4df579ccc49538d18464cf33e66c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c15b3e6871f4df579ccc49538d18464cf33e66c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3275cad6d5217b12e4747bc280a1dd43246e13e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3275cad6d5217b12e4747bc280a1dd43246e13e4", "html_url": "https://github.com/rust-lang/rust/commit/3275cad6d5217b12e4747bc280a1dd43246e13e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3275cad6d5217b12e4747bc280a1dd43246e13e4/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d21228fce738fd024c45f12fc3cf09801329bcec", "url": "https://api.github.com/repos/rust-lang/rust/commits/d21228fce738fd024c45f12fc3cf09801329bcec", "html_url": "https://github.com/rust-lang/rust/commit/d21228fce738fd024c45f12fc3cf09801329bcec"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "65d0447b8f181fe6aacbff765d5e7ae1c9308977", "filename": "src/lib/ioivec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3275cad6d5217b12e4747bc280a1dd43246e13e4/src%2Flib%2Fioivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3275cad6d5217b12e4747bc280a1dd43246e13e4/src%2Flib%2Fioivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fioivec.rs?ref=3275cad6d5217b12e4747bc280a1dd43246e13e4", "patch": "@@ -63,7 +63,7 @@ obj FILE_buf_reader(os::libc::FILE f, bool must_close) {\n         auto buf = ~[];\n         ivec::reserve[u8](buf, len);\n         auto read = os::libc_ivec::fread(ivec::to_ptr[u8](buf), 1u, len, f);\n-        ivec::len_set[u8](buf, read);\n+        ivec::unsafe::set_len[u8](buf, read);\n         ret buf;\n     }\n     fn read_byte() -> int { ret os::libc::fgetc(f); }"}, {"sha": "6e32901a437f945ce84aadf3aa4b1a4871a26e88", "filename": "src/lib/ivec.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3275cad6d5217b12e4747bc280a1dd43246e13e4/src%2Flib%2Fivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3275cad6d5217b12e4747bc280a1dd43246e13e4/src%2Flib%2Fivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fivec.rs?ref=3275cad6d5217b12e4747bc280a1dd43246e13e4", "patch": "@@ -3,6 +3,7 @@\n import option::none;\n import option::some;\n import uint::next_power_of_two;\n+import ptr::addr_of;\n \n type operator2[T,U,V] = fn(&T, &U) -> V;\n \n@@ -35,10 +36,6 @@ fn len[T](&T[mutable?] v) -> uint {\n     ret rusti::ivec_len(v);\n }\n \n-fn len_set[T](&mutable T[mutable?] v, uint new_len) {\n-    v = slice(v, 0u, new_len);\n-}\n-\n type init_op[T] = fn(uint) -> T;\n \n fn init_fn[T](&init_op[T] op, uint n_elts) -> T[] {\n@@ -217,6 +214,11 @@ fn find[T](fn(&T) -> bool  f, &T[] v) -> option::t[T] {\n }\n \n mod unsafe {\n+    type ivec_repr = rec(mutable uint fill,\n+                         mutable uint alloc,\n+                         *mutable ivec_heap_part heap_part);\n+    type ivec_heap_part = rec(mutable uint fill);\n+\n     fn copy_from_buf[T](&mutable T[] v, *T ptr, uint count) {\n         ret rustrt::ivec_copy_from_buf_shared(v, ptr, count);\n     }\n@@ -226,5 +228,16 @@ mod unsafe {\n         copy_from_buf(v, ptr, bytes);\n         ret v;\n     }\n+\n+    fn set_len[T](&mutable T[] v, uint new_len) {\n+        auto new_fill = new_len * sys::size_of[T]();\n+        let *mutable ivec_repr stack_part =\n+            ::unsafe::reinterpret_cast(addr_of(v));\n+        if ((*stack_part).fill == 0u) {\n+            (*(*stack_part).heap_part).fill = new_fill;     // On heap.\n+        } else {\n+            (*stack_part).fill = new_fill;                  // On stack.\n+        }\n+    }\n }\n "}, {"sha": "f40da7e6b1578edbdb99804608b51f3dae66dd44", "filename": "src/lib/sys.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3275cad6d5217b12e4747bc280a1dd43246e13e4/src%2Flib%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3275cad6d5217b12e4747bc280a1dd43246e13e4/src%2Flib%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fsys.rs?ref=3275cad6d5217b12e4747bc280a1dd43246e13e4", "patch": "@@ -1,5 +1,8 @@\n \n+import rustrt::size_of;\n+\n export rustrt;\n+export size_of;\n \n native \"rust\" mod rustrt {\n \n@@ -13,6 +16,7 @@ native \"rust\" mod rustrt {\n     fn do_gc();\n     fn unsupervise();\n }\n+\n // Local Variables:\n // mode: rust;\n // fill-column: 78;"}]}