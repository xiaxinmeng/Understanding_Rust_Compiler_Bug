{"sha": "1567bbb73e48d897a55ec8281ab6191550fd6684", "node_id": "C_kwDOAAsO6NoAKDE1NjdiYmI3M2U0OGQ4OTdhNTVlYzgyODFhYjYxOTE1NTBmZDY2ODQ", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-25T11:02:33Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-25T11:04:27Z"}, "message": "minor: more focusted tests", "tree": {"sha": "8fe99ab7a117e05e9f41dcecc61abd6996663d51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fe99ab7a117e05e9f41dcecc61abd6996663d51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1567bbb73e48d897a55ec8281ab6191550fd6684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1567bbb73e48d897a55ec8281ab6191550fd6684", "html_url": "https://github.com/rust-lang/rust/commit/1567bbb73e48d897a55ec8281ab6191550fd6684", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1567bbb73e48d897a55ec8281ab6191550fd6684/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6f17f74368ffdf917f47647096f34a815a6337e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6f17f74368ffdf917f47647096f34a815a6337e", "html_url": "https://github.com/rust-lang/rust/commit/a6f17f74368ffdf917f47647096f34a815a6337e"}], "stats": {"total": 263, "additions": 107, "deletions": 156}, "files": [{"sha": "9f3e11819f92734f7f345a32b86be0b1bf8d97de", "filename": "crates/parser/src/grammar/expressions.rs", "status": "modified", "additions": 13, "deletions": 22, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=1567bbb73e48d897a55ec8281ab6191550fd6684", "patch": "@@ -115,55 +115,46 @@ pub(super) fn stmt(p: &mut Parser, with_semi: StmtWithSemi, prefer_expr: bool) {\n         // }\n \n         match with_semi {\n+            StmtWithSemi::No => (),\n+            StmtWithSemi::Optional => {\n+                p.eat(T![;]);\n+            }\n             StmtWithSemi::Yes => {\n                 if blocklike.is_block() {\n                     p.eat(T![;]);\n                 } else {\n                     p.expect(T![;]);\n                 }\n             }\n-            StmtWithSemi::No => {}\n-            StmtWithSemi::Optional => {\n-                if p.at(T![;]) {\n-                    p.eat(T![;]);\n-                }\n-            }\n         }\n \n         m.complete(p, EXPR_STMT);\n     }\n \n     // test let_stmt\n-    // fn foo() {\n-    //     let a;\n-    //     let b: i32;\n-    //     let c = 92;\n-    //     let d: i32 = 92;\n-    //     let e: !;\n-    //     let _: ! = {};\n-    //     let f = #[attr]||{};\n-    // }\n+    // fn f() { let x: i32 = 92; }\n     fn let_stmt(p: &mut Parser, m: Marker, with_semi: StmtWithSemi) {\n-        assert!(p.at(T![let]));\n         p.bump(T![let]);\n         patterns::pattern(p);\n         if p.at(T![:]) {\n+            // test let_stmt_ascription\n+            // fn f() { let x: i32; }\n             types::ascription(p);\n         }\n         if p.eat(T![=]) {\n+            // test let_stmt_init\n+            // fn f() { let x = 92; }\n             expressions::expr_with_attrs(p);\n         }\n \n         match with_semi {\n+            StmtWithSemi::No => (),\n+            StmtWithSemi::Optional => {\n+                p.eat(T![;]);\n+            }\n             StmtWithSemi::Yes => {\n                 p.expect(T![;]);\n             }\n-            StmtWithSemi::No => {}\n-            StmtWithSemi::Optional => {\n-                if p.at(T![;]) {\n-                    p.eat(T![;]);\n-                }\n-            }\n         }\n         m.complete(p, LET_STMT);\n     }"}, {"sha": "af3b11376b339b32782a1ba113f702c690a3481a", "filename": "crates/syntax/test_data/parser/inline/ok/0130_let_stmt.rast", "status": "modified", "additions": 33, "deletions": 125, "changes": 158, "blob_url": "https://github.com/rust-lang/rust/blob/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rast?ref=1567bbb73e48d897a55ec8281ab6191550fd6684", "patch": "@@ -1,127 +1,35 @@\n-SOURCE_FILE@0..135\n-  FN@0..134\n+SOURCE_FILE@0..28\n+  FN@0..27\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n-    NAME@3..6\n-      IDENT@3..6 \"foo\"\n-    PARAM_LIST@6..8\n-      L_PAREN@6..7 \"(\"\n-      R_PAREN@7..8 \")\"\n-    WHITESPACE@8..9 \" \"\n-    BLOCK_EXPR@9..134\n-      L_CURLY@9..10 \"{\"\n-      WHITESPACE@10..15 \"\\n    \"\n-      LET_STMT@15..21\n-        LET_KW@15..18 \"let\"\n-        WHITESPACE@18..19 \" \"\n-        IDENT_PAT@19..20\n-          NAME@19..20\n-            IDENT@19..20 \"a\"\n-        SEMICOLON@20..21 \";\"\n-      WHITESPACE@21..26 \"\\n    \"\n-      LET_STMT@26..37\n-        LET_KW@26..29 \"let\"\n-        WHITESPACE@29..30 \" \"\n-        IDENT_PAT@30..31\n-          NAME@30..31\n-            IDENT@30..31 \"b\"\n-        COLON@31..32 \":\"\n-        WHITESPACE@32..33 \" \"\n-        PATH_TYPE@33..36\n-          PATH@33..36\n-            PATH_SEGMENT@33..36\n-              NAME_REF@33..36\n-                IDENT@33..36 \"i32\"\n-        SEMICOLON@36..37 \";\"\n-      WHITESPACE@37..42 \"\\n    \"\n-      LET_STMT@42..53\n-        LET_KW@42..45 \"let\"\n-        WHITESPACE@45..46 \" \"\n-        IDENT_PAT@46..47\n-          NAME@46..47\n-            IDENT@46..47 \"c\"\n-        WHITESPACE@47..48 \" \"\n-        EQ@48..49 \"=\"\n-        WHITESPACE@49..50 \" \"\n-        LITERAL@50..52\n-          INT_NUMBER@50..52 \"92\"\n-        SEMICOLON@52..53 \";\"\n-      WHITESPACE@53..58 \"\\n    \"\n-      LET_STMT@58..74\n-        LET_KW@58..61 \"let\"\n-        WHITESPACE@61..62 \" \"\n-        IDENT_PAT@62..63\n-          NAME@62..63\n-            IDENT@62..63 \"d\"\n-        COLON@63..64 \":\"\n-        WHITESPACE@64..65 \" \"\n-        PATH_TYPE@65..68\n-          PATH@65..68\n-            PATH_SEGMENT@65..68\n-              NAME_REF@65..68\n-                IDENT@65..68 \"i32\"\n-        WHITESPACE@68..69 \" \"\n-        EQ@69..70 \"=\"\n-        WHITESPACE@70..71 \" \"\n-        LITERAL@71..73\n-          INT_NUMBER@71..73 \"92\"\n-        SEMICOLON@73..74 \";\"\n-      WHITESPACE@74..79 \"\\n    \"\n-      LET_STMT@79..88\n-        LET_KW@79..82 \"let\"\n-        WHITESPACE@82..83 \" \"\n-        IDENT_PAT@83..84\n-          NAME@83..84\n-            IDENT@83..84 \"e\"\n-        COLON@84..85 \":\"\n-        WHITESPACE@85..86 \" \"\n-        NEVER_TYPE@86..87\n-          BANG@86..87 \"!\"\n-        SEMICOLON@87..88 \";\"\n-      WHITESPACE@88..93 \"\\n    \"\n-      LET_STMT@93..107\n-        LET_KW@93..96 \"let\"\n-        WHITESPACE@96..97 \" \"\n-        WILDCARD_PAT@97..98\n-          UNDERSCORE@97..98 \"_\"\n-        COLON@98..99 \":\"\n-        WHITESPACE@99..100 \" \"\n-        NEVER_TYPE@100..101\n-          BANG@100..101 \"!\"\n-        WHITESPACE@101..102 \" \"\n-        EQ@102..103 \"=\"\n-        WHITESPACE@103..104 \" \"\n-        BLOCK_EXPR@104..106\n-          L_CURLY@104..105 \"{\"\n-          R_CURLY@105..106 \"}\"\n-        SEMICOLON@106..107 \";\"\n-      WHITESPACE@107..112 \"\\n    \"\n-      LET_STMT@112..132\n-        LET_KW@112..115 \"let\"\n-        WHITESPACE@115..116 \" \"\n-        IDENT_PAT@116..117\n-          NAME@116..117\n-            IDENT@116..117 \"f\"\n-        WHITESPACE@117..118 \" \"\n-        EQ@118..119 \"=\"\n-        WHITESPACE@119..120 \" \"\n-        CLOSURE_EXPR@120..131\n-          ATTR@120..127\n-            POUND@120..121 \"#\"\n-            L_BRACK@121..122 \"[\"\n-            META@122..126\n-              PATH@122..126\n-                PATH_SEGMENT@122..126\n-                  NAME_REF@122..126\n-                    IDENT@122..126 \"attr\"\n-            R_BRACK@126..127 \"]\"\n-          PARAM_LIST@127..129\n-            PIPE@127..128 \"|\"\n-            PIPE@128..129 \"|\"\n-          BLOCK_EXPR@129..131\n-            L_CURLY@129..130 \"{\"\n-            R_CURLY@130..131 \"}\"\n-        SEMICOLON@131..132 \";\"\n-      WHITESPACE@132..133 \"\\n\"\n-      R_CURLY@133..134 \"}\"\n-  WHITESPACE@134..135 \"\\n\"\n+    NAME@3..4\n+      IDENT@3..4 \"f\"\n+    PARAM_LIST@4..6\n+      L_PAREN@4..5 \"(\"\n+      R_PAREN@5..6 \")\"\n+    WHITESPACE@6..7 \" \"\n+    BLOCK_EXPR@7..27\n+      L_CURLY@7..8 \"{\"\n+      WHITESPACE@8..9 \" \"\n+      LET_STMT@9..25\n+        LET_KW@9..12 \"let\"\n+        WHITESPACE@12..13 \" \"\n+        IDENT_PAT@13..14\n+          NAME@13..14\n+            IDENT@13..14 \"x\"\n+        COLON@14..15 \":\"\n+        WHITESPACE@15..16 \" \"\n+        PATH_TYPE@16..19\n+          PATH@16..19\n+            PATH_SEGMENT@16..19\n+              NAME_REF@16..19\n+                IDENT@16..19 \"i32\"\n+        WHITESPACE@19..20 \" \"\n+        EQ@20..21 \"=\"\n+        WHITESPACE@21..22 \" \"\n+        LITERAL@22..24\n+          INT_NUMBER@22..24 \"92\"\n+        SEMICOLON@24..25 \";\"\n+      WHITESPACE@25..26 \" \"\n+      R_CURLY@26..27 \"}\"\n+  WHITESPACE@27..28 \"\\n\""}, {"sha": "8003999fd08f7e0b13ecd9b27af99d9049f708e9", "filename": "crates/syntax/test_data/parser/inline/ok/0130_let_stmt.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rs?ref=1567bbb73e48d897a55ec8281ab6191550fd6684", "patch": "@@ -1,9 +1 @@\n-fn foo() {\n-    let a;\n-    let b: i32;\n-    let c = 92;\n-    let d: i32 = 92;\n-    let e: !;\n-    let _: ! = {};\n-    let f = #[attr]||{};\n-}\n+fn f() { let x: i32 = 92; }"}, {"sha": "cc5d72ff74c15861c04a04950d45eb5410dba60b", "filename": "crates/syntax/test_data/parser/inline/ok/0193_let_stmt_init.rast", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0193_let_stmt_init.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0193_let_stmt_init.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0193_let_stmt_init.rast?ref=1567bbb73e48d897a55ec8281ab6191550fd6684", "patch": "@@ -0,0 +1,28 @@\n+SOURCE_FILE@0..23\n+  FN@0..22\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..4\n+      IDENT@3..4 \"f\"\n+    PARAM_LIST@4..6\n+      L_PAREN@4..5 \"(\"\n+      R_PAREN@5..6 \")\"\n+    WHITESPACE@6..7 \" \"\n+    BLOCK_EXPR@7..22\n+      L_CURLY@7..8 \"{\"\n+      WHITESPACE@8..9 \" \"\n+      LET_STMT@9..20\n+        LET_KW@9..12 \"let\"\n+        WHITESPACE@12..13 \" \"\n+        IDENT_PAT@13..14\n+          NAME@13..14\n+            IDENT@13..14 \"x\"\n+        WHITESPACE@14..15 \" \"\n+        EQ@15..16 \"=\"\n+        WHITESPACE@16..17 \" \"\n+        LITERAL@17..19\n+          INT_NUMBER@17..19 \"92\"\n+        SEMICOLON@19..20 \";\"\n+      WHITESPACE@20..21 \" \"\n+      R_CURLY@21..22 \"}\"\n+  WHITESPACE@22..23 \"\\n\""}, {"sha": "232c0db411e085e226fb0c077afb60b555b74fd3", "filename": "crates/syntax/test_data/parser/inline/ok/0193_let_stmt_init.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0193_let_stmt_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0193_let_stmt_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0193_let_stmt_init.rs?ref=1567bbb73e48d897a55ec8281ab6191550fd6684", "patch": "@@ -0,0 +1 @@\n+fn f() { let x = 92; }"}, {"sha": "41acb0dd9832bf0a80e86b28fc019c4d20b978c9", "filename": "crates/syntax/test_data/parser/inline/ok/0194_let_stmt_ascription.rast", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_let_stmt_ascription.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_let_stmt_ascription.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_let_stmt_ascription.rast?ref=1567bbb73e48d897a55ec8281ab6191550fd6684", "patch": "@@ -0,0 +1,30 @@\n+SOURCE_FILE@0..23\n+  FN@0..22\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..4\n+      IDENT@3..4 \"f\"\n+    PARAM_LIST@4..6\n+      L_PAREN@4..5 \"(\"\n+      R_PAREN@5..6 \")\"\n+    WHITESPACE@6..7 \" \"\n+    BLOCK_EXPR@7..22\n+      L_CURLY@7..8 \"{\"\n+      WHITESPACE@8..9 \" \"\n+      LET_STMT@9..20\n+        LET_KW@9..12 \"let\"\n+        WHITESPACE@12..13 \" \"\n+        IDENT_PAT@13..14\n+          NAME@13..14\n+            IDENT@13..14 \"x\"\n+        COLON@14..15 \":\"\n+        WHITESPACE@15..16 \" \"\n+        PATH_TYPE@16..19\n+          PATH@16..19\n+            PATH_SEGMENT@16..19\n+              NAME_REF@16..19\n+                IDENT@16..19 \"i32\"\n+        SEMICOLON@19..20 \";\"\n+      WHITESPACE@20..21 \" \"\n+      R_CURLY@21..22 \"}\"\n+  WHITESPACE@22..23 \"\\n\""}, {"sha": "a94161dffa268786dcf547005e3f87cda1f2b21d", "filename": "crates/syntax/test_data/parser/inline/ok/0194_let_stmt_ascription.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_let_stmt_ascription.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1567bbb73e48d897a55ec8281ab6191550fd6684/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_let_stmt_ascription.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_let_stmt_ascription.rs?ref=1567bbb73e48d897a55ec8281ab6191550fd6684", "patch": "@@ -0,0 +1 @@\n+fn f() { let x: i32; }"}]}