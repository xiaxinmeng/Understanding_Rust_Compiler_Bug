{"sha": "ff02953a024399c1b60aefd741356a05b10fcd89", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMDI5NTNhMDI0Mzk5YzFiNjBhZWZkNzQxMzU2YTA1YjEwZmNkODk=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-09-14T23:49:35Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-09-14T23:49:35Z"}, "message": "Merge pull request #318 from nrc/shr_test\n\nSome random tidying up", "tree": {"sha": "1baece5bf284c23500ef29d7bac6b67426283c34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1baece5bf284c23500ef29d7bac6b67426283c34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff02953a024399c1b60aefd741356a05b10fcd89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff02953a024399c1b60aefd741356a05b10fcd89", "html_url": "https://github.com/rust-lang/rust/commit/ff02953a024399c1b60aefd741356a05b10fcd89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff02953a024399c1b60aefd741356a05b10fcd89/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7057f40e5d9b9341a0947efe7e94072250176a56", "url": "https://api.github.com/repos/rust-lang/rust/commits/7057f40e5d9b9341a0947efe7e94072250176a56", "html_url": "https://github.com/rust-lang/rust/commit/7057f40e5d9b9341a0947efe7e94072250176a56"}, {"sha": "a29023a191c4b48234a051e5f93220061e3183dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a29023a191c4b48234a051e5f93220061e3183dc", "html_url": "https://github.com/rust-lang/rust/commit/a29023a191c4b48234a051e5f93220061e3183dc"}], "stats": {"total": 26, "additions": 7, "deletions": 19}, "files": [{"sha": "c61e12fcb8b30b2e8d94400ddf926d8f95c4fa2e", "filename": "src/expr.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ff02953a024399c1b60aefd741356a05b10fcd89/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff02953a024399c1b60aefd741356a05b10fcd89/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=ff02953a024399c1b60aefd741356a05b10fcd89", "patch": "@@ -128,9 +128,6 @@ impl Rewrite for ast::Expr {\n             ast::Expr_::ExprAssignOp(ref op, ref lhs, ref rhs) => {\n                 rewrite_assignment(context, lhs, rhs, Some(op), width, offset)\n             }\n-            // FIXME #184 Note that this formatting is broken due to a bad span\n-            // from the parser.\n-            // `continue`\n             ast::Expr_::ExprAgain(ref opt_ident) => {\n                 let id_str = match *opt_ident {\n                     Some(ident) => format!(\" {}\", ident.node),"}, {"sha": "e5017387a253a7edb1961b3cc4f4a293cc6674c7", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ff02953a024399c1b60aefd741356a05b10fcd89/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff02953a024399c1b60aefd741356a05b10fcd89/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=ff02953a024399c1b60aefd741356a05b10fcd89", "patch": "@@ -237,8 +237,6 @@ fn fmt_ast(krate: &ast::Crate, codemap: &CodeMap, config: &Config) -> FileMap {\n // Formatting done on a char by char or line by line basis.\n // TODO warn on bad license\n // TODO other stuff for parity with make tidy\n-// FIXME skipping due to `continue`, #184.\n-#[rustfmt_skip]\n fn fmt_lines(file_map: &mut FileMap, config: &Config) -> FormatReport {\n     let mut truncate_todo = Vec::new();\n     let mut report = FormatReport { file_error_map: HashMap::new() };\n@@ -260,10 +258,7 @@ fn fmt_lines(file_map: &mut FileMap, config: &Config) -> FormatReport {\n \n             // Add warnings for bad todos/ fixmes\n             if let Some(issue) = issue_seeker.inspect(c) {\n-                errors.push(FormattingError {\n-                    line: cur_line,\n-                    kind: ErrorKind::BadIssue(issue)\n-                });\n+                errors.push(FormattingError { line: cur_line, kind: ErrorKind::BadIssue(issue) });\n             }\n \n             if c == '\\n' {\n@@ -274,10 +269,7 @@ fn fmt_lines(file_map: &mut FileMap, config: &Config) -> FormatReport {\n                 }\n                 // Check for any line width errors we couldn't correct.\n                 if line_len > config.max_width {\n-                    errors.push(FormattingError {\n-                        line: cur_line,\n-                        kind: ErrorKind::LineOverflow\n-                    });\n+                    errors.push(FormattingError { line: cur_line, kind: ErrorKind::LineOverflow });\n                 }\n                 line_len = 0;\n                 cur_line += 1;\n@@ -302,10 +294,7 @@ fn fmt_lines(file_map: &mut FileMap, config: &Config) -> FormatReport {\n         }\n \n         for &(l, _, _) in &trims {\n-            errors.push(FormattingError {\n-                line: l,\n-                kind: ErrorKind::TrailingWhitespace\n-            });\n+            errors.push(FormattingError { line: l, kind: ErrorKind::TrailingWhitespace });\n         }\n \n         report.file_error_map.insert(f.to_owned(), errors);"}, {"sha": "d474eb22b708f15aa9986c009542ad84cdf73c54", "filename": "src/types.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff02953a024399c1b60aefd741356a05b10fcd89/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff02953a024399c1b60aefd741356a05b10fcd89/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=ff02953a024399c1b60aefd741356a05b10fcd89", "patch": "@@ -149,8 +149,6 @@ impl<'a> Rewrite for SegmentParam<'a> {\n // We'd really rather not do this, but there doesn't seem to be an alternative\n // at this point.\n // FIXME: fails with spans containing comments with the characters < or :\n-// FIXME #184 skip due to continue.\n-#[rustfmt_skip]\n fn get_path_separator(codemap: &CodeMap,\n                       path_start: BytePos,\n                       segment_start: BytePos)"}, {"sha": "f48e8eaddc6bb4122adf314891517c2c9bddb0fd", "filename": "tests/target/fn.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff02953a024399c1b60aefd741356a05b10fcd89/tests%2Ftarget%2Ffn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff02953a024399c1b60aefd741356a05b10fcd89/tests%2Ftarget%2Ffn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn.rs?ref=ff02953a024399c1b60aefd741356a05b10fcd89", "patch": "@@ -75,6 +75,10 @@ impl Foo {\n     }\n }\n \n+fn homura<T: Deref<Target = i32>>(_: T) {\n+\n+}\n+\n fn main() {\n     let _ = function(move || 5);\n     let _ = move || 42;"}]}