{"sha": "cc6a279f0586431b5e8bdd0b453a806e022a7d78", "node_id": "C_kwDOAAsO6NoAKGNjNmEyNzlmMDU4NjQzMWI1ZThiZGQwYjQ1M2E4MDZlMDIyYTdkNzg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-03T06:58:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-03T06:58:52Z"}, "message": "Rollup merge of #109642 - lenko-d:rust_codegen-backends_interacts_confusingly_with_paths, r=Mark-Simulacrum\n\ncheck for missing codegen backeng config\n\nFixes [#109610](https://github.com/rust-lang/rust/issues/109610)", "tree": {"sha": "7ddb589b498aff5e9ef523f57a2b171e747b1ae9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ddb589b498aff5e9ef523f57a2b171e747b1ae9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc6a279f0586431b5e8bdd0b453a806e022a7d78", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkKnksCRBK7hj4Ov3rIwAAimsIAJIeWww0B3OQaiAgkmJpAVnY\njKnU8yxT5BCG6elUW27tyHHluUMvSWWCrqHErptrq9FewQe70421nD1e1kcRnFGK\n/RewowITJq5ZFdsgLOAG6q13rJ/k+qbRy7mpIEzyEuv+wmI/H9FyyrdBSha8xSyu\nG2uFkB+xBuYeDntDK4UChAfIb0wk09XWTTj9iavzVI4dLVYJ+xbwEMMnf+79Ybk9\naRrmt9lSMLHLDBrbqgjJlWRKBiGudXfChaqtq/3V3EEJifjCAkctGReCsiVE7IAV\nmds3ryJOo4zbP6dX4U+G85Q1uZf/jqbbWjnzAZjQKv/euRZZeXKwiWbvXH1yVqk=\n=djiz\n-----END PGP SIGNATURE-----\n", "payload": "tree 7ddb589b498aff5e9ef523f57a2b171e747b1ae9\nparent 7192ef3efd7b353f3e7207dbf286362bc637c43e\nparent 88b3ae96904312c7c0fe9b40357613f9fc29dbc8\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1680505132 +0200\ncommitter GitHub <noreply@github.com> 1680505132 +0200\n\nRollup merge of #109642 - lenko-d:rust_codegen-backends_interacts_confusingly_with_paths, r=Mark-Simulacrum\n\ncheck for missing codegen backeng config\n\nFixes [#109610](https://github.com/rust-lang/rust/issues/109610)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc6a279f0586431b5e8bdd0b453a806e022a7d78", "html_url": "https://github.com/rust-lang/rust/commit/cc6a279f0586431b5e8bdd0b453a806e022a7d78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc6a279f0586431b5e8bdd0b453a806e022a7d78/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7192ef3efd7b353f3e7207dbf286362bc637c43e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7192ef3efd7b353f3e7207dbf286362bc637c43e", "html_url": "https://github.com/rust-lang/rust/commit/7192ef3efd7b353f3e7207dbf286362bc637c43e"}, {"sha": "88b3ae96904312c7c0fe9b40357613f9fc29dbc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/88b3ae96904312c7c0fe9b40357613f9fc29dbc8", "html_url": "https://github.com/rust-lang/rust/commit/88b3ae96904312c7c0fe9b40357613f9fc29dbc8"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "9c9760e7d1b5d434fbf1ca67c689f5b4c7037da6", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a279f0586431b5e8bdd0b453a806e022a7d78/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a279f0586431b5e8bdd0b453a806e022a7d78/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=cc6a279f0586431b5e8bdd0b453a806e022a7d78", "patch": "@@ -20,7 +20,7 @@ use serde_derive::Deserialize;\n \n use crate::builder::crate_description;\n use crate::builder::Cargo;\n-use crate::builder::{Builder, Kind, RunConfig, ShouldRun, Step};\n+use crate::builder::{Builder, Kind, PathSet, RunConfig, ShouldRun, Step, TaskPath};\n use crate::cache::{Interned, INTERNER};\n use crate::config::{LlvmLibunwind, RustcLto, TargetSelection};\n use crate::dist;\n@@ -995,6 +995,44 @@ pub struct CodegenBackend {\n     pub backend: Interned<String>,\n }\n \n+fn needs_codegen_config(run: &RunConfig<'_>) -> bool {\n+    let mut needs_codegen_cfg = false;\n+    for path_set in &run.paths {\n+        needs_codegen_cfg = match path_set {\n+            PathSet::Set(set) => set.iter().any(|p| is_codegen_cfg_needed(p, run)),\n+            PathSet::Suite(suite) => is_codegen_cfg_needed(&suite, run),\n+        }\n+    }\n+    needs_codegen_cfg\n+}\n+\n+const CODEGEN_BACKEND_PREFIX: &str = \"rustc_codegen_\";\n+\n+fn is_codegen_cfg_needed(path: &TaskPath, run: &RunConfig<'_>) -> bool {\n+    if path.path.to_str().unwrap().contains(&CODEGEN_BACKEND_PREFIX) {\n+        let mut needs_codegen_backend_config = true;\n+        for &backend in &run.builder.config.rust_codegen_backends {\n+            if path\n+                .path\n+                .to_str()\n+                .unwrap()\n+                .ends_with(&(CODEGEN_BACKEND_PREFIX.to_owned() + &backend))\n+            {\n+                needs_codegen_backend_config = false;\n+            }\n+        }\n+        if needs_codegen_backend_config {\n+            run.builder.info(\n+                \"Warning: no codegen-backends config matched the requested path to build a codegen backend. \\\n+                Help: add backend to codegen-backends in config.toml.\",\n+            );\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n impl Step for CodegenBackend {\n     type Output = ();\n     const ONLY_HOSTS: bool = true;\n@@ -1006,6 +1044,10 @@ impl Step for CodegenBackend {\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n+        if needs_codegen_config(&run) {\n+            return;\n+        }\n+\n         for &backend in &run.builder.config.rust_codegen_backends {\n             if backend == \"llvm\" {\n                 continue; // Already built as part of rustc"}]}