{"sha": "873abf01b5af694b7f0941ae55b94d7b50fe7912", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3M2FiZjAxYjVhZjY5NGI3ZjA5NDFhZTU1Yjk0ZDdiNTBmZTc5MTI=", "commit": {"author": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2018-01-09T16:36:24Z"}, "committer": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2018-01-09T16:36:24Z"}, "message": "Modifying failure messages to be consistent with mismatch message", "tree": {"sha": "ee40d92705e5fb7db65ff896224ada68270b7985", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee40d92705e5fb7db65ff896224ada68270b7985"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/873abf01b5af694b7f0941ae55b94d7b50fe7912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/873abf01b5af694b7f0941ae55b94d7b50fe7912", "html_url": "https://github.com/rust-lang/rust/commit/873abf01b5af694b7f0941ae55b94d7b50fe7912", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/873abf01b5af694b7f0941ae55b94d7b50fe7912/comments", "author": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d60a6958f844b2d22f635c3e9e21698b410100cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d60a6958f844b2d22f635c3e9e21698b410100cd", "html_url": "https://github.com/rust-lang/rust/commit/d60a6958f844b2d22f635c3e9e21698b410100cd"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "d99e1a4a4e2890bc3430acb2a5af92cf43d47977", "filename": "tests/system.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/873abf01b5af694b7f0941ae55b94d7b50fe7912/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/873abf01b5af694b7f0941ae55b94d7b50fe7912/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=873abf01b5af694b7f0941ae55b94d7b50fe7912", "patch": "@@ -651,14 +651,16 @@ impl ConfigCodeBlock {\n \n         if self.config_name.is_none() {\n             write_message(format!(\n-                \"configuration name not found for block beginning at line {}\",\n+                \"No configuration name for {}:{}\",\n+                CONFIGURATIONS_FILE_NAME,\n                 self.code_block_start.unwrap()\n             ));\n             return false;\n         }\n         if self.config_value.is_none() {\n             write_message(format!(\n-                \"configuration value not found for block beginning at line {}\",\n+                \"No configuration value for {}:{}\",\n+                CONFIGURATIONS_FILE_NAME,\n                 self.code_block_start.unwrap()\n             ));\n             return false;\n@@ -669,9 +671,9 @@ impl ConfigCodeBlock {\n     fn has_parsing_errors(&self, error_summary: Summary) -> bool {\n         if error_summary.has_parsing_errors() {\n             write_message(format!(\n-                \"\\u{261d}\\u{1f3fd} Failed to format block starting at Line {} in {}\",\n-                self.code_block_start.unwrap(),\n-                CONFIGURATIONS_FILE_NAME\n+                \"\\u{261d}\\u{1f3fd} Cannot format {}:{}\",\n+                CONFIGURATIONS_FILE_NAME,\n+                self.code_block_start.unwrap()\n             ));\n             return true;\n         }"}]}