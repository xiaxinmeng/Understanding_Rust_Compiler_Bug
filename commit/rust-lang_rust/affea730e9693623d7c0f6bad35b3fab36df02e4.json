{"sha": "affea730e9693623d7c0f6bad35b3fab36df02e4", "node_id": "C_kwDOAAsO6NoAKGFmZmVhNzMwZTk2OTM2MjNkN2MwZjZiYWQzNWIzZmFiMzZkZjAyZTQ", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-09-21T13:18:26Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-09-23T14:08:47Z"}, "message": "Suggest `_` in turbofish if param will be inferred from fn argument", "tree": {"sha": "bad3593ea3fd6c8611eab75ae449fda81f1e0296", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bad3593ea3fd6c8611eab75ae449fda81f1e0296"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/affea730e9693623d7c0f6bad35b3fab36df02e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/affea730e9693623d7c0f6bad35b3fab36df02e4", "html_url": "https://github.com/rust-lang/rust/commit/affea730e9693623d7c0f6bad35b3fab36df02e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/affea730e9693623d7c0f6bad35b3fab36df02e4/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15d9ba0133ce0b35348e1c8367afe00aec841ffa", "url": "https://api.github.com/repos/rust-lang/rust/commits/15d9ba0133ce0b35348e1c8367afe00aec841ffa", "html_url": "https://github.com/rust-lang/rust/commit/15d9ba0133ce0b35348e1c8367afe00aec841ffa"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "2e3db4d6d655f53447438c62ec0c76ad90b7a397", "filename": "compiler/rustc_typeck/src/structured_errors/wrong_number_of_generic_args.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/affea730e9693623d7c0f6bad35b3fab36df02e4/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/affea730e9693623d7c0f6bad35b3fab36df02e4/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs?ref=affea730e9693623d7c0f6bad35b3fab36df02e4", "patch": "@@ -1,6 +1,7 @@\n use crate::structured_errors::StructuredDiagnostic;\n use rustc_errors::{pluralize, Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc_hir as hir;\n+use rustc_middle::hir::map::fn_sig;\n use rustc_middle::middle::resolve_lifetime::LifetimeScopeForPath;\n use rustc_middle::ty::{self as ty, TyCtxt};\n use rustc_session::Session;\n@@ -292,12 +293,30 @@ impl<'a, 'tcx> WrongNumberOfGenericArgs<'a, 'tcx> {\n         &self,\n         num_params_to_take: usize,\n     ) -> String {\n+        let fn_sig = self.tcx.hir().get_if_local(self.def_id).and_then(|node| fn_sig(node));\n+        let is_used_in_input = |def_id| {\n+            fn_sig.map_or(false, |fn_sig| {\n+                fn_sig.decl.inputs.iter().any(|ty| match ty.kind {\n+                    hir::TyKind::Path(hir::QPath::Resolved(\n+                        None,\n+                        hir::Path { res: hir::def::Res::Def(_, id), .. },\n+                    )) if *id == def_id => true,\n+                    _ => false,\n+                })\n+            })\n+        };\n         self.gen_params\n             .params\n             .iter()\n             .skip(self.params_offset + self.num_provided_type_or_const_args())\n             .take(num_params_to_take)\n-            .map(|param| param.name.to_string())\n+            .map(|param| match param.kind {\n+                // This is being infered from the item's inputs, no need to set it.\n+                ty::GenericParamDefKind::Type { .. } if is_used_in_input(param.def_id) => {\n+                    \"_\".to_string()\n+                }\n+                _ => param.name.to_string(),\n+            })\n             .collect::<Vec<_>>()\n             .join(\", \")\n     }"}, {"sha": "cc4120041b9865e7215259af4ec5ef3a50793dc2", "filename": "src/test/ui/suggestions/missing-type-param-used-in-param.fixed", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/affea730e9693623d7c0f6bad35b3fab36df02e4/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/affea730e9693623d7c0f6bad35b3fab36df02e4/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.fixed?ref=affea730e9693623d7c0f6bad35b3fab36df02e4", "patch": "@@ -0,0 +1,8 @@\n+// run-rustfix\n+\n+fn two_type_params<A, B>(_: B) {}\n+\n+fn main() {\n+    two_type_params::<String, _>(100); //~ ERROR this function takes 2 generic arguments\n+    two_type_params::<String, _>(100);\n+}"}, {"sha": "19286331b60232d7c21cdf485310beab74d9eda1", "filename": "src/test/ui/suggestions/missing-type-param-used-in-param.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/affea730e9693623d7c0f6bad35b3fab36df02e4/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/affea730e9693623d7c0f6bad35b3fab36df02e4/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.rs?ref=affea730e9693623d7c0f6bad35b3fab36df02e4", "patch": "@@ -0,0 +1,8 @@\n+// run-rustfix\n+\n+fn two_type_params<A, B>(_: B) {}\n+\n+fn main() {\n+    two_type_params::<String>(100); //~ ERROR this function takes 2 generic arguments\n+    two_type_params::<String, _>(100);\n+}"}, {"sha": "4f7058a6492596ad1382c9050548042c8333661b", "filename": "src/test/ui/suggestions/missing-type-param-used-in-param.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/affea730e9693623d7c0f6bad35b3fab36df02e4/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/affea730e9693623d7c0f6bad35b3fab36df02e4/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.stderr?ref=affea730e9693623d7c0f6bad35b3fab36df02e4", "patch": "@@ -0,0 +1,21 @@\n+error[E0107]: this function takes 2 generic arguments but 1 generic argument was supplied\n+  --> $DIR/missing-type-param-used-in-param.rs:6:5\n+   |\n+LL |     two_type_params::<String>(100);\n+   |     ^^^^^^^^^^^^^^^   ------ supplied 1 generic argument\n+   |     |\n+   |     expected 2 generic arguments\n+   |\n+note: function defined here, with 2 generic parameters: `A`, `B`\n+  --> $DIR/missing-type-param-used-in-param.rs:3:4\n+   |\n+LL | fn two_type_params<A, B>(_: B) {}\n+   |    ^^^^^^^^^^^^^^^ -  -\n+help: add missing generic argument\n+   |\n+LL |     two_type_params::<String, _>(100);\n+   |                             +++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0107`."}]}