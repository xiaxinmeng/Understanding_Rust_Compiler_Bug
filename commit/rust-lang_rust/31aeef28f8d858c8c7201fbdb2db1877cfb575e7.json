{"sha": "31aeef28f8d858c8c7201fbdb2db1877cfb575e7", "node_id": "C_kwDOAAsO6NoAKDMxYWVlZjI4ZjhkODU4YzhjNzIwMWZiZGIyZGIxODc3Y2ZiNTc1ZTc", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2023-05-03T23:42:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-03T23:42:52Z"}, "message": "Rollup merge of #111154 - djkoloski:use_builtin_ffx_isolation, r=tmandry\n\nUse builtin FFX isolation for Fuchsia test runner\n\nFFX has new builtin support for isolating the daemon's environment. This switches the manual isolation originally written to that new builtin feature.\n\nr? ````@tmandry````", "tree": {"sha": "c91dcdbe8418f8a053164ec96775d4d5ad42f543", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c91dcdbe8418f8a053164ec96775d4d5ad42f543"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31aeef28f8d858c8c7201fbdb2db1877cfb575e7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkUvF8CRBK7hj4Ov3rIwAAFy0IAKMgnGYgELgFBWeaAnf1P6UU\n8hwesfqtSAyEKZv8btWgoYPDXsPl0daLsIxOiJkvmwe9/kPrjVg4P1rqh0siTU0l\nEW84/5SSAqo4GUpP2RUC6dLgKhrMFpY9DlChetXJ6lLjS6pHgeaiKFWBvH6kynuT\nfJb1JvMdgHvBeDOPT48FawAj43a0UZOQ0sXo1Y1J8Ej3I5SLoj/vu7P4LrtVIVMS\nWmh61OvzTbrFgjqe9iaq1NiVoZWRz+QcBHl2CqQac68ouQElK/gaPxZrKdGc0WZb\nuOglRzI9OexISgXrh01ATwpnxuwMSabjdETKuxYjI5jbdpds/TCnbzp7Ae7IkGc=\n=+TLp\n-----END PGP SIGNATURE-----\n", "payload": "tree c91dcdbe8418f8a053164ec96775d4d5ad42f543\nparent 48c78248a35385f474b7b27a1da3da1d146b04dc\nparent e97383657e5dfaf7fdbc5bf331bd3caf574ba307\nauthor Manish Goregaokar <manishsmail@gmail.com> 1683157372 -0700\ncommitter GitHub <noreply@github.com> 1683157372 -0700\n\nRollup merge of #111154 - djkoloski:use_builtin_ffx_isolation, r=tmandry\n\nUse builtin FFX isolation for Fuchsia test runner\n\nFFX has new builtin support for isolating the daemon's environment. This switches the manual isolation originally written to that new builtin feature.\n\nr? ````@tmandry````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31aeef28f8d858c8c7201fbdb2db1877cfb575e7", "html_url": "https://github.com/rust-lang/rust/commit/31aeef28f8d858c8c7201fbdb2db1877cfb575e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31aeef28f8d858c8c7201fbdb2db1877cfb575e7/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48c78248a35385f474b7b27a1da3da1d146b04dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/48c78248a35385f474b7b27a1da3da1d146b04dc", "html_url": "https://github.com/rust-lang/rust/commit/48c78248a35385f474b7b27a1da3da1d146b04dc"}, {"sha": "e97383657e5dfaf7fdbc5bf331bd3caf574ba307", "url": "https://api.github.com/repos/rust-lang/rust/commits/e97383657e5dfaf7fdbc5bf331bd3caf574ba307", "html_url": "https://github.com/rust-lang/rust/commit/e97383657e5dfaf7fdbc5bf331bd3caf574ba307"}], "stats": {"total": 137, "additions": 45, "deletions": 92}, "files": [{"sha": "ecef56f56f1d5feb95f731c5c2d9da25f1867fb9", "filename": "src/ci/docker/scripts/fuchsia-test-runner.py", "status": "modified", "additions": 45, "deletions": 92, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/31aeef28f8d858c8c7201fbdb2db1877cfb575e7/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py", "raw_url": "https://github.com/rust-lang/rust/raw/31aeef28f8d858c8c7201fbdb2db1877cfb575e7/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py?ref=31aeef28f8d858c8c7201fbdb2db1877cfb575e7", "patch": "@@ -168,85 +168,17 @@ def ffx_daemon_log_path(self):\n     def ffx_isolate_dir(self):\n         return os.path.join(self.tmp_dir(), \"ffx_isolate\")\n \n-    def ffx_home_dir(self):\n-        return os.path.join(self.ffx_isolate_dir(), \"user-home\")\n+    def home_dir(self):\n+        return os.path.join(self.tmp_dir(), \"user-home\")\n \n-    def ffx_tmp_dir(self):\n-        return os.path.join(self.ffx_isolate_dir(), \"tmp\")\n-\n-    def ffx_log_dir(self):\n-        return os.path.join(self.ffx_isolate_dir(), \"log\")\n-\n-    def ffx_user_config_dir(self):\n-        return os.path.join(self.ffx_xdg_config_home(), \"Fuchsia\", \"ffx\", \"config\")\n-\n-    def ffx_user_config_path(self):\n-        return os.path.join(self.ffx_user_config_dir(), \"config.json\")\n-\n-    def ffx_xdg_config_home(self):\n-        if platform.system() == \"Darwin\":\n-            return os.path.join(self.ffx_home_dir(), \"Library\", \"Preferences\")\n-        return os.path.join(self.ffx_home_dir(), \".local\", \"share\")\n-\n-    def ffx_ascendd_path(self):\n-        return os.path.join(self.ffx_tmp_dir(), \"ascendd\")\n \n     def start_ffx_isolation(self):\n         # Most of this is translated directly from ffx's isolate library\n         os.mkdir(self.ffx_isolate_dir())\n-        os.mkdir(self.ffx_home_dir())\n-        os.mkdir(self.ffx_tmp_dir())\n-        os.mkdir(self.ffx_log_dir())\n-\n-        fuchsia_dir = os.path.join(self.ffx_home_dir(), \".fuchsia\")\n-        os.mkdir(fuchsia_dir)\n-\n-        fuchsia_debug_dir = os.path.join(fuchsia_dir, \"debug\")\n-        os.mkdir(fuchsia_debug_dir)\n-\n-        metrics_dir = os.path.join(fuchsia_dir, \"metrics\")\n-        os.mkdir(metrics_dir)\n+        os.mkdir(self.home_dir())\n \n-        analytics_path = os.path.join(metrics_dir, \"analytics-status\")\n-        with open(analytics_path, \"w\", encoding=\"utf-8\") as analytics_file:\n-            print(\"0\", file=analytics_file)\n-\n-        ffx_path = os.path.join(metrics_dir, \"ffx\")\n-        with open(ffx_path, \"w\", encoding=\"utf-8\") as ffx_file:\n-            print(\"1\", file=ffx_file)\n-\n-        os.makedirs(self.ffx_user_config_dir())\n-\n-        with open(\n-            self.ffx_user_config_path(), \"w\", encoding=\"utf-8\"\n-        ) as config_json_file:\n-            user_config_for_test = {\n-                \"log\": {\n-                    \"enabled\": True,\n-                    \"dir\": self.ffx_log_dir(),\n-                },\n-                \"overnet\": {\n-                    \"socket\": self.ffx_ascendd_path(),\n-                },\n-                \"ssh\": {\n-                    \"pub\": self.ssh_authfile_path(),\n-                    \"priv\": self.ssh_keyfile_path(),\n-                },\n-                \"test\": {\n-                    \"is_isolated\": True,\n-                    \"experimental_structured_output\": True,\n-                },\n-            }\n-            print(json.dumps(user_config_for_test), file=config_json_file)\n-\n-        ffx_env_path = os.path.join(self.ffx_user_config_dir(), \".ffx_env\")\n-        with open(ffx_env_path, \"w\", encoding=\"utf-8\") as ffx_env_file:\n-            ffx_env_config_for_test = {\n-                \"user\": self.ffx_user_config_path(),\n-                \"build\": None,\n-                \"global\": None,\n-            }\n-            print(json.dumps(ffx_env_config_for_test), file=ffx_env_file)\n+        ffx_path = self.tool_path(\"ffx\")\n+        ffx_env = self.ffx_cmd_env()\n \n         # Start ffx daemon\n         # We want this to be a long-running process that persists after the script finishes\n@@ -256,38 +188,65 @@ def start_ffx_isolation(self):\n         ) as ffx_daemon_log_file:\n             subprocess.Popen(\n                 [\n-                    self.tool_path(\"ffx\"),\n-                    \"--config\",\n-                    self.ffx_user_config_path(),\n+                    ffx_path,\n                     \"daemon\",\n                     \"start\",\n                 ],\n-                env=self.ffx_cmd_env(),\n+                env=ffx_env,\n                 stdout=ffx_daemon_log_file,\n                 stderr=ffx_daemon_log_file,\n             )\n \n+        # Disable analytics\n+        subprocess.check_call(\n+            [\n+                ffx_path,\n+                \"config\",\n+                \"analytics\",\n+                \"disable\",\n+            ],\n+            env=ffx_env,\n+            stdout=self.subprocess_output(),\n+            stderr=self.subprocess_output(),\n+        )\n+\n+        # Set configs\n+        configs = {\n+            \"log.enabled\": \"true\",\n+            \"ssh.pub\": self.ssh_authfile_path(),\n+            \"ssh.priv\": self.ssh_keyfile_path(),\n+            \"test.is_isolated\": \"true\",\n+            \"test.experimental_structured_output\": \"true\",\n+        }\n+        for key, value in configs.items():\n+            subprocess.check_call(\n+                [\n+                    self.tool_path(\"ffx\"),\n+                    \"config\",\n+                    \"set\",\n+                    key,\n+                    value,\n+                ],\n+                env=self.ffx_cmd_env(),\n+                stdout=self.subprocess_output(),\n+                stderr=self.subprocess_output(),\n+            )\n+\n     def ffx_cmd_env(self):\n-        result = {\n-            \"HOME\": self.ffx_home_dir(),\n-            \"XDG_CONFIG_HOME\": self.ffx_xdg_config_home(),\n-            \"ASCENDD\": self.ffx_ascendd_path(),\n-            \"FUCHSIA_SSH_KEY\": self.ssh_keyfile_path(),\n+        return {\n+            \"HOME\": self.home_dir(),\n+            \"FFX_ISOLATE_DIR\": self.ffx_isolate_dir(),\n             # We want to use our own specified temp directory\n             \"TMP\": self.tmp_dir(),\n             \"TEMP\": self.tmp_dir(),\n             \"TMPDIR\": self.tmp_dir(),\n             \"TEMPDIR\": self.tmp_dir(),\n         }\n \n-        return result\n-\n     def stop_ffx_isolation(self):\n         subprocess.check_call(\n             [\n                 self.tool_path(\"ffx\"),\n-                \"--config\",\n-                self.ffx_user_config_path(),\n                 \"daemon\",\n                 \"stop\",\n             ],\n@@ -709,8 +668,6 @@ def log(msg):\n             subprocess.run(\n                 [\n                     self.tool_path(\"ffx\"),\n-                    \"--config\",\n-                    self.ffx_user_config_path(),\n                     \"test\",\n                     \"run\",\n                     f\"fuchsia-pkg://{self.TEST_REPO_NAME}/{package_name}#meta/{package_name}.cm\",\n@@ -849,8 +806,6 @@ def delete_tmp(self):\n     def debug(self, args):\n         command = [\n             self.tool_path(\"ffx\"),\n-            \"--config\",\n-            self.ffx_user_config_path(),\n             \"debug\",\n             \"connect\",\n             \"--\",\n@@ -948,8 +903,6 @@ def syslog(self, args):\n         subprocess.run(\n             [\n                 self.tool_path(\"ffx\"),\n-                \"--config\",\n-                self.ffx_user_config_path(),\n                 \"log\",\n                 \"--since\",\n                 \"now\","}]}