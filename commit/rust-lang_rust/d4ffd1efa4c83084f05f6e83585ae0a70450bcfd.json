{"sha": "d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0ZmZkMWVmYTRjODMwODRmMDVmNmU4MzU4NWFlMGE3MDQ1MGJjZmQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2020-07-10T02:23:12Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-09-15T02:22:26Z"}, "message": "Support @generated marker to skip code formatting\n\nThis is a copy of #4296 with these changes:\n* file is not reopened again to find if the file is generated\n* first five lines are scanned for `@generated` marker instead of one\n* no attempt is made to only search for marker in comments\n\n`@generated` marker is used by certain tools to understand that the\nfile is generated, so it should be treated differently than a file\nwritten by a human:\n* linters should not be invoked on these files,\n* diffs in these files are less important,\n* and these files should not be reformatted.\n\nThis PR proposes builtin support for `@generated` marker.\n\nI have not found a standard for a generated file marker, but:\n* Facebook [uses `@generated` marker](https://tinyurl.com/fb-generated)\n* Phabricator tool which was spawned from Facebook internal tool\n  [also understands `@generated` marker](https://git.io/JnVHa)\n* Cargo inserts `@generated` marker into [generated Cargo.lock files](https://git.io/JnVHP)\n\nMy personal story is that rust-protobuf project which I maintain\nwas broken twice because of incompatibilities/bugs in rustfmt marker\nhandling: [one](https://github.com/stepancheg/rust-protobuf/issues/493),\n[two](https://github.com/stepancheg/rust-protobuf/issues/551).\n(Also, rust-protobuf started generating `@generated` marker\n[6 years ago](https://git.io/JnV5h)).\n\nWhile rustfmt AST markers are useful to apply to a certain AST\nelements, disable whole-file-at-once all-tools-at-once text level\nmarker might be easier to use and more reliable for generated code.", "tree": {"sha": "d44f5cb3e989ba0a9eb6c1fef730ec807fac96f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d44f5cb3e989ba0a9eb6c1fef730ec807fac96f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "html_url": "https://github.com/rust-lang/rust/commit/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67a59f6ee35c3cfd75e2aab5a8475608e167840b", "url": "https://api.github.com/repos/rust-lang/rust/commits/67a59f6ee35c3cfd75e2aab5a8475608e167840b", "html_url": "https://github.com/rust-lang/rust/commit/67a59f6ee35c3cfd75e2aab5a8475608e167840b"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "84e8c3f7db61463ea0a8ebeff4bd849ada083e40", "filename": "Configurations.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "patch": "@@ -924,6 +924,15 @@ fn add_one(x: i32) -> i32 {\n }\n ```\n \n+## `format_generated_files`\n+\n+Format generated files. A file is considered generated\n+if any of the first five lines contains `@generated` marker.\n+\n+- **Default value**: `false`\n+- **Possible values**: `true`, `false`\n+- **Stable**: No\n+\n ## `format_macro_matchers`\n \n Format the metavariable matching patterns in macros."}, {"sha": "3d6e32fdb60f1a4fae6d32a053bb8d2b613e178b", "filename": "src/config/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "patch": "@@ -136,6 +136,7 @@ create_config! {\n     inline_attribute_width: usize, 0, false,\n         \"Write an item and its attribute on the same line \\\n         if their combined width is below a threshold\";\n+    format_generated_files: bool, false, false, \"Format generated files\";\n \n     // Options that can change the source code beyond whitespace/blocks (somewhat linty things)\n     merge_derives: bool, true, true, \"Merge multiple `#[derive(...)]` into a single one\";\n@@ -604,6 +605,7 @@ blank_lines_lower_bound = 0\n edition = \"2015\"\n version = \"One\"\n inline_attribute_width = 0\n+format_generated_files = false\n merge_derives = true\n use_try_shorthand = false\n use_field_init_shorthand = false"}, {"sha": "9ef47b887cadb8809345b1dc196017bbbad92c59", "filename": "src/formatting.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/src%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/src%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting.rs?ref=d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "patch": "@@ -10,6 +10,7 @@ use rustc_span::Span;\n use self::newline_style::apply_newline_style;\n use crate::comment::{CharClasses, FullCodeCharKind};\n use crate::config::{Config, FileName, Verbosity};\n+use crate::formatting::generated::is_generated_file;\n use crate::issues::BadIssueSeeker;\n use crate::modules::Module;\n use crate::syntux::parser::{DirectoryOwnership, Parser, ParserError};\n@@ -18,6 +19,7 @@ use crate::utils::count_newlines;\n use crate::visitor::FmtVisitor;\n use crate::{modules, source_file, ErrorKind, FormatReport, Input, Session};\n \n+mod generated;\n mod newline_style;\n \n // A map of the files of a crate, with their new content\n@@ -103,7 +105,12 @@ fn format_project<T: FormatHandler>(\n     context.parse_session.set_silent_emitter();\n \n     for (path, module) in files {\n-        let should_ignore = !input_is_stdin && context.ignore_file(&path);\n+        let source_file = context.parse_session.span_to_file_contents(module.span);\n+        let src = source_file.src.as_ref().expect(\"SourceFile without src\");\n+\n+        let should_ignore = (!input_is_stdin && context.ignore_file(&path))\n+            || (!config.format_generated_files() && is_generated_file(src));\n+\n         if (config.skip_children() && path != main_file) || should_ignore {\n             continue;\n         }"}, {"sha": "58f43f17ee15f5c4b12af2dda56ae182efbc542a", "filename": "src/formatting/generated.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/src%2Fformatting%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/src%2Fformatting%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting%2Fgenerated.rs?ref=d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "patch": "@@ -0,0 +1,7 @@\n+/// Returns `true` if the given span is a part of generated files.\n+pub(super) fn is_generated_file(original_snippet: &str) -> bool {\n+    original_snippet\n+        .lines()\n+        .take(5) // looking for marker only in the beginning of the file\n+        .any(|line| line.contains(\"@generated\"))\n+}"}, {"sha": "94257e1ce7f1545f3e77d93c93e5c1e8a842b0d5", "filename": "src/syntux/session.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/src%2Fsyntux%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/src%2Fsyntux%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntux%2Fsession.rs?ref=d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "patch": "@@ -175,6 +175,12 @@ impl ParseSess {\n         self.parse_sess.source_map().span_to_filename(span).into()\n     }\n \n+    pub(crate) fn span_to_file_contents(&self, span: Span) -> Lrc<rustc_span::SourceFile> {\n+        self.parse_sess\n+            .source_map()\n+            .lookup_source_file(span.data().lo)\n+    }\n+\n     pub(crate) fn span_to_first_line_string(&self, span: Span) -> String {\n         let file_lines = self.parse_sess.source_map().span_to_lines(span).ok();\n "}, {"sha": "ece1b91bfd7c581ee705b92b1ab2ef3ba801f333", "filename": "src/test/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "patch": "@@ -694,7 +694,7 @@ fn read_significant_comments(file_name: &Path) -> HashMap<String, String> {\n     reader\n         .lines()\n         .map(|line| line.expect(\"failed getting line\"))\n-        .take_while(|line| line_regex.is_match(line))\n+        .filter(|line| line_regex.is_match(line))\n         .filter_map(|line| {\n             regex.captures_iter(&line).next().map(|capture| {\n                 ("}, {"sha": "dec1e00d117b46d8fa8def4719557d6d113256d2", "filename": "tests/source/configs/format_generated_files/false.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/tests%2Fsource%2Fconfigs%2Fformat_generated_files%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/tests%2Fsource%2Fconfigs%2Fformat_generated_files%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fformat_generated_files%2Ffalse.rs?ref=d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "patch": "@@ -0,0 +1,8 @@\n+// @generated\n+// rustfmt-format_generated_files: false\n+\n+fn main()\n+{\n+    println!(\"hello, world\")\n+    ;\n+}"}, {"sha": "a25ddc25a6a447856da69f9691cbc16fc6c92987", "filename": "tests/source/configs/format_generated_files/true.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/tests%2Fsource%2Fconfigs%2Fformat_generated_files%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/tests%2Fsource%2Fconfigs%2Fformat_generated_files%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fformat_generated_files%2Ftrue.rs?ref=d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "patch": "@@ -0,0 +1,8 @@\n+// @generated\n+// rustfmt-format_generated_files: true\n+\n+fn main()\n+{\n+    println!(\"hello, world\")\n+    ;\n+}"}, {"sha": "dec1e00d117b46d8fa8def4719557d6d113256d2", "filename": "tests/target/configs/format_generated_files/false.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/tests%2Ftarget%2Fconfigs%2Fformat_generated_files%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/tests%2Ftarget%2Fconfigs%2Fformat_generated_files%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fformat_generated_files%2Ffalse.rs?ref=d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "patch": "@@ -0,0 +1,8 @@\n+// @generated\n+// rustfmt-format_generated_files: false\n+\n+fn main()\n+{\n+    println!(\"hello, world\")\n+    ;\n+}"}, {"sha": "5fea7e8b34139a8445add0912b0e4f99f246ba1c", "filename": "tests/target/configs/format_generated_files/true.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/tests%2Ftarget%2Fconfigs%2Fformat_generated_files%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd/tests%2Ftarget%2Fconfigs%2Fformat_generated_files%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fformat_generated_files%2Ftrue.rs?ref=d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "patch": "@@ -0,0 +1,6 @@\n+// @generated\n+// rustfmt-format_generated_files: true\n+\n+fn main() {\n+    println!(\"hello, world\");\n+}"}]}