{"sha": "253dbcb8c0a8eac06e2877fd9c60025a70a8eb73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1M2RiY2I4YzBhOGVhYzA2ZTI4NzdmZDljNjAwMjVhNzBhOGViNzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-06T06:11:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-06T06:11:42Z"}, "message": "auto merge of #12703 : jld/rust/issue-8506, r=alexcrichton\n\nCloses #8506.", "tree": {"sha": "f0f73df2afb666306e3c90913db65fc2071334f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0f73df2afb666306e3c90913db65fc2071334f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/253dbcb8c0a8eac06e2877fd9c60025a70a8eb73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/253dbcb8c0a8eac06e2877fd9c60025a70a8eb73", "html_url": "https://github.com/rust-lang/rust/commit/253dbcb8c0a8eac06e2877fd9c60025a70a8eb73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/253dbcb8c0a8eac06e2877fd9c60025a70a8eb73/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67c5d793add67878e6e472258748ac13e0f90366", "url": "https://api.github.com/repos/rust-lang/rust/commits/67c5d793add67878e6e472258748ac13e0f90366", "html_url": "https://github.com/rust-lang/rust/commit/67c5d793add67878e6e472258748ac13e0f90366"}, {"sha": "d90830221e76ca41ac336a32f308f58e45ca4ae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d90830221e76ca41ac336a32f308f58e45ca4ae8", "html_url": "https://github.com/rust-lang/rust/commit/d90830221e76ca41ac336a32f308f58e45ca4ae8"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "ae0025ffa30841a66e477be380e19667cf6c6a57", "filename": "src/librustc/middle/trans/adt.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/253dbcb8c0a8eac06e2877fd9c60025a70a8eb73/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/253dbcb8c0a8eac06e2877fd9c60025a70a8eb73/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs?ref=253dbcb8c0a8eac06e2877fd9c60025a70a8eb73", "patch": "@@ -749,14 +749,15 @@ pub fn trans_const(ccx: &CrateContext, r: &Repr, discr: Disr,\n             let contents = build_const_struct(ccx, st, vals);\n             C_struct(contents, st.packed)\n         }\n-        NullablePointer{ nonnull: ref nonnull, nndiscr, ptrfield, .. } => {\n+        NullablePointer{ nonnull: ref nonnull, nndiscr, .. } => {\n             if discr == nndiscr {\n                 C_struct(build_const_struct(ccx, nonnull, vals), false)\n             } else {\n-                let vals = nonnull.fields.iter().enumerate().map(|(i, &ty)| {\n-                    let llty = type_of::sizing_type_of(ccx, ty);\n-                    if i == ptrfield { C_null(llty) } else { C_undef(llty) }\n-                }).collect::<~[ValueRef]>();\n+                let vals = nonnull.fields.map(|&ty| {\n+                    // Always use null even if it's not the `ptrfield`th\n+                    // field; see #8506.\n+                    C_null(type_of::sizing_type_of(ccx, ty))\n+                });\n                 C_struct(build_const_struct(ccx, nonnull, vals), false)\n             }\n         }\n@@ -791,14 +792,8 @@ fn build_const_struct(ccx: &CrateContext, st: &Struct, vals: &[ValueRef])\n             cfields.push(padding(target_offset - offset));\n             offset = target_offset;\n         }\n-        let val = if is_undef(vals[i]) {\n-            let wrapped = C_struct([vals[i]], false);\n-            assert!(!is_undef(wrapped));\n-            wrapped\n-        } else {\n-            vals[i]\n-        };\n-        cfields.push(val);\n+        assert!(!is_undef(vals[i]));\n+        cfields.push(vals[i]);\n         offset += machine::llsize_of_alloc(ccx, llty) as u64\n     }\n "}, {"sha": "b5e9141deeff7dddc40667fe0e978584ef95510a", "filename": "src/test/run-pass/issue-8506.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/253dbcb8c0a8eac06e2877fd9c60025a70a8eb73/src%2Ftest%2Frun-pass%2Fissue-8506.rs", "raw_url": "https://github.com/rust-lang/rust/raw/253dbcb8c0a8eac06e2877fd9c60025a70a8eb73/src%2Ftest%2Frun-pass%2Fissue-8506.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8506.rs?ref=253dbcb8c0a8eac06e2877fd9c60025a70a8eb73", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[allow(dead_code)];\n+\n+enum Either {\n+    One,\n+    Other(~str,~str)\n+}\n+\n+static one : Either = One;\n+\n+pub fn main () { }"}]}