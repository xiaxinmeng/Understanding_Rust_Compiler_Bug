{"sha": "538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzOGFjNTk5ZDJlYzBjYjk0NGY4NjQ1ZmY1ZWZhZTVjYjJkMzA5Y2U=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-09-14T01:00:53Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-09-14T01:57:29Z"}, "message": "Add some more attribute ide tests", "tree": {"sha": "608dd7ba63860f0a04a1564091fb6a6909d51c69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/608dd7ba63860f0a04a1564091fb6a6909d51c69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "html_url": "https://github.com/rust-lang/rust/commit/538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f9de71402f6faa5598cf587f76f22be7c6e1635", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f9de71402f6faa5598cf587f76f22be7c6e1635", "html_url": "https://github.com/rust-lang/rust/commit/6f9de71402f6faa5598cf587f76f22be7c6e1635"}], "stats": {"total": 165, "additions": 156, "deletions": 9}, "files": [{"sha": "e53d12692872cb416c59b9c9123fe11eb642c6aa", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "patch": "@@ -16,7 +16,6 @@ use itertools::Itertools;\n use rustc_hash::{FxHashMap, FxHashSet};\n use smallvec::{smallvec, SmallVec};\n use syntax::{\n-    algo::find_node_at_offset,\n     ast::{self, GenericParamsOwner, LoopBodyOwner},\n     match_ast, AstNode, SyntaxNode, SyntaxNodePtr, SyntaxToken, TextRange, TextSize,\n };\n@@ -241,10 +240,6 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         node: &SyntaxNode,\n         offset: TextSize,\n     ) -> Option<N> {\n-        if let Some(it) = find_node_at_offset(node, offset) {\n-            return Some(it);\n-        }\n-\n         self.imp.descend_node_at_offset(node, offset).flatten().find_map(N::cast)\n     }\n "}, {"sha": "079f847030f54e6395e6ebb0caf0d802cf23dc32", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "patch": "@@ -31,6 +31,7 @@ pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<\n         SyntaxKind::IDENT => 1,\n         _ => 0,\n     })?;\n+\n     let descended = sema.descend_into_macros(tok.clone());\n     if let Some(attr) = descended.ancestors().find_map(ast::Attr::cast) {\n         if let Some((path, tt)) = attr.as_simple_call() {\n@@ -45,6 +46,9 @@ pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<\n             }\n         }\n     }\n+\n+    // FIXME: Intermix attribute and bang! expansions\n+    // currently we only recursively expand one of the two types\n     let mut expanded = None;\n     let mut name = None;\n     for node in tok.ancestors() {"}, {"sha": "f8ddcdd9a4ebeb1ad66e4537077cf6d8336ed594", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "patch": "@@ -1661,6 +1661,28 @@ id! {\n         );\n     }\n \n+    #[test]\n+    fn test_hover_through_attr() {\n+        check(\n+            r#\"\n+//- proc_macros: identity\n+#[proc_macros::identity]\n+fn foo$0() {}\n+\"#,\n+            expect![[r#\"\n+                *foo*\n+\n+                ```rust\n+                test\n+                ```\n+\n+                ```rust\n+                fn foo()\n+                ```\n+            \"#]],\n+        );\n+    }\n+\n     #[test]\n     fn test_hover_through_expr_in_macro() {\n         check("}, {"sha": "c39d00b6e7da342713ca1906183e09995f253df4", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "patch": "@@ -1507,4 +1507,23 @@ fn f() {\n             \"#]],\n         )\n     }\n+\n+    #[test]\n+    fn attr_expanded() {\n+        check(\n+            r#\"\n+//- proc_macros: identity\n+\n+#[proc_macros::identity]\n+fn func$0() {\n+    func();\n+}\n+\"#,\n+            expect![[r#\"\n+                func Function FileId(0) 26..51 29..33\n+\n+                FileId(0) 42..46\n+            \"#]],\n+        )\n+    }\n }"}, {"sha": "a495e6c5432d93842ed2e6c0a0ed14d223422d2e", "filename": "crates/ide/src/rename.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frename.rs?ref=538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "patch": "@@ -1880,4 +1880,26 @@ fn main() { f$0()  }\n             \"error: No identifier available to rename\",\n         )\n     }\n+\n+    #[test]\n+    fn attributed_item() {\n+        check(\n+            \"function\",\n+            r#\"\n+//- proc_macros: identity\n+\n+#[proc_macros::identity]\n+fn func$0() {\n+    func();\n+}\n+\"#,\n+            r#\"\n+\n+#[proc_macros::identity]\n+fn function() {\n+    function();\n+}\n+\"#,\n+        )\n+    }\n }"}, {"sha": "376384670a299534e3e7bcd51824d6959579fa24", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "patch": "@@ -1737,6 +1737,88 @@ fn t1() {}\n         );\n     }\n \n+    #[test]\n+    fn attributed_module() {\n+        check(\n+            r#\"\n+//- proc_macros: identity\n+//- /lib.rs\n+$0\n+#[proc_macros::identity]\n+mod module {\n+    #[test]\n+    fn t0() {}\n+    #[test]\n+    fn t1() {}\n+}\n+\"#,\n+            &[TestMod, Test, Test],\n+            expect![[r#\"\n+                [\n+                    Runnable {\n+                        use_name_in_title: true,\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            full_range: 26..94,\n+                            focus_range: 30..36,\n+                            name: \"module\",\n+                            kind: Module,\n+                            description: \"mod module\",\n+                        },\n+                        kind: TestMod {\n+                            path: \"module\",\n+                        },\n+                        cfg: None,\n+                    },\n+                    Runnable {\n+                        use_name_in_title: true,\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            full_range: 43..65,\n+                            focus_range: 58..60,\n+                            name: \"t0\",\n+                            kind: Function,\n+                        },\n+                        kind: Test {\n+                            test_id: Path(\n+                                \"module::t0\",\n+                            ),\n+                            attr: TestAttr {\n+                                ignore: false,\n+                            },\n+                        },\n+                        cfg: None,\n+                    },\n+                    Runnable {\n+                        use_name_in_title: true,\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            full_range: 70..92,\n+                            focus_range: 85..87,\n+                            name: \"t1\",\n+                            kind: Function,\n+                        },\n+                        kind: Test {\n+                            test_id: Path(\n+                                \"module::t1\",\n+                            ),\n+                            attr: TestAttr {\n+                                ignore: false,\n+                            },\n+                        },\n+                        cfg: None,\n+                    },\n+                ]\n+            \"#]],\n+        );\n+    }\n+\n     #[test]\n     fn find_no_tests() {\n         check_tests("}, {"sha": "80533d1faaa54a45762c0d6b720c17c9b34d339e", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "patch": "@@ -51,14 +51,15 @@\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">Copy</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> <span class=\"module declaration public\">ops</span> <span class=\"brace\">{</span>\n-    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">lang</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"fn_once\"</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"module attribute\">proc_macros</span><span class=\"operator attribute\">::</span><span class=\"builtin_attr attribute\">identity</span><span class=\"attribute attribute\">]</span>\n+<span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> <span class=\"module declaration\">ops</span> <span class=\"brace\">{</span>\n+    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn_once\"</span><span class=\"attribute attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">FnOnce</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n-    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">lang</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"fn_mut\"</span><span class=\"attribute attribute\">]</span>\n+    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn_mut\"</span><span class=\"attribute attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">FnMut</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"angle\">&gt;</span><span class=\"colon\">:</span> <span class=\"trait public\">FnOnce</span><span class=\"angle\">&lt;</span><span class=\"type_param\">Args</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n-    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">lang</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"fn\"</span><span class=\"attribute attribute\">]</span>\n+    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn\"</span><span class=\"attribute attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">Fn</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"angle\">&gt;</span><span class=\"colon\">:</span> <span class=\"trait public\">FnMut</span><span class=\"angle\">&lt;</span><span class=\"type_param\">Args</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n "}, {"sha": "6b08e916a95fa7d86e44d8fb89b99a88fbe93d7d", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538ac599d2ec0cb944f8645ff5efae5cb2d309ce/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=538ac599d2ec0cb944f8645ff5efae5cb2d309ce", "patch": "@@ -10,6 +10,7 @@ use crate::{fixture, FileRange, HlTag, TextRange};\n fn test_highlighting() {\n     check_highlighting(\n         r#\"\n+//- proc_macros: identity\n //- /main.rs crate:main deps:foo\n use inner::{self as inner_mod};\n mod inner {}\n@@ -23,6 +24,7 @@ pub mod marker {\n     pub trait Copy {}\n }\n \n+#[proc_macros::identity]\n pub mod ops {\n     #[lang = \"fn_once\"]\n     pub trait FnOnce<Args> {}"}]}