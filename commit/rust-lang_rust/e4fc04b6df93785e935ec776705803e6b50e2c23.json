{"sha": "e4fc04b6df93785e935ec776705803e6b50e2c23", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZmMwNGI2ZGY5Mzc4NWU5MzVlYzc3NjcwNTgwM2U2YjUwZTJjMjM=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-04-06T21:07:38Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-04-06T21:07:38Z"}, "message": "Use usize::MAX as assoc const in liballoc", "tree": {"sha": "39736d450dcf4ea17d0a9a14f7d4417fc39e5ece", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39736d450dcf4ea17d0a9a14f7d4417fc39e5ece"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4fc04b6df93785e935ec776705803e6b50e2c23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4fc04b6df93785e935ec776705803e6b50e2c23", "html_url": "https://github.com/rust-lang/rust/commit/e4fc04b6df93785e935ec776705803e6b50e2c23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4fc04b6df93785e935ec776705803e6b50e2c23/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09b5d666a075e381a2d8f99e5b7a6695ab9b6259", "url": "https://api.github.com/repos/rust-lang/rust/commits/09b5d666a075e381a2d8f99e5b7a6695ab9b6259", "html_url": "https://github.com/rust-lang/rust/commit/09b5d666a075e381a2d8f99e5b7a6695ab9b6259"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0780b33e53ae6f207a7aed3156efad46582dbf95", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4fc04b6df93785e935ec776705803e6b50e2c23/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4fc04b6df93785e935ec776705803e6b50e2c23/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=e4fc04b6df93785e935ec776705803e6b50e2c23", "patch": "@@ -608,7 +608,7 @@ unsafe impl<#[may_dangle] T, A: AllocRef> Drop for RawVec<T, A> {\n \n #[inline]\n fn alloc_guard(alloc_size: usize) -> Result<(), TryReserveError> {\n-    if mem::size_of::<usize>() < 8 && alloc_size > core::isize::MAX as usize {\n+    if mem::size_of::<usize>() < 8 && alloc_size > isize::MAX as usize {\n         Err(CapacityOverflow)\n     } else {\n         Ok(())"}, {"sha": "96b6c32a1fa8ec4c3a6ae68e55758e2dd9ff1cb1", "filename": "src/liballoc/tests/btree/map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4fc04b6df93785e935ec776705803e6b50e2c23/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4fc04b6df93785e935ec776705803e6b50e2c23/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs?ref=e4fc04b6df93785e935ec776705803e6b50e2c23", "patch": "@@ -475,7 +475,7 @@ fn test_range_large() {\n \n #[test]\n fn test_range_inclusive_max_value() {\n-    let max = std::usize::MAX;\n+    let max = usize::MAX;\n     let map: BTreeMap<_, _> = vec![(max, 0)].into_iter().collect();\n \n     assert_eq!(map.range(max..=max).collect::<Vec<_>>(), &[(&max, &0)]);"}]}