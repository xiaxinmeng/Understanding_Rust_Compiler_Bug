{"sha": "b5f19795adda1bb2daca891e97bca8c7638916e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ZjE5Nzk1YWRkYTFiYjJkYWNhODkxZTk3YmNhOGM3NjM4OTE2ZTI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-16T00:54:11Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-03T20:04:30Z"}, "message": "Enable the +v7 feature on Android by default\n\nWith the recently added double word CAS functionality on 32-bit ARM (enabled via\na 64-bit atomic instruction in LLVM IR), without some extra features enabled\nLLVM lowers code to function calls which emulate atomic instructions. With the\nv7 feature enabled, proper 64-bit CAS instructions are used on 32-bit arm.\n\nI've been told that v7 for arm is what we should have been doing anyway. This is\noverridable by providing some other non-empty feature string.", "tree": {"sha": "5cb21f40148dd0b69ed4831fca41e7fdc2007a10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cb21f40148dd0b69ed4831fca41e7fdc2007a10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5f19795adda1bb2daca891e97bca8c7638916e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5f19795adda1bb2daca891e97bca8c7638916e2", "html_url": "https://github.com/rust-lang/rust/commit/b5f19795adda1bb2daca891e97bca8c7638916e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5f19795adda1bb2daca891e97bca8c7638916e2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b00147a99b289b11a210d9fc841b8aca3e59ce0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b00147a99b289b11a210d9fc841b8aca3e59ce0e", "html_url": "https://github.com/rust-lang/rust/commit/b00147a99b289b11a210d9fc841b8aca3e59ce0e"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "64dfdfe0eb68f8760bb8483955a95c51e4815d4e", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b5f19795adda1bb2daca891e97bca8c7638916e2/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5f19795adda1bb2daca891e97bca8c7638916e2/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=b5f19795adda1bb2daca891e97bca8c7638916e2", "patch": "@@ -98,13 +98,32 @@ pub mod write {\n     use lib;\n     use syntax::abi;\n     use util::common::time;\n+    use syntax::abi;\n \n     use std::c_str::ToCStr;\n     use std::libc::{c_uint, c_int};\n     use std::path::Path;\n     use std::run;\n     use std::str;\n \n+    // On android, we by default compile for armv7 processors. This enables\n+    // things like double word CAS instructions (rather than emulating them)\n+    // which are *far* more efficient. This is obviously undesirable in some\n+    // cases, so if any sort of target feature is specified we don't append v7\n+    // to the feature list.\n+    fn target_feature<'a>(sess: &'a Session) -> &'a str {\n+        match sess.targ_cfg.os {\n+            abi::OsAndroid => {\n+                if \"\" == sess.opts.target_feature {\n+                    \"+v7\"\n+                } else {\n+                    sess.opts.target_feature.as_slice()\n+                }\n+            }\n+            _ => sess.opts.target_feature.as_slice()\n+        }\n+    }\n+\n     pub fn run_passes(sess: Session,\n                       trans: &CrateTranslation,\n                       output_type: OutputType,\n@@ -136,7 +155,7 @@ pub mod write {\n \n             let tm = sess.targ_cfg.target_strs.target_triple.with_c_str(|T| {\n                 sess.opts.target_cpu.with_c_str(|CPU| {\n-                    sess.opts.target_feature.with_c_str(|Features| {\n+                    target_feature(&sess).with_c_str(|Features| {\n                         llvm::LLVMRustCreateTargetMachine(\n                             T, CPU, Features,\n                             lib::llvm::CodeModelDefault,"}]}