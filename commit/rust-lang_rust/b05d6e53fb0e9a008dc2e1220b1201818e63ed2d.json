{"sha": "b05d6e53fb0e9a008dc2e1220b1201818e63ed2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNWQ2ZTUzZmIwZTlhMDA4ZGMyZTEyMjBiMTIwMTgxOGU2M2VkMmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-30T15:50:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-30T15:50:10Z"}, "message": "push either to hir_expand", "tree": {"sha": "b3207114d918b50b17adc1db589454fed266eed7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3207114d918b50b17adc1db589454fed266eed7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d", "html_url": "https://github.com/rust-lang/rust/commit/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bc7d285189caaffc13e4d6856baf895f72ed80c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bc7d285189caaffc13e4d6856baf895f72ed80c", "html_url": "https://github.com/rust-lang/rust/commit/0bc7d285189caaffc13e4d6856baf895f72ed80c"}], "stats": {"total": 38, "additions": 16, "deletions": 22}, "files": [{"sha": "989818c0e9840bfa6b268ebad88e24fda4ac7f1e", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=b05d6e53fb0e9a008dc2e1220b1201818e63ed2d", "patch": "@@ -60,6 +60,13 @@ use crate::{ids::MacroFileKind, resolve::Resolver};\n \n pub use crate::{\n     adt::VariantDef,\n+    code_model::{\n+        docs::{DocDef, Docs, Documentation},\n+        src::{HasBodySource, HasSource, Source},\n+        Adt, AssocItem, BuiltinType, Const, ConstData, Container, Crate, CrateDependency,\n+        DefWithBody, Enum, EnumVariant, FieldSource, FnData, Function, HasBody, MacroDef, Module,\n+        ModuleDef, ModuleSource, Static, Struct, StructField, Trait, TypeAlias, Union,\n+    },\n     expr::ExprScopes,\n     from_source::FromSource,\n     generics::{GenericDef, GenericParam, GenericParams, HasGenericParams},\n@@ -73,17 +80,9 @@ pub use crate::{\n     },\n };\n \n-pub use self::code_model::{\n-    docs::{DocDef, Docs, Documentation},\n-    src::{HasBodySource, HasSource, Source},\n-    Adt, AssocItem, BuiltinType, Const, ConstData, Container, Crate, CrateDependency, DefWithBody,\n-    Enum, EnumVariant, FieldSource, FnData, Function, HasBody, MacroDef, Module, ModuleDef,\n-    ModuleSource, Static, Struct, StructField, Trait, TypeAlias, Union,\n-};\n-\n pub use hir_def::{\n-    either::Either,\n     name::Name,\n     path::{Path, PathKind},\n     type_ref::Mutability,\n };\n+pub use hir_expand::either::Either;"}, {"sha": "f51c46fcb86be125a8f4e13e621f1d71c805a8b0", "filename": "crates/ra_hir_def/src/hygiene.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_def%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_def%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fhygiene.rs?ref=b05d6e53fb0e9a008dc2e1220b1201818e63ed2d", "patch": "@@ -4,14 +4,12 @@\n //! this moment, this is horribly incomplete and handles only `$crate`.\n // Should this be moved to `hir_expand`? Seems like it.\n \n+use hir_expand::either::Either;\n use hir_expand::{db::AstDatabase, HirFileId};\n use ra_db::CrateId;\n use ra_syntax::ast;\n \n-use crate::{\n-    either::Either,\n-    name::{AsName, Name},\n-};\n+use crate::name::{AsName, Name};\n \n #[derive(Debug)]\n pub struct Hygiene {"}, {"sha": "0de728dc1a1781f78a59f4f1b9ff40660e129811", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=b05d6e53fb0e9a008dc2e1220b1201818e63ed2d", "patch": "@@ -8,7 +8,6 @@\n //! actually true.\n \n pub mod db;\n-pub mod either;\n pub mod attr;\n pub mod name;\n pub mod path;"}, {"sha": "f1896c0cc087994037fb7f0b3682dd41b0bba4ac", "filename": "crates/ra_hir_def/src/nameres/raw.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs?ref=b05d6e53fb0e9a008dc2e1220b1201818e63ed2d", "patch": "@@ -2,7 +2,7 @@\n \n use std::{ops::Index, sync::Arc};\n \n-use hir_expand::{ast_id_map::AstIdMap, db::AstDatabase};\n+use hir_expand::{ast_id_map::AstIdMap, db::AstDatabase, either::Either};\n use ra_arena::{impl_arena_id, map::ArenaMap, Arena, RawId};\n use ra_syntax::{\n     ast::{self, AttrsOwner, NameOwner},\n@@ -12,7 +12,6 @@ use ra_syntax::{\n use crate::{\n     attr::Attr,\n     db::DefDatabase2,\n-    either::Either,\n     hygiene::Hygiene,\n     name::{AsName, Name},\n     path::Path,\n@@ -41,10 +40,8 @@ pub struct ImportSourceMap {\n type ImportSourcePtr = Either<AstPtr<ast::UseTree>, AstPtr<ast::ExternCrateItem>>;\n type ImportSource = Either<ast::UseTree, ast::ExternCrateItem>;\n \n-impl ImportSourcePtr {\n-    fn to_node(self, file: &SourceFile) -> ImportSource {\n-        self.map(|ptr| ptr.to_node(file.syntax()), |ptr| ptr.to_node(file.syntax()))\n-    }\n+fn to_node(ptr: ImportSourcePtr, file: &SourceFile) -> ImportSource {\n+    ptr.map(|ptr| ptr.to_node(file.syntax()), |ptr| ptr.to_node(file.syntax()))\n }\n \n impl ImportSourceMap {\n@@ -58,7 +55,7 @@ impl ImportSourceMap {\n             ModuleSource::Module(m) => m.syntax().ancestors().find_map(SourceFile::cast).unwrap(),\n         };\n \n-        self.map[import].to_node(&file)\n+        to_node(self.map[import], &file)\n     }\n }\n "}, {"sha": "8d57e7761623c355dc7b8645f8f3696a7de3eb61", "filename": "crates/ra_hir_def/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath.rs?ref=b05d6e53fb0e9a008dc2e1220b1201818e63ed2d", "patch": "@@ -2,14 +2,14 @@\n \n use std::{iter, sync::Arc};\n \n+use hir_expand::either::Either;\n use ra_db::CrateId;\n use ra_syntax::{\n     ast::{self, NameOwner, TypeAscriptionOwner},\n     AstNode,\n };\n \n use crate::{\n-    either::Either,\n     hygiene::Hygiene,\n     name::{self, AsName, Name},\n     type_ref::TypeRef,"}, {"sha": "83583ef8bd3ca81e587a106e6bb60053f1deb3e9", "filename": "crates/ra_hir_expand/src/either.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_expand%2Fsrc%2Feither.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_expand%2Fsrc%2Feither.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Feither.rs?ref=b05d6e53fb0e9a008dc2e1220b1201818e63ed2d", "previous_filename": "crates/ra_hir_def/src/either.rs"}, {"sha": "6359b2b4d93bc266675c9ea8bc70ac7ae133a04c", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b05d6e53fb0e9a008dc2e1220b1201818e63ed2d/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=b05d6e53fb0e9a008dc2e1220b1201818e63ed2d", "patch": "@@ -6,6 +6,7 @@\n \n pub mod db;\n pub mod ast_id_map;\n+pub mod either;\n \n use std::hash::{Hash, Hasher};\n "}]}