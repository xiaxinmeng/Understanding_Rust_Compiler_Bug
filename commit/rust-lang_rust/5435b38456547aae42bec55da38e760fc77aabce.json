{"sha": "5435b38456547aae42bec55da38e760fc77aabce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MzViMzg0NTY1NDdhYWU0MmJlYzU1ZGEzOGU3NjBmYzc3YWFiY2U=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-08T23:59:22Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-09T14:44:23Z"}, "message": "check_match: extract joined_uncovered_patterns.", "tree": {"sha": "b243002c863691247d75c51707a80f7f15792798", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b243002c863691247d75c51707a80f7f15792798"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5435b38456547aae42bec55da38e760fc77aabce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5435b38456547aae42bec55da38e760fc77aabce", "html_url": "https://github.com/rust-lang/rust/commit/5435b38456547aae42bec55da38e760fc77aabce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5435b38456547aae42bec55da38e760fc77aabce/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2640a51eee383dcc337e78c233597d18dc78fa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2640a51eee383dcc337e78c233597d18dc78fa2", "html_url": "https://github.com/rust-lang/rust/commit/e2640a51eee383dcc337e78c233597d18dc78fa2"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "245e7534add50c467a79c81d9a54f3c78c5e19b3", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/5435b38456547aae42bec55da38e760fc77aabce/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5435b38456547aae42bec55da38e760fc77aabce/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=5435b38456547aae42bec55da38e760fc77aabce", "patch": "@@ -463,21 +463,7 @@ fn check_exhaustive<'tcx>(\n         pats.iter().map(|w| w.single_pattern()).collect()\n     };\n \n-    const LIMIT: usize = 3;\n-    let joined_patterns = match witnesses.len() {\n-        0 => bug!(),\n-        1 => format!(\"`{}`\", witnesses[0]),\n-        2..=LIMIT => {\n-            let (tail, head) = witnesses.split_last().unwrap();\n-            let head: Vec<_> = head.iter().map(|w| w.to_string()).collect();\n-            format!(\"`{}` and `{}`\", head.join(\"`, `\"), tail)\n-        }\n-        _ => {\n-            let (head, tail) = witnesses.split_at(LIMIT);\n-            let head: Vec<_> = head.iter().map(|w| w.to_string()).collect();\n-            format!(\"`{}` and {} more\", head.join(\"`, `\"), tail.len())\n-        }\n-    };\n+    let joined_patterns = joined_uncovered_patterns(&witnesses);\n \n     let mut err = create_e0004(cx.tcx.sess, sp, format!(\n         \"non-exhaustive patterns: {} not covered\",\n@@ -501,6 +487,24 @@ fn check_exhaustive<'tcx>(\n     err.emit();\n }\n \n+fn joined_uncovered_patterns(witnesses: &[&Pattern<'_>]) -> String {\n+    const LIMIT: usize = 3;\n+    match witnesses.len() {\n+        0 => bug!(),\n+        1 => format!(\"`{}`\", witnesses[0]),\n+        2..=LIMIT => {\n+            let (tail, head) = witnesses.split_last().unwrap();\n+            let head: Vec<_> = head.iter().map(|w| w.to_string()).collect();\n+            format!(\"`{}` and `{}`\", head.join(\"`, `\"), tail)\n+        }\n+        _ => {\n+            let (head, tail) = witnesses.split_at(LIMIT);\n+            let head: Vec<_> = head.iter().map(|w| w.to_string()).collect();\n+            format!(\"`{}` and {} more\", head.join(\"`, `\"), tail.len())\n+        }\n+    }\n+}\n+\n fn adt_defined_here(cx: &mut MatchCheckCtxt<'_, '_>, ty: Ty<'_>, err: &mut DiagnosticBuilder<'_>) {\n     if let ty::Adt(def, _) = ty.sty {\n         if let Some(sp) = cx.tcx.hir().span_if_local(def.did) {"}]}