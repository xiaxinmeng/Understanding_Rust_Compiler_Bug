{"sha": "1c86e475ca4ea7b2ed134d5d0bce66fde597d528", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjODZlNDc1Y2E0ZWE3YjJlZDEzNGQ1ZDBiY2U2NmZkZTU5N2Q1Mjg=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-10T16:03:05Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-10T16:03:05Z"}, "message": "Drop expanded AST later if in save_analysis mode", "tree": {"sha": "a044090fe24b33a2b485565d8584fe5cbe46f182", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a044090fe24b33a2b485565d8584fe5cbe46f182"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c86e475ca4ea7b2ed134d5d0bce66fde597d528", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c86e475ca4ea7b2ed134d5d0bce66fde597d528", "html_url": "https://github.com/rust-lang/rust/commit/1c86e475ca4ea7b2ed134d5d0bce66fde597d528", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c86e475ca4ea7b2ed134d5d0bce66fde597d528/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "913ad6d1f092c70049934ba538d342d295d35997", "url": "https://api.github.com/repos/rust-lang/rust/commits/913ad6d1f092c70049934ba538d342d295d35997", "html_url": "https://github.com/rust-lang/rust/commit/913ad6d1f092c70049934ba538d342d295d35997"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "c7b6f37fe29db8ddf1126995298dcb6b3bf38027", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1c86e475ca4ea7b2ed134d5d0bce66fde597d528/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c86e475ca4ea7b2ed134d5d0bce66fde597d528/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=1c86e475ca4ea7b2ed134d5d0bce66fde597d528", "patch": "@@ -342,14 +342,12 @@ pub fn run_compiler(\n         }\n \n         if sess.opts.debugging_opts.save_analysis {\n-            let expanded_crate = compiler.expansion()?.take().0;\n-\n+            let expanded_crate = &compiler.expansion()?.peek().0;\n             let crate_name = compiler.crate_name()?.peek().clone();\n             compiler.global_ctxt()?.peek_mut().enter(|tcx| {\n                 let result = tcx.analysis(LOCAL_CRATE);\n \n                 time(sess, \"save analysis\", || {\n-                    // FIXME: Should this run even with analysis errors?\n                     save::process_crate(\n                         tcx,\n                         &expanded_crate,\n@@ -361,17 +359,24 @@ pub fn run_compiler(\n                 });\n \n                 result\n+                // AST will be dropped *after* the `after_analysis` callback\n+                // (needed by the RLS)\n             })?;\n         } else {\n             // Drop AST after creating GlobalCtxt to free memory\n             mem::drop(compiler.expansion()?.take());\n         }\n+\n         compiler.global_ctxt()?.peek_mut().enter(|tcx| tcx.analysis(LOCAL_CRATE))?;\n \n         if !callbacks.after_analysis(compiler) {\n             return sess.compile_status();\n         }\n \n+        if sess.opts.debugging_opts.save_analysis {\n+            mem::drop(compiler.expansion()?.take());\n+        }\n+\n         compiler.ongoing_codegen()?;\n \n         // Drop GlobalCtxt after starting codegen to free memory"}]}