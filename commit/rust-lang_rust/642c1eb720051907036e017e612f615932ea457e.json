{"sha": "642c1eb720051907036e017e612f615932ea457e", "node_id": "C_kwDOAAsO6NoAKDY0MmMxZWI3MjAwNTE5MDcwMzZlMDE3ZTYxMmY2MTU5MzJlYTQ1N2U", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-04T17:01:22Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-04T17:01:22Z"}, "message": "Introduce SymbolKind::Attribute", "tree": {"sha": "6a4c70d2bd4f69226545600601fcb105bd772cb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a4c70d2bd4f69226545600601fcb105bd772cb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/642c1eb720051907036e017e612f615932ea457e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/642c1eb720051907036e017e612f615932ea457e", "html_url": "https://github.com/rust-lang/rust/commit/642c1eb720051907036e017e612f615932ea457e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/642c1eb720051907036e017e612f615932ea457e/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c00c3e8d4149842b088b3e922bfc0dcc2676290", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c00c3e8d4149842b088b3e922bfc0dcc2676290", "html_url": "https://github.com/rust-lang/rust/commit/5c00c3e8d4149842b088b3e922bfc0dcc2676290"}], "stats": {"total": 143, "additions": 66, "deletions": 77}, "files": [{"sha": "8481f41437268b388bd2fd89fa1dcb0b7f36434e", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -133,7 +133,7 @@ fn token(\n                 _ if parent_matches::<ast::RangeExpr>(&token) => HlOperator::Other.into(),\n                 _ if parent_matches::<ast::RangePat>(&token) => HlOperator::Other.into(),\n                 _ if parent_matches::<ast::RestPat>(&token) => HlOperator::Other.into(),\n-                _ if parent_matches::<ast::Attr>(&token) => HlTag::Attribute.into(),\n+                _ if parent_matches::<ast::Attr>(&token) => HlTag::AttributeBracket.into(),\n                 kind => match kind {\n                     T!['['] | T![']'] => HlPunct::Bracket,\n                     T!['{'] | T!['}'] => HlPunct::Brace,\n@@ -200,7 +200,7 @@ fn node(\n                 return None;\n             },\n             ast::Attr(__) => {\n-                HlTag::Attribute.into()\n+                HlTag::AttributeBracket.into()\n             },\n             // Highlight definitions depending on the \"type\" of the definition.\n             ast::Name(name) => {"}, {"sha": "8c796a3bfb88221a139a4b82f6550ff1853e59a4", "filename": "crates/ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -18,7 +18,7 @@ pub struct HlMods(u32);\n pub enum HlTag {\n     Symbol(SymbolKind),\n \n-    Attribute,\n+    AttributeBracket,\n     BoolLiteral,\n     BuiltinType,\n     ByteLiteral,\n@@ -124,6 +124,7 @@ impl HlTag {\n     fn as_str(self) -> &'static str {\n         match self {\n             HlTag::Symbol(symbol) => match symbol {\n+                SymbolKind::Attribute => \"attribute\",\n                 SymbolKind::BuiltinAttr => \"builtin_attr\",\n                 SymbolKind::Const => \"constant\",\n                 SymbolKind::ConstParam => \"const_param\",\n@@ -147,7 +148,7 @@ impl HlTag {\n                 SymbolKind::ValueParam => \"value_param\",\n                 SymbolKind::Variant => \"enum_variant\",\n             },\n-            HlTag::Attribute => \"attribute\",\n+            HlTag::AttributeBracket => \"attribute_bracket\",\n             HlTag::BoolLiteral => \"bool_literal\",\n             HlTag::BuiltinType => \"builtin_type\",\n             HlTag::ByteLiteral => \"byte_literal\","}, {"sha": "0b1c5470ee9407b10cb9cee33193b473662cb9d5", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -72,7 +72,7 @@\n     <span class=\"comment documentation\">/// # Examples</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"comment documentation\">/// #</span><span class=\"none injected\"> </span><span class=\"attribute attribute injected\">#</span><span class=\"attribute attribute injected\">!</span><span class=\"attribute attribute injected\">[</span><span class=\"builtin_attr attribute injected library\">allow</span><span class=\"parenthesis attribute injected\">(</span><span class=\"none attribute injected\">unused_mut</span><span class=\"parenthesis attribute injected\">)</span><span class=\"attribute attribute injected\">]</span>\n+    <span class=\"comment documentation\">/// #</span><span class=\"none injected\"> </span><span class=\"attribute_bracket attribute injected\">#</span><span class=\"attribute_bracket attribute injected\">!</span><span class=\"attribute_bracket attribute injected\">[</span><span class=\"builtin_attr attribute injected library\">allow</span><span class=\"parenthesis attribute injected\">(</span><span class=\"none attribute injected\">unused_mut</span><span class=\"parenthesis attribute injected\">)</span><span class=\"attribute_bracket attribute injected\">]</span>\n     <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"keyword injected\">mut</span><span class=\"none injected\"> </span><span class=\"variable declaration injected mutable\">foo</span><span class=\"colon injected\">:</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"parenthesis injected\">(</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">/// ```</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public static\">new</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span>\n@@ -143,12 +143,12 @@\n <span class=\"comment documentation\">///</span>\n <span class=\"comment documentation\">/// ```</span>\n <span class=\"comment documentation\">/// </span><span class=\"keyword control injected\">loop</span><span class=\"none injected\"> </span><span class=\"brace injected\">{</span><span class=\"brace injected\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">not</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"false\"</span><span class=\"parenthesis attribute\">)</span><span class=\"comma attribute\">,</span><span class=\"attribute attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"</span><span class=\"keyword control injected\">loop</span><span class=\"none injected\"> </span><span class=\"brace injected\">{</span><span class=\"brace injected\">}</span><span class=\"string_literal attribute\">\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"</span><span class=\"keyword control injected\">loop</span><span class=\"none injected\"> </span><span class=\"brace injected\">{</span><span class=\"brace injected\">}</span><span class=\"string_literal attribute\">\"</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">not</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute_bracket attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute_bracket attribute\"> </span><span class=\"string_literal attribute\">\"false\"</span><span class=\"parenthesis attribute\">)</span><span class=\"comma attribute\">,</span><span class=\"attribute_bracket attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute_bracket attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute_bracket attribute\"> </span><span class=\"string_literal attribute\">\"</span><span class=\"keyword control injected\">loop</span><span class=\"none injected\"> </span><span class=\"brace injected\">{</span><span class=\"brace injected\">}</span><span class=\"string_literal attribute\">\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">doc</span><span class=\"attribute_bracket attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute_bracket attribute\"> </span><span class=\"string_literal attribute\">\"</span><span class=\"keyword control injected\">loop</span><span class=\"none injected\"> </span><span class=\"brace injected\">{</span><span class=\"brace injected\">}</span><span class=\"string_literal attribute\">\"</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"comment documentation\">/// ```</span>\n <span class=\"comment documentation\">///</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"alloc\"</span><span class=\"comma attribute\">,</span><span class=\"attribute attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"```rust\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">not</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"alloc\"</span><span class=\"parenthesis attribute\">)</span><span class=\"comma attribute\">,</span><span class=\"attribute attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"```ignore\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute_bracket attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute_bracket attribute\"> </span><span class=\"string_literal attribute\">\"alloc\"</span><span class=\"comma attribute\">,</span><span class=\"attribute_bracket attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute_bracket attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute_bracket attribute\"> </span><span class=\"string_literal attribute\">\"```rust\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">not</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute_bracket attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute_bracket attribute\"> </span><span class=\"string_literal attribute\">\"alloc\"</span><span class=\"parenthesis attribute\">)</span><span class=\"comma attribute\">,</span><span class=\"attribute_bracket attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute_bracket attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute_bracket attribute\"> </span><span class=\"string_literal attribute\">\"```ignore\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"punctuation injected\">_</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"function injected\">example</span><span class=\"parenthesis injected\">(</span><span class=\"operator injected\">&</span><span class=\"none injected\">alloc::</span><span class=\"macro injected\">vec!</span><span class=\"bracket injected\">[</span><span class=\"numeric_literal injected\">1</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">2</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">3</span><span class=\"bracket injected\">]</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n <span class=\"comment documentation\">/// ```</span>\n <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration public\">mix_and_match</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>"}, {"sha": "e457069e1f6379f9941925fd6764382279118213", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -45,14 +45,14 @@\n         <span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>io<span class=\"colon\">:</span><span class=\"colon\">:</span>_print<span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>format_args_nl<span class=\"punctuation\">!</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>arg<span class=\"parenthesis\">)</span><span class=\"punctuation\">*</span><span class=\"parenthesis\">)</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span><span class=\"parenthesis\">)</span>\n <span class=\"brace\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">format_args</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">const_format_args</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">format_args_nl</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">mod</span> <span class=\"module declaration\">panic</span> <span class=\"brace\">{</span>\n@@ -77,12 +77,12 @@\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">std_panic</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">std_panic</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">panic</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">assert</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">asm</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">toho</span> <span class=\"brace\">{</span>"}, {"sha": "04494283d5da4d12b3a00e474ee2d862544c9687", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_unsafe.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -54,7 +54,7 @@\n     <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference unsafe\">unsafe_method</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">repr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">packed</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">repr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">packed</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">Packed</span> <span class=\"brace\">{</span>\n     <span class=\"field declaration\">a</span><span class=\"colon\">:</span> <span class=\"builtin_type\">u16</span><span class=\"comma\">,</span>\n <span class=\"brace\">}</span>"}, {"sha": "8c9deac005edbda9c055350e2ab781da7e96ecff", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -43,16 +43,16 @@\n <pre><code><span class=\"keyword\">use</span> <span class=\"module\">inner</span><span class=\"operator\">::</span><span class=\"brace\">{</span><span class=\"self_keyword\">self</span> <span class=\"keyword\">as</span> <span class=\"module declaration\">inner_mod</span><span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n <span class=\"keyword\">mod</span> <span class=\"module declaration\">inner</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">allow</span><span class=\"parenthesis attribute\">(</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"module attribute crate_root library\">proc_macros</span><span class=\"operator attribute\">::</span><span class=\"macro attribute library\">identity</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">allow</span><span class=\"parenthesis attribute\">(</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"module attribute crate_root library\">proc_macros</span><span class=\"operator attribute\">::</span><span class=\"macro attribute library\">identity</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> <span class=\"module declaration public\">ops</span> <span class=\"brace\">{</span>\n-    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn_once\"</span><span class=\"attribute attribute\">]</span>\n+    <span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn_once\"</span><span class=\"attribute_bracket attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">FnOnce</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n-    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn_mut\"</span><span class=\"attribute attribute\">]</span>\n+    <span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn_mut\"</span><span class=\"attribute_bracket attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">FnMut</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"angle\">&gt;</span><span class=\"colon\">:</span> <span class=\"trait public\">FnOnce</span><span class=\"angle\">&lt;</span><span class=\"type_param\">Args</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n-    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn\"</span><span class=\"attribute attribute\">]</span>\n+    <span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn\"</span><span class=\"attribute_bracket attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">Fn</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"angle\">&gt;</span><span class=\"colon\">:</span> <span class=\"trait public\">FnMut</span><span class=\"angle\">&lt;</span><span class=\"type_param\">Args</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n@@ -87,7 +87,7 @@\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"macro attribute default_library library\">derive</span><span class=\"parenthesis attribute\">(</span><span class=\"macro attribute default_library library\">Copy</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"macro attribute default_library library\">derive</span><span class=\"parenthesis attribute\">(</span><span class=\"macro attribute default_library library\">Copy</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">FooCopy</span> <span class=\"brace\">{</span>\n     <span class=\"field declaration\">x</span><span class=\"colon\">:</span> <span class=\"builtin_type\">u32</span><span class=\"comma\">,</span>\n <span class=\"brace\">}</span>"}, {"sha": "f09015efb603b05a1081b6d1df32400c0d45ef99", "filename": "crates/ide_completion/src/completions/attribute.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -4,20 +4,19 @@\n //! for built-in attributes.\n \n use hir::HasAttrs;\n-use ide_db::helpers::{\n-    generated_lints::{CLIPPY_LINTS, DEFAULT_LINTS, FEATURES, RUSTDOC_LINTS},\n-    parse_tt_as_comma_sep_paths,\n+use ide_db::{\n+    helpers::{\n+        generated_lints::{CLIPPY_LINTS, DEFAULT_LINTS, FEATURES, RUSTDOC_LINTS},\n+        parse_tt_as_comma_sep_paths,\n+    },\n+    SymbolKind,\n };\n use itertools::Itertools;\n use once_cell::sync::Lazy;\n use rustc_hash::FxHashMap;\n use syntax::{algo::non_trivia_sibling, ast, AstNode, Direction, SyntaxKind, T};\n \n-use crate::{\n-    context::CompletionContext,\n-    item::{CompletionItem, CompletionItemKind},\n-    Completions,\n-};\n+use crate::{context::CompletionContext, item::CompletionItem, Completions};\n \n mod cfg;\n mod derive;\n@@ -73,11 +72,8 @@ fn complete_new_attribute(acc: &mut Completions, ctx: &CompletionContext, attrib\n     });\n \n     let add_completion = |attr_completion: &AttrCompletion| {\n-        let mut item = CompletionItem::new(\n-            CompletionItemKind::Attribute,\n-            ctx.source_range(),\n-            attr_completion.label,\n-        );\n+        let mut item =\n+            CompletionItem::new(SymbolKind::Attribute, ctx.source_range(), attr_completion.label);\n \n         if let Some(lookup) = attr_completion.lookup {\n             item.lookup_by(lookup);\n@@ -107,7 +103,7 @@ fn complete_new_attribute(acc: &mut Completions, ctx: &CompletionContext, attrib\n         if let hir::ScopeDef::MacroDef(mac) = scope_def {\n             if mac.kind() == hir::MacroKind::Attr {\n                 let mut item = CompletionItem::new(\n-                    CompletionItemKind::Attribute,\n+                    SymbolKind::Attribute,\n                     ctx.source_range(),\n                     name.to_smol_str(),\n                 );"}, {"sha": "d1a4722b3018b5b67c3f6e777a8a5e48a5b718f2", "filename": "crates/ide_completion/src/completions/attribute/cfg.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fcfg.rs?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -2,16 +2,14 @@\n \n use std::iter;\n \n+use ide_db::SymbolKind;\n use syntax::SyntaxKind;\n \n-use crate::{\n-    completions::Completions, context::CompletionContext, CompletionItem, CompletionItemKind,\n-};\n+use crate::{completions::Completions, context::CompletionContext, CompletionItem};\n \n pub(crate) fn complete_cfg(acc: &mut Completions, ctx: &CompletionContext) {\n     let add_completion = |item: &str| {\n-        let mut completion =\n-            CompletionItem::new(CompletionItemKind::Attribute, ctx.source_range(), item);\n+        let mut completion = CompletionItem::new(SymbolKind::Attribute, ctx.source_range(), item);\n         completion.insert_text(format!(r#\"\"{}\"\"#, item));\n         acc.add(completion.build());\n     };\n@@ -34,7 +32,7 @@ pub(crate) fn complete_cfg(acc: &mut Completions, ctx: &CompletionContext) {\n                 krate.potential_cfg(ctx.db).get_cfg_values(&name).cloned().for_each(|s| {\n                     let insert_text = format!(r#\"\"{}\"\"#, s);\n                     let mut item =\n-                        CompletionItem::new(CompletionItemKind::Attribute, ctx.source_range(), s);\n+                        CompletionItem::new(SymbolKind::Attribute, ctx.source_range(), s);\n                     item.insert_text(insert_text);\n \n                     acc.add(item.build());\n@@ -44,8 +42,7 @@ pub(crate) fn complete_cfg(acc: &mut Completions, ctx: &CompletionContext) {\n         None => {\n             if let Some(krate) = ctx.krate {\n                 krate.potential_cfg(ctx.db).get_cfg_keys().cloned().for_each(|s| {\n-                    let item =\n-                        CompletionItem::new(CompletionItemKind::Attribute, ctx.source_range(), s);\n+                    let item = CompletionItem::new(SymbolKind::Attribute, ctx.source_range(), s);\n                     acc.add(item.build());\n                 })\n             }"}, {"sha": "b71ee21d3cc159deddba5342b043cf3bbf2e5147", "filename": "crates/ide_completion/src/completions/attribute/derive.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -1,15 +1,16 @@\n //! Completion for derives\n use hir::{HasAttrs, MacroDef, MacroKind};\n-use ide_db::helpers::{import_assets::ImportAssets, insert_use::ImportScope, FamousDefs};\n+use ide_db::{\n+    helpers::{import_assets::ImportAssets, insert_use::ImportScope, FamousDefs},\n+    SymbolKind,\n+};\n use itertools::Itertools;\n use rustc_hash::FxHashSet;\n use syntax::{ast, SmolStr, SyntaxKind};\n \n use crate::{\n-    completions::flyimport::compute_fuzzy_completion_order_key,\n-    context::CompletionContext,\n-    item::{CompletionItem, CompletionItemKind},\n-    Completions, ImportEdit,\n+    completions::flyimport::compute_fuzzy_completion_order_key, context::CompletionContext,\n+    item::CompletionItem, Completions, ImportEdit,\n };\n \n pub(super) fn complete_derive(\n@@ -56,8 +57,7 @@ pub(super) fn complete_derive(\n             _ => (name, None),\n         };\n \n-        let mut item =\n-            CompletionItem::new(CompletionItemKind::Attribute, ctx.source_range(), label);\n+        let mut item = CompletionItem::new(SymbolKind::Attribute, ctx.source_range(), label);\n         if let Some(docs) = mac.docs(ctx.db) {\n             item.documentation(docs);\n         }\n@@ -112,7 +112,7 @@ fn flyimport_attribute(acc: &mut Completions, ctx: &CompletionContext) -> Option\n             })\n             .filter_map(|(import, mac)| {\n                 let mut item = CompletionItem::new(\n-                    CompletionItemKind::Attribute,\n+                    SymbolKind::Attribute,\n                     ctx.source_range(),\n                     mac.name(ctx.db)?.to_smol_str(),\n                 );"}, {"sha": "e2477423a2d58bb0731ea83953fbc19b4bbca62f", "filename": "crates/ide_completion/src/completions/attribute/lint.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Flint.rs?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -1,12 +1,8 @@\n //! Completion for lints\n-use ide_db::helpers::generated_lints::Lint;\n+use ide_db::{helpers::generated_lints::Lint, SymbolKind};\n use syntax::{ast, T};\n \n-use crate::{\n-    context::CompletionContext,\n-    item::{CompletionItem, CompletionItemKind},\n-    Completions,\n-};\n+use crate::{context::CompletionContext, item::CompletionItem, Completions};\n \n pub(super) fn complete_lint(\n     acc: &mut Completions,\n@@ -58,8 +54,7 @@ pub(super) fn complete_lint(\n             Some(qual) if !is_qualified => format!(\"{}::{}\", qual, name),\n             _ => name.to_owned(),\n         };\n-        let mut item =\n-            CompletionItem::new(CompletionItemKind::Attribute, ctx.source_range(), label);\n+        let mut item = CompletionItem::new(SymbolKind::Attribute, ctx.source_range(), label);\n         item.documentation(hir::Documentation::new(description.to_owned()));\n         item.add_to(acc)\n     }"}, {"sha": "4c4a37fb5e709e5e908ab7ec8d33356643069e93", "filename": "crates/ide_completion/src/completions/attribute/repr.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Frepr.rs?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -1,12 +1,9 @@\n //! Completion for representations.\n \n+use ide_db::SymbolKind;\n use syntax::ast;\n \n-use crate::{\n-    context::CompletionContext,\n-    item::{CompletionItem, CompletionItemKind},\n-    Completions,\n-};\n+use crate::{context::CompletionContext, item::CompletionItem, Completions};\n \n pub(super) fn complete_repr(acc: &mut Completions, ctx: &CompletionContext, input: ast::TokenTree) {\n     if let Some(existing_reprs) = super::parse_comma_sep_expr(input) {\n@@ -29,8 +26,7 @@ pub(super) fn complete_repr(acc: &mut Completions, ctx: &CompletionContext, inpu\n                 continue;\n             }\n \n-            let mut item =\n-                CompletionItem::new(CompletionItemKind::Attribute, ctx.source_range(), label);\n+            let mut item = CompletionItem::new(SymbolKind::Attribute, ctx.source_range(), label);\n             if let Some(lookup) = lookup {\n                 item.lookup_by(lookup);\n             }"}, {"sha": "7ff16adce15e1585d82625fb9dc93e0a0ac3a7e4", "filename": "crates/ide_completion/src/item.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fitem.rs?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -216,7 +216,6 @@ impl CompletionRelevance {\n #[derive(Debug, Clone, Copy, PartialEq, Eq)]\n pub enum CompletionItemKind {\n     SymbolKind(SymbolKind),\n-    Attribute,\n     Binding,\n     BuiltinType,\n     Keyword,\n@@ -232,6 +231,7 @@ impl CompletionItemKind {\n     pub(crate) fn tag(&self) -> &'static str {\n         match self {\n             CompletionItemKind::SymbolKind(kind) => match kind {\n+                SymbolKind::Attribute => \"at\",\n                 SymbolKind::BuiltinAttr => \"ba\",\n                 SymbolKind::Const => \"ct\",\n                 SymbolKind::ConstParam => \"cp\",\n@@ -255,7 +255,6 @@ impl CompletionItemKind {\n                 SymbolKind::ValueParam => \"vp\",\n                 SymbolKind::Variant => \"ev\",\n             },\n-            CompletionItemKind::Attribute => \"at\",\n             CompletionItemKind::Binding => \"bn\",\n             CompletionItemKind::BuiltinType => \"bt\",\n             CompletionItemKind::Keyword => \"kw\","}, {"sha": "99b64821fc3aaea357e444e9e1e798132953bc6b", "filename": "crates/ide_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Fide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Flib.rs?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -145,6 +145,7 @@ fn line_index(db: &dyn LineIndexDatabase, file_id: FileId) -> Arc<LineIndex> {\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]\n pub enum SymbolKind {\n+    Attribute,\n     BuiltinAttr,\n     Const,\n     ConstParam,"}, {"sha": "61a8159278d3ab1eedd38594fc7acc57f3e4a35e", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -41,6 +41,7 @@ define_semantic_token_types![\n     (ANGLE, \"angle\"),\n     (ARITHMETIC, \"arithmetic\"),\n     (ATTRIBUTE, \"attribute\"),\n+    (ATTRIBUTE_BRACKET, \"attributeBracket\"),\n     (BITWISE, \"bitwise\"),\n     (BOOLEAN, \"boolean\"),\n     (BRACE, \"brace\"),"}, {"sha": "91245ace7b99c3ebe3b2f338bad4061071d224b3", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/642c1eb720051907036e017e612f615932ea457e/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642c1eb720051907036e017e612f615932ea457e/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=642c1eb720051907036e017e612f615932ea457e", "patch": "@@ -50,7 +50,9 @@ pub(crate) fn symbol_kind(symbol_kind: SymbolKind) -> lsp_types::SymbolKind {\n         SymbolKind::Enum => lsp_types::SymbolKind::ENUM,\n         SymbolKind::Variant => lsp_types::SymbolKind::ENUM_MEMBER,\n         SymbolKind::Trait => lsp_types::SymbolKind::INTERFACE,\n-        SymbolKind::Macro | SymbolKind::BuiltinAttr => lsp_types::SymbolKind::FUNCTION,\n+        SymbolKind::Macro | SymbolKind::BuiltinAttr | SymbolKind::Attribute => {\n+            lsp_types::SymbolKind::FUNCTION\n+        }\n         SymbolKind::Module | SymbolKind::ToolModule => lsp_types::SymbolKind::MODULE,\n         SymbolKind::TypeAlias | SymbolKind::TypeParam => lsp_types::SymbolKind::TYPE_PARAMETER,\n         SymbolKind::Field => lsp_types::SymbolKind::FIELD,\n@@ -100,14 +102,14 @@ pub(crate) fn completion_item_kind(\n     completion_item_kind: CompletionItemKind,\n ) -> lsp_types::CompletionItemKind {\n     match completion_item_kind {\n-        CompletionItemKind::Attribute => lsp_types::CompletionItemKind::ENUM_MEMBER,\n         CompletionItemKind::Binding => lsp_types::CompletionItemKind::VARIABLE,\n         CompletionItemKind::BuiltinType => lsp_types::CompletionItemKind::STRUCT,\n         CompletionItemKind::Keyword => lsp_types::CompletionItemKind::KEYWORD,\n         CompletionItemKind::Method => lsp_types::CompletionItemKind::METHOD,\n         CompletionItemKind::Snippet => lsp_types::CompletionItemKind::SNIPPET,\n         CompletionItemKind::UnresolvedReference => lsp_types::CompletionItemKind::REFERENCE,\n         CompletionItemKind::SymbolKind(symbol) => match symbol {\n+            SymbolKind::Attribute => lsp_types::CompletionItemKind::FUNCTION,\n             SymbolKind::Const => lsp_types::CompletionItemKind::CONSTANT,\n             SymbolKind::ConstParam => lsp_types::CompletionItemKind::TYPE_PARAMETER,\n             SymbolKind::Enum => lsp_types::CompletionItemKind::ENUM,\n@@ -117,7 +119,7 @@ pub(crate) fn completion_item_kind(\n             SymbolKind::Label => lsp_types::CompletionItemKind::VARIABLE,\n             SymbolKind::LifetimeParam => lsp_types::CompletionItemKind::TYPE_PARAMETER,\n             SymbolKind::Local => lsp_types::CompletionItemKind::VARIABLE,\n-            SymbolKind::Macro => lsp_types::CompletionItemKind::METHOD,\n+            SymbolKind::Macro => lsp_types::CompletionItemKind::FUNCTION,\n             SymbolKind::Module => lsp_types::CompletionItemKind::MODULE,\n             SymbolKind::SelfParam => lsp_types::CompletionItemKind::VALUE,\n             SymbolKind::Static => lsp_types::CompletionItemKind::VALUE,\n@@ -468,6 +470,7 @@ fn semantic_token_type_and_modifiers(\n     let mut mods = semantic_tokens::ModifierSet::default();\n     let type_ = match highlight.tag {\n         HlTag::Symbol(symbol) => match symbol {\n+            SymbolKind::Attribute => semantic_tokens::ATTRIBUTE,\n             SymbolKind::Module => lsp_types::SemanticTokenType::NAMESPACE,\n             SymbolKind::Impl => semantic_tokens::TYPE_ALIAS,\n             SymbolKind::Field => lsp_types::SemanticTokenType::PROPERTY,\n@@ -504,7 +507,7 @@ fn semantic_token_type_and_modifiers(\n             SymbolKind::BuiltinAttr => semantic_tokens::BUILTIN_ATTRIBUTE,\n             SymbolKind::ToolModule => semantic_tokens::TOOL_MODULE,\n         },\n-        HlTag::Attribute => semantic_tokens::ATTRIBUTE,\n+        HlTag::AttributeBracket => semantic_tokens::ATTRIBUTE_BRACKET,\n         HlTag::BoolLiteral => semantic_tokens::BOOLEAN,\n         HlTag::BuiltinType => semantic_tokens::BUILTIN_TYPE,\n         HlTag::ByteLiteral | HlTag::NumericLiteral => lsp_types::SemanticTokenType::NUMBER,"}]}