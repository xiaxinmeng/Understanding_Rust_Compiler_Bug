{"sha": "8ad1a1cf398622e6e179726aeadaf19cca7677d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZDFhMWNmMzk4NjIyZTZlMTc5NzI2YWVhZGFmMTljY2E3Njc3ZDk=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-30T21:11:46Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-30T21:11:46Z"}, "message": "driver: Add env var to control log colors\n\nThe log color variable is whatever the log variable is (`RUSTC_LOG`,\n`RUSTDOC_LOG`, `MIRI_LOG`, etc.) + `_COLOR`. So `RUSTC_LOG_COLOR`,\n`RUSTDOC_LOG_COLOR`, `MIRI_LOG_COLOR`, etc.\n\nThanks to @RalfJung for suggesting this! It was much easier to implement\nthan adding a new unstable argument, which is what I tried before.", "tree": {"sha": "312773a5bd1335733540cf5d70311f82f050e467", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/312773a5bd1335733540cf5d70311f82f050e467"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ad1a1cf398622e6e179726aeadaf19cca7677d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ad1a1cf398622e6e179726aeadaf19cca7677d9", "html_url": "https://github.com/rust-lang/rust/commit/8ad1a1cf398622e6e179726aeadaf19cca7677d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ad1a1cf398622e6e179726aeadaf19cca7677d9/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d282aca273d9a765b32d38db85d2e1ce7d588a1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d282aca273d9a765b32d38db85d2e1ce7d588a1f", "html_url": "https://github.com/rust-lang/rust/commit/d282aca273d9a765b32d38db85d2e1ce7d588a1f"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "6c70faf080f8135c525d4af5264181aa90b2232e", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8ad1a1cf398622e6e179726aeadaf19cca7677d9/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ad1a1cf398622e6e179726aeadaf19cca7677d9/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=8ad1a1cf398622e6e179726aeadaf19cca7677d9", "patch": "@@ -1283,10 +1283,22 @@ pub fn init_env_logger(env: &str) {\n         Ok(s) if s.is_empty() => return,\n         Ok(_) => {}\n     }\n+    let color_logs = match std::env::var(String::from(env) + \"_COLOR\") {\n+        Ok(value) => match value.as_ref() {\n+            \"always\" => true,\n+            \"never\" => false,\n+            \"auto\" => stdout_isatty(),\n+            _ => panic!(\"invalid log color value '{}': expected one of always, never, or auto\", value),\n+        },\n+        Err(std::env::VarError::NotPresent) => stdout_isatty(),\n+        Err(std::env::VarError::NotUnicode(_value)) => {\n+            panic!(\"non-unicode log color value: expected one of always, never, or auto\")\n+        }\n+    };\n     let filter = tracing_subscriber::EnvFilter::from_env(env);\n     let layer = tracing_tree::HierarchicalLayer::default()\n         .with_indent_lines(true)\n-        .with_ansi(stdout_isatty())\n+        .with_ansi(color_logs)\n         .with_targets(true)\n         .with_thread_ids(true)\n         .with_thread_names(true)"}]}