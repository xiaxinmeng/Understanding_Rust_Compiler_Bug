{"sha": "134c7563be05d120ffb45d9b971ba95735a0fcb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzNGM3NTYzYmUwNWQxMjBmZmI0NWQ5Yjk3MWJhOTU3MzVhMGZjYjU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-14T15:04:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-14T15:04:47Z"}, "message": "Merge #6817\n\n6817: Replace goblin crate with object r=matklad a=lnicola\n\nContinuation of #4385.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "fb9b8abb56b2569f58711765fda3d3404f3e01fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb9b8abb56b2569f58711765fda3d3404f3e01fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/134c7563be05d120ffb45d9b971ba95735a0fcb5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf138PCRBK7hj4Ov3rIwAAdHIIAG7xcSYt9p7XJ4VbYu28XLtL\nLex4gY7FQS6D/c8NssBVNdgaBNw/cbQaKlewkYWEiNl+itX0/A4FNe7BrEuMXH+A\nRaMX3Y4MYzps34V1163Wnj7FDWrsRlyMl7uZnxn8VDurT+CBkKZjRuLy1fyL71sb\nVIqVvHV1y9DkGeuugQJhDst6V6IJ+nt0nADLpPELXk2SJtbdgQfErAZQY3fmrhGW\nKy4diEw3HcDxjrxyNFfW6ia6bPszIcg6RxV8wZ5odtQH7k2rZ5KjMY6FrpyeYnG7\n6WkqM/fIAs/cgDq6AIoO08+RQ4Hz63C9B0jnk7EnY7ev/4U0ex8coJ29sYnKHTQ=\n=Brr9\n-----END PGP SIGNATURE-----\n", "payload": "tree fb9b8abb56b2569f58711765fda3d3404f3e01fa\nparent 8cba4231092b0d9ca44ea1f545856239e2fb6eed\nparent dc519b88aff2536a9c6cfdd12621ca73df26a5ef\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1607958287 +0000\ncommitter GitHub <noreply@github.com> 1607958287 +0000\n\nMerge #6817\n\n6817: Replace goblin crate with object r=matklad a=lnicola\n\nContinuation of #4385.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/134c7563be05d120ffb45d9b971ba95735a0fcb5", "html_url": "https://github.com/rust-lang/rust/commit/134c7563be05d120ffb45d9b971ba95735a0fcb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/134c7563be05d120ffb45d9b971ba95735a0fcb5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cba4231092b0d9ca44ea1f545856239e2fb6eed", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cba4231092b0d9ca44ea1f545856239e2fb6eed", "html_url": "https://github.com/rust-lang/rust/commit/8cba4231092b0d9ca44ea1f545856239e2fb6eed"}, {"sha": "dc519b88aff2536a9c6cfdd12621ca73df26a5ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc519b88aff2536a9c6cfdd12621ca73df26a5ef", "html_url": "https://github.com/rust-lang/rust/commit/dc519b88aff2536a9c6cfdd12621ca73df26a5ef"}], "stats": {"total": 114, "additions": 36, "deletions": 78}, "files": [{"sha": "ec8ad11cb418d6213a3c7ac25309b6d4c639f4b4", "filename": "Cargo.lock", "status": "modified", "additions": 8, "deletions": 39, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/134c7563be05d120ffb45d9b971ba95735a0fcb5/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/134c7563be05d120ffb45d9b971ba95735a0fcb5/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=134c7563be05d120ffb45d9b971ba95735a0fcb5", "patch": "@@ -89,7 +89,7 @@ dependencies = [\n  \"cfg-if 1.0.0\",\n  \"libc\",\n  \"miniz_oxide\",\n- \"object\",\n+ \"object 0.22.0\",\n  \"rustc-demangle\",\n ]\n \n@@ -499,17 +499,6 @@ version = \"0.23.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"f6503fe142514ca4799d4c26297c4248239fe8838d827db6bd6065c6ed29a6ce\"\n \n-[[package]]\n-name = \"goblin\"\n-version = \"0.2.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d20fd25aa456527ce4f544271ae4fea65d2eda4a6561ea56f39fb3ee4f7e3884\"\n-dependencies = [\n- \"log\",\n- \"plain\",\n- \"scroll\",\n-]\n-\n [[package]]\n name = \"hashbrown\"\n version = \"0.9.1\"\n@@ -1054,6 +1043,12 @@ version = \"0.22.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"8d3b63360ec3cb337817c2dbd47ab4a0f170d285d8e5a2064600f3def1402397\"\n \n+[[package]]\n+name = \"object\"\n+version = \"0.23.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"a9a7ab5d64814df0fe4a4b5ead45ed6c5f181ee3ff04ba344313a6c80446c5d4\"\n+\n [[package]]\n name = \"once_cell\"\n version = \"1.5.2\"\n@@ -1158,12 +1153,6 @@ version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"6b063f57ec186e6140e2b8b6921e5f1bd89c7356dda5b33acc5401203ca6131c\"\n \n-[[package]]\n-name = \"plain\"\n-version = \"0.2.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b4596b6d070b27117e987119b4dac604f3c58cfb0b191112e24771b2faeac1a6\"\n-\n [[package]]\n name = \"proc-macro2\"\n version = \"1.0.24\"\n@@ -1192,10 +1181,10 @@ version = \"0.0.0\"\n dependencies = [\n  \"cargo_metadata\",\n  \"difference\",\n- \"goblin\",\n  \"libloading\",\n  \"mbe\",\n  \"memmap\",\n+ \"object 0.23.0\",\n  \"proc_macro_api\",\n  \"proc_macro_test\",\n  \"serde_derive\",\n@@ -1471,26 +1460,6 @@ version = \"1.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd\"\n \n-[[package]]\n-name = \"scroll\"\n-version = \"0.10.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"fda28d4b4830b807a8b43f7b0e6b5df875311b3e7621d84577188c175b6ec1ec\"\n-dependencies = [\n- \"scroll_derive\",\n-]\n-\n-[[package]]\n-name = \"scroll_derive\"\n-version = \"0.10.4\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b12bd20b94c7cdfda8c7ba9b92ad0d9a56e3fa018c25fca83b51aa664c9b4c0d\"\n-dependencies = [\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n-]\n-\n [[package]]\n name = \"semver\"\n version = \"0.9.0\""}, {"sha": "1bfa6c3fcb894e493ce5260287176730deb5a64c", "filename": "crates/proc_macro_srv/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/134c7563be05d120ffb45d9b971ba95735a0fcb5/crates%2Fproc_macro_srv%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/134c7563be05d120ffb45d9b971ba95735a0fcb5/crates%2Fproc_macro_srv%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2FCargo.toml?ref=134c7563be05d120ffb45d9b971ba95735a0fcb5", "patch": "@@ -10,7 +10,7 @@ edition = \"2018\"\n doctest = false\n \n [dependencies]\n-goblin = \"0.2.1\"\n+object = { version = \"0.23\", default-features = false, features = [\"std\", \"read_core\", \"elf\", \"macho\", \"pe\", \"unaligned\"] }\n libloading = \"0.6.0\"\n memmap = \"0.7\"\n "}, {"sha": "2afb973cc2da74960538ed9551ea58a1a4adab17", "filename": "crates/proc_macro_srv/src/dylib.rs", "status": "modified", "additions": 27, "deletions": 38, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/134c7563be05d120ffb45d9b971ba95735a0fcb5/crates%2Fproc_macro_srv%2Fsrc%2Fdylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/134c7563be05d120ffb45d9b971ba95735a0fcb5/crates%2Fproc_macro_srv%2Fsrc%2Fdylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Fdylib.rs?ref=134c7563be05d120ffb45d9b971ba95735a0fcb5", "patch": "@@ -1,14 +1,17 @@\n //! Handles dynamic library loading for proc macro\n \n-use crate::{proc_macro::bridge, rustc_server::TokenStream};\n-use std::fs::File;\n-use std::path::{Path, PathBuf};\n+use std::{\n+    fs::File,\n+    io,\n+    path::{Path, PathBuf},\n+};\n \n-use goblin::{mach::Mach, Object};\n use libloading::Library;\n use memmap::Mmap;\n+use object::Object;\n use proc_macro_api::ProcMacroKind;\n-use std::io;\n+\n+use crate::{proc_macro::bridge, rustc_server::TokenStream};\n \n const NEW_REGISTRAR_SYMBOL: &str = \"_rustc_proc_macro_decls_\";\n \n@@ -23,40 +26,26 @@ fn is_derive_registrar_symbol(symbol: &str) -> bool {\n fn find_registrar_symbol(file: &Path) -> io::Result<Option<String>> {\n     let file = File::open(file)?;\n     let buffer = unsafe { Mmap::map(&file)? };\n-    let object = Object::parse(&buffer).map_err(invalid_data_err)?;\n \n-    let name = match object {\n-        Object::Elf(elf) => {\n-            let symbols = elf.dynstrtab.to_vec().map_err(invalid_data_err)?;\n-            symbols.into_iter().find(|s| is_derive_registrar_symbol(s)).map(&str::to_owned)\n-        }\n-        Object::PE(pe) => pe\n-            .exports\n-            .iter()\n-            .flat_map(|s| s.name)\n-            .find(|s| is_derive_registrar_symbol(s))\n-            .map(&str::to_owned),\n-        Object::Mach(Mach::Binary(binary)) => {\n-            let exports = binary.exports().map_err(invalid_data_err)?;\n-            exports\n-                .iter()\n-                .map(|s| {\n-                    // In macos doc:\n-                    // https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/dlsym.3.html\n-                    // Unlike other dyld API's, the symbol name passed to dlsym() must NOT be\n-                    // prepended with an underscore.\n-                    if s.name.starts_with('_') {\n-                        &s.name[1..]\n-                    } else {\n-                        &s.name\n-                    }\n-                })\n-                .find(|s| is_derive_registrar_symbol(s))\n-                .map(&str::to_owned)\n-        }\n-        _ => return Ok(None),\n-    };\n-    return Ok(name);\n+    Ok(object::File::parse(&buffer)\n+        .map_err(invalid_data_err)?\n+        .exports()\n+        .map_err(invalid_data_err)?\n+        .into_iter()\n+        .map(|export| export.name())\n+        .filter_map(|sym| String::from_utf8(sym.into()).ok())\n+        .find(|sym| is_derive_registrar_symbol(sym))\n+        .map(|sym| {\n+            // From MacOS docs:\n+            // https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/dlsym.3.html\n+            // Unlike other dyld API's, the symbol name passed to dlsym() must NOT be\n+            // prepended with an underscore.\n+            if cfg!(target_os = \"macos\") && sym.starts_with('_') {\n+                sym[1..].to_owned()\n+            } else {\n+                sym\n+            }\n+        }))\n }\n \n /// Loads dynamic library in platform dependent manner."}]}