{"sha": "d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwYmUyN2M4ZWM0NDhlNGRkMTBkZmEwZjI5MGZmZTFiZjk5N2RlNWY=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2021-07-20T11:54:37Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2021-09-14T11:54:41Z"}, "message": "Use on-disk-hash-table format for DefPathHashMap in hir::definitions.", "tree": {"sha": "3b9d1e9e883206a506f0faa71252c01a6267b58e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b9d1e9e883206a506f0faa71252c01a6267b58e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f", "html_url": "https://github.com/rust-lang/rust/commit/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0debea1377459e34b39bdbb5095d9e33cced9912", "url": "https://api.github.com/repos/rust-lang/rust/commits/0debea1377459e34b39bdbb5095d9e33cced9912", "html_url": "https://github.com/rust-lang/rust/commit/0debea1377459e34b39bdbb5095d9e33cced9912"}], "stats": {"total": 71, "additions": 66, "deletions": 5}, "files": [{"sha": "a03d542139b89256094e94e979781a1e129dad82", "filename": "Cargo.lock", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f", "patch": "@@ -2321,6 +2321,15 @@ dependencies = [\n  \"rustc-std-workspace-core\",\n ]\n \n+[[package]]\n+name = \"odht\"\n+version = \"0.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"91e547991b4135151428251dbff22e39ab0f766e0f37cc7d78c5343132be295f\"\n+dependencies = [\n+ \"cfg-if 1.0.0\",\n+]\n+\n [[package]]\n name = \"once_cell\"\n version = \"1.7.2\"\n@@ -3858,6 +3867,7 @@ version = \"0.0.0\"\n name = \"rustc_hir\"\n version = \"0.0.0\"\n dependencies = [\n+ \"odht\",\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_feature\",\n@@ -4044,6 +4054,7 @@ name = \"rustc_metadata\"\n version = \"0.0.0\"\n dependencies = [\n  \"libc\",\n+ \"odht\",\n  \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\","}, {"sha": "ee1b9544e0242fad3cef64baf8fe0eee056f431a", "filename": "compiler/rustc_hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/compiler%2Frustc_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/compiler%2Frustc_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2FCargo.toml?ref=d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f", "patch": "@@ -17,3 +17,4 @@ rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_ast = { path = \"../rustc_ast\" }\n tracing = \"0.1\"\n smallvec = { version = \"1.6.1\", features = [\"union\", \"may_dangle\"] }\n+odht = { version = \"0.1\", features = [\"nightly\"] }"}, {"sha": "8bfb47af26f1ae09c386522e424dfbc3b0aead07", "filename": "compiler/rustc_hir/src/def_path_hash_map.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/compiler%2Frustc_hir%2Fsrc%2Fdef_path_hash_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/compiler%2Frustc_hir%2Fsrc%2Fdef_path_hash_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fdef_path_hash_map.rs?ref=d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f", "patch": "@@ -0,0 +1,37 @@\n+use rustc_data_structures::fingerprint::Fingerprint;\n+use rustc_span::def_id::{DefIndex, DefPathHash};\n+\n+#[derive(Clone, Default)]\n+pub struct Config;\n+\n+impl odht::Config for Config {\n+    type Key = DefPathHash;\n+    type Value = DefIndex;\n+\n+    type EncodedKey = [u8; 16];\n+    type EncodedValue = [u8; 4];\n+\n+    type H = odht::UnHashFn;\n+\n+    #[inline]\n+    fn encode_key(k: &DefPathHash) -> [u8; 16] {\n+        k.0.to_le_bytes()\n+    }\n+\n+    #[inline]\n+    fn encode_value(v: &DefIndex) -> [u8; 4] {\n+        v.as_u32().to_le_bytes()\n+    }\n+\n+    #[inline]\n+    fn decode_key(k: &[u8; 16]) -> DefPathHash {\n+        DefPathHash(Fingerprint::from_le_bytes(*k))\n+    }\n+\n+    #[inline]\n+    fn decode_value(v: &[u8; 4]) -> DefIndex {\n+        DefIndex::from_u32(u32::from_le_bytes(*v))\n+    }\n+}\n+\n+pub type DefPathHashMap = odht::HashTableOwned<Config>;"}, {"sha": "72a0318479f372a72da2142916571c77202117a1", "filename": "compiler/rustc_hir/src/definitions.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs?ref=d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f", "patch": "@@ -6,11 +6,11 @@\n \n pub use crate::def_id::DefPathHash;\n use crate::def_id::{CrateNum, DefIndex, LocalDefId, StableCrateId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use crate::def_path_hash_map::DefPathHashMap;\n use crate::hir;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::StableHasher;\n-use rustc_data_structures::unhash::UnhashMap;\n use rustc_index::vec::IndexVec;\n use rustc_span::hygiene::ExpnId;\n use rustc_span::symbol::{kw, sym, Symbol};\n@@ -28,7 +28,7 @@ use tracing::debug;\n pub struct DefPathTable {\n     index_to_key: IndexVec<DefIndex, DefKey>,\n     def_path_hashes: IndexVec<DefIndex, DefPathHash>,\n-    def_path_hash_to_index: UnhashMap<DefPathHash, DefIndex>,\n+    def_path_hash_to_index: DefPathHashMap,\n }\n \n impl DefPathTable {\n@@ -44,7 +44,7 @@ impl DefPathTable {\n \n         // Check for hash collisions of DefPathHashes. These should be\n         // exceedingly rare.\n-        if let Some(existing) = self.def_path_hash_to_index.insert(def_path_hash, index) {\n+        if let Some(existing) = self.def_path_hash_to_index.insert(&def_path_hash, &index) {\n             let def_path1 = DefPath::make(LOCAL_CRATE, existing, |idx| self.def_key(idx));\n             let def_path2 = DefPath::make(LOCAL_CRATE, index, |idx| self.def_key(idx));\n \n@@ -87,7 +87,7 @@ impl DefPathTable {\n \n     pub fn enumerated_keys_and_path_hashes(\n         &self,\n-    ) -> impl Iterator<Item = (DefIndex, &DefKey, &DefPathHash)> + '_ {\n+    ) -> impl Iterator<Item = (DefIndex, &DefKey, &DefPathHash)> + ExactSizeIterator + '_ {\n         self.index_to_key\n             .iter_enumerated()\n             .map(move |(index, key)| (index, key, &self.def_path_hashes[index]))\n@@ -110,6 +110,9 @@ pub struct Definitions {\n     expansions_that_defined: FxHashMap<LocalDefId, ExpnId>,\n \n     def_id_to_span: IndexVec<LocalDefId, Span>,\n+\n+    /// The [StableCrateId] of the local crate.\n+    stable_crate_id: StableCrateId,\n }\n \n /// A unique identifier that we can use to lookup a definition\n@@ -356,6 +359,7 @@ impl Definitions {\n             hir_id_to_def_id: Default::default(),\n             expansions_that_defined: Default::default(),\n             def_id_to_span,\n+            stable_crate_id,\n         }\n     }\n \n@@ -440,10 +444,15 @@ impl Definitions {\n \n     #[inline(always)]\n     pub fn local_def_path_hash_to_def_id(&self, hash: DefPathHash) -> Option<LocalDefId> {\n+        debug_assert!(hash.stable_crate_id() == self.stable_crate_id);\n         self.table\n             .def_path_hash_to_index\n             .get(&hash)\n-            .map(|&local_def_index| LocalDefId { local_def_index })\n+            .map(|local_def_index| LocalDefId { local_def_index })\n+    }\n+\n+    pub fn def_path_hash_to_def_index_map(&self) -> &DefPathHashMap {\n+        &self.table.def_path_hash_to_index\n     }\n }\n "}, {"sha": "ce36648d6df118b4e6238e328592b0352f13fc12", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f", "patch": "@@ -16,6 +16,7 @@ extern crate rustc_data_structures;\n \n mod arena;\n pub mod def;\n+pub mod def_path_hash_map;\n pub mod definitions;\n pub use rustc_span::def_id;\n mod hir;"}, {"sha": "b45320c7e8a8eca51d95257e3f66ba41f88842a2", "filename": "compiler/rustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/compiler%2Frustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/compiler%2Frustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2FCargo.toml?ref=d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f", "patch": "@@ -8,6 +8,7 @@ doctest = false\n \n [dependencies]\n libc = \"0.2\"\n+odht = { version = \"0.1\", features = [\"nightly\"] }\n snap = \"1\"\n tracing = \"0.1\"\n smallvec = { version = \"1.6.1\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "60703384e9e85ab74b6c967c4033fc8987bd4a19", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=d0be27c8ec448e4dd10dfa0f290ffe1bf997de5f", "patch": "@@ -144,6 +144,7 @@ const PERMITTED_DEPENDENCIES: &[&str] = &[\n     \"num-integer\",\n     \"num-traits\",\n     \"object\",\n+    \"odht\",\n     \"once_cell\",\n     \"opaque-debug\",\n     \"parking_lot\","}]}