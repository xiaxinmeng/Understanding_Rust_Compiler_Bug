{"sha": "b57f1099b577d4d388cc5236fb6990275c028b5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1N2YxMDk5YjU3N2Q0ZDM4OGNjNTIzNmZiNjk5MDI3NWMwMjhiNWI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-08-26T16:23:42Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-09-13T20:33:50Z"}, "message": "Remove parsing of obsolete pre-1.0 syntaxes", "tree": {"sha": "2ec9f55ae4637defa70b6a1f0212313051d4557e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ec9f55ae4637defa70b6a1f0212313051d4557e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b57f1099b577d4d388cc5236fb6990275c028b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b57f1099b577d4d388cc5236fb6990275c028b5b", "html_url": "https://github.com/rust-lang/rust/commit/b57f1099b577d4d388cc5236fb6990275c028b5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b57f1099b577d4d388cc5236fb6990275c028b5b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03161e9b12621364d44b7fb85694ddf9901ce50f", "url": "https://api.github.com/repos/rust-lang/rust/commits/03161e9b12621364d44b7fb85694ddf9901ce50f", "html_url": "https://github.com/rust-lang/rust/commit/03161e9b12621364d44b7fb85694ddf9901ce50f"}], "stats": {"total": 66, "additions": 4, "deletions": 62}, "files": [{"sha": "a46a788ca0808ef01aa409eba76ad10ee177e6ab", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b57f1099b577d4d388cc5236fb6990275c028b5b/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b57f1099b577d4d388cc5236fb6990275c028b5b/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=b57f1099b577d4d388cc5236fb6990275c028b5b", "patch": "@@ -19,8 +19,7 @@ use parse::parser;\n /// The specific types of unsupported syntax\n #[derive(Copy, Clone, PartialEq, Eq, Hash)]\n pub enum ObsoleteSyntax {\n-    ClosureKind,\n-    ExternCrateString,\n+    // Nothing here at the moment\n }\n \n pub trait ParserObsoleteMethods {\n@@ -36,18 +35,10 @@ pub trait ParserObsoleteMethods {\n \n impl<'a> ParserObsoleteMethods for parser::Parser<'a> {\n     /// Reports an obsolete syntax non-fatal error.\n+    #[allow(unused_variables)]\n     fn obsolete(&mut self, sp: Span, kind: ObsoleteSyntax) {\n         let (kind_str, desc, error) = match kind {\n-            ObsoleteSyntax::ClosureKind => (\n-                \"`:`, `&mut:`, or `&:`\",\n-                \"rely on inference instead\",\n-                true,\n-            ),\n-            ObsoleteSyntax::ExternCrateString => (\n-                \"\\\"crate-name\\\"\",\n-                \"use an identifier not in quotes instead\",\n-                false, // warning for now\n-            ),\n+            // Nothing here at the moment\n         };\n \n         self.report(sp, kind, kind_str, desc, error);"}, {"sha": "d0936fd981b508390f488664a1d2937e9c703517", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/b57f1099b577d4d388cc5236fb6990275c028b5b/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b57f1099b577d4d388cc5236fb6990275c028b5b/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b57f1099b577d4d388cc5236fb6990275c028b5b", "patch": "@@ -47,7 +47,7 @@ use parse;\n use parse::classify;\n use parse::common::SeqSep;\n use parse::lexer::{Reader, TokenAndSpan};\n-use parse::obsolete::{ParserObsoleteMethods, ObsoleteSyntax};\n+use parse::obsolete::ObsoleteSyntax;\n use parse::token::{self, intern, MatchNt, SubstNt, SpecialVarNt, InternedString};\n use parse::token::{keywords, SpecialMacroVar};\n use parse::{new_sub_parser_from_file, ParseSess};\n@@ -1165,36 +1165,6 @@ impl<'a> Parser<'a> {\n         })))\n     }\n \n-    /// Parses an obsolete closure kind (`&:`, `&mut:`, or `:`).\n-    pub fn parse_obsolete_closure_kind(&mut self) -> PResult<'a, ()> {\n-         let lo = self.span.lo;\n-        if\n-            self.check(&token::BinOp(token::And)) &&\n-            self.look_ahead(1, |t| t.is_keyword(keywords::Mut)) &&\n-            self.look_ahead(2, |t| *t == token::Colon)\n-        {\n-            self.bump();\n-            self.bump();\n-            self.bump();\n-        } else if\n-            self.token == token::BinOp(token::And) &&\n-            self.look_ahead(1, |t| *t == token::Colon)\n-        {\n-            self.bump();\n-            self.bump();\n-        } else if\n-            self.eat(&token::Colon)\n-        {\n-            /* nothing */\n-        } else {\n-            return Ok(());\n-        }\n-\n-        let span = mk_sp(lo, self.span.hi);\n-        self.obsolete(span, ObsoleteSyntax::ClosureKind);\n-        Ok(())\n-    }\n-\n     pub fn parse_unsafety(&mut self) -> PResult<'a, Unsafety> {\n         if self.eat_keyword(keywords::Unsafe) {\n             return Ok(Unsafety::Unsafe);\n@@ -4728,7 +4698,6 @@ impl<'a> Parser<'a> {\n                 Vec::new()\n             } else {\n                 self.expect(&token::BinOp(token::Or))?;\n-                self.parse_obsolete_closure_kind()?;\n                 let args = self.parse_seq_to_before_end(\n                     &token::BinOp(token::Or),\n                     SeqSep::trailing_allowed(token::Comma),"}, {"sha": "89134e806a75cb0c370d8d33e82f2def9140d8c3", "filename": "src/test/parse-fail/obsolete-closure-kind.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/03161e9b12621364d44b7fb85694ddf9901ce50f/src%2Ftest%2Fparse-fail%2Fobsolete-closure-kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03161e9b12621364d44b7fb85694ddf9901ce50f/src%2Ftest%2Fparse-fail%2Fobsolete-closure-kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fobsolete-closure-kind.rs?ref=03161e9b12621364d44b7fb85694ddf9901ce50f", "patch": "@@ -1,18 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test that we generate obsolete syntax errors around usages of closure kinds: `|:|`, `|&:|` and\n-// `|&mut:|`.\n-\n-fn main() {\n-    let a = |:| {};  //~ ERROR obsolete syntax: `:`, `&mut:`, or `&:`\n-    let a = |&:| {};  //~ ERROR obsolete syntax: `:`, `&mut:`, or `&:`\n-    let a = |&mut:| {};  //~ ERROR obsolete syntax: `:`, `&mut:`, or `&:`\n-}"}]}