{"sha": "f823d83718cf84cd9459b68726debd5463e31d97", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MjNkODM3MThjZjg0Y2Q5NDU5YjY4NzI2ZGViZDU0NjNlMzFkOTc=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-02-21T02:03:43Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-02-21T02:45:50Z"}, "message": "Fix vdef pattern", "tree": {"sha": "051f9531fbafe2ba23e8c619ec81d956d4cbe3db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/051f9531fbafe2ba23e8c619ec81d956d4cbe3db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f823d83718cf84cd9459b68726debd5463e31d97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f823d83718cf84cd9459b68726debd5463e31d97", "html_url": "https://github.com/rust-lang/rust/commit/f823d83718cf84cd9459b68726debd5463e31d97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f823d83718cf84cd9459b68726debd5463e31d97/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4403e5cb8ddc9472a1ec66b02e3727d9f1f052a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4403e5cb8ddc9472a1ec66b02e3727d9f1f052a", "html_url": "https://github.com/rust-lang/rust/commit/a4403e5cb8ddc9472a1ec66b02e3727d9f1f052a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5e37406bdd7521df75de56f23fe0052b07c7aaf8", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f823d83718cf84cd9459b68726debd5463e31d97/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f823d83718cf84cd9459b68726debd5463e31d97/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=f823d83718cf84cd9459b68726debd5463e31d97", "patch": "@@ -1368,8 +1368,8 @@ pub fn compile_submatch(bcx: block,\n     let mut test_val = val;\n     if opts.len() > 0u {\n         match opts[0] {\n-            var(_, vdef) => {\n-                let variants = ty::enum_variants(tcx, vdef.enm);\n+            var(_, (enm, _)) => {\n+                let variants = ty::enum_variants(tcx, enm);\n                 if variants.len() == 1 {\n                     kind = single;\n                 } else {"}]}