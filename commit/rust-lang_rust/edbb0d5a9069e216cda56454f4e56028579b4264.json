{"sha": "edbb0d5a9069e216cda56454f4e56028579b4264", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkYmIwZDVhOTA2OWUyMTZjZGE1NjQ1NGY0ZTU2MDI4NTc5YjQyNjQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-25T20:14:52Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-25T20:14:52Z"}, "message": "Rollup merge of #33196 - mitaa:rdoc-crate-links, r=alexcrichton\n\nrustdoc: Linkify extern crates\n\nfixes #33178\n\nr? @alexcrichton", "tree": {"sha": "078e8f18afbff1ddb224239ab211e4eb5d35c9a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/078e8f18afbff1ddb224239ab211e4eb5d35c9a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edbb0d5a9069e216cda56454f4e56028579b4264", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edbb0d5a9069e216cda56454f4e56028579b4264", "html_url": "https://github.com/rust-lang/rust/commit/edbb0d5a9069e216cda56454f4e56028579b4264", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edbb0d5a9069e216cda56454f4e56028579b4264/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b50a2ff4d15324bebf6ce8a1661448195c213f5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b50a2ff4d15324bebf6ce8a1661448195c213f5d", "html_url": "https://github.com/rust-lang/rust/commit/b50a2ff4d15324bebf6ce8a1661448195c213f5d"}, {"sha": "0b5b782e392f0e1d000a7e9fefaad9cbebc0e586", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b5b782e392f0e1d000a7e9fefaad9cbebc0e586", "html_url": "https://github.com/rust-lang/rust/commit/0b5b782e392f0e1d000a7e9fefaad9cbebc0e586"}], "stats": {"total": 92, "additions": 79, "deletions": 13}, "files": [{"sha": "23215fd9d478a3580d2d7d2f23d386091327889a", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=edbb0d5a9069e216cda56454f4e56028579b4264", "patch": "@@ -38,7 +38,7 @@ use rustc_trans::back::link;\n use rustc::middle::cstore::{self, CrateStore};\n use rustc::middle::privacy::AccessLevels;\n use rustc::hir::def::Def;\n-use rustc::hir::def_id::{DefId, DefIndex};\n+use rustc::hir::def_id::{DefId, DefIndex, CRATE_DEF_INDEX};\n use rustc::ty::subst::{self, ParamSpace, VecPerParamSpace};\n use rustc::ty;\n use rustc::middle::stability;\n@@ -2388,7 +2388,7 @@ impl Clean<Item> for doctree::ExternCrate {\n             name: None,\n             attrs: self.attrs.clean(cx),\n             source: self.whence.clean(cx),\n-            def_id: cx.map.local_def_id(0),\n+            def_id: DefId { krate: self.cnum, index: CRATE_DEF_INDEX },\n             visibility: self.vis.clean(cx),\n             stability: None,\n             deprecation: None,"}, {"sha": "408782a698a2ac3474a444f73a4c8aeea5583208", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=edbb0d5a9069e216cda56454f4e56028579b4264", "patch": "@@ -232,6 +232,7 @@ pub struct Macro {\n \n pub struct ExternCrate {\n     pub name: Name,\n+    pub cnum: ast::CrateNum,\n     pub path: Option<String>,\n     pub vis: hir::Visibility,\n     pub attrs: hir::HirVec<ast::Attribute>,"}, {"sha": "739da1b49d46c73c11d782ddb84e6edd37722454", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=edbb0d5a9069e216cda56454f4e56028579b4264", "patch": "@@ -57,6 +57,11 @@ pub struct TyParamBounds<'a>(pub &'a [clean::TyParamBound]);\n pub struct CommaSep<'a, T: 'a>(pub &'a [T]);\n pub struct AbiSpace(pub Abi);\n \n+pub struct HRef<'a> {\n+    pub did: DefId,\n+    pub text: &'a str,\n+}\n+\n impl<'a> VisSpace<'a> {\n     pub fn get(self) -> &'a Option<clean::Visibility> {\n         let VisSpace(v) = self; v\n@@ -363,15 +368,7 @@ fn resolved_path(w: &mut fmt::Formatter, did: DefId, path: &clean::Path,\n             }\n         }\n     }\n-\n-    match href(did) {\n-        Some((url, shortty, fqp)) => {\n-            write!(w, \"<a class='{}' href='{}' title='{}'>{}</a>\",\n-                   shortty, url, fqp.join(\"::\"), last.name)?;\n-        }\n-        _ => write!(w, \"{}\", last.name)?,\n-    }\n-    write!(w, \"{}\", last.params)?;\n+    write!(w, \"{}{}\", HRef::new(did, &last.name), last.params)?;\n     Ok(())\n }\n \n@@ -437,6 +434,24 @@ fn tybounds(w: &mut fmt::Formatter,\n     }\n }\n \n+impl<'a> HRef<'a> {\n+    pub fn new(did: DefId, text: &'a str) -> HRef<'a> {\n+        HRef { did: did, text: text }\n+    }\n+}\n+\n+impl<'a> fmt::Display for HRef<'a> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        match href(self.did) {\n+            Some((url, shortty, fqp)) => {\n+                write!(f, \"<a class='{}' href='{}' title='{}'>{}</a>\",\n+                       shortty, url, fqp.join(\"::\"), self.text)\n+            }\n+            _ => write!(f, \"{}\", self.text),\n+        }\n+    }\n+}\n+\n impl fmt::Display for clean::Type {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         match *self {"}, {"sha": "a8f1fe7d46f904f1dda9a829e69b73638605483e", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=edbb0d5a9069e216cda56454f4e56028579b4264", "patch": "@@ -1739,16 +1739,19 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n \n         match myitem.inner {\n             clean::ExternCrateItem(ref name, ref src) => {\n+                use html::format::HRef;\n+\n                 match *src {\n                     Some(ref src) => {\n                         write!(w, \"<tr><td><code>{}extern crate {} as {};\",\n                                VisSpace(&myitem.visibility),\n-                               src,\n+                               HRef::new(myitem.def_id, src),\n                                name)?\n                     }\n                     None => {\n                         write!(w, \"<tr><td><code>{}extern crate {};\",\n-                               VisSpace(&myitem.visibility), name)?\n+                               VisSpace(&myitem.visibility),\n+                               HRef::new(myitem.def_id, name))?\n                     }\n                 }\n                 write!(w, \"</code></td></tr>\")?;"}, {"sha": "d9ea82acbea359330c04339146f80bf7fc9cfd01", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=edbb0d5a9069e216cda56454f4e56028579b4264", "patch": "@@ -316,7 +316,10 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         let name = renamed.unwrap_or(item.name);\n         match item.node {\n             hir::ItemExternCrate(ref p) => {\n+                let cstore = &self.cx.sess().cstore;\n                 om.extern_crates.push(ExternCrate {\n+                    cnum: cstore.extern_mod_stmt_cnum(item.id)\n+                                .unwrap_or(ast::CrateNum::max_value()),\n                     name: name,\n                     path: p.map(|x|x.to_string()),\n                     vis: item.vis.clone(),"}, {"sha": "f6d89f7c1dc894a687e9a0a6f38cc0b52652c591", "filename": "src/librustdoc/visit_lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fvisit_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Flibrustdoc%2Fvisit_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_lib.rs?ref=edbb0d5a9069e216cda56454f4e56028579b4264", "patch": "@@ -44,6 +44,7 @@ impl<'a, 'b, 'tcx> LibEmbargoVisitor<'a, 'b, 'tcx> {\n \n     pub fn visit_lib(&mut self, cnum: ast::CrateNum) {\n         let did = DefId { krate: cnum, index: CRATE_DEF_INDEX };\n+        self.update(did, Some(AccessLevel::Public));\n         self.visit_mod(did);\n     }\n "}, {"sha": "a368d6b68b9aa782c48310520336d4574a88c1b5", "filename": "src/test/rustdoc/issue-33178-1.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Ftest%2Frustdoc%2Fissue-33178-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Ftest%2Frustdoc%2Fissue-33178-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-33178-1.rs?ref=edbb0d5a9069e216cda56454f4e56028579b4264", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:empty.rs\n+// aux-build:variant-struct.rs\n+// ignore-cross-compile\n+\n+// @has issue_33178_1/index.html\n+// @!has - //a/@title empty\n+pub extern crate empty;\n+\n+// @!has - //a/@title variant_struct\n+pub extern crate variant_struct as foo;"}, {"sha": "2ecb7d9ec44f343939e4155c9db0ec029fd22f6b", "filename": "src/test/rustdoc/issue-33178.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Ftest%2Frustdoc%2Fissue-33178.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbb0d5a9069e216cda56454f4e56028579b4264/src%2Ftest%2Frustdoc%2Fissue-33178.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-33178.rs?ref=edbb0d5a9069e216cda56454f4e56028579b4264", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:empty.rs\n+// aux-build:variant-struct.rs\n+// build-aux-docs\n+// ignore-cross-compile\n+\n+// @has issue_33178/index.html\n+// @has - //a/@title empty\n+// @has - //a/@href ../empty/index.html\n+pub extern crate empty;\n+\n+// @has - //a/@title variant_struct\n+// @has - //a/@href ../variant_struct/index.html\n+pub extern crate variant_struct as foo;"}]}