{"sha": "140cdcbc9d50713143f8d1f2403d9044eb0a528f", "node_id": "C_kwDOAAsO6NoAKDE0MGNkY2JjOWQ1MDcxMzE0M2Y4ZDFmMjQwM2Q5MDQ0ZWIwYTUyOGY", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-05-09T12:42:39Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-05-19T17:50:01Z"}, "message": "Drive-by-cleanup: Don't emit `thir::ExprKind::NeverToAny` for `! -> !`", "tree": {"sha": "f9990761b15623f718a38adf4ec8b45b2ed46741", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9990761b15623f718a38adf4ec8b45b2ed46741"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/140cdcbc9d50713143f8d1f2403d9044eb0a528f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/140cdcbc9d50713143f8d1f2403d9044eb0a528f", "html_url": "https://github.com/rust-lang/rust/commit/140cdcbc9d50713143f8d1f2403d9044eb0a528f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/140cdcbc9d50713143f8d1f2403d9044eb0a528f/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f542778533f2f92c13822ec951c237d46d7a28ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/f542778533f2f92c13822ec951c237d46d7a28ef", "html_url": "https://github.com/rust-lang/rust/commit/f542778533f2f92c13822ec951c237d46d7a28ef"}], "stats": {"total": 212, "additions": 77, "deletions": 135}, "files": [{"sha": "c8648224ac1e89c135b2777f23bbf46dc5d6825b", "filename": "compiler/rustc_mir_build/src/thir/cx/expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -130,6 +130,7 @@ impl<'tcx> Cx<'tcx> {\n                 ExprKind::Pointer { cast: PointerCast::Unsize, source: self.thir.exprs.push(expr) }\n             }\n             Adjust::Pointer(cast) => ExprKind::Pointer { cast, source: self.thir.exprs.push(expr) },\n+            Adjust::NeverToAny if adjustment.target.is_never() => return expr,\n             Adjust::NeverToAny => ExprKind::NeverToAny { source: self.thir.exprs.push(expr) },\n             Adjust::Deref(None) => {\n                 adjust_span(&mut expr);"}, {"sha": "fd082e367a83a07acf6706b30ead7d3d20345715", "filename": "src/tools/miri/tests/fail/never_say_never.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_say_never.rs", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_say_never.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_say_never.rs?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -6,10 +6,8 @@\n \n fn main() {\n     let y = &5;\n-    let x: ! = unsafe {\n-        *(y as *const _ as *const !) //~ ERROR: entering unreachable code\n-    };\n-    f(x)\n+    let x: ! = unsafe { *(y as *const _ as *const !) };\n+    f(x) //~ ERROR: entering unreachable code\n }\n \n fn f(x: !) -> ! {"}, {"sha": "9d3a8df525a49178bc6bfd6a1bcc52524b4e187f", "filename": "src/tools/miri/tests/fail/never_say_never.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_say_never.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_say_never.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_say_never.stderr?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: entering unreachable code\n   --> $DIR/never_say_never.rs:LL:CC\n    |\n-LL |         *(y as *const _ as *const !)\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ entering unreachable code\n+LL |     f(x)\n+   |     ^^^^ entering unreachable code\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "5258d75bdf78635ce0dab443f7a3bbf8b502b900", "filename": "tests/mir-opt/const_prop/transmute.unreachable_box.ConstProp.32bit.diff", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_box.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_box.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_box.ConstProp.32bit.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,24 +3,20 @@\n   \n   fn unreachable_box() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/transmute.rs:+0:36: +0:37\n-      let mut _1: !;                       // in scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-      let _2: std::boxed::Box<Never>;      // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-      let mut _3: !;                       // in scope 0 at $DIR/transmute.rs:+2:5: +2:16\n+      let _1: std::boxed::Box<Never>;      // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n       scope 1 {\n-          debug x => _2;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n+          debug x => _1;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n       }\n       scope 2 {\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-          StorageLive(_2);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n--         _2 = const 1_usize as std::boxed::Box<Never> (Transmute); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n-+         _2 = const Box::<Never>(Unique::<Never> {{ pointer: NonNull::<Never> {{ pointer: {0x1 as *const Never} }}, _marker: PhantomData::<Never> }}, std::alloc::Global); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n+          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+-         _1 = const 1_usize as std::boxed::Box<Never> (Transmute); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n++         _1 = const Box::<Never>(Unique::<Never> {{ pointer: NonNull::<Never> {{ pointer: {0x1 as *const Never} }}, _marker: PhantomData::<Never> }}, std::alloc::Global); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n +                                          // mir::Constant\n +                                          // + span: no-location\n +                                          // + literal: Const { ty: Box<Never>, val: Value(Scalar(0x00000001)) }\n-          StorageLive(_3);                 // scope 1 at $DIR/transmute.rs:+2:5: +2:16\n           unreachable;                     // scope 1 at $DIR/transmute.rs:+2:11: +2:13\n       }\n   }"}, {"sha": "7e57e06a5cf8b136531e06f4cca4c75cd93cf500", "filename": "tests/mir-opt/const_prop/transmute.unreachable_box.ConstProp.64bit.diff", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_box.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_box.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_box.ConstProp.64bit.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,24 +3,20 @@\n   \n   fn unreachable_box() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/transmute.rs:+0:36: +0:37\n-      let mut _1: !;                       // in scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-      let _2: std::boxed::Box<Never>;      // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-      let mut _3: !;                       // in scope 0 at $DIR/transmute.rs:+2:5: +2:16\n+      let _1: std::boxed::Box<Never>;      // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n       scope 1 {\n-          debug x => _2;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n+          debug x => _1;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n       }\n       scope 2 {\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-          StorageLive(_2);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n--         _2 = const 1_usize as std::boxed::Box<Never> (Transmute); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n-+         _2 = const Box::<Never>(Unique::<Never> {{ pointer: NonNull::<Never> {{ pointer: {0x1 as *const Never} }}, _marker: PhantomData::<Never> }}, std::alloc::Global); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n+          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+-         _1 = const 1_usize as std::boxed::Box<Never> (Transmute); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n++         _1 = const Box::<Never>(Unique::<Never> {{ pointer: NonNull::<Never> {{ pointer: {0x1 as *const Never} }}, _marker: PhantomData::<Never> }}, std::alloc::Global); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n +                                          // mir::Constant\n +                                          // + span: no-location\n +                                          // + literal: Const { ty: Box<Never>, val: Value(Scalar(0x0000000000000001)) }\n-          StorageLive(_3);                 // scope 1 at $DIR/transmute.rs:+2:5: +2:16\n           unreachable;                     // scope 1 at $DIR/transmute.rs:+2:11: +2:13\n       }\n   }"}, {"sha": "032681f230ba64d3912d1b327282bb74fb330cc7", "filename": "tests/mir-opt/const_prop/transmute.unreachable_direct.ConstProp.32bit.diff", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_direct.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_direct.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_direct.ConstProp.32bit.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,22 +3,19 @@\n   \n   fn unreachable_direct() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/transmute.rs:+0:39: +0:40\n-      let mut _1: !;                       // in scope 0 at $DIR/transmute.rs:+0:41: +3:2\n-      let _2: Never;                       // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-      let mut _3: ();                      // in scope 0 at $DIR/transmute.rs:+1:39: +1:41\n-      let mut _4: !;                       // in scope 0 at $DIR/transmute.rs:+2:5: +2:15\n+      let _1: Never;                       // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+      let mut _2: ();                      // in scope 0 at $DIR/transmute.rs:+1:39: +1:41\n       scope 1 {\n-          debug x => _2;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n+          debug x => _1;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n       }\n       scope 2 {\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+0:41: +3:2\n-          StorageLive(_2);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-          StorageLive(_3);                 // scope 2 at $DIR/transmute.rs:+1:39: +1:41\n-          _3 = ();                         // scope 2 at $DIR/transmute.rs:+1:39: +1:41\n-          _2 = move _3 as Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:29: +1:42\n+          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+          StorageLive(_2);                 // scope 2 at $DIR/transmute.rs:+1:39: +1:41\n+          _2 = ();                         // scope 2 at $DIR/transmute.rs:+1:39: +1:41\n+          _1 = move _2 as Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:29: +1:42\n           unreachable;                     // scope 2 at $DIR/transmute.rs:+1:29: +1:42\n       }\n   }"}, {"sha": "032681f230ba64d3912d1b327282bb74fb330cc7", "filename": "tests/mir-opt/const_prop/transmute.unreachable_direct.ConstProp.64bit.diff", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_direct.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_direct.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_direct.ConstProp.64bit.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,22 +3,19 @@\n   \n   fn unreachable_direct() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/transmute.rs:+0:39: +0:40\n-      let mut _1: !;                       // in scope 0 at $DIR/transmute.rs:+0:41: +3:2\n-      let _2: Never;                       // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-      let mut _3: ();                      // in scope 0 at $DIR/transmute.rs:+1:39: +1:41\n-      let mut _4: !;                       // in scope 0 at $DIR/transmute.rs:+2:5: +2:15\n+      let _1: Never;                       // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+      let mut _2: ();                      // in scope 0 at $DIR/transmute.rs:+1:39: +1:41\n       scope 1 {\n-          debug x => _2;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n+          debug x => _1;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n       }\n       scope 2 {\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+0:41: +3:2\n-          StorageLive(_2);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-          StorageLive(_3);                 // scope 2 at $DIR/transmute.rs:+1:39: +1:41\n-          _3 = ();                         // scope 2 at $DIR/transmute.rs:+1:39: +1:41\n-          _2 = move _3 as Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:29: +1:42\n+          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+          StorageLive(_2);                 // scope 2 at $DIR/transmute.rs:+1:39: +1:41\n+          _2 = ();                         // scope 2 at $DIR/transmute.rs:+1:39: +1:41\n+          _1 = move _2 as Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:29: +1:42\n           unreachable;                     // scope 2 at $DIR/transmute.rs:+1:29: +1:42\n       }\n   }"}, {"sha": "ec8a62bd62cd6efb073d9a7be3e5459928439baa", "filename": "tests/mir-opt/const_prop/transmute.unreachable_mut.ConstProp.32bit.diff", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_mut.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_mut.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_mut.ConstProp.32bit.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,28 +3,24 @@\n   \n   fn unreachable_mut() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/transmute.rs:+0:36: +0:37\n-      let mut _1: !;                       // in scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-      let _2: &mut Never;                  // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-      let mut _3: &mut Never;              // in scope 0 at $DIR/transmute.rs:+1:34: +1:52\n-      let mut _4: !;                       // in scope 0 at $DIR/transmute.rs:+2:5: +2:16\n+      let _1: &mut Never;                  // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+      let mut _2: &mut Never;              // in scope 0 at $DIR/transmute.rs:+1:34: +1:52\n       scope 1 {\n-          debug x => _2;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n+          debug x => _1;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n       }\n       scope 2 {\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-          StorageLive(_2);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-          StorageLive(_3);                 // scope 0 at $DIR/transmute.rs:+1:34: +1:52\n--         _3 = const 1_usize as &mut Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n-+         _3 = const {0x1 as &mut Never};  // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n+          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+          StorageLive(_2);                 // scope 0 at $DIR/transmute.rs:+1:34: +1:52\n+-         _2 = const 1_usize as &mut Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n++         _2 = const {0x1 as &mut Never};  // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n +                                          // mir::Constant\n +                                          // + span: no-location\n +                                          // + literal: Const { ty: &mut Never, val: Value(Scalar(0x00000001)) }\n-          _2 = &mut (*_3);                 // scope 0 at $DIR/transmute.rs:+1:34: +1:52\n-          StorageDead(_3);                 // scope 0 at $DIR/transmute.rs:+1:54: +1:55\n-          StorageLive(_4);                 // scope 1 at $DIR/transmute.rs:+2:5: +2:16\n+          _1 = &mut (*_2);                 // scope 0 at $DIR/transmute.rs:+1:34: +1:52\n+          StorageDead(_2);                 // scope 0 at $DIR/transmute.rs:+1:54: +1:55\n           unreachable;                     // scope 1 at $DIR/transmute.rs:+2:11: +2:13\n       }\n   }"}, {"sha": "288da6e56c53c43750f17e3297e98f7cd1195b23", "filename": "tests/mir-opt/const_prop/transmute.unreachable_mut.ConstProp.64bit.diff", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_mut.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_mut.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_mut.ConstProp.64bit.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,28 +3,24 @@\n   \n   fn unreachable_mut() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/transmute.rs:+0:36: +0:37\n-      let mut _1: !;                       // in scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-      let _2: &mut Never;                  // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-      let mut _3: &mut Never;              // in scope 0 at $DIR/transmute.rs:+1:34: +1:52\n-      let mut _4: !;                       // in scope 0 at $DIR/transmute.rs:+2:5: +2:16\n+      let _1: &mut Never;                  // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+      let mut _2: &mut Never;              // in scope 0 at $DIR/transmute.rs:+1:34: +1:52\n       scope 1 {\n-          debug x => _2;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n+          debug x => _1;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n       }\n       scope 2 {\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-          StorageLive(_2);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-          StorageLive(_3);                 // scope 0 at $DIR/transmute.rs:+1:34: +1:52\n--         _3 = const 1_usize as &mut Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n-+         _3 = const {0x1 as &mut Never};  // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n+          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+          StorageLive(_2);                 // scope 0 at $DIR/transmute.rs:+1:34: +1:52\n+-         _2 = const 1_usize as &mut Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n++         _2 = const {0x1 as &mut Never};  // scope 2 at $DIR/transmute.rs:+1:34: +1:52\n +                                          // mir::Constant\n +                                          // + span: no-location\n +                                          // + literal: Const { ty: &mut Never, val: Value(Scalar(0x0000000000000001)) }\n-          _2 = &mut (*_3);                 // scope 0 at $DIR/transmute.rs:+1:34: +1:52\n-          StorageDead(_3);                 // scope 0 at $DIR/transmute.rs:+1:54: +1:55\n-          StorageLive(_4);                 // scope 1 at $DIR/transmute.rs:+2:5: +2:16\n+          _1 = &mut (*_2);                 // scope 0 at $DIR/transmute.rs:+1:34: +1:52\n+          StorageDead(_2);                 // scope 0 at $DIR/transmute.rs:+1:54: +1:55\n           unreachable;                     // scope 1 at $DIR/transmute.rs:+2:11: +2:13\n       }\n   }"}, {"sha": "dcca0fca619b0a89f7d8366f4a98bebe99c01682", "filename": "tests/mir-opt/const_prop/transmute.unreachable_ref.ConstProp.32bit.diff", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_ref.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_ref.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_ref.ConstProp.32bit.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,24 +3,20 @@\n   \n   fn unreachable_ref() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/transmute.rs:+0:36: +0:37\n-      let mut _1: !;                       // in scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-      let _2: &Never;                      // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-      let mut _3: !;                       // in scope 0 at $DIR/transmute.rs:+2:5: +2:16\n+      let _1: &Never;                      // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n       scope 1 {\n-          debug x => _2;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n+          debug x => _1;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n       }\n       scope 2 {\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-          StorageLive(_2);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n--         _2 = const 1_usize as &Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:30: +1:48\n-+         _2 = const {0x1 as &Never};      // scope 2 at $DIR/transmute.rs:+1:30: +1:48\n+          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+-         _1 = const 1_usize as &Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:30: +1:48\n++         _1 = const {0x1 as &Never};      // scope 2 at $DIR/transmute.rs:+1:30: +1:48\n +                                          // mir::Constant\n +                                          // + span: no-location\n +                                          // + literal: Const { ty: &Never, val: Value(Scalar(0x00000001)) }\n-          StorageLive(_3);                 // scope 1 at $DIR/transmute.rs:+2:5: +2:16\n           unreachable;                     // scope 1 at $DIR/transmute.rs:+2:11: +2:13\n       }\n   }"}, {"sha": "3a0b967e66f1ad7097c8a2018f567d211fe2bcdd", "filename": "tests/mir-opt/const_prop/transmute.unreachable_ref.ConstProp.64bit.diff", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_ref.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_ref.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Ftransmute.unreachable_ref.ConstProp.64bit.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,24 +3,20 @@\n   \n   fn unreachable_ref() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/transmute.rs:+0:36: +0:37\n-      let mut _1: !;                       // in scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-      let _2: &Never;                      // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n-      let mut _3: !;                       // in scope 0 at $DIR/transmute.rs:+2:5: +2:16\n+      let _1: &Never;                      // in scope 0 at $DIR/transmute.rs:+1:9: +1:10\n       scope 1 {\n-          debug x => _2;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n+          debug x => _1;                   // in scope 1 at $DIR/transmute.rs:+1:9: +1:10\n       }\n       scope 2 {\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+0:38: +3:2\n-          StorageLive(_2);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n--         _2 = const 1_usize as &Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:30: +1:48\n-+         _2 = const {0x1 as &Never};      // scope 2 at $DIR/transmute.rs:+1:30: +1:48\n+          StorageLive(_1);                 // scope 0 at $DIR/transmute.rs:+1:9: +1:10\n+-         _1 = const 1_usize as &Never (Transmute); // scope 2 at $DIR/transmute.rs:+1:30: +1:48\n++         _1 = const {0x1 as &Never};      // scope 2 at $DIR/transmute.rs:+1:30: +1:48\n +                                          // mir::Constant\n +                                          // + span: no-location\n +                                          // + literal: Const { ty: &Never, val: Value(Scalar(0x0000000000000001)) }\n-          StorageLive(_3);                 // scope 1 at $DIR/transmute.rs:+2:5: +2:16\n           unreachable;                     // scope 1 at $DIR/transmute.rs:+2:11: +2:13\n       }\n   }"}, {"sha": "25f472251137d95fe71e4556d76da7e69df8cf2d", "filename": "tests/mir-opt/issue_72181_1.f.built.after.mir", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fissue_72181_1.f.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Fissue_72181_1.f.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fissue_72181_1.f.built.after.mir?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,27 +3,13 @@\n fn f(_1: Void) -> ! {\n     debug v => _1;                       // in scope 0 at $DIR/issue_72181_1.rs:+0:6: +0:7\n     let mut _0: !;                       // return place in scope 0 at $DIR/issue_72181_1.rs:+0:18: +0:19\n-    let mut _2: !;                       // in scope 0 at $DIR/issue_72181_1.rs:+0:20: +2:2\n-    let mut _3: !;                       // in scope 0 at $DIR/issue_72181_1.rs:+1:5: +1:15\n \n     bb0: {\n-        StorageLive(_2);                 // scope 0 at $DIR/issue_72181_1.rs:+0:20: +2:2\n-        StorageLive(_3);                 // scope 0 at $DIR/issue_72181_1.rs:+1:5: +1:15\n         FakeRead(ForMatchedPlace(None), _1); // scope 0 at $DIR/issue_72181_1.rs:+1:11: +1:12\n         unreachable;                     // scope 0 at $DIR/issue_72181_1.rs:+1:11: +1:12\n     }\n \n     bb1: {\n-        unreachable;                     // scope 0 at $DIR/issue_72181_1.rs:+1:5: +1:15\n-    }\n-\n-    bb2: {\n-        StorageDead(_3);                 // scope 0 at $DIR/issue_72181_1.rs:+1:14: +1:15\n-        unreachable;                     // scope 0 at $DIR/issue_72181_1.rs:+0:20: +2:2\n-    }\n-\n-    bb3: {\n-        StorageDead(_2);                 // scope 0 at $DIR/issue_72181_1.rs:+2:1: +2:2\n         return;                          // scope 0 at $DIR/issue_72181_1.rs:+2:2: +2:2\n     }\n }"}, {"sha": "aa5d9619d10a9bdac318fc443b2f08b160f47b92", "filename": "tests/mir-opt/lower_intrinsics.transmute_to_box_uninhabited.LowerIntrinsics.diff", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Flower_intrinsics.transmute_to_box_uninhabited.LowerIntrinsics.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Flower_intrinsics.transmute_to_box_uninhabited.LowerIntrinsics.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Flower_intrinsics.transmute_to_box_uninhabited.LowerIntrinsics.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,26 +3,22 @@\n   \n   fn transmute_to_box_uninhabited() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/lower_intrinsics.rs:+0:49: +0:50\n-      let mut _1: !;                       // in scope 0 at $DIR/lower_intrinsics.rs:+0:51: +3:2\n-      let _2: std::boxed::Box<Never>;      // in scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n-      let mut _3: !;                       // in scope 0 at $DIR/lower_intrinsics.rs:+2:5: +2:16\n+      let _1: std::boxed::Box<Never>;      // in scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n       scope 1 {\n-          debug x => _2;                   // in scope 1 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n+          debug x => _1;                   // in scope 1 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/lower_intrinsics.rs:+0:51: +3:2\n-          StorageLive(_2);                 // scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n--         _2 = transmute::<usize, Box<Never>>(const 1_usize) -> [return: bb1, unwind unreachable]; // scope 0 at $DIR/lower_intrinsics.rs:+1:25: +1:52\n+          StorageLive(_1);                 // scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n+-         _1 = transmute::<usize, Box<Never>>(const 1_usize) -> [return: bb1, unwind unreachable]; // scope 0 at $DIR/lower_intrinsics.rs:+1:25: +1:52\n -                                          // mir::Constant\n -                                          // + span: $DIR/lower_intrinsics.rs:70:25: 70:44\n -                                          // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(usize) -> Box<Never> {transmute::<usize, Box<Never>>}, val: Value(<ZST>) }\n-+         _2 = const 1_usize as std::boxed::Box<Never> (Transmute); // scope 0 at $DIR/lower_intrinsics.rs:+1:25: +1:52\n++         _1 = const 1_usize as std::boxed::Box<Never> (Transmute); // scope 0 at $DIR/lower_intrinsics.rs:+1:25: +1:52\n +         goto -> bb1;                     // scope 0 at $DIR/lower_intrinsics.rs:+1:25: +1:52\n       }\n   \n       bb1: {\n-          StorageLive(_3);                 // scope 1 at $DIR/lower_intrinsics.rs:+2:5: +2:16\n           unreachable;                     // scope 1 at $DIR/lower_intrinsics.rs:+2:11: +2:13\n       }\n   }"}, {"sha": "5fafd45fe85263a1d570d28116dc6bcd3527cc6b", "filename": "tests/mir-opt/lower_intrinsics.transmute_to_mut_uninhabited.LowerIntrinsics.diff", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Flower_intrinsics.transmute_to_mut_uninhabited.LowerIntrinsics.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Flower_intrinsics.transmute_to_mut_uninhabited.LowerIntrinsics.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Flower_intrinsics.transmute_to_mut_uninhabited.LowerIntrinsics.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,26 +3,22 @@\n   \n   fn transmute_to_mut_uninhabited() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/lower_intrinsics.rs:+0:49: +0:50\n-      let mut _1: !;                       // in scope 0 at $DIR/lower_intrinsics.rs:+0:51: +3:2\n-      let _2: &mut Never;                  // in scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n-      let mut _3: !;                       // in scope 0 at $DIR/lower_intrinsics.rs:+2:5: +2:16\n+      let _1: &mut Never;                  // in scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n       scope 1 {\n-          debug x => _2;                   // in scope 1 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n+          debug x => _1;                   // in scope 1 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/lower_intrinsics.rs:+0:51: +3:2\n-          StorageLive(_2);                 // scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n--         _2 = transmute::<usize, &mut Never>(const 1_usize) -> [return: bb1, unwind unreachable]; // scope 0 at $DIR/lower_intrinsics.rs:+1:25: +1:52\n+          StorageLive(_1);                 // scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n+-         _1 = transmute::<usize, &mut Never>(const 1_usize) -> [return: bb1, unwind unreachable]; // scope 0 at $DIR/lower_intrinsics.rs:+1:25: +1:52\n -                                          // mir::Constant\n -                                          // + span: $DIR/lower_intrinsics.rs:64:25: 64:44\n -                                          // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(usize) -> &mut Never {transmute::<usize, &mut Never>}, val: Value(<ZST>) }\n-+         _2 = const 1_usize as &mut Never (Transmute); // scope 0 at $DIR/lower_intrinsics.rs:+1:25: +1:52\n++         _1 = const 1_usize as &mut Never (Transmute); // scope 0 at $DIR/lower_intrinsics.rs:+1:25: +1:52\n +         goto -> bb1;                     // scope 0 at $DIR/lower_intrinsics.rs:+1:25: +1:52\n       }\n   \n       bb1: {\n-          StorageLive(_3);                 // scope 1 at $DIR/lower_intrinsics.rs:+2:5: +2:16\n           unreachable;                     // scope 1 at $DIR/lower_intrinsics.rs:+2:11: +2:13\n       }\n   }"}, {"sha": "08dead13211947021accdb6691f6cfb05f6bee27", "filename": "tests/mir-opt/lower_intrinsics.transmute_to_ref_uninhabited.LowerIntrinsics.diff", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Flower_intrinsics.transmute_to_ref_uninhabited.LowerIntrinsics.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Flower_intrinsics.transmute_to_ref_uninhabited.LowerIntrinsics.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Flower_intrinsics.transmute_to_ref_uninhabited.LowerIntrinsics.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,26 +3,22 @@\n   \n   fn transmute_to_ref_uninhabited() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/lower_intrinsics.rs:+0:49: +0:50\n-      let mut _1: !;                       // in scope 0 at $DIR/lower_intrinsics.rs:+0:51: +3:2\n-      let _2: &Never;                      // in scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n-      let mut _3: !;                       // in scope 0 at $DIR/lower_intrinsics.rs:+2:5: +2:16\n+      let _1: &Never;                      // in scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n       scope 1 {\n-          debug x => _2;                   // in scope 1 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n+          debug x => _1;                   // in scope 1 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/lower_intrinsics.rs:+0:51: +3:2\n-          StorageLive(_2);                 // scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n--         _2 = transmute::<usize, &Never>(const 1_usize) -> [return: bb1, unwind unreachable]; // scope 0 at $DIR/lower_intrinsics.rs:+1:21: +1:48\n+          StorageLive(_1);                 // scope 0 at $DIR/lower_intrinsics.rs:+1:9: +1:10\n+-         _1 = transmute::<usize, &Never>(const 1_usize) -> [return: bb1, unwind unreachable]; // scope 0 at $DIR/lower_intrinsics.rs:+1:21: +1:48\n -                                          // mir::Constant\n -                                          // + span: $DIR/lower_intrinsics.rs:58:21: 58:40\n -                                          // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(usize) -> &Never {transmute::<usize, &Never>}, val: Value(<ZST>) }\n-+         _2 = const 1_usize as &Never (Transmute); // scope 0 at $DIR/lower_intrinsics.rs:+1:21: +1:48\n++         _1 = const 1_usize as &Never (Transmute); // scope 0 at $DIR/lower_intrinsics.rs:+1:21: +1:48\n +         goto -> bb1;                     // scope 0 at $DIR/lower_intrinsics.rs:+1:21: +1:48\n       }\n   \n       bb1: {\n-          StorageLive(_3);                 // scope 1 at $DIR/lower_intrinsics.rs:+2:5: +2:16\n           unreachable;                     // scope 1 at $DIR/lower_intrinsics.rs:+2:11: +2:13\n       }\n   }"}, {"sha": "28e45909c3372213590a5a0c33ba031de48fb9b3", "filename": "tests/mir-opt/lower_intrinsics.unreachable.LowerIntrinsics.diff", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Flower_intrinsics.unreachable.LowerIntrinsics.diff", "raw_url": "https://github.com/rust-lang/rust/raw/140cdcbc9d50713143f8d1f2403d9044eb0a528f/tests%2Fmir-opt%2Flower_intrinsics.unreachable.LowerIntrinsics.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Flower_intrinsics.unreachable.LowerIntrinsics.diff?ref=140cdcbc9d50713143f8d1f2403d9044eb0a528f", "patch": "@@ -3,16 +3,15 @@\n   \n   fn unreachable() -> ! {\n       let mut _0: !;                       // return place in scope 0 at $DIR/lower_intrinsics.rs:+0:25: +0:26\n-      let mut _1: !;                       // in scope 0 at $DIR/lower_intrinsics.rs:+0:27: +2:2\n-      let _2: ();                          // in scope 0 at $DIR/lower_intrinsics.rs:+1:14: +1:45\n-      let mut _3: !;                       // in scope 0 at $DIR/lower_intrinsics.rs:+1:14: +1:45\n+      let _1: ();                          // in scope 0 at $DIR/lower_intrinsics.rs:+1:14: +1:45\n+      let mut _2: !;                       // in scope 0 at $DIR/lower_intrinsics.rs:+1:14: +1:45\n       scope 1 {\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/lower_intrinsics.rs:+1:5: +1:47\n-          StorageLive(_3);                 // scope 1 at $DIR/lower_intrinsics.rs:+1:14: +1:45\n--         _3 = std::intrinsics::unreachable() -> unwind unreachable; // scope 1 at $DIR/lower_intrinsics.rs:+1:14: +1:45\n+          StorageLive(_1);                 // scope 0 at $DIR/lower_intrinsics.rs:+1:5: +1:47\n+          StorageLive(_2);                 // scope 1 at $DIR/lower_intrinsics.rs:+1:14: +1:45\n+-         _2 = std::intrinsics::unreachable() -> unwind unreachable; // scope 1 at $DIR/lower_intrinsics.rs:+1:14: +1:45\n -                                          // mir::Constant\n -                                          // + span: $DIR/lower_intrinsics.rs:31:14: 31:43\n -                                          // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn() -> ! {std::intrinsics::unreachable}, val: Value(<ZST>) }"}]}