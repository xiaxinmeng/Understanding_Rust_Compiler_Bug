{"sha": "c520cf225310e0d1d3ebf513034255cee3f76e30", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1MjBjZjIyNTMxMGUwZDFkM2ViZjUxMzAzNDI1NWNlZTNmNzZlMzA=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-11T16:55:14Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-30T18:31:56Z"}, "message": "Arena-allocate Crate during lowering.", "tree": {"sha": "b930748d4b1b820eabcacce326f389cf2307e700", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b930748d4b1b820eabcacce326f389cf2307e700"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c520cf225310e0d1d3ebf513034255cee3f76e30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c520cf225310e0d1d3ebf513034255cee3f76e30", "html_url": "https://github.com/rust-lang/rust/commit/c520cf225310e0d1d3ebf513034255cee3f76e30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c520cf225310e0d1d3ebf513034255cee3f76e30/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e05cd155feaafec2b94cd11083e8425094ad8806", "url": "https://api.github.com/repos/rust-lang/rust/commits/e05cd155feaafec2b94cd11083e8425094ad8806", "html_url": "https://github.com/rust-lang/rust/commit/e05cd155feaafec2b94cd11083e8425094ad8806"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "7a4e39376a86d7c50318cc3fa19d5b3cb4b7f7af", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c520cf225310e0d1d3ebf513034255cee3f76e30/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c520cf225310e0d1d3ebf513034255cee3f76e30/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=c520cf225310e0d1d3ebf513034255cee3f76e30", "patch": "@@ -296,7 +296,7 @@ pub fn lower_crate<'a, 'hir>(\n     resolver: &'a mut dyn ResolverAstLowering,\n     nt_to_tokenstream: NtToTokenstream,\n     arena: &'hir Arena<'hir>,\n-) -> hir::Crate<'hir> {\n+) -> &'hir hir::Crate<'hir> {\n     let _prof_timer = sess.prof.verbose_generic_activity(\"hir_lowering\");\n \n     LoweringContext {\n@@ -403,7 +403,7 @@ enum AnonymousLifetimeMode {\n }\n \n impl<'a, 'hir> LoweringContext<'a, 'hir> {\n-    fn lower_crate(mut self, c: &Crate) -> hir::Crate<'hir> {\n+    fn lower_crate(mut self, c: &Crate) -> &'hir hir::Crate<'hir> {\n         /// Full-crate AST visitor that inserts into a fresh\n         /// `LoweringContext` any information that may be\n         /// needed from arbitrary locations in the crate,\n@@ -530,7 +530,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             }\n         }\n \n-        hir::Crate {\n+        let krate = hir::Crate {\n             item: module,\n             exported_macros: self.arena.alloc_from_iter(self.exported_macros),\n             non_exported_macro_attrs: self.arena.alloc_from_iter(self.non_exported_macro_attrs),\n@@ -545,7 +545,8 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             proc_macros,\n             trait_map,\n             attrs: self.attrs,\n-        }\n+        };\n+        self.arena.alloc(krate)\n     }\n \n     fn insert_item(&mut self, item: hir::Item<'hir>) -> hir::ItemId {"}, {"sha": "f5a085250a6085edec8ec7d39765aff207b51ddf", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c520cf225310e0d1d3ebf513034255cee3f76e30/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c520cf225310e0d1d3ebf513034255cee3f76e30/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=c520cf225310e0d1d3ebf513034255cee3f76e30", "patch": "@@ -460,7 +460,7 @@ pub fn lower_to_hir<'res, 'tcx>(\n     resolver: &'res mut Resolver<'_>,\n     krate: &'res ast::Crate,\n     arena: &'tcx rustc_ast_lowering::Arena<'tcx>,\n-) -> Crate<'tcx> {\n+) -> &'tcx Crate<'tcx> {\n     // Lower AST to HIR.\n     let hir_crate = rustc_ast_lowering::lower_crate(\n         sess,\n@@ -796,7 +796,6 @@ pub fn create_global_ctxt<'tcx>(\n     let krate = resolver\n         .borrow_mut()\n         .access(|resolver| lower_to_hir(sess, &lint_store, resolver, krate, hir_arena));\n-    let krate = &*hir_arena.alloc(krate);\n     let resolver_outputs = BoxedResolver::to_resolver_outputs(resolver);\n \n     let query_result_on_disk_cache = rustc_incremental::load_query_result_cache(sess);"}]}