{"sha": "343e1570a9b460e3dda85fe87fd6819df99d7943", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0M2UxNTcwYTliNDYwZTNkZGE4NWZlODdmZDY4MTlkZjk5ZDc5NDM=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-03T00:31:30Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-10T00:47:05Z"}, "message": "Add tests for RFC 2632", "tree": {"sha": "b1195e9d781a7f77ea9ed21c8127ab122d650456", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1195e9d781a7f77ea9ed21c8127ab122d650456"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/343e1570a9b460e3dda85fe87fd6819df99d7943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/343e1570a9b460e3dda85fe87fd6819df99d7943", "html_url": "https://github.com/rust-lang/rust/commit/343e1570a9b460e3dda85fe87fd6819df99d7943", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/343e1570a9b460e3dda85fe87fd6819df99d7943/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d843e002bb836be3164bef80d6218228aec974a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d843e002bb836be3164bef80d6218228aec974a8", "html_url": "https://github.com/rust-lang/rust/commit/d843e002bb836be3164bef80d6218228aec974a8"}], "stats": {"total": 334, "additions": 333, "deletions": 1}, "files": [{"sha": "7a187a0518af9d7f404c031d1c3be8f25dbf175f", "filename": "src/test/ui/parser/bounds-type.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Fparser%2Fbounds-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Fparser%2Fbounds-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-type.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -8,6 +8,11 @@ struct S<\n     T: ?for<'a> Trait, // OK\n     T: Tr +, // OK\n     T: ?'a, //~ ERROR `?` may only modify trait bounds, not lifetime bounds\n+\n+    T: ?const Tr, // OK\n+    T: ?const ?Tr, // OK\n+    T: ?const Tr + 'a, // OK\n+    T: ?const 'a, //~ ERROR `?const` may only modify trait bounds, not lifetime bounds\n >;\n \n fn main() {}"}, {"sha": "9a1f2ed398240f48f8da6b140af1848eee8b5fea", "filename": "src/test/ui/parser/bounds-type.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Fparser%2Fbounds-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Fparser%2Fbounds-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-type.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -4,5 +4,11 @@ error: `?` may only modify trait bounds, not lifetime bounds\n LL |     T: ?'a,\n    |        ^\n \n-error: aborting due to previous error\n+error: `?const` may only modify trait bounds, not lifetime bounds\n+  --> $DIR/bounds-type.rs:15:8\n+   |\n+LL |     T: ?const 'a,\n+   |        ^^^^^^\n+\n+error: aborting due to 2 previous errors\n "}, {"sha": "0bf337ad08dbfe682d8090f1a01023c8783d5696", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/feature-gate.gated.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.gated.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,8 @@\n+error: `?const` on trait bounds is not yet implemented\n+  --> $DIR/feature-gate.rs:11:29\n+   |\n+LL | const fn get_assoc_const<S: ?const T>() -> i32 { <S as T>::CONST }\n+   |                             ^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "cf1ed30da0fcce22b8ca46b32439bf13404338d6", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/feature-gate.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,15 @@\n+// revisions: stock gated\n+// gate-test-const_trait_bound_opt_out\n+\n+#![cfg_attr(gated, feature(const_trait_bound_opt_out))]\n+#![allow(incomplete_features)]\n+\n+trait T {\n+    const CONST: i32;\n+}\n+\n+const fn get_assoc_const<S: ?const T>() -> i32 { <S as T>::CONST }\n+//[stock]~^ ERROR `?const` on trait bounds is experimental\n+//[stock,gated]~^^ ERROR `?const` on trait bounds is not yet implemented\n+\n+fn main() {}"}, {"sha": "64388004b5b72b7fca9b85d8994e4f3b7bf33410", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/feature-gate.stock.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.stock.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,18 @@\n+error[E0658]: `?const` on trait bounds is experimental\n+  --> $DIR/feature-gate.rs:11:29\n+   |\n+LL | const fn get_assoc_const<S: ?const T>() -> i32 { <S as T>::CONST }\n+   |                             ^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/67794\n+   = help: add `#![feature(const_trait_bound_opt_out)]` to the crate attributes to enable\n+\n+error: `?const` on trait bounds is not yet implemented\n+  --> $DIR/feature-gate.rs:11:29\n+   |\n+LL | const fn get_assoc_const<S: ?const T>() -> i32 { <S as T>::CONST }\n+   |                             ^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "e4e6bedd93746b5b257e591719885360741fba13", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-impl-trait.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,25 @@\n+#![feature(const_trait_bound_opt_out)]\n+#![feature(associated_type_bounds)]\n+#![allow(incomplete_features)]\n+\n+trait T {}\n+struct S;\n+impl T for S {}\n+\n+fn rpit() -> impl ?const T { S }\n+//~^ ERROR `?const` is not permitted in `impl Trait`\n+//~| ERROR `?const` on trait bounds is not yet implemented\n+\n+fn apit(_: impl ?const T) {}\n+//~^ ERROR `?const` is not permitted in `impl Trait`\n+//~| ERROR `?const` on trait bounds is not yet implemented\n+\n+fn rpit_assoc_bound() -> impl IntoIterator<Item: ?const T> { Some(S) }\n+//~^ ERROR `?const` is not permitted in `impl Trait`\n+//~| ERROR `?const` on trait bounds is not yet implemented\n+\n+fn apit_assoc_bound(_: impl IntoIterator<Item: ?const T>) {}\n+//~^ ERROR `?const` is not permitted in `impl Trait`\n+//~| ERROR `?const` on trait bounds is not yet implemented\n+\n+fn main() {}"}, {"sha": "f4abd4b714e8a2a3da06d8db048a2ac98b027f7f", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-impl-trait.stderr", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,50 @@\n+error: `?const` is not permitted in `impl Trait`\n+  --> $DIR/in-impl-trait.rs:9:19\n+   |\n+LL | fn rpit() -> impl ?const T { S }\n+   |                   ^^^^^^^^\n+\n+error: `?const` is not permitted in `impl Trait`\n+  --> $DIR/in-impl-trait.rs:13:17\n+   |\n+LL | fn apit(_: impl ?const T) {}\n+   |                 ^^^^^^^^\n+\n+error: `?const` is not permitted in `impl Trait`\n+  --> $DIR/in-impl-trait.rs:17:50\n+   |\n+LL | fn rpit_assoc_bound() -> impl IntoIterator<Item: ?const T> { Some(S) }\n+   |                                                  ^^^^^^^^\n+\n+error: `?const` is not permitted in `impl Trait`\n+  --> $DIR/in-impl-trait.rs:21:48\n+   |\n+LL | fn apit_assoc_bound(_: impl IntoIterator<Item: ?const T>) {}\n+   |                                                ^^^^^^^^\n+\n+error: `?const` on trait bounds is not yet implemented\n+  --> $DIR/in-impl-trait.rs:9:19\n+   |\n+LL | fn rpit() -> impl ?const T { S }\n+   |                   ^^^^^^^^\n+\n+error: `?const` on trait bounds is not yet implemented\n+  --> $DIR/in-impl-trait.rs:13:17\n+   |\n+LL | fn apit(_: impl ?const T) {}\n+   |                 ^^^^^^^^\n+\n+error: `?const` on trait bounds is not yet implemented\n+  --> $DIR/in-impl-trait.rs:17:50\n+   |\n+LL | fn rpit_assoc_bound() -> impl IntoIterator<Item: ?const T> { Some(S) }\n+   |                                                  ^^^^^^^^\n+\n+error: `?const` on trait bounds is not yet implemented\n+  --> $DIR/in-impl-trait.rs:21:48\n+   |\n+LL | fn apit_assoc_bound(_: impl IntoIterator<Item: ?const T>) {}\n+   |                                                ^^^^^^^^\n+\n+error: aborting due to 8 previous errors\n+"}, {"sha": "4523b46bc51f6e31a06ad2b8693891134cbc48c0", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-bounds.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,9 @@\n+#![feature(const_trait_bound_opt_out)]\n+#![allow(incomplete_features)]\n+\n+trait Super {}\n+trait T: ?const Super {}\n+//~^ ERROR `?const` is not permitted in supertraits\n+//~| ERROR `?const` on trait bounds is not yet implemented\n+\n+fn main() {}"}, {"sha": "8003361be7d2efacc3df4a1fcb750a6cf7a2d6b9", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-bounds.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,14 @@\n+error: `?const` is not permitted in supertraits\n+  --> $DIR/in-trait-bounds.rs:5:10\n+   |\n+LL | trait T: ?const Super {}\n+   |          ^^^^^^^^^^^^\n+\n+error: `?const` on trait bounds is not yet implemented\n+  --> $DIR/in-trait-bounds.rs:5:10\n+   |\n+LL | trait T: ?const Super {}\n+   |          ^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "490fae6d91a15315db95b8e7b5272a8154dd2ea8", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-object.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,18 @@\n+#![feature(const_trait_bound_opt_out)]\n+#![allow(bare_trait_objects)]\n+#![allow(incomplete_features)]\n+\n+struct S;\n+trait T {}\n+impl T for S {}\n+\n+// An inherent impl for the trait object `?const T`.\n+impl ?const T {}\n+//~^ ERROR `?const` is not permitted in trait objects\n+//~| ERROR `?const` on trait bounds is not yet implemented\n+\n+fn trait_object() -> &'static dyn ?const T { &S }\n+//~^ ERROR `?const` is not permitted in trait objects\n+//~| ERROR `?const` on trait bounds is not yet implemented\n+\n+fn main() {}"}, {"sha": "19d52e51b3797e851c3da52b1d5ba3de4c5c71ce", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-object.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,26 @@\n+error: `?const` is not permitted in trait objects\n+  --> $DIR/in-trait-object.rs:10:6\n+   |\n+LL | impl ?const T {}\n+   |      ^^^^^^^^\n+\n+error: `?const` is not permitted in trait objects\n+  --> $DIR/in-trait-object.rs:14:35\n+   |\n+LL | fn trait_object() -> &'static dyn ?const T { &S }\n+   |                                   ^^^^^^^^\n+\n+error: `?const` on trait bounds is not yet implemented\n+  --> $DIR/in-trait-object.rs:10:6\n+   |\n+LL | impl ?const T {}\n+   |      ^^^^^^^^\n+\n+error: `?const` on trait bounds is not yet implemented\n+  --> $DIR/in-trait-object.rs:14:35\n+   |\n+LL | fn trait_object() -> &'static dyn ?const T { &S }\n+   |                                   ^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "01e941a8fba451fe03f59f59041d29a1c4fa1af2", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/opt-out-twice.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,8 @@\n+// compile-flags: -Z parse-only\n+\n+#![feature(const_trait_bound_opt_out)]\n+#![allow(incomplete_features)]\n+\n+struct S<T: ?const ?const Tr>;\n+//~^ ERROR expected identifier, found keyword `const`\n+//~| ERROR expected one of `(`, `+`, `,`, `::`, `<`, `=`, or `>`"}, {"sha": "f7924b3f24db39a0b176323c00824bdfca18d3d5", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/opt-out-twice.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,14 @@\n+error: expected identifier, found keyword `const`\n+  --> $DIR/opt-out-twice.rs:6:21\n+   |\n+LL | struct S<T: ?const ?const Tr>;\n+   |                     ^^^^^ expected identifier, found keyword\n+\n+error: expected one of `(`, `+`, `,`, `::`, `<`, `=`, or `>`, found `Tr`\n+  --> $DIR/opt-out-twice.rs:6:27\n+   |\n+LL | struct S<T: ?const ?const Tr>;\n+   |                           ^^ expected one of 7 possible tokens\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "a0d9610bbb5e2b6517648d34923757c46894be62", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/syntax.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fsyntax.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,10 @@\n+// compile-flags: -Z parse-only\n+// check-pass\n+\n+#![feature(const_trait_bound_opt_out)]\n+#![allow(incomplete_features)]\n+\n+struct S<\n+    T: ?const ?for<'a> Tr<'a> + 'static + ?const std::ops::Add,\n+    T: ?const ?for<'a: 'b> m::Trait<'a>,\n+>;"}, {"sha": "b904a2eec0dd0f531e998be78a2694059869f0f5", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/without-question-mark.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,7 @@\n+// compile-flags: -Z parse-only\n+\n+#![feature(const_trait_bound_opt_out)]\n+#![allow(incomplete_features)]\n+\n+struct S<T: const Tr>;\n+//~^ ERROR expected one of `!`, `(`, `,`, `=`, `>`, `?`, `for`, lifetime, or path"}, {"sha": "0dbca952c037ec8161df6a9bcc3a94d56328916a", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/without-question-mark.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,8 @@\n+error: expected one of `!`, `(`, `,`, `=`, `>`, `?`, `for`, lifetime, or path, found keyword `const`\n+  --> $DIR/without-question-mark.rs:6:13\n+   |\n+LL | struct S<T: const Tr>;\n+   |             ^^^^^ expected one of 9 possible tokens\n+\n+error: aborting due to previous error\n+"}, {"sha": "b196f9ef57380b255985db6f25379722c03105e2", "filename": "src/test/ui/rfc-2632-const-trait-impl/feature-gate.gated.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.gated.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,8 @@\n+error: const trait impls are not yet implemented\n+  --> $DIR/feature-gate.rs:9:1\n+   |\n+LL | impl const T for S {}\n+   | ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "49b6c0926c50c18c2f940d2acc53cf7a5fa01303", "filename": "src/test/ui/rfc-2632-const-trait-impl/feature-gate.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,13 @@\n+// revisions: stock gated\n+// gate-test-const_trait_impl\n+\n+#![cfg_attr(gated, feature(const_trait_impl))]\n+#![allow(incomplete_features)]\n+\n+struct S;\n+trait T {}\n+impl const T for S {}\n+//[stock]~^ ERROR const trait impls are experimental\n+//[stock,gated]~^^ ERROR const trait impls are not yet implemented\n+\n+fn main() {}"}, {"sha": "093946f859ac36ab145bd830924cdced64253077", "filename": "src/test/ui/rfc-2632-const-trait-impl/feature-gate.stock.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ffeature-gate.stock.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,18 @@\n+error[E0658]: const trait impls are experimental\n+  --> $DIR/feature-gate.rs:9:6\n+   |\n+LL | impl const T for S {}\n+   |      ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/67792\n+   = help: add `#![feature(const_trait_impl)]` to the crate attributes to enable\n+\n+error: const trait impls are not yet implemented\n+  --> $DIR/feature-gate.rs:9:1\n+   |\n+LL | impl const T for S {}\n+   | ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "98d3a220d8674d8b98f7eae5a3a2c52f5c3a291e", "filename": "src/test/ui/rfc-2632-const-trait-impl/impl-opt-out-trait.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-opt-out-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-opt-out-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-opt-out-trait.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,11 @@\n+#![feature(const_trait_bound_opt_out)]\n+#![feature(const_trait_impl)]\n+#![allow(incomplete_features)]\n+\n+struct S;\n+trait T {}\n+\n+impl ?const T for S {}\n+//~^ ERROR expected a trait, found type\n+\n+fn main() {}"}, {"sha": "8f923efb093f3f0feffae3c9e765a661b0535a93", "filename": "src/test/ui/rfc-2632-const-trait-impl/impl-opt-out-trait.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-opt-out-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-opt-out-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-opt-out-trait.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,8 @@\n+error: expected a trait, found type\n+  --> $DIR/impl-opt-out-trait.rs:8:6\n+   |\n+LL | impl ?const T for S {}\n+   |      ^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "9cffe75addd63b76bbabc2874047119bca8ab4df", "filename": "src/test/ui/rfc-2632-const-trait-impl/inherent-impl.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,14 @@\n+// compile-flags: -Z parse-only\n+\n+#![feature(const_trait_impl)]\n+#![feature(const_trait_bound_opt_out)]\n+#![allow(incomplete_features)]\n+#![allow(bare_trait_objects)]\n+\n+struct S;\n+trait T {}\n+\n+impl const T {}\n+//~^ ERROR `const` cannot modify an inherent impl\n+\n+fn main() {}"}, {"sha": "1d245576559513774c0f1ecea0c21f19e1b6be66", "filename": "src/test/ui/rfc-2632-const-trait-impl/inherent-impl.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.stderr?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,10 @@\n+error: `const` cannot modify an inherent impl\n+  --> $DIR/inherent-impl.rs:11:6\n+   |\n+LL | impl const T {}\n+   |      ^^^^^\n+   |\n+   = help: only a trait impl can be `const`\n+\n+error: aborting due to previous error\n+"}, {"sha": "354d48d630f7b6c14a6d0b6e2a78005c8af5b91d", "filename": "src/test/ui/rfc-2632-const-trait-impl/syntax.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343e1570a9b460e3dda85fe87fd6819df99d7943/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fsyntax.rs?ref=343e1570a9b460e3dda85fe87fd6819df99d7943", "patch": "@@ -0,0 +1,9 @@\n+// compile-flags: -Z parse-only\n+// check-pass\n+\n+#![feature(const_trait_bound_opt_out)]\n+#![feature(const_trait_impl)]\n+#![allow(incomplete_features)]\n+\n+// For now, this parses since an error does not occur until AST lowering.\n+impl ?const T {}"}]}