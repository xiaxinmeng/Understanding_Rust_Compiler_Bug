{"sha": "a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZGM1ZjFiNWNjNzkzMjQ3NzIyNTEyOGIyYzZjOWU4ZGZmOWNkNzM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-08T18:14:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-08T18:14:18Z"}, "message": "Improve tree building", "tree": {"sha": "5fde33bb0e3887a015e08315ca562d6757a7e8c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fde33bb0e3887a015e08315ca562d6757a7e8c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73", "html_url": "https://github.com/rust-lang/rust/commit/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fa5b2ffbc0f1dd3cfc45adff0329e1bdd46c131", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fa5b2ffbc0f1dd3cfc45adff0329e1bdd46c131", "html_url": "https://github.com/rust-lang/rust/commit/1fa5b2ffbc0f1dd3cfc45adff0329e1bdd46c131"}], "stats": {"total": 80, "additions": 34, "deletions": 46}, "files": [{"sha": "f03ce76c957389042c67565292ad91f2da459c46", "filename": "Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73", "patch": "@@ -16,3 +16,6 @@ parking_lot = \"0.6.0\"\n \n [dev-dependencies]\n testutils = { path = \"./tests/testutils\" }\n+\n+[profile.release]\n+debug = true\n\\ No newline at end of file"}, {"sha": "f6c66743f7f6139107e129568d9c482a9c04caa1", "filename": "cli/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73/cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73/cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cli%2Fsrc%2Fmain.rs?ref=a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73", "patch": "@@ -47,6 +47,7 @@ fn main() -> Result<()> {\n                 println!(\"{}\", file.syntax_tree());\n             }\n             eprintln!(\"parsing: {:?}\", elapsed);\n+            ::std::mem::forget(file);\n         }\n         (\"symbols\", _) => {\n             let file = file()?;"}, {"sha": "70869952c3aeba70334dac0920a5ff421d6247be", "filename": "src/yellow/builder.rs", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73/src%2Fyellow%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73/src%2Fyellow%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fyellow%2Fbuilder.rs?ref=a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73", "patch": "@@ -1,14 +1,14 @@\n use {\n     parser_impl::Sink,\n-    yellow::{GreenNode, GreenNodeBuilder, SyntaxError, SyntaxNode, SyntaxRoot},\n+    yellow::{GreenNode, SyntaxError, SyntaxNode, SyntaxRoot},\n     SyntaxKind, TextRange, TextUnit,\n };\n \n pub(crate) struct GreenBuilder<'a> {\n     text: &'a str,\n-    stack: Vec<GreenNodeBuilder>,\n+    parents: Vec<(SyntaxKind, usize)>,\n+    children: Vec<GreenNode>,\n     pos: TextUnit,\n-    root: Option<GreenNode>,\n     errors: Vec<SyntaxError>,\n }\n \n@@ -18,9 +18,9 @@ impl<'a> Sink<'a> for GreenBuilder<'a> {\n     fn new(text: &'a str) -> Self {\n         GreenBuilder {\n             text,\n-            stack: Vec::new(),\n+            parents: Vec::new(),\n+            children: Vec::new(),\n             pos: 0.into(),\n-            root: None,\n             errors: Vec::new(),\n         }\n     }\n@@ -29,23 +29,24 @@ impl<'a> Sink<'a> for GreenBuilder<'a> {\n         let range = TextRange::offset_len(self.pos, len);\n         self.pos += len;\n         let text = &self.text[range];\n-        let leaf = GreenNodeBuilder::new_leaf(kind, text);\n-        let parent = self.stack.last_mut().unwrap();\n-        parent.push_child(leaf)\n+        self.children.push(\n+            GreenNode::new_leaf(kind, text)\n+        );\n     }\n \n     fn start_internal(&mut self, kind: SyntaxKind) {\n-        self.stack.push(GreenNodeBuilder::new_internal(kind))\n+        let len = self.children.len();\n+        self.parents.push((kind, len));\n     }\n \n     fn finish_internal(&mut self) {\n-        let builder = self.stack.pop().unwrap();\n-        let node = builder.build();\n-        if let Some(parent) = self.stack.last_mut() {\n-            parent.push_child(node);\n-        } else {\n-            self.root = Some(node);\n-        }\n+        let (kind, first_child) = self.parents.pop().unwrap();\n+        let children = self.children\n+            .drain(first_child..)\n+            .collect();\n+        self.children.push(\n+            GreenNode::new_branch(kind, children)\n+        );\n     }\n \n     fn error(&mut self, message: String) {\n@@ -55,8 +56,10 @@ impl<'a> Sink<'a> for GreenBuilder<'a> {\n         })\n     }\n \n-    fn finish(self) -> SyntaxNode {\n-        let root = SyntaxRoot::new(self.root.unwrap(), self.errors);\n+    fn finish(mut self) -> SyntaxNode {\n+        assert_eq!(self.children.len(), 1);\n+        let root = self.children.pop().unwrap();\n+        let root = SyntaxRoot::new(root, self.errors);\n         SyntaxNode::new_owned(root)\n     }\n }"}, {"sha": "5b4ce313a38d85073e9d179527a511e4a08537fd", "filename": "src/yellow/green.rs", "status": "modified", "additions": 8, "deletions": 27, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73/src%2Fyellow%2Fgreen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73/src%2Fyellow%2Fgreen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fyellow%2Fgreen.rs?ref=a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73", "patch": "@@ -12,6 +12,14 @@ pub(crate) enum GreenNode {\n }\n \n impl GreenNode {\n+    pub(crate) fn new_leaf(kind: SyntaxKind, text: &str) -> GreenNode {\n+        GreenNode::Leaf(GreenLeaf::new(kind, text))\n+    }\n+\n+    pub(crate) fn new_branch(kind: SyntaxKind, children: Vec<GreenNode>) -> GreenNode {\n+        GreenNode::Branch(Arc::new(GreenBranch::new(kind, children)))\n+    }\n+\n     pub fn kind(&self) -> SyntaxKind {\n         match self {\n             GreenNode::Leaf(l) => l.kind(),\n@@ -46,33 +54,6 @@ impl GreenNode {\n     }\n }\n \n-pub(crate) struct GreenNodeBuilder {\n-    kind: SyntaxKind,\n-    children: Vec<GreenNode>,\n-}\n-\n-impl GreenNodeBuilder {\n-    pub(crate) fn new_leaf(kind: SyntaxKind, text: &str) -> GreenNode {\n-        GreenNode::Leaf(GreenLeaf::new(kind, text))\n-    }\n-\n-    pub(crate) fn new_internal(kind: SyntaxKind) -> GreenNodeBuilder {\n-        GreenNodeBuilder {\n-            kind,\n-            children: Vec::new(),\n-        }\n-    }\n-\n-    pub(crate) fn push_child(&mut self, node: GreenNode) {\n-        self.children.push(node)\n-    }\n-\n-    pub(crate) fn build(self) -> GreenNode {\n-        let branch = GreenBranch::new(self.kind, self.children);\n-        GreenNode::Branch(Arc::new(branch))\n-    }\n-}\n-\n #[test]\n fn assert_send_sync() {\n     fn f<T: Send + Sync>() {}"}, {"sha": "1b5d4e4dffcd655d9e7e00329ed6a45ad65edc47", "filename": "src/yellow/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73/src%2Fyellow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73/src%2Fyellow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fyellow%2Fmod.rs?ref=a5dc5f1b5cc7932477225128b2c6c9e8dff9cd73", "patch": "@@ -6,7 +6,7 @@ mod syntax;\n pub use self::syntax::{SyntaxNode, SyntaxNodeRef, SyntaxRoot, TreeRoot};\n pub(crate) use self::{\n     builder::GreenBuilder,\n-    green::{GreenNode, GreenNodeBuilder},\n+    green::GreenNode,\n     red::RedNode,\n     syntax::SyntaxError,\n };"}]}