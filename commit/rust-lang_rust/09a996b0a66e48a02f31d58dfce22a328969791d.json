{"sha": "09a996b0a66e48a02f31d58dfce22a328969791d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5YTk5NmIwYTY2ZTQ4YTAyZjMxZDU4ZGZjZTIyYTMyODk2OTc5MWQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-24T08:18:54Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-24T18:49:38Z"}, "message": "Printing values should ignore whether bits are undefined", "tree": {"sha": "38af2c50f4bb448d79b44f3472dc2b973eb638a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38af2c50f4bb448d79b44f3472dc2b973eb638a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09a996b0a66e48a02f31d58dfce22a328969791d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09a996b0a66e48a02f31d58dfce22a328969791d", "html_url": "https://github.com/rust-lang/rust/commit/09a996b0a66e48a02f31d58dfce22a328969791d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09a996b0a66e48a02f31d58dfce22a328969791d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98e5129375d9fb70bf5d173d565e439940d26d04", "url": "https://api.github.com/repos/rust-lang/rust/commits/98e5129375d9fb70bf5d173d565e439940d26d04", "html_url": "https://github.com/rust-lang/rust/commit/98e5129375d9fb70bf5d173d565e439940d26d04"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ce36d013b18150f0505a3c29ab15eada3dcf64c2", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/09a996b0a66e48a02f31d58dfce22a328969791d/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09a996b0a66e48a02f31d58dfce22a328969791d/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=09a996b0a66e48a02f31d58dfce22a328969791d", "patch": "@@ -1899,11 +1899,11 @@ pub fn fmt_const_val<W: Write>(fmt: &mut W, const_val: &ty::Const) -> fmt::Resul\n pub fn print_miri_value<W: Write>(value: Value, ty: Ty, f: &mut W) -> fmt::Result {\n     use ty::TypeVariants::*;\n     match (value, &ty.sty) {\n-        (Value::Scalar(Scalar::Bits { bits: 0, defined: 8 }), &TyBool) => write!(f, \"false\"),\n-        (Value::Scalar(Scalar::Bits { bits: 1, defined: 8 }), &TyBool) => write!(f, \"true\"),\n-        (Value::Scalar(Scalar::Bits { bits, defined: 32 }), &TyFloat(ast::FloatTy::F32)) =>\n+        (Value::Scalar(Scalar::Bits { bits: 0, .. }), &TyBool) => write!(f, \"false\"),\n+        (Value::Scalar(Scalar::Bits { bits: 1, .. }), &TyBool) => write!(f, \"true\"),\n+        (Value::Scalar(Scalar::Bits { bits, .. }), &TyFloat(ast::FloatTy::F32)) =>\n             write!(f, \"{}f32\", Single::from_bits(bits)),\n-        (Value::Scalar(Scalar::Bits { bits, defined: 64 }), &TyFloat(ast::FloatTy::F64)) =>\n+        (Value::Scalar(Scalar::Bits { bits, .. }), &TyFloat(ast::FloatTy::F64)) =>\n             write!(f, \"{}f64\", Double::from_bits(bits)),\n         (Value::Scalar(Scalar::Bits { bits, .. }), &TyUint(ui)) => write!(f, \"{:?}{}\", bits, ui),\n         (Value::Scalar(Scalar::Bits { bits, .. }), &TyInt(i)) => {\n@@ -1914,9 +1914,9 @@ pub fn print_miri_value<W: Write>(value: Value, ty: Ty, f: &mut W) -> fmt::Resul\n             let amt = 128 - bit_width;\n             write!(f, \"{:?}{}\", ((bits as i128) << amt) >> amt, i)\n         },\n-        (Value::Scalar(Scalar::Bits { bits, defined: 32 }), &TyChar) =>\n+        (Value::Scalar(Scalar::Bits { bits, .. }), &TyChar) =>\n             write!(f, \"{:?}\", ::std::char::from_u32(bits as u32).unwrap()),\n-        (Value::Scalar(Scalar::Bits { defined: 0, .. }), &TyFnDef(did, _)) =>\n+        (Value::Scalar(Scalar::Bits { .. }), &TyFnDef(did, _)) =>\n             write!(f, \"{}\", item_path_str(did)),\n         (Value::ScalarPair(Scalar::Ptr(ptr), Scalar::Bits { bits: len, .. }),\n          &TyRef(_, &ty::TyS { sty: TyStr, .. }, _)) => {"}]}