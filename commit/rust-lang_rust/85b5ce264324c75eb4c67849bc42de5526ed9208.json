{"sha": "85b5ce264324c75eb4c67849bc42de5526ed9208", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YjVjZTI2NDMyNGM3NWViNGM2Nzg0OWJjNDJkZTU1MjZlZDkyMDg=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-10-06T20:52:32Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-10-16T18:21:20Z"}, "message": "Typeck inline consts", "tree": {"sha": "4e5f15b2660871c6af4ec0ebb70a208a30718f90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e5f15b2660871c6af4ec0ebb70a208a30718f90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85b5ce264324c75eb4c67849bc42de5526ed9208", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAl+J5KAACgkQgTGiTgx5\n7698cQ/9EKqe4+0JSPQCUS6EfarT8gFg9cKGqlm0aFg9JZbYrmLTk4NsUCYCqzTs\nrXYNNCn/ibi6k4MOfd3OUywU1TZB2dP7pDlbWJU1FeDoqvFxDbMgb/pe8hl/ff4g\nEGWguEul/5wtFxtpoWZWg6KQS7oCiLiAdQeDhE8LXj96zq+9mC4PCyC+8Sm87t3d\nH+dnuEjAqL+EMO3VCqQGwvbFNlgxVAZTbv+0ZK57wIPqLznCuZ2Qo5qhhJzagOcb\nAGhFcyqMGNfXk3ZHuVSqjPspD8eDL00kfOkjeKZbYHqWFljaphIIhVtz8MzhHVEz\ndXmQAgBzQ65tp8NFqZWyQEAGyle/E0VHDgLBnzoKhza6RwxgKCZcmQRYj7uYxfU6\nU0AQzpHvt6g2KDLTRoo/qP614avwASi8c96AC1IPxn6GE0FGzB1SirAHomSh41PI\nWAHJRjG+5FoimAK+/67tz95l9kWR/nNaeXV9FBO3dbE4ZIpXVagjH7yWvTzG+Pl3\n8DGUTI7u7/QRgy+ypkLeUWSn6I8iPVH7LxridkVD55l3i3AIOCfO+LyQRnWDJweB\nnCqC6HWR5H9yPY0MqbKUIuBugKXptFuM/Ile+L3rG5T6IjNLzHZVKgQCWi25yHOW\nLnAPRYwrRwVQTIuPMFhJhBs1CqsTpsIn0WUiNrfccdGkyuK1M3g=\n=l1eQ\n-----END PGP SIGNATURE-----", "payload": "tree 4e5f15b2660871c6af4ec0ebb70a208a30718f90\nparent fe922e567fd9768221e8092413f9492998a67451\nauthor Santiago Pastorino <spastorino@gmail.com> 1602017552 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1602872480 -0300\n\nTypeck inline consts\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85b5ce264324c75eb4c67849bc42de5526ed9208", "html_url": "https://github.com/rust-lang/rust/commit/85b5ce264324c75eb4c67849bc42de5526ed9208", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85b5ce264324c75eb4c67849bc42de5526ed9208/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe922e567fd9768221e8092413f9492998a67451", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe922e567fd9768221e8092413f9492998a67451", "html_url": "https://github.com/rust-lang/rust/commit/fe922e567fd9768221e8092413f9492998a67451"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "9990f86a36b1374e97b1eb046ffd44e18f2bc538", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/85b5ce264324c75eb4c67849bc42de5526ed9208/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b5ce264324c75eb4c67849bc42de5526ed9208/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=85b5ce264324c75eb4c67849bc42de5526ed9208", "patch": "@@ -286,6 +286,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n             ExprKind::DropTemps(ref e) => self.check_expr_with_expectation(e, expected),\n             ExprKind::Array(ref args) => self.check_expr_array(args, expected, expr),\n+            ExprKind::ConstBlock(ref anon_const) => self.to_const(anon_const).ty,\n             ExprKind::Repeat(ref element, ref count) => {\n                 self.check_expr_repeat(element, count, expected, expr)\n             }"}, {"sha": "8cf9abaa04e221d88eac289b6c4f8d1e95205575", "filename": "compiler/rustc_typeck/src/check/mod.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/85b5ce264324c75eb4c67849bc42de5526ed9208/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b5ce264324c75eb4c67849bc42de5526ed9208/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs?ref=85b5ce264324c75eb4c67849bc42de5526ed9208", "patch": "@@ -111,6 +111,7 @@ use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{HirIdMap, Node};\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::Idx;\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::subst::GenericArgKind;\n@@ -528,7 +529,20 @@ fn typeck_with_fallback<'tcx>(\n                     hir::TyKind::Infer => Some(AstConv::ast_ty_to_ty(&fcx, ty)),\n                     _ => None,\n                 })\n-                .unwrap_or_else(fallback);\n+                .unwrap_or_else(|| match tcx.hir().get(id) {\n+                    Node::AnonConst(_) => match tcx.hir().get(tcx.hir().get_parent_node(id)) {\n+                        Node::Expr(&hir::Expr {\n+                            kind: hir::ExprKind::ConstBlock(ref anon_const),\n+                            ..\n+                        }) if anon_const.hir_id == id => fcx.next_ty_var(TypeVariableOrigin {\n+                            kind: TypeVariableOriginKind::TypeInference,\n+                            span,\n+                        }),\n+                        _ => fallback(),\n+                    },\n+                    _ => fallback(),\n+                });\n+\n             let expected_type = fcx.normalize_associated_types_in(body.value.span, &expected_type);\n             fcx.require_type_is_sized(expected_type, body.value.span, traits::ConstSized);\n "}, {"sha": "5e8c621140834f21ada8018b6d3c2e4ae919e84b", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/85b5ce264324c75eb4c67849bc42de5526ed9208/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b5ce264324c75eb4c67849bc42de5526ed9208/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=85b5ce264324c75eb4c67849bc42de5526ed9208", "patch": "@@ -309,6 +309,12 @@ pub(super) fn type_of(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n                     tcx.types.usize\n                 }\n \n+                Node::Expr(&Expr { kind: ExprKind::ConstBlock(ref anon_const), .. })\n+                    if anon_const.hir_id == hir_id =>\n+                {\n+                    tcx.typeck(def_id).node_type(anon_const.hir_id)\n+                }\n+\n                 Node::Variant(Variant { disr_expr: Some(ref e), .. }) if e.hir_id == hir_id => tcx\n                     .adt_def(tcx.hir().get_parent_did(hir_id).to_def_id())\n                     .repr"}, {"sha": "471909a092f7b0243709a716f6e373a720255991", "filename": "compiler/rustc_typeck/src/expr_use_visitor.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/85b5ce264324c75eb4c67849bc42de5526ed9208/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b5ce264324c75eb4c67849bc42de5526ed9208/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs?ref=85b5ce264324c75eb4c67849bc42de5526ed9208", "patch": "@@ -258,7 +258,10 @@ impl<'a, 'tcx> ExprUseVisitor<'a, 'tcx> {\n                 self.consume_exprs(&ia.inputs_exprs);\n             }\n \n-            hir::ExprKind::Continue(..) | hir::ExprKind::Lit(..) | hir::ExprKind::Err => {}\n+            hir::ExprKind::Continue(..)\n+            | hir::ExprKind::Lit(..)\n+            | hir::ExprKind::ConstBlock(..)\n+            | hir::ExprKind::Err => {}\n \n             hir::ExprKind::Loop(ref blk, _, _) => {\n                 self.walk_block(blk);"}, {"sha": "f6ac7aa9155fec3710df3008e2a71736a9ef45ea", "filename": "compiler/rustc_typeck/src/mem_categorization.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/85b5ce264324c75eb4c67849bc42de5526ed9208/compiler%2Frustc_typeck%2Fsrc%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b5ce264324c75eb4c67849bc42de5526ed9208/compiler%2Frustc_typeck%2Fsrc%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fmem_categorization.rs?ref=85b5ce264324c75eb4c67849bc42de5526ed9208", "patch": "@@ -370,6 +370,7 @@ impl<'a, 'tcx> MemCategorizationContext<'a, 'tcx> {\n             | hir::ExprKind::Loop(..)\n             | hir::ExprKind::Match(..)\n             | hir::ExprKind::Lit(..)\n+            | hir::ExprKind::ConstBlock(..)\n             | hir::ExprKind::Break(..)\n             | hir::ExprKind::Continue(..)\n             | hir::ExprKind::Struct(..)"}]}