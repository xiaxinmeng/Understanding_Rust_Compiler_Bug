{"sha": "ef33953c70e361e8ab6b0bb6b0f5604e1f1c7f29", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmMzM5NTNjNzBlMzYxZThhYjZiMGJiNmIwZjU2MDRlMWYxYzdmMjk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-12T15:53:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-12T15:53:32Z"}, "message": "Merge #6205\n\n6205: Fix iterator hint shortening heuristic r=SomeoneToIgnore a=Veykril\n\nTurns out I made a mistake with the heuristic check which is always true, so all iterators exposed from `core` were shortened, including things like ranges. \ud83d\ude05 \n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "225d7ef3d9dea84757125f9185367db2a02dcd52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/225d7ef3d9dea84757125f9185367db2a02dcd52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef33953c70e361e8ab6b0bb6b0f5604e1f1c7f29", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfhHv8CRBK7hj4Ov3rIwAAdHIIAEsBSs+nRmIkdbHC7l50sIRv\nkeW9y3QRiVcfGwkaCRVIyrDKhxRCXpufRhQ4OLULeWkQgrXlG90dk2u6qy4OnaDU\nhgKMEXHC/qp1rJr98J7O882O99c28jiBbgjeu7ZEXOMd1jdzqKWkRY5RaseX1SYj\n8PF2/iGnbxtan3Mj2PdwKC6TgEoc1g6mdsfQaGjdtpvDgmw2QPJIxwkmgD3BP+2q\nf7KKsL4ckRBDVDbJOfZfwOwLeXx9LHbCikuBG/2Lg2pMgmizIBsG1qrR8VJMoOnQ\nhTKEJtWJt85rN/ctQhY9yOr5zCnchX6XmZY+6JWxvk3RWnTNtBXhm1JBL30SaO0=\n=EBh6\n-----END PGP SIGNATURE-----\n", "payload": "tree 225d7ef3d9dea84757125f9185367db2a02dcd52\nparent 3f96c9b3cc214ded2e9326a0e65ce02b5ea2bd65\nparent ed59512d02b5194d362ab6842b66803a334ca40e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1602518012 +0000\ncommitter GitHub <noreply@github.com> 1602518012 +0000\n\nMerge #6205\n\n6205: Fix iterator hint shortening heuristic r=SomeoneToIgnore a=Veykril\n\nTurns out I made a mistake with the heuristic check which is always true, so all iterators exposed from `core` were shortened, including things like ranges. \ud83d\ude05 \n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef33953c70e361e8ab6b0bb6b0f5604e1f1c7f29", "html_url": "https://github.com/rust-lang/rust/commit/ef33953c70e361e8ab6b0bb6b0f5604e1f1c7f29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef33953c70e361e8ab6b0bb6b0f5604e1f1c7f29/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f96c9b3cc214ded2e9326a0e65ce02b5ea2bd65", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f96c9b3cc214ded2e9326a0e65ce02b5ea2bd65", "html_url": "https://github.com/rust-lang/rust/commit/3f96c9b3cc214ded2e9326a0e65ce02b5ea2bd65"}, {"sha": "ed59512d02b5194d362ab6842b66803a334ca40e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed59512d02b5194d362ab6842b66803a334ca40e", "html_url": "https://github.com/rust-lang/rust/commit/ed59512d02b5194d362ab6842b66803a334ca40e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e2079bbcf3dcb9854db19c3140c03bf9691f8fc7", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef33953c70e361e8ab6b0bb6b0f5604e1f1c7f29/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef33953c70e361e8ab6b0bb6b0f5604e1f1c7f29/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=ef33953c70e361e8ab6b0bb6b0f5604e1f1c7f29", "patch": "@@ -220,8 +220,8 @@ fn hint_iterator(\n     }\n     let iter_trait = FamousDefs(sema, krate).core_iter_Iterator()?;\n     let iter_mod = FamousDefs(sema, krate).core_iter()?;\n-    // assert this type comes from `core::iter`\n-    iter_mod.visibility_of(db, &iter_trait.into()).filter(|&vis| vis == hir::Visibility::Public)?;\n+    // assert this struct comes from `core::iter`\n+    iter_mod.visibility_of(db, &strukt.into()).filter(|&vis| vis == hir::Visibility::Public)?;\n     if ty.impls_trait(db, iter_trait, &[]) {\n         let assoc_type_item = iter_trait.items(db).into_iter().find_map(|item| match item {\n             hir::AssocItem::TypeAlias(alias) if alias.name(db) == known::Item => Some(alias),"}]}