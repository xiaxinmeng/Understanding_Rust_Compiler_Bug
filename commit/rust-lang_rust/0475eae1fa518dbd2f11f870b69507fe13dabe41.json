{"sha": "0475eae1fa518dbd2f11f870b69507fe13dabe41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NzVlYWUxZmE1MThkYmQyZjExZjg3MGI2OTUwN2ZlMTNkYWJlNDE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-10-06T15:46:50Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-10-06T15:46:50Z"}, "message": "Rustup to *rustc 1.14.0-nightly (3210fd5c2 2016-10-05)*", "tree": {"sha": "bf4321cbff55266f8c2d70df6ef8c721ef2e2dbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf4321cbff55266f8c2d70df6ef8c721ef2e2dbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0475eae1fa518dbd2f11f870b69507fe13dabe41", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJX9nH5AAoJEF5CfHlMukXohvIQAMZ/bub5wzES44N8Vb6ij/hN\nPRlZCa8zDtEsocrF9Uej9IPubhehQHg8tkdfaApMzxTMG5vtawP90l35j+3czbPi\n9ImREtzD+qbziz8rzSheGbmf14pulB4MJ/miI81MRVWwhvFOksq06nthJlUQVvNP\nyuQadv59Gz04JOajcli/JxHta6KHz3KQYJ2anfdSwUp/zLFn6LCYTBPClKRNACmn\n/3Gvn+DzbFIs5WvYLaNtbB18v9r0j7e3XtRX0r3CtLW7weBOdQmBv7GIVIdFt/rU\nNGCX+XVK/bYJvYf5R1MY1GpymfRD6GycqlWKIm7E4bCkC3q4/4rUGtavHfqidLSn\nTGa8ULq0VCbERJb2Yg8noufxQ5NQiHUxb5jWcfBxP8H7ma42eDUDcMKKvx4snw+J\ncwrAgGG0q61xgWBjqWihgyd35AXJrZ0b6lWxYAWEzdQDAcz+nuWXszxVkhFqvPu8\npDk0XRuR3xm3/IJHkL62dCF3exR/gn2bo5FyrLFU4ekx3yYB4pcOiR9s0qCBsn3G\nWUETK/s+5qqRpqO5lNxwuxFzasZsO0dx4S8/0dkgoj3Y/6bBW7ZZqwr//VOhq2Ov\nC9VE8YOVXoJd9CVciAhM/opJK4QptBs7S1jVu3KbRoX7t/ZZ8UqmMTxMylFrldfz\nmrQnjqh2xFc8IKi6ckwX\n=vNV5\n-----END PGP SIGNATURE-----", "payload": "tree bf4321cbff55266f8c2d70df6ef8c721ef2e2dbb\nparent e851bc7404c14aa752d8c139be6de475163ac5ae\nauthor mcarton <cartonmartin+git@gmail.com> 1475768810 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1475768810 +0200\n\nRustup to *rustc 1.14.0-nightly (3210fd5c2 2016-10-05)*\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0475eae1fa518dbd2f11f870b69507fe13dabe41", "html_url": "https://github.com/rust-lang/rust/commit/0475eae1fa518dbd2f11f870b69507fe13dabe41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0475eae1fa518dbd2f11f870b69507fe13dabe41/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e851bc7404c14aa752d8c139be6de475163ac5ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/e851bc7404c14aa752d8c139be6de475163ac5ae", "html_url": "https://github.com/rust-lang/rust/commit/e851bc7404c14aa752d8c139be6de475163ac5ae"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "4641bb05431303e6d88b4b03941fbfd96f30be8d", "filename": "clippy_lints/src/enum_glob_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0475eae1fa518dbd2f11f870b69507fe13dabe41/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0475eae1fa518dbd2f11f870b69507fe13dabe41/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_glob_use.rs?ref=0475eae1fa518dbd2f11f870b69507fe13dabe41", "patch": "@@ -60,7 +60,7 @@ impl EnumGlobUse {\n                     } else {\n                         let child = cx.sess().cstore.item_children(def.full_def().def_id());\n                         if let Some(child) = child.first() {\n-                            if let Some(Def::Variant(..)) = cx.tcx.sess.cstore.describe_def(child.def_id) {\n+                            if let Def::Variant(..) = child.def {\n                                 span_lint(cx, ENUM_GLOB_USE, item.span, \"don't use glob imports for enum variants\");\n                             }\n                         }"}, {"sha": "f397714e31e022a1fb33a91e6f76b60cc920c5b4", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0475eae1fa518dbd2f11f870b69507fe13dabe41/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0475eae1fa518dbd2f11f870b69507fe13dabe41/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=0475eae1fa518dbd2f11f870b69507fe13dabe41", "patch": "@@ -71,7 +71,9 @@ fn has_no_effect(cx: &LateContext, expr: &Expr) -> bool {\n             let def = cx.tcx.def_map.borrow().get(&callee.id).map(|d| d.full_def());\n             match def {\n                 Some(Def::Struct(..)) |\n-                Some(Def::Variant(..)) => args.iter().all(|arg| has_no_effect(cx, arg)),\n+                Some(Def::Variant(..)) |\n+                Some(Def::StructCtor(..)) |\n+                Some(Def::VariantCtor(..)) => args.iter().all(|arg| has_no_effect(cx, arg)),\n                 _ => false,\n             }\n         }\n@@ -146,7 +148,9 @@ fn reduce_expression<'a>(cx: &LateContext, expr: &'a Expr) -> Option<Vec<&'a Exp\n         Expr_::ExprCall(ref callee, ref args) => {\n             match cx.tcx.def_map.borrow().get(&callee.id).map(PathResolution::full_def) {\n                 Some(Def::Struct(..)) |\n-                Some(Def::Variant(..)) => Some(args.iter().map(Deref::deref).collect()),\n+                Some(Def::Variant(..)) |\n+                Some(Def::StructCtor(..)) |\n+                Some(Def::VariantCtor(..)) => Some(args.iter().map(Deref::deref).collect()),\n                 _ => None,\n             }\n         }"}, {"sha": "6c83d328a00418557e21c08253a2b409d3e2db05", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0475eae1fa518dbd2f11f870b69507fe13dabe41/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0475eae1fa518dbd2f11f870b69507fe13dabe41/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=0475eae1fa518dbd2f11f870b69507fe13dabe41", "patch": "@@ -234,10 +234,10 @@ pub fn path_to_def(cx: &LateContext, path: &[&str]) -> Option<def::Def> {\n             for item in &mem::replace(&mut items, vec![]) {\n                 if item.name.as_str() == *segment {\n                     if path_it.peek().is_none() {\n-                        return cx.tcx.sess.cstore.describe_def(item.def_id);\n+                        return Some(item.def);\n                     }\n \n-                    items = cstore.item_children(item.def_id);\n+                    items = cstore.item_children(item.def.def_id());\n                     break;\n                 }\n             }\n@@ -723,7 +723,7 @@ pub fn is_copy<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: ty::Ty<'tcx>, env: Node\n /// Return whether a pattern is refutable.\n pub fn is_refutable(cx: &LateContext, pat: &Pat) -> bool {\n     fn is_enum_variant(cx: &LateContext, did: NodeId) -> bool {\n-        matches!(cx.tcx.def_map.borrow().get(&did).map(|d| d.full_def()), Some(def::Def::Variant(..)))\n+        matches!(cx.tcx.def_map.borrow().get(&did).map(|d| d.full_def()), Some(def::Def::Variant(..)) | Some(def::Def::VariantCtor(..)))\n     }\n \n     fn are_refutable<'a, I: Iterator<Item=&'a Pat>>(cx: &LateContext, mut i: I) -> bool {"}]}