{"sha": "ccd1cda10eaa570e67d8daccfcb3e0e3b651da2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjZDFjZGExMGVhYTU3MGU2N2Q4ZGFjY2ZjYjNlMGUzYjY1MWRhMmQ=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-02-11T03:45:28Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-02-11T04:10:17Z"}, "message": "Ignore #[phase] on use view items\n\nCloses #11806", "tree": {"sha": "d10d59d520c49c7412f992357816def6a9757912", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d10d59d520c49c7412f992357816def6a9757912"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccd1cda10eaa570e67d8daccfcb3e0e3b651da2d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccd1cda10eaa570e67d8daccfcb3e0e3b651da2d", "html_url": "https://github.com/rust-lang/rust/commit/ccd1cda10eaa570e67d8daccfcb3e0e3b651da2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccd1cda10eaa570e67d8daccfcb3e0e3b651da2d/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47ab5d2d42aaf9e04afe6cc5aa84446e523d83ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/47ab5d2d42aaf9e04afe6cc5aa84446e523d83ff", "html_url": "https://github.com/rust-lang/rust/commit/47ab5d2d42aaf9e04afe6cc5aa84446e523d83ff"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "69611829c7ca9f800c759025e1543af4a78ae47d", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ccd1cda10eaa570e67d8daccfcb3e0e3b651da2d/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccd1cda10eaa570e67d8daccfcb3e0e3b651da2d/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=ccd1cda10eaa570e67d8daccfcb3e0e3b651da2d", "patch": "@@ -394,15 +394,20 @@ pub fn expand_item_mac(it: @ast::Item, fld: &mut MacroExpander)\n pub fn expand_view_item(vi: &ast::ViewItem,\n                         fld: &mut MacroExpander)\n                         -> ast::ViewItem {\n-    let should_load = vi.attrs.iter().any(|attr| {\n-        attr.name().get() == \"phase\" &&\n-            attr.meta_item_list().map_or(false, |phases| {\n-                attr::contains_name(phases, \"syntax\")\n-            })\n-    });\n+    match vi.node {\n+        ast::ViewItemExternMod(..) => {\n+            let should_load = vi.attrs.iter().any(|attr| {\n+                attr.name().get() == \"phase\" &&\n+                    attr.meta_item_list().map_or(false, |phases| {\n+                        attr::contains_name(phases, \"syntax\")\n+                    })\n+            });\n \n-    if should_load {\n-        load_extern_macros(vi, fld);\n+            if should_load {\n+                load_extern_macros(vi, fld);\n+            }\n+        }\n+        ast::ViewItemUse(_) => {}\n     }\n \n     noop_fold_view_item(vi, fld)"}, {"sha": "6819ab347b03600e34e800db9f60dc168e9f53f7", "filename": "src/test/run-pass/phase-use-ignored.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ccd1cda10eaa570e67d8daccfcb3e0e3b651da2d/src%2Ftest%2Frun-pass%2Fphase-use-ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccd1cda10eaa570e67d8daccfcb3e0e3b651da2d/src%2Ftest%2Frun-pass%2Fphase-use-ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fphase-use-ignored.rs?ref=ccd1cda10eaa570e67d8daccfcb3e0e3b651da2d", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//xfail-fast\n+\n+#[feature(phase)];\n+\n+#[phase(syntax)]\n+use std::mem;\n+\n+fn main() {}\n+"}]}