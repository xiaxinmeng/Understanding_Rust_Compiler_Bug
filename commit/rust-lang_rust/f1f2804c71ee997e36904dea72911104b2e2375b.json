{"sha": "f1f2804c71ee997e36904dea72911104b2e2375b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZjI4MDRjNzFlZTk5N2UzNjkwNGRlYTcyOTExMTA0YjJlMjM3NWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T22:59:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T22:59:32Z"}, "message": "move completion items to conv", "tree": {"sha": "e908c071563d91cfdbad64c6dc59f955804d8b1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e908c071563d91cfdbad64c6dc59f955804d8b1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1f2804c71ee997e36904dea72911104b2e2375b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1f2804c71ee997e36904dea72911104b2e2375b", "html_url": "https://github.com/rust-lang/rust/commit/f1f2804c71ee997e36904dea72911104b2e2375b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1f2804c71ee997e36904dea72911104b2e2375b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "328d123f5baeab8ff9a1f63a6744f6eec89818ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/328d123f5baeab8ff9a1f63a6744f6eec89818ab", "html_url": "https://github.com/rust-lang/rust/commit/328d123f5baeab8ff9a1f63a6744f6eec89818ab"}], "stats": {"total": 63, "additions": 33, "deletions": 30}, "files": [{"sha": "9776a82e375e435eb72cad431d55dae48cb86e24", "filename": "crates/gen_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1f2804c71ee997e36904dea72911104b2e2375b/crates%2Fgen_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f1f2804c71ee997e36904dea72911104b2e2375b/crates%2Fgen_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fgen_lsp_server%2FCargo.toml?ref=f1f2804c71ee997e36904dea72911104b2e2375b", "patch": "@@ -12,5 +12,5 @@ languageserver-types = \"0.53.0\"\n log = \"0.4.3\"\n failure = \"0.1.2\"\n serde_json = \"1.0.24\"\n-serde = \"1.0.71\"\n+serde = { version = \"1.0.71\", features = [\"derive\"] }\n crossbeam-channel = \"0.2.4\""}, {"sha": "af901d0d29667a1692102682098f775566a05c97", "filename": "crates/gen_lsp_server/src/msg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1f2804c71ee997e36904dea72911104b2e2375b/crates%2Fgen_lsp_server%2Fsrc%2Fmsg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1f2804c71ee997e36904dea72911104b2e2375b/crates%2Fgen_lsp_server%2Fsrc%2Fmsg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fgen_lsp_server%2Fsrc%2Fmsg.rs?ref=f1f2804c71ee997e36904dea72911104b2e2375b", "patch": "@@ -7,7 +7,7 @@ use failure::{bail, format_err};\n \n use crate::Result;\n \n-#[derive(Debug, Serialize, Deserialize, Clone)]\n+#[derive(Serialize, Deserialize, Debug, Clone)]\n #[serde(untagged)]\n pub enum RawMessage {\n     Request(RawRequest),"}, {"sha": "d12f1781e1dba952ba53f77a0fa7a0d18c4b4d2e", "filename": "crates/ra_hir/src/function/scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1f2804c71ee997e36904dea72911104b2e2375b/crates%2Fra_hir%2Fsrc%2Ffunction%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1f2804c71ee997e36904dea72911104b2e2375b/crates%2Fra_hir%2Fsrc%2Ffunction%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ffunction%2Fscope.rs?ref=f1f2804c71ee997e36904dea72911104b2e2375b", "patch": "@@ -95,7 +95,7 @@ impl FnScopes {\n                     r1.start().cmp(&r2.start())\n                 }\n             })\n-            .map(|(ptr, scope)| *scope)\n+            .map(|(_ptr, scope)| *scope)\n             .unwrap_or(original_scope)\n     }\n "}, {"sha": "973e0915eddf8e5e5d365cc964936dbf6cfe1360", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f1f2804c71ee997e36904dea72911104b2e2375b/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1f2804c71ee997e36904dea72911104b2e2375b/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=f1f2804c71ee997e36904dea72911104b2e2375b", "patch": "@@ -1,8 +1,8 @@\n use languageserver_types::{\n     self, Location, Position, Range, SymbolKind, TextDocumentEdit, TextDocumentIdentifier,\n-    TextDocumentItem, TextDocumentPositionParams, Url, VersionedTextDocumentIdentifier,\n+    TextDocumentItem, TextDocumentPositionParams, Url, VersionedTextDocumentIdentifier, InsertTextFormat,\n };\n-use ra_analysis::{FileId, FileSystemEdit, SourceChange, SourceFileEdit, FilePosition};\n+use ra_analysis::{FileId, FileSystemEdit, SourceChange, SourceFileEdit, FilePosition, CompletionItem, InsertText};\n use ra_editor::{LineCol, LineIndex};\n use ra_text_edit::{AtomTextEdit, TextEdit};\n use ra_syntax::{SyntaxKind, TextRange, TextUnit};\n@@ -45,6 +45,30 @@ impl Conv for SyntaxKind {\n     }\n }\n \n+impl Conv for CompletionItem {\n+    type Output = ::languageserver_types::CompletionItem;\n+\n+    fn conv(self) -> <Self as Conv>::Output {\n+        let mut res = ::languageserver_types::CompletionItem {\n+            label: self.label().to_string(),\n+            filter_text: Some(self.lookup().to_string()),\n+            ..Default::default()\n+        };\n+        match self.insert_text() {\n+            InsertText::PlainText { text } => {\n+                res.insert_text = Some(text);\n+                res.insert_text_format = Some(InsertTextFormat::PlainText);\n+            }\n+            InsertText::Snippet { text } => {\n+                res.insert_text = Some(text);\n+                res.insert_text_format = Some(InsertTextFormat::Snippet);\n+                res.kind = Some(languageserver_types::CompletionItemKind::Keyword);\n+            }\n+        }\n+        res\n+    }\n+}\n+\n impl ConvWith for Position {\n     type Ctx = LineIndex;\n     type Output = TextUnit;"}, {"sha": "252d1ba3ead1301dda7c755be21404deda4b44a6", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 4, "deletions": 25, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f1f2804c71ee997e36904dea72911104b2e2375b/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1f2804c71ee997e36904dea72911104b2e2375b/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=f1f2804c71ee997e36904dea72911104b2e2375b", "patch": "@@ -2,13 +2,13 @@ use std::collections::HashMap;\n \n use gen_lsp_server::ErrorCode;\n use languageserver_types::{\n-    CodeActionResponse, Command, CompletionItem, CompletionItemKind, Diagnostic,\n+    CodeActionResponse, Command, Diagnostic,\n     DiagnosticSeverity, DocumentSymbol, Documentation, FoldingRange, FoldingRangeKind,\n-    FoldingRangeParams, InsertTextFormat, Location, MarkupContent, MarkupKind, MarkedString, Position,\n+    FoldingRangeParams, Location, MarkupContent, MarkupKind, MarkedString, Position,\n     PrepareRenameResponse, RenameParams, SymbolInformation, TextDocumentIdentifier, TextEdit,\n     WorkspaceEdit, ParameterInformation, ParameterLabel, SignatureInformation, Hover, HoverContents,\n };\n-use ra_analysis::{FileId, FoldKind, Query, RunnableKind, FilePosition, InsertText};\n+use ra_analysis::{FileId, FoldKind, Query, RunnableKind, FilePosition};\n use ra_syntax::{TextUnit, text_utils::intersect};\n use ra_text_edit::text_utils::contains_offset_nonstrict;\n use rustc_hash::FxHashMap;\n@@ -419,28 +419,7 @@ pub fn handle_completion(\n         None => return Ok(None),\n         Some(items) => items,\n     };\n-    let items = items\n-        .into_iter()\n-        .map(|item| {\n-            let mut res = CompletionItem {\n-                label: item.label().to_string(),\n-                filter_text: Some(item.lookup().to_string()),\n-                ..Default::default()\n-            };\n-            match item.insert_text() {\n-                InsertText::PlainText { text } => {\n-                    res.insert_text = Some(text);\n-                    res.insert_text_format = Some(InsertTextFormat::PlainText);\n-                }\n-                InsertText::Snippet { text } => {\n-                    res.insert_text = Some(text);\n-                    res.insert_text_format = Some(InsertTextFormat::Snippet);\n-                    res.kind = Some(CompletionItemKind::Keyword);\n-                }\n-            }\n-            res\n-        })\n-        .collect();\n+    let items = items.into_iter().map(|item| item.conv()).collect();\n \n     Ok(Some(req::CompletionResponse::Array(items)))\n }"}]}