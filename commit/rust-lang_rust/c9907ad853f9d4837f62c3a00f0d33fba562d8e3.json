{"sha": "c9907ad853f9d4837f62c3a00f0d33fba562d8e3", "node_id": "C_kwDOAAsO6NoAKGM5OTA3YWQ4NTNmOWQ0ODM3ZjYyYzNhMDBmMGQzM2ZiYTU2MmQ4ZTM", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-02-02T06:01:44Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-02-02T06:01:44Z"}, "message": "In retrospect, MachineApplicable is probably too confident", "tree": {"sha": "2ea7313c53c1653f734b3a858b75302418829b4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ea7313c53c1653f734b3a858b75302418829b4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9907ad853f9d4837f62c3a00f0d33fba562d8e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9907ad853f9d4837f62c3a00f0d33fba562d8e3", "html_url": "https://github.com/rust-lang/rust/commit/c9907ad853f9d4837f62c3a00f0d33fba562d8e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9907ad853f9d4837f62c3a00f0d33fba562d8e3/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "214ce5702c2f1eb5c098e5e393df09c3b1829572", "url": "https://api.github.com/repos/rust-lang/rust/commits/214ce5702c2f1eb5c098e5e393df09c3b1829572", "html_url": "https://github.com/rust-lang/rust/commit/214ce5702c2f1eb5c098e5e393df09c3b1829572"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "24fc97f234149e365dd8b56f3d6f087b8397b82c", "filename": "src/librustdoc/passes/html_tags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9907ad853f9d4837f62c3a00f0d33fba562d8e3/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9907ad853f9d4837f62c3a00f0d33fba562d8e3/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs?ref=c9907ad853f9d4837f62c3a00f0d33fba562d8e3", "patch": "@@ -239,7 +239,7 @@ impl<'a, 'tcx> DocVisitor for InvalidHtmlTagsLinter<'a, 'tcx> {\n                                 generics_sp,\n                                 \"try marking as source code with `backticks`\",\n                                 format!(\"`{}`\", generics_snippet),\n-                                Applicability::MachineApplicable,\n+                                Applicability::MaybeIncorrect,\n                             );\n                         } else {\n                             diag.span_help("}]}