{"sha": "babc4797831367b18ca4bec32ad8b98c3074148b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYmM0Nzk3ODMxMzY3YjE4Y2E0YmVjMzJhZDhiOThjMzA3NDE0OGI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-14T14:25:36Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-14T14:25:36Z"}, "message": "Use space_before_colon and space_after_colon", "tree": {"sha": "05663d1636d2338dd4890676d9601e335646b9be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05663d1636d2338dd4890676d9601e335646b9be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/babc4797831367b18ca4bec32ad8b98c3074148b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/babc4797831367b18ca4bec32ad8b98c3074148b", "html_url": "https://github.com/rust-lang/rust/commit/babc4797831367b18ca4bec32ad8b98c3074148b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/babc4797831367b18ca4bec32ad8b98c3074148b/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15ded04f46eef3a19cb2e843c6c084e63a2af009", "url": "https://api.github.com/repos/rust-lang/rust/commits/15ded04f46eef3a19cb2e843c6c084e63a2af009", "html_url": "https://github.com/rust-lang/rust/commit/15ded04f46eef3a19cb2e843c6c084e63a2af009"}], "stats": {"total": 48, "additions": 12, "deletions": 36}, "files": [{"sha": "1e990c68a9f216d724366d547996b45af11d1943", "filename": "src/config.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/babc4797831367b18ca4bec32ad8b98c3074148b/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babc4797831367b18ca4bec32ad8b98c3074148b/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=babc4797831367b18ca4bec32ad8b98c3074148b", "patch": "@@ -613,18 +613,8 @@ create_config! {\n                                     indentation level as the match keyword\";\n     match_pattern_separator_break_point: SeparatorPlace, SeparatorPlace::Back, false,\n         \"Put a match sub-patterns' separator in front or back.\";\n-    space_before_type_annotation: bool, false, false,\n-        \"Leave a space before the colon in a type annotation\";\n-    space_after_type_annotation_colon: bool, true, false,\n-        \"Leave a space after the colon in a type annotation\";\n-    space_before_struct_lit_field_colon: bool, false, false,\n-        \"Leave a space before the colon in a struct literal field\";\n-    space_after_struct_lit_field_colon: bool, true, false,\n-        \"Leave a space after the colon in a struct literal field\";\n-    space_before_bound: bool, false, false,\n-        \"Leave a space before the colon in a trait or lifetime bound\";\n-    space_after_bound_colon: bool, true, false,\n-        \"Leave a space after the colon in a trait or lifetime bound\";\n+    space_before_colon: bool, false, false, \"Leave a space before the colon\";\n+    space_after_colon: bool, true, false, \"Leave a space after the colon\";\n     spaces_around_ranges: bool, false, false, \"Put spaces around the  .. and ... range operators\";\n     spaces_within_angle_brackets: bool, false, false,\n         \"Put spaces within non-empty generic arguments\";"}, {"sha": "d9f210f2b8a3d9bbff03de4254d7c8a6e69f8e7a", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/babc4797831367b18ca4bec32ad8b98c3074148b/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babc4797831367b18ca4bec32ad8b98c3074148b/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=babc4797831367b18ca4bec32ad8b98c3074148b", "patch": "@@ -2348,10 +2348,7 @@ pub fn wrap_struct_field(\n }\n \n pub fn struct_lit_field_separator(config: &Config) -> &str {\n-    colon_spaces(\n-        config.space_before_struct_lit_field_colon(),\n-        config.space_after_struct_lit_field_colon(),\n-    )\n+    colon_spaces(config.space_before_colon(), config.space_after_colon())\n }\n \n pub fn rewrite_field("}, {"sha": "a01b692d6810e00bce77643b1e92bc7c8aa868a6", "filename": "src/items.rs", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/babc4797831367b18ca4bec32ad8b98c3074148b/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babc4797831367b18ca4bec32ad8b98c3074148b/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=babc4797831367b18ca4bec32ad8b98c3074148b", "patch": "@@ -39,10 +39,7 @@ use vertical::rewrite_with_alignment;\n use visitor::FmtVisitor;\n \n fn type_annotation_separator(config: &Config) -> &str {\n-    colon_spaces(\n-        config.space_before_type_annotation(),\n-        config.space_after_type_annotation_colon(),\n-    )\n+    colon_spaces(config.space_before_colon(), config.space_after_colon())\n }\n \n // Statements of the form\n@@ -1405,16 +1402,8 @@ pub fn rewrite_type_alias(\n \n fn type_annotation_spacing(config: &Config) -> (&str, &str) {\n     (\n-        if config.space_before_type_annotation() {\n-            \" \"\n-        } else {\n-            \"\"\n-        },\n-        if config.space_after_type_annotation_colon() {\n-            \" \"\n-        } else {\n-            \"\"\n-        },\n+        if config.space_before_colon() { \" \" } else { \"\" },\n+        if config.space_after_colon() { \" \" } else { \"\" },\n     )\n }\n \n@@ -1581,8 +1570,8 @@ fn rewrite_static(\n     offset: Indent,\n ) -> Option<String> {\n     let colon = colon_spaces(\n-        context.config.space_before_type_annotation(),\n-        context.config.space_after_type_annotation_colon(),\n+        context.config.space_before_colon(),\n+        context.config.space_after_colon(),\n     );\n     let prefix = format!(\n         \"{}{} {}{}{}\",\n@@ -1701,11 +1690,11 @@ impl Rewrite for ast::Arg {\n                 .rewrite(context, Shape::legacy(shape.width, shape.indent))?;\n \n             if !is_empty_infer(context, &*self.ty) {\n-                if context.config.space_before_type_annotation() {\n+                if context.config.space_before_colon() {\n                     result.push_str(\" \");\n                 }\n                 result.push_str(\":\");\n-                if context.config.space_after_type_annotation_colon() {\n+                if context.config.space_after_colon() {\n                     result.push_str(\" \");\n                 }\n                 let overhead = last_line_width(&result);"}, {"sha": "c28afda38931d94a0ceabc32f7ce932d049c55d3", "filename": "src/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/babc4797831367b18ca4bec32ad8b98c3074148b/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babc4797831367b18ca4bec32ad8b98c3074148b/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=babc4797831367b18ca4bec32ad8b98c3074148b", "patch": "@@ -399,8 +399,8 @@ where\n \n fn type_bound_colon(context: &RewriteContext) -> &'static str {\n     colon_spaces(\n-        context.config.space_before_bound(),\n-        context.config.space_after_bound_colon(),\n+        context.config.space_before_colon(),\n+        context.config.space_after_colon(),\n     )\n }\n "}]}