{"sha": "93c0888b6c6111c645d5aa2ef78da6fe8ab2c307", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzYzA4ODhiNmM2MTExYzY0NWQ1YWEyZWY3OGRhNmZlOGFiMmMzMDc=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-20T11:58:56Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-20T15:40:48Z"}, "message": "librustc: implement and use `fixed_stack_segment` attribute for intrinsics.", "tree": {"sha": "f3d3bd7827324a775411e17eec6908481205c355", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3d3bd7827324a775411e17eec6908481205c355"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93c0888b6c6111c645d5aa2ef78da6fe8ab2c307", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93c0888b6c6111c645d5aa2ef78da6fe8ab2c307", "html_url": "https://github.com/rust-lang/rust/commit/93c0888b6c6111c645d5aa2ef78da6fe8ab2c307", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93c0888b6c6111c645d5aa2ef78da6fe8ab2c307/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ff701b7db609cabe59832d47779832a16627b5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff701b7db609cabe59832d47779832a16627b5f", "html_url": "https://github.com/rust-lang/rust/commit/4ff701b7db609cabe59832d47779832a16627b5f"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "a18ad1738861d1f346a3e864f2237612c5ef0cef", "filename": "src/libcore/unstable/intrinsics.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/93c0888b6c6111c645d5aa2ef78da6fe8ab2c307/src%2Flibcore%2Funstable%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93c0888b6c6111c645d5aa2ef78da6fe8ab2c307/src%2Flibcore%2Funstable%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funstable%2Fintrinsics.rs?ref=93c0888b6c6111c645d5aa2ef78da6fe8ab2c307", "patch": "@@ -70,16 +70,28 @@ pub extern \"rust-intrinsic\" {\n     pub fn powif32(a: f32, x: i32) -> f32;\n     pub fn powif64(a: f64, x: i32) -> f64;\n \n+    // the following kill the stack canary without\n+    // `fixed_stack_segment`. This possibly only affects the f64\n+    // variants, but it's hard to be sure since it seems to only\n+    // occur with fairly specific arguments.\n+    #[fixed_stack_segment]\n     pub fn sinf32(x: f32) -> f32;\n+    #[fixed_stack_segment]\n     pub fn sinf64(x: f64) -> f64;\n \n+    #[fixed_stack_segment]\n     pub fn cosf32(x: f32) -> f32;\n+    #[fixed_stack_segment]\n     pub fn cosf64(x: f64) -> f64;\n \n+    #[fixed_stack_segment]\n     pub fn powf32(a: f32, x: f32) -> f32;\n+    #[fixed_stack_segment]\n     pub fn powf64(a: f64, x: f64) -> f64;\n \n+    #[fixed_stack_segment]\n     pub fn expf32(x: f32) -> f32;\n+    #[fixed_stack_segment]\n     pub fn expf64(x: f64) -> f64;\n \n     pub fn exp2f32(x: f32) -> f32;\n@@ -128,4 +140,3 @@ pub extern \"rust-intrinsic\" {\n     pub fn bswap32(x: i32) -> i32;\n     pub fn bswap64(x: i64) -> i64;\n }\n-"}, {"sha": "956ee3bf1443e614366fb12415d9ca35693d5abe", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/93c0888b6c6111c645d5aa2ef78da6fe8ab2c307/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93c0888b6c6111c645d5aa2ef78da6fe8ab2c307/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=93c0888b6c6111c645d5aa2ef78da6fe8ab2c307", "patch": "@@ -546,6 +546,7 @@ pub fn trans_intrinsic(ccx: @CrateContext,\n                        item: @ast::foreign_item,\n                        path: ast_map::path,\n                        substs: @param_substs,\n+                       attributes: &[ast::attribute],\n                        ref_id: Option<ast::node_id>) {\n     debug!(\"trans_intrinsic(item.ident=%s)\", *ccx.sess.str_of(item.ident));\n \n@@ -561,6 +562,11 @@ pub fn trans_intrinsic(ccx: @CrateContext,\n                                Some(copy substs),\n                                Some(item.span));\n \n+    // Set the fixed stack segment flag if necessary.\n+    if attr::attrs_contains_name(attributes, \"fixed_stack_segment\") {\n+        set_fixed_stack_segment(fcx.llfn);\n+    }\n+\n     let mut bcx = top_scope_block(fcx, None), lltop = bcx.llbb;\n     match *ccx.sess.str_of(item.ident) {\n         ~\"atomic_cxchg\" => {"}, {"sha": "52ca8ec49bb7f5c97ad3f4fb5c1ddfce03bc0330", "filename": "src/librustc/middle/trans/monomorphize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93c0888b6c6111c645d5aa2ef78da6fe8ab2c307/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93c0888b6c6111c645d5aa2ef78da6fe8ab2c307/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs?ref=93c0888b6c6111c645d5aa2ef78da6fe8ab2c307", "patch": "@@ -212,7 +212,7 @@ pub fn monomorphic_fn(ccx: @CrateContext,\n       }\n       ast_map::node_foreign_item(i, _, _, _) => {\n           let d = mk_lldecl();\n-          foreign::trans_intrinsic(ccx, d, i, pt, psubsts.get(),\n+          foreign::trans_intrinsic(ccx, d, i, pt, psubsts.get(), i.attrs,\n                                 ref_id);\n           d\n       }"}]}