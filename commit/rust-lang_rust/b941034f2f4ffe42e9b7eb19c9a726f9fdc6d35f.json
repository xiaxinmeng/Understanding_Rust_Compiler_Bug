{"sha": "b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NDEwMzRmMmY0ZmZlNDJlOWI3ZWIxOWM5YTcyNmY5ZmRjNmQzNWY=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-11-11T18:11:24Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-11-12T12:20:19Z"}, "message": "qualify-const remove cannot mutate statics in initializer of another static error", "tree": {"sha": "b754c2903628c4fbfbcc2e2bd3cc1b11248ce1f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b754c2903628c4fbfbcc2e2bd3cc1b11248ce1f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAl3Ko5YACgkQiMlBzaHU\nZDJWZg//SdEla1JYg5E/G2rIbjHBmMBwND4AY7QB2NYDDgLfPC10KstMlg8E41Bf\nxYdAlOScUZHLkro6JKESDbsFmkA7qJ1t9AGOCL12JqbZuxsyZm+9ZH6kTxsLAbLY\nJFnWFahJ0tvLGjD56rJh8+OCN5anRdkv+njfExJzl36SN1vyVDjizDi/hdmM1CIq\nhTR73/1UeXcMuwl9ocpXhvIWYKEiwBo1vUu/IwYPYDt8Mbv6yOgBcymto+bHaWXV\nZHlvHYr4vhT46hb7kKGZDeIiIUFx3ggxLomieVUA67v3pkzFLOwSLEYJlNqkTzxS\nvvYNoyR3FP55+L1L+kqwVRBLWBPgXTWKeXcq/8/4O5MAqXi5oAH2Y3TyO5H4jq2U\nbVBEWZjyBnpLnFWjAbiKKDljJ4NMQ6OaoLHzxI8UwemhJ597SXjoCa5nlCJOSbZr\nIkEGt5007RRGXMRdPlLSvgqaZa5cFsK7pT/0VeGPHEIw6lhST8AEQIz5J016atsx\njwi/hUj3yOn6wiR2k9lLnSoLeGRVzjDeI3xjTi9INkyZ727HZnpljqwE2X/kFTYv\n7GwYpQoSrkiM6aza0Pp2aw1Ltxy54O0OKIikAw57r6Galqm68YJ7DlyCh1WpuSx5\nDAqJXOeV9u9yzcLjw+ZpmHnBk4p1HD3YLu1MU6zZAJf3P4m3qvw=\n=vlaH\n-----END PGP SIGNATURE-----", "payload": "tree b754c2903628c4fbfbcc2e2bd3cc1b11248ce1f3\nparent 9248b019b22224b6d99cc504edd50bd9ed015d3f\nauthor Santiago Pastorino <spastorino@gmail.com> 1573495884 +0100\ncommitter Santiago Pastorino <spastorino@gmail.com> 1573561219 +0100\n\nqualify-const remove cannot mutate statics in initializer of another static error\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f", "html_url": "https://github.com/rust-lang/rust/commit/b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9248b019b22224b6d99cc504edd50bd9ed015d3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9248b019b22224b6d99cc504edd50bd9ed015d3f", "html_url": "https://github.com/rust-lang/rust/commit/9248b019b22224b6d99cc504edd50bd9ed015d3f"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "15d771ac685f3ac4879e0f4a401457de1c9cadf1", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f", "patch": "@@ -782,19 +782,6 @@ impl<'a, 'tcx> Visitor<'tcx> for Checker<'a, 'tcx> {\n \n                 // Only allow statics (not consts) to refer to other statics.\n                 if self.mode == Mode::Static || self.mode == Mode::StaticMut {\n-                    if self.mode == Mode::Static\n-                        && context.is_mutating_use()\n-                        && !self.suppress_errors\n-                    {\n-                        // this is not strictly necessary as miri will also bail out\n-                        // For interior mutability we can't really catch this statically as that\n-                        // goes through raw pointers and intermediate temporaries, so miri has\n-                        // to catch this anyway\n-                        self.tcx.sess.span_err(\n-                            self.span,\n-                            \"cannot mutate statics in the initializer of another static\",\n-                        );\n-                    }\n                     return;\n                 }\n                 unleash_miri!(self);"}]}