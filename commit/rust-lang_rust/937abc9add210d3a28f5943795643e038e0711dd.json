{"sha": "937abc9add210d3a28f5943795643e038e0711dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzN2FiYzlhZGQyMTBkM2EyOGY1OTQzNzk1NjQzZTAzOGUwNzExZGQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-09-16T10:25:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-16T10:25:45Z"}, "message": "Rollup merge of #54213 - nnethercote:keccak-flow_inits-memory, r=nikomatsakis\n\nDe-overlap the lifetimes of `flow_inits` and `flow_{un,ever_}inits`.\n\nThis reduces `max-rss` for an `nll-check` build by 27% for `keccak`, and\nby 8% for `inflate`.\n\nr? @nikomatsakis", "tree": {"sha": "3566b98d0936460b3b4d5799fa53443b41ee41d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3566b98d0936460b3b4d5799fa53443b41ee41d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/937abc9add210d3a28f5943795643e038e0711dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbni+pCRBK7hj4Ov3rIwAAdHIIAF+7etUWjkdeFq3JMU1E1Qje\nFh2m8h6JYNcZBo2/V6F+QBzXliPmBcwYmlH+UGLoksxnts/FapDF7wsvL3Rso6S5\nyiYtqusY3oj616FMjmsGQ3CnwnN/WIgPrx2C78Tt20DpAPve0CH8G8OPs4DeZ58C\nS7GdpEFiwaHjRrG7pIxiFKP308w4RmyaKJzPvsBX9YnAsStkIrJvdMHjry/9MjN8\nJb83oBYb9Y0lWoRY8LaWuHahyB72KzntcixbCebOgithyFElbV9gwDy4TscJj5ot\ncvBvhBCt/0axzlqc2IVn4pCyiUIWKdyZVa5mI0uETcBSG1EL6ZwUt/heaXNv0bw=\n=DASW\n-----END PGP SIGNATURE-----\n", "payload": "tree 3566b98d0936460b3b4d5799fa53443b41ee41d7\nparent 4f5ab7f6bcd2d3418e21ba2edcf94b81389f6eab\nparent aa9aca0d3d6aa371691d226bd41b4dd4af083a46\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1537093545 +0200\ncommitter GitHub <noreply@github.com> 1537093545 +0200\n\nRollup merge of #54213 - nnethercote:keccak-flow_inits-memory, r=nikomatsakis\n\nDe-overlap the lifetimes of `flow_inits` and `flow_{un,ever_}inits`.\n\nThis reduces `max-rss` for an `nll-check` build by 27% for `keccak`, and\nby 8% for `inflate`.\n\nr? @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/937abc9add210d3a28f5943795643e038e0711dd", "html_url": "https://github.com/rust-lang/rust/commit/937abc9add210d3a28f5943795643e038e0711dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/937abc9add210d3a28f5943795643e038e0711dd/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f5ab7f6bcd2d3418e21ba2edcf94b81389f6eab", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f5ab7f6bcd2d3418e21ba2edcf94b81389f6eab", "html_url": "https://github.com/rust-lang/rust/commit/4f5ab7f6bcd2d3418e21ba2edcf94b81389f6eab"}, {"sha": "aa9aca0d3d6aa371691d226bd41b4dd4af083a46", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa9aca0d3d6aa371691d226bd41b4dd4af083a46", "html_url": "https://github.com/rust-lang/rust/commit/aa9aca0d3d6aa371691d226bd41b4dd4af083a46"}], "stats": {"total": 42, "additions": 24, "deletions": 18}, "files": [{"sha": "3c694fe7b4e58d18ebe6e8c0b0762b5f475df9e0", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/937abc9add210d3a28f5943795643e038e0711dd/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937abc9add210d3a28f5943795643e038e0711dd/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=937abc9add210d3a28f5943795643e038e0711dd", "patch": "@@ -177,24 +177,6 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         MaybeInitializedPlaces::new(tcx, mir, &mdpe),\n         |bd, i| DebugFormatted::new(&bd.move_data().move_paths[i]),\n     ));\n-    let flow_uninits = FlowAtLocation::new(do_dataflow(\n-        tcx,\n-        mir,\n-        id,\n-        &attributes,\n-        &dead_unwinds,\n-        MaybeUninitializedPlaces::new(tcx, mir, &mdpe),\n-        |bd, i| DebugFormatted::new(&bd.move_data().move_paths[i]),\n-    ));\n-    let flow_ever_inits = FlowAtLocation::new(do_dataflow(\n-        tcx,\n-        mir,\n-        id,\n-        &attributes,\n-        &dead_unwinds,\n-        EverInitializedPlaces::new(tcx, mir, &mdpe),\n-        |bd, i| DebugFormatted::new(&bd.move_data().inits[i]),\n-    ));\n \n     let locals_are_invalidated_at_exit = match tcx.hir.body_owner_kind(id) {\n             hir::BodyOwnerKind::Const | hir::BodyOwnerKind::Static(_) => false,\n@@ -216,6 +198,12 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         &borrow_set,\n         &mut errors_buffer,\n     );\n+\n+    // The various `flow_*` structures can be large. We drop `flow_inits` here\n+    // so it doesn't overlap with the others below. This reduces peak memory\n+    // usage significantly on some benchmarks.\n+    drop(flow_inits);\n+\n     let regioncx = Rc::new(regioncx);\n \n     let flow_borrows = FlowAtLocation::new(do_dataflow(\n@@ -227,6 +215,24 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         Borrows::new(tcx, mir, regioncx.clone(), def_id, body_id, &borrow_set),\n         |rs, i| DebugFormatted::new(&rs.location(i)),\n     ));\n+    let flow_uninits = FlowAtLocation::new(do_dataflow(\n+        tcx,\n+        mir,\n+        id,\n+        &attributes,\n+        &dead_unwinds,\n+        MaybeUninitializedPlaces::new(tcx, mir, &mdpe),\n+        |bd, i| DebugFormatted::new(&bd.move_data().move_paths[i]),\n+    ));\n+    let flow_ever_inits = FlowAtLocation::new(do_dataflow(\n+        tcx,\n+        mir,\n+        id,\n+        &attributes,\n+        &dead_unwinds,\n+        EverInitializedPlaces::new(tcx, mir, &mdpe),\n+        |bd, i| DebugFormatted::new(&bd.move_data().inits[i]),\n+    ));\n \n     let movable_generator = match tcx.hir.get(id) {\n         Node::Expr(&hir::Expr {"}]}