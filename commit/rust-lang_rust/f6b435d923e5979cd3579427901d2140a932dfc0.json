{"sha": "f6b435d923e5979cd3579427901d2140a932dfc0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YjQzNWQ5MjNlNTk3OWNkMzU3OTQyNzkwMWQyMTQwYTkzMmRmYzA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-04T03:01:42Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-04T03:01:42Z"}, "message": "Accurately portray raw identifiers in error messages\n\nWhen refering to or suggesting raw identifiers, refer to them with `r#`.\n\nFix #65634.", "tree": {"sha": "01dcd96d45f6bd4822ca60fc07ea2399571d1ccf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01dcd96d45f6bd4822ca60fc07ea2399571d1ccf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6b435d923e5979cd3579427901d2140a932dfc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6b435d923e5979cd3579427901d2140a932dfc0", "html_url": "https://github.com/rust-lang/rust/commit/f6b435d923e5979cd3579427901d2140a932dfc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6b435d923e5979cd3579427901d2140a932dfc0/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7afe6d9d1f48b998cc88fe6f01ba0082788ba4b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7afe6d9d1f48b998cc88fe6f01ba0082788ba4b9", "html_url": "https://github.com/rust-lang/rust/commit/7afe6d9d1f48b998cc88fe6f01ba0082788ba4b9"}], "stats": {"total": 65, "additions": 59, "deletions": 6}, "files": [{"sha": "745f7d0276d809b28df9739c6e67ef5cbbeba1e1", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=f6b435d923e5979cd3579427901d2140a932dfc0", "patch": "@@ -1282,6 +1282,9 @@ impl<F: fmt::Write> Printer<'tcx> for FmtPrinter<'_, 'tcx, F> {\n             if !self.empty_path {\n                 write!(self, \"::\")?;\n             }\n+            if ast::Ident::from_str(&name).is_raw_guess() {\n+                write!(self, \"r#\")?;\n+            }\n             write!(self, \"{}\", name)?;\n \n             // FIXME(eddyb) this will print e.g. `{{closure}}#3`, but it"}, {"sha": "73df24a836dc3910e2f2ed77754832f9a3e54c85", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=f6b435d923e5979cd3579427901d2140a932dfc0", "patch": "@@ -840,12 +840,18 @@ impl Hash for Ident {\n \n impl fmt::Debug for Ident {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        if self.is_raw_guess() {\n+            write!(f, \"r#\")?;\n+        }\n         write!(f, \"{}{:?}\", self.name, self.span.ctxt())\n     }\n }\n \n impl fmt::Display for Ident {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        if self.is_raw_guess() {\n+            write!(f, \"r#\")?;\n+        }\n         fmt::Display::fmt(&self.name, f)\n     }\n }"}, {"sha": "a986980fab97b1d742ef74851ea10dc8234fd12c", "filename": "src/test/ui/parser/raw/raw-literal-keywords.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.rs?ref=f6b435d923e5979cd3579427901d2140a932dfc0", "patch": "@@ -11,11 +11,11 @@ fn test_union() {\n }\n \n fn test_if_2() {\n-    let _ = r#if; //~ ERROR cannot find value `if` in this scope\n+    let _ = r#if; //~ ERROR cannot find value `r#if` in this scope\n }\n \n fn test_struct_2() {\n-    let _ = r#struct; //~ ERROR cannot find value `struct` in this scope\n+    let _ = r#struct; //~ ERROR cannot find value `r#struct` in this scope\n }\n \n fn test_union_2() {"}, {"sha": "f7b6c894a90fea2ade2bd5a9692ed5cf4cf1b66f", "filename": "src/test/ui/parser/raw/raw-literal-keywords.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.stderr?ref=f6b435d923e5979cd3579427901d2140a932dfc0", "patch": "@@ -16,13 +16,13 @@ error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found\n LL |     r#union Test;\n    |             ^^^^ expected one of 8 possible tokens\n \n-error[E0425]: cannot find value `if` in this scope\n+error[E0425]: cannot find value `r#if` in this scope\n   --> $DIR/raw-literal-keywords.rs:14:13\n    |\n LL |     let _ = r#if;\n    |             ^^^^ not found in this scope\n \n-error[E0425]: cannot find value `struct` in this scope\n+error[E0425]: cannot find value `r#struct` in this scope\n   --> $DIR/raw-literal-keywords.rs:18:13\n    |\n LL |     let _ = r#struct;"}, {"sha": "b928510258b2f4a13fb4601473ff5d2d71e9a362", "filename": "src/test/ui/raw-ident-suggestion.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fraw-ident-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fraw-ident-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fraw-ident-suggestion.rs?ref=f6b435d923e5979cd3579427901d2140a932dfc0", "patch": "@@ -0,0 +1,22 @@\n+#![allow(non_camel_case_types)]\n+\n+trait r#async {\n+    fn r#struct(&self) {\n+        println!(\"async\");\n+    }\n+}\n+\n+trait r#await {\n+    fn r#struct(&self) {\n+        println!(\"await\");\n+    }\n+}\n+\n+struct r#fn {}\n+\n+impl r#async for r#fn {}\n+impl r#await for r#fn {}\n+\n+fn main() {\n+    r#fn {}.r#struct(); //~ ERROR multiple applicable items in scope\n+}"}, {"sha": "fddd9427ab7865af80988daa41186fd34d2f19d8", "filename": "src/test/ui/raw-ident-suggestion.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fraw-ident-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fraw-ident-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fraw-ident-suggestion.stderr?ref=f6b435d923e5979cd3579427901d2140a932dfc0", "patch": "@@ -0,0 +1,22 @@\n+error[E0034]: multiple applicable items in scope\n+  --> $DIR/raw-ident-suggestion.rs:21:13\n+   |\n+LL |     r#fn {}.r#struct();\n+   |             ^^^^^^^^ multiple `r#struct` found\n+   |\n+note: candidate #1 is defined in an impl of the trait `async` for the type `r#fn`\n+  --> $DIR/raw-ident-suggestion.rs:4:5\n+   |\n+LL |     fn r#struct(&self) {\n+   |     ^^^^^^^^^^^^^^^^^^\n+   = help: to disambiguate the method call, write `async::r#struct(r#fn {})` instead\n+note: candidate #2 is defined in an impl of the trait `await` for the type `r#fn`\n+  --> $DIR/raw-ident-suggestion.rs:10:5\n+   |\n+LL |     fn r#struct(&self) {\n+   |     ^^^^^^^^^^^^^^^^^^\n+   = help: to disambiguate the method call, write `await::r#struct(r#fn {})` instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0034`."}, {"sha": "0a8073c0be2ea627cdd59d843d88af9fc9f02db1", "filename": "src/test/ui/suggestions/raw-name-use-suggestion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.rs?ref=f6b435d923e5979cd3579427901d2140a932dfc0", "patch": "@@ -5,5 +5,5 @@ mod foo {\n \n fn main() {\n     foo::let(); //~ ERROR expected identifier, found keyword `let`\n-    r#break(); //~ ERROR cannot find function `break` in this scope\n+    r#break(); //~ ERROR cannot find function `r#break` in this scope\n }"}, {"sha": "62b76318e09b5424f1ebab7a3c03c2c55a720237", "filename": "src/test/ui/suggestions/raw-name-use-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6b435d923e5979cd3579427901d2140a932dfc0/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.stderr?ref=f6b435d923e5979cd3579427901d2140a932dfc0", "patch": "@@ -20,7 +20,7 @@ help: you can escape reserved keywords to use them as identifiers\n LL |     foo::r#let();\n    |          ^^^^^\n \n-error[E0425]: cannot find function `break` in this scope\n+error[E0425]: cannot find function `r#break` in this scope\n   --> $DIR/raw-name-use-suggestion.rs:8:5\n    |\n LL |     r#break();"}]}