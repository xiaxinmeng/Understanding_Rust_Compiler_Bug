{"sha": "1ccb50eaa670f86b69e7a64484a8c97e13169183", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjY2I1MGVhYTY3MGY4NmI2OWU3YTY0NDg0YThjOTdlMTMxNjkxODM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-11-01T19:50:13Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-11-09T04:41:17Z"}, "message": "std: Change how EBADF is handled in `sys`\n\nThis commit removes the reexport of `EBADF_ERR` as a constant from\nlibstd's portability facade, instead opting for a platform-specific\nfunction that specifically queries an `io::Error`. Not all platforms may\nhave a constant for this, so it makes the intent a little more clear\nthat a code need not be supplied, just an answer to a query.", "tree": {"sha": "77042c08dac06aa8c631a712f34231c782761117", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77042c08dac06aa8c631a712f34231c782761117"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ccb50eaa670f86b69e7a64484a8c97e13169183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ccb50eaa670f86b69e7a64484a8c97e13169183", "html_url": "https://github.com/rust-lang/rust/commit/1ccb50eaa670f86b69e7a64484a8c97e13169183", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ccb50eaa670f86b69e7a64484a8c97e13169183/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bc8f164b09b9994e6a2d4c4ca60d7d36c09d3fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc8f164b09b9994e6a2d4c4ca60d7d36c09d3fe", "html_url": "https://github.com/rust-lang/rust/commit/6bc8f164b09b9994e6a2d4c4ca60d7d36c09d3fe"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "831688bb73d1cd49bb0528e3599101ddddf42bf6", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb50eaa670f86b69e7a64484a8c97e13169183/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb50eaa670f86b69e7a64484a8c97e13169183/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=1ccb50eaa670f86b69e7a64484a8c97e13169183", "patch": "@@ -121,10 +121,8 @@ impl<R: io::Read> io::Read for Maybe<R> {\n }\n \n fn handle_ebadf<T>(r: io::Result<T>, default: T) -> io::Result<T> {\n-    use sys::stdio::EBADF_ERR;\n-\n     match r {\n-        Err(ref e) if e.raw_os_error() == Some(EBADF_ERR) => Ok(default),\n+        Err(ref e) if stdio::is_ebadf(e) => Ok(default),\n         r => r\n     }\n }"}, {"sha": "3abb094ac34e3d98af5855f15bbb96f7e63d0982", "filename": "src/libstd/sys/redox/stdio.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb50eaa670f86b69e7a64484a8c97e13169183/src%2Flibstd%2Fsys%2Fredox%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb50eaa670f86b69e7a64484a8c97e13169183/src%2Flibstd%2Fsys%2Fredox%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fstdio.rs?ref=1ccb50eaa670f86b69e7a64484a8c97e13169183", "patch": "@@ -70,5 +70,8 @@ impl io::Write for Stderr {\n     }\n }\n \n-pub const EBADF_ERR: i32 = ::sys::syscall::EBADF;\n+pub fn is_ebadf(err: &io::Error) -> bool {\n+    err.raw_os_error() == Some(::sys::syscall::EBADF as i32)\n+}\n+\n pub const STDIN_BUF_SIZE: usize = ::sys_common::io::DEFAULT_BUF_SIZE;"}, {"sha": "e9b3d4affc7dd6fcb92505e96a99879529676a68", "filename": "src/libstd/sys/unix/stdio.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb50eaa670f86b69e7a64484a8c97e13169183/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb50eaa670f86b69e7a64484a8c97e13169183/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs?ref=1ccb50eaa670f86b69e7a64484a8c97e13169183", "patch": "@@ -70,5 +70,8 @@ impl io::Write for Stderr {\n     }\n }\n \n-pub const EBADF_ERR: i32 = ::libc::EBADF as i32;\n+pub fn is_ebadf(err: &io::Error) -> bool {\n+    err.raw_os_error() == Some(libc::EBADF as i32)\n+}\n+\n pub const STDIN_BUF_SIZE: usize = ::sys_common::io::DEFAULT_BUF_SIZE;"}, {"sha": "b43df20bddd087144faa8b3626de5a72efed7e67", "filename": "src/libstd/sys/windows/stdio.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb50eaa670f86b69e7a64484a8c97e13169183/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb50eaa670f86b69e7a64484a8c97e13169183/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs?ref=1ccb50eaa670f86b69e7a64484a8c97e13169183", "patch": "@@ -218,7 +218,10 @@ fn readconsole_input_control(wakeup_mask: c::ULONG) -> c::CONSOLE_READCONSOLE_CO\n const CTRL_Z: u8 = 0x1A;\n const CTRL_Z_MASK: c::ULONG = 0x4000000; //1 << 0x1A\n \n-pub const EBADF_ERR: i32 = ::sys::c::ERROR_INVALID_HANDLE as i32;\n+pub fn is_ebadf(err: &io::Error) -> bool {\n+    err.raw_os_error() == Some(c::ERROR_INVALID_HANDLE as i32)\n+}\n+\n // The default buffer capacity is 64k, but apparently windows\n // doesn't like 64k reads on stdin. See #13304 for details, but the\n // idea is that on windows we use a slightly smaller buffer that's"}]}