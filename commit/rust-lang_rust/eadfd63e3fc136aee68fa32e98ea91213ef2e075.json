{"sha": "eadfd63e3fc136aee68fa32e98ea91213ef2e075", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZGZkNjNlM2ZjMTM2YWVlNjhmYTMyZTk4ZWE5MTIxM2VmMmUwNzU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-09T16:14:54Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-15T09:48:22Z"}, "message": "Clean up comment", "tree": {"sha": "c86a83415d01c8d70994abaf1b5703ce01d9b7eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c86a83415d01c8d70994abaf1b5703ce01d9b7eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eadfd63e3fc136aee68fa32e98ea91213ef2e075", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eadfd63e3fc136aee68fa32e98ea91213ef2e075", "html_url": "https://github.com/rust-lang/rust/commit/eadfd63e3fc136aee68fa32e98ea91213ef2e075", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eadfd63e3fc136aee68fa32e98ea91213ef2e075/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ea44663c562ac40fbb81f59698e3861d622695b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ea44663c562ac40fbb81f59698e3861d622695b", "html_url": "https://github.com/rust-lang/rust/commit/1ea44663c562ac40fbb81f59698e3861d622695b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0cafd7cbbc0d6bc1ae14aa6c5d9af74b1a33a6e5", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eadfd63e3fc136aee68fa32e98ea91213ef2e075/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eadfd63e3fc136aee68fa32e98ea91213ef2e075/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=eadfd63e3fc136aee68fa32e98ea91213ef2e075", "patch": "@@ -358,12 +358,12 @@ pub fn intern_const_alloc_recursive<M: CompileTimeMachine<'mir, 'tcx>>(\n                     alloc.mutability = Mutability::Not;\n                 }\n                 // Raw pointers in promoteds may only point to immutable things so we mark\n-                // everything as immutable. Creating a promoted with interior mutability is UB, but\n-                // there's no way we can check whether the user is using raw pointers correctly.\n-                // So all we can do is mark this as immutable here.\n+                // everything as immutable.\n                 // It is UB to mutate through a raw pointer obtained via an immutable reference.\n                 // Since all references and pointers inside a promoted must by their very definition\n                 // be created from an immutable reference, mutating though them would be UB.\n+                // There's no way we can check whether the user is using raw pointers correctly,\n+                // so all we can do is mark this as immutable here.\n                 InternKind::Promoted => {\n                     alloc.mutability = Mutability::Not;\n                 }\n@@ -394,7 +394,7 @@ pub fn intern_const_alloc_recursive<M: CompileTimeMachine<'mir, 'tcx>>(\n             // We have hit an `AllocId` that belongs to an already interned static,\n             // and are thus not interning any further.\n \n-            // E.g. this should be unreachable for `InternKind::Promoted` except for allocations\n+            // For `InternKind::Promoted` this is only reachable for allocations\n             // created for string and byte string literals, since these are interned immediately\n             // at creation time.\n "}]}