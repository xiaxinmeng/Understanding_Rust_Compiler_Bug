{"sha": "36eb5442bd79b199b506e7912f72aade202a1ee1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ZWI1NDQyYmQ3OWIxOTliNTA2ZTc5MTJmNzJhYWRlMjAyYTFlZTE=", "commit": {"author": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-07-07T15:04:28Z"}, "committer": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-07-09T14:00:21Z"}, "message": "Add note clarifying why a closure no longer implements a trait", "tree": {"sha": "a36c23b5a6ee06975d217a9c6da32550f3413c54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a36c23b5a6ee06975d217a9c6da32550f3413c54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36eb5442bd79b199b506e7912f72aade202a1ee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36eb5442bd79b199b506e7912f72aade202a1ee1", "html_url": "https://github.com/rust-lang/rust/commit/36eb5442bd79b199b506e7912f72aade202a1ee1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36eb5442bd79b199b506e7912f72aade202a1ee1/comments", "author": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2900c1a5e82b9c43917ba4e3e4ca347289b3d21a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2900c1a5e82b9c43917ba4e3e4ca347289b3d21a", "html_url": "https://github.com/rust-lang/rust/commit/2900c1a5e82b9c43917ba4e3e4ca347289b3d21a"}], "stats": {"total": 56, "additions": 46, "deletions": 10}, "files": [{"sha": "9806fd95c8f5c6e157b9b850ea3f5fdfdad22622", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/36eb5442bd79b199b506e7912f72aade202a1ee1/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36eb5442bd79b199b506e7912f72aade202a1ee1/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=36eb5442bd79b199b506e7912f72aade202a1ee1", "patch": "@@ -535,6 +535,22 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 captured_names,\n                             ));\n                         }\n+\n+                        if reasons.contains(\"closure trait implementation\") {\n+                            let closure_body_span = self.tcx.hir().span(body_id.hir_id);\n+                            let closure_ending_span = self.tcx.sess.source_map().guess_head_span(closure_body_span).shrink_to_lo();\n+\n+                            let missing_trait = &reasons[..reasons.find(\"closure trait implementation\").unwrap() - 1];\n+\n+                            diagnostics_builder.span_label(closure_ending_span, format!(\"in Rust 2018, this closure would implement {} as `{}` implements {}, but in Rust 2021, this closure will no longer implement {} as {} does not implement {}\",\n+                                missing_trait,\n+                                self.tcx.hir().name(*var_hir_id),\n+                                missing_trait,\n+                                missing_trait,\n+                                captured_names,\n+                                missing_trait,\n+                            ));\n+                        }\n                     }\n                     diagnostics_builder.note(\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/disjoint-capture-in-closures.html>\");\n                     let closure_body_span = self.tcx.hir().span(body_id.hir_id);"}, {"sha": "4cc8a2b54be8e774e54ce4581c56526e04fe41ff", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/auto_traits.fixed", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.fixed?ref=36eb5442bd79b199b506e7912f72aade202a1ee1", "patch": "@@ -13,6 +13,7 @@ fn test_send_trait() {\n     let fptr = SendPointer(&mut f as *mut i32);\n     thread::spawn(move || { let _ = &fptr; unsafe {\n         //~^ ERROR: `Send` closure trait implementation\n+        //~| NOTE: in Rust 2018, this closure would implement `Send` as `fptr` implements `Send`, but in Rust 2021, this closure will no longer implement `Send` as `fptr.0` does not implement `Send`\n         //~| NOTE: for more information, see\n         //~| HELP: add a dummy let to cause `fptr` to be fully captured\n         *fptr.0 = 20;\n@@ -32,6 +33,7 @@ fn test_sync_trait() {\n     let fptr = SyncPointer(f);\n     thread::spawn(move || { let _ = &fptr; unsafe {\n         //~^ ERROR: `Sync`, `Send` closure trait implementation\n+        //~| NOTE: in Rust 2018, this closure would implement `Sync`, `Send` as `fptr` implements `Sync`, `Send`, but in Rust 2021, this closure will no longer implement `Sync`, `Send` as `fptr.0.0` does not implement `Sync`, `Send`\n         //~| NOTE: for more information, see\n         //~| HELP: add a dummy let to cause `fptr` to be fully captured\n         *fptr.0.0 = 20;\n@@ -55,6 +57,7 @@ fn test_clone_trait() {\n     let f = U(S(String::from(\"Hello World\")), T(0));\n     let c = || { let _ = &f; \n         //~^ ERROR: `Clone` closure trait implementation, and drop order\n+        //~| NOTE: in Rust 2018, this closure would implement `Clone` as `f` implements `Clone`, but in Rust 2021, this closure will no longer implement `Clone` as `f.1` does not implement `Clone`\n         //~| NOTE: for more information, see\n         //~| HELP: add a dummy let to cause `f` to be fully captured\n         let f_1 = f.1;"}, {"sha": "a75c0aa5279852b77278824fa6ecd631f467b82d", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/auto_traits.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.rs?ref=36eb5442bd79b199b506e7912f72aade202a1ee1", "patch": "@@ -13,6 +13,7 @@ fn test_send_trait() {\n     let fptr = SendPointer(&mut f as *mut i32);\n     thread::spawn(move || unsafe {\n         //~^ ERROR: `Send` closure trait implementation\n+        //~| NOTE: in Rust 2018, this closure would implement `Send` as `fptr` implements `Send`, but in Rust 2021, this closure will no longer implement `Send` as `fptr.0` does not implement `Send`\n         //~| NOTE: for more information, see\n         //~| HELP: add a dummy let to cause `fptr` to be fully captured\n         *fptr.0 = 20;\n@@ -32,6 +33,7 @@ fn test_sync_trait() {\n     let fptr = SyncPointer(f);\n     thread::spawn(move || unsafe {\n         //~^ ERROR: `Sync`, `Send` closure trait implementation\n+        //~| NOTE: in Rust 2018, this closure would implement `Sync`, `Send` as `fptr` implements `Sync`, `Send`, but in Rust 2021, this closure will no longer implement `Sync`, `Send` as `fptr.0.0` does not implement `Sync`, `Send`\n         //~| NOTE: for more information, see\n         //~| HELP: add a dummy let to cause `fptr` to be fully captured\n         *fptr.0.0 = 20;\n@@ -55,6 +57,7 @@ fn test_clone_trait() {\n     let f = U(S(String::from(\"Hello World\")), T(0));\n     let c = || {\n         //~^ ERROR: `Clone` closure trait implementation, and drop order\n+        //~| NOTE: in Rust 2018, this closure would implement `Clone` as `f` implements `Clone`, but in Rust 2021, this closure will no longer implement `Clone` as `f.1` does not implement `Clone`\n         //~| NOTE: for more information, see\n         //~| HELP: add a dummy let to cause `f` to be fully captured\n         let f_1 = f.1;"}, {"sha": "c8867e1ac92a0c00bd3993dfef22ecd84ab8f685", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/auto_traits.stderr", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.stderr?ref=36eb5442bd79b199b506e7912f72aade202a1ee1", "patch": "@@ -2,7 +2,10 @@ error: changes to closure capture in Rust 2021 will affect `Send` closure trait\n   --> $DIR/auto_traits.rs:14:19\n    |\n LL |       thread::spawn(move || unsafe {\n-   |  ___________________^\n+   |                     ^       - in Rust 2018, this closure would implement `Send` as `fptr` implements `Send`, but in Rust 2021, this closure will no longer implement `Send` as `fptr.0` does not implement `Send`\n+   |  ___________________|\n+   | |\n+LL | |\n LL | |\n LL | |\n LL | |\n@@ -24,15 +27,18 @@ LL |     thread::spawn(move || { let _ = &fptr; unsafe {\n LL |\n LL |\n LL |\n-LL |         *fptr.0 = 20;\n LL |\n+LL |         *fptr.0 = 20;\n  ...\n \n error: changes to closure capture in Rust 2021 will affect `Sync`, `Send` closure trait implementation\n-  --> $DIR/auto_traits.rs:33:19\n+  --> $DIR/auto_traits.rs:34:19\n    |\n LL |       thread::spawn(move || unsafe {\n-   |  ___________________^\n+   |                     ^       - in Rust 2018, this closure would implement `Sync`, `Send` as `fptr` implements `Sync`, `Send`, but in Rust 2021, this closure will no longer implement `Sync`, `Send` as `fptr.0.0` does not implement `Sync`, `Send`\n+   |  ___________________|\n+   | |\n+LL | |\n LL | |\n LL | |\n LL | |\n@@ -49,15 +55,18 @@ LL |     thread::spawn(move || { let _ = &fptr; unsafe {\n LL |\n LL |\n LL |\n-LL |         *fptr.0.0 = 20;\n LL |\n+LL |         *fptr.0.0 = 20;\n  ...\n \n error: changes to closure capture in Rust 2021 will affect `Clone` closure trait implementation, and drop order\n-  --> $DIR/auto_traits.rs:56:13\n+  --> $DIR/auto_traits.rs:58:13\n    |\n LL |       let c = || {\n-   |  _____________^\n+   |               ^  - in Rust 2018, this closure would implement `Clone` as `f` implements `Clone`, but in Rust 2021, this closure will no longer implement `Clone` as `f.1` does not implement `Clone`\n+   |  _____________|\n+   | |\n+LL | |\n LL | |\n LL | |\n LL | |\n@@ -78,8 +87,8 @@ LL |     let c = || { let _ = &f;\n LL |\n LL |\n LL |\n-LL |         let f_1 = f.1;\n LL |\n+LL |         let f_1 = f.1;\n  ...\n \n error: aborting due to 3 previous errors"}, {"sha": "f6e4f159ad08d46232dd1d80339a1d3bc3c590df", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.fixed?ref=36eb5442bd79b199b506e7912f72aade202a1ee1", "patch": "@@ -19,6 +19,7 @@ where\n     let f = panic::AssertUnwindSafe(f);\n     let result = panic::catch_unwind(move || { let _ = &f; \n         //~^ ERROR: `UnwindSafe`, `RefUnwindSafe` closure trait implementation\n+        //~| NOTE: in Rust 2018, this closure would implement `UnwindSafe`, `RefUnwindSafe` as `f` implements `UnwindSafe`, `RefUnwindSafe`, but in Rust 2021, this closure will no longer implement `UnwindSafe`, `RefUnwindSafe` as `f.0` does not implement `UnwindSafe`, `RefUnwindSafe`\n         //~| NOTE: for more information, see\n         //~| HELP: add a dummy let to cause `f` to be fully captured\n         f.0()"}, {"sha": "f6481d51fcd3f6f1281c97e1fdfb98d770574468", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.rs?ref=36eb5442bd79b199b506e7912f72aade202a1ee1", "patch": "@@ -19,6 +19,7 @@ where\n     let f = panic::AssertUnwindSafe(f);\n     let result = panic::catch_unwind(move || {\n         //~^ ERROR: `UnwindSafe`, `RefUnwindSafe` closure trait implementation\n+        //~| NOTE: in Rust 2018, this closure would implement `UnwindSafe`, `RefUnwindSafe` as `f` implements `UnwindSafe`, `RefUnwindSafe`, but in Rust 2021, this closure will no longer implement `UnwindSafe`, `RefUnwindSafe` as `f.0` does not implement `UnwindSafe`, `RefUnwindSafe`\n         //~| NOTE: for more information, see\n         //~| HELP: add a dummy let to cause `f` to be fully captured\n         f.0()"}, {"sha": "bc8580b23b2d5ff5d7d53ecae1e534b44b672003", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/36eb5442bd79b199b506e7912f72aade202a1ee1/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.stderr?ref=36eb5442bd79b199b506e7912f72aade202a1ee1", "patch": "@@ -2,7 +2,10 @@ error: changes to closure capture in Rust 2021 will affect `UnwindSafe`, `RefUnw\n   --> $DIR/mir_calls_to_shims.rs:20:38\n    |\n LL |       let result = panic::catch_unwind(move || {\n-   |  ______________________________________^\n+   |                                        ^       - in Rust 2018, this closure would implement `UnwindSafe`, `RefUnwindSafe` as `f` implements `UnwindSafe`, `RefUnwindSafe`, but in Rust 2021, this closure will no longer implement `UnwindSafe`, `RefUnwindSafe` as `f.0` does not implement `UnwindSafe`, `RefUnwindSafe`\n+   |  ______________________________________|\n+   | |\n+LL | |\n LL | |\n LL | |\n LL | |\n@@ -24,8 +27,8 @@ LL |     let result = panic::catch_unwind(move || { let _ = &f;\n LL |\n LL |\n LL |\n-LL |         f.0()\n LL |\n+LL |         f.0()\n  ...\n \n error: aborting due to previous error"}]}