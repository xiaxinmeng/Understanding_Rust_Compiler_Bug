{"sha": "7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZTY4ZGM5ZTFjNDdmNWY3ZDI5N2JjMzA5NGUyMWM5ZTNjOWZkMzQ=", "commit": {"author": {"name": "James Miller", "email": "bladeon@gmail.com", "date": "2013-07-06T06:40:58Z"}, "committer": {"name": "James Miller", "email": "bladeon@gmail.com", "date": "2013-07-07T10:51:10Z"}, "message": "Clean up warnings", "tree": {"sha": "3dae1dd92ed3100bc39aaae96561e85f510ba15d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dae1dd92ed3100bc39aaae96561e85f510ba15d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "html_url": "https://github.com/rust-lang/rust/commit/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/comments", "author": null, "committer": null, "parents": [{"sha": "47eca2113c5c55a4ffbb8c11a38c8ca7a79a1d72", "url": "https://api.github.com/repos/rust-lang/rust/commits/47eca2113c5c55a4ffbb8c11a38c8ca7a79a1d72", "html_url": "https://github.com/rust-lang/rust/commit/47eca2113c5c55a4ffbb8c11a38c8ca7a79a1d72"}], "stats": {"total": 38, "additions": 7, "deletions": 31}, "files": [{"sha": "1030af9787868e7504bcda9447c82c88ec9a85ab", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -34,9 +34,6 @@ use std::cast::transmute;\n use std::cast;\n use std::hashmap::{HashMap};\n use std::libc::{c_uint, c_longlong, c_ulonglong};\n-use std::to_bytes;\n-use std::str;\n-use std::vec::raw::to_ptr;\n use std::vec;\n use syntax::ast::ident;\n use syntax::ast_map::{path, path_elt};"}, {"sha": "ca469a42103a2a7d27fe75ccbdff7f7773d90cdf", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -548,7 +548,6 @@ pub fn trans_trait_callee_from_llval(bcx: block,\n \n     let _icx = push_ctxt(\"impl::trans_trait_callee\");\n     let ccx = bcx.ccx();\n-    let mut bcx = bcx;\n \n     // Load the vtable from the @Trait pair\n     debug!(\"(translating trait callee) loading vtable from pair %s\","}, {"sha": "adecd61bc4f4cd4690d642c2a4fdea2de118e410", "filename": "src/librustc/middle/trans/uniq.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftrans%2Funiq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftrans%2Funiq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Funiq.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n \n-use back;\n use lib::llvm::ValueRef;\n use middle::trans::base::*;\n use middle::trans::build::*;"}, {"sha": "5c8ce6b2d8bb03f51ac897fe81190696c1171b18", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -463,7 +463,6 @@ pub fn check_fn(ccx: @mut CrateCtxt,\n             }\n \n             // Check the pattern.\n-            let region = fcx.block_region();\n             let pcx = pat_ctxt {\n                 fcx: fcx,\n                 map: pat_id_map(tcx.def_map, input.pat),\n@@ -2892,7 +2891,6 @@ pub fn check_decl_local(fcx: @mut FnCtxt, local: @ast::local)  {\n         _ => {}\n     }\n \n-    let region = tcx.region_maps.encl_region(local.node.id);\n     let pcx = pat_ctxt {\n         fcx: fcx,\n         map: pat_id_map(tcx.def_map, local.node.pat),"}, {"sha": "65b40fbd48c5d3a3491c8809bf65cd050d3769af", "filename": "src/librustc/middle/typeck/check/regionck.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -36,11 +36,9 @@ use middle::typeck::check::regionmanip::relate_nested_regions;\n use middle::typeck::infer::resolve_and_force_all_but_regions;\n use middle::typeck::infer::resolve_type;\n use middle::typeck::infer;\n-use util::ppaux::{note_and_explain_region, ty_to_str,\n-                  region_to_str};\n+use util::ppaux::{ty_to_str, region_to_str};\n use middle::pat_util;\n \n-use std::result;\n use std::uint;\n use syntax::ast::{ManagedSigil, OwnedSigil, BorrowedSigil};\n use syntax::ast::{def_arg, def_binding, def_local, def_self, def_upvar};\n@@ -419,8 +417,6 @@ fn constrain_callee(rcx: @mut Rcx,\n                     call_expr: @ast::expr,\n                     callee_expr: @ast::expr)\n {\n-    let tcx = rcx.fcx.tcx();\n-\n     let call_region = ty::re_scope(call_expr.id);\n \n     let callee_ty = rcx.resolve_node_type(callee_id);\n@@ -559,8 +555,6 @@ fn constrain_index(rcx: @mut Rcx,\n      * includes the deref expr.\n      */\n \n-    let tcx = rcx.fcx.tcx();\n-\n     debug!(\"constrain_index(index_expr=?, indexed_ty=%s\",\n            rcx.fcx.infcx().ty_to_str(indexed_ty));\n "}, {"sha": "ee90d9661c37f90ef1f9112b279c984bf93eb31e", "filename": "src/librustc/middle/typeck/infer/combine.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -65,15 +65,14 @@ use middle::typeck::infer::sub::Sub;\n use middle::typeck::infer::to_str::InferStr;\n use middle::typeck::infer::unify::{InferCtxtMethods};\n use middle::typeck::infer::{InferCtxt, cres, ures};\n-use middle::typeck::infer::{TypeOrigin, TypeTrace};\n+use middle::typeck::infer::{TypeTrace};\n use util::common::indent;\n \n use std::result::{iter_vec2, map_vec2};\n use std::vec;\n use syntax::ast::{Onceness, purity};\n use syntax::ast;\n use syntax::opt_vec;\n-use syntax::codemap::span;\n use syntax::abi::AbiSet;\n \n pub trait Combine {"}, {"sha": "928f33803dd8c556408e1686fdb04f2f50d42f96", "filename": "src/librustc/middle/typeck/infer/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ferror_reporting.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -59,23 +59,18 @@ time of error detection.\n \n */\n \n-use std::prelude::*;\n use middle::ty;\n use middle::ty::Region;\n use middle::typeck::infer;\n use middle::typeck::infer::InferCtxt;\n use middle::typeck::infer::TypeTrace;\n-use middle::typeck::infer::TypeOrigin;\n use middle::typeck::infer::SubregionOrigin;\n use middle::typeck::infer::RegionVariableOrigin;\n-use middle::typeck::infer::Types;\n-use middle::typeck::infer::TraitRefs;\n use middle::typeck::infer::ValuePairs;\n use middle::typeck::infer::region_inference::RegionResolutionError;\n use middle::typeck::infer::region_inference::ConcreteFailure;\n use middle::typeck::infer::region_inference::SubSupConflict;\n use middle::typeck::infer::region_inference::SupSupConflict;\n-use syntax::opt_vec;\n use syntax::opt_vec::OptVec;\n use util::ppaux::UserString;\n use util::ppaux::note_and_explain_region;\n@@ -362,7 +357,7 @@ impl ErrorReporting for InferCtxt {\n                     sup,\n                     \"\");\n             }\n-            infer::ReferenceOutlivesReferent(ty, span) => {\n+            infer::ReferenceOutlivesReferent(ty, _) => {\n                 self.tcx.sess.span_err(\n                     origin.span(),\n                     fmt!(\"in type `%s`, pointer has a longer lifetime than \\"}, {"sha": "32f3e8fea3a86407f95831cef5e9b4aa66fb334a", "filename": "src/librustc/middle/typeck/infer/glb.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -26,8 +26,7 @@ use syntax::ast::{Many, Once, extern_fn, impure_fn, m_const, m_imm, m_mutbl};\n use syntax::ast::{unsafe_fn};\n use syntax::ast::{Onceness, purity};\n use syntax::abi::AbiSet;\n-use syntax::codemap::span;\n-use util::common::{indent, indenter};\n+use util::common::{indenter};\n use util::ppaux::mt_to_str;\n \n use extra::list;"}, {"sha": "3f23fd6e7096f6588b881da7981194ff313d560d", "filename": "src/librustc/middle/typeck/infer/lub.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flub.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -21,7 +21,6 @@ use middle::typeck::infer::{cres, InferCtxt};\n use middle::typeck::infer::fold_regions_in_sig;\n use middle::typeck::infer::{TypeTrace, Subtype};\n use middle::typeck::isr_alist;\n-use util::common::indent;\n use util::ppaux::mt_to_str;\n \n use extra::list;\n@@ -30,7 +29,6 @@ use syntax::ast;\n use syntax::ast::{Many, Once, extern_fn, m_const, impure_fn};\n use syntax::ast::{unsafe_fn};\n use syntax::ast::{Onceness, purity};\n-use syntax::codemap::span;\n \n pub struct Lub(CombineFields);  // least-upper-bound: common supertype\n "}, {"sha": "d0a778139dbd2b81d6a48d7f797954af8e89c0b7", "filename": "src/librustc/middle/typeck/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -328,7 +328,7 @@ pub fn can_mk_subty(cx: @mut InferCtxt, a: ty::t, b: ty::t) -> ures {\n }\n \n pub fn mk_subr(cx: @mut InferCtxt,\n-               a_is_expected: bool,\n+               _a_is_expected: bool,\n                origin: SubregionOrigin,\n                a: ty::Region,\n                b: ty::Region) {"}, {"sha": "7bf4d07b72306247d199b09ac2b3f5d7ee19c661", "filename": "src/librustc/middle/typeck/infer/region_inference/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference%2Fmod.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -19,13 +19,12 @@ use middle::typeck::infer::cres;\n use middle::typeck::infer::{RegionVariableOrigin, SubregionOrigin};\n use middle::typeck::infer;\n use util::common::indenter;\n-use util::ppaux::{note_and_explain_region, Repr, UserString};\n+use util::ppaux::{Repr};\n \n use std::cell::Cell;\n use std::hashmap::{HashMap, HashSet};\n use std::uint;\n use std::vec;\n-use syntax::codemap::span;\n use syntax::ast;\n use syntax::opt_vec;\n use syntax::opt_vec::OptVec;"}, {"sha": "cfb33732459ff271f8e6c308415f63514b4b290b", "filename": "src/librustc/middle/typeck/infer/sub.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs?ref=7ce68dc9e1c47f5f7d297bc3094e21c9e3c9fd34", "patch": "@@ -21,15 +21,14 @@ use middle::typeck::infer::lattice::CombineFieldsLatticeMethods;\n use middle::typeck::infer::lub::Lub;\n use middle::typeck::infer::to_str::InferStr;\n use middle::typeck::infer::{TypeTrace, Subtype};\n-use util::common::{indent, indenter};\n+use util::common::{indenter};\n use util::ppaux::bound_region_to_str;\n \n use extra::list::Nil;\n use extra::list;\n use syntax::abi::AbiSet;\n use syntax::ast;\n use syntax::ast::{Onceness, m_const, purity};\n-use syntax::codemap::span;\n \n pub struct Sub(CombineFields);  // \"subtype\", \"subregion\" etc\n "}]}