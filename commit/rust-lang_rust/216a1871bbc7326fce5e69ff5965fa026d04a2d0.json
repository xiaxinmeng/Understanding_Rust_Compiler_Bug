{"sha": "216a1871bbc7326fce5e69ff5965fa026d04a2d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNmExODcxYmJjNzMyNmZjZTVlNjlmZjU5NjVmYTAyNmQwNGEyZDA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-05T18:26:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-05T18:26:59Z"}, "message": "Rollup merge of #62369 - JohnTitor:remove-compile-pass, r=petrochenkov\n\nRemove `compile-pass` from compiletest\n\nThis is a part of #62277.\nRemoves `compile-pass` from compiletest (and modify some tests' annotations).\n\nr? @Centril", "tree": {"sha": "46fcb5e97b469d8980ae97650d80d9cc85b0a95e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46fcb5e97b469d8980ae97650d80d9cc85b0a95e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/216a1871bbc7326fce5e69ff5965fa026d04a2d0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdH5ZzCRBK7hj4Ov3rIwAAdHIIAERZeDsCR7mYx8c2SLTmybjL\n0pwMEc5U1G9KS3ZQmxWNhiz8o1c6suScaXMXOdTqsXW0vCgCfsvlZlYzPmH1PK1p\nVmXQJc+VcYOdBccZ/UMZmlC4cIrZoR6msHwAW5jWiNvOm6Ybl6uYHVX/dHgcbEwV\nIMHF3CYQbwDDOqSv2fS5KiEXsylNfcgi90EjOw1Uat3BSKEE3WXBC8S8IIfhygYE\n7MqxuWy+zFPZyOhZOiA11Nwqqol++KbxkievfSUSSEysIAaPl5N8l9ePGeo+rDcH\ngHuPzsPyJ6kN6dbfJfbQeoA+4L7z9Av8QXWRyNAzKI+VjETydovbcgh2fsTicgI=\n=ieYW\n-----END PGP SIGNATURE-----\n", "payload": "tree 46fcb5e97b469d8980ae97650d80d9cc85b0a95e\nparent 30aa2450e16f2454193b3c501ca154008dc9e67a\nparent 1640ab2e1f92e943e5cc08856f9fb851de1fde4c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1562351219 +0200\ncommitter GitHub <noreply@github.com> 1562351219 +0200\n\nRollup merge of #62369 - JohnTitor:remove-compile-pass, r=petrochenkov\n\nRemove `compile-pass` from compiletest\n\nThis is a part of #62277.\nRemoves `compile-pass` from compiletest (and modify some tests' annotations).\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/216a1871bbc7326fce5e69ff5965fa026d04a2d0", "html_url": "https://github.com/rust-lang/rust/commit/216a1871bbc7326fce5e69ff5965fa026d04a2d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/216a1871bbc7326fce5e69ff5965fa026d04a2d0/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30aa2450e16f2454193b3c501ca154008dc9e67a", "url": "https://api.github.com/repos/rust-lang/rust/commits/30aa2450e16f2454193b3c501ca154008dc9e67a", "html_url": "https://github.com/rust-lang/rust/commit/30aa2450e16f2454193b3c501ca154008dc9e67a"}, {"sha": "1640ab2e1f92e943e5cc08856f9fb851de1fde4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1640ab2e1f92e943e5cc08856f9fb851de1fde4c", "html_url": "https://github.com/rust-lang/rust/commit/1640ab2e1f92e943e5cc08856f9fb851de1fde4c"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "b5a2b9353c661000378415ecfeb757eb7df42d66", "filename": "src/doc/rustc-guide", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc-guide?ref=216a1871bbc7326fce5e69ff5965fa026d04a2d0", "patch": "@@ -1 +1 @@\n-Subproject commit abf512fc9cc969dcbea69aa15b44586bbeb13c2d\n+Subproject commit b5a2b9353c661000378415ecfeb757eb7df42d66"}, {"sha": "618c047e77359122d214aebf0e331d595105d377", "filename": "src/librustc_mir/error_codes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Flibrustc_mir%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Flibrustc_mir%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ferror_codes.rs?ref=216a1871bbc7326fce5e69ff5965fa026d04a2d0", "patch": "@@ -331,7 +331,7 @@ An if-let pattern attempts to match the pattern, and enters the body if the\n match was successful. If the match is irrefutable (when it cannot fail to\n match), use a regular `let`-binding instead. For instance:\n \n-```compile_pass\n+```\n struct Irrefutable(i32);\n let irr = Irrefutable(0);\n \n@@ -360,7 +360,7 @@ A while-let pattern attempts to match the pattern, and enters the body if the\n match was successful. If the match is irrefutable (when it cannot fail to\n match), use a regular `let`-binding inside a `loop` instead. For instance:\n \n-```compile_pass,no_run\n+```no_run\n struct Irrefutable(i32);\n let irr = Irrefutable(0);\n "}, {"sha": "1c192a4d1d882d160e8ea7313f787b24f20369fe", "filename": "src/test/ui/async-await/async-closure-matches-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftest%2Fui%2Fasync-await%2Fasync-closure-matches-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftest%2Fui%2Fasync-await%2Fasync-closure-matches-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-closure-matches-expr.rs?ref=216a1871bbc7326fce5e69ff5965fa026d04a2d0", "patch": "@@ -1,4 +1,4 @@\n-// compile-pass\n+// build-pass\n // edition:2018\n \n #![feature(async_await, async_closure)]"}, {"sha": "553dea7aa6ed307c964879b9fc454b2e6fc352f7", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-elided.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original-elided.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original-elided.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original-elided.rs?ref=216a1871bbc7326fce5e69ff5965fa026d04a2d0", "patch": "@@ -1,5 +1,5 @@\n // edition:2018\n-// compile-pass\n+// build-pass (FIXME(62277): could be check-pass?)\n // revisions: migrate mir\n //[mir]compile-flags: -Z borrowck=mir\n "}, {"sha": "43915e05e8824e46ed6e67a8dc321a3f400fdf33", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original-existential.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original-existential.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original-existential.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original-existential.rs?ref=216a1871bbc7326fce5e69ff5965fa026d04a2d0", "patch": "@@ -1,5 +1,5 @@\n // edition:2018\n-// compile-pass\n+// build-pass (FIXME(62277): could be check-pass?)\n // revisions: migrate mir\n //[mir]compile-flags: -Z borrowck=mir\n "}, {"sha": "c0930ec5944e07df99f41c0fa276aae3726a652e", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.rs?ref=216a1871bbc7326fce5e69ff5965fa026d04a2d0", "patch": "@@ -1,5 +1,5 @@\n // edition:2018\n-// compile-pass\n+// build-pass (FIXME(62277): could be check-pass?)\n // revisions: migrate mir\n //[mir]compile-flags: -Z borrowck=mir\n "}, {"sha": "ed36bda7db719f128693d659f726e6d4bc042e01", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-other.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.rs?ref=216a1871bbc7326fce5e69ff5965fa026d04a2d0", "patch": "@@ -1,5 +1,5 @@\n // edition:2018\n-// compile-pass\n+// build-pass (FIXME(62277): could be check-pass?)\n // revisions: migrate mir\n //[mir]compile-flags: -Z borrowck=mir\n "}, {"sha": "b8008152e2a0525b47d825d285e1b6b4ac7f0602", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216a1871bbc7326fce5e69ff5965fa026d04a2d0/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=216a1871bbc7326fce5e69ff5965fa026d04a2d0", "patch": "@@ -591,9 +591,6 @@ impl TestProps {\n         } else if config.parse_name_directive(ln, \"build-pass\") {\n             check_no_run(\"build-pass\");\n             Some(PassMode::Build)\n-        } else if config.parse_name_directive(ln, \"compile-pass\") /* compatibility */ {\n-            check_no_run(\"compile-pass\");\n-            Some(PassMode::Build)\n         } else if config.parse_name_directive(ln, \"run-pass\") {\n             if config.mode != Mode::Ui && config.mode != Mode::RunPass /* compatibility */ {\n                 panic!(\"`run-pass` header is only supported in UI tests\")"}]}