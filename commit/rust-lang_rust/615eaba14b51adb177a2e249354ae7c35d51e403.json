{"sha": "615eaba14b51adb177a2e249354ae7c35d51e403", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNWVhYmExNGI1MWFkYjE3N2EyZTI0OTM1NGFlN2MzNWQ1MWU0MDM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-09-09T22:54:51Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-09-10T00:35:47Z"}, "message": "Feature gate non-builtin attributes in inner attribute position", "tree": {"sha": "bca658a31a4ed0137bcad2632f3d125bd184a505", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bca658a31a4ed0137bcad2632f3d125bd184a505"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/615eaba14b51adb177a2e249354ae7c35d51e403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/615eaba14b51adb177a2e249354ae7c35d51e403", "html_url": "https://github.com/rust-lang/rust/commit/615eaba14b51adb177a2e249354ae7c35d51e403", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/615eaba14b51adb177a2e249354ae7c35d51e403/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d4e34ca8bb1369f7e0eea4cb50e6faa0827a6e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d4e34ca8bb1369f7e0eea4cb50e6faa0827a6e5", "html_url": "https://github.com/rust-lang/rust/commit/2d4e34ca8bb1369f7e0eea4cb50e6faa0827a6e5"}], "stats": {"total": 60, "additions": 48, "deletions": 12}, "files": [{"sha": "7b4e1814a33d7bdc7f553bc88710df8593b69f7b", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=615eaba14b51adb177a2e249354ae7c35d51e403", "patch": "@@ -1074,6 +1074,21 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n         self.collect(kind, InvocationKind::Attr { attr, traits, item })\n     }\n \n+    fn find_attr_invoc(&self, attrs: &mut Vec<ast::Attribute>) -> Option<ast::Attribute> {\n+        let attr = attrs.iter()\n+                        .position(|a| !attr::is_known(a) && !is_builtin_attr(a))\n+                        .map(|i| attrs.remove(i));\n+        if let Some(attr) = &attr {\n+            if !self.cx.ecfg.enable_custom_inner_attributes() &&\n+               attr.style == ast::AttrStyle::Inner && attr.path != \"test\" {\n+                emit_feature_err(&self.cx.parse_sess, \"custom_inner_attributes\",\n+                                 attr.span, GateIssue::Language,\n+                                 \"non-builtin inner attributes are unstable\");\n+            }\n+        }\n+        attr\n+    }\n+\n     /// If `item` is an attr invocation, remove and return the macro attribute and derive traits.\n     fn classify_item<T>(&mut self, mut item: T) -> (Option<ast::Attribute>, Vec<Path>, T)\n         where T: HasAttrs,\n@@ -1087,7 +1102,7 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n                 return attrs;\n             }\n \n-            attr = find_attr_invoc(&mut attrs);\n+            attr = self.find_attr_invoc(&mut attrs);\n             traits = collect_derives(&mut self.cx, &mut attrs);\n             attrs\n         });\n@@ -1108,7 +1123,7 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n                 return attrs;\n             }\n \n-            attr = find_attr_invoc(&mut attrs);\n+            attr = self.find_attr_invoc(&mut attrs);\n             attrs\n         });\n \n@@ -1145,12 +1160,6 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n     }\n }\n \n-pub fn find_attr_invoc(attrs: &mut Vec<ast::Attribute>) -> Option<ast::Attribute> {\n-    attrs.iter()\n-         .position(|a| !attr::is_known(a) && !is_builtin_attr(a))\n-         .map(|i| attrs.remove(i))\n-}\n-\n impl<'a, 'b> Folder for InvocationCollector<'a, 'b> {\n     fn fold_expr(&mut self, expr: P<ast::Expr>) -> P<ast::Expr> {\n         let mut expr = self.cfg.configure_expr(expr).into_inner();\n@@ -1582,6 +1591,12 @@ impl<'feat> ExpansionConfig<'feat> {\n         fn proc_macro_expr = proc_macro_expr,\n         fn proc_macro_non_items = proc_macro_non_items,\n     }\n+\n+    fn enable_custom_inner_attributes(&self) -> bool {\n+        self.features.map_or(false, |features| {\n+            features.custom_inner_attributes || features.custom_attribute || features.rustc_attrs\n+        })\n+    }\n }\n \n // A Marker adds the given mark to the syntax context."}, {"sha": "3e880bb6cf6331fab1ceb4c8cf5cbb832a493db4", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=615eaba14b51adb177a2e249354ae7c35d51e403", "patch": "@@ -518,6 +518,9 @@ declare_features! (\n     // #![test_runner]\n     // #[test_case]\n     (active, custom_test_frameworks, \"1.30.0\", Some(50297), None),\n+\n+    // Non-builtin attributes in inner attribute position\n+    (active, custom_inner_attributes, \"1.30.0\", Some(38356), None),\n );\n \n declare_features! ("}, {"sha": "cf2522be922e3068402f1cadf03cf2492f8620dc", "filename": "src/test/compile-fail-fulldeps/proc-macro/attribute-with-error.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fattribute-with-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fattribute-with-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fattribute-with-error.rs?ref=615eaba14b51adb177a2e249354ae7c35d51e403", "patch": "@@ -11,6 +11,8 @@\n // aux-build:attribute-with-error.rs\n // ignore-stage1\n \n+#![feature(custom_inner_attributes)]\n+\n extern crate attribute_with_error;\n \n use attribute_with_error::foo;"}, {"sha": "e0922c452b5fb0afd8e23a3fb38a58d7fb72fe45", "filename": "src/test/compile-fail-fulldeps/proc-macro/issue-41211.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fissue-41211.rs", "raw_url": "https://github.com/rust-lang/rust/raw/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fissue-41211.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fissue-41211.rs?ref=615eaba14b51adb177a2e249354ae7c35d51e403", "patch": "@@ -13,6 +13,8 @@\n // FIXME: https://github.com/rust-lang/rust/issues/41430\n // This is a temporary regression test for the ICE reported in #41211\n \n+#![feature(custom_inner_attributes)]\n+\n #![emit_unchanged]\n //~^ ERROR attribute `emit_unchanged` is currently unknown to the compiler\n extern crate issue_41211;"}, {"sha": "c07e6e31d6287f684b5e2bed0beb8aa8e3fcf160", "filename": "src/test/compile-fail-fulldeps/proc-macro/proc-macro-gates.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-gates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-gates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-gates.rs?ref=615eaba14b51adb177a2e249354ae7c35d51e403", "patch": "@@ -22,14 +22,15 @@ extern crate proc_macro_gates as foo;\n use foo::*;\n \n fn _test_inner() {\n-    #![a] // OK\n+    #![a] //~ ERROR: non-builtin inner attributes are unstable\n }\n \n #[a] //~ ERROR: custom attributes cannot be applied to modules\n mod _test2 {}\n \n mod _test2_inner {\n     #![a] //~ ERROR: custom attributes cannot be applied to modules\n+          //~| ERROR: non-builtin inner attributes are unstable\n }\n \n #[a = y] //~ ERROR: must only be followed by a delimiter token"}, {"sha": "d0adcf4025f7f75ac46a31f34551bbbca34e4b42", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-bench.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-bench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-bench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-bench.rs?ref=615eaba14b51adb177a2e249354ae7c35d51e403", "patch": "@@ -20,6 +20,8 @@\n // See issue-12997-1.rs and issue-12997-2.rs to see how `#[bench]` is\n // handled in \"weird places\" when `--test` is passed.\n \n+#![feature(custom_inner_attributes)]\n+\n #![bench                   = \"4100\"]\n \n fn main() { }"}, {"sha": "fbe1535caaed25f008805012ea33b999d37c2c80", "filename": "src/test/ui/span/issue-36530.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fui%2Fspan%2Fissue-36530.rs", "raw_url": "https://github.com/rust-lang/rust/raw/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fui%2Fspan%2Fissue-36530.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-36530.rs?ref=615eaba14b51adb177a2e249354ae7c35d51e403", "patch": "@@ -8,7 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-custom_inner_attributes\n+\n #[foo] //~ ERROR is currently unknown to the compiler\n mod foo {\n     #![foo] //~ ERROR is currently unknown to the compiler\n+            //~| ERROR non-builtin inner attributes are unstable\n }"}, {"sha": "78d81ad0493068b7e92529994b490ee0814049d0", "filename": "src/test/ui/span/issue-36530.stderr", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/615eaba14b51adb177a2e249354ae7c35d51e403/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr?ref=615eaba14b51adb177a2e249354ae7c35d51e403", "patch": "@@ -1,19 +1,27 @@\n error[E0658]: The attribute `foo` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)\n-  --> $DIR/issue-36530.rs:11:3\n+  --> $DIR/issue-36530.rs:13:3\n    |\n LL | #[foo] //~ ERROR is currently unknown to the compiler\n    |   ^^^\n    |\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n+error[E0658]: non-builtin inner attributes are unstable (see issue #38356)\n+  --> $DIR/issue-36530.rs:15:5\n+   |\n+LL |     #![foo] //~ ERROR is currently unknown to the compiler\n+   |     ^^^^^^^\n+   |\n+   = help: add #![feature(custom_inner_attributes)] to the crate attributes to enable\n+\n error[E0658]: The attribute `foo` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)\n-  --> $DIR/issue-36530.rs:13:8\n+  --> $DIR/issue-36530.rs:15:8\n    |\n LL |     #![foo] //~ ERROR is currently unknown to the compiler\n    |        ^^^\n    |\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}