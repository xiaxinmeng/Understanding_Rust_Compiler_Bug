{"sha": "2f67063fbe7ab6bc0793046ecb2c0626531ad451", "node_id": "C_kwDOAAsO6NoAKDJmNjcwNjNmYmU3YWI2YmMwNzkzMDQ2ZWNiMmMwNjI2NTMxYWQ0NTE", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-10-01T16:18:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-01T16:18:18Z"}, "message": "Rollup merge of #89322 - tmiasko:rm-optimization-fuel, r=michaelwoerister\n\nReapply \"Remove optimization_fuel_crate from Session\"", "tree": {"sha": "f4f7a1e6636e33439a5039f0e5f13a9daad35d19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4f7a1e6636e33439a5039f0e5f13a9daad35d19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f67063fbe7ab6bc0793046ecb2c0626531ad451", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhVzTLCRBK7hj4Ov3rIwAAuKkIAJiyAcob6AJZSDaNZ7sKwC+a\nLtZI3p46XSxoVlstWFADCOe/mlxhZ7C7KQn/ZPPphSigmxD6nV0nwTZAtLzuo4uK\nlEwzIxO57eSVDGcPjgz56JIVc07smMsgUMWPErznMOeCMz6SGt/S/2iC5HHYaEsv\nlbqFsQ30wkSS6ub5SA3yFcH15AnnLXQYVlidC+zRgyEM6uGZwco4tn5Bf53GBUXs\nwkTETgbzmEoU5VzGobzHOXNe4Knyb46ZFxVtE7P/cpLBsmDPZ0i3ieVDDbsiRjIj\nOYQWgNIO2L4PFy7sL6OB6k8rvNmYJXxsX16dBtWxHfa7FkVEa7ej3q6XLq55Qj0=\n=xf1E\n-----END PGP SIGNATURE-----\n", "payload": "tree f4f7a1e6636e33439a5039f0e5f13a9daad35d19\nparent 1708219940806d3620fb1cc10a0a673f7bfbbe45\nparent 42e9dfd75d293e5051c0204eacd773e1453e3365\nauthor Manish Goregaokar <manishsmail@gmail.com> 1633105098 -0700\ncommitter GitHub <noreply@github.com> 1633105098 -0700\n\nRollup merge of #89322 - tmiasko:rm-optimization-fuel, r=michaelwoerister\n\nReapply \"Remove optimization_fuel_crate from Session\"\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f67063fbe7ab6bc0793046ecb2c0626531ad451", "html_url": "https://github.com/rust-lang/rust/commit/2f67063fbe7ab6bc0793046ecb2c0626531ad451", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f67063fbe7ab6bc0793046ecb2c0626531ad451/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1708219940806d3620fb1cc10a0a673f7bfbbe45", "url": "https://api.github.com/repos/rust-lang/rust/commits/1708219940806d3620fb1cc10a0a673f7bfbbe45", "html_url": "https://github.com/rust-lang/rust/commit/1708219940806d3620fb1cc10a0a673f7bfbbe45"}, {"sha": "42e9dfd75d293e5051c0204eacd773e1453e3365", "url": "https://api.github.com/repos/rust-lang/rust/commits/42e9dfd75d293e5051c0204eacd773e1453e3365", "html_url": "https://github.com/rust-lang/rust/commit/42e9dfd75d293e5051c0204eacd773e1453e3365"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "fbcc3bf2c481539fda6efebd359f976acae0c3ae", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2f67063fbe7ab6bc0793046ecb2c0626531ad451/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f67063fbe7ab6bc0793046ecb2c0626531ad451/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=2f67063fbe7ab6bc0793046ecb2c0626531ad451", "patch": "@@ -162,9 +162,6 @@ pub struct Session {\n     /// Data about code being compiled, gathered during compilation.\n     pub code_stats: CodeStats,\n \n-    /// If `-zfuel=crate=n` is specified, `Some(crate)`.\n-    optimization_fuel_crate: Option<String>,\n-\n     /// Tracks fuel info if `-zfuel=crate=n` is specified.\n     optimization_fuel: Lock<OptimizationFuel>,\n \n@@ -882,7 +879,7 @@ impl Session {\n     /// This expends fuel if applicable, and records fuel if applicable.\n     pub fn consider_optimizing<T: Fn() -> String>(&self, crate_name: &str, msg: T) -> bool {\n         let mut ret = true;\n-        if let Some(ref c) = self.optimization_fuel_crate {\n+        if let Some((ref c, _)) = self.opts.debugging_opts.fuel {\n             if c == crate_name {\n                 assert_eq!(self.threads(), 1);\n                 let mut fuel = self.optimization_fuel.lock();\n@@ -1260,7 +1257,6 @@ pub fn build_session(\n     let local_crate_source_file =\n         local_crate_source_file.map(|path| file_path_mapping.map_prefix(path).0);\n \n-    let optimization_fuel_crate = sopts.debugging_opts.fuel.as_ref().map(|i| i.0.clone());\n     let optimization_fuel = Lock::new(OptimizationFuel {\n         remaining: sopts.debugging_opts.fuel.as_ref().map_or(0, |i| i.1),\n         out_of_fuel: false,\n@@ -1311,7 +1307,6 @@ pub fn build_session(\n             normalize_projection_ty: AtomicUsize::new(0),\n         },\n         code_stats: Default::default(),\n-        optimization_fuel_crate,\n         optimization_fuel,\n         print_fuel,\n         jobserver: jobserver::client(),"}]}