{"sha": "bac68e4af3592dfcd6867fb8a73d2999daff744f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYzY4ZTRhZjM1OTJkZmNkNjg2N2ZiOGE3M2QyOTk5ZGFmZjc0NGY=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T04:40:55Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T06:10:10Z"}, "message": "stdlib: Add regression tests for std::list", "tree": {"sha": "809e5f7ce8d958550ea4600320a754a50574a202", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/809e5f7ce8d958550ea4600320a754a50574a202"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bac68e4af3592dfcd6867fb8a73d2999daff744f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bac68e4af3592dfcd6867fb8a73d2999daff744f", "html_url": "https://github.com/rust-lang/rust/commit/bac68e4af3592dfcd6867fb8a73d2999daff744f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bac68e4af3592dfcd6867fb8a73d2999daff744f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4c9f782e4ef8ec44e6de944023557df9a34c212", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4c9f782e4ef8ec44e6de944023557df9a34c212", "html_url": "https://github.com/rust-lang/rust/commit/b4c9f782e4ef8ec44e6de944023557df9a34c212"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "caf80e84edebc33dc6b5e498d5788cf9cc25cfe8", "filename": "src/test/run-pass/lib-list.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/bac68e4af3592dfcd6867fb8a73d2999daff744f/src%2Ftest%2Frun-pass%2Flib-list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bac68e4af3592dfcd6867fb8a73d2999daff744f/src%2Ftest%2Frun-pass%2Flib-list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-list.rs?ref=bac68e4af3592dfcd6867fb8a73d2999daff744f", "patch": "@@ -3,6 +3,7 @@ import std::list;\n import std::list::car;\n import std::list::cdr;\n import std::list::from_vec;\n+import std::option;\n \n fn test_from_vec() {\n   auto l = from_vec([0, 1, 2]);\n@@ -11,6 +12,46 @@ fn test_from_vec() {\n   assert (car(cdr(cdr(l))) == 2);\n }\n \n+fn test_foldl() {\n+  auto l = from_vec([0, 1, 2, 3, 4]);\n+  fn add (&int a, &uint b) -> uint {\n+    ret (a as uint) + b;\n+  }\n+  auto res = list::foldl(l, 0u, add);\n+  assert (res == 10u);\n+}\n+\n+fn test_find_success() {\n+  auto l = from_vec([0, 1, 2]);\n+  fn match (&int i) -> option::t[int] {\n+    ret if (i == 2) {\n+      option::some(i)\n+    } else {\n+      option::none[int]\n+    };\n+  }\n+  auto res = list::find(l, match);\n+  assert (res == option::some(2));\n+}\n+\n+fn test_find_fail() {\n+  auto l = from_vec([0, 1, 2]);\n+  fn match (&int i) -> option::t[int] {\n+    ret option::none[int];\n+  }\n+  auto res = list::find(l, match);\n+  assert (res == option::none[int]);\n+}\n+\n+fn test_length() {\n+  auto l = from_vec([0, 1, 2]);\n+  assert (list::length(l) == 3u);\n+}\n+\n fn main() {\n   test_from_vec();\n+  test_foldl();\n+  test_find_success();\n+  test_find_fail();\n+  test_length();\n }"}]}