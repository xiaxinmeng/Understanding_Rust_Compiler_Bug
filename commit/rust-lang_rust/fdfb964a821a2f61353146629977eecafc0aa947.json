{"sha": "fdfb964a821a2f61353146629977eecafc0aa947", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZmI5NjRhODIxYTJmNjEzNTMxNDY2Mjk5NzdlZWNhZmMwYWE5NDc=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-18T15:28:10Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-18T15:28:10Z"}, "message": "Document the behaviour of infinite iterators on potentially-computable methods\n\nIt\u2019s not entirely clear from the current documentation what behaviour\ncalling a method such as `min` on an infinite iterator like `RangeFrom`\nis. One might expect this to terminate, but in fact, for infinite\niterators, `min` is always nonterminating (at least in the standard\nlibrary). This adds a quick note about this behaviour for clarification.", "tree": {"sha": "a87f92c1bb95bbba93736173c3f83c35e078314e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a87f92c1bb95bbba93736173c3f83c35e078314e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdfb964a821a2f61353146629977eecafc0aa947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdfb964a821a2f61353146629977eecafc0aa947", "html_url": "https://github.com/rust-lang/rust/commit/fdfb964a821a2f61353146629977eecafc0aa947", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdfb964a821a2f61353146629977eecafc0aa947/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da569fa9ddf8369a9809184d43c600dc06bd4b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/da569fa9ddf8369a9809184d43c600dc06bd4b4d", "html_url": "https://github.com/rust-lang/rust/commit/da569fa9ddf8369a9809184d43c600dc06bd4b4d"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "209a22d534a2ed705b1a2f683d11641955538b4a", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdfb964a821a2f61353146629977eecafc0aa947/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdfb964a821a2f61353146629977eecafc0aa947/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=fdfb964a821a2f61353146629977eecafc0aa947", "patch": "@@ -24,6 +24,10 @@ fn _assert_is_object_safe(_: &Iterator<Item=()>) {}\n /// This is the main iterator trait. For more about the concept of iterators\n /// generally, please see the [module-level documentation]. In particular, you\n /// may want to know how to [implement `Iterator`][impl].\n+/// \n+/// Note: Methods on infinite iterators that generally require traversing every\n+/// element to produce a result may not terminate, even on traits for which a\n+/// result is determinable in finite time.\n ///\n /// [module-level documentation]: index.html\n /// [impl]: index.html#implementing-iterator"}, {"sha": "3a5a72d1b87c10fcfb1800a2a908a02a61373de7", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fdfb964a821a2f61353146629977eecafc0aa947/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdfb964a821a2f61353146629977eecafc0aa947/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=fdfb964a821a2f61353146629977eecafc0aa947", "patch": "@@ -297,8 +297,22 @@\n //! ```\n //!\n //! This will print the numbers `0` through `4`, each on their own line.\n+//! \n+//! Bear in mind that methods on infinite iterators, even those for which a\n+//! result can be computed in finite time, may not terminate. Specifically,\n+//! methods such as [`min`], which in the general case require traversing\n+//! every element in the iterator, are likely never to terminate for any\n+//! infinite iterators.\n+//! \n+//! ```\n+//! let positives = 1..;\n+//! let least = positives.min().unwrap(); // Oh no! An infinite loop!\n+//! // `positives.min` causes an infinite loop, so we won't reach this point!\n+//! println!(\"The least positive number is {}.\", least);\n+//! ```\n //!\n //! [`take`]: trait.Iterator.html#method.take\n+//! [`min`]: trait.Iterator.html#method.min\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}]}