{"sha": "c7a3f34ad8f7d38ad3cf81f89eb8b8d5cbb1b3eb", "node_id": "C_kwDOAAsO6NoAKGM3YTNmMzRhZDhmN2QzOGFkM2NmODFmODllYjhiOGQ1Y2JiMWIzZWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-13T09:11:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-13T09:11:22Z"}, "message": "Auto merge of #13940 - nlydv:unwrap-panic, r=lnicola\n\nFix panicking Option unwraping in match arm analysis\n\nHi, first PR here!\n\nI've noticed my IDE sometimes briefly becoming pretty slow to respond while writing Rust. When checking the logs I found reams of this same error repeating itself.\n\n```\nthread 'Worker' panicked at 'called `Option::unwrap()` on a `None` value'\ncrates/ide-assists/src/handlers/convert_match_to_let_else.rs:90:46\n```\n\nRA seemed to have been panicking on virtually every keystroke I made whenever I was part way through writing/refactoring a match statement of relevance to this assist.\n\nThe fix in this PR should be self-explanatory.", "tree": {"sha": "d34f6378c216fc00b82de59f95979fb35fac29ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d34f6378c216fc00b82de59f95979fb35fac29ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7a3f34ad8f7d38ad3cf81f89eb8b8d5cbb1b3eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7a3f34ad8f7d38ad3cf81f89eb8b8d5cbb1b3eb", "html_url": "https://github.com/rust-lang/rust/commit/c7a3f34ad8f7d38ad3cf81f89eb8b8d5cbb1b3eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7a3f34ad8f7d38ad3cf81f89eb8b8d5cbb1b3eb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb39efe26cfbc81e5ed5e6518262fcc2d44229c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb39efe26cfbc81e5ed5e6518262fcc2d44229c2", "html_url": "https://github.com/rust-lang/rust/commit/fb39efe26cfbc81e5ed5e6518262fcc2d44229c2"}, {"sha": "9721505bf1cc441334c9973525a5c9de826e51bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/9721505bf1cc441334c9973525a5c9de826e51bb", "html_url": "https://github.com/rust-lang/rust/commit/9721505bf1cc441334c9973525a5c9de826e51bb"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fbd81c80151d3eafeb5fe78200f3eaa8a28d74ae", "filename": "crates/ide-assists/src/handlers/convert_match_to_let_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7a3f34ad8f7d38ad3cf81f89eb8b8d5cbb1b3eb/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_match_to_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7a3f34ad8f7d38ad3cf81f89eb8b8d5cbb1b3eb/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_match_to_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_match_to_let_else.rs?ref=c7a3f34ad8f7d38ad3cf81f89eb8b8d5cbb1b3eb", "patch": "@@ -87,7 +87,7 @@ fn find_arms(\n     let mut extracting = None;\n     let mut diverging = None;\n     for arm in arms {\n-        if ctx.sema.type_of_expr(&arm.expr().unwrap()).unwrap().original().is_never() {\n+        if ctx.sema.type_of_expr(&arm.expr()?)?.original().is_never() {\n             diverging = Some(arm);\n         } else {\n             extracting = Some(arm);"}]}