{"sha": "58b1a127d66b71e1a2180b509856f2c52feca9b3", "node_id": "C_kwDOAAsO6NoAKDU4YjFhMTI3ZDY2YjcxZTFhMjE4MGI1MDk4NTZmMmM1MmZlY2E5YjM", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2021-09-28T20:03:31Z"}, "committer": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2021-09-28T20:23:54Z"}, "message": "Avoid allocations and copying in Vec::leak\n\nDon't shrink the Vec (by calling into_boxed_slice) before leaking it.", "tree": {"sha": "c2b9192703156e8259e7fb2b0afde55afdbbd014", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2b9192703156e8259e7fb2b0afde55afdbbd014"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58b1a127d66b71e1a2180b509856f2c52feca9b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58b1a127d66b71e1a2180b509856f2c52feca9b3", "html_url": "https://github.com/rust-lang/rust/commit/58b1a127d66b71e1a2180b509856f2c52feca9b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58b1a127d66b71e1a2180b509856f2c52feca9b3/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f8092cc32ec171becef8ceacec7dbb06c5d7d7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f8092cc32ec171becef8ceacec7dbb06c5d7d7e", "html_url": "https://github.com/rust-lang/rust/commit/8f8092cc32ec171becef8ceacec7dbb06c5d7d7e"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "a8b939bc249e005a13ebfaec5bd5ce280d1e88c7", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/58b1a127d66b71e1a2180b509856f2c52feca9b3/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58b1a127d66b71e1a2180b509856f2c52feca9b3/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=58b1a127d66b71e1a2180b509856f2c52feca9b3", "patch": "@@ -1976,7 +1976,8 @@ impl<T, A: Allocator> Vec<T, A> {\n     where\n         A: 'a,\n     {\n-        Box::leak(self.into_boxed_slice())\n+        let mut me = ManuallyDrop::new(self);\n+        unsafe { slice::from_raw_parts_mut(me.as_mut_ptr(), me.len) }\n     }\n \n     /// Returns the remaining spare capacity of the vector as a slice of"}]}