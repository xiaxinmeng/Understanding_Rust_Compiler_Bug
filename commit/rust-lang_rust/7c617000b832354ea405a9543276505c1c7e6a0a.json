{"sha": "7c617000b832354ea405a9543276505c1c7e6a0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNjE3MDAwYjgzMjM1NGVhNDA1YTk1NDMyNzY1MDVjMWM3ZTZhMGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-11T15:20:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-11T15:20:24Z"}, "message": "Merge #4850\n\n4850: Indent chain `.` even if there's more stuff afterwards r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "80493f94a580f7da9828aee2d489f12ac04b35f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80493f94a580f7da9828aee2d489f12ac04b35f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c617000b832354ea405a9543276505c1c7e6a0a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe4ku4CRBK7hj4Ov3rIwAAdHIIAG55RW6RPGJhz6Rvk1+PVpwA\ngLtyKtLeniyMk57TuVz8hM5L9NWRinTIAqFCTwHVfBbrvzIe4x+CHaGzNElDOlVy\nOOu7ZcJglnd2nF971JqeA4Tvw/8KZj0yEvEaRCT7RzRKcbRWoYm56BKgScrse4zN\nq8tm8JPAG0UzaKqDmRIx9U8eILFcbTEQHuqCMqtSl38sf13DIE0dnx3HMD/0MFz9\n1eAX9J9nOH+Ov3Nxo0zMdmPmYjJSskcG+4VYZCTkhHnm4yINFMV8FyGcUKfjLvmZ\nFFxVBKS7hA+t1+6gnbiu2WbpXsV5/FMuE04LZdzhSg8OcVQYDCjr2LcMRpbV74s=\n=6hBj\n-----END PGP SIGNATURE-----\n", "payload": "tree 80493f94a580f7da9828aee2d489f12ac04b35f5\nparent 900a0a7a895c4d078d324155205cd4c21261b648\nparent 279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1591888824 +0000\ncommitter GitHub <noreply@github.com> 1591888824 +0000\n\nMerge #4850\n\n4850: Indent chain `.` even if there's more stuff afterwards r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c617000b832354ea405a9543276505c1c7e6a0a", "html_url": "https://github.com/rust-lang/rust/commit/7c617000b832354ea405a9543276505c1c7e6a0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c617000b832354ea405a9543276505c1c7e6a0a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "900a0a7a895c4d078d324155205cd4c21261b648", "url": "https://api.github.com/repos/rust-lang/rust/commits/900a0a7a895c4d078d324155205cd4c21261b648", "html_url": "https://github.com/rust-lang/rust/commit/900a0a7a895c4d078d324155205cd4c21261b648"}, {"sha": "279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c", "url": "https://api.github.com/repos/rust-lang/rust/commits/279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c", "html_url": "https://github.com/rust-lang/rust/commit/279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "83776d2b6d34a3641a5c0cdfa483f1c4a9ce9dcc", "filename": "crates/ra_ide/src/typing.rs", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/7c617000b832354ea405a9543276505c1c7e6a0a/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c617000b832354ea405a9543276505c1c7e6a0a/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping.rs?ref=7c617000b832354ea405a9543276505c1c7e6a0a", "patch": "@@ -21,7 +21,9 @@ use ra_ide_db::{source_change::SourceFileEdit, RootDatabase};\n use ra_syntax::{\n     algo::find_node_at_offset,\n     ast::{self, AstToken},\n-    AstNode, SourceFile, TextRange, TextSize,\n+    AstNode, SourceFile,\n+    SyntaxKind::{FIELD_EXPR, METHOD_CALL_EXPR},\n+    TextRange, TextSize,\n };\n \n use ra_text_edit::TextEdit;\n@@ -98,9 +100,12 @@ fn on_dot_typed(file: &SourceFile, offset: TextSize) -> Option<TextEdit> {\n     };\n     let current_indent_len = TextSize::of(current_indent);\n \n+    let parent = whitespace.syntax().parent();\n     // Make sure dot is a part of call chain\n-    let field_expr = ast::FieldExpr::cast(whitespace.syntax().parent())?;\n-    let prev_indent = leading_indent(field_expr.syntax())?;\n+    if !matches!(parent.kind(), FIELD_EXPR | METHOD_CALL_EXPR) {\n+        return None;\n+    }\n+    let prev_indent = leading_indent(&parent)?;\n     let target_indent = format!(\"    {}\", prev_indent);\n     let target_indent_len = TextSize::of(&target_indent);\n     if current_indent_len == target_indent_len {\n@@ -143,11 +148,11 @@ mod tests {\n         })\n     }\n \n-    fn type_char(char_typed: char, before: &str, after: &str) {\n-        let actual = do_type_char(char_typed, before)\n+    fn type_char(char_typed: char, ra_fixture_before: &str, ra_fixture_after: &str) {\n+        let actual = do_type_char(char_typed, ra_fixture_before)\n             .unwrap_or_else(|| panic!(\"typing `{}` did nothing\", char_typed));\n \n-        assert_eq_text!(after, &actual);\n+        assert_eq_text!(ra_fixture_after, &actual);\n     }\n \n     fn type_char_noop(char_typed: char, before: &str) {\n@@ -248,6 +253,27 @@ fn foo() {\n         )\n     }\n \n+    #[test]\n+    fn indents_new_chain_call_with_let() {\n+        type_char(\n+            '.',\n+            r#\"\n+fn main() {\n+    let _ = foo\n+    <|>\n+    bar()\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    let _ = foo\n+        .\n+    bar()\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn indents_continued_chain_call() {\n         type_char("}]}