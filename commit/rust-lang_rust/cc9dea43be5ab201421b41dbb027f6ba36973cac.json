{"sha": "cc9dea43be5ab201421b41dbb027f6ba36973cac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjOWRlYTQzYmU1YWIyMDE0MjFiNDFkYmIwMjdmNmJhMzY5NzNjYWM=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-09-25T20:34:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-25T20:34:51Z"}, "message": "Rollup merge of #54558 - tromey:find-filecheck, r=nikomatsakis\n\nImprovements to finding LLVM's FileCheck\n\nThis patch adds a few improvements to how the build system finds\nLLVM's FileCheck program.\n\n* On Fedora, the system LLVM installs FileCheck in the \"llvm\"\n  subdirectory of the LLVM libdir.  This patch teaches the build\n  system to look there.\n\n* This adds a configure option to specify which llvm-config executable\n  to use.  This is handy on systems that can parallel install multiple\n  versions of LLVM; for example I can now:\n\n    ./configure --llvm-config=/bin/llvm-config-5.0-64\n\n  ... to build against LLVM 5, rather than whatever the default\n  llvm-config might be.\n\n* Finally, this adds a configure- and config.toml- option to set the\n  path to FileCheck.  This is handy when building against an LLVM\n  where FileCheck was not installed.  This happens on compatibility\n  installs of LLVM on Fedora.", "tree": {"sha": "898f79af831dc3687a9693814cbe7674c81d7283", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/898f79af831dc3687a9693814cbe7674c81d7283"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc9dea43be5ab201421b41dbb027f6ba36973cac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbqpvrCRBK7hj4Ov3rIwAAdHIIALKaTsWaRt9LSJ63I4pEiTYj\nI4WdBq6NWZh1/Y6WfoZT1XCaVrtaJzq8ya4K5aRrZJ8yYxZPFC/pVXRnfA3QdJLi\nE6kR72I6gh4z2IkwKPA6Cl5ITz1jhiaq+1EGHohGNW27hrVwPqNjpB/Xj5M5NxK1\nkYxNcPKtIwU0TbcKDtGc1cAKaMExTFjFJst4PbioeKjrGh3sCsS6Q5/yr6ToL/hV\nzsYk26dK2j7C3zIjNVlEVcpiWCCIwQKioIkiOzY1fHZwupqrpvuNsWhGlaNy49/s\nkt1f4qqoNd/pMLNu1lXiyJ7JeehiJmAWci8xTYrntsLE2/twQM7qBg7MJkdNn3g=\n=yiHW\n-----END PGP SIGNATURE-----\n", "payload": "tree 898f79af831dc3687a9693814cbe7674c81d7283\nparent 4ceeec09efa468700768a21d71bb92d733728887\nparent f4b4939f3e024c53355d4f99c0762135a613dae0\nauthor Pietro Albini <pietro@pietroalbini.org> 1537907691 +0200\ncommitter GitHub <noreply@github.com> 1537907691 +0200\n\nRollup merge of #54558 - tromey:find-filecheck, r=nikomatsakis\n\nImprovements to finding LLVM's FileCheck\n\nThis patch adds a few improvements to how the build system finds\nLLVM's FileCheck program.\n\n* On Fedora, the system LLVM installs FileCheck in the \"llvm\"\n  subdirectory of the LLVM libdir.  This patch teaches the build\n  system to look there.\n\n* This adds a configure option to specify which llvm-config executable\n  to use.  This is handy on systems that can parallel install multiple\n  versions of LLVM; for example I can now:\n\n    ./configure --llvm-config=/bin/llvm-config-5.0-64\n\n  ... to build against LLVM 5, rather than whatever the default\n  llvm-config might be.\n\n* Finally, this adds a configure- and config.toml- option to set the\n  path to FileCheck.  This is handy when building against an LLVM\n  where FileCheck was not installed.  This happens on compatibility\n  installs of LLVM on Fedora.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc9dea43be5ab201421b41dbb027f6ba36973cac", "html_url": "https://github.com/rust-lang/rust/commit/cc9dea43be5ab201421b41dbb027f6ba36973cac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc9dea43be5ab201421b41dbb027f6ba36973cac/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ceeec09efa468700768a21d71bb92d733728887", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ceeec09efa468700768a21d71bb92d733728887", "html_url": "https://github.com/rust-lang/rust/commit/4ceeec09efa468700768a21d71bb92d733728887"}, {"sha": "f4b4939f3e024c53355d4f99c0762135a613dae0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4b4939f3e024c53355d4f99c0762135a613dae0", "html_url": "https://github.com/rust-lang/rust/commit/f4b4939f3e024c53355d4f99c0762135a613dae0"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "66eaab236f7c0fcb6b1c94c347cb84e8bdbf357a", "filename": "config.toml.example", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cc9dea43be5ab201421b41dbb027f6ba36973cac/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/cc9dea43be5ab201421b41dbb027f6ba36973cac/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=cc9dea43be5ab201421b41dbb027f6ba36973cac", "patch": "@@ -322,6 +322,7 @@\n \n # Flag indicating whether codegen tests will be run or not. If you get an error\n # saying that the FileCheck executable is missing, you may want to disable this.\n+# Also see the target's llvm-filecheck option.\n #codegen-tests = true\n \n # Flag indicating whether git info will be retrieved from .git automatically.\n@@ -416,6 +417,10 @@\n # target.\n #llvm-config = \"../path/to/llvm/root/bin/llvm-config\"\n \n+# Normally the build system can find LLVM's FileCheck utility, but if\n+# not, you can specify an explicit file name for it.\n+#llvm-filecheck = \"/path/to/FileCheck\"\n+\n # Path to the custom jemalloc static library to link into the standard library\n # by default. This is only used if jemalloc is still enabled above\n #jemalloc = \"/path/to/jemalloc/libjemalloc_pic.a\""}, {"sha": "3a4bc526d03bf3cec35b30bf5f2332f39195aeb7", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc9dea43be5ab201421b41dbb027f6ba36973cac/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc9dea43be5ab201421b41dbb027f6ba36973cac/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=cc9dea43be5ab201421b41dbb027f6ba36973cac", "patch": "@@ -162,6 +162,8 @@ pub struct Config {\n pub struct Target {\n     /// Some(path to llvm-config) if using an external LLVM.\n     pub llvm_config: Option<PathBuf>,\n+    /// Some(path to FileCheck) if one was specified.\n+    pub llvm_filecheck: Option<PathBuf>,\n     pub jemalloc: Option<PathBuf>,\n     pub cc: Option<PathBuf>,\n     pub cxx: Option<PathBuf>,\n@@ -330,6 +332,7 @@ struct Rust {\n #[serde(deny_unknown_fields, rename_all = \"kebab-case\")]\n struct TomlTarget {\n     llvm_config: Option<String>,\n+    llvm_filecheck: Option<String>,\n     jemalloc: Option<String>,\n     cc: Option<String>,\n     cxx: Option<String>,\n@@ -583,6 +586,9 @@ impl Config {\n                 if let Some(ref s) = cfg.llvm_config {\n                     target.llvm_config = Some(config.src.join(s));\n                 }\n+                if let Some(ref s) = cfg.llvm_filecheck {\n+                    target.llvm_filecheck = Some(config.src.join(s));\n+                }\n                 if let Some(ref s) = cfg.jemalloc {\n                     target.jemalloc = Some(config.src.join(s));\n                 }"}, {"sha": "75831dbe262aea95feede7674be3c85e5b227a00", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc9dea43be5ab201421b41dbb027f6ba36973cac/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/cc9dea43be5ab201421b41dbb027f6ba36973cac/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=cc9dea43be5ab201421b41dbb027f6ba36973cac", "patch": "@@ -95,6 +95,8 @@ def v(*args):\n v(\"bindir\", \"install.bindir\", \"install binaries\")\n \n v(\"llvm-root\", None, \"set LLVM root\")\n+v(\"llvm-config\", None, \"set path to llvm-config\")\n+v(\"llvm-filecheck\", None, \"set path to LLVM's FileCheck utility\")\n v(\"python\", \"build.python\", \"set path to python\")\n v(\"jemalloc-root\", None, \"set directory where libjemalloc_pic.a is located\")\n v(\"android-cross-path\", \"target.arm-linux-androideabi.android-ndk\",\n@@ -323,6 +325,10 @@ def set(key, value):\n         set('build.cargo', value + '/bin/cargo')\n     elif option.name == 'llvm-root':\n         set('target.{}.llvm-config'.format(build()), value + '/bin/llvm-config')\n+    elif option.name == 'llvm-config':\n+        set('target.{}.llvm-config'.format(build()), value)\n+    elif option.name == 'llvm-filecheck':\n+        set('target.{}.llvm-filecheck'.format(build()), value)\n     elif option.name == 'jemalloc-root':\n         set('target.{}.jemalloc'.format(build()), value + '/libjemalloc_pic.a')\n     elif option.name == 'tools':"}, {"sha": "75c18cd2dd41c81ac8041ce97a29524a4a5b36f5", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/cc9dea43be5ab201421b41dbb027f6ba36973cac/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc9dea43be5ab201421b41dbb027f6ba36973cac/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=cc9dea43be5ab201421b41dbb027f6ba36973cac", "patch": "@@ -641,9 +641,28 @@ impl Build {\n     /// Returns the path to `FileCheck` binary for the specified target\n     fn llvm_filecheck(&self, target: Interned<String>) -> PathBuf {\n         let target_config = self.config.target_config.get(&target);\n-        if let Some(s) = target_config.and_then(|c| c.llvm_config.as_ref()) {\n+        if let Some(s) = target_config.and_then(|c| c.llvm_filecheck.as_ref()) {\n+            s.to_path_buf()\n+        } else if let Some(s) = target_config.and_then(|c| c.llvm_config.as_ref()) {\n             let llvm_bindir = output(Command::new(s).arg(\"--bindir\"));\n-            Path::new(llvm_bindir.trim()).join(exe(\"FileCheck\", &*target))\n+            let filecheck = Path::new(llvm_bindir.trim()).join(exe(\"FileCheck\", &*target));\n+            if filecheck.exists() {\n+                filecheck\n+            } else {\n+                // On Fedora the system LLVM installs FileCheck in the\n+                // llvm subdirectory of the libdir.\n+                let llvm_libdir = output(Command::new(s).arg(\"--libdir\"));\n+                let lib_filecheck = Path::new(llvm_libdir.trim())\n+                    .join(\"llvm\").join(exe(\"FileCheck\", &*target));\n+                if lib_filecheck.exists() {\n+                    lib_filecheck\n+                } else {\n+                    // Return the most normal file name, even though\n+                    // it doesn't exist, so that any error message\n+                    // refers to that.\n+                    filecheck\n+                }\n+            }\n         } else {\n             let base = self.llvm_out(self.config.build).join(\"build\");\n             let base = if !self.config.ninja && self.config.build.contains(\"msvc\") {"}]}