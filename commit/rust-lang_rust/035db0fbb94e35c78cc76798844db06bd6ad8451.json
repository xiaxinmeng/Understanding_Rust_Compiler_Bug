{"sha": "035db0fbb94e35c78cc76798844db06bd6ad8451", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNWRiMGZiYjk0ZTM1Yzc4Y2M3Njc5ODg0NGRiMDZiZDZhZDg0NTE=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-03-15T10:26:54Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-03-16T17:38:19Z"}, "message": "Add test, remove printlns", "tree": {"sha": "43e1efbd8357bbaa2f78958f505e771ad55ea264", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43e1efbd8357bbaa2f78958f505e771ad55ea264"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/035db0fbb94e35c78cc76798844db06bd6ad8451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/035db0fbb94e35c78cc76798844db06bd6ad8451", "html_url": "https://github.com/rust-lang/rust/commit/035db0fbb94e35c78cc76798844db06bd6ad8451", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/035db0fbb94e35c78cc76798844db06bd6ad8451/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c32529ddd0d66a219226dd63da2d4b1825375c0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c32529ddd0d66a219226dd63da2d4b1825375c0e", "html_url": "https://github.com/rust-lang/rust/commit/c32529ddd0d66a219226dd63da2d4b1825375c0e"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "f1918817ef02b2be25a2a8866f6c3af455b954e3", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/035db0fbb94e35c78cc76798844db06bd6ad8451/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035db0fbb94e35c78cc76798844db06bd6ad8451/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=035db0fbb94e35c78cc76798844db06bd6ad8451", "patch": "@@ -206,7 +206,6 @@ fn macro_expand_with_arg(\n     };\n     let (tt, err) = macro_rules.0.expand(db, lazy_id, &macro_arg.0);\n     // Set a hard limit for the expanded tt\n-    eprintln!(\"expansion size: {}\", tt.count());\n     let count = tt.count();\n     if count > 65536 {\n         return (None, Some(format!(\"Total tokens count exceed limit : count = {}\", count)));"}, {"sha": "81d3cc1b66f5c4c35ef45d9dfcc7ac9a7b2f9215", "filename": "crates/ra_ide/src/completion/complete_scope.rs", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/035db0fbb94e35c78cc76798844db06bd6ad8451/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035db0fbb94e35c78cc76798844db06bd6ad8451/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=035db0fbb94e35c78cc76798844db06bd6ad8451", "patch": "@@ -905,6 +905,59 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn completes_in_simple_macro_without_closing_parens() {\n+        assert_debug_snapshot!(\n+                    do_reference_completion(\n+                        r\"\n+                macro_rules! m { ($e:expr) => { $e } }\n+                fn quux(x: i32) {\n+                    let y = 92;\n+                    m!(x<|>\n+                }\n+                \"\n+                    ),\n+                    @r###\"\n+        [\n+            CompletionItem {\n+                label: \"m!\",\n+                source_range: [145; 146),\n+                delete: [145; 146),\n+                insert: \"m!($0)\",\n+                kind: Macro,\n+                detail: \"macro_rules! m\",\n+            },\n+            CompletionItem {\n+                label: \"quux(\u2026)\",\n+                source_range: [145; 146),\n+                delete: [145; 146),\n+                insert: \"quux(${1:x})$0\",\n+                kind: Function,\n+                lookup: \"quux\",\n+                detail: \"fn quux(x: i32)\",\n+                trigger_call_info: true,\n+            },\n+            CompletionItem {\n+                label: \"x\",\n+                source_range: [145; 146),\n+                delete: [145; 146),\n+                insert: \"x\",\n+                kind: Binding,\n+                detail: \"i32\",\n+            },\n+            CompletionItem {\n+                label: \"y\",\n+                source_range: [145; 146),\n+                delete: [145; 146),\n+                insert: \"y\",\n+                kind: Binding,\n+                detail: \"i32\",\n+            },\n+        ]\n+        \"###\n+        );\n+    }\n+\n     #[test]\n     fn completes_unresolved_uses() {\n         assert_debug_snapshot!("}, {"sha": "5fb8414b3a61b112eb47d4309a280b92e6739ee2", "filename": "crates/ra_mbe/src/mbe_expander.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/035db0fbb94e35c78cc76798844db06bd6ad8451/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035db0fbb94e35c78cc76798844db06bd6ad8451/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs?ref=035db0fbb94e35c78cc76798844db06bd6ad8451", "patch": "@@ -11,7 +11,6 @@ use rustc_hash::FxHashMap;\n use crate::{ExpandError, ExpandResult};\n \n pub(crate) fn expand(rules: &crate::MacroRules, input: &tt::Subtree) -> ExpandResult<tt::Subtree> {\n-    eprintln!(\"expanding input: {:?}\", input);\n     let (mut result, mut unmatched_tokens, mut unmatched_patterns, mut err) = (\n         tt::Subtree::default(),\n         usize::max_value(),"}, {"sha": "fcb73fbc7c59753cbe8fb673c4caff060b3bef4d", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/035db0fbb94e35c78cc76798844db06bd6ad8451/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035db0fbb94e35c78cc76798844db06bd6ad8451/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=035db0fbb94e35c78cc76798844db06bd6ad8451", "patch": "@@ -73,7 +73,6 @@ pub fn token_tree_to_syntax_node(\n     tt: &tt::Subtree,\n     fragment_kind: FragmentKind,\n ) -> Result<(Parse<SyntaxNode>, TokenMap), ExpandError> {\n-    eprintln!(\"token_tree_to_syntax_node {:?} as {:?}\", tt, fragment_kind);\n     let tmp;\n     let tokens = match tt {\n         tt::Subtree { delimiter: None, token_trees } => token_trees.as_slice(),"}]}