{"sha": "00e0d8790dc7cffc4466fe3c9784a582d6367027", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZTBkODc5MGRjN2NmZmM0NDY2ZmUzYzk3ODRhNTgyZDYzNjcwMjc=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2019-07-12T13:27:21Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2019-07-12T13:27:21Z"}, "message": "Turn `indirect_structural_match` lint on explicitly in ui tests.", "tree": {"sha": "fbffa0309174ddf5452a0c88738336cdb745b177", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbffa0309174ddf5452a0c88738336cdb745b177"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00e0d8790dc7cffc4466fe3c9784a582d6367027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00e0d8790dc7cffc4466fe3c9784a582d6367027", "html_url": "https://github.com/rust-lang/rust/commit/00e0d8790dc7cffc4466fe3c9784a582d6367027", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00e0d8790dc7cffc4466fe3c9784a582d6367027/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b1b538843503568994c7ef37ea8206f0ee3c2e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b1b538843503568994c7ef37ea8206f0ee3c2e4", "html_url": "https://github.com/rust-lang/rust/commit/1b1b538843503568994c7ef37ea8206f0ee3c2e4"}], "stats": {"total": 50, "additions": 37, "deletions": 13}, "files": [{"sha": "055886bf3676cd169c1787459ebb1461d3a5db6c", "filename": "src/test/ui/issues/issue-55511.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Fissues%2Fissue-55511.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Fissues%2Fissue-55511.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55511.rs?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -1,5 +1,5 @@\n+#![warn(indirect_structural_match)]\n use std::cell::Cell;\n-\n trait Foo<'a> {\n     const C: Option<Cell<&'a u32>>;\n }"}, {"sha": "e094256f5c8271cd9d8353822f7fdadf472bb88e", "filename": "src/test/ui/issues/issue-55511.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Fissues%2Fissue-55511.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Fissues%2Fissue-55511.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55511.stderr?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -4,7 +4,11 @@ warning: to use a constant of type `std::cell::Cell` in a pattern, `std::cell::C\n LL |         <() as Foo<'static>>::C => { }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: #[warn(indirect_structural_match)] on by default\n+note: lint level defined here\n+  --> $DIR/issue-55511.rs:1:9\n+   |\n+LL | #![warn(indirect_structural_match)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n "}, {"sha": "584e7a00f0993339f42c09b510c531685443b63e", "filename": "src/test/ui/rfc1445/cant-hide-behind-direct-struct-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-direct-struct-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-direct-struct-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-direct-struct-param.rs?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -4,7 +4,7 @@\n // through that we had intended to reject.\n //\n // See discussion on rust-lang/rust#62307 and rust-lang/rust#62339\n-\n+#![warn(indirect_structural_match)]\n struct NoDerive(i32);\n \n // This impl makes NoDerive irreflexive."}, {"sha": "0328db5a49cf3c90b4ab42f013ae328c056f975b", "filename": "src/test/ui/rfc1445/cant-hide-behind-doubly-indirect-embedded.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-embedded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-embedded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-embedded.rs?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -4,7 +4,7 @@\n // through that we had intended to reject.\n //\n // See discussion on rust-lang/rust#62307 and rust-lang/rust#62339\n-\n+#![warn(indirect_structural_match)]\n // run-pass\n \n struct NoDerive(i32);"}, {"sha": "5281d576066daa70918ddbd9c2bdc4a85011a0c5", "filename": "src/test/ui/rfc1445/cant-hide-behind-doubly-indirect-embedded.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-embedded.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-embedded.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-embedded.stderr?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -4,7 +4,11 @@ warning: to use a constant of type `NoDerive` in a pattern, `NoDerive` must be a\n LL |         WRAP_DOUBLY_INDIRECT_INLINE => { panic!(\"WRAP_DOUBLY_INDIRECT_INLINE matched itself\"); }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: #[warn(indirect_structural_match)] on by default\n+note: lint level defined here\n+  --> $DIR/cant-hide-behind-doubly-indirect-embedded.rs:7:9\n+   |\n+LL | #![warn(indirect_structural_match)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n "}, {"sha": "54579e487a6b9d5e1f184b8d53e6b619104fd604", "filename": "src/test/ui/rfc1445/cant-hide-behind-doubly-indirect-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-param.rs?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -4,7 +4,7 @@\n // through that we had intended to reject.\n //\n // See discussion on rust-lang/rust#62307 and rust-lang/rust#62339\n-\n+#![warn(indirect_structural_match)]\n // run-pass\n \n struct NoDerive(i32);"}, {"sha": "5d601c2c006f7b9f3616c269259c7d805f80a47c", "filename": "src/test/ui/rfc1445/cant-hide-behind-doubly-indirect-param.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-param.stderr?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -4,7 +4,11 @@ warning: to use a constant of type `NoDerive` in a pattern, `NoDerive` must be a\n LL |         WRAP_DOUBLY_INDIRECT_PARAM => { panic!(\"WRAP_DOUBLY_INDIRECT_PARAM matched itself\"); }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: #[warn(indirect_structural_match)] on by default\n+note: lint level defined here\n+  --> $DIR/cant-hide-behind-doubly-indirect-param.rs:7:9\n+   |\n+LL | #![warn(indirect_structural_match)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n "}, {"sha": "2a24316898b5d0ec85fda2cb37fa6b985a66b3b3", "filename": "src/test/ui/rfc1445/cant-hide-behind-indirect-struct-embedded.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-embedded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-embedded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-embedded.rs?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -4,7 +4,7 @@\n // through that we had intended to reject.\n //\n // See discussion on rust-lang/rust#62307 and rust-lang/rust#62339\n-\n+#![warn(indirect_structural_match)]\n // run-pass\n \n struct NoDerive(i32);"}, {"sha": "4ac19afa706b0c3857416111155fc6d77a9f7999", "filename": "src/test/ui/rfc1445/cant-hide-behind-indirect-struct-embedded.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-embedded.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-embedded.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-embedded.stderr?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -4,7 +4,11 @@ warning: to use a constant of type `NoDerive` in a pattern, `NoDerive` must be a\n LL |         WRAP_INDIRECT_INLINE => { panic!(\"WRAP_INDIRECT_INLINE matched itself\"); }\n    |         ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: #[warn(indirect_structural_match)] on by default\n+note: lint level defined here\n+  --> $DIR/cant-hide-behind-indirect-struct-embedded.rs:7:9\n+   |\n+LL | #![warn(indirect_structural_match)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n "}, {"sha": "64e777f23223441833e0f918f1ac7c8e67958043", "filename": "src/test/ui/rfc1445/cant-hide-behind-indirect-struct-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-param.rs?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -4,7 +4,7 @@\n // through that we had intended to reject.\n //\n // See discussion on rust-lang/rust#62307 and rust-lang/rust#62339\n-\n+#![warn(indirect_structural_match)]\n // run-pass\n \n struct NoDerive(i32);"}, {"sha": "4000a4798785420b356c2e98d3ae006a54951742", "filename": "src/test/ui/rfc1445/cant-hide-behind-indirect-struct-param.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-param.stderr?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -4,7 +4,11 @@ warning: to use a constant of type `NoDerive` in a pattern, `NoDerive` must be a\n LL |         WRAP_INDIRECT_PARAM => { panic!(\"WRAP_INDIRECT_PARAM matched itself\"); }\n    |         ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: #[warn(indirect_structural_match)] on by default\n+note: lint level defined here\n+  --> $DIR/cant-hide-behind-indirect-struct-param.rs:7:9\n+   |\n+LL | #![warn(indirect_structural_match)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n "}, {"sha": "98943a9666a9ae842b3a510da52eabbf4d9c6872", "filename": "src/test/ui/rfc1445/issue-62307-match-ref-ref-forbidden-without-eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fissue-62307-match-ref-ref-forbidden-without-eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fissue-62307-match-ref-ref-forbidden-without-eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fissue-62307-match-ref-ref-forbidden-without-eq.rs?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -10,7 +10,7 @@\n \n // Issue 62307 pointed out a case where the checking for\n // `#[structural_match]` was too shallow.\n-\n+#![warn(indirect_structural_match)]\n // run-pass\n \n #[derive(Debug)]"}, {"sha": "0e158c2fda5607682ffbf88d403b15fdae984246", "filename": "src/test/ui/rfc1445/issue-62307-match-ref-ref-forbidden-without-eq.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fissue-62307-match-ref-ref-forbidden-without-eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00e0d8790dc7cffc4466fe3c9784a582d6367027/src%2Ftest%2Fui%2Frfc1445%2Fissue-62307-match-ref-ref-forbidden-without-eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fissue-62307-match-ref-ref-forbidden-without-eq.stderr?ref=00e0d8790dc7cffc4466fe3c9784a582d6367027", "patch": "@@ -4,7 +4,11 @@ warning: to use a constant of type `B` in a pattern, `B` must be annotated with\n LL |         RR_B1 => { println!(\"CLAIM RR0: {:?} matches {:?}\", RR_B1, RR_B0); }\n    |         ^^^^^\n    |\n-   = note: #[warn(indirect_structural_match)] on by default\n+note: lint level defined here\n+  --> $DIR/issue-62307-match-ref-ref-forbidden-without-eq.rs:13:9\n+   |\n+LL | #![warn(indirect_structural_match)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n "}]}