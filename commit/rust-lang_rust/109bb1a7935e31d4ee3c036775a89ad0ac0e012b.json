{"sha": "109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwOWJiMWE3OTM1ZTMxZDRlZTNjMDM2Nzc1YTg5YWQwYWMwZTAxMmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-06T15:21:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-06T15:21:47Z"}, "message": "Merge pull request #3867 from matklad/deny-eprintln\n\nCheck for eprintlns on CI", "tree": {"sha": "28160f40d1cf3127304456ec3d2a171fc7948c61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28160f40d1cf3127304456ec3d2a171fc7948c61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJei0kLCRBK7hj4Ov3rIwAAdHIIAC15z5OZIz8WZZIcy1nunUNr\nSXZCAb5AldipeP5A5OXMN9w+AeF5C77nAAdFCUD2hgSe0oaeY/fmdiav+tagh/6l\nl/0NSw75ONkUiSbupDYmOn73cjleigKtwgC5Vez0L/u20jKfuaffQGHnYbfYznyf\njn64xe4Kfu/ITM2oqgyir31OK+/1Kq+fAMtuBlgQLC3KdmK3Ld7agn1dJOBg1jUw\ny9PSaUZzhPbuUZxO9FZO4I5zyfK8GBgrWYZ0zz4rC49GpXmyiZ0/+dYPTsGJKDNp\ni2Dzt0Sny+TPgcBxlXNbJhmOst4lZu581xLhdsYMHx2ttiwVyQ380DmrOx9bRFA=\n=/9QD\n-----END PGP SIGNATURE-----\n", "payload": "tree 28160f40d1cf3127304456ec3d2a171fc7948c61\nparent f6d688d13070a54b288486900a30680d013c66ca\nparent 1b2d255be168333c136677599d2ea8b5a3f5996b\nauthor Aleksey Kladov <aleksey.kladov@gmail.com> 1586186507 +0200\ncommitter GitHub <noreply@github.com> 1586186507 +0200\n\nMerge pull request #3867 from matklad/deny-eprintln\n\nCheck for eprintlns on CI"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "html_url": "https://github.com/rust-lang/rust/commit/109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6d688d13070a54b288486900a30680d013c66ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6d688d13070a54b288486900a30680d013c66ca", "html_url": "https://github.com/rust-lang/rust/commit/f6d688d13070a54b288486900a30680d013c66ca"}, {"sha": "1b2d255be168333c136677599d2ea8b5a3f5996b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b2d255be168333c136677599d2ea8b5a3f5996b", "html_url": "https://github.com/rust-lang/rust/commit/1b2d255be168333c136677599d2ea8b5a3f5996b"}], "stats": {"total": 52, "additions": 39, "deletions": 13}, "files": [{"sha": "02a3b622877e1d3f82c28fb556256f85eb284c53", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "patch": "@@ -10,7 +10,7 @@ on:\n env:\n   CARGO_INCREMENTAL: 0\n   CARGO_NET_RETRY: 10\n-  RUN_SLOW_TESTS: 1\n+  CI: 1\n   RUST_BACKTRACE: short\n   RUSTFLAGS: -D warnings\n   RUSTUP_MAX_RETRIES: 10"}, {"sha": "c698d6e8c472aaa18fcf58597ec3623e6693c879", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "patch": "@@ -5,6 +5,11 @@\n //! certain context. For example, if the cursor is over `,`, a \"swap `,`\" assist\n //! becomes available.\n \n+#[allow(unused)]\n+macro_rules! eprintln {\n+    ($($tt:tt)*) => { stdx::eprintln!($($tt)*) };\n+}\n+\n mod assist_ctx;\n mod marks;\n #[cfg(test)]"}, {"sha": "2ad231d3688b49a0d855f8a3bfa4c8fb49e197b6", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "patch": "@@ -9,6 +9,7 @@ use hir_def::{\n     AsMacroCall, TraitId,\n };\n use hir_expand::ExpansionInfo;\n+use itertools::Itertools;\n use ra_db::{FileId, FileRange};\n use ra_prof::profile;\n use ra_syntax::{\n@@ -135,7 +136,6 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         node: &SyntaxNode,\n         offset: TextUnit,\n     ) -> impl Iterator<Item = SyntaxNode> + '_ {\n-        use itertools::Itertools;\n         node.token_at_offset(offset)\n             .map(|token| self.ancestors_with_macros(token.parent()))\n             .kmerge_by(|node1, node2| node1.text_range().len() < node2.text_range().len())"}, {"sha": "2d27bbdf8eb27088e840bb30dff9d0ef2442efa0", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "patch": "@@ -7,6 +7,11 @@\n //! Note that `hir_def` is a work in progress, so not all of the above is\n //! actually true.\n \n+#[allow(unused)]\n+macro_rules! eprintln {\n+    ($($tt:tt)*) => { stdx::eprintln!($($tt)*) };\n+}\n+\n pub mod db;\n \n pub mod attr;"}, {"sha": "9d61bba402cf75aa992799e1ea69d9c80266d505", "filename": "crates/ra_hir_ty/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flib.rs?ref=109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "patch": "@@ -1,6 +1,11 @@\n //! The type system. We currently use this to infer types for completion, hover\n //! information and various assists.\n \n+#[allow(unused)]\n+macro_rules! eprintln {\n+    ($($tt:tt)*) => { stdx::eprintln!($($tt)*) };\n+}\n+\n macro_rules! impl_froms {\n     ($e:ident: $($v:ident $(($($sv:ident),*))?),*) => {\n         $("}, {"sha": "5599f143f20babd1d228856bc10cab179ae1c49e", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "patch": "@@ -10,6 +10,11 @@\n // For proving that RootDatabase is RefUnwindSafe.\n #![recursion_limit = \"128\"]\n \n+#[allow(unused)]\n+macro_rules! eprintln {\n+    ($($tt:tt)*) => { stdx::eprintln!($($tt)*) };\n+}\n+\n pub mod mock_analysis;\n mod source_change;\n "}, {"sha": "036bf62a73c87d8017a2d40e6d6f4a1a199093ff", "filename": "crates/rust-analyzer/src/lib.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flib.rs?ref=109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "patch": "@@ -13,17 +13,8 @@\n pub mod cli;\n \n #[allow(unused)]\n-macro_rules! println {\n-    ($($tt:tt)*) => {\n-        compile_error!(\"stdout is locked, use eprintln\")\n-    };\n-}\n-\n-#[allow(unused)]\n-macro_rules! print {\n-    ($($tt:tt)*) => {\n-        compile_error!(\"stdout is locked, use eprint\")\n-    };\n+macro_rules! eprintln {\n+    ($($tt:tt)*) => { stdx::eprintln!($($tt)*) };\n }\n \n mod vfs_glob;"}, {"sha": "401a568bd5bb9557de79e3cc269d5e6a242ec2ff", "filename": "crates/stdx/src/lib.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fstdx%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/109bb1a7935e31d4ee3c036775a89ad0ac0e012b/crates%2Fstdx%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Flib.rs?ref=109bb1a7935e31d4ee3c036775a89ad0ac0e012b", "patch": "@@ -2,6 +2,21 @@\n \n use std::{cell::Cell, fmt};\n \n+#[inline(always)]\n+pub fn is_ci() -> bool {\n+    option_env!(\"CI\").is_some()\n+}\n+\n+#[macro_export]\n+macro_rules! eprintln {\n+    ($($tt:tt)*) => {{\n+        if $crate::is_ci() {\n+            panic!(\"Forgot to remove debug-print?\")\n+        }\n+        std::eprintln!($($tt)*)\n+    }}\n+}\n+\n /// Appends formatted string to a `String`.\n #[macro_export]\n macro_rules! format_to {"}]}