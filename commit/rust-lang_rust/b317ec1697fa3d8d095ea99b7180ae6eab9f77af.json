{"sha": "b317ec1697fa3d8d095ea99b7180ae6eab9f77af", "node_id": "C_kwDOAAsO6NoAKGIzMTdlYzE2OTdmYTNkOGQwOTVlYTk5YjcxODBhZTZlYWI5Zjc3YWY", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-04-27T02:49:00Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-05-01T01:10:01Z"}, "message": "Feature-gate `do yeet` inside `cfg`s too", "tree": {"sha": "88c0c7a9aa35e39ce516d26615f92851866a6fdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88c0c7a9aa35e39ce516d26615f92851866a6fdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b317ec1697fa3d8d095ea99b7180ae6eab9f77af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b317ec1697fa3d8d095ea99b7180ae6eab9f77af", "html_url": "https://github.com/rust-lang/rust/commit/b317ec1697fa3d8d095ea99b7180ae6eab9f77af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b317ec1697fa3d8d095ea99b7180ae6eab9f77af/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b5766cd24554427c2f5fb283c1f09718804cfd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b5766cd24554427c2f5fb283c1f09718804cfd0", "html_url": "https://github.com/rust-lang/rust/commit/9b5766cd24554427c2f5fb283c1f09718804cfd0"}], "stats": {"total": 49, "additions": 41, "deletions": 8}, "files": [{"sha": "0e8af549692fc2f9e42e85125e936edce4cd2e8a", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b317ec1697fa3d8d095ea99b7180ae6eab9f77af/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b317ec1697fa3d8d095ea99b7180ae6eab9f77af/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=b317ec1697fa3d8d095ea99b7180ae6eab9f77af", "patch": "@@ -619,14 +619,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n             ast::ExprKind::TryBlock(_) => {\n                 gate_feature_post!(&self, try_blocks, e.span, \"`try` expression is experimental\");\n             }\n-            ast::ExprKind::Yeet(_) => {\n-                gate_feature_post!(\n-                    &self,\n-                    yeet_expr,\n-                    e.span,\n-                    \"`do yeet` expression is experimental\"\n-                );\n-            }\n             ast::ExprKind::Block(_, Some(label)) => {\n                 gate_feature_post!(\n                     &self,\n@@ -791,6 +783,7 @@ pub fn check_crate(krate: &ast::Crate, sess: &Session) {\n     gate_all!(inline_const, \"inline-const is experimental\");\n     gate_all!(inline_const_pat, \"inline-const in pattern position is experimental\");\n     gate_all!(associated_const_equality, \"associated const equality is incomplete\");\n+    gate_all!(yeet_expr, \"`do yeet` expression is experimental\");\n \n     // All uses of `gate_all!` below this point were added in #65742,\n     // and subsequently disabled (with the non-early gating readded)."}, {"sha": "a33bd34508c5f63401fefcc530a672bd56a24371", "filename": "src/test/ui/feature-gates/feature-gate-yeet_expr-in-cfg.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b317ec1697fa3d8d095ea99b7180ae6eab9f77af/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-yeet_expr-in-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b317ec1697fa3d8d095ea99b7180ae6eab9f77af/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-yeet_expr-in-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-yeet_expr-in-cfg.rs?ref=b317ec1697fa3d8d095ea99b7180ae6eab9f77af", "patch": "@@ -0,0 +1,19 @@\n+// compile-flags: --edition 2021\n+\n+pub fn demo() -> Option<i32> {\n+    #[cfg(nope)]\n+    {\n+        do yeet //~ ERROR `do yeet` expression is experimental\n+    }\n+\n+    Some(1)\n+}\n+\n+#[cfg(nope)]\n+pub fn alternative() -> Result<(), String> {\n+    do yeet \"hello\"; //~ ERROR `do yeet` expression is experimental\n+}\n+\n+fn main() {\n+    demo();\n+}"}, {"sha": "f90c379bdafe3efeeb3818ddcd7f54f8b051e4f5", "filename": "src/test/ui/feature-gates/feature-gate-yeet_expr-in-cfg.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b317ec1697fa3d8d095ea99b7180ae6eab9f77af/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-yeet_expr-in-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b317ec1697fa3d8d095ea99b7180ae6eab9f77af/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-yeet_expr-in-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-yeet_expr-in-cfg.stderr?ref=b317ec1697fa3d8d095ea99b7180ae6eab9f77af", "patch": "@@ -0,0 +1,21 @@\n+error[E0658]: `do yeet` expression is experimental\n+  --> $DIR/feature-gate-yeet_expr-in-cfg.rs:6:9\n+   |\n+LL |         do yeet\n+   |         ^^^^^^^\n+   |\n+   = note: see issue #96373 <https://github.com/rust-lang/rust/issues/96373> for more information\n+   = help: add `#![feature(yeet_expr)]` to the crate attributes to enable\n+\n+error[E0658]: `do yeet` expression is experimental\n+  --> $DIR/feature-gate-yeet_expr-in-cfg.rs:14:5\n+   |\n+LL |     do yeet \"hello\";\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #96373 <https://github.com/rust-lang/rust/issues/96373> for more information\n+   = help: add `#![feature(yeet_expr)]` to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}]}