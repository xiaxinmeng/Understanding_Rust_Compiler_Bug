{"sha": "23d1520398628a02f2d2551ae2a27bd28af269f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzZDE1MjAzOTg2MjhhMDJmMmQyNTUxYWUyYTI3YmQyOGFmMjY5ZjI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-11T23:33:21Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-12T02:01:54Z"}, "message": "Support running a subset of tests from the command line. Issue #428", "tree": {"sha": "de8501645f2b726c04e3cd7a6e7733b512161a25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de8501645f2b726c04e3cd7a6e7733b512161a25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23d1520398628a02f2d2551ae2a27bd28af269f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23d1520398628a02f2d2551ae2a27bd28af269f2", "html_url": "https://github.com/rust-lang/rust/commit/23d1520398628a02f2d2551ae2a27bd28af269f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23d1520398628a02f2d2551ae2a27bd28af269f2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94e1b362f06cba2f2cc894cff44d0fdde4cb204a", "url": "https://api.github.com/repos/rust-lang/rust/commits/94e1b362f06cba2f2cc894cff44d0fdde4cb204a", "html_url": "https://github.com/rust-lang/rust/commit/94e1b362f06cba2f2cc894cff44d0fdde4cb204a"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "f28eb31a175159531019aa92280ee4603d69acc1", "filename": "src/lib/test.rs", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/23d1520398628a02f2d2551ae2a27bd28af269f2/src%2Flib%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d1520398628a02f2d2551ae2a27bd28af269f2/src%2Flib%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftest.rs?ref=23d1520398628a02f2d2551ae2a27bd28af269f2", "patch": "@@ -28,24 +28,37 @@ type test_desc = rec(test_name name,\n // The default console test runner. It accepts the command line\n // arguments and a vector of test_descs (generated at compile time).\n fn test_main(&vec[str] args, &test_desc[] tests) -> int {\n-    if (run_tests(tests)) {\n+    if (run_tests(parse_opts(args), tests)) {\n         ret 0;\n     } else {\n         ret -1;\n     }\n }\n \n-fn run_tests(&test_desc[] tests) -> bool {\n+type test_opts = rec(option::t[str] filter);\n+\n+fn parse_opts(&vec[str] args) -> test_opts {\n+    rec(filter = if (vec::len(args) > 1u) {\n+            option::some(args.(1))\n+        } else {\n+            option::none\n+        })\n+}\n+\n+// A simple console test runner\n+fn run_tests(&test_opts opts, &test_desc[] tests) -> bool {\n+\n+    auto filtered_tests = filter_tests(opts, tests);\n \n     auto out = io::stdout();\n \n-    auto total = ivec::len(tests);\n+    auto total = ivec::len(filtered_tests);\n     out.write_line(#fmt(\"running %u tests\", total));\n \n     auto passed = 0u;\n     auto failed = 0u;\n \n-    for (test_desc test in tests) {\n+    for (test_desc test in filtered_tests) {\n         out.write_str(#fmt(\"running %s ... \", test.name));\n         if (run_test(test)) {\n             passed += 1u;\n@@ -91,6 +104,25 @@ fn run_tests(&test_desc[] tests) -> bool {\n     }\n }\n \n+fn filter_tests(&test_opts opts, &test_desc[] tests) -> test_desc[] {\n+    if (option::is_none(opts.filter)) {\n+        ret tests;\n+    }\n+\n+    auto filter_str = alt opts.filter { option::some(?f) { f }\n+                                        option::none { \"\" } };\n+\n+    auto filter = bind fn(&test_desc test,\n+                          str filter_str) -> option::t[test_desc] {\n+        if (str::find(test.name, filter_str) >= 0) {\n+            ret option::some(test);\n+        } else {\n+            ret option::none;\n+        }\n+    } (_, filter_str);\n+\n+    ret ivec::filter_map(filter, tests);\n+}\n \n \n // Local Variables:"}]}