{"sha": "479cc7ae9ab02700516829221291865944e2c6cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3OWNjN2FlOWFiMDI3MDA1MTY4MjkyMjEyOTE4NjU5NDRlMmM2Y2I=", "commit": {"author": {"name": "lqd", "email": "remy.rakic+github@gmail.com", "date": "2019-11-18T12:45:41Z"}, "committer": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2019-12-06T10:50:01Z"}, "message": "update to polonius 0.11 to compute subset errors\n\n- adapt to the new polonius `FactTypes` API\n- reorganize the type aliases referring to polonius to avoid referencing the inner atom or fact types multiple times: only one input and output types should be enough for everyone. They could equally be in `borrow_check` as `nll` though.", "tree": {"sha": "c3b8f5a21a8ccad2d7a323b3c8edf8cc7751d589", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3b8f5a21a8ccad2d7a323b3c8edf8cc7751d589"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/479cc7ae9ab02700516829221291865944e2c6cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/479cc7ae9ab02700516829221291865944e2c6cb", "html_url": "https://github.com/rust-lang/rust/commit/479cc7ae9ab02700516829221291865944e2c6cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/479cc7ae9ab02700516829221291865944e2c6cb/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b482cdf7ce55e05ee8392e1ade70966e3189cfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b482cdf7ce55e05ee8392e1ade70966e3189cfd", "html_url": "https://github.com/rust-lang/rust/commit/7b482cdf7ce55e05ee8392e1ade70966e3189cfd"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "65e58b798df67fb8757498708e4cbe0ec8678395", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/479cc7ae9ab02700516829221291865944e2c6cb/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/479cc7ae9ab02700516829221291865944e2c6cb/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=479cc7ae9ab02700516829221291865944e2c6cb", "patch": "@@ -2575,9 +2575,9 @@ checksum = \"676e8eb2b1b4c9043511a9b7bea0915320d7e502b0a079fb03f9635a5252b18c\"\n \n [[package]]\n name = \"polonius-engine\"\n-version = \"0.10.0\"\n+version = \"0.11.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"50fa9dbfd0d3d60594da338cfe6f94028433eecae4b11b7e83fd99759227bbfe\"\n+checksum = \"1e478d7c38eb785c6416cbe58df12aa55d7aefa3759b6d3e044b2ed03f423cec\"\n dependencies = [\n  \"datafrog\",\n  \"log\","}, {"sha": "fb5387ffd018e5cd582d21e39b18362cb9b2c50f", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/479cc7ae9ab02700516829221291865944e2c6cb/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/479cc7ae9ab02700516829221291865944e2c6cb/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=479cc7ae9ab02700516829221291865944e2c6cb", "patch": "@@ -20,7 +20,7 @@ scoped-tls = \"1.0\"\n log = { version = \"0.4\", features = [\"release_max_level_info\", \"std\"] }\n rustc-rayon = \"0.3.0\"\n rustc-rayon-core = \"0.3.0\"\n-polonius-engine  = \"0.10.0\"\n+polonius-engine = \"0.11.0\"\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_target = { path = \"../librustc_target\" }"}, {"sha": "7e3bd98176e6a3479124a4735e36b34842bf3405", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/479cc7ae9ab02700516829221291865944e2c6cb/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/479cc7ae9ab02700516829221291865944e2c6cb/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=479cc7ae9ab02700516829221291865944e2c6cb", "patch": "@@ -16,7 +16,7 @@ dot = { path = \"../libgraphviz\", package = \"graphviz\" }\n itertools = \"0.8\"\n log = \"0.4\"\n log_settings = \"0.1.1\"\n-polonius-engine  = \"0.10.0\"\n+polonius-engine = \"0.11.0\"\n rustc = { path = \"../librustc\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "57c544fda0c5467f30099bf523dc75e76aebcdac", "filename": "src/librustc_mir/borrow_check/flows.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/479cc7ae9ab02700516829221291865944e2c6cb/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/479cc7ae9ab02700516829221291865944e2c6cb/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs?ref=479cc7ae9ab02700516829221291865944e2c6cb", "patch": "@@ -3,16 +3,15 @@\n //! FIXME: this might be better as a \"generic\" fixed-point combinator,\n //! but is not as ugly as it is right now.\n \n-use rustc::mir::{BasicBlock, Local, Location};\n-use rustc::ty::RegionVid;\n+use rustc::mir::{BasicBlock, Location};\n use rustc_index::bit_set::BitIter;\n \n use crate::borrow_check::location::LocationIndex;\n \n-use polonius_engine::Output;\n+use crate::borrow_check::nll::PoloniusOutput;\n \n use crate::dataflow::indexes::BorrowIndex;\n-use crate::dataflow::move_paths::{HasMoveData, MovePathIndex};\n+use crate::dataflow::move_paths::HasMoveData;\n use crate::dataflow::Borrows;\n use crate::dataflow::EverInitializedPlaces;\n use crate::dataflow::MaybeUninitializedPlaces;\n@@ -21,8 +20,6 @@ use either::Either;\n use std::fmt;\n use std::rc::Rc;\n \n-crate type PoloniusOutput = Output<RegionVid, BorrowIndex, LocationIndex, Local, MovePathIndex>;\n-\n crate struct Flows<'b, 'tcx> {\n     borrows: FlowAtLocation<'tcx, Borrows<'b, 'tcx>>,\n     pub uninits: FlowAtLocation<'tcx, MaybeUninitializedPlaces<'b, 'tcx>>,"}, {"sha": "eabb11acab91edc970fafe741af3a8d670d16a31", "filename": "src/librustc_mir/borrow_check/nll/facts.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/479cc7ae9ab02700516829221291865944e2c6cb/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ffacts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/479cc7ae9ab02700516829221291865944e2c6cb/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ffacts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ffacts.rs?ref=479cc7ae9ab02700516829221291865944e2c6cb", "patch": "@@ -1,6 +1,6 @@\n use crate::borrow_check::location::{LocationIndex, LocationTable};\n use crate::dataflow::indexes::{BorrowIndex, MovePathIndex};\n-use polonius_engine::AllFacts as PoloniusAllFacts;\n+use polonius_engine::AllFacts as PoloniusFacts;\n use polonius_engine::Atom;\n use rustc::mir::Local;\n use rustc::ty::{RegionVid, TyCtxt};\n@@ -11,7 +11,18 @@ use std::fs::{self, File};\n use std::io::Write;\n use std::path::Path;\n \n-crate type AllFacts = PoloniusAllFacts<RegionVid, BorrowIndex, LocationIndex, Local, MovePathIndex>;\n+#[derive(Copy, Clone, Debug)]\n+crate struct RustcFacts;\n+\n+impl polonius_engine::FactTypes for RustcFacts {\n+    type Origin = RegionVid;\n+    type Loan = BorrowIndex;\n+    type Point = LocationIndex;\n+    type Variable = Local;\n+    type Path = MovePathIndex;\n+}\n+\n+crate type AllFacts = PoloniusFacts<RustcFacts>;\n \n crate trait AllFactsExt {\n     /// Returns `true` if there is a need to gather `AllFacts` given the"}, {"sha": "337f612f7cea95d37a11716ebe007114e26686a5", "filename": "src/librustc_mir/borrow_check/nll/mod.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/479cc7ae9ab02700516829221291865944e2c6cb/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/479cc7ae9ab02700516829221291865944e2c6cb/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs?ref=479cc7ae9ab02700516829221291865944e2c6cb", "patch": "@@ -1,10 +1,9 @@\n use crate::borrow_check::borrow_set::BorrowSet;\n-use crate::borrow_check::location::{LocationIndex, LocationTable};\n+use crate::borrow_check::location::LocationTable;\n use crate::borrow_check::nll::facts::AllFactsExt;\n use crate::borrow_check::nll::type_check::{MirTypeckResults, MirTypeckRegionConstraints};\n use crate::borrow_check::nll::region_infer::values::RegionValueElements;\n-use crate::dataflow::indexes::BorrowIndex;\n-use crate::dataflow::move_paths::{InitLocation, MoveData, MovePathIndex, InitKind};\n+use crate::dataflow::move_paths::{InitLocation, MoveData, InitKind};\n use crate::dataflow::FlowAtLocation;\n use crate::dataflow::MaybeInitializedPlaces;\n use crate::transform::MirSource;\n@@ -43,10 +42,12 @@ crate mod universal_regions;\n crate mod type_check;\n crate mod region_infer;\n \n-use self::facts::AllFacts;\n+use self::facts::{AllFacts, RustcFacts};\n use self::region_infer::RegionInferenceContext;\n use self::universal_regions::UniversalRegions;\n \n+crate type PoloniusOutput = Output<RustcFacts>;\n+\n /// Rewrites the regions in the MIR to use NLL variables, also\n /// scraping out the set of universal regions (e.g., region parameters)\n /// declared on the function. That set will need to be given to\n@@ -170,7 +171,7 @@ pub(in crate::borrow_check) fn compute_regions<'cx, 'tcx>(\n     errors_buffer: &mut Vec<Diagnostic>,\n ) -> (\n     RegionInferenceContext<'tcx>,\n-    Option<Rc<Output<RegionVid, BorrowIndex, LocationIndex, Local, MovePathIndex>>>,\n+    Option<Rc<PoloniusOutput>>,\n     Option<ClosureRegionRequirements<'tcx>>,\n ) {\n     let mut all_facts = if AllFacts::enabled(infcx.tcx) {"}]}