{"sha": "56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZjRlMWMzYThiZTU0YzFjODBkZTM2NjYxOGU4M2Q4ZDdhNmU5ZWI=", "commit": {"author": {"name": "Glenn Hope", "email": "glenn.alexander.hope@gmail.com", "date": "2020-05-07T15:06:30Z"}, "committer": {"name": "Glenn Hope", "email": "glenn.alexander.hope@gmail.com", "date": "2020-05-09T18:09:38Z"}, "message": "Check if the parent module name contains \"test\"", "tree": {"sha": "eb2cd4ef2c09d5359e159788520ed09cc4b2eae5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb2cd4ef2c09d5359e159788520ed09cc4b2eae5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb", "html_url": "https://github.com/rust-lang/rust/commit/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb/comments", "author": {"login": "MrAwesome", "id": 145945, "node_id": "MDQ6VXNlcjE0NTk0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/145945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrAwesome", "html_url": "https://github.com/MrAwesome", "followers_url": "https://api.github.com/users/MrAwesome/followers", "following_url": "https://api.github.com/users/MrAwesome/following{/other_user}", "gists_url": "https://api.github.com/users/MrAwesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrAwesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrAwesome/subscriptions", "organizations_url": "https://api.github.com/users/MrAwesome/orgs", "repos_url": "https://api.github.com/users/MrAwesome/repos", "events_url": "https://api.github.com/users/MrAwesome/events{/privacy}", "received_events_url": "https://api.github.com/users/MrAwesome/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MrAwesome", "id": 145945, "node_id": "MDQ6VXNlcjE0NTk0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/145945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrAwesome", "html_url": "https://github.com/MrAwesome", "followers_url": "https://api.github.com/users/MrAwesome/followers", "following_url": "https://api.github.com/users/MrAwesome/following{/other_user}", "gists_url": "https://api.github.com/users/MrAwesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrAwesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrAwesome/subscriptions", "organizations_url": "https://api.github.com/users/MrAwesome/orgs", "repos_url": "https://api.github.com/users/MrAwesome/repos", "events_url": "https://api.github.com/users/MrAwesome/events{/privacy}", "received_events_url": "https://api.github.com/users/MrAwesome/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdc75dbb7bbdc379b1f8cc346151fac4e63d7deb", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdc75dbb7bbdc379b1f8cc346151fac4e63d7deb", "html_url": "https://github.com/rust-lang/rust/commit/bdc75dbb7bbdc379b1f8cc346151fac4e63d7deb"}], "stats": {"total": 65, "additions": 46, "deletions": 19}, "files": [{"sha": "a22d0e6775dec893006babbfdba30f0432fe4b81", "filename": "clippy_lints/src/wildcard_imports.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_imports.rs?ref=56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb", "patch": "@@ -84,7 +84,7 @@ impl LateLintPass<'_, '_> for WildcardImports {\n             if !in_macro(item.span);\n             if let ItemKind::Use(use_path, UseKind::Glob) = &item.kind;\n             if !is_prelude_import(use_path.segments);\n-            if !is_super_only_import_in_test(use_path.segments);\n+            if !(is_super_only_import(use_path.segments) && is_in_test_module(cx, item));\n             let used_imports = cx.tcx.names_imported_by_glob_use(item.hir_id.owner);\n             if !used_imports.is_empty(); // Already handled by `unused_imports`\n             then {\n@@ -109,8 +109,7 @@ impl LateLintPass<'_, '_> for WildcardImports {\n                         span = use_path.span.with_hi(item.span.hi() - BytePos(1));\n                     }\n                     (\n-                        span,\n-                        false,\n+                        span, false,\n                     )\n                 };\n \n@@ -164,8 +163,14 @@ fn is_prelude_import(segments: &[PathSegment<'_>]) -> bool {\n         .map_or(false, |ps| ps.ident.as_str() == \"prelude\")\n }\n \n-// Allow \"super::*\" imports.\n-// This is intended primarily to ease the process of writing unit tests.\n-fn is_super_only_import_in_test(segments: &[PathSegment<'_>]) -> bool {\n-    segments.iter().len() == 1 && segments.first().map_or(false, |ps| ps.ident.as_str() == \"super\")\n+// Allow \"super::*\" imports in tests.\n+fn is_super_only_import(segments: &[PathSegment<'_>]) -> bool {\n+    segments.len() == 1 && segments[0].ident.as_str() == \"super\"\n+}\n+\n+fn is_in_test_module(cx: &LateContext<'_, '_>, item: &Item<'_>) -> bool {\n+    let parent = cx.tcx.hir().get_parent_node(item.hir_id);\n+    let parent_item = cx.tcx.hir().expect_item(parent);\n+    let parent_name = parent_item.ident.name.as_str();\n+    parent_name.contains(\"test\")\n }"}, {"sha": "1c5c01f65d153c9b7d526f30742df86be6398261", "filename": "tests/ui/wildcard_imports.fixed", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb/tests%2Fui%2Fwildcard_imports.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb/tests%2Fui%2Fwildcard_imports.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.fixed?ref=56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb", "patch": "@@ -159,23 +159,31 @@ fn test_weird_formatting() {\n mod test_super_imports {\n     fn foofoo() {}\n \n-    mod use_super {\n+    mod use_super_should_be_replaced {\n+        use super::foofoo;\n+\n+        fn with_super() {\n+            let _ = foofoo();\n+        }\n+    }\n+\n+    mod use_super_in_test_should_pass {\n         use super::*;\n \n         fn with_super() {\n             let _ = foofoo();\n         }\n     }\n \n-    mod use_explicit {\n+    mod use_explicit_should_be_replaced {\n         use test_super_imports::foofoo;\n \n         fn with_explicit() {\n             let _ = foofoo();\n         }\n     }\n \n-    mod use_double_super {\n+    mod use_double_super_should_be_replaced {\n         mod inner {\n             use super::super::foofoo;\n \n@@ -185,7 +193,7 @@ mod test_super_imports {\n         }\n     }\n \n-    mod use_super_explicit {\n+    mod use_super_explicit_should_be_replaced {\n         use super::super::test_super_imports::foofoo;\n \n         fn with_super_explicit() {"}, {"sha": "f783149ef93e914d342f454725cbf0d10ed243db", "filename": "tests/ui/wildcard_imports.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb/tests%2Fui%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb/tests%2Fui%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.rs?ref=56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb", "patch": "@@ -160,23 +160,31 @@ fn test_weird_formatting() {\n mod test_super_imports {\n     fn foofoo() {}\n \n-    mod use_super {\n+    mod use_super_should_be_replaced {\n         use super::*;\n \n         fn with_super() {\n             let _ = foofoo();\n         }\n     }\n \n-    mod use_explicit {\n+    mod use_super_in_test_should_pass {\n+        use super::*;\n+\n+        fn with_super() {\n+            let _ = foofoo();\n+        }\n+    }\n+\n+    mod use_explicit_should_be_replaced {\n         use test_super_imports::*;\n \n         fn with_explicit() {\n             let _ = foofoo();\n         }\n     }\n \n-    mod use_double_super {\n+    mod use_double_super_should_be_replaced {\n         mod inner {\n             use super::super::*;\n \n@@ -186,7 +194,7 @@ mod test_super_imports {\n         }\n     }\n \n-    mod use_super_explicit {\n+    mod use_super_explicit_should_be_replaced {\n         use super::super::test_super_imports::*;\n \n         fn with_super_explicit() {"}, {"sha": "649d550a88d10b3f59d6262bfd8dee60cfe09fa8", "filename": "tests/ui/wildcard_imports.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb/tests%2Fui%2Fwildcard_imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb/tests%2Fui%2Fwildcard_imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.stderr?ref=56f4e1c3a8be54c1c80de366618e83d8d7a6e9eb", "patch": "@@ -93,22 +93,28 @@ LL | |         *;\n    | |_________^ help: try: `crate:: fn_mod::foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:172:13\n+  --> $DIR/wildcard_imports.rs:164:13\n+   |\n+LL |         use super::*;\n+   |             ^^^^^^^^ help: try: `super::foofoo`\n+\n+error: usage of wildcard import\n+  --> $DIR/wildcard_imports.rs:180:13\n    |\n LL |         use test_super_imports::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `test_super_imports::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:181:17\n+  --> $DIR/wildcard_imports.rs:189:17\n    |\n LL |             use super::super::*;\n    |                 ^^^^^^^^^^^^^^^ help: try: `super::super::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:190:13\n+  --> $DIR/wildcard_imports.rs:198:13\n    |\n LL |         use super::super::test_super_imports::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `super::super::test_super_imports::foofoo`\n \n-error: aborting due to 18 previous errors\n+error: aborting due to 19 previous errors\n "}]}