{"sha": "12af338150686d2db128636b068beb5eafd25eba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyYWYzMzgxNTA2ODZkMmRiMTI4NjM2YjA2OGJlYjVlYWZkMjVlYmE=", "commit": {"author": {"name": "Tristian Celestin", "email": "tcelesti@redhat.com", "date": "2017-02-27T04:07:53Z"}, "committer": {"name": "Tristian Celestin", "email": "tcelesti@redhat.com", "date": "2017-02-27T04:07:53Z"}, "message": "Add space between colon and type annotation\nWrapped string in Rust don't require a backslash", "tree": {"sha": "8d1176f918f8697b2453e94f6a63c0be2e12e9ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d1176f918f8697b2453e94f6a63c0be2e12e9ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12af338150686d2db128636b068beb5eafd25eba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12af338150686d2db128636b068beb5eafd25eba", "html_url": "https://github.com/rust-lang/rust/commit/12af338150686d2db128636b068beb5eafd25eba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12af338150686d2db128636b068beb5eafd25eba/comments", "author": null, "committer": null, "parents": [{"sha": "75e28610a7f0910321d63b1776331bfde90b9f7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/75e28610a7f0910321d63b1776331bfde90b9f7d", "html_url": "https://github.com/rust-lang/rust/commit/75e28610a7f0910321d63b1776331bfde90b9f7d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9d0201b0d09093505999617b01ced14669a9ca8e", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/12af338150686d2db128636b068beb5eafd25eba/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12af338150686d2db128636b068beb5eafd25eba/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=12af338150686d2db128636b068beb5eafd25eba", "patch": "@@ -89,13 +89,13 @@ declare_lint! {\n     \"calls to `std::mem::forget` with a value that implements Copy\"\n }\n \n-const DROP_REF_SUMMARY:&str = \"calls to `std::mem::drop` with a reference instead of an owned value. \\\n+const DROP_REF_SUMMARY: &str = \"calls to `std::mem::drop` with a reference instead of an owned value.\n                                Dropping a reference does nothing.\";\n-const FORGET_REF_SUMMARY:&str = \"calls to `std::mem::forget` with a reference instead of an owned value. \\\n+const FORGET_REF_SUMMARY: &str = \"calls to `std::mem::forget` with a reference instead of an owned value.\n                                  Forgetting a reference does nothing.\";\n-const DROP_COPY_SUMMARY:&str = \"calls to `std::mem::drop` with a value that implements Copy. \\\n+const DROP_COPY_SUMMARY: &str = \"calls to `std::mem::drop` with a value that implements Copy.\n                                 Dropping a copy leaves the original intact.\";\n-const FORGET_COPY_SUMMARY:&str = \"calls to `std::mem::forget` with a value that implements Copy. \\\n+const FORGET_COPY_SUMMARY: &str = \"calls to `std::mem::forget` with a value that implements Copy.\n                                   Forgetting a copy leaves the original intact.\";\n \n #[allow(missing_copy_implementations)]"}]}