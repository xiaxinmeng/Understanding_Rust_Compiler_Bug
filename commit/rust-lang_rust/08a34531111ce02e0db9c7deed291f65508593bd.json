{"sha": "08a34531111ce02e0db9c7deed291f65508593bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4YTM0NTMxMTExY2UwMmUwZGI5YzdkZWVkMjkxZjY1NTA4NTkzYmQ=", "commit": {"author": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2014-08-21T08:09:23Z"}, "committer": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2014-08-21T08:12:46Z"}, "message": "iOS compilation fix", "tree": {"sha": "5b89aaf9cb62d8b817f8f25cf9ced335f9772363", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b89aaf9cb62d8b817f8f25cf9ced335f9772363"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08a34531111ce02e0db9c7deed291f65508593bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08a34531111ce02e0db9c7deed291f65508593bd", "html_url": "https://github.com/rust-lang/rust/commit/08a34531111ce02e0db9c7deed291f65508593bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08a34531111ce02e0db9c7deed291f65508593bd/comments", "author": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20b3313c8c14a8f7ee29215734b26f79b4f2b2a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/20b3313c8c14a8f7ee29215734b26f79b4f2b2a4", "html_url": "https://github.com/rust-lang/rust/commit/20b3313c8c14a8f7ee29215734b26f79b4f2b2a4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "87d30ca1fbddfd934e79c6ce6712b11c63d31aeb", "filename": "src/libstd/rt/backtrace.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08a34531111ce02e0db9c7deed291f65508593bd/src%2Flibstd%2Frt%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08a34531111ce02e0db9c7deed291f65508593bd/src%2Flibstd%2Frt%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fbacktrace.rs?ref=08a34531111ce02e0db9c7deed291f65508593bd", "patch": "@@ -273,9 +273,9 @@ mod imp {\n \n         try!(writeln!(w, \"stack backtrace:\"));\n         // 100 lines should be enough\n-        static SIZE: libc::c_int = 100;\n+        static SIZE: uint = 100;\n         let mut buf: [*mut libc::c_void, ..SIZE] = unsafe {mem::zeroed()};\n-        let cnt = unsafe { backtrace(buf.as_mut_ptr(), SIZE) as uint};\n+        let cnt = unsafe { backtrace(buf.as_mut_ptr(), SIZE as libc::c_int) as uint};\n \n         // skipping the first one as it is write itself\n         result::fold_(range(1, cnt).map(|i| {"}]}