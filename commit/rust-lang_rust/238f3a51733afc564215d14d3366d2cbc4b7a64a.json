{"sha": "238f3a51733afc564215d14d3366d2cbc4b7a64a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzOGYzYTUxNzMzYWZjNTY0MjE1ZDE0ZDMzNjZkMmNiYzRiN2E2NGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-21T00:18:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-21T00:18:49Z"}, "message": "Merge #7735\n\n7735: Stop mixing Result and Option with ? in inline_local_variable r=Veykril a=scottmcm\n\nDepending on the discussion in https://github.com/rust-lang/rfcs/pull/3058 this might not end up being necessary, but I think it's a reasonable change regardless.\n\nCo-authored-by: Scott McMurray <scottmcm@users.noreply.github.com>", "tree": {"sha": "e58bcb2c866b96c6863cb75b2b06942f1f14aa49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e58bcb2c866b96c6863cb75b2b06942f1f14aa49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/238f3a51733afc564215d14d3366d2cbc4b7a64a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgMabpCRBK7hj4Ov3rIwAAdHIIAGDYMyR1x7vQQCZzvyejgqZv\nsmav23EOV9I9o+rtaMJrftkeau6yNqzQEEvKGvBSwWR8nOmkV8VD8gSBu3LYNzmF\njLDB4qArDMfQQB9DdEIfYie6hH4kxG8y25rCf359qMTFRDWl6FJ5cfGevYVmRCKb\nmDdlE1yTmlAOmG65s5xTh75Zn8CHDPCsbCLhSwxKdm4ZozEi/fnyvM9UpijeuzhG\niXjaiyuVj1tiyJGxLuPxMFqVh4UdiSodaLLqi+JdCUJnh9LvsRre59Fc6s19XB2X\n9QaaTv+S765H5DpznNGjsbjxV6Qa2d6/02CQL9VTY2A2UVZEaNAMPpPu0B2DL7s=\n=oC8w\n-----END PGP SIGNATURE-----\n", "payload": "tree e58bcb2c866b96c6863cb75b2b06942f1f14aa49\nparent 62bc753f8b1957699288ceea90a4096667bf0ebc\nparent 0fe44d099ad7cf9c8699e41ece424fda84bce999\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1613866729 +0000\ncommitter GitHub <noreply@github.com> 1613866729 +0000\n\nMerge #7735\n\n7735: Stop mixing Result and Option with ? in inline_local_variable r=Veykril a=scottmcm\n\nDepending on the discussion in https://github.com/rust-lang/rfcs/pull/3058 this might not end up being necessary, but I think it's a reasonable change regardless.\n\nCo-authored-by: Scott McMurray <scottmcm@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/238f3a51733afc564215d14d3366d2cbc4b7a64a", "html_url": "https://github.com/rust-lang/rust/commit/238f3a51733afc564215d14d3366d2cbc4b7a64a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/238f3a51733afc564215d14d3366d2cbc4b7a64a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62bc753f8b1957699288ceea90a4096667bf0ebc", "url": "https://api.github.com/repos/rust-lang/rust/commits/62bc753f8b1957699288ceea90a4096667bf0ebc", "html_url": "https://github.com/rust-lang/rust/commit/62bc753f8b1957699288ceea90a4096667bf0ebc"}, {"sha": "0fe44d099ad7cf9c8699e41ece424fda84bce999", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fe44d099ad7cf9c8699e41ece424fda84bce999", "html_url": "https://github.com/rust-lang/rust/commit/0fe44d099ad7cf9c8699e41ece424fda84bce999"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "da5522670d0e6009b16f9d4c9be9301943413522", "filename": "crates/assists/src/handlers/inline_local_variable.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/238f3a51733afc564215d14d3366d2cbc4b7a64a/crates%2Fassists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/238f3a51733afc564215d14d3366d2cbc4b7a64a/crates%2Fassists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Finline_local_variable.rs?ref=238f3a51733afc564215d14d3366d2cbc4b7a64a", "patch": "@@ -78,10 +78,10 @@ pub(crate) fn inline_local_variable(acc: &mut Assists, ctx: &AssistContext) -> O\n                         usage_node.syntax().parent().and_then(ast::Expr::cast);\n                     let usage_parent = match usage_parent_option {\n                         Some(u) => u,\n-                        None => return Ok(false),\n+                        None => return Some(false),\n                     };\n \n-                    Ok(!matches!(\n+                    Some(!matches!(\n                         (&initializer_expr, usage_parent),\n                         (ast::Expr::CallExpr(_), _)\n                             | (ast::Expr::IndexExpr(_), _)\n@@ -107,10 +107,10 @@ pub(crate) fn inline_local_variable(acc: &mut Assists, ctx: &AssistContext) -> O\n                             | (_, ast::Expr::MatchExpr(_))\n                     ))\n                 })\n-                .collect::<Result<_, _>>()\n+                .collect::<Option<_>>()\n                 .map(|b| (file_id, b))\n         })\n-        .collect::<Result<FxHashMap<_, Vec<_>>, _>>()?;\n+        .collect::<Option<FxHashMap<_, Vec<_>>>>()?;\n \n     let init_str = initializer_expr.syntax().text().to_string();\n     let init_in_paren = format!(\"({})\", &init_str);"}]}