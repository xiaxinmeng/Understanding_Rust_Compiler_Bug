{"sha": "621cbaafffd057e346049a1a0e9367444ff25d8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMWNiYWFmZmZkMDU3ZTM0NjA0OWExYTBlOTM2NzQ0NGZmMjVkOGQ=", "commit": {"author": {"name": "Surya Midatala", "email": "surya.midatala@protonmail.com", "date": "2020-08-23T15:56:17Z"}, "committer": {"name": "Surya Midatala", "email": "surya.midatala@protonmail.com", "date": "2020-08-26T16:13:46Z"}, "message": "Use crate::mod to disambiguate links", "tree": {"sha": "2df14815e2f09026eacdac6aae488a4316759221", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2df14815e2f09026eacdac6aae488a4316759221"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/621cbaafffd057e346049a1a0e9367444ff25d8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/621cbaafffd057e346049a1a0e9367444ff25d8d", "html_url": "https://github.com/rust-lang/rust/commit/621cbaafffd057e346049a1a0e9367444ff25d8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/621cbaafffd057e346049a1a0e9367444ff25d8d/comments", "author": {"login": "kofls", "id": 12569767, "node_id": "MDQ6VXNlcjEyNTY5NzY3", "avatar_url": "https://avatars.githubusercontent.com/u/12569767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kofls", "html_url": "https://github.com/kofls", "followers_url": "https://api.github.com/users/kofls/followers", "following_url": "https://api.github.com/users/kofls/following{/other_user}", "gists_url": "https://api.github.com/users/kofls/gists{/gist_id}", "starred_url": "https://api.github.com/users/kofls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kofls/subscriptions", "organizations_url": "https://api.github.com/users/kofls/orgs", "repos_url": "https://api.github.com/users/kofls/repos", "events_url": "https://api.github.com/users/kofls/events{/privacy}", "received_events_url": "https://api.github.com/users/kofls/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kofls", "id": 12569767, "node_id": "MDQ6VXNlcjEyNTY5NzY3", "avatar_url": "https://avatars.githubusercontent.com/u/12569767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kofls", "html_url": "https://github.com/kofls", "followers_url": "https://api.github.com/users/kofls/followers", "following_url": "https://api.github.com/users/kofls/following{/other_user}", "gists_url": "https://api.github.com/users/kofls/gists{/gist_id}", "starred_url": "https://api.github.com/users/kofls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kofls/subscriptions", "organizations_url": "https://api.github.com/users/kofls/orgs", "repos_url": "https://api.github.com/users/kofls/repos", "events_url": "https://api.github.com/users/kofls/events{/privacy}", "received_events_url": "https://api.github.com/users/kofls/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f10ab9139125a4a791e40dc2e51b5a4b06c22ea9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f10ab9139125a4a791e40dc2e51b5a4b06c22ea9", "html_url": "https://github.com/rust-lang/rust/commit/f10ab9139125a4a791e40dc2e51b5a4b06c22ea9"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "409de011ef8315098cf315c2be045dc3214b8b73", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/621cbaafffd057e346049a1a0e9367444ff25d8d/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/621cbaafffd057e346049a1a0e9367444ff25d8d/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=621cbaafffd057e346049a1a0e9367444ff25d8d", "patch": "@@ -545,7 +545,7 @@ mod prim_array {}\n /// means that elements are laid out so that every element is the same\n /// distance from its neighbors.\n ///\n-/// *[See also the `std::slice` module][`slice`].*\n+/// *[See also the `std::slice` module][`crate::slice`].*\n ///\n /// Slices are a view into a block of memory represented as a pointer and a\n /// length.\n@@ -590,7 +590,7 @@ mod prim_slice {}\n //\n /// String slices.\n ///\n-/// *[See also the `std::str` module][`str`].*\n+/// *[See also the `std::str` module][`crate::str`].*\n ///\n /// The `str` type, also called a 'string slice', is the most primitive string\n /// type. It is usually seen in its borrowed form, `&str`. It is also the type\n@@ -785,7 +785,7 @@ mod prim_tuple {}\n ///\n /// For more information on floating point numbers, see [Wikipedia][wikipedia].\n ///\n-/// *[See also the `std::f32::consts` module][`f32::consts`].*\n+/// *[See also the `std::f32::consts` module][`crate::f32::consts`].*\n ///\n /// [wikipedia]: https://en.wikipedia.org/wiki/Single-precision_floating-point_format\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -799,7 +799,7 @@ mod prim_f32 {}\n /// `f32`] or [Wikipedia on double precision\n /// values][wikipedia] for more information.\n ///\n-/// *[See also the `std::f64::consts` module][`f64::consts`].*\n+/// *[See also the `std::f64::consts` module][`crate::f64::consts`].*\n ///\n /// [wikipedia]: https://en.wikipedia.org/wiki/Double-precision_floating-point_format\n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}