{"sha": "27e710f55744534d6b0d54f507eea87bdbfe1916", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ZTcxMGY1NTc0NDUzNGQ2YjBkNTRmNTA3ZWVhODdiZGJmZTE5MTY=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-18T07:41:24Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-19T11:10:51Z"}, "message": "Add a test showing the erroneous promoted bug", "tree": {"sha": "5c6aa5581c556400dbb6d6521f1c9453adf6e542", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c6aa5581c556400dbb6d6521f1c9453adf6e542"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27e710f55744534d6b0d54f507eea87bdbfe1916", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27e710f55744534d6b0d54f507eea87bdbfe1916", "html_url": "https://github.com/rust-lang/rust/commit/27e710f55744534d6b0d54f507eea87bdbfe1916", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27e710f55744534d6b0d54f507eea87bdbfe1916/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d81651e8e9af5c8c40a4bd9b6b7becf12486bdad", "url": "https://api.github.com/repos/rust-lang/rust/commits/d81651e8e9af5c8c40a4bd9b6b7becf12486bdad", "html_url": "https://github.com/rust-lang/rust/commit/d81651e8e9af5c8c40a4bd9b6b7becf12486bdad"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "caa67ef01c2ba67ff6422d234c33c4b773f718c9", "filename": "src/librustc_codegen_llvm/mir/operand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/27e710f55744534d6b0d54f507eea87bdbfe1916/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e710f55744534d6b0d54f507eea87bdbfe1916/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs?ref=27e710f55744534d6b0d54f507eea87bdbfe1916", "patch": "@@ -407,10 +407,10 @@ impl<'a, 'tcx> FunctionCx<'a, 'tcx> {\n                     .unwrap_or_else(|err| {\n                         match constant.literal {\n                             mir::Literal::Promoted { .. } => {\n-                                // don't report errors inside promoteds, just warnings.\n+                                // FIXME: generate a panic here\n                             },\n                             mir::Literal::Value { .. } => {\n-                                err.report(bx.tcx(), constant.span, \"const operand\")\n+                                err.report(bx.tcx(), constant.span, \"const operand\");\n                             },\n                         }\n                         // We've errored, so we don't have to produce working code."}, {"sha": "5ced2c9dd8f59861968732026fe866bdcf3e7adf", "filename": "src/test/ui/const-eval/promoted_const_fn_fail.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/27e710f55744534d6b0d54f507eea87bdbfe1916/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_const_fn_fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e710f55744534d6b0d54f507eea87bdbfe1916/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_const_fn_fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_const_fn_fail.rs?ref=27e710f55744534d6b0d54f507eea87bdbfe1916", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(const_fn)]\n+\n+#![deny(const_err)]\n+\n+union Bar {\n+    a: &'static u8,\n+    b: usize,\n+}\n+\n+const fn bar() -> u8 {\n+    unsafe {\n+        // this will error as long as this test\n+        // is run on a system whose pointers need more\n+        // than 8 bits\n+        Bar { a: &42 }.b as u8\n+        //~^ constant evaluation error\n+        //~| constant evaluation error\n+    }\n+}\n+\n+fn main() {\n+    // FIXME(oli-obk): this should compile but panic at runtime\n+    // if we change the `const_err` lint to allow this will actually compile, but then\n+    // continue with undefined values.\n+    let x: &'static u8 = &(bar() + 1);\n+    let y = *x;\n+    unreachable!();\n+}"}, {"sha": "f910705bb7b3ce02cabd42ef4fccbdc1fa6e75e5", "filename": "src/test/ui/const-eval/promoted_const_fn_fail.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/27e710f55744534d6b0d54f507eea87bdbfe1916/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_const_fn_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27e710f55744534d6b0d54f507eea87bdbfe1916/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_const_fn_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_const_fn_fail.stderr?ref=27e710f55744534d6b0d54f507eea87bdbfe1916", "patch": "@@ -0,0 +1,31 @@\n+error: constant evaluation error\n+  --> $DIR/promoted_const_fn_fail.rs:25:9\n+   |\n+LL |         Bar { a: &42 }.b as u8\n+   |         ^^^^^^^^^^^^^^^^^^^^^^ a raw memory access tried to access part of a pointer value as raw bytes\n+   |\n+note: lint level defined here\n+  --> $DIR/promoted_const_fn_fail.rs:13:9\n+   |\n+LL | #![deny(const_err)]\n+   |         ^^^^^^^^^\n+note: inside call to `bar`\n+  --> $DIR/promoted_const_fn_fail.rs:35:28\n+   |\n+LL |     let x: &'static u8 = &(bar() + 1);\n+   |                            ^^^^^\n+\n+error: constant evaluation error\n+  --> $DIR/promoted_const_fn_fail.rs:25:9\n+   |\n+LL |         Bar { a: &42 }.b as u8\n+   |         ^^^^^^^^^^^^^^^^^^^^^^ a raw memory access tried to access part of a pointer value as raw bytes\n+   |\n+note: inside call to `bar`\n+  --> $DIR/promoted_const_fn_fail.rs:35:28\n+   |\n+LL |     let x: &'static u8 = &(bar() + 1);\n+   |                            ^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}