{"sha": "2af4a014502832ff961d2efb6cc6d737f0c80ffb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZjRhMDE0NTAyODMyZmY5NjFkMmVmYjZjYzZkNzM3ZjBjODBmZmI=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-10T01:44:10Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-12T02:12:15Z"}, "message": "Document `NodeId`", "tree": {"sha": "695d2b1c9fc360b5708c53cf58522bf942235efd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/695d2b1c9fc360b5708c53cf58522bf942235efd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2af4a014502832ff961d2efb6cc6d737f0c80ffb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2af4a014502832ff961d2efb6cc6d737f0c80ffb", "html_url": "https://github.com/rust-lang/rust/commit/2af4a014502832ff961d2efb6cc6d737f0c80ffb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2af4a014502832ff961d2efb6cc6d737f0c80ffb/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f30733adb9150a9b965a6af1650d5213bec8ddf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f30733adb9150a9b965a6af1650d5213bec8ddf6", "html_url": "https://github.com/rust-lang/rust/commit/f30733adb9150a9b965a6af1650d5213bec8ddf6"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "955183a5a7ccbda152b523ca3e91b5b5f67783ed", "filename": "compiler/rustc_ast/src/node_id.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2af4a014502832ff961d2efb6cc6d737f0c80ffb/compiler%2Frustc_ast%2Fsrc%2Fnode_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2af4a014502832ff961d2efb6cc6d737f0c80ffb/compiler%2Frustc_ast%2Fsrc%2Fnode_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fnode_id.rs?ref=2af4a014502832ff961d2efb6cc6d737f0c80ffb", "patch": "@@ -2,19 +2,25 @@ use rustc_span::ExpnId;\n use std::fmt;\n \n rustc_index::newtype_index! {\n+    /// Identifies an AST node.\n+    ///\n+    /// This identifies top-level definitions, expressions, and everything in between.\n+    /// This is later turned into [`DefId`] and `HirId` for the HIR.\n+    ///\n+    /// [`DefId`]: rustc_span::def_id::DefId\n     pub struct NodeId {\n         DEBUG_FORMAT = \"NodeId({})\"\n     }\n }\n \n rustc_data_structures::define_id_collections!(NodeMap, NodeSet, NodeId);\n \n-/// `NodeId` used to represent the root of the crate.\n+/// The [`NodeId`] used to represent the root of the crate.\n pub const CRATE_NODE_ID: NodeId = NodeId::from_u32(0);\n \n /// When parsing and doing expansions, we initially give all AST nodes this AST\n-/// node value. Then later, during expansion, we renumber them to have small,\n-/// positive ids.\n+/// [`NodeId`]. Then later, during expansion, we renumber them to have small,\n+/// positive IDs.\n pub const DUMMY_NODE_ID: NodeId = NodeId::MAX;\n \n impl NodeId {"}]}