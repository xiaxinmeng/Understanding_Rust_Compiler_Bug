{"sha": "02ad984d74b6e238b16a50c61505d76acc0e648c", "node_id": "C_kwDOAAsO6NoAKDAyYWQ5ODRkNzRiNmUyMzhiMTZhNTBjNjE1MDVkNzZhY2MwZTY0OGM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-29T18:23:45Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-22T02:17:39Z"}, "message": "Comment, and bail early if bound vars list differs", "tree": {"sha": "a0cc595b81776a0b546b4a6fe38528858c54bf50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0cc595b81776a0b546b4a6fe38528858c54bf50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02ad984d74b6e238b16a50c61505d76acc0e648c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02ad984d74b6e238b16a50c61505d76acc0e648c", "html_url": "https://github.com/rust-lang/rust/commit/02ad984d74b6e238b16a50c61505d76acc0e648c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02ad984d74b6e238b16a50c61505d76acc0e648c/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0181447614dfcebcf3a658a6818a4b45cbe90db", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0181447614dfcebcf3a658a6818a4b45cbe90db", "html_url": "https://github.com/rust-lang/rust/commit/d0181447614dfcebcf3a658a6818a4b45cbe90db"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "59728148a84c43e8023a2f580d5193849e22fab1", "filename": "compiler/rustc_infer/src/infer/equate.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/02ad984d74b6e238b16a50c61505d76acc0e648c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fequate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02ad984d74b6e238b16a50c61505d76acc0e648c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fequate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fequate.rs?ref=02ad984d74b6e238b16a50c61505d76acc0e648c", "patch": "@@ -110,6 +110,9 @@ impl<'tcx> TypeRelation<'tcx> for Equate<'_, '_, 'tcx> {\n                         .obligations,\n                 );\n             }\n+            // Optimization of GeneratorWitness relation since we know that all\n+            // free regions are replaced with bound regions during construction.\n+            // This greatly speeds up equating of GeneratorWitness.\n             (&ty::GeneratorWitness(a_types), &ty::GeneratorWitness(b_types)) => {\n                 let a_types = infcx.tcx.anonymize_bound_vars(a_types);\n                 let b_types = infcx.tcx.anonymize_bound_vars(b_types);\n@@ -121,11 +124,9 @@ impl<'tcx> TypeRelation<'tcx> for Equate<'_, '_, 'tcx> {\n                         self.relate(a, b)?;\n                     }\n                 } else {\n-                    self.fields.infcx.super_combine_tys(\n-                        self,\n-                        infcx.tcx.mk_generator_witness(a_types),\n-                        infcx.tcx.mk_generator_witness(b_types),\n-                    )?;\n+                    return Err(ty::error::TypeError::Sorts(ty::relate::expected_found(\n+                        self, a, b,\n+                    )));\n                 }\n             }\n "}, {"sha": "375dd670fabf4c092bdde2aef7630df64370aa5b", "filename": "compiler/rustc_infer/src/infer/sub.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/02ad984d74b6e238b16a50c61505d76acc0e648c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02ad984d74b6e238b16a50c61505d76acc0e648c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fsub.rs?ref=02ad984d74b6e238b16a50c61505d76acc0e648c", "patch": "@@ -164,6 +164,9 @@ impl<'tcx> TypeRelation<'tcx> for Sub<'_, '_, 'tcx> {\n                 );\n                 Ok(ga)\n             }\n+            // Optimization of GeneratorWitness relation since we know that all\n+            // free regions are replaced with bound regions during construction.\n+            // This greatly speeds up subtyping of GeneratorWitness.\n             (&ty::GeneratorWitness(a_types), &ty::GeneratorWitness(b_types)) => {\n                 let a_types = infcx.tcx.anonymize_bound_vars(a_types);\n                 let b_types = infcx.tcx.anonymize_bound_vars(b_types);\n@@ -174,14 +177,10 @@ impl<'tcx> TypeRelation<'tcx> for Sub<'_, '_, 'tcx> {\n                     for (a, b) in std::iter::zip(a_types, b_types) {\n                         self.relate(a, b)?;\n                     }\n+                    Ok(a)\n                 } else {\n-                    self.fields.infcx.super_combine_tys(\n-                        self,\n-                        infcx.tcx.mk_generator_witness(a_types),\n-                        infcx.tcx.mk_generator_witness(b_types),\n-                    )?;\n+                    Err(ty::error::TypeError::Sorts(ty::relate::expected_found(self, a, b)))\n                 }\n-                Ok(a)\n             }\n \n             _ => {"}]}