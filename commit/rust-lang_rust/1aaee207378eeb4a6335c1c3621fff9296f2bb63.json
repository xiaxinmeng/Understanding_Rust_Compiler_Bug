{"sha": "1aaee207378eeb4a6335c1c3621fff9296f2bb63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYWVlMjA3Mzc4ZWViNGE2MzM1YzFjMzYyMWZmZjkyOTZmMmJiNjM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-01-18T00:06:32Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-01-18T20:27:12Z"}, "message": "rustc: Accept commas to separate tag variants", "tree": {"sha": "efc657da3f1d2a2e6bd7d30989f47ece2eb2977e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efc657da3f1d2a2e6bd7d30989f47ece2eb2977e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1aaee207378eeb4a6335c1c3621fff9296f2bb63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1aaee207378eeb4a6335c1c3621fff9296f2bb63", "html_url": "https://github.com/rust-lang/rust/commit/1aaee207378eeb4a6335c1c3621fff9296f2bb63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1aaee207378eeb4a6335c1c3621fff9296f2bb63/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "397d9148a77cfdbbc850da4fa97310afc218a385", "url": "https://api.github.com/repos/rust-lang/rust/commits/397d9148a77cfdbbc850da4fa97310afc218a385", "html_url": "https://github.com/rust-lang/rust/commit/397d9148a77cfdbbc850da4fa97310afc218a385"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "4a4b22c3e120a2f59a2953533e9888a2d6cb6489", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1aaee207378eeb4a6335c1c3621fff9296f2bb63/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1aaee207378eeb4a6335c1c3621fff9296f2bb63/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=1aaee207378eeb4a6335c1c3621fff9296f2bb63", "patch": "@@ -2047,7 +2047,8 @@ fn parse_item_tag(p: parser, attrs: [ast::attribute]) -> @ast::item {\n     expect(p, token::LBRACE);\n     let all_nullary = true;\n     let have_disr = false;\n-    while p.token != token::RBRACE {\n+    let done = false;\n+    while !done {\n         let tok = p.token;\n         alt tok {\n           token::IDENT(name, _) {\n@@ -2075,13 +2076,21 @@ fn parse_item_tag(p: parser, attrs: [ast::attribute]) -> @ast::item {\n               }\n               _ {/* empty */ }\n             }\n-            expect(p, token::SEMI);\n+\n+            alt p.token {\n+              token::SEMI. | token::COMMA. {\n+                p.bump();\n+                if p.token == token::RBRACE { done = true; }\n+              }\n+              token::RBRACE. { done = true; }\n+              _ { /* fall through */ }\n+            }\n+\n             p.get_id();\n             let vr = {name: p.get_str(name), args: args, id: p.get_id(),\n                       disr_expr: disr_expr};\n             variants += [spanned(vlo, vhi, vr)];\n           }\n-          token::RBRACE. {/* empty */ }\n           _ {\n             p.fatal(\"expected name of variant or '}' but found '\" +\n                         token::to_str(p.reader, tok) + \"'\");"}]}