{"sha": "7276a6a11768634c1e7df5605a83a0f117302c50", "node_id": "C_kwDOAAsO6NoAKDcyNzZhNmExMTc2ODYzNGMxZTdkZjU2MDVhODNhMGYxMTczMDJjNTA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-06T07:15:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-06T07:15:05Z"}, "message": "Auto merge of #90297 - dtolnay:dotzero, r=petrochenkov\n\nAppend .0 to unsuffixed float if it would otherwise become int token\n\nPreviously the unsuffixed f32/f64 constructors of `proc_macro::Literal` would create literal tokens that are definitely not a float:\n\n```rust\nLiteral::f32_unsuffixed(10.0)  // 10\nLiteral::f32_suffixed(10.0)    // 10f32\nLiteral::f64_unsuffixed(10.0)  // 10\nLiteral::f64_suffixed(10.0)    // 10f64\n```\n\nNotice that the `10` are actually integer tokens if you were to reparse them, not float tokens.\n\nThis diff updates `Literal::f32_unsuffixed` and `Literal::f64_unsuffixed` to produce tokens that unambiguously parse as a float. This matches longstanding behavior of the proc-macro2 crate's implementation of these APIs dating back at least 3.5 years, so it's likely an unobjectionable behavior.\n\n```rust\nLiteral::f32_unsuffixed(10.0)  // 10.0\nLiteral::f32_suffixed(10.0)    // 10f32\nLiteral::f64_unsuffixed(10.0)  // 10.0\nLiteral::f64_suffixed(10.0)    // 10f64\n```\n\nFixes https://github.com/dtolnay/syn/issues/1085.", "tree": {"sha": "2075f2caf1dc3e2d1f5208252f9b1df2605c76d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2075f2caf1dc3e2d1f5208252f9b1df2605c76d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7276a6a11768634c1e7df5605a83a0f117302c50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7276a6a11768634c1e7df5605a83a0f117302c50", "html_url": "https://github.com/rust-lang/rust/commit/7276a6a11768634c1e7df5605a83a0f117302c50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7276a6a11768634c1e7df5605a83a0f117302c50/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d39f6ab7dec5b8c6e8d9ce52a1f15b9e656c900", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d39f6ab7dec5b8c6e8d9ce52a1f15b9e656c900", "html_url": "https://github.com/rust-lang/rust/commit/9d39f6ab7dec5b8c6e8d9ce52a1f15b9e656c900"}, {"sha": "1f9807799c5f70c3a215698ad6e8eb8a03725969", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f9807799c5f70c3a215698ad6e8eb8a03725969", "html_url": "https://github.com/rust-lang/rust/commit/1f9807799c5f70c3a215698ad6e8eb8a03725969"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "9d673d69687191dfb4525339593a7e2979506e11", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7276a6a11768634c1e7df5605a83a0f117302c50/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7276a6a11768634c1e7df5605a83a0f117302c50/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=7276a6a11768634c1e7df5605a83a0f117302c50", "patch": "@@ -1074,7 +1074,11 @@ impl Literal {\n         if !n.is_finite() {\n             panic!(\"Invalid float literal {}\", n);\n         }\n-        Literal(bridge::client::Literal::float(&n.to_string()))\n+        let mut repr = n.to_string();\n+        if !repr.contains('.') {\n+            repr.push_str(\".0\");\n+        }\n+        Literal(bridge::client::Literal::float(&repr))\n     }\n \n     /// Creates a new suffixed floating-point literal.\n@@ -1115,7 +1119,11 @@ impl Literal {\n         if !n.is_finite() {\n             panic!(\"Invalid float literal {}\", n);\n         }\n-        Literal(bridge::client::Literal::float(&n.to_string()))\n+        let mut repr = n.to_string();\n+        if !repr.contains('.') {\n+            repr.push_str(\".0\");\n+        }\n+        Literal(bridge::client::Literal::float(&repr))\n     }\n \n     /// Creates a new suffixed floating-point literal."}, {"sha": "6186b941ef69f6c6f5fee030212c203c3aa6ed8e", "filename": "src/test/ui/proc-macro/auxiliary/api/parse.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7276a6a11768634c1e7df5605a83a0f117302c50/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fapi%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7276a6a11768634c1e7df5605a83a0f117302c50/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fapi%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fapi%2Fparse.rs?ref=7276a6a11768634c1e7df5605a83a0f117302c50", "patch": "@@ -1,3 +1,5 @@\n+// ignore-tidy-linelength\n+\n use proc_macro::Literal;\n \n pub fn test() {\n@@ -8,6 +10,14 @@ pub fn test() {\n fn test_display_literal() {\n     assert_eq!(Literal::isize_unsuffixed(-10).to_string(), \"-10\");\n     assert_eq!(Literal::isize_suffixed(-10).to_string(), \"-10isize\");\n+    assert_eq!(Literal::f32_unsuffixed(-10.0).to_string(), \"-10.0\");\n+    assert_eq!(Literal::f32_suffixed(-10.0).to_string(), \"-10f32\");\n+    assert_eq!(Literal::f64_unsuffixed(-10.0).to_string(), \"-10.0\");\n+    assert_eq!(Literal::f64_suffixed(-10.0).to_string(), \"-10f64\");\n+    assert_eq!(\n+        Literal::f64_unsuffixed(1e100).to_string(),\n+        \"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0\",\n+    );\n }\n \n fn test_parse_literal() {"}]}