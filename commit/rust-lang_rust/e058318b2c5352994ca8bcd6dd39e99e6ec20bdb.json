{"sha": "e058318b2c5352994ca8bcd6dd39e99e6ec20bdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNTgzMThiMmM1MzUyOTk0Y2E4YmNkNmRkMzllOTllNmVjMjBiZGI=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-10-20T13:43:48Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-10-20T13:43:48Z"}, "message": "Rollup merge of #29176 - huonw:shared-tracking, r=Gankro", "tree": {"sha": "77e782275b236f1c366b33ad630a28cfc48307ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77e782275b236f1c366b33ad630a28cfc48307ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e058318b2c5352994ca8bcd6dd39e99e6ec20bdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e058318b2c5352994ca8bcd6dd39e99e6ec20bdb", "html_url": "https://github.com/rust-lang/rust/commit/e058318b2c5352994ca8bcd6dd39e99e6ec20bdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e058318b2c5352994ca8bcd6dd39e99e6ec20bdb/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fb3b856c5aaca1693b11fc03f83cc4748dd62b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fb3b856c5aaca1693b11fc03f83cc4748dd62b9", "html_url": "https://github.com/rust-lang/rust/commit/2fb3b856c5aaca1693b11fc03f83cc4748dd62b9"}, {"sha": "94e9a073b0edb3633b2adbcfff1dabf2da44334e", "url": "https://api.github.com/repos/rust-lang/rust/commits/94e9a073b0edb3633b2adbcfff1dabf2da44334e", "html_url": "https://github.com/rust-lang/rust/commit/94e9a073b0edb3633b2adbcfff1dabf2da44334e"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "f3ddb2a9fffe45155fe69369245e29a822da6d3f", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e058318b2c5352994ca8bcd6dd39e99e6ec20bdb/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e058318b2c5352994ca8bcd6dd39e99e6ec20bdb/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=e058318b2c5352994ca8bcd6dd39e99e6ec20bdb", "patch": "@@ -538,7 +538,7 @@ impl<T> fmt::Pointer for Unique<T> {\n /// building abstractions like `Rc<T>` or `Arc<T>`, which internally\n /// use raw pointers to manage the memory that they own.\n #[unstable(feature = \"shared\", reason = \"needs an RFC to flesh out design\",\n-           issue = \"0\")]\n+           issue = \"27730\")]\n pub struct Shared<T: ?Sized> {\n     pointer: NonZero<*const T>,\n     // NOTE: this marker has no consequences for variance, but is necessary\n@@ -551,37 +551,37 @@ pub struct Shared<T: ?Sized> {\n \n /// `Shared` pointers are not `Send` because the data they reference may be aliased.\n // NB: This impl is unnecessary, but should provide better error messages.\n-#[unstable(feature = \"shared\", issue = \"0\")]\n+#[unstable(feature = \"shared\", issue = \"27730\")]\n impl<T: ?Sized> !Send for Shared<T> { }\n \n /// `Shared` pointers are not `Sync` because the data they reference may be aliased.\n // NB: This impl is unnecessary, but should provide better error messages.\n-#[unstable(feature = \"shared\", issue = \"0\")]\n+#[unstable(feature = \"shared\", issue = \"27730\")]\n impl<T: ?Sized> !Sync for Shared<T> { }\n \n-#[unstable(feature = \"shared\", issue = \"0\")]\n+#[unstable(feature = \"shared\", issue = \"27730\")]\n impl<T: ?Sized> Shared<T> {\n     /// Creates a new `Shared`.\n     pub unsafe fn new(ptr: *mut T) -> Self {\n         Shared { pointer: NonZero::new(ptr), _marker: PhantomData }\n     }\n }\n \n-#[unstable(feature = \"shared\", issue = \"0\")]\n+#[unstable(feature = \"shared\", issue = \"27730\")]\n impl<T: ?Sized> Clone for Shared<T> {\n     fn clone(&self) -> Self {\n         *self\n     }\n }\n \n-#[unstable(feature = \"shared\", issue = \"0\")]\n+#[unstable(feature = \"shared\", issue = \"27730\")]\n impl<T: ?Sized> Copy for Shared<T> { }\n \n #[cfg(not(stage0))] // remove cfg after new snapshot\n-#[unstable(feature = \"shared\", issue = \"0\")]\n+#[unstable(feature = \"shared\", issue = \"27730\")]\n impl<T: ?Sized, U: ?Sized> CoerceUnsized<Shared<U>> for Shared<T> where T: Unsize<U> { }\n \n-#[unstable(feature = \"shared\", issue = \"0\")]\n+#[unstable(feature = \"shared\", issue = \"27730\")]\n impl<T: ?Sized> Deref for Shared<T> {\n     type Target = *mut T;\n \n@@ -591,7 +591,7 @@ impl<T: ?Sized> Deref for Shared<T> {\n     }\n }\n \n-#[unstable(feature = \"shared\", issue = \"0\")]\n+#[unstable(feature = \"shared\", issue = \"27730\")]\n impl<T> fmt::Pointer for Shared<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         fmt::Pointer::fmt(&*self.pointer, f)"}]}