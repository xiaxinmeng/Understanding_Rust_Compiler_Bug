{"sha": "8f7007991e7fa1a1a6795f81e5d7efbdd503a8c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNzAwNzk5MWU3ZmExYTFhNjc5NWY4MWU1ZDdlZmJkZDUwM2E4YzE=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-08-24T15:56:39Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-08-24T15:56:39Z"}, "message": "Fix grammar", "tree": {"sha": "cc076d72f0881f9f2d77f3725c0797235aa5fd42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc076d72f0881f9f2d77f3725c0797235aa5fd42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f7007991e7fa1a1a6795f81e5d7efbdd503a8c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f7007991e7fa1a1a6795f81e5d7efbdd503a8c1", "html_url": "https://github.com/rust-lang/rust/commit/8f7007991e7fa1a1a6795f81e5d7efbdd503a8c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f7007991e7fa1a1a6795f81e5d7efbdd503a8c1/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db002a06ae9154a35d410550bc5132df883d7baa", "url": "https://api.github.com/repos/rust-lang/rust/commits/db002a06ae9154a35d410550bc5132df883d7baa", "html_url": "https://github.com/rust-lang/rust/commit/db002a06ae9154a35d410550bc5132df883d7baa"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a38b5c471bf06cc63b546b28fa5e8c1a44836379", "filename": "library/alloc/tests/boxed.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f7007991e7fa1a1a6795f81e5d7efbdd503a8c1/library%2Falloc%2Ftests%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7007991e7fa1a1a6795f81e5d7efbdd503a8c1/library%2Falloc%2Ftests%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fboxed.rs?ref=8f7007991e7fa1a1a6795f81e5d7efbdd503a8c1", "patch": "@@ -35,11 +35,11 @@ fn box_clone_and_clone_from_equivalence() {\n     }\n }\n \n-/// This test might give a false positive in case the box realocates, but the alocator keeps the\n-/// original pointer.\n+/// This test might give a false positive in case the box reallocates,\n+/// but the allocator keeps the original pointer.\n ///\n-/// On the other hand it won't give a false negative, if it fails than the memory was definitely not\n-/// reused\n+/// On the other hand, it won't give a false negative: If it fails, then the\n+/// memory was definitely not reused.\n #[test]\n fn box_clone_from_ptr_stability() {\n     for size in (0..8).map(|i| 2usize.pow(i)) {"}]}