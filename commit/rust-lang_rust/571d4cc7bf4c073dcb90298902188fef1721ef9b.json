{"sha": "571d4cc7bf4c073dcb90298902188fef1721ef9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MWQ0Y2M3YmY0YzA3M2RjYjkwMjk4OTAyMTg4ZmVmMTcyMWVmOWI=", "commit": {"author": {"name": "O01eg", "email": "o01eg@yandex.ru", "date": "2018-11-22T12:40:29Z"}, "committer": {"name": "O01eg", "email": "o01eg@yandex.ru", "date": "2018-12-06T09:23:47Z"}, "message": "Add sysroot getting code to tests.", "tree": {"sha": "391e6e5bf093587fc8d0c6c2055ea58f627cf164", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/391e6e5bf093587fc8d0c6c2055ea58f627cf164"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/571d4cc7bf4c073dcb90298902188fef1721ef9b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABEIAB0WIQTv7q0NRmbSXocCXjKPunSz54tGdwUCXAjqowAKCRCPunSz54tG\nd3zJAQC0OT/0lhDQfUAFBHELfa/fgjJP4DrSSDTAOWiYtJsABQD/XJc7jNCfGnlz\n8Sa5xiZsOhkN2IkSeI9KdTMdirsoAS0=\n=lDsh\n-----END PGP SIGNATURE-----", "payload": "tree 391e6e5bf093587fc8d0c6c2055ea58f627cf164\nparent 69813d6faf2c9caaf2e8131e6218bd056366da53\nauthor O01eg <o01eg@yandex.ru> 1542890429 +0300\ncommitter O01eg <o01eg@yandex.ru> 1544088227 +0300\n\nAdd sysroot getting code to tests.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/571d4cc7bf4c073dcb90298902188fef1721ef9b", "html_url": "https://github.com/rust-lang/rust/commit/571d4cc7bf4c073dcb90298902188fef1721ef9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/571d4cc7bf4c073dcb90298902188fef1721ef9b/comments", "author": {"login": "o01eg", "id": 397177, "node_id": "MDQ6VXNlcjM5NzE3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/397177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/o01eg", "html_url": "https://github.com/o01eg", "followers_url": "https://api.github.com/users/o01eg/followers", "following_url": "https://api.github.com/users/o01eg/following{/other_user}", "gists_url": "https://api.github.com/users/o01eg/gists{/gist_id}", "starred_url": "https://api.github.com/users/o01eg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/o01eg/subscriptions", "organizations_url": "https://api.github.com/users/o01eg/orgs", "repos_url": "https://api.github.com/users/o01eg/repos", "events_url": "https://api.github.com/users/o01eg/events{/privacy}", "received_events_url": "https://api.github.com/users/o01eg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "o01eg", "id": 397177, "node_id": "MDQ6VXNlcjM5NzE3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/397177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/o01eg", "html_url": "https://github.com/o01eg", "followers_url": "https://api.github.com/users/o01eg/followers", "following_url": "https://api.github.com/users/o01eg/following{/other_user}", "gists_url": "https://api.github.com/users/o01eg/gists{/gist_id}", "starred_url": "https://api.github.com/users/o01eg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/o01eg/subscriptions", "organizations_url": "https://api.github.com/users/o01eg/orgs", "repos_url": "https://api.github.com/users/o01eg/repos", "events_url": "https://api.github.com/users/o01eg/events{/privacy}", "received_events_url": "https://api.github.com/users/o01eg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69813d6faf2c9caaf2e8131e6218bd056366da53", "url": "https://api.github.com/repos/rust-lang/rust/commits/69813d6faf2c9caaf2e8131e6218bd056366da53", "html_url": "https://github.com/rust-lang/rust/commit/69813d6faf2c9caaf2e8131e6218bd056366da53"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "115b40c21b3b63fbd0a2f488766f072ed286aecd", "filename": "tests/compile-test.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/571d4cc7bf4c073dcb90298902188fef1721ef9b/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/571d4cc7bf4c073dcb90298902188fef1721ef9b/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=571d4cc7bf4c073dcb90298902188fef1721ef9b", "patch": "@@ -17,6 +17,7 @@ use std::ffi::OsStr;\n use std::fs;\n use std::io;\n use std::path::{Path, PathBuf};\n+use std::process::Command;\n \n fn clippy_driver_path() -> PathBuf {\n     if let Some(path) = option_env!(\"CLIPPY_DRIVER_PATH\") {\n@@ -42,6 +43,28 @@ fn rustc_lib_path() -> PathBuf {\n     option_env!(\"RUSTC_LIB_PATH\").unwrap().into()\n }\n \n+fn rustc_sysroot_path() -> PathBuf {\n+    option_env!(\"SYSROOT\")\n+        .map(String::from)\n+        .or_else(|| std::env::var(\"SYSROOT\").ok())\n+        .or_else(|| {\n+            let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n+            let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n+            home.and_then(|home| toolchain.map(|toolchain| format!(\"{}/toolchains/{}\", home, toolchain)))\n+        })\n+        .or_else(|| {\n+            Command::new(\"rustc\")\n+                .arg(\"--print\")\n+                .arg(\"sysroot\")\n+                .output()\n+                .ok()\n+                .and_then(|out| String::from_utf8(out.stdout).ok())\n+                .map(|s| s.trim().to_owned())\n+        })\n+        .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\")\n+        .into()\n+}\n+\n fn config(mode: &str, dir: PathBuf) -> compiletest::Config {\n     let mut config = compiletest::Config::default();\n \n@@ -55,7 +78,7 @@ fn config(mode: &str, dir: PathBuf) -> compiletest::Config {\n         config.run_lib_path = rustc_lib_path();\n         config.compile_lib_path = rustc_lib_path();\n     }\n-    config.target_rustcflags = Some(format!(\"-L {0} -L {0}/deps -Dwarnings\", host_libs().display()));\n+    config.target_rustcflags = Some(format!(\"-L {0} -L {0}/deps -Dwarnings --sysroot {1}\", host_libs().display(), rustc_sysroot_path().display()));\n \n     config.mode = cfg_mode;\n     config.build_base = if rustc_test_suite().is_some() {"}]}