{"sha": "8bbf598d50960087342667fc47f5d38f4a9c2165", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYmY1OThkNTA5NjAwODczNDI2NjdmYzQ3ZjVkMzhmNGE5YzIxNjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-10T19:06:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-10T19:06:59Z"}, "message": "auto merge of #15559 : fhahn/rust/issue-15445-mut-cast, r=alexcrichton\n\nI've added an error message for casts from raw pointers to floats #15445.", "tree": {"sha": "f2fcde0e3fbe4301c5c8b80c4e11acbd9884fe4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2fcde0e3fbe4301c5c8b80c4e11acbd9884fe4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bbf598d50960087342667fc47f5d38f4a9c2165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bbf598d50960087342667fc47f5d38f4a9c2165", "html_url": "https://github.com/rust-lang/rust/commit/8bbf598d50960087342667fc47f5d38f4a9c2165", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bbf598d50960087342667fc47f5d38f4a9c2165/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "345886cfddd881644fbf8c0e0c1487102b460cf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/345886cfddd881644fbf8c0e0c1487102b460cf6", "html_url": "https://github.com/rust-lang/rust/commit/345886cfddd881644fbf8c0e0c1487102b460cf6"}, {"sha": "9bc7b6f437ed041e4f7e52c1bf7e646e3c088ea5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bc7b6f437ed041e4f7e52c1bf7e646e3c088ea5", "html_url": "https://github.com/rust-lang/rust/commit/9bc7b6f437ed041e4f7e52c1bf7e646e3c088ea5"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "cdf434f4099dc831ab493330caace47c54738a92", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8bbf598d50960087342667fc47f5d38f4a9c2165/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbf598d50960087342667fc47f5d38f4a9c2165/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=8bbf598d50960087342667fc47f5d38f4a9c2165", "patch": "@@ -1219,6 +1219,13 @@ fn check_cast(fcx: &FnCtxt,\n                     actual,\n                     fcx.infcx().ty_to_string(t_1))\n         }, t_e, None);\n+    } else if ty::type_is_unsafe_ptr(t_e) && t_1_is_float {\n+        fcx.type_error_message(span, |actual| {\n+            format!(\"cannot cast from pointer to float directly: `{}` as `{}`; cast through an \\\n+                     integer first\",\n+                    actual,\n+                    fcx.infcx().ty_to_string(t_1))\n+        }, t_e, None);\n     }\n \n     fcx.write_ty(id, t_1);"}, {"sha": "22a0978ef7c789c806a81c2e445fd257355157f9", "filename": "src/test/compile-fail/typeck-cast-pointer-to-float.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bbf598d50960087342667fc47f5d38f4a9c2165/src%2Ftest%2Fcompile-fail%2Ftypeck-cast-pointer-to-float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbf598d50960087342667fc47f5d38f4a9c2165/src%2Ftest%2Fcompile-fail%2Ftypeck-cast-pointer-to-float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-cast-pointer-to-float.rs?ref=8bbf598d50960087342667fc47f5d38f4a9c2165", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let x : i16 = 22;\n+    ((&x) as *const i16) as f32;\n+    //~^ ERROR: cannot cast from pointer to float directly: `*const i16` as `f32`\n+}"}]}