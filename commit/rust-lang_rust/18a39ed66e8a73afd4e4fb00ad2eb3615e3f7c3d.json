{"sha": "18a39ed66e8a73afd4e4fb00ad2eb3615e3f7c3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4YTM5ZWQ2NmU4YTczYWZkNGU0ZmIwMGFkMmViMzYxNWUzZjdjM2Q=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-01-19T23:49:26Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-01-20T16:35:46Z"}, "message": "Rollup merge of #38966 - brson:relnotes, r=brson\n\n1.15 release notes\n\n[Rundered](https://github.com/brson/rust/blob/relnotes/RELEASES.md#version-1150-2017-02-02).\n\nLots of good stuff this release!\n\nPerf graphs: https://goo.gl/KSVFvF, https://goo.gl/K98g8M, https://goo.gl/H1gSoz, https://goo.gl/yZBV2p, https://goo.gl/ltURbb. Not much change \ud83d\ude3f\n\nr? @steveklabnik", "tree": {"sha": "fbb0ff06752bf4ef5745ff436c3a2482329e8eea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbb0ff06752bf4ef5745ff436c3a2482329e8eea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18a39ed66e8a73afd4e4fb00ad2eb3615e3f7c3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18a39ed66e8a73afd4e4fb00ad2eb3615e3f7c3d", "html_url": "https://github.com/rust-lang/rust/commit/18a39ed66e8a73afd4e4fb00ad2eb3615e3f7c3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18a39ed66e8a73afd4e4fb00ad2eb3615e3f7c3d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4d276faafb07f13f15178540e337864af8f74db", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4d276faafb07f13f15178540e337864af8f74db", "html_url": "https://github.com/rust-lang/rust/commit/d4d276faafb07f13f15178540e337864af8f74db"}, {"sha": "a0a4af139dcac3c1629e5853d72df27616a00d2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0a4af139dcac3c1629e5853d72df27616a00d2a", "html_url": "https://github.com/rust-lang/rust/commit/a0a4af139dcac3c1629e5853d72df27616a00d2a"}], "stats": {"total": 241, "additions": 241, "deletions": 0}, "files": [{"sha": "74ab03f7778e5b8332506fdd92992ea7a8e7188a", "filename": "RELEASES.md", "status": "modified", "additions": 241, "deletions": 0, "changes": 241, "blob_url": "https://github.com/rust-lang/rust/blob/18a39ed66e8a73afd4e4fb00ad2eb3615e3f7c3d/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/18a39ed66e8a73afd4e4fb00ad2eb3615e3f7c3d/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=18a39ed66e8a73afd4e4fb00ad2eb3615e3f7c3d", "patch": "@@ -1,3 +1,244 @@\n+Version 1.15.0 (2017-02-02)\n+===========================\n+\n+Language\n+--------\n+\n+* Basic procedural macros allowing custom `#[derive]`, aka \"macros 1.1\", are\n+  stable. This allows popular code-generating crates like Serde and Diesel to\n+  work ergonomically. [RFC 1681].\n+* [Tuple structs may be empty. Unary and empty tuple structs may be instantiated\n+  with curly braces][36868]. Part of [RFC 1506].\n+* [A number of minor changes to name resolution have been activated][37127].\n+  They add up to more consistent semantics, allowing for future evolution of\n+  Rust macros. Specified in [RFC 1560], see its section on [\"changes\"] for\n+  details of what is different. The breaking changes here have been transitioned\n+  through the [`legacy_imports`] lint since 1.14, with no known regressions.\n+* [In `macro_rules`, `path` fragments can now be parsed as type parameter\n+  bounds][38279]\n+* [`?Sized` can be used in `where` clauses][37791]\n+* [There is now a limit on the size of monomorphized types and it can be\n+  modified with the `#![type_size_limit]` crate attribute, similarly to\n+  the `#![recursion_limit]` attribute][37789]\n+\n+Compiler\n+--------\n+\n+* [On Windows, the compiler will apply dllimport attributes when linking to\n+  extern functions][37973]. Additional attributes and flags can control which\n+  library kind is linked and its name. [RFC 1717].\n+* [Rust-ABI symbols are no longer exported from cdylibs][38117]\n+* [The `--test` flag works with procedural macro crates][38107]\n+* [Fix `extern \"aapcs\" fn` ABI][37814]\n+* [The `-C no-stack-check` flag is deprecated][37636]. It does nothing.\n+* [The `format!` expander recognizes incorrect `printf` and shell-style\n+  formatting directives and suggests the correct format][37613].\n+* [Only report one error for all unused imports in an import list][37456]\n+\n+Compiler Performance\n+--------------------\n+\n+* [Avoid unnecessary `mk_ty` calls in `Ty::super_fold_with`][37705]\n+* [Avoid more unnecessary `mk_ty` calls in `Ty::super_fold_with`][37979]\n+* [Don't clone in `UnificationTable::probe`][37848]\n+* [Remove `scope_auxiliary` to cut RSS by 10%][37764]\n+* [Use small vectors in type walker][37760]\n+* [Macro expansion performance was improved][37701]\n+* [Change `HirVec<P<T>>` to `HirVec<T>` in `hir::Expr`][37642]\n+* [Replace FNV with a faster hash function][37229]\n+\n+Stabilized APIs\n+---------------\n+\n+* [`std::iter::Iterator::min_by`]\n+* [`std::iter::Iterator::max_by`]\n+* [`std::os::*::fs::FileExt`]\n+* [`std::sync::atomic::Atomic*::get_mut`]\n+* [`std::sync::atomic::Atomic*::into_inner`]\n+* [`std::vec::IntoIter::as_slice`]\n+* [`std::vec::IntoIter::as_mut_slice`]\n+* [`std::sync::mpsc::Receiver::try_iter`]\n+* [`std::os::unix::process::CommandExt::before_exec`]\n+* [`std::rc::Rc::strong_count`]\n+* [`std::rc::Rc::weak_count`]\n+* [`std::sync::Arc::strong_count`]\n+* [`std::sync::Arc::weak_count`]\n+* [`std::char::encode_utf8`]\n+* [`std::char::encode_utf16`]\n+* [`std::cell::Ref::clone`]\n+* [`std::io::Take::into_inner`]\n+\n+Libraries\n+---------\n+\n+* [The standard sorting algorithm has been rewritten for dramatic performance\n+  improvements][38192]. It is a hybrid merge sort, drawing influences from\n+  Timsort. Previously it was a naive merge sort.\n+* [`Iterator::nth` no longer has a `Sized` bound][38134]\n+* [`Extend<&T>` is specialized for `Vec` where `T: Copy`][38182] to improve\n+  performance.\n+* [`chars().count()` is much faster][37888] and so are [`chars().last()`\n+  and `char_indices().last()`][37882]\n+* [Fix ARM Objective-C ABI in `std::env::args`][38146]\n+* [Chinese characters display correctly in `fmt::Debug`][37855]\n+* [Derive `Default` for `Duration`][37699]\n+* [Support creation of anonymous pipes on WinXP/2k][37677]\n+* [`mpsc::RecvTimeoutError` implements `Error`][37527]\n+* [Don't pass overlapped handles to processes][38835]\n+\n+Cargo\n+-----\n+\n+* [In this release, Cargo build scripts no longer have access to the `OUT_DIR`\n+  environment variable at build time via `env!(\"OUT_DIR\")`][cargo/3368]. They\n+  should instead check the variable at runtime with `std::env`. That the value\n+  was set at build time was a bug, and incorrect when cross-compiling. This\n+  change is known to cause breakage.\n+* [Add `--all` flag to `cargo test`][cargo/3221]\n+* [Compile statically against the MSVC CRT][cargo/3363]\n+* [Mix feature flags into fingerprint/metadata shorthash][cargo/3102]\n+* [Link OpenSSL statically on OSX][cargo/3311]\n+* [Apply new fingerprinting to build dir outputs][cargo/3310]\n+* [Test for bad path overrides with summaries][cargo/3336]\n+* [Require `cargo install --vers` to take a semver version][cargo/3338]\n+* [Fix retrying crate downloads for network errors][cargo/3348]\n+* [Implement string lookup for `build.rustflags` config key][cargo/3356]\n+* [Emit more info on --message-format=json][cargo/3319]\n+* [Assume `build.rs` in the same directory as `Cargo.toml` is a build script][cargo/3361]\n+* [Don't ignore errors in workspace manifest][cargo/3409]\n+* [Fix `--message-format JSON` when rustc emits non-JSON warnings][cargo/3410]\n+\n+Tooling\n+-------\n+\n+* [Test runners (binaries built with `--test`) now support a `--list` argument\n+  that lists the tests it contains][38185]\n+* [Test runners now support a `--exact` argument that makes the test filter\n+  match exactly, instead of matching only a substring of the test name][38181]\n+* [rustdoc supports a `--playground-url` flag][37763]\n+* [rustdoc provides more details about `#[should_panic]` errors][37749]\n+\n+Misc\n+----\n+\n+* [The Rust build system is now written in Rust][37817]. The Makefiles may\n+  continue to be used in this release by passing `--disable-rustbuild` to the\n+  configure script, but they will be deleted soon. Note that the new build\n+  system uses a different on-disk layout that will likely affect any scripts\n+  building Rust.\n+* [Rust supports i686-unknown-openbsd][38086]. Tier 3 support. No testing or\n+  releases.\n+* [Rust supports the MSP430][37627]. Tier 3 support. No testing or releases.\n+* [Rust supports the ARMv5TE architecture][37615]. Tier 3 support. No testing or\n+  releases.\n+\n+Compatibility Notes\n+-------------------\n+\n+* [A number of minor changes to name resolution have been activated][37127].\n+  They add up to more consistent semantics, allowing for future evolution of\n+  Rust macros. Specified in [RFC 1560], see its section on [\"changes\"] for\n+  details of what is different. The breaking changes here have been transitioned\n+  through the [`legacy_imports`] lint since 1.14, with no known regressions.\n+* [In this release, Cargo build scripts no longer have access to the `OUT_DIR`\n+  environment variable at build time via `env!(\"OUT_DIR\")`][cargo/3368]. They\n+  should instead check the variable at runtime with `std::env`. That the value\n+  was set at build time was a bug, and incorrect when cross-compiling. This\n+  change is known to cause breakage.\n+* [Higher-ranked lifetimes are no longer allowed to appear _only_ in associated\n+  types][33685]. The [`hr_lifetime_in_assoc_type` lint] has been a warning since\n+  1.10 and is now an error by default. It will become a hard error in the near\n+  future.\n+* [The semantics relating modules to file system directories are changing in\n+  minor ways][37602]. This is captured in the new `legacy_directory_ownership`\n+  lint, which is a warning in this release, and will become a hard error in the\n+  future.\n+* [Rust-ABI symbols are no longer exported from cdylibs][38117]\n+* [Once `Peekable` peeks a `None` it will return that `None` without re-querying\n+  the underlying iterator][37834]\n+\n+[\"changes\"]: https://github.com/rust-lang/rfcs/blob/master/text/1560-name-resolution.md#changes-to-name-resolution-rules\n+[33685]: https://github.com/rust-lang/rust/issues/33685\n+[36868]: https://github.com/rust-lang/rust/pull/36868\n+[37127]: https://github.com/rust-lang/rust/pull/37127\n+[37229]: https://github.com/rust-lang/rust/pull/37229\n+[37456]: https://github.com/rust-lang/rust/pull/37456\n+[37527]: https://github.com/rust-lang/rust/pull/37527\n+[37602]: https://github.com/rust-lang/rust/pull/37602\n+[37613]: https://github.com/rust-lang/rust/pull/37613\n+[37615]: https://github.com/rust-lang/rust/pull/37615\n+[37636]: https://github.com/rust-lang/rust/pull/37636\n+[37642]: https://github.com/rust-lang/rust/pull/37642\n+[37677]: https://github.com/rust-lang/rust/pull/37677\n+[37699]: https://github.com/rust-lang/rust/pull/37699\n+[37701]: https://github.com/rust-lang/rust/pull/37701\n+[37705]: https://github.com/rust-lang/rust/pull/37705\n+[37749]: https://github.com/rust-lang/rust/pull/37749\n+[37760]: https://github.com/rust-lang/rust/pull/37760\n+[37763]: https://github.com/rust-lang/rust/pull/37763\n+[37764]: https://github.com/rust-lang/rust/pull/37764\n+[37789]: https://github.com/rust-lang/rust/pull/37789\n+[37791]: https://github.com/rust-lang/rust/pull/37791\n+[37814]: https://github.com/rust-lang/rust/pull/37814\n+[37817]: https://github.com/rust-lang/rust/pull/37817\n+[37834]: https://github.com/rust-lang/rust/pull/37834\n+[37848]: https://github.com/rust-lang/rust/pull/37848\n+[37855]: https://github.com/rust-lang/rust/pull/37855\n+[37882]: https://github.com/rust-lang/rust/pull/37882\n+[37888]: https://github.com/rust-lang/rust/pull/37888\n+[37973]: https://github.com/rust-lang/rust/pull/37973\n+[37979]: https://github.com/rust-lang/rust/pull/37979\n+[38086]: https://github.com/rust-lang/rust/pull/38086\n+[38107]: https://github.com/rust-lang/rust/pull/38107\n+[38117]: https://github.com/rust-lang/rust/pull/38117\n+[38134]: https://github.com/rust-lang/rust/pull/38134\n+[38146]: https://github.com/rust-lang/rust/pull/38146\n+[38181]: https://github.com/rust-lang/rust/pull/38181\n+[38182]: https://github.com/rust-lang/rust/pull/38182\n+[38185]: https://github.com/rust-lang/rust/pull/38185\n+[38192]: https://github.com/rust-lang/rust/pull/38192\n+[38279]: https://github.com/rust-lang/rust/pull/38279\n+[38835]: https://github.com/rust-lang/rust/pull/38835\n+[RFC 1492]: https://github.com/rust-lang/rfcs/blob/master/text/1492-dotdot-in-patterns.md\n+[RFC 1506]: https://github.com/rust-lang/rfcs/blob/master/text/1506-adt-kinds.md\n+[RFC 1560]: https://github.com/rust-lang/rfcs/blob/master/text/1560-name-resolution.md\n+[RFC 1681]: https://github.com/rust-lang/rfcs/blob/master/text/1681-macros-1.1.md\n+[RFC 1717]: https://github.com/rust-lang/rfcs/blob/master/text/1717-dllimport.md\n+[`hr_lifetime_in_assoc_type` lint]: https://github.com/rust-lang/rust/issues/33685\n+[`legacy_imports`]: https://github.com/rust-lang/rust/pull/38271\n+[cargo/3102]: https://github.com/rust-lang/cargo/pull/3102\n+[cargo/3221]: https://github.com/rust-lang/cargo/pull/3221\n+[cargo/3310]: https://github.com/rust-lang/cargo/pull/3310\n+[cargo/3311]: https://github.com/rust-lang/cargo/pull/3311\n+[cargo/3319]: https://github.com/rust-lang/cargo/pull/3319\n+[cargo/3336]: https://github.com/rust-lang/cargo/pull/3336\n+[cargo/3338]: https://github.com/rust-lang/cargo/pull/3338\n+[cargo/3348]: https://github.com/rust-lang/cargo/pull/3348\n+[cargo/3356]: https://github.com/rust-lang/cargo/pull/3356\n+[cargo/3361]: https://github.com/rust-lang/cargo/pull/3361\n+[cargo/3363]: https://github.com/rust-lang/cargo/pull/3363\n+[cargo/3368]: https://github.com/rust-lang/cargo/issues/3368\n+[cargo/3409]: https://github.com/rust-lang/cargo/pull/3409\n+[cargo/3410]: https://github.com/rust-lang/cargo/pull/3410\n+[`std::iter::Iterator::min_by`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.min_by\n+[`std::iter::Iterator::max_by`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.max_by\n+[`std::os::*::fs::FileExt`]: https://doc.rust-lang.org/std/os/unix/fs/trait.FileExt.html\n+[`std::sync::atomic::Atomic*::get_mut`]: https://doc.rust-lang.org/std/sync/atomic/struct.AtomicU8.html#method.get_mut\n+[`std::sync::atomic::Atomic*::into_inner`]: https://doc.rust-lang.org/std/sync/atomic/struct.AtomicU8.html#method.into_inner\n+[`std::vec::IntoIter::as_slice`]: https://doc.rust-lang.org/std/vec/struct.IntoIter.html#method.as_slice\n+[`std::vec::IntoIter::as_mut_slice`]: https://doc.rust-lang.org/std/vec/struct.IntoIter.html#method.as_mut_slice\n+[`std::sync::mpsc::Receiver::try_iter`]: https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.try_iter\n+[`std::os::unix::process::CommandExt::before_exec`]: https://doc.rust-lang.org/std/os/unix/process/trait.CommandExt.html#tymethod.before_exec\n+[`std::rc::Rc::strong_count`]: https://doc.rust-lang.org/std/rc/struct.Rc.html#method.strong_count\n+[`std::rc::Rc::weak_count`]: https://doc.rust-lang.org/std/rc/struct.Rc.html#method.weak_count\n+[`std::sync::Arc::strong_count`]: https://doc.rust-lang.org/std/sync/struct.Arc.html#method.strong_count\n+[`std::sync::Arc::weak_count`]: https://doc.rust-lang.org/std/sync/struct.Arc.html#method.weak_count\n+[`std::char::encode_utf8`]: https://doc.rust-lang.org/std/primitive.char.html#method.encode_utf8\n+[`std::char::encode_utf16`]: https://doc.rust-lang.org/std/primitive.char.html#method.encode_utf16\n+[`std::cell::Ref::clone`]: https://doc.rust-lang.org/std/cell/struct.Ref.html#method.clone\n+[`std::io::Take::into_inner`]: https://doc.rust-lang.org/std/io/struct.Take.html#method.into_inner\n+\n+\n Version 1.14.0 (2016-12-22)\n ===========================\n "}]}