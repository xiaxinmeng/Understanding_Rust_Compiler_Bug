{"sha": "082a95a0777d03fd7469b8df691e9caa8217f8ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MmE5NWEwNzc3ZDAzZmQ3NDY5YjhkZjY5MWU5Y2FhODIxN2Y4YWM=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-05-02T23:19:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-23T05:29:16Z"}, "message": "core: add result::unwrap() .. patch from @nmatsakis", "tree": {"sha": "2d3ec49e2c40cc3f00b7b3236fd0df8f2c57d6ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d3ec49e2c40cc3f00b7b3236fd0df8f2c57d6ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/082a95a0777d03fd7469b8df691e9caa8217f8ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/082a95a0777d03fd7469b8df691e9caa8217f8ac", "html_url": "https://github.com/rust-lang/rust/commit/082a95a0777d03fd7469b8df691e9caa8217f8ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/082a95a0777d03fd7469b8df691e9caa8217f8ac/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d8f7d644b97ba322cfdb9cb0d7bd557f4ccda48", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d8f7d644b97ba322cfdb9cb0d7bd557f4ccda48", "html_url": "https://github.com/rust-lang/rust/commit/3d8f7d644b97ba322cfdb9cb0d7bd557f4ccda48"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "a8aa250ddade6fdfd9a05d79aa4361e25a87b256", "filename": "src/libcore/result.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/082a95a0777d03fd7469b8df691e9caa8217f8ac/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/082a95a0777d03fd7469b8df691e9caa8217f8ac/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=082a95a0777d03fd7469b8df691e9caa8217f8ac", "patch": "@@ -216,6 +216,21 @@ fn iter2<S,T,U:copy>(ss: [S], ts: [T],\n     ret ok(());\n }\n \n+#[doc=\"\n+Unwraps a result, assuming it is an `ok(T)`\n+\n+This operation is unsafe.\n+\"]\n+fn unwrap<T, U>(-res: result<T, U>) -> T unsafe {\n+    let addr = alt res {\n+      ok(x) { ptr::addr_of(x) }\n+      err(_) { fail \"option none\" }\n+    };\n+    let liberated_value = unsafe::reinterpret_cast(*addr);\n+    unsafe::forget(res);\n+    ret liberated_value;\n+}\n+\n #[cfg(test)]\n mod tests {\n     fn op1() -> result::result<int, str> { result::ok(666) }"}]}