{"sha": "1af3e0a65e5c390ce46c4be9d3b9132768278ce9", "node_id": "C_kwDOAAsO6NoAKDFhZjNlMGE2NWU1YzM5MGNlNDZjNGJlOWQzYjkxMzI3NjgyNzhjZTk", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-04-24T21:32:05Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-04-24T21:32:05Z"}, "message": "Ensure `#[used]` symbols are preserved in LTO", "tree": {"sha": "58c4c5c293057f5aff2ff42d9fe38deb568ad019", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58c4c5c293057f5aff2ff42d9fe38deb568ad019"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1af3e0a65e5c390ce46c4be9d3b9132768278ce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1af3e0a65e5c390ce46c4be9d3b9132768278ce9", "html_url": "https://github.com/rust-lang/rust/commit/1af3e0a65e5c390ce46c4be9d3b9132768278ce9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1af3e0a65e5c390ce46c4be9d3b9132768278ce9/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ebeb284b588c0549dca2169227cabb7417825be", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ebeb284b588c0549dca2169227cabb7417825be", "html_url": "https://github.com/rust-lang/rust/commit/9ebeb284b588c0549dca2169227cabb7417825be"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "da8d574abfe2da44ceef5edae571b4aa3ea26014", "filename": "compiler/rustc_codegen_llvm/src/back/lto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1af3e0a65e5c390ce46c4be9d3b9132768278ce9/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af3e0a65e5c390ce46c4be9d3b9132768278ce9/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs?ref=1af3e0a65e5c390ce46c4be9d3b9132768278ce9", "patch": "@@ -56,7 +56,7 @@ fn prepare_lto(\n     };\n \n     let symbol_filter = &|&(ref name, info): &(String, SymbolExportInfo)| {\n-        if info.level.is_below_threshold(export_threshold) {\n+        if info.level.is_below_threshold(export_threshold) || info.used {\n             Some(CString::new(name.as_str()).unwrap())\n         } else {\n             None"}]}