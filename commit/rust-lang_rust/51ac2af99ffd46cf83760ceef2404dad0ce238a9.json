{"sha": "51ac2af99ffd46cf83760ceef2404dad0ce238a9", "node_id": "C_kwDOAAsO6NoAKDUxYWMyYWY5OWZmZDQ2Y2Y4Mzc2MGNlZWYyNDA0ZGFkMGNlMjM4YTk", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-03T12:33:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-03T12:37:13Z"}, "message": "interpret: clobber return place when calling function", "tree": {"sha": "6c5af372c5d657aca3e2412449018df1a98c4670", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c5af372c5d657aca3e2412449018df1a98c4670"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51ac2af99ffd46cf83760ceef2404dad0ce238a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51ac2af99ffd46cf83760ceef2404dad0ce238a9", "html_url": "https://github.com/rust-lang/rust/commit/51ac2af99ffd46cf83760ceef2404dad0ce238a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51ac2af99ffd46cf83760ceef2404dad0ce238a9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11663b1b4857ffeafbd85a9a36c234d117373b76", "url": "https://api.github.com/repos/rust-lang/rust/commits/11663b1b4857ffeafbd85a9a36c234d117373b76", "html_url": "https://github.com/rust-lang/rust/commit/11663b1b4857ffeafbd85a9a36c234d117373b76"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "e17d3e516a64fb72ae438726e275956340bb2e24", "filename": "compiler/rustc_const_eval/src/interpret/eval_context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51ac2af99ffd46cf83760ceef2404dad0ce238a9/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51ac2af99ffd46cf83760ceef2404dad0ce238a9/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs?ref=51ac2af99ffd46cf83760ceef2404dad0ce238a9", "patch": "@@ -676,6 +676,10 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         return_to_block: StackPopCleanup,\n     ) -> InterpResult<'tcx> {\n         trace!(\"body: {:#?}\", body);\n+        // Clobber previous return place contents, nobody is supposed to be able to see them any more\n+        // This also checks dereferenceable, but not align. We rely on all constructed places being\n+        // sufficiently aligned (in particular we rely on `deref_operand` checking alignment).\n+        self.write_uninit(return_place)?;\n         // first push a stack frame so we have access to the local substs\n         let pre_frame = Frame {\n             body,"}]}