{"sha": "0c04a26b3f8ba70ea686e1a365729835c62c26eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMDRhMjZiM2Y4YmE3MGVhNjg2ZTFhMzY1NzI5ODM1YzYyYzI2ZWI=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-11-26T03:42:57Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-11-26T03:42:57Z"}, "message": "Fix the usual check-fast scoping mistake.", "tree": {"sha": "bd6daa6f359d672c417aced561e3f1b3b6c103ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd6daa6f359d672c417aced561e3f1b3b6c103ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c04a26b3f8ba70ea686e1a365729835c62c26eb", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c04a26b3f8ba70ea686e1a365729835c62c26eb", "html_url": "https://github.com/rust-lang/rust/commit/0c04a26b3f8ba70ea686e1a365729835c62c26eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c04a26b3f8ba70ea686e1a365729835c62c26eb/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8624d5b186c1fba01f3e3cf38403db5ad93b87ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/8624d5b186c1fba01f3e3cf38403db5ad93b87ed", "html_url": "https://github.com/rust-lang/rust/commit/8624d5b186c1fba01f3e3cf38403db5ad93b87ed"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0c897b959a5a3412783e4a8105a137d3cfb80472", "filename": "src/test/run-pass/enum-clike-ffi-as-int.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c04a26b3f8ba70ea686e1a365729835c62c26eb/src%2Ftest%2Frun-pass%2Fenum-clike-ffi-as-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c04a26b3f8ba70ea686e1a365729835c62c26eb/src%2Ftest%2Frun-pass%2Fenum-clike-ffi-as-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-clike-ffi-as-int.rs?ref=0c04a26b3f8ba70ea686e1a365729835c62c26eb", "patch": "@@ -33,7 +33,7 @@ extern \"C\" fn foo(_x: uint) -> Foo { B }\n \n pub fn main() {\n   unsafe {\n-    let f: extern \"C\" fn(uint) -> u32 = std::cast::transmute(foo);\n+    let f: extern \"C\" fn(uint) -> u32 = ::std::cast::transmute(foo);\n     assert_eq!(f(0xDEADBEEF), B as u32);\n   }\n }"}]}