{"sha": "b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwN2E3OGI3Y2JmMmQ0OTFiNjE2YzBhN2JiZjdmMWIwNjExZTQ2NTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-14T03:06:27Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-14T03:06:27Z"}, "message": "Fix broken tests", "tree": {"sha": "966029b63dc302afcde8362b8cb96dba5df232fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/966029b63dc302afcde8362b8cb96dba5df232fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655", "html_url": "https://github.com/rust-lang/rust/commit/b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9677fff0f9327915b62e4f251d3ad95d2912240d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9677fff0f9327915b62e4f251d3ad95d2912240d", "html_url": "https://github.com/rust-lang/rust/commit/9677fff0f9327915b62e4f251d3ad95d2912240d"}], "stats": {"total": 96, "additions": 7, "deletions": 89}, "files": [{"sha": "97520c0a44c29c5f4d0fc5c482f0452c54089e59", "filename": "src/test/compile-fail/block-arg-used-as-lambda-with-illegal-cap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655/src%2Ftest%2Fcompile-fail%2Fblock-arg-used-as-lambda-with-illegal-cap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655/src%2Ftest%2Fcompile-fail%2Fblock-arg-used-as-lambda-with-illegal-cap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-arg-used-as-lambda-with-illegal-cap.rs?ref=b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655", "patch": "@@ -13,7 +13,7 @@ fn to_lambda1(f: fn@(uint) -> uint) -> fn@(uint) -> uint {\n }\n \n fn to_lambda2(b: fn(uint) -> uint) -> fn@(uint) -> uint {\n-    return to_lambda1({|x| b(x)}); //~ ERROR value may contain borrowed pointers\n+    return to_lambda1({|x| b(x)}); //~ ERROR illegal move from argument `b`\n }\n \n fn main() {"}, {"sha": "bb96db8c41cc44c8994f157f5469040114bcf207", "filename": "src/test/compile-fail/copy-into-closure.rs", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655/src%2Ftest%2Fcompile-fail%2Fcopy-into-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655/src%2Ftest%2Fcompile-fail%2Fcopy-into-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcopy-into-closure.rs?ref=b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655", "patch": "@@ -8,42 +8,23 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn closure1(+x: ~str) -> (~str, fn@() -> ~str) {\n-    let f = fn@() -> ~str {\n-        copy x\n-        //~^ WARNING implicitly copying a non-implicitly-copyable value\n-        //~^^ NOTE to copy values into a @fn closure, use a capture clause\n-    };\n-    (move x,f)\n-}\n-\n fn closure2(+x: util::NonCopyable) -> (util::NonCopyable,\n                                        fn@() -> util::NonCopyable) {\n-    let f = fn@() -> util::NonCopyable {\n-        copy x\n+    let f = fn@(copy x) -> util::NonCopyable {\n         //~^ ERROR copying a noncopyable value\n         //~^^ NOTE non-copyable value cannot be copied into a @fn closure\n-        //~^^^ ERROR copying a noncopyable value\n+        copy x\n+        //~^ ERROR copying a noncopyable value\n     };\n     (move x,f)\n }\n fn closure3(+x: util::NonCopyable) {\n-    do task::spawn {\n-        let s = copy x;\n+    do task::spawn |copy x| {\n         //~^ ERROR copying a noncopyable value\n         //~^^ NOTE non-copyable value cannot be copied into a ~fn closure\n-        //~^^^ ERROR copying a noncopyable value\n-        error!(\"%?\", s);\n+        error!(\"%?\", x);\n     }\n     error!(\"%?\", x);\n }\n fn main() {\n-    let x = ~\"hello\";\n-    do task::spawn {\n-        let s = copy x;\n-        //~^ WARNING implicitly copying a non-implicitly-copyable value\n-        //~^^ NOTE to copy values into a ~fn closure, use a capture clause\n-        error!(\"%s from child\", s);\n-    }\n-    error!(\"%s\", x);\n }"}, {"sha": "0b35a08a2b228ef33b2ccb19689132a31f2489d8", "filename": "src/test/compile-fail/issue-2487-b.rs", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/9677fff0f9327915b62e4f251d3ad95d2912240d/src%2Ftest%2Fcompile-fail%2Fissue-2487-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9677fff0f9327915b62e4f251d3ad95d2912240d/src%2Ftest%2Fcompile-fail%2Fissue-2487-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2487-b.rs?ref=9677fff0f9327915b62e4f251d3ad95d2912240d", "patch": "@@ -1,32 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-struct socket {\n-    sock: int,\n-}\n-\n-impl socket : Drop {\n-    fn finalize(&self) {}\n-}\n-\n-impl socket {\n-\n-    fn set_identity()  {\n-        do closure {\n-        setsockopt_bytes(self.sock) //~ ERROR copying a noncopyable value\n-      } \n-    }\n-}\n-\n-fn closure(f: fn@()) { f() }\n-\n-fn setsockopt_bytes(+_sock: int) { }\n-\n-fn main() {}"}, {"sha": "36fa1f9dc18b4ab998de7f699b44fed50d5de031", "filename": "src/test/compile-fail/issue-2828.rs", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9677fff0f9327915b62e4f251d3ad95d2912240d/src%2Ftest%2Fcompile-fail%2Fissue-2828.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9677fff0f9327915b62e4f251d3ad95d2912240d/src%2Ftest%2Fcompile-fail%2Fissue-2828.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2828.rs?ref=9677fff0f9327915b62e4f251d3ad95d2912240d", "patch": "@@ -1,31 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-struct NoCopy {\n-    n: int\n-}\n-fn NoCopy() -> NoCopy {\n-    NoCopy { n: 0 }\n-}\n-\n-impl NoCopy: Drop {\n-    fn finalize(&self) {\n-        log(error, \"running destructor\");\n-    }\n-}\n-\n-fn main() {\n-    let x = NoCopy();\n-\n-    let f = fn~() { assert x.n == 0; }; //~ ERROR copying a noncopyable value\n-    let g = copy f;\n-\n-    f(); g();\n-}\n\\ No newline at end of file"}, {"sha": "6143e869988710c974512d8f1255a70279dfdf64", "filename": "src/test/compile-fail/no-capture-arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs?ref=b07a78b7cbf2d491b616c0a7bbf7f1b0611e4655", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: copying a noncopyable value\n+// error-pattern: use of moved variable\n \n extern mod std;\n use std::arc;"}]}