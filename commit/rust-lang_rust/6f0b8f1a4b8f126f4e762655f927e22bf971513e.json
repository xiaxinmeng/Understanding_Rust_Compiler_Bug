{"sha": "6f0b8f1a4b8f126f4e762655f927e22bf971513e", "node_id": "C_kwDOAAsO6NoAKDZmMGI4ZjFhNGI4ZjEyNmY0ZTc2MjY1NWY5MjdlMjJiZjk3MTUxM2U", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-07-13T09:09:37Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-07-20T10:29:56Z"}, "message": "attr/passes: comment -> doc comment\n\nChange some regular comments into documentation comments.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "ca92a6f007a225fbffb0424e0ac0ff76fe576823", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca92a6f007a225fbffb0424e0ac0ff76fe576823"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f0b8f1a4b8f126f4e762655f927e22bf971513e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0b8f1a4b8f126f4e762655f927e22bf971513e", "html_url": "https://github.com/rust-lang/rust/commit/6f0b8f1a4b8f126f4e762655f927e22bf971513e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f0b8f1a4b8f126f4e762655f927e22bf971513e/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03d488b48af9f66b91e9400387f781b82411fa82", "url": "https://api.github.com/repos/rust-lang/rust/commits/03d488b48af9f66b91e9400387f781b82411fa82", "html_url": "https://github.com/rust-lang/rust/commit/03d488b48af9f66b91e9400387f781b82411fa82"}], "stats": {"total": 45, "additions": 29, "deletions": 16}, "files": [{"sha": "f344bdba5dbfa4dae817dc76662dae0123ef78ff", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6f0b8f1a4b8f126f4e762655f927e22bf971513e/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0b8f1a4b8f126f4e762655f927e22bf971513e/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=6f0b8f1a4b8f126f4e762655f927e22bf971513e", "patch": "@@ -135,9 +135,22 @@ impl ConstStability {\n #[derive(Encodable, Decodable, PartialEq, Copy, Clone, Debug, Eq, Hash)]\n #[derive(HashStable_Generic)]\n pub enum StabilityLevel {\n-    // Reason for the current stability level and the relevant rust-lang issue\n-    Unstable { reason: Option<Symbol>, issue: Option<NonZeroU32>, is_soft: bool },\n-    Stable { since: Symbol, allowed_through_unstable_modules: bool },\n+    /// `#[unstable]`\n+    Unstable {\n+        /// Reason for the current stability level.\n+        reason: Option<Symbol>,\n+        /// Relevant `rust-lang/rust` issue.\n+        issue: Option<NonZeroU32>,\n+        is_soft: bool,\n+    },\n+    /// `#[stable]`\n+    Stable {\n+        /// Rust release which stabilized this feature.\n+        since: Symbol,\n+        /// Is this item allowed to be referred to on stable, despite being contained in unstable\n+        /// modules?\n+        allowed_through_unstable_modules: bool,\n+    },\n }\n \n impl StabilityLevel {"}, {"sha": "97ae8e6f3259c95099aa77a45214170e63d070df", "filename": "compiler/rustc_passes/src/lib_features.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6f0b8f1a4b8f126f4e762655f927e22bf971513e/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0b8f1a4b8f126f4e762655f927e22bf971513e/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs?ref=6f0b8f1a4b8f126f4e762655f927e22bf971513e", "patch": "@@ -1,8 +1,8 @@\n-// Detecting lib features (i.e., features that are not lang features).\n-//\n-// These are declared using stability attributes (e.g., `#[stable (..)]`\n-// and `#[unstable (..)]`), but are not declared in one single location\n-// (unlike lang features), which means we need to collect them instead.\n+//! Detecting lib features (i.e., features that are not lang features).\n+//!\n+//! These are declared using stability attributes (e.g., `#[stable (..)]` and `#[unstable (..)]`),\n+//! but are not declared in one single location (unlike lang features), which means we need to\n+//! collect them instead.\n \n use rustc_ast::{Attribute, MetaItemKind};\n use rustc_errors::struct_span_err;"}, {"sha": "da87f557a55d48e0dceb43883e7bf8a3bd6d9e93", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6f0b8f1a4b8f126f4e762655f927e22bf971513e/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0b8f1a4b8f126f4e762655f927e22bf971513e/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=6f0b8f1a4b8f126f4e762655f927e22bf971513e", "patch": "@@ -29,13 +29,13 @@ use std::num::NonZeroU32;\n \n #[derive(PartialEq)]\n enum AnnotationKind {\n-    // Annotation is required if not inherited from unstable parents\n+    /// Annotation is required if not inherited from unstable parents.\n     Required,\n-    // Annotation is useless, reject it\n+    /// Annotation is useless, reject it.\n     Prohibited,\n-    // Deprecation annotation is useless, reject it. (Stability attribute is still required.)\n+    /// Deprecation annotation is useless, reject it. (Stability attribute is still required.)\n     DeprecationProhibited,\n-    // Annotation itself is useless, but it can be propagated to children\n+    /// Annotation itself is useless, but it can be propagated to children.\n     Container,\n }\n \n@@ -83,7 +83,7 @@ impl InheritStability {\n     }\n }\n \n-// A private tree-walker for producing an Index.\n+/// A private tree-walker for producing an `Index`.\n struct Annotator<'a, 'tcx> {\n     tcx: TyCtxt<'tcx>,\n     index: &'a mut Index,\n@@ -94,9 +94,9 @@ struct Annotator<'a, 'tcx> {\n }\n \n impl<'a, 'tcx> Annotator<'a, 'tcx> {\n-    // Determine the stability for a node based on its attributes and inherited\n-    // stability. The stability is recorded in the index and used as the parent.\n-    // If the node is a function, `fn_sig` is its signature\n+    /// Determine the stability for a node based on its attributes and inherited stability. The\n+    /// stability is recorded in the index and used as the parent. If the node is a function,\n+    /// `fn_sig` is its signature.\n     fn annotate<F>(\n         &mut self,\n         def_id: LocalDefId,"}]}