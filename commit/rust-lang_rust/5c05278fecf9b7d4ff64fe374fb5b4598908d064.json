{"sha": "5c05278fecf9b7d4ff64fe374fb5b4598908d064", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMDUyNzhmZWNmOWI3ZDRmZjY0ZmUzNzRmYjViNDU5ODkwOGQwNjQ=", "commit": {"author": {"name": "Theo Belaire", "email": "theo.belaire@gmail.com", "date": "2015-04-25T19:45:29Z"}, "committer": {"name": "Theo Belaire", "email": "theo.belaire@gmail.com", "date": "2015-04-25T19:45:29Z"}, "message": "Fixed types, and slimmed down code\n\nI don't this we need to print the definition of the\nimported value too, though it's quite possible.", "tree": {"sha": "0aeed6334fa752b02eb2a44130f50f6f747ea9ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0aeed6334fa752b02eb2a44130f50f6f747ea9ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c05278fecf9b7d4ff64fe374fb5b4598908d064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c05278fecf9b7d4ff64fe374fb5b4598908d064", "html_url": "https://github.com/rust-lang/rust/commit/5c05278fecf9b7d4ff64fe374fb5b4598908d064", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c05278fecf9b7d4ff64fe374fb5b4598908d064/comments", "author": {"login": "tbelaire", "id": 427239, "node_id": "MDQ6VXNlcjQyNzIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/427239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbelaire", "html_url": "https://github.com/tbelaire", "followers_url": "https://api.github.com/users/tbelaire/followers", "following_url": "https://api.github.com/users/tbelaire/following{/other_user}", "gists_url": "https://api.github.com/users/tbelaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbelaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbelaire/subscriptions", "organizations_url": "https://api.github.com/users/tbelaire/orgs", "repos_url": "https://api.github.com/users/tbelaire/repos", "events_url": "https://api.github.com/users/tbelaire/events{/privacy}", "received_events_url": "https://api.github.com/users/tbelaire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbelaire", "id": 427239, "node_id": "MDQ6VXNlcjQyNzIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/427239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbelaire", "html_url": "https://github.com/tbelaire", "followers_url": "https://api.github.com/users/tbelaire/followers", "following_url": "https://api.github.com/users/tbelaire/following{/other_user}", "gists_url": "https://api.github.com/users/tbelaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbelaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbelaire/subscriptions", "organizations_url": "https://api.github.com/users/tbelaire/orgs", "repos_url": "https://api.github.com/users/tbelaire/repos", "events_url": "https://api.github.com/users/tbelaire/events{/privacy}", "received_events_url": "https://api.github.com/users/tbelaire/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69a5c379dfbfdb17319eab061bef554845eca407", "url": "https://api.github.com/repos/rust-lang/rust/commits/69a5c379dfbfdb17319eab061bef554845eca407", "html_url": "https://github.com/rust-lang/rust/commit/69a5c379dfbfdb17319eab061bef554845eca407"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "e731e8a5ce2115dd29e1bc2cc0af3fef564fb3f0", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5c05278fecf9b7d4ff64fe374fb5b4598908d064/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c05278fecf9b7d4ff64fe374fb5b4598908d064/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=5c05278fecf9b7d4ff64fe374fb5b4598908d064", "patch": "@@ -897,6 +897,7 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n         match target {\n             Some(ref target) if target.shadowable != Shadowable::Always => {\n                 use syntax::ast_map::NodeItem;\n+\n                 let ns_word = match namespace {\n                     TypeNS => \"type\",\n                     ValueNS => \"value\",\n@@ -907,19 +908,10 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n                                   &token::get_name(name));\n                 let use_id = import_resolution.id(namespace);\n                 if let NodeItem(item) = self.resolver.ast_map.get(use_id) {\n-                    // Assert item.node is ItemUse\n-                    // I feel like this should maybe mention the type,\n-                    // as it's otherwise a bit of work to look up...\n-                    // use syntax::ast::Item;\n+                    // item is syntax::ast::Item;\n                     span_note!(self.resolver.session, item.span,\n-                               \"Previously import of {} `{}` here\",\n-                               ns_word, token::get_name(name));\n-                }\n-                // Also showing the definition is reasonable?\n-                if let Some(sp) = target.bindings.span_for_namespace(namespace) {\n-                    span_note!(self.resolver.session, sp,\n-                               \"definition of {} `{}` here\",\n-                               ns_word, token::get_name(name));\n+                               \"previous import of `{}` here\",\n+                               token::get_name(name));\n                 }\n             }\n             Some(_) | None => {}"}, {"sha": "d267efe8b25e7404b29038e7dab18a6d6f3f5512", "filename": "src/test/compile-fail/double-import.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5c05278fecf9b7d4ff64fe374fb5b4598908d064/src%2Ftest%2Fcompile-fail%2Fdouble-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c05278fecf9b7d4ff64fe374fb5b4598908d064/src%2Ftest%2Fcompile-fail%2Fdouble-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdouble-import.rs?ref=5c05278fecf9b7d4ff64fe374fb5b4598908d064", "patch": "@@ -12,14 +12,14 @@\n \n \n mod sub1 {\n-    fn foo() {} // Implementation 1\n+    fn foo() {} // implementation 1\n }\n \n mod sub2 {\n-    fn foo() {} // Implementation 2\n+    fn foo() {} // implementation 2\n }\n \n-use sub1::foo; //~ NOTE first imported here\n-use sub2::foo; //~ ERROR a value named `foo` has already been imported in this module [E0252]\n+use sub1::foo; //~ note previous import of `foo` here\n+use sub2::foo; //~ error a value named `foo` has already been imported in this module [e0252]\n \n fn main() {}"}]}