{"sha": "ab6f509ba76184d26edf1cb6540382d2584e8b78", "node_id": "C_kwDOAAsO6NoAKGFiNmY1MDliYTc2MTg0ZDI2ZWRmMWNiNjU0MDM4MmQyNTg0ZThiNzg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-16T18:18:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-16T18:18:39Z"}, "message": "Auto merge of #2236 - RalfJung:rustup, r=RalfJung\n\nrustup\n\nI feel like tests became a *lot* slower. I am not sure what is going on and don't have time to debug right now.", "tree": {"sha": "e1781fffc71dd1692e37fe4ffa1d7c12f9062fb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1781fffc71dd1692e37fe4ffa1d7c12f9062fb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab6f509ba76184d26edf1cb6540382d2584e8b78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab6f509ba76184d26edf1cb6540382d2584e8b78", "html_url": "https://github.com/rust-lang/rust/commit/ab6f509ba76184d26edf1cb6540382d2584e8b78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab6f509ba76184d26edf1cb6540382d2584e8b78/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7507d67202741ca01f3b2326e7c27564fd3e1b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7507d67202741ca01f3b2326e7c27564fd3e1b5", "html_url": "https://github.com/rust-lang/rust/commit/e7507d67202741ca01f3b2326e7c27564fd3e1b5"}, {"sha": "d194e9823c2a51008c2e3b1e2f7b5a6fffead0a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d194e9823c2a51008c2e3b1e2f7b5a6fffead0a1", "html_url": "https://github.com/rust-lang/rust/commit/d194e9823c2a51008c2e3b1e2f7b5a6fffead0a1"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "792ac12b80440804c652d94b1d9c7dfd205c763b", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab6f509ba76184d26edf1cb6540382d2584e8b78/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/ab6f509ba76184d26edf1cb6540382d2584e8b78/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=ab6f509ba76184d26edf1cb6540382d2584e8b78", "patch": "@@ -1 +1 @@\n-546c826f0ccaab36e897860205281f490db274e6\n+1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966"}, {"sha": "20cc691f88e16acef373fa5dbcb2bf929b7d0e91", "filename": "tests/fail/data_race/fence_after_load.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab6f509ba76184d26edf1cb6540382d2584e8b78/tests%2Ffail%2Fdata_race%2Ffence_after_load.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab6f509ba76184d26edf1cb6540382d2584e8b78/tests%2Ffail%2Fdata_race%2Ffence_after_load.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Ffence_after_load.rs?ref=ab6f509ba76184d26edf1cb6540382d2584e8b78", "patch": "@@ -1,4 +1,5 @@\n-// compile-flags: -Zmiri-disable-isolation\n+// We want to control preemption here.\n+// compile-flags: -Zmiri-disable-isolation -Zmiri-preemption-rate=0\n // ignore-windows: Concurrency on Windows is not supported yet.\n use std::sync::Arc;\n use std::sync::atomic::{AtomicUsize, Ordering, fence};"}, {"sha": "d4b8f25e038515cde1b78e3afa10a83204ac430b", "filename": "tests/fail/erroneous_const.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab6f509ba76184d26edf1cb6540382d2584e8b78/tests%2Ffail%2Ferroneous_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab6f509ba76184d26edf1cb6540382d2584e8b78/tests%2Ffail%2Ferroneous_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ferroneous_const.stderr?ref=ab6f509ba76184d26edf1cb6540382d2584e8b78", "patch": "@@ -6,11 +6,11 @@ LL |     const VOID: ! = panic!();\n    |\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: post-monomorphization error: encountered constants with type errors, stopping evaluation\n+error: post-monomorphization error: referenced constant has errors\n   --> $DIR/erroneous_const.rs:LL:CC\n    |\n LL |         let _ = PrintName::<T>::VOID;\n-   |                 ^^^^^^^^^^^^^^^^^^^^ encountered constants with type errors, stopping evaluation\n+   |                 ^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n    |\n    = note: inside `no_codegen::<i32>` at $DIR/erroneous_const.rs:LL:CC\n note: inside `main` at $DIR/erroneous_const.rs:LL:CC"}, {"sha": "0d6c1749eb51e7214eb8f1fa1c820006b7fdc30a", "filename": "tests/pass/concurrency/channels.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ab6f509ba76184d26edf1cb6540382d2584e8b78/tests%2Fpass%2Fconcurrency%2Fchannels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab6f509ba76184d26edf1cb6540382d2584e8b78/tests%2Fpass%2Fconcurrency%2Fchannels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fchannels.rs?ref=ab6f509ba76184d26edf1cb6540382d2584e8b78", "patch": "@@ -9,20 +9,23 @@ use std::thread;\n /// The test taken from the Rust documentation.\n fn simple_send() {\n     let (tx, rx) = channel();\n-    thread::spawn(move || {\n+    let t = thread::spawn(move || {\n         tx.send(10).unwrap();\n     });\n     assert_eq!(rx.recv().unwrap(), 10);\n+    t.join().unwrap();\n }\n \n /// The test taken from the Rust documentation.\n fn multiple_send() {\n     let (tx, rx) = channel();\n+    let mut threads = vec![];\n     for i in 0..10 {\n         let tx = tx.clone();\n-        thread::spawn(move || {\n+        let t = thread::spawn(move || {\n             tx.send(i).unwrap();\n         });\n+        threads.push(t);\n     }\n \n     let mut sum = 0;\n@@ -32,6 +35,10 @@ fn multiple_send() {\n         sum += j;\n     }\n     assert_eq!(sum, 45);\n+\n+    for t in threads {\n+        t.join().unwrap();\n+    }\n }\n \n /// The test taken from the Rust documentation.\n@@ -41,13 +48,15 @@ fn send_on_sync() {\n     // this returns immediately\n     sender.send(1).unwrap();\n \n-    thread::spawn(move || {\n+    let t = thread::spawn(move || {\n         // this will block until the previous message has been received\n         sender.send(2).unwrap();\n     });\n \n     assert_eq!(receiver.recv().unwrap(), 1);\n     assert_eq!(receiver.recv().unwrap(), 2);\n+\n+    t.join().unwrap();\n }\n \n fn main() {"}, {"sha": "36d39a72b79984d6b225284605156f9c8c0d80cd", "filename": "tests/pass/threadleak_ignored.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab6f509ba76184d26edf1cb6540382d2584e8b78/tests%2Fpass%2Fthreadleak_ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab6f509ba76184d26edf1cb6540382d2584e8b78/tests%2Fpass%2Fthreadleak_ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fthreadleak_ignored.rs?ref=ab6f509ba76184d26edf1cb6540382d2584e8b78", "patch": "@@ -1,5 +1,6 @@\n // ignore-windows: Concurrency on Windows is not supported yet.\n-// compile-flags: -Zmiri-ignore-leaks\n+// FIXME: disallow preemption to work around https://github.com/rust-lang/rust/issues/55005\n+// compile-flags: -Zmiri-ignore-leaks -Zmiri-preemption-rate=0\n \n //! Test that leaking threads works, and that their destructors are not executed.\n "}]}