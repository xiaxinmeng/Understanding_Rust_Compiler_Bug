{"sha": "8948a29a4cb3c6940e3863886e99bacfa1f325ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5NDhhMjlhNGNiM2M2OTQwZTM4NjM4ODZlOTliYWNmYTFmMzI1YWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T09:07:32Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T09:07:32Z"}, "message": "adjust for librustc rename; reduce 'extern crate' to rustc crates", "tree": {"sha": "1b9045e709ae34397a3320e58ab94d48ee1fd69d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b9045e709ae34397a3320e58ab94d48ee1fd69d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8948a29a4cb3c6940e3863886e99bacfa1f325ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8948a29a4cb3c6940e3863886e99bacfa1f325ae", "html_url": "https://github.com/rust-lang/rust/commit/8948a29a4cb3c6940e3863886e99bacfa1f325ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8948a29a4cb3c6940e3863886e99bacfa1f325ae/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a50d87f016adac3658e2d420ee386c6dcb52db6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a50d87f016adac3658e2d420ee386c6dcb52db6d", "html_url": "https://github.com/rust-lang/rust/commit/a50d87f016adac3658e2d420ee386c6dcb52db6d"}], "stats": {"total": 131, "additions": 67, "deletions": 64}, "files": [{"sha": "c7bfe6ccf1c149e7c61020aeb8d5450401293b8c", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -79,7 +79,7 @@ MIRI_LOG=info ./miri run tests/run-pass/vecs.rs\n ```\n \n Setting `MIRI_LOG` like this will configure logging for Miri itself as well as\n-the `rustc::mir::interpret` and `rustc_mir::interpret` modules in rustc.  You\n+the `rustc_middle::mir::interpret` and `rustc_mir::interpret` modules in rustc.  You\n can also do more targeted configuration, e.g. the following helps debug the\n stacked borrows implementation:\n "}, {"sha": "589a95b668f37289c30bd4f4f8eb66ebe71de672", "filename": "benches/helpers/miri_helper.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/benches%2Fhelpers%2Fmiri_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/benches%2Fhelpers%2Fmiri_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Fmiri_helper.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1,17 +1,13 @@\n-extern crate getopts;\n-extern crate miri;\n-extern crate rustc;\n extern crate rustc_driver;\n extern crate rustc_hir;\n extern crate rustc_interface;\n-extern crate test;\n \n-use self::miri::eval_main;\n-use crate::test::Bencher;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_driver::Compilation;\n use rustc_interface::{interface, Queries};\n \n+use crate::test::Bencher;\n+\n struct MiriCompilerCalls<'a> {\n     bencher: &'a mut Bencher,\n }\n@@ -30,7 +26,7 @@ impl rustc_driver::Callbacks for MiriCompilerCalls<'_> {\n \n             self.bencher.iter(|| {\n                 let config = miri::MiriConfig::default();\n-                eval_main(tcx, entry_def_id, config);\n+                miri::eval_main(tcx, entry_def_id, config);\n             });\n         });\n "}, {"sha": "4f4cff76583b25389dc7fc4ab1e7e8665eafc101", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1 +1 @@\n-0afdf43dc1d9be4c8b422840166b51dd99e56a16\n+8926bb497d9b127eb318aea5aed0e745d8381591"}, {"sha": "97292cf1dbe5c4b84a1b4c49dcf979fd5436bfa8", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1,6 +1,6 @@\n #![feature(rustc_private)]\n-extern crate miri;\n-extern crate rustc;\n+\n+extern crate rustc_middle;\n extern crate rustc_driver;\n extern crate rustc_hir;\n extern crate rustc_interface;\n@@ -11,15 +11,13 @@ use std::io::Write;\n use std::path::Path;\n use std::sync::{Arc, Mutex};\n \n-use rustc::ty::TyCtxt;\n+use rustc_middle::ty::TyCtxt;\n use rustc_driver::Compilation;\n use rustc_hir as hir;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir::itemlikevisit;\n use rustc_interface::{interface, Queries};\n \n-use miri::MiriConfig;\n-\n struct MiriCompilerCalls {\n     /// whether we are building for the host\n     host_target: bool,\n@@ -42,7 +40,7 @@ impl rustc_driver::Callbacks for MiriCompilerCalls {\n                                 .iter()\n                                 .any(|attr| attr.check_name(rustc_span::symbol::sym::test))\n                             {\n-                                let config = MiriConfig::default();\n+                                let config = miri::MiriConfig::default();\n                                 let did = self.0.hir().body_owner_def_id(body_id);\n                                 println!(\"running test: {}\", self.0.def_path_debug_str(did));\n                                 miri::eval_main(self.0, did, config);\n@@ -55,7 +53,7 @@ impl rustc_driver::Callbacks for MiriCompilerCalls {\n                 }\n                 tcx.hir().krate().visit_all_item_likes(&mut Visitor(tcx));\n             } else if let Some((entry_def_id, _)) = tcx.entry_fn(LOCAL_CRATE) {\n-                let config = MiriConfig::default();\n+                let config = miri::MiriConfig::default();\n                 miri::eval_main(tcx, entry_def_id, config);\n \n                 compiler.session().abort_if_errors();"}, {"sha": "14d78053c0fd675ac072e6037fb32f867c001eea", "filename": "src/bin/miri.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1,12 +1,6 @@\n #![feature(rustc_private)]\n \n-extern crate env_logger;\n-extern crate getopts;\n-#[macro_use]\n-extern crate log;\n-extern crate log_settings;\n-extern crate miri;\n-extern crate rustc;\n+extern crate rustc_middle;\n extern crate rustc_driver;\n extern crate rustc_hir;\n extern crate rustc_interface;\n@@ -17,12 +11,13 @@ use std::env;\n use std::str::FromStr;\n \n use hex::FromHexError;\n+use log::debug;\n \n use rustc_session::CtfeBacktrace;\n use rustc_driver::Compilation;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_interface::{interface, Queries};\n-use rustc::ty::TyCtxt;\n+use rustc_middle::ty::TyCtxt;\n \n struct MiriCompilerCalls {\n     miri_config: miri::MiriConfig,\n@@ -84,7 +79,7 @@ fn init_late_loggers(tcx: TyCtxt<'_>) {\n             if log::Level::from_str(&var).is_ok() {\n                 env::set_var(\n                     \"RUSTC_LOG\",\n-                    &format!(\"rustc::mir::interpret={0},rustc_mir::interpret={0}\", var),\n+                    &format!(\"rustc_middle::mir::interpret={0},rustc_mir::interpret={0}\", var),\n                 );\n             } else {\n                 env::set_var(\"RUSTC_LOG\", &var);"}, {"sha": "a528960cb262852cedbad19fc1eb5ac78f66f6e3", "filename": "src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1,6 +1,8 @@\n use std::cell::RefCell;\n use std::fmt;\n \n+use log::trace;\n+\n use rustc_span::DUMMY_SP;\n \n use crate::*;"}, {"sha": "a4867bd5de46b165eb5ab3cdf24649a63c4a12e6", "filename": "src/eval.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -6,8 +6,8 @@ use std::convert::TryFrom;\n use rand::rngs::StdRng;\n use rand::SeedableRng;\n \n-use rustc::ty::layout::LayoutOf;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::ty::layout::LayoutOf;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_hir::def_id::DefId;\n \n use crate::*;"}, {"sha": "15f1b286de22887596fc4508105eaff703b93eec", "filename": "src/helpers.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1,8 +1,10 @@\n use std::convert::TryFrom;\n use std::mem;\n \n-use rustc::mir;\n-use rustc::ty::{\n+use log::trace;\n+\n+use rustc_middle::mir;\n+use rustc_middle::ty::{\n     self,\n     layout::{self, LayoutOf, Size, TyAndLayout},\n     List, TyCtxt,"}, {"sha": "8eb28e4f4700a6d29e3c97e13a520097d72425e0", "filename": "src/intptrcast.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fintptrcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fintptrcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintptrcast.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -2,10 +2,11 @@ use std::cell::RefCell;\n use std::cmp::max;\n use std::collections::hash_map::Entry;\n \n+use log::trace;\n use rand::Rng;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc::ty::layout::HasDataLayout;\n+use rustc_middle::ty::layout::HasDataLayout;\n use rustc_mir::interpret::{AllocCheck, AllocId, InterpResult, Memory, Machine, Pointer, PointerArithmetic};\n use rustc_target::abi::Size;\n "}, {"sha": "c04fbfeab98ca90bcd5e813fdd7f5b3583a9257b", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -7,13 +7,9 @@\n #![warn(rust_2018_idioms)]\n #![allow(clippy::cast_lossless)]\n \n-#[macro_use]\n-extern crate log;\n-// From rustc.\n extern crate rustc_apfloat;\n extern crate rustc_ast;\n-#[macro_use]\n-extern crate rustc;\n+#[macro_use] extern crate rustc_middle;\n extern crate rustc_data_structures;\n extern crate rustc_hir;\n extern crate rustc_mir;"}, {"sha": "4b7f3a76569f1ecd005c29570f7964cffd60df4b", "filename": "src/machine.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -7,11 +7,12 @@ use std::num::NonZeroU64;\n use std::rc::Rc;\n use std::time::Instant;\n \n+use log::trace;\n use rand::rngs::StdRng;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc::mir;\n-use rustc::ty::{\n+use rustc_middle::mir;\n+use rustc_middle::ty::{\n     self,\n     layout::{LayoutOf, Size},\n     Ty,"}, {"sha": "2232be713ed58a1408c075d98686c6c8106a8f75", "filename": "src/operator.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1,7 +1,9 @@\n use std::convert::TryFrom;\n \n-use rustc::mir;\n-use rustc::ty::{\n+use log::trace;\n+\n+use rustc_middle::mir;\n+use rustc_middle::ty::{\n     layout::{LayoutOf, Size},\n     Ty,\n };\n@@ -33,7 +35,7 @@ impl<'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'mir, 'tcx> {\n         left: ImmTy<'tcx, Tag>,\n         right: ImmTy<'tcx, Tag>,\n     ) -> InterpResult<'tcx, (Scalar<Tag>, bool, Ty<'tcx>)> {\n-        use rustc::mir::BinOp::*;\n+        use rustc_middle::mir::BinOp::*;\n \n         trace!(\"ptr_op: {:?} {:?} {:?}\", *left, bin_op, *right);\n "}, {"sha": "1d12d8a1ba652efceb80bfb3955b7e75e99c4f5c", "filename": "src/range_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Frange_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Frange_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frange_map.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -7,7 +7,7 @@\n \n use std::ops;\n \n-use rustc::ty::layout::Size;\n+use rustc_middle::ty::layout::Size;\n \n #[derive(Clone, Debug)]\n struct Elem<T> {"}, {"sha": "b5fe3cb7229c1d1678f853a7835ad599c8ca9b18", "filename": "src/shims/dlsym.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fdlsym.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fdlsym.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fdlsym.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1,4 +1,4 @@\n-use rustc::mir;\n+use rustc_middle::mir;\n \n use crate::*;\n "}, {"sha": "76d1de5d9a649df61dc4bce093307f7280102d4e", "filename": "src/shims/env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -7,7 +7,7 @@ use crate::rustc_target::abi::LayoutOf;\n use crate::*;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc::ty::layout::Size;\n+use rustc_middle::ty::layout::Size;\n use rustc_mir::interpret::Pointer;\n \n /// Check whether an operation that writes to a target buffer was successful."}, {"sha": "da2f9d439c7e45ecdf55c940e2677a47f68d69e6", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -4,9 +4,9 @@ mod posix;\n use std::{convert::{TryInto, TryFrom}, iter};\n \n use rustc_hir::def_id::DefId;\n-use rustc::mir;\n-use rustc::ty;\n-use rustc::ty::layout::{Align, Size};\n+use rustc_middle::mir;\n+use rustc_middle::ty;\n+use rustc_middle::ty::layout::{Align, Size};\n use rustc_apfloat::Float;\n use rustc_span::symbol::sym;\n use rustc_ast::attr;"}, {"sha": "28161592985acea3921eea879337e6b9d656bc43", "filename": "src/shims/foreign_items/posix.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fforeign_items%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fforeign_items%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -3,9 +3,11 @@ mod macos;\n \n use std::convert::TryFrom;\n \n+use log::trace;\n+\n use crate::*;\n-use rustc::mir;\n-use rustc::ty::layout::{Align, LayoutOf, Size};\n+use rustc_middle::mir;\n+use rustc_middle::ty::layout::{Align, LayoutOf, Size};\n \n impl<'mir, 'tcx> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {"}, {"sha": "286bd5798b049c17a6ae347663057697dd2069f1", "filename": "src/shims/foreign_items/posix/linux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1,5 +1,5 @@\n use crate::*;\n-use rustc::mir;\n+use rustc_middle::mir;\n \n impl<'mir, 'tcx> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {"}, {"sha": "44c45d90c1987a776879f24baf23bf57ce7681d8", "filename": "src/shims/foreign_items/posix/macos.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1,5 +1,5 @@\n use crate::*;\n-use rustc::mir;\n+use rustc_middle::mir;\n \n impl<'mir, 'tcx> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {"}, {"sha": "f39d477f8278e367212b2d24093e165dabcbbb1c", "filename": "src/shims/foreign_items/windows.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fforeign_items%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fforeign_items%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fwindows.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1,6 +1,6 @@\n use crate::*;\n-use rustc::mir;\n-use rustc::ty::layout::Size;\n+use rustc_middle::mir;\n+use rustc_middle::ty::layout::Size;\n use std::iter;\n \n impl<'mir, 'tcx> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}"}, {"sha": "75e90384fd56897626f826feced3655a88f3f712", "filename": "src/shims/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -6,7 +6,7 @@ use std::path::Path;\n use std::time::SystemTime;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc::ty::layout::{Align, LayoutOf, Size};\n+use rustc_middle::ty::layout::{Align, LayoutOf, Size};\n \n use crate::stacked_borrows::Tag;\n use crate::*;"}, {"sha": "641b8b2563634ca8ce9ac82ad43d1fb402d948c7", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -1,9 +1,9 @@\n use std::iter;\n use std::convert::TryFrom;\n \n-use rustc::mir;\n-use rustc::ty;\n-use rustc::ty::layout::{Align, LayoutOf};\n+use rustc_middle::mir;\n+use rustc_middle::ty;\n+use rustc_middle::ty::layout::{Align, LayoutOf};\n use rustc_apfloat::Float;\n use rustc_span::source_map::Span;\n "}, {"sha": "e5db537cff1f7518e2062455743fbdd8bdfc7d38", "filename": "src/shims/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fmod.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -10,7 +10,9 @@ pub mod tls;\n \n use std::convert::TryFrom;\n \n-use rustc::{mir, ty};\n+use log::trace;\n+\n+use rustc_middle::{mir, ty};\n \n use crate::*;\n "}, {"sha": "704994da4bd46ee92db303faf1c0cf3d2e67060e", "filename": "src/shims/os_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fos_str.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -9,7 +9,7 @@ use std::os::unix::ffi::{OsStrExt, OsStringExt};\n #[cfg(windows)]\n use std::os::windows::ffi::{OsStrExt, OsStringExt};\n \n-use rustc::ty::layout::LayoutOf;\n+use rustc_middle::ty::layout::LayoutOf;\n \n use crate::*;\n "}, {"sha": "77741b7cca4097b7ab75b313792ff6e47d369a0a", "filename": "src/shims/panic.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fpanic.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -11,8 +11,10 @@\n //!   gets popped *during unwinding*, we take the panic payload and store it according to the extra\n //!   metadata we remembered when pushing said frame.\n \n-use rustc::mir;\n-use rustc::ty::{self, layout::LayoutOf};\n+use log::trace;\n+\n+use rustc_middle::mir;\n+use rustc_middle::ty::{self, layout::LayoutOf};\n use rustc_target::spec::PanicStrategy;\n \n use crate::*;\n@@ -186,7 +188,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         msg: &mir::AssertMessage<'tcx>,\n         unwind: Option<mir::BasicBlock>,\n     ) -> InterpResult<'tcx> {\n-        use rustc::mir::AssertKind::*;\n+        use rustc_middle::mir::AssertKind::*;\n         let this = self.eval_context_mut();\n \n         match msg {"}, {"sha": "76f946f724ec475a51c026f5023cdeede38047b2", "filename": "src/shims/tls.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fshims%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftls.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -2,7 +2,9 @@\n \n use std::collections::BTreeMap;\n \n-use rustc::{ty, ty::layout::{Size, HasDataLayout}};\n+use log::trace;\n+\n+use rustc_middle::{ty, ty::layout::{Size, HasDataLayout}};\n use rustc_target::abi::LayoutOf;\n \n use crate::{HelpersEvalContextExt, InterpResult, MPlaceTy, Scalar, StackPopCleanup, Tag};"}, {"sha": "90920069c5eee970f5c6069f33e10f9becc9ee87", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8948a29a4cb3c6940e3863886e99bacfa1f325ae/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=8948a29a4cb3c6940e3863886e99bacfa1f325ae", "patch": "@@ -6,9 +6,11 @@ use std::fmt;\n use std::num::NonZeroU64;\n use std::rc::Rc;\n \n+use log::trace;\n+\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc::mir::RetagKind;\n-use rustc::ty::{self, layout::Size};\n+use rustc_middle::mir::RetagKind;\n+use rustc_middle::ty::{self, layout::Size};\n use rustc_hir::Mutability;\n \n use crate::*;"}]}