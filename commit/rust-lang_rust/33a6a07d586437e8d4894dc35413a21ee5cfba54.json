{"sha": "33a6a07d586437e8d4894dc35413a21ee5cfba54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYTZhMDdkNTg2NDM3ZThkNDg5NGRjMzU0MTNhMjFlZTVjZmJhNTQ=", "commit": {"author": {"name": "Donnie Bishop", "email": "donnie.a.bishop@gmail.com", "date": "2017-03-25T15:56:52Z"}, "committer": {"name": "Donnie Bishop", "email": "donnie.a.bishop@gmail.com", "date": "2017-03-25T15:56:52Z"}, "message": "FromStr implementation example", "tree": {"sha": "48fe9f0f7680fff6d7708b7cc5e72116ecb46575", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48fe9f0f7680fff6d7708b7cc5e72116ecb46575"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33a6a07d586437e8d4894dc35413a21ee5cfba54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33a6a07d586437e8d4894dc35413a21ee5cfba54", "html_url": "https://github.com/rust-lang/rust/commit/33a6a07d586437e8d4894dc35413a21ee5cfba54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33a6a07d586437e8d4894dc35413a21ee5cfba54/comments", "author": {"login": "donniebishop", "id": 7742572, "node_id": "MDQ6VXNlcjc3NDI1NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/7742572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donniebishop", "html_url": "https://github.com/donniebishop", "followers_url": "https://api.github.com/users/donniebishop/followers", "following_url": "https://api.github.com/users/donniebishop/following{/other_user}", "gists_url": "https://api.github.com/users/donniebishop/gists{/gist_id}", "starred_url": "https://api.github.com/users/donniebishop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donniebishop/subscriptions", "organizations_url": "https://api.github.com/users/donniebishop/orgs", "repos_url": "https://api.github.com/users/donniebishop/repos", "events_url": "https://api.github.com/users/donniebishop/events{/privacy}", "received_events_url": "https://api.github.com/users/donniebishop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "donniebishop", "id": 7742572, "node_id": "MDQ6VXNlcjc3NDI1NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/7742572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donniebishop", "html_url": "https://github.com/donniebishop", "followers_url": "https://api.github.com/users/donniebishop/followers", "following_url": "https://api.github.com/users/donniebishop/following{/other_user}", "gists_url": "https://api.github.com/users/donniebishop/gists{/gist_id}", "starred_url": "https://api.github.com/users/donniebishop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donniebishop/subscriptions", "organizations_url": "https://api.github.com/users/donniebishop/orgs", "repos_url": "https://api.github.com/users/donniebishop/repos", "events_url": "https://api.github.com/users/donniebishop/events{/privacy}", "received_events_url": "https://api.github.com/users/donniebishop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49c67bd632e961a57863805e5d0a400f97da9b93", "url": "https://api.github.com/repos/rust-lang/rust/commits/49c67bd632e961a57863805e5d0a400f97da9b93", "html_url": "https://github.com/rust-lang/rust/commit/49c67bd632e961a57863805e5d0a400f97da9b93"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "bc5df6810a9d985fd429235fdcd344f65be38df9", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/33a6a07d586437e8d4894dc35413a21ee5cfba54/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a6a07d586437e8d4894dc35413a21ee5cfba54/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=33a6a07d586437e8d4894dc35413a21ee5cfba54", "patch": "@@ -35,6 +35,39 @@ pub mod pattern;\n /// [`from_str`]: #tymethod.from_str\n /// [`str`]: ../../std/primitive.str.html\n /// [`parse`]: ../../std/primitive.str.html#method.parse\n+///\n+/// # Examples\n+///\n+/// Basic implementation of `FromStr` on an example `Point` type:\n+///\n+/// ```\n+/// use std::str::FromStr;\n+/// use std::num::ParseIntError;\n+/// \n+/// #[derive(Debug, PartialEq)]\n+/// struct Point {\n+///     x: i32,\n+///     y: i32\n+/// }\n+/// \n+/// impl FromStr for Point {\n+///     type Err = ParseIntError;\n+/// \n+///     fn from_str(s: &str) -> Result<Self, Self::Err> {\n+///         let coords: Vec<&str> = s.trim_matches(|p| p == '(' || p == ')' )\n+///                                  .split(\",\")\n+///                                  .collect();\n+/// \n+///         let x_fromstr = try!(coords[0].parse::<i32>());\n+///         let y_fromstr = try!(coords[1].parse::<i32>());\n+/// \n+///         Ok(Point { x: x_fromstr, y: y_fromstr })\n+///     }\n+/// }\n+/// \n+/// let p = Point::from_str(\"(1,2)\");\n+/// assert_eq!(p.unwrap(), Point{ x: 1, y: 2} )\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait FromStr: Sized {\n     /// The associated error which can be returned from parsing."}]}