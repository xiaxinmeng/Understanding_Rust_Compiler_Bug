{"sha": "257ac5803f0baf0dd0b79b6560391bf588ca17d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1N2FjNTgwM2YwYmFmMGRkMGI3OWI2NTYwMzkxYmY1ODhjYTE3ZDg=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-14T13:24:16Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-14T13:24:16Z"}, "message": "Don't unconditionally mask bitshift rhs", "tree": {"sha": "45d61ded35e44d2a15c19c0105a1d6b87231e95a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45d61ded35e44d2a15c19c0105a1d6b87231e95a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/257ac5803f0baf0dd0b79b6560391bf588ca17d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/257ac5803f0baf0dd0b79b6560391bf588ca17d8", "html_url": "https://github.com/rust-lang/rust/commit/257ac5803f0baf0dd0b79b6560391bf588ca17d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/257ac5803f0baf0dd0b79b6560391bf588ca17d8/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb33830c60f9b815bce976567c53a0b7e3f13d9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb33830c60f9b815bce976567c53a0b7e3f13d9c", "html_url": "https://github.com/rust-lang/rust/commit/bb33830c60f9b815bce976567c53a0b7e3f13d9c"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "155d5574daa045f73dcc6abe669079a33b58e136", "filename": "src/operator.rs", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/257ac5803f0baf0dd0b79b6560391bf588ca17d8/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/257ac5803f0baf0dd0b79b6560391bf588ca17d8/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=257ac5803f0baf0dd0b79b6560391bf588ca17d8", "patch": "@@ -178,25 +178,9 @@ pub fn binary_op<'tcx>(\n \n     // These ops can have an RHS with a different numeric type.\n     if bin_op == Shl || bin_op == Shr {\n-        // These are the maximum values a bitshift RHS could possibly have. For example, u16\n-        // can be bitshifted by 0..16, so masking with 0b1111 (16 - 1) will ensure we are in\n-        // that range.\n-        let type_bits: u32 = match left_kind {\n-            I8  | U8  => 8,\n-            I16 | U16 => 16,\n-            I32 | U32 => 32,\n-            I64 | U64 => 64,\n-            I128 | U128 => 128,\n-            _ => bug!(\"bad MIR: bitshift lhs is not integral\"),\n-        };\n-\n-        // Cast to `u32` because `overflowing_sh{l,r}` only take `u32`, then apply the bitmask\n-        // to ensure it's within the valid shift value range.\n-        let masked_shift_width = (r as u32) & (type_bits - 1);\n-\n         return match bin_op {\n-            Shl => int_shift!(left_kind, overflowing_shl, l, masked_shift_width),\n-            Shr => int_shift!(left_kind, overflowing_shr, l, masked_shift_width),\n+            Shl => int_shift!(left_kind, overflowing_shl, l, r as u32),\n+            Shr => int_shift!(left_kind, overflowing_shr, l, r as u32),\n             _ => bug!(\"it has already been checked that this is a shift op\"),\n         };\n     }"}, {"sha": "a7ac9d1d50398d1f50fb9cd00152cf1808a3b77c", "filename": "tests/compile-fail/overflowing-rsh-6.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/257ac5803f0baf0dd0b79b6560391bf588ca17d8/tests%2Fcompile-fail%2Foverflowing-rsh-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/257ac5803f0baf0dd0b79b6560391bf588ca17d8/tests%2Fcompile-fail%2Foverflowing-rsh-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Foverflowing-rsh-6.rs?ref=257ac5803f0baf0dd0b79b6560391bf588ca17d8", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(exceeding_bitshifts)]\n+\n+fn main() {\n+    let _n = 1i64 >> 64; //~ Overflow(Shr)\n+}"}]}