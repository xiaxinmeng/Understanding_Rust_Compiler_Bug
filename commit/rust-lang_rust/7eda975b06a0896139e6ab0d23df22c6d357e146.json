{"sha": "7eda975b06a0896139e6ab0d23df22c6d357e146", "node_id": "C_kwDOAAsO6NoAKDdlZGE5NzViMDZhMDg5NjEzOWU2YWIwZDIzZGYyMmM2ZDM1N2UxNDY", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-04-06T16:53:19Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-04-06T16:53:19Z"}, "message": "Use PhantomData directly in Bridge", "tree": {"sha": "53e8389039fb1f3dfef90d54f04fb0f4219485f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53e8389039fb1f3dfef90d54f04fb0f4219485f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7eda975b06a0896139e6ab0d23df22c6d357e146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7eda975b06a0896139e6ab0d23df22c6d357e146", "html_url": "https://github.com/rust-lang/rust/commit/7eda975b06a0896139e6ab0d23df22c6d357e146", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7eda975b06a0896139e6ab0d23df22c6d357e146/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6eab9802c9d43cc7b2340fd93c49881850cd3b20", "url": "https://api.github.com/repos/rust-lang/rust/commits/6eab9802c9d43cc7b2340fd93c49881850cd3b20", "html_url": "https://github.com/rust-lang/rust/commit/6eab9802c9d43cc7b2340fd93c49881850cd3b20"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "f7c9df6564f873753fce668e298ce399489e9e07", "filename": "library/proc_macro/src/bridge/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7eda975b06a0896139e6ab0d23df22c6d357e146/library%2Fproc_macro%2Fsrc%2Fbridge%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7eda975b06a0896139e6ab0d23df22c6d357e146/library%2Fproc_macro%2Fsrc%2Fbridge%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Fbridge%2Fmod.rs?ref=7eda975b06a0896139e6ab0d23df22c6d357e146", "patch": "@@ -220,8 +220,6 @@ use rpc::{Decode, DecodeMut, Encode, Reader, Writer};\n /// then passes it to the client through the function pointer in the `run`\n /// field of `client::Client`. The client holds its copy of the `Bridge`\n /// in TLS during its execution (`Bridge::{enter, with}` in `client.rs`).\n-// Note: Bridge is !Send and !Sync due to containg a `Closure`. If this\n-// ever changes, make sure to preserve the !Send and !Sync property.\n #[repr(C)]\n pub struct Bridge<'a> {\n     /// Reusable buffer (only `clear`-ed, never shrunk), primarily\n@@ -233,6 +231,9 @@ pub struct Bridge<'a> {\n \n     /// If 'true', always invoke the default panic hook\n     force_show_panics: bool,\n+\n+    // Prevent Send and Sync impls\n+    _marker: marker::PhantomData<*mut ()>,\n }\n \n #[forbid(unsafe_code)]"}, {"sha": "2e0400d32a0af0024776ad05d6efb3c80b6bc22d", "filename": "library/proc_macro/src/bridge/server.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7eda975b06a0896139e6ab0d23df22c6d357e146/library%2Fproc_macro%2Fsrc%2Fbridge%2Fserver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7eda975b06a0896139e6ab0d23df22c6d357e146/library%2Fproc_macro%2Fsrc%2Fbridge%2Fserver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Fbridge%2Fserver.rs?ref=7eda975b06a0896139e6ab0d23df22c6d357e146", "patch": "@@ -153,7 +153,12 @@ impl ExecutionStrategy for SameThread {\n         let mut dispatch = |b| dispatcher.dispatch(b);\n \n         run_client(\n-            Bridge { cached_buffer: input, dispatch: (&mut dispatch).into(), force_show_panics },\n+            Bridge {\n+                cached_buffer: input,\n+                dispatch: (&mut dispatch).into(),\n+                force_show_panics,\n+                _marker: marker::PhantomData,\n+            },\n             client_data,\n         )\n     }\n@@ -189,6 +194,7 @@ impl ExecutionStrategy for CrossThread1 {\n                     cached_buffer: input,\n                     dispatch: (&mut dispatch).into(),\n                     force_show_panics,\n+                    _marker: marker::PhantomData,\n                 },\n                 client_data,\n             )\n@@ -241,6 +247,7 @@ impl ExecutionStrategy for CrossThread2 {\n                     cached_buffer: input,\n                     dispatch: (&mut dispatch).into(),\n                     force_show_panics,\n+                    _marker: marker::PhantomData,\n                 },\n                 client_data,\n             );"}]}