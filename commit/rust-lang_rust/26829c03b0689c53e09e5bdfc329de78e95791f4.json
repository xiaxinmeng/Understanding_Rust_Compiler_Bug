{"sha": "26829c03b0689c53e09e5bdfc329de78e95791f4", "node_id": "C_kwDOAAsO6NoAKDI2ODI5YzAzYjA2ODljNTNlMDllNWJkZmMzMjlkZTc4ZTk1NzkxZjQ", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-03-11T19:11:23Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-03-15T18:34:16Z"}, "message": "rustdoc-json: Lifetime tests", "tree": {"sha": "f5182cfda5d09a21631dc8540900e6ea82397d61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5182cfda5d09a21631dc8540900e6ea82397d61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26829c03b0689c53e09e5bdfc329de78e95791f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26829c03b0689c53e09e5bdfc329de78e95791f4", "html_url": "https://github.com/rust-lang/rust/commit/26829c03b0689c53e09e5bdfc329de78e95791f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26829c03b0689c53e09e5bdfc329de78e95791f4/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc6b5cb9f3a554a2a9016e819cb2760b68bd663e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc6b5cb9f3a554a2a9016e819cb2760b68bd663e", "html_url": "https://github.com/rust-lang/rust/commit/dc6b5cb9f3a554a2a9016e819cb2760b68bd663e"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "95b99599e737d44595ff697113d5dde49dd55e43", "filename": "src/test/rustdoc-json/lifetime/longest.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/26829c03b0689c53e09e5bdfc329de78e95791f4/src%2Ftest%2Frustdoc-json%2Flifetime%2Flongest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26829c03b0689c53e09e5bdfc329de78e95791f4/src%2Ftest%2Frustdoc-json%2Flifetime%2Flongest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Flifetime%2Flongest.rs?ref=26829c03b0689c53e09e5bdfc329de78e95791f4", "patch": "@@ -0,0 +1,33 @@\n+// ignore-tidy-linelength\n+\n+#![feature(no_core)]\n+#![no_core]\n+\n+// @is longest.json \"$.index[*][?(@.name=='longest')].inner.generics.params[0].name\"  \\\"\\'a\\\"\n+// @is - \"$.index[*][?(@.name=='longest')].inner.generics.params[0].kind\"  '{\"lifetime\": {\"outlives\": []}}'\n+// @is - \"$.index[*][?(@.name=='longest')].inner.generics.params[0].kind\"  '{\"lifetime\": {\"outlives\": []}}'\n+// @count - \"$.index[*][?(@.name=='longest')].inner.generics.params[*]\" 1\n+// @is - \"$.index[*][?(@.name=='longest')].inner.generics.where_predicates\" []\n+\n+// @count - \"$.index[*][?(@.name=='longest')].inner.decl.inputs[*]\" 2\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.inputs[0][0]\" '\"l\"'\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.inputs[1][0]\" '\"r\"'\n+\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.inputs[0][1].kind\" '\"borrowed_ref\"'\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.inputs[0][1].inner.lifetime\" \\\"\\'a\\\"\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.inputs[0][1].inner.mutable\" false\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.inputs[0][1].inner.type\" '{\"inner\": \"str\", \"kind\": \"primitive\"}'\n+\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.inputs[1][1].kind\" '\"borrowed_ref\"'\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.inputs[1][1].inner.lifetime\" \\\"\\'a\\\"\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.inputs[1][1].inner.mutable\" false\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.inputs[1][1].inner.type\" '{\"inner\": \"str\", \"kind\": \"primitive\"}'\n+\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.output.kind\" '\"borrowed_ref\"'\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.output.inner.lifetime\" \\\"\\'a\\\"\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.output.inner.mutable\" false\n+// @is - \"$.index[*][?(@.name=='longest')].inner.decl.output.inner.type\" '{\"inner\": \"str\", \"kind\": \"primitive\"}'\n+\n+pub fn longest<'a>(l: &'a str, r: &'a str) -> &'a str {\n+    if l.len() > r.len() { l } else { r }\n+}"}, {"sha": "096dd7f7a6918814ee8c66bf40795871d47f507c", "filename": "src/test/rustdoc-json/lifetime/outlives.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/26829c03b0689c53e09e5bdfc329de78e95791f4/src%2Ftest%2Frustdoc-json%2Flifetime%2Foutlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26829c03b0689c53e09e5bdfc329de78e95791f4/src%2Ftest%2Frustdoc-json%2Flifetime%2Foutlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Flifetime%2Foutlives.rs?ref=26829c03b0689c53e09e5bdfc329de78e95791f4", "patch": "@@ -0,0 +1,23 @@\n+// ignore-tidy-linelength\n+\n+#![feature(no_core)]\n+#![no_core]\n+\n+// @count outlives.json \"$.index[*][?(@.name=='foo')].inner.generics.params[*]\" 3\n+// @is - \"$.index[*][?(@.name=='foo')].inner.generics.where_predicates\" []\n+// @is - \"$.index[*][?(@.name=='foo')].inner.generics.params[0].name\" \\\"\\'a\\\"\n+// @is - \"$.index[*][?(@.name=='foo')].inner.generics.params[1].name\" \\\"\\'b\\\"\n+// @is - \"$.index[*][?(@.name=='foo')].inner.generics.params[2].name\" '\"T\"'\n+// @is - \"$.index[*][?(@.name=='foo')].inner.generics.params[0].kind.lifetime.outlives\" []\n+// @is - \"$.index[*][?(@.name=='foo')].inner.generics.params[1].kind.lifetime.outlives\" [\\\"\\'a\\\"]\n+// @is - \"$.index[*][?(@.name=='foo')].inner.generics.params[2].kind.type.default\" null\n+// @count - \"$.index[*][?(@.name=='foo')].inner.generics.params[2].kind.type.bounds[*]\" 1\n+// @is - \"$.index[*][?(@.name=='foo')].inner.generics.params[2].kind.type.bounds[0].outlives\" \\\"\\'b\\\"\n+// @is - \"$.index[*][?(@.name=='foo')].inner.decl.inputs[0][1].kind\" '\"borrowed_ref\"'\n+// @is - \"$.index[*][?(@.name=='foo')].inner.decl.inputs[0][1].inner.lifetime\" \\\"\\'a\\\"\n+// @is - \"$.index[*][?(@.name=='foo')].inner.decl.inputs[0][1].inner.mutable\" false\n+// @is - \"$.index[*][?(@.name=='foo')].inner.decl.inputs[0][1].inner.type.kind\" '\"borrowed_ref\"'\n+// @is - \"$.index[*][?(@.name=='foo')].inner.decl.inputs[0][1].inner.type.inner.lifetime\" \\\"\\'b\\\"\n+// @is - \"$.index[*][?(@.name=='foo')].inner.decl.inputs[0][1].inner.type.inner.mutable\" false\n+// @is - \"$.index[*][?(@.name=='foo')].inner.decl.inputs[0][1].inner.type.inner.type\" '{\"inner\": \"T\", \"kind\": \"generic\"}'\n+pub fn foo<'a, 'b: 'a, T: 'b>(_: &'a &'b T) {}"}]}