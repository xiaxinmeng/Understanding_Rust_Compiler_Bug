{"sha": "3ee6f6e28a8d843df28b29bb70dd3dbb2267e39c", "node_id": "C_kwDOAAsO6NoAKDNlZTZmNmUyOGE4ZDg0M2RmMjhiMjliYjcwZGQzZGJiMjI2N2UzOWM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-08T20:51:27Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-12T17:52:34Z"}, "message": "Do not record Res when builing a suggestion.", "tree": {"sha": "869b054e9add1c9ebedfb49b34267c55679a3ca9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/869b054e9add1c9ebedfb49b34267c55679a3ca9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ee6f6e28a8d843df28b29bb70dd3dbb2267e39c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ee6f6e28a8d843df28b29bb70dd3dbb2267e39c", "html_url": "https://github.com/rust-lang/rust/commit/3ee6f6e28a8d843df28b29bb70dd3dbb2267e39c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ee6f6e28a8d843df28b29bb70dd3dbb2267e39c/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55ca03c0ac840d6f4f30f61bc381b02ca095b899", "url": "https://api.github.com/repos/rust-lang/rust/commits/55ca03c0ac840d6f4f30f61bc381b02ca095b899", "html_url": "https://github.com/rust-lang/rust/commit/55ca03c0ac840d6f4f30f61bc381b02ca095b899"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "2507bc30019e4f80e0f9f2357ce9865b8fe68a11", "filename": "compiler/rustc_resolve/src/ident.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3ee6f6e28a8d843df28b29bb70dd3dbb2267e39c/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ee6f6e28a8d843df28b29bb70dd3dbb2267e39c/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fident.rs?ref=3ee6f6e28a8d843df28b29bb70dd3dbb2267e39c", "patch": "@@ -1459,7 +1459,7 @@ impl<'a> Resolver<'a> {\n \n             enum FindBindingResult<'a> {\n                 Binding(Result<&'a NameBinding<'a>, Determinacy>),\n-                PathResult(PathResult<'a>),\n+                Res(Res),\n             }\n             let find_binding_in_ns = |this: &mut Self, ns| {\n                 let binding = if let Some(module) = module {\n@@ -1498,18 +1498,21 @@ impl<'a> Resolver<'a> {\n                         Some(LexicalScopeBinding::Res(res))\n                             if opt_ns == Some(TypeNS) || opt_ns == Some(ValueNS) =>\n                         {\n-                            record_segment_res(this, res);\n-                            return FindBindingResult::PathResult(PathResult::NonModule(\n-                                PartialRes::with_unresolved_segments(res, path.len() - 1),\n-                            ));\n+                            return FindBindingResult::Res(res);\n                         }\n                         _ => Err(Determinacy::determined(finalize.is_some())),\n                     }\n                 };\n                 FindBindingResult::Binding(binding)\n             };\n             let binding = match find_binding_in_ns(self, ns) {\n-                FindBindingResult::PathResult(x) => return x,\n+                FindBindingResult::Res(res) => {\n+                    record_segment_res(self, res);\n+                    return PathResult::NonModule(PartialRes::with_unresolved_segments(\n+                        res,\n+                        path.len() - 1,\n+                    ));\n+                }\n                 FindBindingResult::Binding(binding) => binding,\n             };\n             match binding {"}]}