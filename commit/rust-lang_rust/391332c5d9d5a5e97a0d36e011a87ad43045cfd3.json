{"sha": "391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "node_id": "C_kwDOAAsO6NoAKDM5MTMzMmM1ZDlkNWE1ZTk3YTBkMzZlMDExYTg3YWQ0MzA0NWNmZDM", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-12-17T20:56:38Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-12-17T20:56:38Z"}, "message": "Rename `has_elf_tls` to `has_thread_local`", "tree": {"sha": "00be5b6532db041c8a762e0b52d262642a292f8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00be5b6532db041c8a762e0b52d262642a292f8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmG8+YYACgkQcTRy8vRW\nJ953BQ/+JquUIkJpXFKzFoyB92AWsvzXevRUaXB2Cf2i0mHoyI0E5KqQTVSLQRXf\nlBF8mS0uL89+E9pU0jyVc9Zpj4G6XSJijLZNpnc/q5hE3xeNhUpoEWpji43a+NtI\n4fkbCbz/Hkyo4wQGeS7xXqPxfrnpD8G9KEiKSlnvgX21mRfY/6SpBLjxv4LY9IXN\nGykjenf30pw2zLpOvB5cFKe4SROz2UPTouSwKpv9H/tWT7Hn2Vs4TEYuJPUS5HX5\nztz0eqOM9zDkfORm4kCrW2njZJ7auun+30rQa5TfU1KIpuQyC64NLuVkLYpgdohT\njqWsf13TLGERGpVVNdd/BdD0qWyAbIoxZXXBYr5hhsPdLW3VbLExp/fwxmvVC4r4\nu2bt1foTJpu1BfZDD6GYDs0jH3p0eTQdjEpIwMCbMMCIXWYAFaXSq9Ww3xtPbgSL\nAsgQSAD+tqGTNKTPMjOZl1kvnLh3HSZ+5TrgJ/OcsrAt1HSWI/wOlhFfsYjyvmQZ\n8apWYsRRZp+5nTWHmgYiNzJ01/JWrIjqPFeNvgsm3JToGnJ3k7h7X52h9q3EuQIn\nl8C5kGBBhdl+OkBqhViUUFvt+R9WYBjNrIUFMU9wQcX7Dy2UfcAFyW4qNS+Yi65x\nHJLTfLvRaHfMCWgn6sLkoYe0S9wY4t65F6kQFBHWDEV95pc+RIw=\n=9ZNJ\n-----END PGP SIGNATURE-----", "payload": "tree 00be5b6532db041c8a762e0b52d262642a292f8d\nparent 9ca26f111aeb8fc9b6de59ea0e94857f062cc0de\nauthor Chris Denton <christophersdenton@gmail.com> 1639774598 +0000\ncommitter Chris Denton <christophersdenton@gmail.com> 1639774598 +0000\n\nRename `has_elf_tls` to `has_thread_local`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "html_url": "https://github.com/rust-lang/rust/commit/391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ca26f111aeb8fc9b6de59ea0e94857f062cc0de", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ca26f111aeb8fc9b6de59ea0e94857f062cc0de", "html_url": "https://github.com/rust-lang/rust/commit/9ca26f111aeb8fc9b6de59ea0e94857f062cc0de"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "de5ff231d6171659d562374cbb9285458b24f3eb", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -880,7 +880,7 @@ fn default_configuration(sess: &Session) -> CrateConfig {\n     ret.insert((sym::target_env, Some(Symbol::intern(env))));\n     ret.insert((sym::target_abi, Some(Symbol::intern(abi))));\n     ret.insert((sym::target_vendor, Some(Symbol::intern(vendor))));\n-    if sess.target.has_elf_tls {\n+    if sess.target.has_thread_local {\n         ret.insert((sym::target_thread_local, None));\n     }\n     for (i, align) in ["}, {"sha": "e982b3565b56c521a5607f1d6ec5a8725922a892", "filename": "compiler/rustc_target/src/spec/android_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -11,7 +11,7 @@ pub fn opts() -> TargetOptions {\n         .push(\"-Wl,--allow-multiple-definition\".to_string());\n     base.dwarf_version = Some(2);\n     base.position_independent_executables = true;\n-    base.has_elf_tls = false;\n+    base.has_thread_local = false;\n     // This is for backward compatibility, see https://github.com/rust-lang/rust/issues/49867\n     // for context. (At that time, there was no `-C force-unwind-tables`, so the only solution\n     // was to always emit `uwtable`)."}, {"sha": "a4488f695f2103bcbf498c33b079d476ca3d9929", "filename": "compiler/rustc_target/src/spec/apple_base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -16,7 +16,7 @@ pub fn opts(os: &str) -> TargetOptions {\n     // TLS is flagged as enabled if it looks to be supported. The architecture\n     // only matters for default deployment target which is 11.0 for ARM64 and\n     // 10.7 for everything else.\n-    let has_elf_tls = macos_deployment_target(\"x86_64\") >= (10, 7);\n+    let has_thread_local = macos_deployment_target(\"x86_64\") >= (10, 7);\n \n     TargetOptions {\n         os: os.to_string(),\n@@ -33,7 +33,7 @@ pub fn opts(os: &str) -> TargetOptions {\n         has_rpath: true,\n         dll_suffix: \".dylib\".to_string(),\n         archive_format: \"darwin\".to_string(),\n-        has_elf_tls,\n+        has_thread_local,\n         abi_return_struct_as_int: true,\n         emit_debug_gdb_scripts: false,\n         eh_frame_header: false,"}, {"sha": "874e9b56aaa1ef8841de8a792bc48d43ee72cad9", "filename": "compiler/rustc_target/src/spec/apple_sdk_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_sdk_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_sdk_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_sdk_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -53,7 +53,7 @@ pub fn opts(os: &str, arch: Arch) -> TargetOptions {\n         dynamic_linking: false,\n         executables: true,\n         link_env_remove: link_env_remove(arch),\n-        has_elf_tls: false,\n+        has_thread_local: false,\n         ..super::apple_base::opts(os)\n     }\n }"}, {"sha": "4a7686ae1a1e477e2dd91b6d47aed1e24bc16741", "filename": "compiler/rustc_target/src/spec/fuchsia_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffuchsia_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffuchsia_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffuchsia_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -35,7 +35,7 @@ pub fn opts() -> TargetOptions {\n             (LinkOutputKind::StaticPicExe, &[\"Scrt1.o\"]),\n         ]),\n         position_independent_executables: true,\n-        has_elf_tls: true,\n+        has_thread_local: true,\n         ..Default::default()\n     }\n }"}, {"sha": "b0b1d80ab37fc009f8f13269532f0fbfc53f858b", "filename": "compiler/rustc_target/src/spec/hermit_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -12,7 +12,7 @@ pub fn opts() -> TargetOptions {\n         linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n         linker: Some(\"rust-lld\".to_owned()),\n         executables: true,\n-        has_elf_tls: true,\n+        has_thread_local: true,\n         pre_link_args,\n         panic_strategy: PanicStrategy::Abort,\n         position_independent_executables: true,"}, {"sha": "aeb40f7712ee3dc4fd8569c69a9ac03740c6f61d", "filename": "compiler/rustc_target/src/spec/illumos_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fillumos_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fillumos_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fillumos_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -45,7 +45,7 @@ pub fn opts() -> TargetOptions {\n         // (see src/libstd/sys/unix/fast_thread_local.rs) that is currently\n         // missing in illumos.  For now at least, we must fallback to using\n         // pthread_{get,set}specific.\n-        //has_elf_tls: true,\n+        //has_thread_local: true,\n \n         // FIXME: Currently, rust is invoking cc to link, which ends up\n         // causing these to get included twice.  We should eventually transition"}, {"sha": "e53d465e20dfdb88e054b65a99f258c8bb39cc9f", "filename": "compiler/rustc_target/src/spec/linux_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -9,7 +9,7 @@ pub fn opts() -> TargetOptions {\n         has_rpath: true,\n         position_independent_executables: true,\n         relro_level: RelroLevel::Full,\n-        has_elf_tls: true,\n+        has_thread_local: true,\n         crt_static_respected: true,\n         ..Default::default()\n     }"}, {"sha": "43913183694e0c41d6ef80f1bf05683ab6c36ea8", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -1279,9 +1279,8 @@ pub struct TargetOptions {\n     /// `argc` and `argv` values.\n     pub main_needs_argc_argv: bool,\n \n-    /// Flag indicating whether ELF TLS (e.g., #[thread_local]) is available for\n-    /// this target.\n-    pub has_elf_tls: bool,\n+    /// Flag indicating whether #[thread_local] is available for this target.\n+    pub has_thread_local: bool,\n     // This is mainly for easy compatibility with emscripten.\n     // If we give emcc .o files that are actually .bc files it\n     // will 'just work'.\n@@ -1487,7 +1486,7 @@ impl Default for TargetOptions {\n             archive_format: \"gnu\".to_string(),\n             main_needs_argc_argv: true,\n             allow_asm: true,\n-            has_elf_tls: false,\n+            has_thread_local: false,\n             obj_is_bitcode: false,\n             forces_embed_bitcode: false,\n             bitcode_llvm_cmdline: String::new(),\n@@ -2074,7 +2073,7 @@ impl Target {\n         key!(archive_format);\n         key!(allow_asm, bool);\n         key!(main_needs_argc_argv, bool);\n-        key!(has_elf_tls, bool);\n+        key!(has_thread_local, bool);\n         key!(obj_is_bitcode, bool);\n         key!(forces_embed_bitcode, bool);\n         key!(bitcode_llvm_cmdline);\n@@ -2315,7 +2314,7 @@ impl ToJson for Target {\n         target_option_val!(archive_format);\n         target_option_val!(allow_asm);\n         target_option_val!(main_needs_argc_argv);\n-        target_option_val!(has_elf_tls);\n+        target_option_val!(has_thread_local);\n         target_option_val!(obj_is_bitcode);\n         target_option_val!(forces_embed_bitcode);\n         target_option_val!(bitcode_llvm_cmdline);"}, {"sha": "bcb536b37a17e35f5314e7575f971905f23181ab", "filename": "compiler/rustc_target/src/spec/redox_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fredox_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fredox_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fredox_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -10,7 +10,7 @@ pub fn opts() -> TargetOptions {\n         has_rpath: true,\n         position_independent_executables: true,\n         relro_level: RelroLevel::Full,\n-        has_elf_tls: true,\n+        has_thread_local: true,\n         crt_static_default: true,\n         crt_static_respected: true,\n         ..Default::default()"}, {"sha": "421cfc401127de66b94e25b417fb76662c7fe0d8", "filename": "compiler/rustc_target/src/spec/solid_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsolid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsolid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsolid_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -6,7 +6,7 @@ pub fn opts(kernel: &str) -> TargetOptions {\n         os: format!(\"solid_{}\", kernel),\n         vendor: \"kmc\".to_string(),\n         frame_pointer: FramePointer::NonLeaf,\n-        has_elf_tls: true,\n+        has_thread_local: true,\n         ..Default::default()\n     }\n }"}, {"sha": "3f709e7023469c6db4c3c98ba1e0839649268333", "filename": "compiler/rustc_target/src/spec/vxworks_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fvxworks_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fvxworks_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fvxworks_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -11,7 +11,7 @@ pub fn opts() -> TargetOptions {\n         executables: true,\n         families: vec![\"unix\".to_string()],\n         has_rpath: true,\n-        has_elf_tls: true,\n+        has_thread_local: true,\n         crt_static_default: true,\n         crt_static_respected: true,\n         crt_static_allows_dylibs: true,"}, {"sha": "71aa279144bb943433a09154351071b0e4f58c0b", "filename": "compiler/rustc_target/src/spec/wasm_base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -120,9 +120,9 @@ pub fn options() -> TargetOptions {\n         // When the atomics feature is activated then these two keys matter,\n         // otherwise they're basically ignored by the standard library. In this\n         // mode, however, the `#[thread_local]` attribute works (i.e.\n-        // `has_elf_tls`) and we need to get it to work by specifying\n+        // `has_thread_local`) and we need to get it to work by specifying\n         // `local-exec` as that's all that's implemented in LLVM today for wasm.\n-        has_elf_tls: true,\n+        has_thread_local: true,\n         tls_model: TlsModel::LocalExec,\n \n         // gdb scripts don't work on wasm blobs"}, {"sha": "063b6538d95eef091133ad09d27df1e178e04b60", "filename": "compiler/rustc_target/src/spec/windows_msvc_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_msvc_base.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -27,7 +27,7 @@ pub fn opts() -> TargetOptions {\n         // linking some libraries which require a specific agreement, so it may\n         // not ever be possible for us to pass this flag.\n         no_default_libraries: false,\n-        has_elf_tls: true,\n+        has_thread_local: true,\n \n         ..base\n     }"}, {"sha": "109f86d3a410ab6f47d453e25384543758743ee0", "filename": "compiler/rustc_target/src/spec/x86_64_unknown_linux_gnux32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_linux_gnux32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391332c5d9d5a5e97a0d36e011a87ad43045cfd3/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_linux_gnux32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_linux_gnux32.rs?ref=391332c5d9d5a5e97a0d36e011a87ad43045cfd3", "patch": "@@ -8,7 +8,7 @@ pub fn target() -> Target {\n     base.pre_link_args.entry(LinkerFlavor::Gcc).or_default().push(\"-mx32\".to_string());\n     // don't use probe-stack=inline-asm until rust#83139 and rust#84667 are resolved\n     base.stack_probes = StackProbeType::Call;\n-    base.has_elf_tls = false;\n+    base.has_thread_local = false;\n     // BUG(GabrielMajeri): disabling the PLT on x86_64 Linux with x32 ABI\n     // breaks code gen. See LLVM bug 36743\n     base.needs_plt = true;"}]}