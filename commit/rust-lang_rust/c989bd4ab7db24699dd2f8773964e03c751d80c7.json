{"sha": "c989bd4ab7db24699dd2f8773964e03c751d80c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ODliZDRhYjdkYjI0Njk5ZGQyZjg3NzM5NjRlMDNjNzUxZDgwYzc=", "commit": {"author": {"name": "Matt Roche", "email": "angst7@gmail.com", "date": "2015-01-11T18:55:23Z"}, "committer": {"name": "Matt Roche", "email": "angst7@gmail.com", "date": "2015-01-11T18:55:23Z"}, "message": "replace deprecated uint references with u32\n\nReplaced uint references with u32 to prevent compiler warnings.", "tree": {"sha": "aac15761bbba5de5c9f3f99085447745e3d07b65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aac15761bbba5de5c9f3f99085447745e3d07b65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c989bd4ab7db24699dd2f8773964e03c751d80c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c989bd4ab7db24699dd2f8773964e03c751d80c7", "html_url": "https://github.com/rust-lang/rust/commit/c989bd4ab7db24699dd2f8773964e03c751d80c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c989bd4ab7db24699dd2f8773964e03c751d80c7/comments", "author": {"login": "angst7", "id": 228315, "node_id": "MDQ6VXNlcjIyODMxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/228315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angst7", "html_url": "https://github.com/angst7", "followers_url": "https://api.github.com/users/angst7/followers", "following_url": "https://api.github.com/users/angst7/following{/other_user}", "gists_url": "https://api.github.com/users/angst7/gists{/gist_id}", "starred_url": "https://api.github.com/users/angst7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angst7/subscriptions", "organizations_url": "https://api.github.com/users/angst7/orgs", "repos_url": "https://api.github.com/users/angst7/repos", "events_url": "https://api.github.com/users/angst7/events{/privacy}", "received_events_url": "https://api.github.com/users/angst7/received_events", "type": "User", "site_admin": false}, "committer": {"login": "angst7", "id": 228315, "node_id": "MDQ6VXNlcjIyODMxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/228315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angst7", "html_url": "https://github.com/angst7", "followers_url": "https://api.github.com/users/angst7/followers", "following_url": "https://api.github.com/users/angst7/following{/other_user}", "gists_url": "https://api.github.com/users/angst7/gists{/gist_id}", "starred_url": "https://api.github.com/users/angst7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angst7/subscriptions", "organizations_url": "https://api.github.com/users/angst7/orgs", "repos_url": "https://api.github.com/users/angst7/repos", "events_url": "https://api.github.com/users/angst7/events{/privacy}", "received_events_url": "https://api.github.com/users/angst7/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2127e0d56d85ff48aafce90ab762650e46370b63", "url": "https://api.github.com/repos/rust-lang/rust/commits/2127e0d56d85ff48aafce90ab762650e46370b63", "html_url": "https://github.com/rust-lang/rust/commit/2127e0d56d85ff48aafce90ab762650e46370b63"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c4d9c1ca74c14abab12fcf39311bd571a363b254", "filename": "src/doc/trpl/looping.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c989bd4ab7db24699dd2f8773964e03c751d80c7/src%2Fdoc%2Ftrpl%2Flooping.md", "raw_url": "https://github.com/rust-lang/rust/raw/c989bd4ab7db24699dd2f8773964e03c751d80c7/src%2Fdoc%2Ftrpl%2Flooping.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Flooping.md?ref=c989bd4ab7db24699dd2f8773964e03c751d80c7", "patch": "@@ -54,7 +54,7 @@ The other kind of looping construct in Rust is the `while` loop. It looks like\n this:\n \n ```{rust}\n-let mut x = 5u;       // mut x: uint\n+let mut x = 5u32;       // mut x: u32\n let mut done = false; // mut done: bool\n \n while !done {\n@@ -91,7 +91,7 @@ can do with safety and code generation, so you should always prefer\n Let's take a look at that `while` loop we had earlier:\n \n ```{rust}\n-let mut x = 5u;\n+let mut x = 5u32;\n let mut done = false;\n \n while !done {\n@@ -108,7 +108,7 @@ modifying iteration: `break` and `continue`.\n In this case, we can write the loop in a better way with `break`:\n \n ```{rust}\n-let mut x = 5u;\n+let mut x = 5u32;\n \n loop {\n     x += x - 3;"}]}