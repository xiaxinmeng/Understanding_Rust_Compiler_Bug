{"sha": "ad9184c9bfd47e1be43726c7f68fa8a4f879cb94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkOTE4NGM5YmZkNDdlMWJlNDM3MjZjN2Y2OGZhOGE0Zjg3OWNiOTQ=", "commit": {"author": {"name": "Ross Schulman", "email": "ross@rbs.io", "date": "2016-09-05T23:56:48Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-30T21:02:43Z"}, "message": "Adapting bootstrap to run tests on asmjs.", "tree": {"sha": "73572a73a3cfe9a9cf8c6c4535aa3650969471ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73572a73a3cfe9a9cf8c6c4535aa3650969471ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad9184c9bfd47e1be43726c7f68fa8a4f879cb94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad9184c9bfd47e1be43726c7f68fa8a4f879cb94", "html_url": "https://github.com/rust-lang/rust/commit/ad9184c9bfd47e1be43726c7f68fa8a4f879cb94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad9184c9bfd47e1be43726c7f68fa8a4f879cb94/comments", "author": {"login": "rschulman", "id": 1304536, "node_id": "MDQ6VXNlcjEzMDQ1MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1304536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rschulman", "html_url": "https://github.com/rschulman", "followers_url": "https://api.github.com/users/rschulman/followers", "following_url": "https://api.github.com/users/rschulman/following{/other_user}", "gists_url": "https://api.github.com/users/rschulman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rschulman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rschulman/subscriptions", "organizations_url": "https://api.github.com/users/rschulman/orgs", "repos_url": "https://api.github.com/users/rschulman/repos", "events_url": "https://api.github.com/users/rschulman/events{/privacy}", "received_events_url": "https://api.github.com/users/rschulman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c62d8b12bf68ea09a9a588b58da89e7925de21b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c62d8b12bf68ea09a9a588b58da89e7925de21b1", "html_url": "https://github.com/rust-lang/rust/commit/c62d8b12bf68ea09a9a588b58da89e7925de21b1"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "8a844f710313f0d15454bcdee66c4d4a18069b59", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ad9184c9bfd47e1be43726c7f68fa8a4f879cb94/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad9184c9bfd47e1be43726c7f68fa8a4f879cb94/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=ad9184c9bfd47e1be43726c7f68fa8a4f879cb94", "patch": "@@ -323,6 +323,9 @@ pub fn krate(build: &Build,\n     if target.contains(\"android\") {\n         build.run(cargo.arg(\"--no-run\"));\n         krate_android(build, compiler, target, mode);\n+    } else if target.contains(\"asmjs\") {\n+        build.run(cargo.arg(\"--no-run\"));\n+        krate_asmjs(build, compiler, target, mode);\n     } else {\n         cargo.args(&build.flags.args);\n         build.run(&mut cargo);\n@@ -371,6 +374,23 @@ fn krate_android(build: &Build,\n     }\n }\n \n+fn krate_asmjs(build: &Build,\n+                 compiler: &Compiler,\n+                 target: &str,\n+                 mode: Mode) {\n+     let mut tests = Vec::new();\n+     let out_dir = build.cargo_out(compiler, mode, target);\n+     find_tests(&out_dir, target, &mut tests);\n+     find_tests(&out_dir.join(\"deps\"), target, &mut tests);\n+\n+     for test in tests {\n+         let test_file_name = test.to_string_lossy().into_owned();\n+         let output = output(Command::new(\"node\").arg(&test_file_name));\n+         println!(\"{}\", output);\n+     }\n+ }\n+\n+\n fn find_tests(dir: &Path,\n               target: &str,\n               dst: &mut Vec<PathBuf>) {\n@@ -381,7 +401,8 @@ fn find_tests(dir: &Path,\n         }\n         let filename = e.file_name().into_string().unwrap();\n         if (target.contains(\"windows\") && filename.ends_with(\".exe\")) ||\n-           (!target.contains(\"windows\") && !filename.contains(\".\")) {\n+           (!target.contains(\"windows\") && !filename.contains(\".\")) ||\n+           (target.contains(\"asmjs\") && filename.contains(\".js\")){\n             dst.push(e.path());\n         }\n     }"}]}