{"sha": "4363e7b9b2de715b0108b53d40eb33ed2fcc8532", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNjNlN2I5YjJkZTcxNWIwMTA4YjUzZDQwZWIzM2VkMmZjYzg1MzI=", "commit": {"author": {"name": "Hirokazu Hata", "email": "h.hata.ai.t@gmail.com", "date": "2019-01-03T09:48:03Z"}, "committer": {"name": "Hirokazu Hata", "email": "h.hata.ai.t@gmail.com", "date": "2019-01-03T10:04:42Z"}, "message": "Deive type_of test from tests", "tree": {"sha": "9c071d46ac14d4fdc8d4a51d465f4b29221e146e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c071d46ac14d4fdc8d4a51d465f4b29221e146e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4363e7b9b2de715b0108b53d40eb33ed2fcc8532", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4363e7b9b2de715b0108b53d40eb33ed2fcc8532", "html_url": "https://github.com/rust-lang/rust/commit/4363e7b9b2de715b0108b53d40eb33ed2fcc8532", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4363e7b9b2de715b0108b53d40eb33ed2fcc8532/comments", "author": {"login": "h-michael", "id": 4556097, "node_id": "MDQ6VXNlcjQ1NTYwOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4556097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h-michael", "html_url": "https://github.com/h-michael", "followers_url": "https://api.github.com/users/h-michael/followers", "following_url": "https://api.github.com/users/h-michael/following{/other_user}", "gists_url": "https://api.github.com/users/h-michael/gists{/gist_id}", "starred_url": "https://api.github.com/users/h-michael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h-michael/subscriptions", "organizations_url": "https://api.github.com/users/h-michael/orgs", "repos_url": "https://api.github.com/users/h-michael/repos", "events_url": "https://api.github.com/users/h-michael/events{/privacy}", "received_events_url": "https://api.github.com/users/h-michael/received_events", "type": "User", "site_admin": false}, "committer": {"login": "h-michael", "id": 4556097, "node_id": "MDQ6VXNlcjQ1NTYwOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4556097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h-michael", "html_url": "https://github.com/h-michael", "followers_url": "https://api.github.com/users/h-michael/followers", "following_url": "https://api.github.com/users/h-michael/following{/other_user}", "gists_url": "https://api.github.com/users/h-michael/gists{/gist_id}", "starred_url": "https://api.github.com/users/h-michael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h-michael/subscriptions", "organizations_url": "https://api.github.com/users/h-michael/orgs", "repos_url": "https://api.github.com/users/h-michael/repos", "events_url": "https://api.github.com/users/h-michael/events{/privacy}", "received_events_url": "https://api.github.com/users/h-michael/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f99e96698c81a731842ef21ae564470a7d391046", "url": "https://api.github.com/repos/rust-lang/rust/commits/f99e96698c81a731842ef21ae564470a7d391046", "html_url": "https://github.com/rust-lang/rust/commit/f99e96698c81a731842ef21ae564470a7d391046"}], "stats": {"total": 97, "additions": 80, "deletions": 17}, "files": [{"sha": "3045c2e781fe657bbd8d26c58cacb607b154035c", "filename": "crates/ra_analysis/tests/tests.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4363e7b9b2de715b0108b53d40eb33ed2fcc8532/crates%2Fra_analysis%2Ftests%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4363e7b9b2de715b0108b53d40eb33ed2fcc8532/crates%2Fra_analysis%2Ftests%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Ftests%2Ftests.rs?ref=4363e7b9b2de715b0108b53d40eb33ed2fcc8532", "patch": "@@ -2,30 +2,14 @@ use ra_syntax::TextRange;\n use test_utils::{assert_eq_dbg, assert_eq_text};\n \n use ra_analysis::{\n-    mock_analysis::{analysis_and_position, analysis_and_range, single_file, single_file_with_position, MockAnalysis},\n+    mock_analysis::{analysis_and_position, single_file, single_file_with_position, MockAnalysis},\n     AnalysisChange, CrateGraph, FileId, FnSignatureInfo,\n };\n \n fn get_signature(text: &str) -> (FnSignatureInfo, Option<usize>) {\n     let (analysis, position) = single_file_with_position(text);\n     analysis.resolve_callable(position).unwrap().unwrap()\n }\n-#[test]\n-fn test_type_of() {\n-    let (analysis, range) = analysis_and_range(\n-        \"\n-        //- /lib.rs\n-        pub fn foo() -> u32 {\n-            1\n-        };\n-\n-        let <|>foo_test<|> = foo();\n-    \",\n-    );\n-\n-    let type_name = analysis.type_of(range).unwrap().unwrap();\n-    assert_eq_dbg(\"u32\", &type_name);\n-}\n \n #[test]\n fn approximate_resolve_works_in_items() {"}, {"sha": "375f808bb94f72c9d866f2dc940333128fe2f74d", "filename": "crates/ra_analysis/tests/type_of.rs", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/4363e7b9b2de715b0108b53d40eb33ed2fcc8532/crates%2Fra_analysis%2Ftests%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4363e7b9b2de715b0108b53d40eb33ed2fcc8532/crates%2Fra_analysis%2Ftests%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Ftests%2Ftype_of.rs?ref=4363e7b9b2de715b0108b53d40eb33ed2fcc8532", "patch": "@@ -0,0 +1,79 @@\n+use ra_analysis::{\n+    mock_analysis::{single_file_with_range},\n+};\n+\n+#[test]\n+fn test_type_of_for_function() {\n+    let (analysis, range) = single_file_with_range(\n+        \"\n+        pub fn foo() -> u32 { 1 };\n+\n+        fn main() {\n+            let foo_test = <|>foo()<|>;\n+        }\n+        \",\n+    );\n+\n+    let type_name = analysis.type_of(range).unwrap().unwrap();\n+    assert_eq!(\"u32\", &type_name);\n+}\n+\n+// FIXME: improve type_of to make this work\n+#[test]\n+fn test_type_of_for_num() {\n+    let (analysis, range) = single_file_with_range(\n+        r#\"\n+        fn main() {\n+            let foo_test = <|>\"foo\"<|>;\n+        }\n+        \"#,\n+    );\n+\n+    assert!(analysis.type_of(range).unwrap().is_none());\n+}\n+// FIXME: improve type_of to make this work\n+#[test]\n+fn test_type_of_for_binding() {\n+    let (analysis, range) = single_file_with_range(\n+        \"\n+        pub fn foo() -> u32 { 1 };\n+\n+        fn main() {\n+            let <|>foo_test<|> = foo();\n+        }\n+        \",\n+    );\n+\n+    assert!(analysis.type_of(range).unwrap().is_none());\n+}\n+\n+// FIXME: improve type_of to make this work\n+#[test]\n+fn test_type_of_for_expr_1() {\n+    let (analysis, range) = single_file_with_range(\n+        \"\n+        fn main() {\n+            let foo = <|>1 + foo_test<|>;\n+        }\n+        \",\n+    );\n+\n+    let type_name = analysis.type_of(range).unwrap().unwrap();\n+    assert_eq!(\"[unknown]\", &type_name);\n+}\n+\n+// FIXME: improve type_of to make this work\n+#[test]\n+fn test_type_of_for_expr_2() {\n+    let (analysis, range) = single_file_with_range(\n+        \"\n+        fn main() {\n+            let foo: usize = 1;\n+            let bar = <|>1 + foo_test<|>;\n+        }\n+        \",\n+    );\n+\n+    let type_name = analysis.type_of(range).unwrap().unwrap();\n+    assert_eq!(\"[unknown]\", &type_name);\n+}"}]}