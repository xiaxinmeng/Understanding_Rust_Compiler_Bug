{"sha": "9a6a8668ae80351d9f3547771c0e8ffc325fc577", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNmE4NjY4YWU4MDM1MWQ5ZjM1NDc3NzFjMGU4ZmZjMzI1ZmM1Nzc=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-20T03:44:41Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-28T13:47:14Z"}, "message": "Remove visit_body from YieldFinder", "tree": {"sha": "7dcfc66bb7248d653e5080c76f7a9052697ba4b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7dcfc66bb7248d653e5080c76f7a9052697ba4b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a6a8668ae80351d9f3547771c0e8ffc325fc577", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a6a8668ae80351d9f3547771c0e8ffc325fc577", "html_url": "https://github.com/rust-lang/rust/commit/9a6a8668ae80351d9f3547771c0e8ffc325fc577", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a6a8668ae80351d9f3547771c0e8ffc325fc577/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5da9a8aa19c536c60a79145792926e23fcfb35a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5da9a8aa19c536c60a79145792926e23fcfb35a3", "html_url": "https://github.com/rust-lang/rust/commit/5da9a8aa19c536c60a79145792926e23fcfb35a3"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "63a9731e546ac2dd7c256865591a20a790e35886", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a6a8668ae80351d9f3547771c0e8ffc325fc577/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a6a8668ae80351d9f3547771c0e8ffc325fc577/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=9a6a8668ae80351d9f3547771c0e8ffc325fc577", "patch": "@@ -1150,10 +1150,6 @@ impl<'tcx> Visitor<'tcx> for YieldFinder {\n         NestedVisitorMap::None\n     }\n \n-    fn visit_body(&mut self, _body: &'tcx hir::Body) {\n-        // Closures don't execute\n-    }\n-\n     fn visit_expr(&mut self, expr: &'tcx hir::Expr) {\n         if let hir::ExprYield(..) = expr.node {\n             if self.0.is_none() {"}]}