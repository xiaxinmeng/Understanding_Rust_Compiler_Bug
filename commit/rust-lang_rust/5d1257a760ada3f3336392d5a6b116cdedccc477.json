{"sha": "5d1257a760ada3f3336392d5a6b116cdedccc477", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMTI1N2E3NjBhZGEzZjMzMzYzOTJkNWE2YjExNmNkZWRjY2M0Nzc=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-12-18T22:17:58Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-12-20T05:28:46Z"}, "message": "rustc: middle: move TraitItemKind from resolve to def.", "tree": {"sha": "682d25eca50ed176b0d00170a4e3644f6e1f32fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/682d25eca50ed176b0d00170a4e3644f6e1f32fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d1257a760ada3f3336392d5a6b116cdedccc477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d1257a760ada3f3336392d5a6b116cdedccc477", "html_url": "https://github.com/rust-lang/rust/commit/5d1257a760ada3f3336392d5a6b116cdedccc477", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d1257a760ada3f3336392d5a6b116cdedccc477/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9504d4a47f9021ae1a6b0bec5617a2cc7ac7c25", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9504d4a47f9021ae1a6b0bec5617a2cc7ac7c25", "html_url": "https://github.com/rust-lang/rust/commit/d9504d4a47f9021ae1a6b0bec5617a2cc7ac7c25"}], "stats": {"total": 53, "additions": 25, "deletions": 28}, "files": [{"sha": "b702f4925d84739983de49941b63a046b620dddb", "filename": "src/librustc/metadata/csearch.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5d1257a760ada3f3336392d5a6b116cdedccc477/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1257a760ada3f3336392d5a6b116cdedccc477/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcsearch.rs?ref=5d1257a760ada3f3336392d5a6b116cdedccc477", "patch": "@@ -19,7 +19,6 @@ use metadata::cstore;\n use metadata::decoder;\n use middle::def;\n use middle::lang_items;\n-use middle::resolve;\n use middle::ty;\n \n use rbml;\n@@ -148,7 +147,7 @@ pub fn get_impl_or_trait_item<'tcx>(tcx: &ty::ctxt<'tcx>, def: ast::DefId)\n }\n \n pub fn get_trait_item_name_and_kind(cstore: &cstore::CStore, def: ast::DefId)\n-                                    -> (ast::Name, resolve::TraitItemKind) {\n+                                    -> (ast::Name, def::TraitItemKind) {\n     let cdata = cstore.get_crate_data(def.krate);\n     decoder::get_trait_item_name_and_kind(cstore.intr.clone(),\n                                           &*cdata,"}, {"sha": "d8168814c6cd0591324f9fadbd96049c063e7140", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5d1257a760ada3f3336392d5a6b116cdedccc477/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1257a760ada3f3336392d5a6b116cdedccc477/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=5d1257a760ada3f3336392d5a6b116cdedccc477", "patch": "@@ -27,7 +27,6 @@ use metadata::tydecode::{parse_ty_data, parse_region_data, parse_def_id,\n                          parse_predicate_data};\n use middle::def;\n use middle::lang_items;\n-use middle::resolve::{TraitItemKind, TypeTraitItemKind};\n use middle::subst;\n use middle::ty::{ImplContainer, TraitContainer};\n use middle::ty::{mod, Ty};\n@@ -785,15 +784,15 @@ pub fn get_impl_items(cdata: Cmd, impl_id: ast::NodeId)\n pub fn get_trait_item_name_and_kind(intr: Rc<IdentInterner>,\n                                     cdata: Cmd,\n                                     id: ast::NodeId)\n-                                    -> (ast::Name, TraitItemKind) {\n+                                    -> (ast::Name, def::TraitItemKind) {\n     let doc = lookup_item(id, cdata.data());\n     let name = item_name(&*intr, doc);\n     match item_sort(doc) {\n         'r' | 'p' => {\n             let explicit_self = get_explicit_self(doc);\n-            (name, TraitItemKind::from_explicit_self_category(explicit_self))\n+            (name, def::TraitItemKind::from_explicit_self_category(explicit_self))\n         }\n-        't' => (name, TypeTraitItemKind),\n+        't' => (name, def::TypeTraitItemKind),\n         c => {\n             panic!(\"get_trait_item_name_and_kind(): unknown trait item kind \\\n                    in metadata: `{}`\", c)"}, {"sha": "a582907612fd5bf5f5b441ea7f12c963c7f49a0f", "filename": "src/librustc/middle/def.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5d1257a760ada3f3336392d5a6b116cdedccc477/src%2Flibrustc%2Fmiddle%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1257a760ada3f3336392d5a6b116cdedccc477/src%2Flibrustc%2Fmiddle%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdef.rs?ref=5d1257a760ada3f3336392d5a6b116cdedccc477", "patch": "@@ -10,8 +10,10 @@\n \n pub use self::Def::*;\n pub use self::MethodProvenance::*;\n+pub use self::TraitItemKind::*;\n \n use middle::subst::ParamSpace;\n+use middle::ty::{ExplicitSelfCategory, StaticExplicitSelfCategory};\n use util::nodemap::NodeMap;\n use syntax::ast;\n use syntax::ast_util::local_def;\n@@ -103,6 +105,25 @@ impl TyParamProvenance {\n     }\n }\n \n+#[deriving(Clone, Copy, Eq, PartialEq)]\n+pub enum TraitItemKind {\n+    NonstaticMethodTraitItemKind,\n+    StaticMethodTraitItemKind,\n+    TypeTraitItemKind,\n+}\n+\n+impl TraitItemKind {\n+    pub fn from_explicit_self_category(explicit_self_category:\n+                                       ExplicitSelfCategory)\n+                                       -> TraitItemKind {\n+        if explicit_self_category == StaticExplicitSelfCategory {\n+            StaticMethodTraitItemKind\n+        } else {\n+            NonstaticMethodTraitItemKind\n+        }\n+    }\n+}\n+\n impl Def {\n     pub fn def_id(&self) -> ast::DefId {\n         match *self {\n@@ -137,4 +158,3 @@ impl Def {\n         }\n     }\n }\n-"}, {"sha": "47320dfec7b3dea7eaf10ba168335edd58c1b940", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5d1257a760ada3f3336392d5a6b116cdedccc477/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1257a760ada3f3336392d5a6b116cdedccc477/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=5d1257a760ada3f3336392d5a6b116cdedccc477", "patch": "@@ -10,7 +10,6 @@\n \n pub use self::PrivateDep::*;\n pub use self::ImportUse::*;\n-pub use self::TraitItemKind::*;\n pub use self::LastPrivate::*;\n use self::PatternBindingMode::*;\n use self::Namespace::*;\n@@ -42,7 +41,6 @@ use middle::def::*;\n use middle::lang_items::LanguageItems;\n use middle::pat_util::pat_bindings;\n use middle::subst::{ParamSpace, FnSpace, TypeSpace};\n-use middle::ty::{ExplicitSelfCategory, StaticExplicitSelfCategory};\n use middle::ty::{CaptureModeMap, Freevar, FreevarMap, TraitMap};\n use util::nodemap::{NodeMap, NodeSet, DefIdSet, FnvHashMap};\n \n@@ -323,25 +321,6 @@ enum ModulePrefixResult {\n     PrefixFound(Rc<Module>, uint)\n }\n \n-#[deriving(Clone, Copy, Eq, PartialEq)]\n-pub enum TraitItemKind {\n-    NonstaticMethodTraitItemKind,\n-    StaticMethodTraitItemKind,\n-    TypeTraitItemKind,\n-}\n-\n-impl TraitItemKind {\n-    pub fn from_explicit_self_category(explicit_self_category:\n-                                       ExplicitSelfCategory)\n-                                       -> TraitItemKind {\n-        if explicit_self_category == StaticExplicitSelfCategory {\n-            StaticMethodTraitItemKind\n-        } else {\n-            NonstaticMethodTraitItemKind\n-        }\n-    }\n-}\n-\n #[deriving(Copy, PartialEq)]\n enum NameSearchType {\n     /// We're doing a name search in order to resolve a `use` directive."}]}