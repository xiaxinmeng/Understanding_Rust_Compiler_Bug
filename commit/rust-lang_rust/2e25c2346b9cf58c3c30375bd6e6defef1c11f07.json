{"sha": "2e25c2346b9cf58c3c30375bd6e6defef1c11f07", "node_id": "C_kwDOAAsO6NoAKDJlMjVjMjM0NmI5Y2Y1OGMzYzMwMzc1YmQ2ZTZkZWZlZjFjMTFmMDc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-29T20:01:42Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-29T20:01:59Z"}, "message": "Note pattern mismatch coming from for-loop desugaring", "tree": {"sha": "9484b61b00d95a391680eb69a8fa2af20410f1b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9484b61b00d95a391680eb69a8fa2af20410f1b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e25c2346b9cf58c3c30375bd6e6defef1c11f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e25c2346b9cf58c3c30375bd6e6defef1c11f07", "html_url": "https://github.com/rust-lang/rust/commit/2e25c2346b9cf58c3c30375bd6e6defef1c11f07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e25c2346b9cf58c3c30375bd6e6defef1c11f07/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d1aeaeb827da7a10b7cfaccf0a1d6ebf414a7b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d1aeaeb827da7a10b7cfaccf0a1d6ebf414a7b5", "html_url": "https://github.com/rust-lang/rust/commit/9d1aeaeb827da7a10b7cfaccf0a1d6ebf414a7b5"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "e156930cc89fdd8f7d5ce9dfd63c9b714dddcc5c", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2e25c2346b9cf58c3c30375bd6e6defef1c11f07/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e25c2346b9cf58c3c30375bd6e6defef1c11f07/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=2e25c2346b9cf58c3c30375bd6e6defef1c11f07", "patch": "@@ -609,7 +609,14 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 if !matches!(ty.kind(), ty::Infer(ty::InferTy::TyVar(_) | ty::InferTy::FreshTy(_)))\n                 {\n                     // don't show type `_`\n-                    err.span_label(span, format!(\"this expression has type `{}`\", ty));\n+                    if span.desugaring_kind() == Some(DesugaringKind::ForLoop)\n+                    && let ty::Adt(def, substs) = ty.kind()\n+                    && Some(def.did()) == self.tcx.get_diagnostic_item(sym::Option)\n+                    {\n+                        err.span_label(span, format!(\"this is an iterator with items of type `{}`\", substs.type_at(0)));\n+                    } else {\n+                        err.span_label(span, format!(\"this expression has type `{}`\", ty));\n+                    }\n                 }\n                 if let Some(ty::error::ExpectedFound { found, .. }) = exp_found\n                     && ty.is_box() && ty.boxed_ty() == found"}, {"sha": "9a56a399b9b563e5107f7a580cafd98c40d68848", "filename": "src/test/ui/pattern/for-loop-bad-item.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2e25c2346b9cf58c3c30375bd6e6defef1c11f07/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e25c2346b9cf58c3c30375bd6e6defef1c11f07/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.rs?ref=2e25c2346b9cf58c3c30375bd6e6defef1c11f07", "patch": "@@ -0,0 +1,20 @@\n+struct Qux(i32);\n+\n+fn bad() {\n+    let mut map = std::collections::HashMap::new();\n+    map.insert(('a', 'b'), ('c', 'd'));\n+\n+    for ((_, _), (&mut c, _)) in &mut map {\n+    //~^ ERROR mismatched types\n+        if c == 'e' {}\n+    }\n+}\n+\n+fn bad2() {\n+    for Some(Qux(_)) | None in [Some(\"\"), None] {\n+    //~^ ERROR mismatched types\n+        todo!();\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "9410e4da8d2af41594c140ee6404216c1ecbd154", "filename": "src/test/ui/pattern/for-loop-bad-item.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2e25c2346b9cf58c3c30375bd6e6defef1c11f07/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2e25c2346b9cf58c3c30375bd6e6defef1c11f07/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.stderr?ref=2e25c2346b9cf58c3c30375bd6e6defef1c11f07", "patch": "@@ -0,0 +1,23 @@\n+error[E0308]: mismatched types\n+  --> $DIR/for-loop-bad-item.rs:7:19\n+   |\n+LL |     for ((_, _), (&mut c, _)) in &mut map {\n+   |                   ^^^^^^         -------- this is an iterator with items of type `(&(char, char), &mut (char, char))`\n+   |                   |\n+   |                   expected `char`, found `&mut _`\n+   |                   help: you can probably remove the explicit borrow: `c`\n+   |\n+   = note:           expected type `char`\n+           found mutable reference `&mut _`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/for-loop-bad-item.rs:14:14\n+   |\n+LL |     for Some(Qux(_)) | None in [Some(\"\"), None] {\n+   |              ^^^^^^            ---------------- this is an iterator with items of type `Option<&str>`\n+   |              |\n+   |              expected `str`, found struct `Qux`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}