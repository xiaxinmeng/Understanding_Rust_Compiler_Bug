{"sha": "d4b6bce39c41add57c56b03ad950cae9ad54b3ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YjZiY2UzOWM0MWFkZDU3YzU2YjAzYWQ5NTBjYWU5YWQ1NGIzYWQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-08T10:53:09Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-08T10:53:09Z"}, "message": "Workaround two bugs", "tree": {"sha": "53898a9cc3a1a303c9c55d467521cb27a9863e11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53898a9cc3a1a303c9c55d467521cb27a9863e11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4b6bce39c41add57c56b03ad950cae9ad54b3ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4b6bce39c41add57c56b03ad950cae9ad54b3ad", "html_url": "https://github.com/rust-lang/rust/commit/d4b6bce39c41add57c56b03ad950cae9ad54b3ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4b6bce39c41add57c56b03ad950cae9ad54b3ad/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21c52c70b3d8abb9d3995e473ee120a11f3649ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/21c52c70b3d8abb9d3995e473ee120a11f3649ff", "html_url": "https://github.com/rust-lang/rust/commit/21c52c70b3d8abb9d3995e473ee120a11f3649ff"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "d479e9350686fcd22a176641ac009d889451158b", "filename": "src/base.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d4b6bce39c41add57c56b03ad950cae9ad54b3ad/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4b6bce39c41add57c56b03ad950cae9ad54b3ad/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=d4b6bce39c41add57c56b03ad950cae9ad54b3ad", "patch": "@@ -188,16 +188,20 @@ pub fn trans_fn<'a, 'tcx: 'a>(\n                 values,\n                 targets,\n             } => {\n-                let discr = trans_operand(fx, discr).load_value(fx);\n-                let mut jt_data = JumpTableData::new();\n-                for (i, value) in values.iter().enumerate() {\n-                    let ebb = fx.get_ebb(targets[i]);\n-                    jt_data.set_entry(*value as usize, ebb);\n+                fx.bcx.ins().trap(TrapCode::User(0));\n+                // TODO: prevent panics on large and negative disciminants\n+                if false {\n+                    let discr = trans_operand(fx, discr).load_value(fx);\n+                    let mut jt_data = JumpTableData::new();\n+                    for (i, value) in values.iter().enumerate() {\n+                        let ebb = fx.get_ebb(targets[i]);\n+                        jt_data.set_entry(*value as usize, ebb);\n+                    }\n+                    let jump_table = fx.bcx.create_jump_table(jt_data);\n+                    fx.bcx.ins().br_table(discr, jump_table);\n+                    let otherwise_ebb = fx.get_ebb(targets[targets.len() - 1]);\n+                    fx.bcx.ins().jump(otherwise_ebb, &[]);\n                 }\n-                let jump_table = fx.bcx.create_jump_table(jt_data);\n-                fx.bcx.ins().br_table(discr, jump_table);\n-                let otherwise_ebb = fx.get_ebb(targets[targets.len() - 1]);\n-                fx.bcx.ins().jump(otherwise_ebb, &[]);\n             }\n             TerminatorKind::Call {\n                 func,\n@@ -431,7 +435,7 @@ fn trans_stmt<'a, 'tcx: 'a>(\n                     let val = CValue::const_val(fx, fx.tcx.types.usize, ty_size as i64);\n                     lval.write_cvalue(fx, val);\n                 }\n-                Rvalue::Aggregate(_, _) => bug!(\"shouldn't exist at trans {:?}\", rval),\n+                Rvalue::Aggregate(_, _) => return Err(format!(\"shouldn't exist at trans {:?}\", rval)),\n             }\n         }\n         StatementKind::StorageLive(_)"}]}