{"sha": "b7d473503b051f86c59f3256130e8ff13afe4332", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZDQ3MzUwM2IwNTFmODZjNTlmMzI1NjEzMGU4ZmYxM2FmZTQzMzI=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-10-05T10:23:59Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-10-05T10:23:59Z"}, "message": "Merge consume and consume_pat in escape analysis\n\nFIXME: This doesn't work and probably needs a rewrite of the lint\n\nSee https://github.com/rust-lang/rust-clippy/pull/4628#issuecomment-538574944", "tree": {"sha": "126c024633fa076bfd196a7b130f56f3169cb23f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/126c024633fa076bfd196a7b130f56f3169cb23f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7d473503b051f86c59f3256130e8ff13afe4332", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl2Ybz8ACgkQaTCGhp1Q\nZjcaHQ/9HKv70bGcfFM2ZhJLmvldIy5RrR6n25v9DSwqmz37lkGzlV8lfVcH0I1A\nl7QnbwrELJlwcxUkAsiV81PAaj4ZaFj3FfjDs/dC3njQ3v5vRFyHadi1a0NFD/GM\nwW+bUz+IDwt+y6qoyI+41sk4uDL1ztBpR+Hr5uara2u/ZFRVsnK3dRK7n5FYGuyH\ncNU+aM/iVwhcvZZVCYYmaKWfs5CszcGsrjdPA1D+8hFOj0WE6xI/Y2dgHzQn67EZ\ng3qxq1f4l7vLIXldiG9AwltKRX8qdD/ItUdUcifFQLeTRc4E0Wh2rAhPx+dqSjL/\nGHS1Yh6817VRa03+JamUlMlO7kKF1vHVqYUq2FQuSM5NF/+1RXSpZMG1GL+TWC81\nlaff0/1DY0RHLwiC1Bc4JZEWMI2DRQBtcDMaJufVgoO/jF1V9s5dpc8Xzn+LcxHL\nPkQ5en1HStbUtxnRSfCUOYWRsX/V298xLdzb87JAy3sF7WfU+QtRVvdG9vCHi3kR\nGjvVvTquklGmy7Ivd31BH4Msakuo0QEX9LHbq2NwDHTgAMEWd1qrOX4s7XsXlsGR\ni2XsDKPxHP4H2XWMnbPwr4Dp0YCC1rIOla/xLHkGrQhcKRSeLKWl31Ok7BWEKBA9\nFrc7E29FP0XLghieGVsGoHh1vG+a4A8ru3VYS4IQnfoO4UC8/P4=\n=1I3B\n-----END PGP SIGNATURE-----", "payload": "tree 126c024633fa076bfd196a7b130f56f3169cb23f\nparent c420b07191dd41827272ebb0ef3ca8bb19c92eed\nauthor flip1995 <hello@philkrones.com> 1570271039 +0200\ncommitter flip1995 <hello@philkrones.com> 1570271039 +0200\n\nMerge consume and consume_pat in escape analysis\n\nFIXME: This doesn't work and probably needs a rewrite of the lint\n\nSee https://github.com/rust-lang/rust-clippy/pull/4628#issuecomment-538574944\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7d473503b051f86c59f3256130e8ff13afe4332", "html_url": "https://github.com/rust-lang/rust/commit/b7d473503b051f86c59f3256130e8ff13afe4332", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7d473503b051f86c59f3256130e8ff13afe4332/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c420b07191dd41827272ebb0ef3ca8bb19c92eed", "url": "https://api.github.com/repos/rust-lang/rust/commits/c420b07191dd41827272ebb0ef3ca8bb19c92eed", "html_url": "https://github.com/rust-lang/rust/commit/c420b07191dd41827272ebb0ef3ca8bb19c92eed"}], "stats": {"total": 78, "additions": 11, "deletions": 67}, "files": [{"sha": "90e23bd9886f62e2435861cf9b70a10489c556da", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 11, "deletions": 45, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/b7d473503b051f86c59f3256130e8ff13afe4332/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7d473503b051f86c59f3256130e8ff13afe4332/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=b7d473503b051f86c59f3256130e8ff13afe4332", "patch": "@@ -120,44 +120,27 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n                 self.set.remove(&lid);\n             }\n         }\n-    }\n-    fn consume_pat(&mut self, consume_pat: &Pat, cmt: &cmt_<'tcx>, _: ConsumeMode) {\n         let map = &self.cx.tcx.hir();\n-        if is_argument(map, consume_pat.hir_id) {\n+        if is_argument(map, cmt.hir_id) {\n             // Skip closure arguments\n-            let parent_id = map.get_parent_node(consume_pat.hir_id);\n+            let parent_id = map.get_parent_node(cmt.hir_id);\n             if let Some(Node::Expr(..)) = map.find(map.get_parent_node(parent_id)) {\n                 return;\n             }\n \n             if is_non_trait_box(cmt.ty) && !self.is_large_box(cmt.ty) {\n-                self.set.insert(consume_pat.hir_id);\n+                self.set.insert(cmt.hir_id);\n             }\n             return;\n         }\n-        if let Categorization::Rvalue = cmt.cat {\n-            if let Some(Node::Stmt(st)) = map.find(map.get_parent_node(cmt.hir_id)) {\n-                if let StmtKind::Local(ref loc) = st.kind {\n-                    if let Some(ref ex) = loc.init {\n-                        if let ExprKind::Box(..) = ex.kind {\n-                            if is_non_trait_box(cmt.ty) && !self.is_large_box(cmt.ty) {\n-                                // let x = box (...)\n-                                self.set.insert(consume_pat.hir_id);\n-                            }\n-                            // TODO Box::new\n-                            // TODO vec![]\n-                            // TODO \"foo\".to_owned() and friends\n-                        }\n-                    }\n-                }\n-            }\n-        }\n         if let Categorization::Local(lid) = cmt.cat {\n-            if self.set.contains(&lid) {\n-                // let y = x where x is known\n-                // remove x, insert y\n-                self.set.insert(consume_pat.hir_id);\n-                self.set.remove(&lid);\n+            if let Some(Node::Binding(_)) = map.find(cmt.hir_id) {\n+                if self.set.contains(&lid) {\n+                    // let y = x where x is known\n+                    // remove x, insert y\n+                    self.set.insert(cmt.hir_id);\n+                    self.set.remove(&lid);\n+                }\n             }\n         }\n     }\n@@ -166,26 +149,9 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n         &mut self,\n         cmt: &cmt_<'tcx>,\n         _: ty::BorrowKind,\n-        loan_cause: LoanCause,\n     ) {\n         if let Categorization::Local(lid) = cmt.cat {\n-            match loan_cause {\n-                // `x.foo()`\n-                // Used without autoderef-ing (i.e., `x.clone()`).\n-                LoanCause::AutoRef |\n-\n-                // `&x`\n-                // `foo(&x)` where no extra autoref-ing is happening.\n-                LoanCause::AddrOf |\n-\n-                // `match x` can move.\n-                LoanCause::MatchDiscriminant => {\n-                    self.set.remove(&lid);\n-                }\n-\n-                // Do nothing for matches, etc. These can't escape.\n-                _ => {}\n-            }\n+            self.set.remove(&lid);\n         }\n     }\n "}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/escape_analysis.stderr", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b7d473503b051f86c59f3256130e8ff13afe4332/tests%2Fui%2Fescape_analysis.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7d473503b051f86c59f3256130e8ff13afe4332/tests%2Fui%2Fescape_analysis.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fescape_analysis.stderr?ref=b7d473503b051f86c59f3256130e8ff13afe4332", "patch": "@@ -1,22 +0,0 @@\n-error: local variable doesn't need to be boxed here\n-  --> $DIR/escape_analysis.rs:39:13\n-   |\n-LL | fn warn_arg(x: Box<A>) {\n-   |             ^\n-   |\n-   = note: `-D clippy::boxed-local` implied by `-D warnings`\n-\n-error: local variable doesn't need to be boxed here\n-  --> $DIR/escape_analysis.rs:130:12\n-   |\n-LL | pub fn new(_needs_name: Box<PeekableSeekable<&()>>) -> () {}\n-   |            ^^^^^^^^^^^\n-\n-error: local variable doesn't need to be boxed here\n-  --> $DIR/escape_analysis.rs:170:23\n-   |\n-LL |     fn closure_borrow(x: Box<A>) {\n-   |                       ^\n-\n-error: aborting due to 3 previous errors\n-"}]}