{"sha": "fce535c04ae30d508debf9980cfc0c9475e08adc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZTUzNWMwNGFlMzBkNTA4ZGViZjk5ODBjZmMwYzk0NzVlMDhhZGM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-14T06:39:41Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-14T06:39:41Z"}, "message": "Change PVAL_num to PVAL_int and remove non-int literal forms.", "tree": {"sha": "52403881d4e2e0c9d0e1f24349d9c98603d2c39e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52403881d4e2e0c9d0e1f24349d9c98603d2c39e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fce535c04ae30d508debf9980cfc0c9475e08adc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fce535c04ae30d508debf9980cfc0c9475e08adc", "html_url": "https://github.com/rust-lang/rust/commit/fce535c04ae30d508debf9980cfc0c9475e08adc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fce535c04ae30d508debf9980cfc0c9475e08adc/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae570016a4d0c93c321702e14b16b2785d47ca60", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae570016a4d0c93c321702e14b16b2785d47ca60", "html_url": "https://github.com/rust-lang/rust/commit/ae570016a4d0c93c321702e14b16b2785d47ca60"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "56f3e878ca4b75989573dd0d196f310c970a45d9", "filename": "src/boot/fe/cexp.ml", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fce535c04ae30d508debf9980cfc0c9475e08adc/src%2Fboot%2Ffe%2Fcexp.ml", "raw_url": "https://github.com/rust-lang/rust/raw/fce535c04ae30d508debf9980cfc0c9475e08adc/src%2Fboot%2Ffe%2Fcexp.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fcexp.ml?ref=fce535c04ae30d508debf9980cfc0c9475e08adc", "patch": "@@ -303,7 +303,7 @@ and  parse_eq_pexp_opt (ps:pstate) : Ast.pexp option =\n \n type pval =\n     PVAL_str of string\n-  | PVAL_num of int64\n+  | PVAL_int of int64\n   | PVAL_bool of bool\n ;;\n \n@@ -325,7 +325,7 @@ let unexpected_val (expected:string) (v:pval)  =\n   let got =\n     match v with\n         PVAL_str s -> \"str \\\"\" ^ (String.escaped s) ^ \"\\\"\"\n-      | PVAL_num i -> \"num \" ^ (Int64.to_string i)\n+      | PVAL_int i -> \"int \" ^ (Int64.to_string i)\n       | PVAL_bool b -> if b then \"bool true\" else \"bool false\"\n   in\n     (* FIXME (issue #70): proper error reporting, please. *)\n@@ -494,9 +494,9 @@ and eval_pexp (env:env) (exp:Ast.pexp) : pval =\n                 (Ast.BINOP_add, PVAL_str az, PVAL_str bz) ->\n                   PVAL_str (az ^ bz)\n               | _ ->\n-                  let av = (need_num av) in\n-                  let bv = (need_num bv) in\n-                    PVAL_num\n+                  let av = (need_int av) in\n+                  let bv = (need_int bv) in\n+                    PVAL_int\n                       begin\n                         match bop with\n                             Ast.BINOP_add -> Int64.add av bv\n@@ -515,7 +515,7 @@ and eval_pexp (env:env) (exp:Ast.pexp) : pval =\n               Ast.UNOP_not ->\n                 PVAL_bool (not (eval_pexp_to_bool env a))\n             | Ast.UNOP_neg ->\n-                PVAL_num (Int64.neg (eval_pexp_to_num env a))\n+                PVAL_int (Int64.neg (eval_pexp_to_int env a))\n             | _ -> bug () \"Unexpected unop in Cexp.eval_pexp\"\n         end\n \n@@ -530,10 +530,8 @@ and eval_pexp (env:env) (exp:Ast.pexp) : pval =\n     | Ast.PEXP_lit (Ast.LIT_bool b) ->\n         PVAL_bool b\n \n-    | Ast.PEXP_lit (Ast.LIT_int i)\n-    | Ast.PEXP_lit (Ast.LIT_uint i)\n-    | Ast.PEXP_lit (Ast.LIT_mach_int (_, i)) ->\n-        PVAL_num i\n+    | Ast.PEXP_lit (Ast.LIT_int i) ->\n+        PVAL_int i\n \n     | Ast.PEXP_str s ->\n         PVAL_str s\n@@ -546,13 +544,13 @@ and eval_pexp_to_str (env:env) (exp:Ast.pexp) : string =\n       PVAL_str s -> s\n     | v -> unexpected_val \"str\" v\n \n-and need_num (cv:pval) : int64 =\n+and need_int (cv:pval) : int64 =\n   match cv with\n-      PVAL_num n -> n\n-    | v -> unexpected_val \"num\" v\n+      PVAL_int n -> n\n+    | v -> unexpected_val \"int\" v\n \n-and eval_pexp_to_num (env:env) (exp:Ast.pexp) : int64 =\n-  need_num (eval_pexp env exp)\n+and eval_pexp_to_int (env:env) (exp:Ast.pexp) : int64 =\n+  need_int (eval_pexp env exp)\n \n and eval_pexp_to_bool (env:env) (exp:Ast.pexp) : bool =\n   match eval_pexp env exp with\n@@ -655,7 +653,7 @@ let parse_crate_file\n                                 ident) ps)\n         | Some (PVAL_bool b) -> LIT_BOOL b\n         | Some (PVAL_str s) -> LIT_STR s\n-        | Some (PVAL_num n) -> LIT_INT n\n+        | Some (PVAL_int n) -> LIT_INT n\n   in\n   let ps =\n     make_parser crate_cache sess get_mod get_cenv_tok"}]}