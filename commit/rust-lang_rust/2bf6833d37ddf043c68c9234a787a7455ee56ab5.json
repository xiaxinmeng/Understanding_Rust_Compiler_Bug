{"sha": "2bf6833d37ddf043c68c9234a787a7455ee56ab5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZjY4MzNkMzdkZGYwNDNjNjhjOTIzNGE3ODdhNzQ1NWVlNTZhYjU=", "commit": {"author": {"name": "Tamir Duberstein", "email": "tamird@google.com", "date": "2020-05-19T17:08:50Z"}, "committer": {"name": "Tamir Duberstein", "email": "tamird@google.com", "date": "2020-05-19T18:34:30Z"}, "message": "Remove dangling COPYRIGHT references\n\nMissed in 2a663555ddf36f6b041445894a8c175cd1bc718c.", "tree": {"sha": "a82f6a016bcf17ab7cf3867ae43f45ccf6610bfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a82f6a016bcf17ab7cf3867ae43f45ccf6610bfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bf6833d37ddf043c68c9234a787a7455ee56ab5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEGdbxTRDxXfPwlFQKMuM+wV4f7zwFAl7EJrYACgkQMuM+wV4f\n7zypXwwAy2S9JPkf/wWBHGDPj7aAivxHqSDLYkhIW4/1LsKiN4Qj7Ch5VTOrhWDu\no3bs2fAq9d5pXDvHugXB4Ju9D4EQNuvktGO3XzmdEtfvachPmOHuMPWWKYlXplD7\n0bO3oXBvma9E0m0ll2tlNYUDKn9Ps5LVRff1gnYWWss9YQuVKC1V7nDMwxDiYrSU\nt6FeyBr8qaBEMOaDwuruBd5VyreHRaDnp8mdivR2Unjz0DHdtxP8g7vZqlXZawLI\noRcO3uDWLr6jdAm3/5b+di39hZiazEj0QTju1sbNpdTUt4si7l/gJ0D3pMLx4Uzv\ndkMhuB5V8IRkbENCEL89taq42T4Me7RcLlFL+AWoQnSL+QeEBeFubt96SHH8Yotg\n/19T9/H3pcKLzoyu4jMoTwFDU++q88dFznPZcpDWFOsb8Ae1rZ9bZ1HnCYN4NZ2C\nmcmB2geXwTUBYuBHpXQuxuo57aKXwOACXK4hQb7dzxCJr6HBJ2bGeQScf6RemzgQ\n+bPy/rUH\n=kRWh\n-----END PGP SIGNATURE-----", "payload": "tree a82f6a016bcf17ab7cf3867ae43f45ccf6610bfa\nparent 42acd9086f93fdc68a61cd79152abca77c6cd369\nauthor Tamir Duberstein <tamird@google.com> 1589908130 -0400\ncommitter Tamir Duberstein <tamird@google.com> 1589913270 -0400\n\nRemove dangling COPYRIGHT references\n\nMissed in 2a663555ddf36f6b041445894a8c175cd1bc718c.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bf6833d37ddf043c68c9234a787a7455ee56ab5", "html_url": "https://github.com/rust-lang/rust/commit/2bf6833d37ddf043c68c9234a787a7455ee56ab5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bf6833d37ddf043c68c9234a787a7455ee56ab5/comments", "author": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42acd9086f93fdc68a61cd79152abca77c6cd369", "url": "https://api.github.com/repos/rust-lang/rust/commits/42acd9086f93fdc68a61cd79152abca77c6cd369", "html_url": "https://github.com/rust-lang/rust/commit/42acd9086f93fdc68a61cd79152abca77c6cd369"}], "stats": {"total": 27, "additions": 9, "deletions": 18}, "files": [{"sha": "9449376513fd569e16c0d955103c0268970fcd2f", "filename": "src/test/ui/issues/issue-49851/compiler-builtins-error.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2bf6833d37ddf043c68c9234a787a7455ee56ab5/src%2Ftest%2Fui%2Fissues%2Fissue-49851%2Fcompiler-builtins-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bf6833d37ddf043c68c9234a787a7455ee56ab5/src%2Ftest%2Fui%2Fissues%2Fissue-49851%2Fcompiler-builtins-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49851%2Fcompiler-builtins-error.rs?ref=2bf6833d37ddf043c68c9234a787a7455ee56ab5", "patch": "@@ -1,6 +1,4 @@\n //~ ERROR 1:1: 1:1: can't find crate for `core` [E0463]\n-// http://rust-lang.org/COPYRIGHT.\n-//\n \n // compile-flags: --target thumbv7em-none-eabihf\n #![deny(unsafe_code)]"}, {"sha": "88e811583161c1a27b06f9568fe1dc65a7da3d55", "filename": "src/test/ui/ui-testing-optout.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2bf6833d37ddf043c68c9234a787a7455ee56ab5/src%2Ftest%2Fui%2Fui-testing-optout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bf6833d37ddf043c68c9234a787a7455ee56ab5/src%2Ftest%2Fui%2Fui-testing-optout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fui-testing-optout.rs?ref=2bf6833d37ddf043c68c9234a787a7455ee56ab5", "patch": "@@ -3,9 +3,6 @@\n // Line number < 10\n type A = B; //~ ERROR\n \n-// http://rust-lang.org/COPYRIGHT.\n-//\n-\n // Line number >=10, <100\n type C = D; //~ ERROR\n "}, {"sha": "f562bb74c1173508c97a7d5464f69d1fe83c075e", "filename": "src/test/ui/ui-testing-optout.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2bf6833d37ddf043c68c9234a787a7455ee56ab5/src%2Ftest%2Fui%2Fui-testing-optout.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2bf6833d37ddf043c68c9234a787a7455ee56ab5/src%2Ftest%2Fui%2Fui-testing-optout.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fui-testing-optout.stderr?ref=2bf6833d37ddf043c68c9234a787a7455ee56ab5", "patch": "@@ -8,21 +8,21 @@ error[E0412]: cannot find type `B` in this scope\n   | similarly named type alias `A` defined here\n \n error[E0412]: cannot find type `D` in this scope\n-  --> $DIR/ui-testing-optout.rs:10:10\n-   |\n-4  | type A = B;\n-   | ----------- similarly named type alias `A` defined here\n+ --> $DIR/ui-testing-optout.rs:7:10\n+  |\n+4 | type A = B;\n+  | ----------- similarly named type alias `A` defined here\n ...\n-10 | type C = D;\n-   |          ^ help: a type alias with a similar name exists: `A`\n+7 | type C = D;\n+  |          ^ help: a type alias with a similar name exists: `A`\n \n error[E0412]: cannot find type `F` in this scope\n-  --> $DIR/ui-testing-optout.rs:95:10\n+  --> $DIR/ui-testing-optout.rs:92:10\n    |\n 4  | type A = B;\n    | ----------- similarly named type alias `A` defined here\n ...\n-95 | type E = F;\n+92 | type E = F;\n    |          ^ help: a type alias with a similar name exists: `A`\n \n error: aborting due to 3 previous errors"}, {"sha": "91264e790c8db40e5e73277c5445b443c65b7d68", "filename": "src/test/ui/unsafe/unsafe-fn-assign-deref-ptr.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2bf6833d37ddf043c68c9234a787a7455ee56ab5/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bf6833d37ddf043c68c9234a787a7455ee56ab5/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.rs?ref=2bf6833d37ddf043c68c9234a787a7455ee56ab5", "patch": "@@ -1,7 +1,3 @@\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-\n-\n fn f(p: *mut u8) {\n     *p = 0; //~ ERROR dereference of raw pointer is unsafe\n     return;"}, {"sha": "28db83db92ac87b36475030775f60c5a75636e58", "filename": "src/test/ui/unsafe/unsafe-fn-assign-deref-ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2bf6833d37ddf043c68c9234a787a7455ee56ab5/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2bf6833d37ddf043c68c9234a787a7455ee56ab5/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.stderr?ref=2bf6833d37ddf043c68c9234a787a7455ee56ab5", "patch": "@@ -1,5 +1,5 @@\n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n-  --> $DIR/unsafe-fn-assign-deref-ptr.rs:6:5\n+  --> $DIR/unsafe-fn-assign-deref-ptr.rs:2:5\n    |\n LL |     *p = 0;\n    |     ^^^^^^ dereference of raw pointer"}]}