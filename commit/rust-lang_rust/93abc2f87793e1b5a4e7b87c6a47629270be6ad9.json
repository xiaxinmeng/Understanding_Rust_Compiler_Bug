{"sha": "93abc2f87793e1b5a4e7b87c6a47629270be6ad9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzYWJjMmY4Nzc5M2UxYjVhNGU3Yjg3YzZhNDc2MjkyNzBiZTZhZDk=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-06-19T01:22:54Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-06-20T17:49:42Z"}, "message": "Add doc example for `CString::from_raw`.", "tree": {"sha": "e73ecd2e03fcf16aea665d08a99b9658b08102c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e73ecd2e03fcf16aea665d08a99b9658b08102c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93abc2f87793e1b5a4e7b87c6a47629270be6ad9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93abc2f87793e1b5a4e7b87c6a47629270be6ad9", "html_url": "https://github.com/rust-lang/rust/commit/93abc2f87793e1b5a4e7b87c6a47629270be6ad9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93abc2f87793e1b5a4e7b87c6a47629270be6ad9/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3c26fe7e32630470ed6ffc53cf65cdeaeecd9e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c26fe7e32630470ed6ffc53cf65cdeaeecd9e9", "html_url": "https://github.com/rust-lang/rust/commit/d3c26fe7e32630470ed6ffc53cf65cdeaeecd9e9"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "1a91417ca0e92dcdcb623a5e840e668affb9fd4a", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/93abc2f87793e1b5a4e7b87c6a47629270be6ad9/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93abc2f87793e1b5a4e7b87c6a47629270be6ad9/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=93abc2f87793e1b5a4e7b87c6a47629270be6ad9", "patch": "@@ -287,6 +287,27 @@ impl CString {\n     /// to undefined behavior or allocator corruption.\n     ///\n     /// [`into_raw`]: #method.into_raw\n+    ///\n+    /// # Examples\n+    ///\n+    /// Create a `CString`, pass ownership to an `extern` function (via raw pointer), then retake\n+    /// ownership with `from_raw`:\n+    ///\n+    /// ```no_run\n+    /// use std::ffi::CString;\n+    /// use std::os::raw::c_char;\n+    ///\n+    /// extern {\n+    ///     fn some_extern_function(s: *mut c_char);\n+    /// }\n+    ///\n+    /// let c_string = CString::new(\"Hello!\").unwrap();\n+    /// let raw = c_string.into_raw();\n+    /// unsafe {\n+    ///     some_extern_function(raw);\n+    ///     let c_string = CString::from_raw(raw);\n+    /// }\n+    /// ```\n     #[stable(feature = \"cstr_memory\", since = \"1.4.0\")]\n     pub unsafe fn from_raw(ptr: *mut c_char) -> CString {\n         let len = libc::strlen(ptr) + 1; // Including the NUL byte"}]}