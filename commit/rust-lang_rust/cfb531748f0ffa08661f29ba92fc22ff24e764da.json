{"sha": "cfb531748f0ffa08661f29ba92fc22ff24e764da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmYjUzMTc0OGYwZmZhMDg2NjFmMjliYTkyZmMyMmZmMjRlNzY0ZGE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-19T23:15:29Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-20T03:39:42Z"}, "message": "Rollup merge of #49157 - estebank:const-into, r=oli-obk\n\nDo not suggest `.into()` in `const`s\n\nFix #49100.", "tree": {"sha": "8d6c1538fe200d49eaa86c047aa41197e308682a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d6c1538fe200d49eaa86c047aa41197e308682a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfb531748f0ffa08661f29ba92fc22ff24e764da", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqwgn8ACgkQ/vbIBR0O\nATyEghAAmw1BWZ7JzrKA5PD6UakIqlF1xmH8vhrV4whErsn/I0teiDw84GzfJwLh\nSZYnf7etDs59YY7OOyC6jphCODy3mF3W6sitR7IhGDPNZ9GXjyK/kZJ6+8Z3OuEt\nvjG32nojcFJpC21jNHpYwk6ATBnXEWvtIzjvkH/6NJXloWbNHWjw3GpNtXpesMNp\nG7lgul4fAfDMaQpnEWP0Og7SGp4zDeV25j90uU/F8hXEP7SlFF0AZfAKOMnzy6ml\nqFwSAObj7xK7trNoNgDbrszpQ6B8N2PnDUWSBOaM8bCw9jmJyCc3ZSUzc505bOJ3\n/SWg3B/0Zjthlez0ajA1OWCL/+m5JsYJjt90J3nXXkUi8IFTwi75VX2Sj38FF0ae\nmt9/sc9gUEvi0sKjnWcQrxb/2kPvBry/L9S0Ileb4xbqCffj+UQ1feLedU8aRssY\n3hQsoP8SuOsFSIiwm3nQTKeZQIfmUtADvul+tsTgRuY2QGTaic6qLP4I/sujH5j4\nbXmDfblJ49E2YmpTqux/eTEWyLyVvHC7ywtaGApRywgveTsNx6rEgAsc/1K1rJpK\nyyQGRVKFbt0GePdCjpNIqVg169TD36Ai8Djq0dq66DBTkQVgIH+R2rIH3y5tAXRx\nQ1smbr0M+CukMJ75HUGsc2F6h+jZGhtJxopOfymPL4IS0M8UcbI=\n=Yyoy\n-----END PGP SIGNATURE-----", "payload": "tree 8d6c1538fe200d49eaa86c047aa41197e308682a\nparent 45de0577275da36494d340e4935df569e77127d3\nparent 1b8f1fc2d9a387840fbd9b04eb80e6b9a42ea198\nauthor kennytm <kennytm@gmail.com> 1521501329 +0800\ncommitter kennytm <kennytm@gmail.com> 1521517182 +0800\n\nRollup merge of #49157 - estebank:const-into, r=oli-obk\n\nDo not suggest `.into()` in `const`s\n\nFix #49100.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfb531748f0ffa08661f29ba92fc22ff24e764da", "html_url": "https://github.com/rust-lang/rust/commit/cfb531748f0ffa08661f29ba92fc22ff24e764da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfb531748f0ffa08661f29ba92fc22ff24e764da/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45de0577275da36494d340e4935df569e77127d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/45de0577275da36494d340e4935df569e77127d3", "html_url": "https://github.com/rust-lang/rust/commit/45de0577275da36494d340e4935df569e77127d3"}, {"sha": "1b8f1fc2d9a387840fbd9b04eb80e6b9a42ea198", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b8f1fc2d9a387840fbd9b04eb80e6b9a42ea198", "html_url": "https://github.com/rust-lang/rust/commit/1b8f1fc2d9a387840fbd9b04eb80e6b9a42ea198"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "701b896b9057bc8b07c3853df3e053845abb6745", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cfb531748f0ffa08661f29ba92fc22ff24e764da/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfb531748f0ffa08661f29ba92fc22ff24e764da/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=cfb531748f0ffa08661f29ba92fc22ff24e764da", "patch": "@@ -18,8 +18,9 @@ use syntax::ast;\n use syntax::util::parser::PREC_POSTFIX;\n use syntax_pos::{self, Span};\n use rustc::hir;\n-use rustc::hir::print;\n use rustc::hir::def::Def;\n+use rustc::hir::map::NodeItem;\n+use rustc::hir::{Item, ItemConst, print};\n use rustc::ty::{self, Ty, AssociatedItem};\n use errors::{DiagnosticBuilder, CodeMapper};\n \n@@ -318,6 +319,18 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                       checked_ty: Ty<'tcx>,\n                       expected_ty: Ty<'tcx>)\n                       -> bool {\n+        let parent_id = self.tcx.hir.get_parent_node(expr.id);\n+        match self.tcx.hir.find(parent_id) {\n+            Some(parent) => {\n+                // Shouldn't suggest `.into()` on `const`s.\n+                if let NodeItem(Item { node: ItemConst(_, _), .. }) = parent {\n+                    // FIXME(estebank): modify once we decide to suggest `as` casts\n+                    return false;\n+                }\n+            }\n+            None => {}\n+        };\n+\n         let will_truncate = \"will truncate the source value\";\n         let depending_on_isize = \"will truncate or zero-extend depending on the bit width of \\\n                                   `isize`\";"}, {"sha": "ddad4e79cfdaa3e7ee6bdd485905ebd7b0feee41", "filename": "src/test/ui/suggestions/const-type-mismatch.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cfb531748f0ffa08661f29ba92fc22ff24e764da/src%2Ftest%2Fui%2Fsuggestions%2Fconst-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfb531748f0ffa08661f29ba92fc22ff24e764da/src%2Ftest%2Fui%2Fsuggestions%2Fconst-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconst-type-mismatch.rs?ref=cfb531748f0ffa08661f29ba92fc22ff24e764da", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// `const`s shouldn't suggest `.into()`\n+\n+const TEN: u8 = 10;\n+const TWELVE: u16 = TEN + 2;\n+//~^ ERROR mismatched types [E0308]\n+\n+fn main() {\n+    const TEN: u8 = 10;\n+    const ALSO_TEN: u16 = TEN;\n+    //~^ ERROR mismatched types [E0308]\n+}"}, {"sha": "965995f82c53a58b9ce434cfa99022723810deec", "filename": "src/test/ui/suggestions/const-type-mismatch.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cfb531748f0ffa08661f29ba92fc22ff24e764da/src%2Ftest%2Fui%2Fsuggestions%2Fconst-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfb531748f0ffa08661f29ba92fc22ff24e764da/src%2Ftest%2Fui%2Fsuggestions%2Fconst-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconst-type-mismatch.stderr?ref=cfb531748f0ffa08661f29ba92fc22ff24e764da", "patch": "@@ -0,0 +1,15 @@\n+error[E0308]: mismatched types\n+  --> $DIR/const-type-mismatch.rs:14:21\n+   |\n+LL | const TWELVE: u16 = TEN + 2;\n+   |                     ^^^^^^^ expected u16, found u8\n+\n+error[E0308]: mismatched types\n+  --> $DIR/const-type-mismatch.rs:19:27\n+   |\n+LL |     const ALSO_TEN: u16 = TEN;\n+   |                           ^^^ expected u16, found u8\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}