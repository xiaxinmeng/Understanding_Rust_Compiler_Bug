{"sha": "17e30d6b4ef5c6fb4d6257323903cba1213cae8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3ZTMwZDZiNGVmNWM2ZmI0ZDYyNTczMjM5MDNjYmExMjEzY2FlOGY=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-07-23T21:54:53Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-07-24T00:06:56Z"}, "message": "Change each_bound_trait_and_supertraits to take a vec of TraitRefs.", "tree": {"sha": "19487dd8f6d4de8a46d2cbfadadff4a5dbc02d1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19487dd8f6d4de8a46d2cbfadadff4a5dbc02d1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17e30d6b4ef5c6fb4d6257323903cba1213cae8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17e30d6b4ef5c6fb4d6257323903cba1213cae8f", "html_url": "https://github.com/rust-lang/rust/commit/17e30d6b4ef5c6fb4d6257323903cba1213cae8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17e30d6b4ef5c6fb4d6257323903cba1213cae8f/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "387df4e1277ed09002bb050caac5a86d126a1339", "url": "https://api.github.com/repos/rust-lang/rust/commits/387df4e1277ed09002bb050caac5a86d126a1339", "html_url": "https://github.com/rust-lang/rust/commit/387df4e1277ed09002bb050caac5a86d126a1339"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "6a75c845f16195fd67ab03c84da2636ac104ac01", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/17e30d6b4ef5c6fb4d6257323903cba1213cae8f/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17e30d6b4ef5c6fb4d6257323903cba1213cae8f/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=17e30d6b4ef5c6fb4d6257323903cba1213cae8f", "patch": "@@ -4348,9 +4348,9 @@ pub fn determine_inherited_purity(parent: (ast::purity, ast::node_id),\n // relation on the supertraits from each bounded trait's constraint\n // list.\n pub fn each_bound_trait_and_supertraits(tcx: ctxt,\n-                                        bounds: &ParamBounds,\n+                                        bounds: &[@TraitRef],\n                                         f: &fn(@TraitRef) -> bool) -> bool {\n-    for bounds.trait_bounds.iter().advance |&bound_trait_ref| {\n+    for bounds.iter().advance |&bound_trait_ref| {\n         let mut supertrait_set = HashMap::new();\n         let mut trait_refs = ~[];\n         let mut i = 0;\n@@ -4392,7 +4392,8 @@ pub fn count_traits_and_supertraits(tcx: ctxt,\n                                     type_param_defs: &[TypeParameterDef]) -> uint {\n     let mut total = 0;\n     for type_param_defs.iter().advance |type_param_def| {\n-        for each_bound_trait_and_supertraits(tcx, type_param_def.bounds) |_| {\n+        for each_bound_trait_and_supertraits(\n+            tcx, type_param_def.bounds.trait_bounds) |_| {\n             total += 1;\n         }\n     }"}, {"sha": "5e2fff3b25df90fae64a800640aaa4b48c869c4a", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/17e30d6b4ef5c6fb4d6257323903cba1213cae8f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17e30d6b4ef5c6fb4d6257323903cba1213cae8f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=17e30d6b4ef5c6fb4d6257323903cba1213cae8f", "patch": "@@ -413,7 +413,8 @@ impl<'self> LookupContext<'self> {\n         };\n \n         self.push_inherent_candidates_from_bounds(\n-            rcvr_ty, &*type_param_def.bounds, param_numbered(param_ty.idx));\n+            rcvr_ty, type_param_def.bounds.trait_bounds,\n+            param_numbered(param_ty.idx));\n     }\n \n \n@@ -423,18 +424,13 @@ impl<'self> LookupContext<'self> {\n         let tcx = self.tcx();\n \n         let trait_ref = ty::lookup_trait_def(tcx, did).trait_ref;\n-        let bounds = ParamBounds {\n-            builtin_bounds: EmptyBuiltinBounds(),\n-            trait_bounds: ~[trait_ref]\n-        };\n-\n         self.push_inherent_candidates_from_bounds(\n-            self_ty, &bounds, param_self);\n+            self_ty, &[trait_ref], param_self);\n     }\n \n     pub fn push_inherent_candidates_from_bounds(&self,\n                                                 self_ty: ty::t,\n-                                                bounds: &ParamBounds,\n+                                                bounds: &[@TraitRef],\n                                                 param: param_index) {\n         let tcx = self.tcx();\n         let mut next_bound_idx = 0; // count only trait bounds"}, {"sha": "07f82a5ef205f33daad41c7beb6875d8317cc18f", "filename": "src/librustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17e30d6b4ef5c6fb4d6257323903cba1213cae8f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17e30d6b4ef5c6fb4d6257323903cba1213cae8f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=17e30d6b4ef5c6fb4d6257323903cba1213cae8f", "patch": "@@ -132,7 +132,7 @@ fn lookup_vtables_for_param(vcx: &VtableContext,\n     let mut param_result = ~[];\n \n     for ty::each_bound_trait_and_supertraits(\n-        tcx, type_param_bounds) |trait_ref|\n+        tcx, type_param_bounds.trait_bounds) |trait_ref|\n     {\n         // ...and here trait_ref is each bound that was declared on A,\n         // expressed in terms of the type parameters.\n@@ -249,7 +249,7 @@ fn lookup_vtable(vcx: &VtableContext,\n             let mut n_bound = 0;\n             let type_param_def = tcx.ty_param_defs.get(&did.node);\n             for ty::each_bound_trait_and_supertraits(\n-                tcx, type_param_def.bounds) |bound_trait_ref|\n+                tcx, type_param_def.bounds.trait_bounds) |bound_trait_ref|\n             {\n                 debug!(\"checking bounds trait %s\", bound_trait_ref.repr(vcx.tcx()));\n "}]}