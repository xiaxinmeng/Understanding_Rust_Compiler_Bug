{"sha": "82860753463314e6a1b94f1f97d4d9c4effc0742", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyODYwNzUzNDYzMzE0ZTZhMWI5NGYxZjk3ZDRkOWM0ZWZmYzA3NDI=", "commit": {"author": {"name": "Tymoteusz Jankowski", "email": "tymoteusz.jankowski@gmail.com", "date": "2017-07-24T16:07:51Z"}, "committer": {"name": "Tymoteusz Jankowski", "email": "tymoteusz.jankowski@gmail.com", "date": "2017-07-24T16:07:51Z"}, "message": "ci fix?", "tree": {"sha": "2f619d0d7fde2720ec0adadf68bcc3b032d383ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f619d0d7fde2720ec0adadf68bcc3b032d383ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82860753463314e6a1b94f1f97d4d9c4effc0742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82860753463314e6a1b94f1f97d4d9c4effc0742", "html_url": "https://github.com/rust-lang/rust/commit/82860753463314e6a1b94f1f97d4d9c4effc0742", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82860753463314e6a1b94f1f97d4d9c4effc0742/comments", "author": null, "committer": null, "parents": [{"sha": "3c535952bc7df52b8b9becae26511fb6ccdab7b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c535952bc7df52b8b9becae26511fb6ccdab7b1", "html_url": "https://github.com/rust-lang/rust/commit/3c535952bc7df52b8b9becae26511fb6ccdab7b1"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "1610e89a82d73b5dfe918a0d2430ef1f5b97c50c", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/82860753463314e6a1b94f1f97d4d9c4effc0742/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82860753463314e6a1b94f1f97d4d9c4effc0742/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=82860753463314e6a1b94f1f97d4d9c4effc0742", "patch": "@@ -187,12 +187,9 @@ use ops::{Deref, DerefMut, CoerceUnsized};\n use ptr;\n \n /// A mutable memory location.\n-/// \n /// # Examples\n-/// \n /// Here you can see how using `Cell<T>` allows to use mutable field inside\n /// immutable struct (which is also called 'interior mutability').\n-/// \n /// ```\n /// use std::cell::Cell;\n ///\n@@ -207,10 +204,8 @@ use ptr;\n /// };\n ///\n /// let new_value = 100;\n-/// \n /// // ERROR, because my_struct is immutable\n /// // immutable.regular_field = new_value;\n-/// \n /// // WORKS, although `my_struct` is immutable, field `special_field` is mutable because it is Cell\n /// immutable.special_field.set(new_value);\n /// assert_eq!(immutable.special_field.get(), new_value);"}]}