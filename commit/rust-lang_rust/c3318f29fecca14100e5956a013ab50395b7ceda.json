{"sha": "c3318f29fecca14100e5956a013ab50395b7ceda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMzE4ZjI5ZmVjY2ExNDEwMGU1OTU2YTAxM2FiNTAzOTViN2NlZGE=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-23T09:45:59Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-23T16:00:19Z"}, "message": "(core::str) rename substr_len_bytes to substr_len, and delete unused byte_index[_from]", "tree": {"sha": "2fb5ecf7c9a438e11011ec1f48a7ce6ae2eebfdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fb5ecf7c9a438e11011ec1f48a7ce6ae2eebfdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3318f29fecca14100e5956a013ab50395b7ceda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3318f29fecca14100e5956a013ab50395b7ceda", "html_url": "https://github.com/rust-lang/rust/commit/c3318f29fecca14100e5956a013ab50395b7ceda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3318f29fecca14100e5956a013ab50395b7ceda/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7782f5d6926be7970ec474b74302f2298ceccd13", "url": "https://api.github.com/repos/rust-lang/rust/commits/7782f5d6926be7970ec474b74302f2298ceccd13", "html_url": "https://github.com/rust-lang/rust/commit/7782f5d6926be7970ec474b74302f2298ceccd13"}], "stats": {"total": 31, "additions": 5, "deletions": 26}, "files": [{"sha": "0d1172b3502cd668bd608d46f4d33384876fe3e1", "filename": "src/comp/syntax/codemap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3318f29fecca14100e5956a013ab50395b7ceda/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3318f29fecca14100e5956a013ab50395b7ceda/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fcodemap.rs?ref=c3318f29fecca14100e5956a013ab50395b7ceda", "patch": "@@ -171,7 +171,7 @@ fn lookup_byte_offset(cm: codemap::codemap, chpos: uint)\n     let {fm,line} = lookup_line(cm,chpos,lookup);\n     let line_offset = fm.lines[line].byte - fm.start_pos.byte;\n     let col = chpos - fm.lines[line].ch;\n-    let col_offset = str::substr_len_bytes(*fm.src, line_offset, col);\n+    let col_offset = str::substr_len(*fm.src, line_offset, col);\n     ret {fm: fm, pos: line_offset + col_offset};\n }\n "}, {"sha": "e4df5bafad6e3ac8897d6a12c121e0f47c381337", "filename": "src/libcore/str.rs", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c3318f29fecca14100e5956a013ab50395b7ceda/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3318f29fecca14100e5956a013ab50395b7ceda/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=c3318f29fecca14100e5956a013ab50395b7ceda", "patch": "@@ -93,7 +93,7 @@ export\n    // Misc\n    // FIXME: perhaps some more of this section shouldn't be exported?\n    is_utf8,\n-   substr_len_bytes,\n+   substr_len,\n    substr_len_chars,\n    utf8_char_width,\n    char_range_at,\n@@ -914,27 +914,6 @@ fn index_chars(ss: str, cc: char) -> option<uint> {\n     ret none;\n }\n \n-// Function: byte_index\n-//\n-// Returns the index of the first matching byte\n-// (as option some/none)\n-// FIXME: delete\n-fn byte_index(s: str, b: u8) -> option<uint> {\n-    byte_index_from(s, b, 0u, len(s))\n-}\n-\n-// Function: byte_index_from\n-//\n-// Returns the index of the first matching byte within the range [`start`,\n-// `end`).\n-// (as option some/none)\n-// FIXME: delete\n-fn byte_index_from(s: str, b: u8, start: uint, end: uint) -> option<uint> {\n-    assert end <= len(s);\n-\n-    str::as_bytes(s) { |v| vec::position_from(v, start, end) { |x| x == b } }\n-}\n-\n // Function: rindex\n //\n // Returns the byte index of the first matching char"}, {"sha": "10144cc97315134c905eea17db75e64332792874", "filename": "src/libstd/rope.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c3318f29fecca14100e5956a013ab50395b7ceda/src%2Flibstd%2Frope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3318f29fecca14100e5956a013ab50395b7ceda/src%2Flibstd%2Frope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frope.rs?ref=c3318f29fecca14100e5956a013ab50395b7ceda", "patch": "@@ -795,7 +795,7 @@ mod node {\n                     if i == 0u  { first_leaf_char_len }\n                     else { hint_max_leaf_char_len };\n                 let chunk_byte_len =\n-                    str::substr_len_bytes(*str, offset, chunk_char_len);\n+                    str::substr_len(*str, offset, chunk_char_len);\n                 nodes[i] = @leaf({\n                     byte_offset: offset,\n                     byte_len:    chunk_byte_len,\n@@ -1059,9 +1059,9 @@ mod node {\n                     ret node;\n                 }\n                 let byte_offset =\n-                    str::substr_len_bytes(*x.content, 0u, char_offset);\n+                    str::substr_len(*x.content, 0u, char_offset);\n                 let byte_len    =\n-                    str::substr_len_bytes(*x.content, byte_offset, char_len);\n+                    str::substr_len(*x.content, byte_offset, char_len);\n                 ret @leaf({byte_offset: byte_offset,\n                            byte_len:    byte_len,\n                            char_len:    char_len,"}]}