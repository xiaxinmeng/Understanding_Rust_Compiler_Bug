{"sha": "996759434610a151c71476ab85305bfcf2d6d5e7", "node_id": "C_kwDOAAsO6NoAKDk5Njc1OTQzNDYxMGExNTFjNzE0NzZhYjg1MzA1YmZjZjJkNmQ1ZTc", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-03-27T21:55:59Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-03-27T23:45:24Z"}, "message": "Ignore doc comments in a declarative macro matcher.\n\nFixes #95267. Reverts to the old behaviour before #95159 introduced a\nregression.", "tree": {"sha": "70c79f9cec5673a5bb5e7cd434c210aea3b0da31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70c79f9cec5673a5bb5e7cd434c210aea3b0da31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/996759434610a151c71476ab85305bfcf2d6d5e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/996759434610a151c71476ab85305bfcf2d6d5e7", "html_url": "https://github.com/rust-lang/rust/commit/996759434610a151c71476ab85305bfcf2d6d5e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/996759434610a151c71476ab85305bfcf2d6d5e7/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a0c55046c7092d9e019dad03729e8d32e38df72", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a0c55046c7092d9e019dad03729e8d32e38df72", "html_url": "https://github.com/rust-lang/rust/commit/8a0c55046c7092d9e019dad03729e8d32e38df72"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "0417bea35947f4ec485d50c16c73e4474a7faea6", "filename": "compiler/rustc_expand/src/mbe/macro_parser.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/996759434610a151c71476ab85305bfcf2d6d5e7/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/996759434610a151c71476ab85305bfcf2d6d5e7/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs?ref=996759434610a151c71476ab85305bfcf2d6d5e7", "patch": "@@ -519,13 +519,14 @@ impl<'tt> TtParser<'tt> {\n                     }\n \n                     TokenTree::Token(t) => {\n-                        // Doc comments cannot appear in a matcher.\n-                        debug_assert!(!matches!(t, Token { kind: DocComment(..), .. }));\n-\n-                        // If the token matches, we can just advance the parser. Otherwise, this\n-                        // match hash failed, there is nothing to do, and hopefully another item in\n-                        // `cur_items` will match.\n-                        if token_name_eq(&t, token) {\n+                        // If it's a doc comment, we just ignore it and move on to the next tt in\n+                        // the matcher. If the token matches, we can just advance the parser.\n+                        // Otherwise, this match has failed, there is nothing to do, and hopefully\n+                        // another item in `cur_items` will match.\n+                        if matches!(t, Token { kind: DocComment(..), .. }) {\n+                            item.idx += 1;\n+                            self.cur_items.push(item);\n+                        } else if token_name_eq(&t, token) {\n                             item.idx += 1;\n                             self.next_items.push(item);\n                         }"}, {"sha": "4d59c7ea5e9d7585aecc43dffaf494bf460fd4a5", "filename": "src/test/ui/macros/issue-95267.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/996759434610a151c71476ab85305bfcf2d6d5e7/src%2Ftest%2Fui%2Fmacros%2Fissue-95267.rs", "raw_url": "https://github.com/rust-lang/rust/raw/996759434610a151c71476ab85305bfcf2d6d5e7/src%2Ftest%2Fui%2Fmacros%2Fissue-95267.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-95267.rs?ref=996759434610a151c71476ab85305bfcf2d6d5e7", "patch": "@@ -0,0 +1,13 @@\n+// check-pass\n+\n+// This is a valid macro. Commit 4 in #95159 broke things such that it failed\n+// with a \"missing tokens in macro arguments\" error, as reported in #95267.\n+macro_rules! f {\n+    (\n+        /// ab\n+    ) => {};\n+}\n+\n+fn main() {\n+    f!();\n+}"}]}