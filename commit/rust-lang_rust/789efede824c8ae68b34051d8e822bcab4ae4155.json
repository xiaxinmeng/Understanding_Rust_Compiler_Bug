{"sha": "789efede824c8ae68b34051d8e822bcab4ae4155", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4OWVmZWRlODI0YzhhZTY4YjM0MDUxZDhlODIyYmNhYjRhZTQxNTU=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-01-22T22:15:38Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-01-26T13:48:03Z"}, "message": "Add failing test case", "tree": {"sha": "0861e2c6ad6eef00d327ccc07ae367fe44ba11db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0861e2c6ad6eef00d327ccc07ae367fe44ba11db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/789efede824c8ae68b34051d8e822bcab4ae4155", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/789efede824c8ae68b34051d8e822bcab4ae4155", "html_url": "https://github.com/rust-lang/rust/commit/789efede824c8ae68b34051d8e822bcab4ae4155", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/789efede824c8ae68b34051d8e822bcab4ae4155/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0f2e1560fd1073c20c61cd0ab232be241f1121e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0f2e1560fd1073c20c61cd0ab232be241f1121e", "html_url": "https://github.com/rust-lang/rust/commit/e0f2e1560fd1073c20c61cd0ab232be241f1121e"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "4964ddc7d60a8462bad71b68d3a9dec25a4eb370", "filename": "crates/assists/src/handlers/fill_match_arms.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/789efede824c8ae68b34051d8e822bcab4ae4155/crates%2Fassists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/789efede824c8ae68b34051d8e822bcab4ae4155/crates%2Fassists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs?ref=789efede824c8ae68b34051d8e822bcab4ae4155", "patch": "@@ -271,6 +271,34 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn partial_fill_option() {\n+        check_assist(\n+            fill_match_arms,\n+            r#\"\n+enum Option<T> { Some(T), None }\n+use Option::*;\n+\n+fn main() {\n+    match None$0 {\n+        None => {}\n+    }\n+}\n+            \"#,\n+            r#\"\n+enum Option<T> { Some(T), None }\n+use Option::*;\n+\n+fn main() {\n+    match None {\n+        None => {}\n+        Some(${0:_}) => {}\n+    }\n+}\n+            \"#,\n+        );\n+    }\n+\n     #[test]\n     fn partial_fill_or_pat() {\n         check_assist("}]}