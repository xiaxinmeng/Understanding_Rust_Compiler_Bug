{"sha": "6443873821d229c4e3f2d55a08f4739c9992fb17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NDM4NzM4MjFkMjI5YzRlM2YyZDU1YTA4ZjQ3MzljOTk5MmZiMTc=", "commit": {"author": {"name": "Lukas H", "email": "lukaramu@users.noreply.github.com", "date": "2017-11-10T19:58:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-10T19:58:03Z"}, "message": "Fix broken link markup in Hasher::finish docs\n\nThere were apostrophes when there needed to be backticks.", "tree": {"sha": "f24a20e677b6bc501766b82bffa0a190f06f74e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f24a20e677b6bc501766b82bffa0a190f06f74e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6443873821d229c4e3f2d55a08f4739c9992fb17", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaBgTLCRBK7hj4Ov3rIwAAdHIIAAcyqwqhfOdJABLkxtoN4qTe\nOirpo+TosdeB6KdNJhaP1wMftKFNLpoRoLCPWtBbzzFhr2avtHm7mYNS8W0VvJQk\nXvAwNugTM2iLW618CDqFmu8lqFpxb0oucnpibtsAA5/6XLKx+g+grqdAbPOhpxzH\ns7CGqwluOpHjdhV1FxPV500/X6HRpX7OwUzEraIK/2T3vpxbIxSVd9AlrnADyZSL\nDPLO//UHppMZsI6uW+eG3d7KyE2RCytGpVkJa7dY5N1zHdfyZIN17zQj6/+uO3Lj\n+4AdJIRLLc9mOro9fZmgP9KIsH4nsZS6CDfjPkVBTyj9aUmEG6JWGloxZAR2RXI=\n=BcwG\n-----END PGP SIGNATURE-----\n", "payload": "tree f24a20e677b6bc501766b82bffa0a190f06f74e0\nparent 75d25acd977085e6ae01d6a5c56cbbfc97463f89\nauthor Lukas H <lukaramu@users.noreply.github.com> 1510343883 +0100\ncommitter GitHub <noreply@github.com> 1510343883 +0100\n\nFix broken link markup in Hasher::finish docs\n\nThere were apostrophes when there needed to be backticks."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6443873821d229c4e3f2d55a08f4739c9992fb17", "html_url": "https://github.com/rust-lang/rust/commit/6443873821d229c4e3f2d55a08f4739c9992fb17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6443873821d229c4e3f2d55a08f4739c9992fb17/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75d25acd977085e6ae01d6a5c56cbbfc97463f89", "url": "https://api.github.com/repos/rust-lang/rust/commits/75d25acd977085e6ae01d6a5c56cbbfc97463f89", "html_url": "https://github.com/rust-lang/rust/commit/75d25acd977085e6ae01d6a5c56cbbfc97463f89"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "15545a04b64de04e7b37e8115ad8d6b491a92cd4", "filename": "src/libcore/hash/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6443873821d229c4e3f2d55a08f4739c9992fb17/src%2Flibcore%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6443873821d229c4e3f2d55a08f4739c9992fb17/src%2Flibcore%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fmod.rs?ref=6443873821d229c4e3f2d55a08f4739c9992fb17", "patch": "@@ -259,7 +259,7 @@ pub trait Hasher {\n     /// println!(\"Hash is {:x}!\", hasher.finish());\n     /// ```\n     ///\n-    /// ['write']: #tymethod.write\n+    /// [`write`]: #tymethod.write\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn finish(&self) -> u64;\n "}]}