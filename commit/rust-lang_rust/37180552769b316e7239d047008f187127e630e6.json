{"sha": "37180552769b316e7239d047008f187127e630e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3MTgwNTUyNzY5YjMxNmU3MjM5ZDA0NzAwOGYxODcxMjdlNjMwZTY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-26T03:47:16Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-26T03:47:16Z"}, "message": "Align emitted DATA_* elements -- tydescs in particular -- to 16 byte boundaries, so we can get our tag bit freed up.", "tree": {"sha": "aad9385cf2d4d6b0d78c7d5e179ab50ad7e42cc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aad9385cf2d4d6b0d78c7d5e179ab50ad7e42cc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37180552769b316e7239d047008f187127e630e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37180552769b316e7239d047008f187127e630e6", "html_url": "https://github.com/rust-lang/rust/commit/37180552769b316e7239d047008f187127e630e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37180552769b316e7239d047008f187127e630e6/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd2716f56c7cf55f2904fbbf4dfabaab1afbcd88", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd2716f56c7cf55f2904fbbf4dfabaab1afbcd88", "html_url": "https://github.com/rust-lang/rust/commit/dd2716f56c7cf55f2904fbbf4dfabaab1afbcd88"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "98bf6bab26406eb3e858030022de86efe13b5baa", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/37180552769b316e7239d047008f187127e630e6/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/37180552769b316e7239d047008f187127e630e6/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=37180552769b316e7239d047008f187127e630e6", "patch": "@@ -1016,6 +1016,9 @@ let trans_visitor\n         let (cell, _) = trans_lval flv in\n           (Il.Cell cell, fty)\n \n+  and align x =\n+    Asm.ALIGN_FILE (16, Asm.ALIGN_MEM(16, x))\n+\n   and trans_crate_rel_data_operand\n       (d:data)\n       (thunk:unit -> Asm.frag)\n@@ -1025,7 +1028,7 @@ let trans_visitor\n         begin\n           fun _ ->\n             let fix = new_fixup \"data item\" in\n-            let frag = Asm.DEF (fix, thunk()) in\n+            let frag = align (Asm.DEF (fix, thunk())) in\n               (fix, frag)\n         end\n     in\n@@ -1037,7 +1040,7 @@ let trans_visitor\n         begin\n           fun _ ->\n             let fix = new_fixup \"data item\" in\n-            let frag = Asm.DEF (fix, thunk()) in\n+            let frag = align (Asm.DEF (fix, thunk())) in\n               (fix, frag)\n         end\n     in"}]}