{"sha": "d13d74d6d8af151a319d71b1add12b6b22ef8812", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxM2Q3NGQ2ZDhhZjE1MWEzMTlkNzFiMWFkZDEyYjZiMjJlZjg4MTI=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-02-15T14:01:47Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-02-16T15:13:48Z"}, "message": "tests: work around #21721 some more by replacing some unit types with [u8; 0].", "tree": {"sha": "91c64f368de07e6c786be31a365fb042bbffde68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91c64f368de07e6c786be31a365fb042bbffde68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d13d74d6d8af151a319d71b1add12b6b22ef8812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d13d74d6d8af151a319d71b1add12b6b22ef8812", "html_url": "https://github.com/rust-lang/rust/commit/d13d74d6d8af151a319d71b1add12b6b22ef8812", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d13d74d6d8af151a319d71b1add12b6b22ef8812/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36fcfb02e2882bc67dde1bfee1b79bbcacce5f80", "url": "https://api.github.com/repos/rust-lang/rust/commits/36fcfb02e2882bc67dde1bfee1b79bbcacce5f80", "html_url": "https://github.com/rust-lang/rust/commit/36fcfb02e2882bc67dde1bfee1b79bbcacce5f80"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "f4d3e975b75b9e25d187a4fe64e8c86a1608c9eb", "filename": "src/librand/reseeding.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d13d74d6d8af151a319d71b1add12b6b22ef8812/src%2Flibrand%2Freseeding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d13d74d6d8af151a319d71b1add12b6b22ef8812/src%2Flibrand%2Freseeding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Freseeding.rs?ref=d13d74d6d8af151a319d71b1add12b6b22ef8812", "patch": "@@ -134,7 +134,11 @@ pub trait Reseeder<R> {\n /// Reseed an RNG using a `Default` instance. This reseeds by\n /// replacing the RNG with the result of a `Default::default` call.\n #[derive(Copy)]\n-pub struct ReseedWithDefault;\n+pub struct ReseedWithDefault { __hack: [u8; 0] }\n+// FIXME(#21721) used to be an unit struct but that can cause\n+// certain LLVM versions to abort during optimizations.\n+#[allow(non_upper_case_globals)]\n+pub const ReseedWithDefault: ReseedWithDefault = ReseedWithDefault { __hack: [] };\n \n impl<R: Rng + Default> Reseeder<R> for ReseedWithDefault {\n     fn reseed(&mut self, rng: &mut R) {"}, {"sha": "c45efe5f54b2cc9ed4d1a54a177b7139990bd221", "filename": "src/test/bench/task-perf-alloc-unwind.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d13d74d6d8af151a319d71b1add12b6b22ef8812/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d13d74d6d8af151a319d71b1add12b6b22ef8812/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs?ref=d13d74d6d8af151a319d71b1add12b6b22ef8812", "patch": "@@ -40,7 +40,9 @@ fn run(repeat: int, depth: int) {\n     }\n }\n \n-type nillist = List<()>;\n+// FIXME(#21721) used to be `List<()>` but that can cause\n+// certain LLVM versions to abort during optimizations.\n+type nillist = List<[u8; 0]>;\n \n // Filled with things that have to be unwound\n \n@@ -81,11 +83,11 @@ fn recurse_or_panic(depth: int, st: Option<State>) {\n             }\n             Some(st) => {\n                 let mut v = st.vec.clone();\n-                v.push_all(&[box List::Cons((), st.vec.last().unwrap().clone())]);\n+                v.push_all(&[box List::Cons([], st.vec.last().unwrap().clone())]);\n                 State {\n-                    unique: box List::Cons((), box *st.unique),\n+                    unique: box List::Cons([], box *st.unique),\n                     vec: v,\n-                    res: r(box List::Cons((), st.res._l.clone())),\n+                    res: r(box List::Cons([], st.res._l.clone())),\n                 }\n             }\n         };"}]}