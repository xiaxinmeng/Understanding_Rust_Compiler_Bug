{"sha": "8939fe60a1980dc097da19e6de32df51c18944bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MzlmZTYwYTE5ODBkYzA5N2RhMTllNmRlMzJkZjUxYzE4OTQ0YmI=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2018-05-31T17:21:34Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2018-05-31T17:21:34Z"}, "message": "Rename bytes -> bits", "tree": {"sha": "1f2d824c2cb89ea36e71bd5bf7802f94a996a875", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f2d824c2cb89ea36e71bd5bf7802f94a996a875"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8939fe60a1980dc097da19e6de32df51c18944bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8939fe60a1980dc097da19e6de32df51c18944bb", "html_url": "https://github.com/rust-lang/rust/commit/8939fe60a1980dc097da19e6de32df51c18944bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8939fe60a1980dc097da19e6de32df51c18944bb/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d7d5e994fca984a71303b170acc24cfbd26474a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d7d5e994fca984a71303b170acc24cfbd26474a", "html_url": "https://github.com/rust-lang/rust/commit/0d7d5e994fca984a71303b170acc24cfbd26474a"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "49ad134e5936203d8ed5bb296a349bb6eac7cf07", "filename": "src/librustc_mir/interpret/const_eval.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8939fe60a1980dc097da19e6de32df51c18944bb/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8939fe60a1980dc097da19e6de32df51c18944bb/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs?ref=8939fe60a1980dc097da19e6de32df51c18944bb", "patch": "@@ -593,20 +593,20 @@ pub fn const_eval_provider<'a, 'tcx>(\n \n fn numeric_intrinsic<'tcx>(\n     name: &str,\n-    bytes: u128,\n+    bits: u128,\n     kind: Primitive,\n ) -> EvalResult<'tcx, Scalar> {\n     let defined = match kind {\n         Primitive::Int(integer, _) => integer.size().bits() as u8,\n-        _ => bug!(\"invalid `{}` argument: {:?}\", name, bytes),\n+        _ => bug!(\"invalid `{}` argument: {:?}\", name, bits),\n     };\n     let extra = 128 - defined as u128;\n-    let bytes_out = match name {\n-        \"ctpop\" => bytes.count_ones() as u128,\n-        \"ctlz\" => bytes.leading_zeros() as u128 - extra,\n-        \"cttz\" => (bytes << extra).trailing_zeros() as u128 - extra,\n-        \"bswap\" => (bytes << extra).swap_bytes(),\n+    let bits_out = match name {\n+        \"ctpop\" => bits.count_ones() as u128,\n+        \"ctlz\" => bits.leading_zeros() as u128 - extra,\n+        \"cttz\" => (bits << extra).trailing_zeros() as u128 - extra,\n+        \"bswap\" => (bits << extra).swap_bytes(),\n         _ => bug!(\"not a numeric intrinsic: {}\", name),\n     };\n-    Ok(Scalar::Bits { bits: bytes_out, defined })\n+    Ok(Scalar::Bits { bits: bits_out, defined })\n }"}]}