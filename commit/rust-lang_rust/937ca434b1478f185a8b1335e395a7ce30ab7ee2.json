{"sha": "937ca434b1478f185a8b1335e395a7ce30ab7ee2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzN2NhNDM0YjE0NzhmMTg1YThiMTMzNWUzOTVhN2NlMzBhYjdlZTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-21T04:33:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-21T04:33:35Z"}, "message": "Rollup merge of #70189 - RalfJung:is_signed, r=eddyb\n\nAbi::is_signed: assert that we are a Scalar\n\nA bit more sanity checking, suggested by @eddyb. This makes this method actually \"safer\" than `TyS::is_signed`, so I made sure Miri consistently uses the `Abi` version.\n\nThough I am not sure if this would have caught the mistake where the layout of a zero-sized enum was asked for its sign.\n\nr? @eddyb", "tree": {"sha": "0f86fccc504dfed748bab4fdf522c99b8f3dd112", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f86fccc504dfed748bab4fdf522c99b8f3dd112"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/937ca434b1478f185a8b1335e395a7ce30ab7ee2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJedZkfCRBK7hj4Ov3rIwAAdHIIAH6F519fzYyEpBVVUHZGYGuC\nilzAm/IwO2A5xrSnDqpkFQSFfT/sLdadFqJ+zGJae1Uu93fSEE+FdjXLtcDvBTMV\nfI9wkq4mdhU0j3t58nwkEB58YFm41zKXJtbhpyh7nUegK7wfiqQYwcNq7W/llX5r\nE7rdQfFK3XofG7KNXHcXTAaAFi52h661mjHB+trC7obem+CV8OQ5Tlng1cYEk4qx\n4tk0LfkKnA17i4u4BS+Cim9MIrsdTKmKzrF9WJUXhFJSkCiXBz/PaYKSCEiYfX3L\n03jDHeUX0Ohp3Fo4VHuHcF1DNoJtlvdv11LsdZwgQqLh3JVuTjStTeKg6MdLd1s=\n=VFpI\n-----END PGP SIGNATURE-----\n", "payload": "tree 0f86fccc504dfed748bab4fdf522c99b8f3dd112\nparent 832daf720a34c87d67c9c7b40fda03a1138f314b\nparent 5930da446562ed51f4a3551cf81525e296bc8665\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1584765215 +0100\ncommitter GitHub <noreply@github.com> 1584765215 +0100\n\nRollup merge of #70189 - RalfJung:is_signed, r=eddyb\n\nAbi::is_signed: assert that we are a Scalar\n\nA bit more sanity checking, suggested by @eddyb. This makes this method actually \"safer\" than `TyS::is_signed`, so I made sure Miri consistently uses the `Abi` version.\n\nThough I am not sure if this would have caught the mistake where the layout of a zero-sized enum was asked for its sign.\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/937ca434b1478f185a8b1335e395a7ce30ab7ee2", "html_url": "https://github.com/rust-lang/rust/commit/937ca434b1478f185a8b1335e395a7ce30ab7ee2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/937ca434b1478f185a8b1335e395a7ce30ab7ee2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "832daf720a34c87d67c9c7b40fda03a1138f314b", "url": "https://api.github.com/repos/rust-lang/rust/commits/832daf720a34c87d67c9c7b40fda03a1138f314b", "html_url": "https://github.com/rust-lang/rust/commit/832daf720a34c87d67c9c7b40fda03a1138f314b"}, {"sha": "5930da446562ed51f4a3551cf81525e296bc8665", "url": "https://api.github.com/repos/rust-lang/rust/commits/5930da446562ed51f4a3551cf81525e296bc8665", "html_url": "https://github.com/rust-lang/rust/commit/5930da446562ed51f4a3551cf81525e296bc8665"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4c82172ae4517cb1958bdd4254c978f0e2c7381e", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/937ca434b1478f185a8b1335e395a7ce30ab7ee2/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937ca434b1478f185a8b1335e395a7ce30ab7ee2/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=937ca434b1478f185a8b1335e395a7ce30ab7ee2", "patch": "@@ -604,7 +604,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     .not_undef()\n                     .and_then(|raw_discr| self.force_bits(raw_discr, discr_val.layout.size))\n                     .map_err(|_| err_ub!(InvalidDiscriminant(raw_discr.erase_tag())))?;\n-                let real_discr = if discr_val.layout.ty.is_signed() {\n+                let real_discr = if discr_val.layout.abi.is_signed() {\n                     // going from layout tag type to typeck discriminant type\n                     // requires first sign extending with the discriminant layout\n                     let sexted = sign_extend(bits_discr, discr_val.layout.size) as i128;"}, {"sha": "635fb80b659801f503e9b0808912342dc67a365c", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/937ca434b1478f185a8b1335e395a7ce30ab7ee2/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937ca434b1478f185a8b1335e395a7ce30ab7ee2/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=937ca434b1478f185a8b1335e395a7ce30ab7ee2", "patch": "@@ -751,7 +751,7 @@ impl Abi {\n                 Primitive::Int(_, signed) => signed,\n                 _ => false,\n             },\n-            _ => false,\n+            _ => panic!(\"`is_signed` on non-scalar ABI {:?}\", self),\n         }\n     }\n "}]}