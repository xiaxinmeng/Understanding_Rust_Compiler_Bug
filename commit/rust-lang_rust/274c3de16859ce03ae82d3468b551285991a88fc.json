{"sha": "274c3de16859ce03ae82d3468b551285991a88fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NGMzZGUxNjg1OWNlMDNhZTgyZDM0NjhiNTUxMjg1OTkxYTg4ZmM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-27T21:01:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-27T21:01:10Z"}, "message": "Rollup merge of #62152 - doctorn:async_let_ice, r=cramertj\n\nDon't ICE on item in `.await` expression\n\nThe code for lowering a `.await` expression missed that item IDs may already have been assigned for items inside of an `async` block, or for closures. This change means we no longer exit early after finding a `.await` in a block that isn't `async` and instead just emit the error. This avoids an ICE generated due to item IDs not being densely generated. (The `YieldSource` of the generated `yield` expression is  used to avoid errors generated about having `yield` expressions outside of generator literals.)\n\nr? @cramertj\n\nResolves #62009 and resolves #61685", "tree": {"sha": "bd3f1bf5aafcbcafbf04c43922511711c88b5c9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd3f1bf5aafcbcafbf04c43922511711c88b5c9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/274c3de16859ce03ae82d3468b551285991a88fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdFS6WCRBK7hj4Ov3rIwAAdHIIAFw//JSZk2eaE+zVAvaZNfDZ\nME/QOpaYGbB9yBWKKw8ejBvL+f0tZOFHJ83bP1nBkrbiK0eDyepfbOIZU8yXiL9D\nthHCYkhKvmfHeO50QMEyOwTxVEpk3AL9CMvDjjYXjvbpufsyYmYU1j5AtkUO8U7O\n2bf3jSG0yAm9e4evhpzpFDa5YBq/zrPaWBV6xCbUoS6oMXjCszDy5L1Ym4op/r70\neFHM0FiE+Nzf8PZ/CFMg6LreZPwn0BEfl2m+M6b6dLAwbsgWII0n3Wh27kLfau8b\numIzi/yH/hYyDTKIiNz0zs6hMZzWE1bD43uXKuQw0A+Q0TovjnrVE/FdZPQhSY8=\n=sJQX\n-----END PGP SIGNATURE-----\n", "payload": "tree bd3f1bf5aafcbcafbf04c43922511711c88b5c9d\nparent 4aa3e27231a705e1aea4347ae78698c81438f1f4\nparent 5cb841d72e70f92fc4318833db4824d07ab4c911\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1561669270 +0200\ncommitter GitHub <noreply@github.com> 1561669270 +0200\n\nRollup merge of #62152 - doctorn:async_let_ice, r=cramertj\n\nDon't ICE on item in `.await` expression\n\nThe code for lowering a `.await` expression missed that item IDs may already have been assigned for items inside of an `async` block, or for closures. This change means we no longer exit early after finding a `.await` in a block that isn't `async` and instead just emit the error. This avoids an ICE generated due to item IDs not being densely generated. (The `YieldSource` of the generated `yield` expression is  used to avoid errors generated about having `yield` expressions outside of generator literals.)\n\nr? @cramertj\n\nResolves #62009 and resolves #61685\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/274c3de16859ce03ae82d3468b551285991a88fc", "html_url": "https://github.com/rust-lang/rust/commit/274c3de16859ce03ae82d3468b551285991a88fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/274c3de16859ce03ae82d3468b551285991a88fc/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aa3e27231a705e1aea4347ae78698c81438f1f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4aa3e27231a705e1aea4347ae78698c81438f1f4", "html_url": "https://github.com/rust-lang/rust/commit/4aa3e27231a705e1aea4347ae78698c81438f1f4"}, {"sha": "5cb841d72e70f92fc4318833db4824d07ab4c911", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cb841d72e70f92fc4318833db4824d07ab4c911", "html_url": "https://github.com/rust-lang/rust/commit/5cb841d72e70f92fc4318833db4824d07ab4c911"}], "stats": {"total": 98, "additions": 89, "deletions": 9}, "files": [{"sha": "9c4a208f0f9fc92fb4e193ab508918d06097b3ae", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/274c3de16859ce03ae82d3468b551285991a88fc/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274c3de16859ce03ae82d3468b551285991a88fc/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=274c3de16859ce03ae82d3468b551285991a88fc", "patch": "@@ -5795,7 +5795,6 @@ impl<'a> LoweringContext<'a> {\n                     err.span_label(item_sp, \"this is not `async`\");\n                 }\n                 err.emit();\n-                return hir::ExprKind::Err;\n             }\n         }\n         let span = self.mark_span_with_reason("}, {"sha": "6df1c2d8c77e5e3a69e7018622165f61b380196e", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274c3de16859ce03ae82d3468b551285991a88fc/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274c3de16859ce03ae82d3468b551285991a88fc/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=274c3de16859ce03ae82d3468b551285991a88fc", "patch": "@@ -1713,7 +1713,7 @@ pub enum GeneratorMovability {\n }\n \n /// The yield kind that caused an `ExprKind::Yield`.\n-#[derive(Copy, Clone, Debug, RustcEncodable, RustcDecodable, HashStable)]\n+#[derive(Copy, Clone, PartialEq, Eq, Debug, RustcEncodable, RustcDecodable, HashStable)]\n pub enum YieldSource {\n     /// An `<expr>.await`.\n     Await,"}, {"sha": "21fa219a1cab27ee1e63baeb361eb68406834bfb", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/274c3de16859ce03ae82d3468b551285991a88fc/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274c3de16859ce03ae82d3468b551285991a88fc/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=274c3de16859ce03ae82d3468b551285991a88fc", "patch": "@@ -295,8 +295,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             ExprKind::Index(ref base, ref idx) => {\n                 self.check_expr_index(base, idx, needs, expr)\n             }\n-            ExprKind::Yield(ref value, _) => {\n-                self.check_expr_yield(value, expr)\n+            ExprKind::Yield(ref value, ref src) => {\n+                self.check_expr_yield(value, expr, src)\n             }\n             hir::ExprKind::Err => {\n                 tcx.types.err\n@@ -1541,12 +1541,24 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n-    fn check_expr_yield(&self, value: &'tcx hir::Expr, expr: &'tcx hir::Expr) -> Ty<'tcx> {\n+    fn check_expr_yield(\n+        &self,\n+        value: &'tcx hir::Expr,\n+        expr: &'tcx hir::Expr,\n+        src: &'tcx hir::YieldSource\n+    ) -> Ty<'tcx> {\n         match self.yield_ty {\n             Some(ty) => {\n                 self.check_expr_coercable_to_type(&value, ty);\n             }\n-            None => {\n+            // Given that this `yield` expression was generated as a result of lowering a `.await`,\n+            // we know that the yield type must be `()`; however, the context won't contain this\n+            // information. Hence, we check the source of the yield expression here and check its\n+            // value's type against `()` (this check should always hold).\n+            None if src == &hir::YieldSource::Await => {\n+                self.check_expr_coercable_to_type(&value, self.tcx.mk_unit());\n+            }\n+            _ => {\n                 struct_span_err!(self.tcx.sess, expr.span, E0627,\n                                     \"yield statement outside of generator literal\").emit();\n             }"}, {"sha": "361a49c2774ecc778ee087732591d1b10d081345", "filename": "src/test/ui/async-await/issues/issue-51719.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/274c3de16859ce03ae82d3468b551285991a88fc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51719.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274c3de16859ce03ae82d3468b551285991a88fc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51719.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51719.rs?ref=274c3de16859ce03ae82d3468b551285991a88fc", "patch": "@@ -7,7 +7,8 @@\n async fn foo() {}\n \n fn make_generator() {\n-    let _gen = || foo.await; //~ ERROR `await` is only allowed inside `async` functions and blocks\n+    let _gen = || foo().await;\n+    //~^ ERROR `await` is only allowed inside `async` functions and blocks\n }\n \n fn main() {}"}, {"sha": "2a9fb6cf0df6e511be761d89149d2b8fc97b9144", "filename": "src/test/ui/async-await/issues/issue-51719.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274c3de16859ce03ae82d3468b551285991a88fc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51719.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274c3de16859ce03ae82d3468b551285991a88fc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51719.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51719.stderr?ref=274c3de16859ce03ae82d3468b551285991a88fc", "patch": "@@ -1,8 +1,8 @@\n error[E0728]: `await` is only allowed inside `async` functions and blocks\n   --> $DIR/issue-51719.rs:10:19\n    |\n-LL |     let _gen = || foo.await;\n-   |                -- ^^^^^^^^^ only allowed inside `async` functions and blocks\n+LL |     let _gen = || foo().await;\n+   |                -- ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n    |                |\n    |                this is not `async`\n "}, {"sha": "e2d58cac24d941a8b9663c1b60a04e9114f4dcd0", "filename": "src/test/ui/async-await/issues/issue-62009.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/274c3de16859ce03ae82d3468b551285991a88fc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274c3de16859ce03ae82d3468b551285991a88fc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009.rs?ref=274c3de16859ce03ae82d3468b551285991a88fc", "patch": "@@ -0,0 +1,19 @@\n+// edition:2018\n+\n+#![feature(async_await)]\n+\n+async fn print_dur() {}\n+\n+fn main() {\n+    async { let (); }.await;\n+    //~^ ERROR `await` is only allowed inside `async` functions and blocks\n+    async {\n+    //~^ ERROR `await` is only allowed inside `async` functions and blocks\n+        let task1 = print_dur().await;\n+    }.await;\n+    (async || 2333)().await;\n+    //~^ ERROR `await` is only allowed inside `async` functions and blocks\n+    (|_| 2333).await;\n+    //~^ ERROR `await` is only allowed inside `async` functions and blocks\n+    //~^^ ERROR\n+}"}, {"sha": "53d1f34fe4f9b79f2d2f3cfbee10224e173cba7c", "filename": "src/test/ui/async-await/issues/issue-62009.stderr", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/274c3de16859ce03ae82d3468b551285991a88fc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274c3de16859ce03ae82d3468b551285991a88fc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009.stderr?ref=274c3de16859ce03ae82d3468b551285991a88fc", "patch": "@@ -0,0 +1,49 @@\n+error[E0728]: `await` is only allowed inside `async` functions and blocks\n+  --> $DIR/issue-62009.rs:8:5\n+   |\n+LL | fn main() {\n+   |    ---- this is not `async`\n+LL |     async { let (); }.await;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n+\n+error[E0728]: `await` is only allowed inside `async` functions and blocks\n+  --> $DIR/issue-62009.rs:10:5\n+   |\n+LL |   fn main() {\n+   |      ---- this is not `async`\n+...\n+LL | /     async {\n+LL | |\n+LL | |         let task1 = print_dur().await;\n+LL | |     }.await;\n+   | |___________^ only allowed inside `async` functions and blocks\n+\n+error[E0728]: `await` is only allowed inside `async` functions and blocks\n+  --> $DIR/issue-62009.rs:14:5\n+   |\n+LL | fn main() {\n+   |    ---- this is not `async`\n+...\n+LL |     (async || 2333)().await;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n+\n+error[E0728]: `await` is only allowed inside `async` functions and blocks\n+  --> $DIR/issue-62009.rs:16:5\n+   |\n+LL | fn main() {\n+   |    ---- this is not `async`\n+...\n+LL |     (|_| 2333).await;\n+   |     ^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n+\n+error[E0277]: the trait bound `[closure@$DIR/issue-62009.rs:16:5: 16:15]: std::future::Future` is not satisfied\n+  --> $DIR/issue-62009.rs:16:5\n+   |\n+LL |     (|_| 2333).await;\n+   |     ^^^^^^^^^^^^^^^^ the trait `std::future::Future` is not implemented for `[closure@$DIR/issue-62009.rs:16:5: 16:15]`\n+   |\n+   = note: required by `std::future::poll_with_tls_context`\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}