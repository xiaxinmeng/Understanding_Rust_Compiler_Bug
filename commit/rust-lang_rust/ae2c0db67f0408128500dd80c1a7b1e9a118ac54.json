{"sha": "ae2c0db67f0408128500dd80c1a7b1e9a118ac54", "node_id": "C_kwDOAAsO6NoAKGFlMmMwZGI2N2YwNDA4MTI4NTAwZGQ4MGMxYTdiMWU5YTExOGFjNTQ", "commit": {"author": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-05-22T16:38:14Z"}, "committer": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-05-22T16:38:14Z"}, "message": "Pull text creation into the closure", "tree": {"sha": "39bfeff0bdf2e2952d25d94cffd6e1f83baa63e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39bfeff0bdf2e2952d25d94cffd6e1f83baa63e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae2c0db67f0408128500dd80c1a7b1e9a118ac54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae2c0db67f0408128500dd80c1a7b1e9a118ac54", "html_url": "https://github.com/rust-lang/rust/commit/ae2c0db67f0408128500dd80c1a7b1e9a118ac54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae2c0db67f0408128500dd80c1a7b1e9a118ac54/comments", "author": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "796c4d8a10359bc8add6e5acf952c87f4354189b", "url": "https://api.github.com/repos/rust-lang/rust/commits/796c4d8a10359bc8add6e5acf952c87f4354189b", "html_url": "https://github.com/rust-lang/rust/commit/796c4d8a10359bc8add6e5acf952c87f4354189b"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "f3a79accf9dc961ed21d56ae28cfff3c0fb2d65f", "filename": "crates/ide-assists/src/handlers/generate_enum_variant.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ae2c0db67f0408128500dd80c1a7b1e9a118ac54/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae2c0db67f0408128500dd80c1a7b1e9a118ac54/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_enum_variant.rs?ref=ae2c0db67f0408128500dd80c1a7b1e9a118ac54", "patch": "@@ -64,23 +64,26 @@ fn add_variant_to_accumulator(\n     name_ref: &ast::NameRef,\n ) -> Option<()> {\n     let adt_ast = adt.source(ctx.db())?.original_ast_node(ctx.db())?.value;\n+    let enum_indent = IndentLevel::from_node(&adt_ast.syntax());\n \n-    let enum_indent_level = IndentLevel::from_node(&adt_ast.syntax());\n-\n-    let offset = adt_ast.variant_list()?.syntax().text_range().end() - TextSize::of('}');\n-\n-    let prefix = if adt_ast.variant_list()?.variants().next().is_none() {\n-        format!(\"\\n{}\", IndentLevel(1))\n-    } else {\n-        format!(\"{}\", IndentLevel(1))\n-    };\n-    let text = format!(\"{}{},\\n{}\", prefix, name_ref, enum_indent_level);\n+    let variant_list = adt_ast.variant_list()?;\n+    let offset = variant_list.syntax().text_range().end() - TextSize::of('}');\n+    let empty_enum = variant_list.variants().next().is_none();\n \n     acc.add(\n         AssistId(\"generate_enum_variant\", AssistKind::Generate),\n         \"Generate variant\",\n         target,\n-        |builder| builder.insert(offset, text),\n+        |builder| {\n+            let text = format!(\n+                \"{maybe_newline}{indent_1}{name},\\n{enum_indent}\",\n+                maybe_newline = if empty_enum { \"\\n\" } else { \"\" },\n+                indent_1 = IndentLevel(1),\n+                name = name_ref,\n+                enum_indent = enum_indent\n+            );\n+            builder.insert(offset, text)\n+        },\n     )\n }\n "}]}