{"sha": "cd89e56f152798ef437377acd7d503dae2b3cb99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkODllNTZmMTUyNzk4ZWY0MzczNzdhY2Q3ZDUwM2RhZTJiM2NiOTk=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-03-18T12:18:41Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-04-13T14:04:57Z"}, "message": "Get the tests one step further", "tree": {"sha": "e2079516ed8db62c4ec1b629a2821ab81b8ec86e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2079516ed8db62c4ec1b629a2821ab81b8ec86e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd89e56f152798ef437377acd7d503dae2b3cb99", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCgBKFiEEvpMjxK4/cnPNfesJHVy0/Fl8MAQFAlrQuQosHGdpdC1uby1y\nZXBseS05ODc5MTY1NzE2NDc5NDEzMTMxQG9saS1vYmsuZGUACgkQHVy0/Fl8MAS0\nhg//Y0ssf1Ax5ckZNdV1gWkH0byqvgJceL7VA7G5DBcoBhJAD73Qf7SIdBWLvjf9\nQ/JQE+fXNt0WOLt0OegzxwdrCJ1udZR9XLIwsKO3pyXZ206fyPwTBpEFbbLccEKW\n8OGRaSNAkn4chl7MvyjleA9yf4Mp1MoY0aUIvC360A8k90ZMC1x8SO8esZJzv5Ea\noHs1X57qLHTlOIxNvMF21MfavGSgNs+d4+ks1vBZwH4X0nE/voz7jFfoJ5sdvntZ\n7Mjx+oMnSSkOYzRya4/BdjEZVg+lOA7JJwpPfQ/p251h/8h6+uyOZ4wxTbTPGduX\n8kk/gjrmASiDcTPhekOYmciAeuuJZaQ5lVcOB1LdP6CXvZVZOkm42lIh9q4D0AX1\n94m3ak0voXTjeR9FBfAoc+yOnSKTrqwQnBlRcMRd603Isd4dbPtuFORwvvawNR5Z\n0JX3HepBdnMmOtAQPZ9tZFk3Nctke9i8iH/DRLuym7+fp8CHQierPkcBRzXvJInu\n0+qK+lSbCLSKeLt4W++6LKABiGnUUbB4Pju8L3XIdmxx/Uxsae5SJ6ZBUpGEItHU\nsHlQSz8DCiadkiIpe0cqSQ6B0csLT9K6nuty+zMb2ZIakgXalBxBZYQtJmzH0KsA\npb3PaEaVcJhQ6332YYcFPbHQavoCNl9dOt7ECnF/Yr4DN90=\n=Gycy\n-----END PGP SIGNATURE-----", "payload": "tree e2079516ed8db62c4ec1b629a2821ab81b8ec86e\nparent a3a01ba5b7c955f65d576d8f51b57d9cb307f481\nauthor Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1521375521 +0100\ncommitter Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1523628297 +0200\n\nGet the tests one step further\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd89e56f152798ef437377acd7d503dae2b3cb99", "html_url": "https://github.com/rust-lang/rust/commit/cd89e56f152798ef437377acd7d503dae2b3cb99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd89e56f152798ef437377acd7d503dae2b3cb99/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3a01ba5b7c955f65d576d8f51b57d9cb307f481", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3a01ba5b7c955f65d576d8f51b57d9cb307f481", "html_url": "https://github.com/rust-lang/rust/commit/a3a01ba5b7c955f65d576d8f51b57d9cb307f481"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "70b4900a4eff752c83d3be784d302cce6461d651", "filename": "miri/fn_call.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd89e56f152798ef437377acd7d503dae2b3cb99/miri%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd89e56f152798ef437377acd7d503dae2b3cb99/miri%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Ffn_call.rs?ref=cd89e56f152798ef437377acd7d503dae2b3cb99", "patch": "@@ -106,7 +106,7 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n         let def_id = instance.def_id();\n         let item_path = self.tcx.absolute_item_path_str(def_id);\n         if item_path.starts_with(\"std::\") {\n-            println!(\"{}\", item_path);\n+            //println!(\"{}\", item_path);\n         }\n         match &*item_path {\n             \"std::sys::unix::thread::guard::init\" | \"std::sys::unix::thread::guard::current\" => {\n@@ -118,7 +118,9 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n                         let none_variant_index = adt_def.variants.iter().enumerate().find(|&(_i, ref def)| {\n                             def.name.as_str() == \"None\"\n                         }).expect(\"No None variant\").0;\n-                        write_discriminant_value(self, ret_ty, destination.unwrap().0, none_variant_index)?;\n+                        let (return_place, return_to_block) = destination.unwrap();\n+                        write_discriminant_value(self, ret_ty, return_place, none_variant_index)?;\n+                        self.goto_block(return_to_block);\n                         return Ok(true);\n                     }\n                     _ => panic!(\"Unexpected return type for {}\", item_path)"}, {"sha": "e2e00d828c1af010374e2f3bcd915c59ecb8faa2", "filename": "tests/compiletest.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cd89e56f152798ef437377acd7d503dae2b3cb99/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd89e56f152798ef437377acd7d503dae2b3cb99/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=cd89e56f152798ef437377acd7d503dae2b3cb99", "patch": "@@ -53,10 +53,10 @@ fn compile_fail(sysroot: &Path, path: &str, target: &str, host: &str, fullmir: b\n         let sysroot = std::env::home_dir().unwrap()\n             .join(\".xargo\")\n             .join(\"HOST\");\n-        config.target_rustcflags = Some(format!(\"--sysroot {}\", sysroot.to_str().unwrap()));\n+        flags.push(format!(\"--sysroot {}\", sysroot.to_str().unwrap()));\n         config.src_base = PathBuf::from(path.to_string());\n     } else {\n-        config.target_rustcflags = Some(format!(\"--sysroot {}\", sysroot.to_str().unwrap()));\n+        flags.push(format!(\"--sysroot {}\", sysroot.to_str().unwrap()));\n         config.src_base = PathBuf::from(path.to_string());\n     }\n     flags.push(\"-Zmir-emit-validate=1\".to_owned());\n@@ -206,8 +206,8 @@ fn compile_fail_miri() {\n     let sysroot = get_sysroot();\n     let host = get_host();\n \n-    for_all_targets(&sysroot, |target| {\n-        compile_fail(&sysroot, \"tests/compile-fail\", &target, &host, false);\n-    });\n+    // FIXME: run tests for other targets, too\n+    compile_fail(&sysroot, \"tests/compile-fail\", &host, &host, true);\n+\n     compile_fail(&sysroot, \"tests/compile-fail-fullmir\", &host, &host, true);\n }"}]}