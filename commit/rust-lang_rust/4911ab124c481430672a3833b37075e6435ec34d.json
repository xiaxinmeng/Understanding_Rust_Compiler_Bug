{"sha": "4911ab124c481430672a3833b37075e6435ec34d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5MTFhYjEyNGM0ODE0MzA2NzJhMzgzM2IzNzA3NWU2NDM1ZWMzNGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-20T16:00:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-20T16:00:11Z"}, "message": "Auto merge of #6482 - flip1995:rustup, r=flip1995\n\nRustup\n\nr? `@ghost`\n\nchangelog: none", "tree": {"sha": "18fb648a0a86a1eedf6e311b76c2ee6e3a3efb36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18fb648a0a86a1eedf6e311b76c2ee6e3a3efb36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4911ab124c481430672a3833b37075e6435ec34d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4911ab124c481430672a3833b37075e6435ec34d", "html_url": "https://github.com/rust-lang/rust/commit/4911ab124c481430672a3833b37075e6435ec34d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4911ab124c481430672a3833b37075e6435ec34d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12a35abba12f003bfc12c2b982051c3f49d9b70e", "url": "https://api.github.com/repos/rust-lang/rust/commits/12a35abba12f003bfc12c2b982051c3f49d9b70e", "html_url": "https://github.com/rust-lang/rust/commit/12a35abba12f003bfc12c2b982051c3f49d9b70e"}, {"sha": "53d6e0caaa5769e543e85ad629b73e0ba2c20486", "url": "https://api.github.com/repos/rust-lang/rust/commits/53d6e0caaa5769e543e85ad629b73e0ba2c20486", "html_url": "https://github.com/rust-lang/rust/commit/53d6e0caaa5769e543e85ad629b73e0ba2c20486"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "f136aa4572a87b21bbea89bf3579049a79cf34bc", "filename": "clippy_lints/src/await_holding_invalid.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Fawait_holding_invalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Fawait_holding_invalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fawait_holding_invalid.rs?ref=4911ab124c481430672a3833b37075e6435ec34d", "patch": "@@ -99,7 +99,11 @@ impl LateLintPass<'_> for AwaitHolding {\n             };\n             let def_id = cx.tcx.hir().body_owner_def_id(body_id);\n             let typeck_results = cx.tcx.typeck(def_id);\n-            check_interior_types(cx, &typeck_results.generator_interior_types, body.value.span);\n+            check_interior_types(\n+                cx,\n+                &typeck_results.generator_interior_types.as_ref().skip_binder(),\n+                body.value.span,\n+            );\n         }\n     }\n }"}, {"sha": "f839659267825b8c1f686f4f0621a3ce9a3d7e2c", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=4911ab124c481430672a3833b37075e6435ec34d", "patch": "@@ -342,6 +342,10 @@ fn check_expr<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, bindings: &mut\n                 if let Some(ref guard) = arm.guard {\n                     match guard {\n                         Guard::If(if_expr) => check_expr(cx, if_expr, bindings),\n+                        Guard::IfLet(guard_pat, guard_expr) => {\n+                            check_pat(cx, guard_pat, Some(*guard_expr), guard_pat.span, bindings);\n+                            check_expr(cx, guard_expr, bindings);\n+                        },\n                     }\n                 }\n                 check_expr(cx, &arm.body, bindings);"}, {"sha": "4249dbb4e65190d65b8674e3f59bf1d8829c9a36", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=4911ab124c481430672a3833b37075e6435ec34d", "patch": "@@ -372,6 +372,18 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n                                 self.current = if_expr_pat;\n                                 self.visit_expr(if_expr);\n                             },\n+                            hir::Guard::IfLet(ref if_let_pat, ref if_let_expr) => {\n+                                let if_let_pat_pat = self.next(\"pat\");\n+                                let if_let_expr_pat = self.next(\"expr\");\n+                                println!(\n+                                    \"    if let Guard::IfLet(ref {}, ref {}) = {};\",\n+                                    if_let_pat_pat, if_let_expr_pat, guard_pat\n+                                );\n+                                self.current = if_let_expr_pat;\n+                                self.visit_expr(if_let_expr);\n+                                self.current = if_let_pat_pat;\n+                                self.visit_pat(if_let_pat);\n+                            },\n                         }\n                     }\n                     self.current = format!(\"{}[{}].pat\", arms_pat, i);\n@@ -730,6 +742,7 @@ fn desugaring_name(des: hir::MatchSource) -> String {\n             \"MatchSource::IfLetDesugar {{ contains_else_clause: {} }}\",\n             contains_else_clause\n         ),\n+        hir::MatchSource::IfLetGuardDesugar => \"MatchSource::IfLetGuardDesugar\".to_string(),\n         hir::MatchSource::IfDesugar { contains_else_clause } => format!(\n             \"MatchSource::IfDesugar {{ contains_else_clause: {} }}\",\n             contains_else_clause"}, {"sha": "a8fbb2ffaf0b40558babcbe096c291ff78966b11", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=4911ab124c481430672a3833b37075e6435ec34d", "patch": "@@ -169,6 +169,8 @@ impl<'a, 'tcx> SpanlessEq<'a, 'tcx> {\n     fn eq_guard(&mut self, left: &Guard<'_>, right: &Guard<'_>) -> bool {\n         match (left, right) {\n             (Guard::If(l), Guard::If(r)) => self.eq_expr(l, r),\n+            (Guard::IfLet(lp, le), Guard::IfLet(rp, re)) => self.eq_pat(lp, rp) && self.eq_expr(le, re),\n+            _ => false,\n         }\n     }\n \n@@ -669,7 +671,7 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n \n     pub fn hash_guard(&mut self, g: &Guard<'_>) {\n         match g {\n-            Guard::If(ref expr) => {\n+            Guard::If(ref expr) | Guard::IfLet(_, ref expr) => {\n                 self.hash_expr(expr);\n             },\n         }"}, {"sha": "5d946e4bd495d9abbb6e1fcdf439c3b4187dba07", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=4911ab124c481430672a3833b37075e6435ec34d", "patch": "@@ -560,5 +560,10 @@ fn print_guard(cx: &LateContext<'_>, guard: &hir::Guard<'_>, indent: usize) {\n             println!(\"{}If\", ind);\n             print_expr(cx, expr, indent + 1);\n         },\n+        hir::Guard::IfLet(pat, expr) => {\n+            println!(\"{}IfLet\", ind);\n+            print_pat(cx, pat, indent + 1);\n+            print_expr(cx, expr, indent + 1);\n+        },\n     }\n }"}, {"sha": "424856090f261f598dfe200fc7fd65652f6fa04e", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4911ab124c481430672a3833b37075e6435ec34d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=4911ab124c481430672a3833b37075e6435ec34d", "patch": "@@ -1480,8 +1480,8 @@ pub fn is_must_use_ty<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n             false\n         },\n         ty::Dynamic(binder, _) => {\n-            for predicate in binder.skip_binder().iter() {\n-                if let ty::ExistentialPredicate::Trait(ref trait_ref) = predicate {\n+            for predicate in binder.iter() {\n+                if let ty::ExistentialPredicate::Trait(ref trait_ref) = predicate.skip_binder() {\n                     if must_use_attr(&cx.tcx.get_attrs(trait_ref.def_id)).is_some() {\n                         return true;\n                     }"}, {"sha": "d2e84132f4ed9baee6717728dced000c97015530", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4911ab124c481430672a3833b37075e6435ec34d/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/4911ab124c481430672a3833b37075e6435ec34d/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=4911ab124c481430672a3833b37075e6435ec34d", "patch": "@@ -1,3 +1,3 @@\n [toolchain]\n-channel = \"nightly-2020-12-14\"\n+channel = \"nightly-2020-12-20\"\n components = [\"llvm-tools-preview\", \"rustc-dev\", \"rust-src\", \"rustfmt\"]"}, {"sha": "c57a45dc7aab9b1c1f3e48dfc7e41558b6002fc9", "filename": "tests/ui/crashes/used_underscore_binding_macro.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4911ab124c481430672a3833b37075e6435ec34d/tests%2Fui%2Fcrashes%2Fused_underscore_binding_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4911ab124c481430672a3833b37075e6435ec34d/tests%2Fui%2Fcrashes%2Fused_underscore_binding_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fused_underscore_binding_macro.rs?ref=4911ab124c481430672a3833b37075e6435ec34d", "patch": "@@ -1,7 +1,6 @@\n-#![allow(clippy::useless_attribute)] //issue #2910\n+// edition:2018\n \n-#[macro_use]\n-extern crate serde_derive;\n+use serde::Deserialize;\n \n /// Tests that we do not lint for unused underscores in a `MacroAttribute`\n /// expansion"}]}