{"sha": "f3dde45d2a963c32994a78f3ea0119a2da973c14", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZGRlNDVkMmE5NjNjMzI5OTRhNzhmM2VhMDExOWEyZGE5NzNjMTQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-31T15:12:03Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-31T15:12:06Z"}, "message": "Enable debugging the dep-graph without debug-assertions.\n\nIt may also be useful in these cases,\nand some CI configurations test without debug assertions.", "tree": {"sha": "7c18512a32e80075161f4fed061ecc06fc95e686", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c18512a32e80075161f4fed061ecc06fc95e686"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3dde45d2a963c32994a78f3ea0119a2da973c14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3dde45d2a963c32994a78f3ea0119a2da973c14", "html_url": "https://github.com/rust-lang/rust/commit/f3dde45d2a963c32994a78f3ea0119a2da973c14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3dde45d2a963c32994a78f3ea0119a2da973c14/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ee9322c1041bcbaee408961727c4418bd792979", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ee9322c1041bcbaee408961727c4418bd792979", "html_url": "https://github.com/rust-lang/rust/commit/8ee9322c1041bcbaee408961727c4418bd792979"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "6f3d1fb71994e11b78a72a63c7af61c8d44128ec", "filename": "compiler/rustc_query_system/src/dep_graph/serialized.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f3dde45d2a963c32994a78f3ea0119a2da973c14/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fserialized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3dde45d2a963c32994a78f3ea0119a2da973c14/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fserialized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fserialized.rs?ref=f3dde45d2a963c32994a78f3ea0119a2da973c14", "patch": "@@ -157,20 +157,19 @@ impl<K: DepKind> EncoderState<K> {\n         }\n     }\n \n-    #[instrument(skip(self, _record_graph))]\n+    #[instrument(skip(self, record_graph))]\n     fn encode_node(\n         &mut self,\n         node: &NodeInfo<K>,\n-        _record_graph: &Option<Lock<DepGraphQuery<K>>>,\n+        record_graph: &Option<Lock<DepGraphQuery<K>>>,\n     ) -> DepNodeIndex {\n         let index = DepNodeIndex::new(self.total_node_count);\n         self.total_node_count += 1;\n \n         let edge_count = node.edges.len();\n         self.total_edge_count += edge_count;\n \n-        #[cfg(debug_assertions)]\n-        if let Some(record_graph) = &_record_graph {\n+        if let Some(record_graph) = &record_graph {\n             // Do not ICE when a query is called from within `with_query`.\n             if let Some(record_graph) = &mut record_graph.try_lock() {\n                 record_graph.push(index, node.node, &node.edges);\n@@ -222,11 +221,8 @@ impl<K: DepKind + Encodable<FileEncoder>> GraphEncoder<K> {\n         record_graph: bool,\n         record_stats: bool,\n     ) -> Self {\n-        let record_graph = if cfg!(debug_assertions) && record_graph {\n-            Some(Lock::new(DepGraphQuery::new(prev_node_count)))\n-        } else {\n-            None\n-        };\n+        let record_graph =\n+            if record_graph { Some(Lock::new(DepGraphQuery::new(prev_node_count))) } else { None };\n         let status = Lock::new(EncoderState::new(encoder, record_stats));\n         GraphEncoder { status, record_graph }\n     }"}]}