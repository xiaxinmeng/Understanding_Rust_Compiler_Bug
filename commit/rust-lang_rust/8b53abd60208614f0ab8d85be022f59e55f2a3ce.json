{"sha": "8b53abd60208614f0ab8d85be022f59e55f2a3ce", "node_id": "C_kwDOAAsO6NoAKDhiNTNhYmQ2MDIwODYxNGYwYWI4ZDg1YmUwMjJmNTllNTVmMmEzY2U", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-29T12:05:04Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-29T12:05:20Z"}, "message": "interpret: fix unnecessary allocation in validation visitor", "tree": {"sha": "2e1bfbf704d29cd3cb9abd5cf720e8de1cc01d0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e1bfbf704d29cd3cb9abd5cf720e8de1cc01d0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b53abd60208614f0ab8d85be022f59e55f2a3ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b53abd60208614f0ab8d85be022f59e55f2a3ce", "html_url": "https://github.com/rust-lang/rust/commit/8b53abd60208614f0ab8d85be022f59e55f2a3ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b53abd60208614f0ab8d85be022f59e55f2a3ce/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a42ca942cda0d197a63373127e7e373305957a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a42ca942cda0d197a63373127e7e373305957a0", "html_url": "https://github.com/rust-lang/rust/commit/7a42ca942cda0d197a63373127e7e373305957a0"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "2d096199e91227b6f4db4f52629f9e7c5d848f7c", "filename": "compiler/rustc_const_eval/src/interpret/validity.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8b53abd60208614f0ab8d85be022f59e55f2a3ce/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b53abd60208614f0ab8d85be022f59e55f2a3ce/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs?ref=8b53abd60208614f0ab8d85be022f59e55f2a3ce", "patch": "@@ -5,7 +5,7 @@\n //! to be const-safe.\n \n use std::convert::TryFrom;\n-use std::fmt::Write;\n+use std::fmt::{Display, Write};\n use std::num::NonZeroUsize;\n \n use rustc_ast::Mutability;\n@@ -308,7 +308,7 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n     fn read_immediate(\n         &self,\n         op: &OpTy<'tcx, M::Provenance>,\n-        expected: &str,\n+        expected: impl Display,\n     ) -> InterpResult<'tcx, ImmTy<'tcx, M::Provenance>> {\n         Ok(try_validation!(\n             self.ecx.read_immediate(op),\n@@ -321,7 +321,7 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n     fn read_scalar(\n         &self,\n         op: &OpTy<'tcx, M::Provenance>,\n-        expected: &str,\n+        expected: impl Display,\n     ) -> InterpResult<'tcx, Scalar<M::Provenance>> {\n         Ok(self.read_immediate(op, expected)?.to_scalar())\n     }\n@@ -370,7 +370,8 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n         value: &OpTy<'tcx, M::Provenance>,\n         kind: &str,\n     ) -> InterpResult<'tcx> {\n-        let place = self.ecx.ref_to_mplace(&self.read_immediate(value, &format!(\"a {kind}\"))?)?;\n+        let place =\n+            self.ecx.ref_to_mplace(&self.read_immediate(value, format_args!(\"a {kind}\"))?)?;\n         // Handle wide pointers.\n         // Check metadata early, for better diagnostics\n         if place.layout.is_unsized() {"}]}