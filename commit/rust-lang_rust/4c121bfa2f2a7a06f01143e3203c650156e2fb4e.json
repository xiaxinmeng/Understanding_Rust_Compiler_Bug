{"sha": "4c121bfa2f2a7a06f01143e3203c650156e2fb4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMTIxYmZhMmYyYTdhMDZmMDExNDNlMzIwM2M2NTAxNTZlMmZiNGU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-26T07:43:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-26T07:43:03Z"}, "message": "extend selection to comments", "tree": {"sha": "4b28671d904079928e005fa04dfbe14c36933e1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b28671d904079928e005fa04dfbe14c36933e1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c121bfa2f2a7a06f01143e3203c650156e2fb4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c121bfa2f2a7a06f01143e3203c650156e2fb4e", "html_url": "https://github.com/rust-lang/rust/commit/4c121bfa2f2a7a06f01143e3203c650156e2fb4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c121bfa2f2a7a06f01143e3203c650156e2fb4e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a450142aca947b9364e498897f522f854f19781d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a450142aca947b9364e498897f522f854f19781d", "html_url": "https://github.com/rust-lang/rust/commit/a450142aca947b9364e498897f522f854f19781d"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "154f8967171555178bdf8e194bfc9e9ef1ba5164", "filename": "crates/libeditor/src/extend_selection.rs", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4c121bfa2f2a7a06f01143e3203c650156e2fb4e/crates%2Flibeditor%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c121bfa2f2a7a06f01143e3203c650156e2fb4e/crates%2Flibeditor%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fextend_selection.rs?ref=4c121bfa2f2a7a06f01143e3203c650156e2fb4e", "patch": "@@ -1,7 +1,7 @@\n use libsyntax2::{\n     File, TextRange, SyntaxNodeRef,\n-    SyntaxKind::WHITESPACE,\n-    algo::{find_leaf_at_offset, find_covering_node, ancestors},\n+    SyntaxKind::*,\n+    algo::{find_leaf_at_offset, find_covering_node, ancestors, Direction, siblings},\n };\n \n pub fn extend_selection(file: &File, range: TextRange) -> Option<TextRange> {\n@@ -28,9 +28,39 @@ pub(crate) fn extend(root: SyntaxNodeRef, range: TextRange) -> Option<TextRange>\n         return Some(ws.range());\n     };\n     let node = find_covering_node(root, range);\n+    if node.kind() == COMMENT && range == node.range() {\n+        if let Some(range) = extend_comments(node) {\n+            return Some(range);\n+        }\n+    }\n \n     match ancestors(node).skip_while(|n| n.range() == range).next() {\n         None => None,\n         Some(parent) => Some(parent.range()),\n     }\n }\n+\n+fn extend_comments(node: SyntaxNodeRef) -> Option<TextRange> {\n+    let left = adj_comments(node, Direction::Backward);\n+    let right = adj_comments(node, Direction::Forward);\n+    if left != right {\n+        Some(TextRange::from_to(\n+            left.range().start(),\n+            right.range().end(),\n+        ))\n+    } else {\n+        None\n+    }\n+}\n+\n+fn adj_comments(node: SyntaxNodeRef, dir: Direction) -> SyntaxNodeRef {\n+    let mut res = node;\n+    for node in siblings(node, dir) {\n+        match node.kind() {\n+            COMMENT => res = node,\n+            WHITESPACE if !node.leaf_text().unwrap().as_str().contains(\"\\n\\n\") => (),\n+            _ => break\n+        }\n+    }\n+    res\n+}"}, {"sha": "20de2f2407e31be4e06b071782715882a72f9e36", "filename": "crates/libeditor/tests/test.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4c121bfa2f2a7a06f01143e3203c650156e2fb4e/crates%2Flibeditor%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c121bfa2f2a7a06f01143e3203c650156e2fb4e/crates%2Flibeditor%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Ftests%2Ftest.rs?ref=4c121bfa2f2a7a06f01143e3203c650156e2fb4e", "patch": "@@ -40,6 +40,18 @@ impl S {\n }\"#,\n         &[\"fn foo() {\\n\\n    }\"]\n     );\n+    do_check(\n+        r#\"\n+fn bar(){}\n+\n+// fn foo() {\n+// 1 + <|>1\n+// }\n+\n+// fn foo(){}\n+\"#,\n+        &[\"// 1 + 1\", \"// fn foo() {\\n// 1 + 1\\n// }\"]\n+    );\n }\n \n #[test]"}]}