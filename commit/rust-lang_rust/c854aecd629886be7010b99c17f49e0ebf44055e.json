{"sha": "c854aecd629886be7010b99c17f49e0ebf44055e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NTRhZWNkNjI5ODg2YmU3MDEwYjk5YzE3ZjQ5ZTBlYmY0NDA1NWU=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-01-18T01:28:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-18T01:28:10Z"}, "message": "Rollup merge of #66660 - jumbatm:dont_warn_about_snake_case_in_patterns, r=centril\n\nDon't warn about snake case for field puns.\n\nCloses #66362.", "tree": {"sha": "dc18eed60c4e57e6c2c6d27bbadc4255f924c842", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc18eed60c4e57e6c2c6d27bbadc4255f924c842"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c854aecd629886be7010b99c17f49e0ebf44055e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeIl8rCRBK7hj4Ov3rIwAAdHIIAGHKl30o04Sewwniw7wDKenQ\nE8aXV42mlJFH6U/DfoaNdkFdDVB8VBMJU319CW3vrpoMHGuE4VUFnh+dHnegweeQ\nsKEG9NTo/fTKMR8e87r3O+SnYUDS6F8uX4nstxLL0HrgV7YrDsJvZyKt0nesvAV/\npSSEuYvESPgL/6DKDZnZNAc4jQR2hXwG6Drqu7COpwaNf945w60LM0naYeFOpomU\nm6UJ7QuRTW/up9703YVnsV0FEKdYBQfttyx9vc+P+KABQJJwTOjOevnXmTIGY+x2\neVWwF35WiJ0LRtF0yKEoWT67KA1iKSIkayRh78kcv7d7nL3SBUwUIDeZQhcy5bE=\n=HGGr\n-----END PGP SIGNATURE-----\n", "payload": "tree dc18eed60c4e57e6c2c6d27bbadc4255f924c842\nparent d8dcb6345bfac471aadc1e674aef8ddc78ad5c1c\nparent 25a8f9473f29e732838b6d88394dd80fe645b7f6\nauthor Tyler Mandry <tmandry@gmail.com> 1579310890 -0800\ncommitter GitHub <noreply@github.com> 1579310890 -0800\n\nRollup merge of #66660 - jumbatm:dont_warn_about_snake_case_in_patterns, r=centril\n\nDon't warn about snake case for field puns.\n\nCloses #66362.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c854aecd629886be7010b99c17f49e0ebf44055e", "html_url": "https://github.com/rust-lang/rust/commit/c854aecd629886be7010b99c17f49e0ebf44055e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c854aecd629886be7010b99c17f49e0ebf44055e/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8dcb6345bfac471aadc1e674aef8ddc78ad5c1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8dcb6345bfac471aadc1e674aef8ddc78ad5c1c", "html_url": "https://github.com/rust-lang/rust/commit/d8dcb6345bfac471aadc1e674aef8ddc78ad5c1c"}, {"sha": "25a8f9473f29e732838b6d88394dd80fe645b7f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/25a8f9473f29e732838b6d88394dd80fe645b7f6", "html_url": "https://github.com/rust-lang/rust/commit/25a8f9473f29e732838b6d88394dd80fe645b7f6"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "394da4a5bb0c151942a897913b39d92468a8c77d", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c854aecd629886be7010b99c17f49e0ebf44055e/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c854aecd629886be7010b99c17f49e0ebf44055e/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=c854aecd629886be7010b99c17f49e0ebf44055e", "patch": "@@ -350,7 +350,20 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NonSnakeCase {\n     }\n \n     fn check_pat(&mut self, cx: &LateContext<'_, '_>, p: &hir::Pat<'_>) {\n-        if let &PatKind::Binding(_, _, ident, _) = &p.kind {\n+        if let &PatKind::Binding(_, hid, ident, _) = &p.kind {\n+            if let hir::Node::Pat(parent_pat) = cx.tcx.hir().get(cx.tcx.hir().get_parent_node(hid))\n+            {\n+                if let PatKind::Struct(_, field_pats, _) = &parent_pat.kind {\n+                    for field in field_pats.iter() {\n+                        if field.ident != ident {\n+                            // Only check if a new name has been introduced, to avoid warning\n+                            // on both the struct definition and this pattern.\n+                            self.check_snake_case(cx, \"variable\", &ident);\n+                        }\n+                    }\n+                    return;\n+                }\n+            }\n             self.check_snake_case(cx, \"variable\", &ident);\n         }\n     }"}, {"sha": "c2b81959f2cb81297184b217787b056408119655", "filename": "src/test/ui/lint/issue-66362-no-snake-case-warning-for-field-puns.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c854aecd629886be7010b99c17f49e0ebf44055e/src%2Ftest%2Fui%2Flint%2Fissue-66362-no-snake-case-warning-for-field-puns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c854aecd629886be7010b99c17f49e0ebf44055e/src%2Ftest%2Fui%2Flint%2Fissue-66362-no-snake-case-warning-for-field-puns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-66362-no-snake-case-warning-for-field-puns.rs?ref=c854aecd629886be7010b99c17f49e0ebf44055e", "patch": "@@ -0,0 +1,29 @@\n+#![deny(non_snake_case)]\n+#![allow(unused_variables)]\n+#![allow(dead_code)]\n+\n+enum Foo {\n+    Bad {\n+        lowerCamelCaseName: bool,\n+        //~^ ERROR structure field `lowerCamelCaseName` should have a snake case name\n+    },\n+    Good {\n+        snake_case_name: bool,\n+    },\n+}\n+\n+fn main() {\n+    let b = Foo::Bad { lowerCamelCaseName: true };\n+\n+    match b {\n+        Foo::Bad { lowerCamelCaseName } => {}\n+        Foo::Good { snake_case_name: lowerCamelCaseBinding } => { }\n+        //~^ ERROR variable `lowerCamelCaseBinding` should have a snake case name\n+    }\n+\n+    if let Foo::Good { snake_case_name: anotherLowerCamelCaseBinding } = b { }\n+    //~^ ERROR variable `anotherLowerCamelCaseBinding` should have a snake case name\n+\n+    if let Foo::Bad { lowerCamelCaseName: yetAnotherLowerCamelCaseBinding } = b { }\n+    //~^ ERROR variable `yetAnotherLowerCamelCaseBinding` should have a snake case name\n+}"}, {"sha": "68956f21e8f1b68096494deb3dc8842a0dbb83fe", "filename": "src/test/ui/lint/issue-66362-no-snake-case-warning-for-field-puns.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c854aecd629886be7010b99c17f49e0ebf44055e/src%2Ftest%2Fui%2Flint%2Fissue-66362-no-snake-case-warning-for-field-puns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c854aecd629886be7010b99c17f49e0ebf44055e/src%2Ftest%2Fui%2Flint%2Fissue-66362-no-snake-case-warning-for-field-puns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-66362-no-snake-case-warning-for-field-puns.stderr?ref=c854aecd629886be7010b99c17f49e0ebf44055e", "patch": "@@ -0,0 +1,32 @@\n+error: structure field `lowerCamelCaseName` should have a snake case name\n+  --> $DIR/issue-66362-no-snake-case-warning-for-field-puns.rs:7:9\n+   |\n+LL |         lowerCamelCaseName: bool,\n+   |         ^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `lower_camel_case_name`\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-66362-no-snake-case-warning-for-field-puns.rs:1:9\n+   |\n+LL | #![deny(non_snake_case)]\n+   |         ^^^^^^^^^^^^^^\n+\n+error: variable `lowerCamelCaseBinding` should have a snake case name\n+  --> $DIR/issue-66362-no-snake-case-warning-for-field-puns.rs:20:38\n+   |\n+LL |         Foo::Good { snake_case_name: lowerCamelCaseBinding } => { }\n+   |                                      ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `lower_camel_case_binding`\n+\n+error: variable `anotherLowerCamelCaseBinding` should have a snake case name\n+  --> $DIR/issue-66362-no-snake-case-warning-for-field-puns.rs:24:41\n+   |\n+LL |     if let Foo::Good { snake_case_name: anotherLowerCamelCaseBinding } = b { }\n+   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `another_lower_camel_case_binding`\n+\n+error: variable `yetAnotherLowerCamelCaseBinding` should have a snake case name\n+  --> $DIR/issue-66362-no-snake-case-warning-for-field-puns.rs:27:43\n+   |\n+LL |     if let Foo::Bad { lowerCamelCaseName: yetAnotherLowerCamelCaseBinding } = b { }\n+   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `yet_another_lower_camel_case_binding`\n+\n+error: aborting due to 4 previous errors\n+"}]}