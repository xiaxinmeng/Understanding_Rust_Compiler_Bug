{"sha": "f2dcd7663a976f02675c72561eb377ecc263bd9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZGNkNzY2M2E5NzZmMDI2NzVjNzI1NjFlYjM3N2VjYzI2M2JkOWI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-28T00:43:15Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-28T00:43:15Z"}, "message": "libcore: Use is_none() in pipes", "tree": {"sha": "c745f944c6f52d7545b98c3bb146f20c48db602c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c745f944c6f52d7545b98c3bb146f20c48db602c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2dcd7663a976f02675c72561eb377ecc263bd9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2dcd7663a976f02675c72561eb377ecc263bd9b", "html_url": "https://github.com/rust-lang/rust/commit/f2dcd7663a976f02675c72561eb377ecc263bd9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2dcd7663a976f02675c72561eb377ecc263bd9b/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "303e105677d2d9b5d362fd0749a97bd1b0cd2aed", "url": "https://api.github.com/repos/rust-lang/rust/commits/303e105677d2d9b5d362fd0749a97bd1b0cd2aed", "html_url": "https://github.com/rust-lang/rust/commit/303e105677d2d9b5d362fd0749a97bd1b0cd2aed"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dc6d5582f9d8ef1f7cca26ababcb70efb9131c5a", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2dcd7663a976f02675c72561eb377ecc263bd9b/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2dcd7663a976f02675c72561eb377ecc263bd9b/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=f2dcd7663a976f02675c72561eb377ecc263bd9b", "patch": "@@ -359,7 +359,7 @@ fn send<T: send, Tbuffer: send>(+p: send_packet_buffered<T, Tbuffer>,\n     let p_ = p.unwrap();\n     let p = unsafe { &*p_ };\n     assert ptr::addr_of(p.header) == header;\n-    assert p.payload == None;\n+    assert p.payload.is_none();\n     p.payload <- Some(payload);\n     let old_state = swap_state_rel(&mut p.header.state, full);\n     match old_state {"}]}