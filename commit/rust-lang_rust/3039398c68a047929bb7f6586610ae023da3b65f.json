{"sha": "3039398c68a047929bb7f6586610ae023da3b65f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMzkzOThjNjhhMDQ3OTI5YmI3ZjY1ODY2MTBhZTAyM2RhM2I2NWY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-03T16:18:04Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-04T01:33:15Z"}, "message": "convert save-analysis to use `ItemCtxt` and not `ast_ty_to_ty_cache`", "tree": {"sha": "e95f2dbaaaceac0d0844d706e2ba4f673bd17b11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e95f2dbaaaceac0d0844d706e2ba4f673bd17b11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3039398c68a047929bb7f6586610ae023da3b65f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3039398c68a047929bb7f6586610ae023da3b65f", "html_url": "https://github.com/rust-lang/rust/commit/3039398c68a047929bb7f6586610ae023da3b65f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3039398c68a047929bb7f6586610ae023da3b65f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "196c98d314776f01cb2f32aae63565c118ef62d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/196c98d314776f01cb2f32aae63565c118ef62d3", "html_url": "https://github.com/rust-lang/rust/commit/196c98d314776f01cb2f32aae63565c118ef62d3"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "5fa0829f2f8d1ffdf00eef6ad3493075d1b561c2", "filename": "src/Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3039398c68a047929bb7f6586610ae023da3b65f/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/3039398c68a047929bb7f6586610ae023da3b65f/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=3039398c68a047929bb7f6586610ae023da3b65f", "patch": "@@ -723,6 +723,7 @@ dependencies = [\n  \"rls-span 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n  \"rustc-serialize 0.3.23 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc_typeck 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_pos 0.0.0\",\n ]"}, {"sha": "702c4b691c9860568c61cb20b145b81250fea92d", "filename": "src/librustc_save_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3039398c68a047929bb7f6586610ae023da3b65f/src%2Flibrustc_save_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3039398c68a047929bb7f6586610ae023da3b65f/src%2Flibrustc_save_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2FCargo.toml?ref=3039398c68a047929bb7f6586610ae023da3b65f", "patch": "@@ -11,6 +11,7 @@ crate-type = [\"dylib\"]\n [dependencies]\n log = \"0.3\"\n rustc = { path = \"../librustc\" }\n+rustc_typeck = { path = \"../librustc_typeck\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n rls-data = \"0.1\""}, {"sha": "763414c1a555fb2250b958da9899e51b333e79fd", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3039398c68a047929bb7f6586610ae023da3b65f/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3039398c68a047929bb7f6586610ae023da3b65f/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=3039398c68a047929bb7f6586610ae023da3b65f", "patch": "@@ -122,7 +122,7 @@ impl<'l, 'tcx: 'l, 'll, D: Dump + 'll> DumpVisitor<'l, 'tcx, 'll, D> {\n             f(self);\n             self.save_ctxt.tables = old_tables;\n         } else {\n-            f(self)\n+            f(self);\n         }\n     }\n "}, {"sha": "fd6898d19d84fce59cea36b0ffbaff53e5f56aaa", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3039398c68a047929bb7f6586610ae023da3b65f/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3039398c68a047929bb7f6586610ae023da3b65f/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=3039398c68a047929bb7f6586610ae023da3b65f", "patch": "@@ -27,6 +27,7 @@\n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;\n extern crate rustc_serialize;\n+extern crate rustc_typeck;\n extern crate syntax_pos;\n \n extern crate rls_data;\n@@ -50,6 +51,7 @@ use rustc::hir::def_id::DefId;\n use rustc::session::config::CrateType::CrateTypeExecutable;\n use rustc::session::Session;\n use rustc::ty::{self, TyCtxt};\n+use rustc_typeck::hir_ty_to_ty;\n \n use std::env;\n use std::fs::File;\n@@ -606,11 +608,12 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                 Def::Local(def_id)\n             }\n \n-            Node::NodeTy(&hir::Ty { node: hir::TyPath(ref qpath), .. }) => {\n-                match *qpath {\n-                    hir::QPath::Resolved(_, ref path) => path.def,\n-                    hir::QPath::TypeRelative(..) => {\n-                        if let Some(ty) = self.tcx.ast_ty_to_ty_cache.borrow().get(&id) {\n+            Node::NodeTy(ty) => {\n+                if let hir::Ty { node: hir::TyPath(ref qpath), .. } = *ty {\n+                    match *qpath {\n+                        hir::QPath::Resolved(_, ref path) => path.def,\n+                        hir::QPath::TypeRelative(..) => {\n+                            let ty = hir_ty_to_ty(self.tcx, ty);\n                             if let ty::TyProjection(proj) = ty.sty {\n                                 for item in self.tcx.associated_items(proj.trait_ref.def_id) {\n                                     if item.kind == ty::AssociatedKind::Type {\n@@ -620,9 +623,11 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                                     }\n                                 }\n                             }\n+                            Def::Err\n                         }\n-                        Def::Err\n                     }\n+                } else {\n+                    Def::Err\n                 }\n             }\n "}]}