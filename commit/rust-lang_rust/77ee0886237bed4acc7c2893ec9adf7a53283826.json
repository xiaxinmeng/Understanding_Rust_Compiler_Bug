{"sha": "77ee0886237bed4acc7c2893ec9adf7a53283826", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZWUwODg2MjM3YmVkNGFjYzdjMjg5M2VjOWFkZjdhNTMyODM4MjY=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-04-19T15:59:19Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-04-20T01:49:27Z"}, "message": "Stabilize PathBuf capacity methods", "tree": {"sha": "65ffb3516aded623d8b21af5cde840eecdaebcff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65ffb3516aded623d8b21af5cde840eecdaebcff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77ee0886237bed4acc7c2893ec9adf7a53283826", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77ee0886237bed4acc7c2893ec9adf7a53283826", "html_url": "https://github.com/rust-lang/rust/commit/77ee0886237bed4acc7c2893ec9adf7a53283826", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77ee0886237bed4acc7c2893ec9adf7a53283826/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36b1a9296cde2b773771710e9bbd608fd2eca35f", "url": "https://api.github.com/repos/rust-lang/rust/commits/36b1a9296cde2b773771710e9bbd608fd2eca35f", "html_url": "https://github.com/rust-lang/rust/commit/36b1a9296cde2b773771710e9bbd608fd2eca35f"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "173d6d1cfa7efbd17e7daabb14755e325aaa3753", "filename": "src/libstd/path.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/77ee0886237bed4acc7c2893ec9adf7a53283826/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ee0886237bed4acc7c2893ec9adf7a53283826/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=77ee0886237bed4acc7c2893ec9adf7a53283826", "patch": "@@ -1116,7 +1116,6 @@ impl PathBuf {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(path_buf_capacity)]\n     /// use std::path::PathBuf;\n     ///\n     /// let mut path = PathBuf::with_capacity(10);\n@@ -1130,7 +1129,7 @@ impl PathBuf {\n     ///\n     /// [`with_capacity`]: ../ffi/struct.OsString.html#method.with_capacity\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn with_capacity(capacity: usize) -> PathBuf {\n         PathBuf { inner: OsString::with_capacity(capacity) }\n     }\n@@ -1374,7 +1373,7 @@ impl PathBuf {\n     ///\n     /// [`capacity`]: ../ffi/struct.OsString.html#method.capacity\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn capacity(&self) -> usize {\n         self.inner.capacity()\n     }\n@@ -1383,7 +1382,7 @@ impl PathBuf {\n     ///\n     /// [`clear`]: ../ffi/struct.OsString.html#method.clear\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn clear(&mut self) {\n         self.inner.clear()\n     }\n@@ -1392,7 +1391,7 @@ impl PathBuf {\n     ///\n     /// [`reserve`]: ../ffi/struct.OsString.html#method.reserve\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn reserve(&mut self, additional: usize) {\n         self.inner.reserve(additional)\n     }\n@@ -1401,7 +1400,7 @@ impl PathBuf {\n     ///\n     /// [`reserve_exact`]: ../ffi/struct.OsString.html#method.reserve_exact\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn reserve_exact(&mut self, additional: usize) {\n         self.inner.reserve_exact(additional)\n     }\n@@ -1410,7 +1409,7 @@ impl PathBuf {\n     ///\n     /// [`shrink_to_fit`]: ../ffi/struct.OsString.html#method.shrink_to_fit\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn shrink_to_fit(&mut self) {\n         self.inner.shrink_to_fit()\n     }\n@@ -1419,7 +1418,7 @@ impl PathBuf {\n     ///\n     /// [`shrink_to`]: ../ffi/struct.OsString.html#method.shrink_to\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[unstable(feature = \"shrink_to\", issue = \"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.inner.shrink_to(min_capacity)\n     }"}]}