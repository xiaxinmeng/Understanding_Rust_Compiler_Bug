{"sha": "e5396e025ed886c827348aac996c4c6c846fb5ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1Mzk2ZTAyNWVkODg2YzgyNzM0OGFhYzk5NmM0YzZjODQ2ZmI1YWI=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-02-07T17:24:43Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-02-07T17:24:43Z"}, "message": "Choose different name for metadata obj-file to avoid clashes with user-chosen names.", "tree": {"sha": "c497b21791fef47be3417835af11f1910f1f4949", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c497b21791fef47be3417835af11f1910f1f4949"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5396e025ed886c827348aac996c4c6c846fb5ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5396e025ed886c827348aac996c4c6c846fb5ab", "html_url": "https://github.com/rust-lang/rust/commit/e5396e025ed886c827348aac996c4c6c846fb5ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5396e025ed886c827348aac996c4c6c846fb5ab/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3da24bba940831697a024b93569891c77675778", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3da24bba940831697a024b93569891c77675778", "html_url": "https://github.com/rust-lang/rust/commit/a3da24bba940831697a024b93569891c77675778"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "6bdb3ce631fb1407c03b52797000811718b43f36", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e5396e025ed886c827348aac996c4c6c846fb5ab/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5396e025ed886c827348aac996c4c6c846fb5ab/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=e5396e025ed886c827348aac996c4c6c846fb5ab", "patch": "@@ -48,6 +48,13 @@ use syntax::attr;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;\n \n+/// The LLVM module name containing crate-metadata. This includes a `.` on\n+/// purpose, so it cannot clash with the name of a user-defined module.\n+pub const METADATA_MODULE_NAME: &'static str = \"crate.metadata\";\n+/// The name of the crate-metadata object file the compiler generates. Must\n+/// match up with `METADATA_MODULE_NAME`.\n+pub const METADATA_OBJ_NAME: &'static str = \"crate.metadata.o\";\n+\n // RLIB LLVM-BYTECODE OBJECT LAYOUT\n // Version 1\n // Bytes    Data\n@@ -213,7 +220,7 @@ pub fn link_binary(sess: &Session,\n                 remove(sess, &obj);\n             }\n         }\n-        remove(sess, &outputs.with_extension(\"metadata.o\"));\n+        remove(sess, &outputs.with_extension(METADATA_OBJ_NAME));\n     }\n \n     out_filenames\n@@ -832,7 +839,7 @@ fn link_args(cmd: &mut Linker,\n     // object file, so we link that in here.\n     if crate_type == config::CrateTypeDylib ||\n        crate_type == config::CrateTypeProcMacro {\n-        cmd.add_object(&outputs.with_extension(\"metadata.o\"));\n+        cmd.add_object(&outputs.with_extension(METADATA_OBJ_NAME));\n     }\n \n     // Try to strip as much out of the generated object by removing unused"}, {"sha": "fa43d94e9c114aa9f8bf0f60743e71e3afe20f87", "filename": "src/librustc_trans/back/write.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e5396e025ed886c827348aac996c4c6c846fb5ab/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5396e025ed886c827348aac996c4c6c846fb5ab/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fwrite.rs?ref=e5396e025ed886c827348aac996c4c6c846fb5ab", "patch": "@@ -866,12 +866,12 @@ pub fn run_passes(sess: &Session,\n     // Clean up unwanted temporary files.\n \n     // We create the following files by default:\n-    //  - crate.#module-name#.bc\n-    //  - crate.#module-name#.o\n-    //  - crate.metadata.bc\n-    //  - crate.metadata.o\n-    //  - crate.o (linked from crate.##.o)\n-    //  - crate.bc (copied from crate.##.bc)\n+    //  - #crate#.#module-name#.bc\n+    //  - #crate#.#module-name#.o\n+    //  - #crate#.crate.metadata.bc\n+    //  - #crate#.crate.metadata.o\n+    //  - #crate#.o (linked from crate.##.o)\n+    //  - #crate#.bc (copied from crate.##.bc)\n     // We may create additional files if requested by the user (through\n     // `-C save-temps` or `--emit=` flags).\n \n@@ -919,9 +919,9 @@ pub fn run_passes(sess: &Session,\n     }\n \n     // We leave the following files around by default:\n-    //  - crate.o\n-    //  - crate.metadata.o\n-    //  - crate.bc\n+    //  - #crate#.o\n+    //  - #crate#.crate.metadata.o\n+    //  - #crate#.bc\n     // These are used in linking steps and will be cleaned up afterward.\n \n     // FIXME: time_llvm_passes support - does this use a global context or"}, {"sha": "a4841a914dedad40cc6f66340c7f9c455a78c0b4", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5396e025ed886c827348aac996c4c6c846fb5ab/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5396e025ed886c827348aac996c4c6c846fb5ab/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=e5396e025ed886c827348aac996c4c6c846fb5ab", "patch": "@@ -1146,7 +1146,7 @@ pub fn trans_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     });\n \n     let metadata_module = ModuleTranslation {\n-        name: \"metadata\".to_string(),\n+        name: link::METADATA_MODULE_NAME.to_string(),\n         symbol_name_hash: 0, // we always rebuild metadata, at least for now\n         source: ModuleSource::Translated(ModuleLlvm {\n             llcx: shared_ccx.metadata_llcx(),"}]}