{"sha": "37cbdf3924b6b13b8509eed0a9a6ce8c9f6eef93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3Y2JkZjM5MjRiNmIxM2I4NTA5ZWVkMGE5YTZjZThjOWY2ZWVmOTM=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-18T20:48:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-18T20:48:35Z"}, "message": "Rollup merge of #65540 - guanqun:extend-t-macro, r=nikomatsakis\n\nshow up some extra info when t!() fails", "tree": {"sha": "a73b250fe0a915cf9a597249be38428d01282397", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a73b250fe0a915cf9a597249be38428d01282397"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37cbdf3924b6b13b8509eed0a9a6ce8c9f6eef93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdqiUjCRBK7hj4Ov3rIwAAdHIIAGg2hznjO4hRWjKs71Gz88Lv\n5gNsQg0NJ3DktiSKeAj5Zn/5RHWGDN8OLQlC6an+sDik3/cHficBe5VmykMA4KaP\n6Yay2eSdeDeJj0rVp6+Gttl7JH+No0Qiu8hCnZt6enBLabvoCl/3Zejdu4LawwHF\nb73gEoX0Tvao5lx0KnJQoGyFFRVWOt/HhOH9402IW03lN5p/Lob4z4bCIcWkuf0r\ny4nMmrcLD+5JbNTF9EhyHFyaqjmL6XdDk8WQfU/Cs7WKtIWN9SrfYD7M02cfRYch\nzerc8/yiaBU4tDHc6H4Fdt0HYoijITaCbBLrqaW11OBN62dipIqnyMYfTdybJlw=\n=2tQu\n-----END PGP SIGNATURE-----\n", "payload": "tree a73b250fe0a915cf9a597249be38428d01282397\nparent bc85061203da7bf4ce9c795dfe0278c882ab9fea\nparent c716be6874f0c55c835d9b0aba5b41ff52329aab\nauthor Tyler Mandry <tmandry@gmail.com> 1571431715 -0700\ncommitter GitHub <noreply@github.com> 1571431715 -0700\n\nRollup merge of #65540 - guanqun:extend-t-macro, r=nikomatsakis\n\nshow up some extra info when t!() fails\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37cbdf3924b6b13b8509eed0a9a6ce8c9f6eef93", "html_url": "https://github.com/rust-lang/rust/commit/37cbdf3924b6b13b8509eed0a9a6ce8c9f6eef93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37cbdf3924b6b13b8509eed0a9a6ce8c9f6eef93/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc85061203da7bf4ce9c795dfe0278c882ab9fea", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc85061203da7bf4ce9c795dfe0278c882ab9fea", "html_url": "https://github.com/rust-lang/rust/commit/bc85061203da7bf4ce9c795dfe0278c882ab9fea"}, {"sha": "c716be6874f0c55c835d9b0aba5b41ff52329aab", "url": "https://api.github.com/repos/rust-lang/rust/commits/c716be6874f0c55c835d9b0aba5b41ff52329aab", "html_url": "https://github.com/rust-lang/rust/commit/c716be6874f0c55c835d9b0aba5b41ff52329aab"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "6fc72fa0b2a37d23f5ad367129bdce7a0d22d6ff", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37cbdf3924b6b13b8509eed0a9a6ce8c9f6eef93/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37cbdf3924b6b13b8509eed0a9a6ce8c9f6eef93/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=37cbdf3924b6b13b8509eed0a9a6ce8c9f6eef93", "patch": "@@ -1126,7 +1126,7 @@ impl Build {\n         }\n \n         let mut paths = Vec::new();\n-        let contents = t!(fs::read(stamp));\n+        let contents = t!(fs::read(stamp), &stamp);\n         // This is the method we use for extracting paths from the stamp file passed to us. See\n         // run_cargo for more information (in compile.rs).\n         for part in contents.split(|b| *b == 0) {"}, {"sha": "bb94fb2b755f53342b76fd3dbd28e0e223510196", "filename": "src/build_helper/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/37cbdf3924b6b13b8509eed0a9a6ce8c9f6eef93/src%2Fbuild_helper%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37cbdf3924b6b13b8509eed0a9a6ce8c9f6eef93/src%2Fbuild_helper%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuild_helper%2Flib.rs?ref=37cbdf3924b6b13b8509eed0a9a6ce8c9f6eef93", "patch": "@@ -21,6 +21,13 @@ macro_rules! t {\n             Err(e) => panic!(\"{} failed with {}\", stringify!($e), e),\n         }\n     };\n+    // it can show extra info in the second parameter\n+    ($e:expr, $extra:expr) => {\n+        match $e {\n+            Ok(e) => e,\n+            Err(e) => panic!(\"{} failed with {} ({:?})\", stringify!($e), e, $extra),\n+        }\n+    };\n }\n \n // Because Cargo adds the compiler's dylib path to our library search path, llvm-config may"}]}