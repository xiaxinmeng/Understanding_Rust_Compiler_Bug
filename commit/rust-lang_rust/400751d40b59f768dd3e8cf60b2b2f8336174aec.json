{"sha": "400751d40b59f768dd3e8cf60b2b2f8336174aec", "node_id": "C_kwDOAAsO6NoAKDQwMDc1MWQ0MGI1OWY3NjhkZDNlOGNmNjBiMmIyZjgzMzYxNzRhZWM", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-22T06:16:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-22T06:16:14Z"}, "message": "Rollup merge of #98005 - compiler-errors:impossible-bounds, r=Mark-Simulacrum\n\nAdd some tests for impossible bounds\n\nAdds test for #93008\nAdds test for #94680\nCloses #94999\nCloses #95640", "tree": {"sha": "936053f0f56146b9ff8f7cf8c460d9f02eee426f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/936053f0f56146b9ff8f7cf8c460d9f02eee426f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/400751d40b59f768dd3e8cf60b2b2f8336174aec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJisrOuCRBK7hj4Ov3rIwAAb2oIAFKFTsyuKoU3OO72PC1X9hPr\nJbAWBzrUxTMLYWUrPp9dyY6LywqqYZlFHy5GdCjO3zbgf6B6aKThwRIJOmHhJ9xR\nMlLscLwX/Hsv0a6OVfOWpv0y1+ItwVguSLgfvekfonkCoFuLfbB3jhNfOWLtyRVz\n5hVkztw2iftEMPXiC99kbfb1lbSiQR9exZYgfEtYmPGDmZrfnSVa81kPncGi/8cs\n3Pu5GcQJ7uTbvyHMWiwbexKVuD1TEeue87TKDqtC6O8NqSVq2/dsAE1+Nsua0Tym\nPVLx3vpk0KXVOkTxRucH87Idhm4NDwKfZZigstePJ2oe88S+2WP/Qqmw2Jik86E=\n=Jcy2\n-----END PGP SIGNATURE-----\n", "payload": "tree 936053f0f56146b9ff8f7cf8c460d9f02eee426f\nparent 8f861dae7a4069c2daa111bf9238032186be5c72\nparent e53b2baf29856dad9d47146b00c05a3fb5abe65a\nauthor Yuki Okushi <jtitor@2k36.org> 1655878574 +0900\ncommitter GitHub <noreply@github.com> 1655878574 +0900\n\nRollup merge of #98005 - compiler-errors:impossible-bounds, r=Mark-Simulacrum\n\nAdd some tests for impossible bounds\n\nAdds test for #93008\nAdds test for #94680\nCloses #94999\nCloses #95640\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/400751d40b59f768dd3e8cf60b2b2f8336174aec", "html_url": "https://github.com/rust-lang/rust/commit/400751d40b59f768dd3e8cf60b2b2f8336174aec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/400751d40b59f768dd3e8cf60b2b2f8336174aec/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f861dae7a4069c2daa111bf9238032186be5c72", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f861dae7a4069c2daa111bf9238032186be5c72", "html_url": "https://github.com/rust-lang/rust/commit/8f861dae7a4069c2daa111bf9238032186be5c72"}, {"sha": "e53b2baf29856dad9d47146b00c05a3fb5abe65a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e53b2baf29856dad9d47146b00c05a3fb5abe65a", "html_url": "https://github.com/rust-lang/rust/commit/e53b2baf29856dad9d47146b00c05a3fb5abe65a"}], "stats": {"total": 169, "additions": 151, "deletions": 18}, "files": [{"sha": "f4d21a160b695399672a77bf24816df512f2d858", "filename": "src/test/ui/trait-bounds/issue-93008.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.rs", "raw_url": "https://github.com/rust-lang/rust/raw/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.rs?ref=400751d40b59f768dd3e8cf60b2b2f8336174aec", "patch": "@@ -1,10 +1,15 @@\n-// compile-flags: -Zmir-opt-level=4\n+// build-pass\n+// compile-flags: -Zmir-opt-level=3 --crate-type=lib\n \n-pub fn bar<T>(s: &'static mut ())\n+#![feature(trivial_bounds)]\n+#![allow(trivial_bounds)]\n+\n+trait Foo {\n+    fn test(self);\n+}\n+fn baz<T>()\n where\n-    &'static mut (): Clone, //~ ERROR the trait bound\n+    &'static str: Foo,\n {\n-    <&'static mut () as Clone>::clone(&s);\n+    \"Foo\".test()\n }\n-\n-fn main() {}"}, {"sha": "10f80f8de0c9b8267a8f8c6466cba7048bae10f7", "filename": "src/test/ui/trait-bounds/issue-93008.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8f861dae7a4069c2daa111bf9238032186be5c72/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8f861dae7a4069c2daa111bf9238032186be5c72/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.stderr?ref=8f861dae7a4069c2daa111bf9238032186be5c72", "patch": "@@ -1,12 +0,0 @@\n-error[E0277]: the trait bound `&'static mut (): Clone` is not satisfied\n-  --> $DIR/issue-93008.rs:5:5\n-   |\n-LL |     &'static mut (): Clone,\n-   |     ^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `&'static mut ()`\n-   |\n-   = help: see issue #48214\n-   = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0277`."}, {"sha": "58e892079e65fda938ec3e7405d665e6cee9e92f", "filename": "src/test/ui/trait-bounds/issue-94680.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-94680.rs", "raw_url": "https://github.com/rust-lang/rust/raw/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-94680.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-94680.rs?ref=400751d40b59f768dd3e8cf60b2b2f8336174aec", "patch": "@@ -0,0 +1,14 @@\n+// check-pass\n+\n+fn main() {\n+    println!(\"{:?}\", {\n+        type T = ();\n+\n+        pub fn cloneit(it: &'_ mut T) -> (&'_ mut T, &'_ mut T)\n+        where\n+            for<'any> &'any mut T: Clone,\n+        {\n+            (it.clone(), it)\n+        }\n+    });\n+}"}, {"sha": "e131902346f1b2c3d73211ecff205ec40b7b07f1", "filename": "src/test/ui/trait-bounds/issue-94999.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-94999.rs", "raw_url": "https://github.com/rust-lang/rust/raw/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-94999.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-94999.rs?ref=400751d40b59f768dd3e8cf60b2b2f8336174aec", "patch": "@@ -0,0 +1,34 @@\n+// check-pass\n+\n+trait Identity<Q> {\n+    type T;\n+}\n+\n+impl<Q, T> Identity<Q> for T {\n+    type T = T;\n+}\n+\n+trait Holds {\n+    type Q;\n+}\n+\n+struct S;\n+struct X(S);\n+\n+struct XHelper;\n+\n+impl Holds for X {\n+    type Q = XHelper;\n+}\n+\n+impl<Q> Clone for X\n+where\n+    <S as Identity<Q>>::T: Clone,\n+    X: Holds<Q = Q>,\n+{\n+    fn clone(&self) -> Self {\n+        Self(self.0.clone())\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "e4e998b5d0bb8a86f4bdf82516e0174221e6d74d", "filename": "src/test/ui/trait-bounds/issue-95640.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-95640.rs", "raw_url": "https://github.com/rust-lang/rust/raw/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-95640.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-95640.rs?ref=400751d40b59f768dd3e8cf60b2b2f8336174aec", "patch": "@@ -0,0 +1,31 @@\n+// build-pass\n+// compile-flags:-Zmir-opt-level=3\n+\n+struct D;\n+\n+trait Tr {\n+    type It;\n+    fn foo(self) -> Option<Self::It>;\n+}\n+\n+impl<'a> Tr for &'a D {\n+    type It = ();\n+    fn foo(self) -> Option<()> {\n+        None\n+    }\n+}\n+\n+fn run<F>(f: F)\n+where\n+    for<'a> &'a D: Tr,\n+    F: Fn(<&D as Tr>::It),\n+{\n+    let d = &D;\n+    while let Some(i) = d.foo() {\n+        f(i);\n+    }\n+}\n+\n+fn main() {\n+    run(|_| {});\n+}"}, {"sha": "288b2098b4c026cf37fe87842c781d8e9ba12796", "filename": "src/test/ui/trait-bounds/select-param-env-instead-of-blanket.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fselect-param-env-instead-of-blanket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fselect-param-env-instead-of-blanket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fselect-param-env-instead-of-blanket.rs?ref=400751d40b59f768dd3e8cf60b2b2f8336174aec", "patch": "@@ -0,0 +1,43 @@\n+// known-bug\n+// build-fail\n+// failure-status: 101\n+// compile-flags:--crate-type=lib -Zmir-opt-level=3\n+// rustc-env:RUST_BACKTRACE=0\n+\n+// normalize-stderr-test \"thread 'rustc' panicked.*\" -> \"thread 'rustc' panicked\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n+// normalize-stderr-test \"error: internal compiler error.*\" -> \"error: internal compiler error\"\n+// normalize-stderr-test \"encountered.*with incompatible types:\" \"encountered ... with incompatible types:\"\n+// normalize-stderr-test \"note:.*unexpectedly panicked.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"note: we would appreciate a bug report.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"note: compiler flags.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"note: rustc.*running on.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"query stack during panic:\\n\" -> \"\"\n+// normalize-stderr-test \"we're just showing a limited slice of the query stack\\n\" -> \"\"\n+// normalize-stderr-test \"end of query stack\\n\" -> \"\"\n+// normalize-stderr-test \"#.*\\n\" -> \"\"\n+\n+// This is a known bug that @compiler-errors tried to fix in #94238,\n+// but the solution was probably not correct.\n+\n+pub trait Factory<T> {\n+    type Item;\n+}\n+\n+pub struct IntFactory;\n+\n+impl<T> Factory<T> for IntFactory {\n+    type Item = usize;\n+}\n+\n+pub fn foo<T>()\n+where\n+    IntFactory: Factory<T>,\n+{\n+    let mut x: <IntFactory as Factory<T>>::Item = bar::<T>();\n+}\n+\n+#[inline]\n+pub fn bar<T>() -> <IntFactory as Factory<T>>::Item {\n+    0usize\n+}"}, {"sha": "56cc5c93c96f23ba33aa66a2d7d28a2cb9d3dfa0", "filename": "src/test/ui/trait-bounds/select-param-env-instead-of-blanket.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fselect-param-env-instead-of-blanket.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/400751d40b59f768dd3e8cf60b2b2f8336174aec/src%2Ftest%2Fui%2Ftrait-bounds%2Fselect-param-env-instead-of-blanket.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fselect-param-env-instead-of-blanket.stderr?ref=400751d40b59f768dd3e8cf60b2b2f8336174aec", "patch": "@@ -0,0 +1,18 @@\n+error: internal compiler error\n+\n+error: internal compiler error\n+                                encountered ... with incompatible types:\n+                                left-hand side has type: <IntFactory as Factory<T>>::Item\n+                                right-hand side has type: usize\n+  --> $DIR/select-param-env-instead-of-blanket.rs:42:5\n+   |\n+LL |     let mut x: <IntFactory as Factory<T>>::Item = bar::<T>();\n+   |                                                   ---------- in this inlined function call\n+...\n+LL |     0usize\n+   |     ^^^^^^\n+   |\n+   = note: delayed at compiler/rustc_const_eval/src/transform/validate.rs:128:36\n+\n+thread 'rustc' panicked\n+"}]}