{"sha": "78374d11ce02ae686035cd8489b58de4c2282b40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4Mzc0ZDExY2UwMmFlNjg2MDM1Y2Q4NDg5YjU4ZGU0YzIyODJiNDA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-02T01:53:52Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-02T01:53:52Z"}, "message": "rustc: Add a new mode to the pretty printer that prints out node IDs, for debugging", "tree": {"sha": "e67ebaddcab58d741fd40b51518a26ee6f0cff07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e67ebaddcab58d741fd40b51518a26ee6f0cff07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78374d11ce02ae686035cd8489b58de4c2282b40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78374d11ce02ae686035cd8489b58de4c2282b40", "html_url": "https://github.com/rust-lang/rust/commit/78374d11ce02ae686035cd8489b58de4c2282b40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78374d11ce02ae686035cd8489b58de4c2282b40/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eae3036179ae56876104775c45f120e769de51aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/eae3036179ae56876104775c45f120e769de51aa", "html_url": "https://github.com/rust-lang/rust/commit/eae3036179ae56876104775c45f120e769de51aa"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "0d5223d8702336b5d31364fbb36ffa9fdbdeaa27", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/78374d11ce02ae686035cd8489b58de4c2282b40/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78374d11ce02ae686035cd8489b58de4c2282b40/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=78374d11ce02ae686035cd8489b58de4c2282b40", "patch": "@@ -37,6 +37,7 @@ import back::link::output_type;\n tag pp_mode {\n     ppm_normal;\n     ppm_typed;\n+    ppm_identified;\n }\n \n fn default_environment(session::session sess,\n@@ -132,6 +133,7 @@ fn pretty_print_input(session::session sess, eval::env env, str input,\n             mode = pprust::mo_typed(ty_cx);\n         }\n         case (ppm_normal) { mode = pprust::mo_untyped; }\n+        case (ppm_identified) { mode = pprust::mo_identified; }\n     }\n \n     pprust::print_file(sess, crate.node.module, input, std::io::stdout(),\n@@ -313,9 +315,10 @@ fn build_session(@session::options sopts) -> session::session {\n fn parse_pretty(session::session sess, &str name) -> pp_mode {\n     if (str::eq(name, \"normal\")) { ret ppm_normal; }\n     else if (str::eq(name, \"typed\")) { ret ppm_typed; }\n-    else {\n-        sess.err(\"argument to `pretty` must be either `normal` or `typed`\");\n-    }\n+    else if (str::eq(name, \"identified\")) { ret ppm_identified; }\n+\n+    sess.err(\"argument to `pretty` must be one of `normal`, `typed`, or \" +\n+             \"`identified`\");\n }\n \n fn main(vec[str] args) {"}, {"sha": "ed73cb936b226e85f218e6f5970147ac86dffa76", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/78374d11ce02ae686035cd8489b58de4c2282b40/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78374d11ce02ae686035cd8489b58de4c2282b40/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=78374d11ce02ae686035cd8489b58de4c2282b40", "patch": "@@ -1,3 +1,4 @@\n+import std::uint;\n import std::vec;\n import std::str;\n import std::io;\n@@ -30,6 +31,7 @@ const uint default_columns = 78u;\n tag mode {\n     mo_untyped;\n     mo_typed(ty::ctxt);\n+    mo_identified;\n }\n \n type ps = @rec(pp::printer s,\n@@ -161,6 +163,16 @@ fn bclose(&ps s, common::span span) {\n     end(s); // close the outer-box\n }\n \n+// Synthesizes a comment that was not textually present in the original source\n+// file.\n+fn synth_comment(&ps s, str text) {\n+    word(s.s, \"/*\");\n+    space(s.s);\n+    word(s.s, text);\n+    space(s.s);\n+    word(s.s, \"*/\");\n+}\n+\n fn commasep[IN](&ps s, breaks b, vec[IN] elts, fn(&ps, &IN) op) {\n     box(s, 0u, b);\n     auto first = true;\n@@ -503,6 +515,7 @@ fn print_expr(&ps s, &@ast::expr expr) {\n     alt (s.mode) {\n         case (mo_untyped) { /* no-op */ }\n         case (mo_typed(_)) { popen(s); }\n+        case (mo_identified) { popen(s); }\n     }\n \n     alt (expr.node) {\n@@ -844,7 +857,7 @@ fn print_expr(&ps s, &@ast::expr expr) {\n         }\n     }\n \n-    // Print the type if necessary.\n+    // Print the type or node ID if necessary.\n     alt (s.mode) {\n         case (mo_untyped) { /* no-op */ }\n         case (mo_typed(?tcx)) {\n@@ -854,6 +867,11 @@ fn print_expr(&ps s, &@ast::expr expr) {\n             word(s.s, ty::ty_to_str(tcx, ty::expr_ty(tcx, expr)));\n             pclose(s);\n         }\n+        case (mo_identified) {\n+            space(s.s);\n+            synth_comment(s, uint::to_str(ty::expr_ann(expr).id, 10u));\n+            pclose(s);\n+        }\n     }\n \n     end(s);\n@@ -874,14 +892,15 @@ fn print_decl(&ps s, &@ast::decl decl) {\n                 case (_) {\n                     word_nbsp(s, \"auto\");\n \n-                    // Print the type if necessary.\n+                    // Print the type or node ID if necessary.\n                     alt (s.mode) {\n                         case (mo_untyped) { /* no-op */ }\n                         case (mo_typed(?tcx)) {\n                             auto lty =\n                                 ty::ann_to_type(tcx.node_types, loc.ann);\n                             word_space(s, ty::ty_to_str(tcx, lty));\n                         }\n+                        case (mo_identified) { /* no-op */ }\n                     }\n                 }\n             }"}]}