{"sha": "afcf099e30c9d740cee7301cac486f27c5716857", "node_id": "C_kwDOAAsO6NoAKGFmY2YwOTllMzBjOWQ3NDBjZWU3MzAxY2FjNDg2ZjI3YzU3MTY4NTc", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-05-20T12:03:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-20T12:03:01Z"}, "message": "Rollup merge of #96565 - notriddle:notriddle/impl-box, r=camelid\n\nrustdoc: show implementations on `#[fundamental]` wrappers\n\nFixes #92940", "tree": {"sha": "baf60e78e0fa6c22bd997a9aba3b8946698dc2b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baf60e78e0fa6c22bd997a9aba3b8946698dc2b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afcf099e30c9d740cee7301cac486f27c5716857", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJih4N2CRBK7hj4Ov3rIwAAXMIIADialqhwmYqYFZ7GyEdh4f6D\nqnMHFiHQ+VQMiN5PdRd3XEW0TitmKP3YZEuoJg0CTewZPPlot4hbE8MDv9h+nSIy\nBkbHLjurDsYeIgs+R8He4gPXeoktjqZjgqGwrZVK4lm0CLJ156fNERoY/3V0y9Wx\nwx0rtgZp7bcMBQuSdUYO65zj1NCzGPK1FdSnE2QZ1Jb7gYG1MnySC02v0+Y9KBOS\nYUoLncjNgdYiNBCG9HVsbYYdZrQ24u0P/8nwas1Dp3lkwSgs7vS2iYmJVNF7IwP+\nzVrbEunsnT2srvQEQ1OncIiXW0e0afqtRuUrCxhIN9q2L+G9VRGm6q+g8gO91+E=\n=LVQq\n-----END PGP SIGNATURE-----\n", "payload": "tree baf60e78e0fa6c22bd997a9aba3b8946698dc2b1\nparent cd73afadae5b0163f9285f1b5edbbd1c84fde410\nparent 62b9e0643b54f2ebe9d01e9537de7d4ad741ca83\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1653048181 +0200\ncommitter GitHub <noreply@github.com> 1653048181 +0200\n\nRollup merge of #96565 - notriddle:notriddle/impl-box, r=camelid\n\nrustdoc: show implementations on `#[fundamental]` wrappers\n\nFixes #92940\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afcf099e30c9d740cee7301cac486f27c5716857", "html_url": "https://github.com/rust-lang/rust/commit/afcf099e30c9d740cee7301cac486f27c5716857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afcf099e30c9d740cee7301cac486f27c5716857/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd73afadae5b0163f9285f1b5edbbd1c84fde410", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd73afadae5b0163f9285f1b5edbbd1c84fde410", "html_url": "https://github.com/rust-lang/rust/commit/cd73afadae5b0163f9285f1b5edbbd1c84fde410"}, {"sha": "62b9e0643b54f2ebe9d01e9537de7d4ad741ca83", "url": "https://api.github.com/repos/rust-lang/rust/commits/62b9e0643b54f2ebe9d01e9537de7d4ad741ca83", "html_url": "https://github.com/rust-lang/rust/commit/62b9e0643b54f2ebe9d01e9537de7d4ad741ca83"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "28648e25d9053c9ef219d809274c91bd49bf4536", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/afcf099e30c9d740cee7301cac486f27c5716857/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afcf099e30c9d740cee7301cac486f27c5716857/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=afcf099e30c9d740cee7301cac486f27c5716857", "patch": "@@ -3,7 +3,7 @@ use std::mem;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_middle::middle::privacy::AccessLevels;\n-use rustc_middle::ty::TyCtxt;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::{sym, Symbol};\n \n use crate::clean::{self, types::ExternalLocation, ExternalCrate, ItemId, PrimitiveType};\n@@ -452,6 +452,15 @@ impl<'a, 'tcx> DocFolder for CacheBuilder<'a, 'tcx> {\n                 clean::Type::Path { ref path }\n                 | clean::BorrowedRef { type_: box clean::Type::Path { ref path }, .. } => {\n                     dids.insert(path.def_id());\n+                    if let Some(generics) = path.generics() &&\n+                        let ty::Adt(adt, _) = self.tcx.type_of(path.def_id()).kind() &&\n+                        adt.is_fundamental() {\n+                        for ty in generics {\n+                            if let Some(did) = ty.def_id(&self.cache) {\n+                                dids.insert(did);\n+                            }\n+                        }\n+                    }\n                 }\n                 clean::DynTrait(ref bounds, _)\n                 | clean::BorrowedRef { type_: box clean::DynTrait(ref bounds, _), .. } => {"}, {"sha": "a371db135cff3c3bf3a682161a6678c35204a931", "filename": "src/test/rustdoc/impl-box.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/afcf099e30c9d740cee7301cac486f27c5716857/src%2Ftest%2Frustdoc%2Fimpl-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afcf099e30c9d740cee7301cac486f27c5716857/src%2Ftest%2Frustdoc%2Fimpl-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fimpl-box.rs?ref=afcf099e30c9d740cee7301cac486f27c5716857", "patch": "@@ -0,0 +1,16 @@\n+// https://github.com/rust-lang/rust/issues/92940\n+//\n+// Show traits implemented on fundamental types that wrap local ones.\n+\n+pub struct MyType;\n+\n+// @has 'impl_box/struct.MyType.html'\n+// @has '-' '//*[@id=\"impl-Iterator\"]' 'impl Iterator for Box<MyType>'\n+\n+impl Iterator for Box<MyType> {\n+    type Item = ();\n+\n+    fn next(&mut self) -> Option<Self::Item> {\n+        todo!()\n+    }\n+}"}]}