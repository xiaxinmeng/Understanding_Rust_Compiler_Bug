{"sha": "19802f86526442759e4fd3784e94f92d3c1b74bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ODAyZjg2NTI2NDQyNzU5ZTRmZDM3ODRlOTRmOTJkM2MxYjc0YmY=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-09-13T17:06:04Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-09-13T17:06:04Z"}, "message": "rustc_tools_util: clean up pedantic clippy warnings", "tree": {"sha": "d72814eb5f2606974f3f082138d3bef5880087ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d72814eb5f2606974f3f082138d3bef5880087ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19802f86526442759e4fd3784e94f92d3c1b74bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19802f86526442759e4fd3784e94f92d3c1b74bf", "html_url": "https://github.com/rust-lang/rust/commit/19802f86526442759e4fd3784e94f92d3c1b74bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19802f86526442759e4fd3784e94f92d3c1b74bf/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8400061bd813fa768e94534028c875ee2c9fe89", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8400061bd813fa768e94534028c875ee2c9fe89", "html_url": "https://github.com/rust-lang/rust/commit/e8400061bd813fa768e94534028c875ee2c9fe89"}], "stats": {"total": 58, "additions": 27, "deletions": 31}, "files": [{"sha": "bbe86be3c7cb3499654dd3da5cac290ce6bc4b4c", "filename": "rustc_tools_util/src/lib.rs", "status": "modified", "additions": 27, "deletions": 31, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/19802f86526442759e4fd3784e94f92d3c1b74bf/rustc_tools_util%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19802f86526442759e4fd3784e94f92d3c1b74bf/rustc_tools_util%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2Fsrc%2Flib.rs?ref=19802f86526442759e4fd3784e94f92d3c1b74bf", "patch": "@@ -39,48 +39,44 @@ pub struct VersionInfo {\n }\n \n impl std::fmt::Display for VersionInfo {\n-    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n-        match self.commit_hash {\n-            Some(_) => {\n-                write!(\n-                    f,\n-                    \"{} {}.{}.{} ({} {})\",\n-                    self.crate_name,\n-                    self.major,\n-                    self.minor,\n-                    self.patch,\n-                    self.commit_hash.clone().unwrap_or_default().trim(),\n-                    self.commit_date.clone().unwrap_or_default().trim(),\n-                )?;\n-            },\n-            None => {\n-                write!(f, \"{} {}.{}.{}\", self.crate_name, self.major, self.minor, self.patch)?;\n-            },\n-        };\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        if self.commit_hash.is_some() {\n+            write!(\n+                f,\n+                \"{} {}.{}.{} ({} {})\",\n+                self.crate_name,\n+                self.major,\n+                self.minor,\n+                self.patch,\n+                self.commit_hash.clone().unwrap_or_default().trim(),\n+                self.commit_date.clone().unwrap_or_default().trim(),\n+            )?;\n+        } else {\n+            write!(f, \"{} {}.{}.{}\", self.crate_name, self.major, self.minor, self.patch)?;\n+        }\n+\n         Ok(())\n     }\n }\n \n impl std::fmt::Debug for VersionInfo {\n-    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         write!(\n             f,\n             \"VersionInfo {{ crate_name: \\\"{}\\\", major: {}, minor: {}, patch: {}\",\n             self.crate_name, self.major, self.minor, self.patch,\n         )?;\n-        match self.commit_hash {\n-            Some(_) => {\n-                write!(\n-                    f,\n-                    \", commit_hash: \\\"{}\\\", commit_date: \\\"{}\\\" }}\",\n-                    self.commit_hash.clone().unwrap_or_default().trim(),\n-                    self.commit_date.clone().unwrap_or_default().trim()\n-                )?;\n-            },\n-            None => {\n-                write!(f, \" }}\")?;\n-            },\n+        if self.commit_hash.is_some() {\n+            write!(\n+                f,\n+                \", commit_hash: \\\"{}\\\", commit_date: \\\"{}\\\" }}\",\n+                self.commit_hash.clone().unwrap_or_default().trim(),\n+                self.commit_date.clone().unwrap_or_default().trim()\n+            )?;\n+        } else {\n+            write!(f, \" }}\")?;\n         }\n+\n         Ok(())\n     }\n }"}]}