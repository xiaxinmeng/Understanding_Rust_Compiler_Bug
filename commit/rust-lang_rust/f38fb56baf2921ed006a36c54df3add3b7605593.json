{"sha": "f38fb56baf2921ed006a36c54df3add3b7605593", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzOGZiNTZiYWYyOTIxZWQwMDZhMzZjNTRkZjNhZGQzYjc2MDU1OTM=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2018-12-31T11:06:08Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2018-12-31T12:38:31Z"}, "message": "Limit infinite_iter collect() check to known types", "tree": {"sha": "ba81fd7605d647ecf0adbddff289db77902a2273", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba81fd7605d647ecf0adbddff289db77902a2273"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f38fb56baf2921ed006a36c54df3add3b7605593", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f38fb56baf2921ed006a36c54df3add3b7605593", "html_url": "https://github.com/rust-lang/rust/commit/f38fb56baf2921ed006a36c54df3add3b7605593", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f38fb56baf2921ed006a36c54df3add3b7605593/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "529f698c23099cbdb0afe5fe308814639808233d", "url": "https://api.github.com/repos/rust-lang/rust/commits/529f698c23099cbdb0afe5fe308814639808233d", "html_url": "https://github.com/rust-lang/rust/commit/529f698c23099cbdb0afe5fe308814639808233d"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "e2da8461f4110e9fd11b2354285e811d143c8dac", "filename": "clippy_lints/src/infinite_iter.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f38fb56baf2921ed006a36c54df3add3b7605593/clippy_lints%2Fsrc%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f38fb56baf2921ed006a36c54df3add3b7605593/clippy_lints%2Fsrc%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfinite_iter.rs?ref=f38fb56baf2921ed006a36c54df3add3b7605593", "patch": "@@ -7,7 +7,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use crate::utils::{get_trait_def_id, higher, implements_trait, match_qpath, paths, span_lint};\n+use crate::utils::{get_trait_def_id, higher, implements_trait, match_qpath, match_type, paths, span_lint};\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};\n@@ -200,7 +200,6 @@ static POSSIBLY_COMPLETING_METHODS: &[(&str, usize)] = &[\n /// their iterators\n static COMPLETING_METHODS: &[(&str, usize)] = &[\n     (\"count\", 1),\n-    (\"collect\", 1),\n     (\"fold\", 3),\n     (\"for_each\", 2),\n     (\"partition\", 2),\n@@ -214,6 +213,18 @@ static COMPLETING_METHODS: &[(&str, usize)] = &[\n     (\"product\", 1),\n ];\n \n+/// the paths of types that are known to be infinitely allocating\n+static INFINITE_COLLECTORS: &[&[&str]] = &[\n+    &paths::BINARY_HEAP,\n+    &paths::BTREEMAP,\n+    &paths::BTREESET,\n+    &paths::HASHMAP,\n+    &paths::HASHSET,\n+    &paths::LINKED_LIST,\n+    &paths::VEC,\n+    &paths::VEC_DEQUE,\n+];\n+\n fn complete_infinite_iter(cx: &LateContext<'_, '_>, expr: &Expr) -> Finiteness {\n     match expr.node {\n         ExprKind::MethodCall(ref method, _, ref args) => {\n@@ -233,6 +244,11 @@ fn complete_infinite_iter(cx: &LateContext<'_, '_>, expr: &Expr) -> Finiteness {\n                 if not_double_ended {\n                     return is_infinite(cx, &args[0]);\n                 }\n+            } else if method.ident.name == \"collect\" {\n+                let ty = cx.tables.expr_ty(expr);\n+                if INFINITE_COLLECTORS.iter().any(|path| match_type(cx, ty, path)) {\n+                    return is_infinite(cx, &args[0]);\n+                }\n             }\n         },\n         ExprKind::Binary(op, ref l, ref r) => {"}, {"sha": "bd266368dc4b161c0a559240f25aba791d6e67b1", "filename": "tests/ui/infinite_iter.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f38fb56baf2921ed006a36c54df3add3b7605593/tests%2Fui%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f38fb56baf2921ed006a36c54df3add3b7605593/tests%2Fui%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.rs?ref=f38fb56baf2921ed006a36c54df3add3b7605593", "patch": "@@ -58,3 +58,22 @@ fn main() {\n     infinite_iters();\n     potential_infinite_iters();\n }\n+\n+mod finite_collect {\n+    use std::collections::HashSet;\n+    use std::iter::FromIterator;\n+\n+    struct C;\n+    impl FromIterator<i32> for C {\n+        fn from_iter<I: IntoIterator<Item = i32>>(iter: I) -> Self {\n+            C\n+        }\n+    }\n+\n+    fn check_collect() {\n+        let _: HashSet<i32> = (0..).collect(); // Infinite iter\n+\n+        // Some data structures don't collect infinitely, such as `ArrayVec`\n+        let _: C = (0..).collect();\n+    }\n+}"}, {"sha": "288285d9aaebaa1a5b869cc22aa5706530f7b905", "filename": "tests/ui/infinite_iter.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f38fb56baf2921ed006a36c54df3add3b7605593/tests%2Fui%2Finfinite_iter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f38fb56baf2921ed006a36c54df3add3b7605593/tests%2Fui%2Finfinite_iter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.stderr?ref=f38fb56baf2921ed006a36c54df3add3b7605593", "patch": "@@ -105,5 +105,13 @@ error: possible infinite iteration detected\n LL |     (0..).all(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 14 previous errors\n+error: infinite iteration detected\n+  --> $DIR/infinite_iter.rs:74:31\n+   |\n+LL |         let _: HashSet<i32> = (0..).collect(); // Infinite iter\n+   |                               ^^^^^^^^^^^^^^^\n+   |\n+   = note: #[deny(clippy::infinite_iter)] on by default\n+\n+error: aborting due to 15 previous errors\n "}]}