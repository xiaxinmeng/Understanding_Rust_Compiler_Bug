{"sha": "793d9fcb5237f2148a7a40f2f17d4a8dcb6128cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5M2Q5ZmNiNTIzN2YyMTQ4YTdhNDBmMmYxN2Q0YThkY2I2MTI4Y2I=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-06-12T12:09:17Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-06-12T12:09:17Z"}, "message": "Add tests for tuple-like structs and dictionary-like enum variants", "tree": {"sha": "28853ff7dabc94280732ae6715ae871125dd3257", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28853ff7dabc94280732ae6715ae871125dd3257"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/793d9fcb5237f2148a7a40f2f17d4a8dcb6128cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/793d9fcb5237f2148a7a40f2f17d4a8dcb6128cb", "html_url": "https://github.com/rust-lang/rust/commit/793d9fcb5237f2148a7a40f2f17d4a8dcb6128cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/793d9fcb5237f2148a7a40f2f17d4a8dcb6128cb/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16d5c83d5fe19a89ad6740ca4f53750f997e2def", "url": "https://api.github.com/repos/rust-lang/rust/commits/16d5c83d5fe19a89ad6740ca4f53750f997e2def", "html_url": "https://github.com/rust-lang/rust/commit/16d5c83d5fe19a89ad6740ca4f53750f997e2def"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "c13f7346b1178c6c0ad8d73c147397e168b9738f", "filename": "src/test/compile-fail/trait-bounds-on-structs-and-enums.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/793d9fcb5237f2148a7a40f2f17d4a8dcb6128cb/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/793d9fcb5237f2148a7a40f2f17d4a8dcb6128cb/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums.rs?ref=793d9fcb5237f2148a7a40f2f17d4a8dcb6128cb", "patch": "@@ -47,6 +47,14 @@ enum MoreBadness<V> {\n     EvenMoreBadness(Bar<V>), //~ ERROR not implemented\n }\n \n+struct TupleLike(\n+    Foo<i32>, //~ ERROR not implemented\n+);\n+\n+enum Enum {\n+    DictionaryLike { field: Bar<i32> }, //~ ERROR not implemented\n+}\n+\n trait PolyTrait<T>\n {\n     fn whatever(&self, t: T) {}"}]}