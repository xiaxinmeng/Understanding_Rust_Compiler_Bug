{"sha": "898701cb35833b2ecea8bc7f3902a35b7eccc219", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ODcwMWNiMzU4MzNiMmVjZWE4YmM3ZjM5MDJhMzViN2VjY2MyMTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-10T03:21:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-10T03:21:30Z"}, "message": "auto merge of #15556 : alexcrichton/rust/snapshots, r=brson\n\nCloses #15544", "tree": {"sha": "76384e124ead2910a08b688c43b26f05ee68e437", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76384e124ead2910a08b688c43b26f05ee68e437"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/898701cb35833b2ecea8bc7f3902a35b7eccc219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/898701cb35833b2ecea8bc7f3902a35b7eccc219", "html_url": "https://github.com/rust-lang/rust/commit/898701cb35833b2ecea8bc7f3902a35b7eccc219", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/898701cb35833b2ecea8bc7f3902a35b7eccc219/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18520699f0c40d347fe1bde00d4f1c822f1bb28d", "url": "https://api.github.com/repos/rust-lang/rust/commits/18520699f0c40d347fe1bde00d4f1c822f1bb28d", "html_url": "https://github.com/rust-lang/rust/commit/18520699f0c40d347fe1bde00d4f1c822f1bb28d"}, {"sha": "0c71e0c5967c4650c617dfc5cc11152b0e08370c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c71e0c5967c4650c617dfc5cc11152b0e08370c", "html_url": "https://github.com/rust-lang/rust/commit/0c71e0c5967c4650c617dfc5cc11152b0e08370c"}], "stats": {"total": 255, "additions": 13, "deletions": 242}, "files": [{"sha": "e6fb22e8c42ad36e218cc5ade3d7656d47ac2d56", "filename": "mk/target.mk", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -68,15 +68,6 @@ $(foreach host,$(CFG_HOST),\t\t\t\t\t\t    \\\n # $(4) is the crate name\n define RUST_TARGET_STAGE_N\n \n-# NOTE: after a stage0 snap this should be just EXTRA_FILENAME, not with a stage\n-# or target bound\n-EXTRA_FILENAME_$(1)_$(2) = -C extra-filename=-$$(CFG_FILENAME_EXTRA)\n-ifeq ($(1),0)\n-ifeq ($$(CFG_BUILD),$(2))\n-EXTRA_FILENAME_$(1)_$(2) =\n-endif\n-endif\n-\n $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4): CFG_COMPILER_HOST_TRIPLE = $(2)\n $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4):\t\t\t\t    \\\n \t\t$$(CRATEFILE_$(4))\t\t\t\t    \\\n@@ -95,7 +86,7 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4):\t\t\t\t    \\\n \t\t-L \"$$(dir $$(LLVM_STDCPP_LOCATION_$(2)))\" \\\n \t\t$$(RUSTFLAGS_$(4)) \\\n \t\t--out-dir $$(@D) \\\n-\t\t$$(EXTRA_FILENAME_$(1)_$(2)) \\\n+\t\t-C extra-filename=-$$(CFG_FILENAME_EXTRA) \\\n \t\t$$<\n \t@touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES,\\"}, {"sha": "80b6cee2a9db94189d05dd1b8ba72ae2fd1185ff", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -60,7 +60,6 @@\n //! by libc malloc/free.  The `libc_heap` module is defined to be wired up to\n //! the system malloc/free.\n \n-#![crate_id = \"alloc#0.11.0\"] // NOTE: remove after a stage0 snap\n #![crate_name = \"alloc\"]\n #![experimental]\n #![license = \"MIT/ASL2\"]\n@@ -71,7 +70,6 @@\n \n #![no_std]\n #![feature(lang_items, phase, unsafe_destructor)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #[phase(plugin, link)]\n extern crate core;"}, {"sha": "0118828ae18ecaa3a994c386e1b4fb16bcc74d38", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -19,7 +19,6 @@\n //! arena but can only hold objects of a single type, and Arena, which is a\n //! more complex, slower Arena which can hold objects of any type.\n \n-#![crate_id = \"arena#0.11.0\"]\n #![crate_name = \"arena\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -31,7 +30,6 @@\n \n #![feature(unsafe_destructor)]\n #![allow(missing_doc)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n use std::cell::{Cell, RefCell};\n use std::cmp;"}, {"sha": "226da13f9e228b5c33c80a71481738ec67855a0f", "filename": "src/libcollections/bitv.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibcollections%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibcollections%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbitv.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -16,20 +16,16 @@ use core::cmp;\n use core::default::Default;\n use core::fmt;\n use core::iter::Take;\n+use core::ops::Index;\n use core::slice;\n use core::uint;\n use std::hash;\n \n use {Collection, Mutable, Set, MutableSet};\n use vec::Vec;\n \n-#[cfg(not(stage0))]\n-use core::ops::Index;\n \n-#[cfg(not(stage0))]\n static TRUE: bool = true;\n-\n-#[cfg(not(stage0))]\n static FALSE: bool = false;\n \n #[deriving(Clone)]\n@@ -80,7 +76,6 @@ pub struct Bitv {\n     nbits: uint\n }\n \n-#[cfg(not(stage0))]\n impl Index<uint,bool> for Bitv {\n     #[inline]\n     fn index<'a>(&'a self, i: &uint) -> &'a bool {"}, {"sha": "cce2d14efa9f7bbfacfe206ca79a1db64b02d8fd", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -12,7 +12,6 @@\n  * Collection types.\n  */\n \n-#![crate_id = \"collections#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"collections\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -25,7 +24,6 @@\n #![feature(macro_rules, managed_boxes, default_type_params, phase, globs)]\n #![feature(unsafe_destructor)]\n #![no_std]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #[phase(plugin, link)] extern crate core;\n extern crate unicode;"}, {"sha": "6d76f7c36e87b0dddf1c78c8847c1ba4f59f03a3", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -47,7 +47,6 @@\n // Since libcore defines many fundamental lang items, all tests live in a\n // separate crate, libcoretest, to avoid bizarre issues.\n \n-#![crate_id = \"core#0.11.0\"]\n #![crate_name = \"core\"]\n #![experimental]\n #![license = \"MIT/ASL2\"]\n@@ -61,7 +60,6 @@\n #![feature(globs, intrinsics, lang_items, macro_rules, managed_boxes, phase)]\n #![feature(simd, unsafe_destructor)]\n #![deny(missing_doc)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n mod macros;\n "}, {"sha": "53179df4cb9b322ebdbda9d741ae76cbb4721a3b", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -636,7 +636,6 @@ shr_impl!(uint u8 u16 u32 u64 int i8 i16 i32 i64)\n  * ```\n  */\n #[lang=\"index\"]\n-#[cfg(not(stage0))]\n pub trait Index<Index,Result> {\n     /// The method for the indexing (`Foo[Bar]`) operation\n     fn index<'a>(&'a self, index: &Index) -> &'a Result;\n@@ -668,7 +667,6 @@ pub trait Index<Index,Result> {\n  * ```\n  */\n #[lang=\"index_mut\"]\n-#[cfg(not(stage0))]\n pub trait IndexMut<Index,Result> {\n     /// The method for the indexing (`Foo[Bar]`) operation\n     fn index_mut<'a>(&'a mut self, index: &Index) -> &'a mut Result;"}, {"sha": "d8ab89fd504f57076164f8ae0db78d3ddcbe551e", "filename": "src/libcore/prelude.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibcore%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibcore%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprelude.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -34,7 +34,6 @@ pub use ops::{Add, Sub, Mul, Div, Rem, Neg, Not};\n pub use ops::{BitAnd, BitOr, BitXor};\n pub use ops::{Drop, Deref, DerefMut};\n pub use ops::{Shl, Shr};\n-#[cfg(not(stage0))]\n pub use ops::{Index, IndexMut};\n pub use option::{Option, Some, None};\n pub use result::{Result, Ok, Err};"}, {"sha": "1d15c62e75234f19e9ae9860709811d86ff36876", "filename": "src/libdebug/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibdebug%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibdebug%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibdebug%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -16,7 +16,6 @@\n //! Additionally, it is not guaranteed that functionality such as reflection\n //! will persist into the future.\n \n-#![crate_id = \"debug#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"debug\"]\n #![experimental]\n #![license = \"MIT/ASL2\"]\n@@ -28,7 +27,6 @@\n #![experimental]\n #![feature(managed_boxes, macro_rules)]\n #![allow(experimental)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n pub mod fmt;\n pub mod reflect;"}, {"sha": "b9d61ab3868401c265c26afae1669fa7b8aa3d24", "filename": "src/libflate/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibflate%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibflate%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibflate%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -18,7 +18,6 @@ Simple [DEFLATE][def]-based compression. This is a wrapper around the\n \n */\n \n-#![crate_id = \"flate#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"flate\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -28,7 +27,6 @@ Simple [DEFLATE][def]-based compression. This is a wrapper around the\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\")]\n #![feature(phase)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #[cfg(test)] #[phase(plugin, link)] extern crate log;\n "}, {"sha": "62547b6669f7acfec1ca168b356eca821b1962e2", "filename": "src/libfmt_macros/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibfmt_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibfmt_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfmt_macros%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -14,14 +14,12 @@\n //! Parsing does not happen at runtime: structures of `std::fmt::rt` are\n //! generated instead.\n \n-#![crate_id = \"fmt_macros#0.11.0\"] // NOTE: remove after stage0c\n #![crate_name = \"fmt_macros\"]\n #![experimental]\n #![license = \"MIT/ASL2\"]\n #![crate_type = \"rlib\"]\n #![crate_type = \"dylib\"]\n #![feature(macro_rules, globs)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n use std::char;\n use std::str;"}, {"sha": "b490f0903020c6db3a59171bf069b1e8abe0e106", "filename": "src/libfourcc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibfourcc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibfourcc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfourcc%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -39,7 +39,6 @@ fn main() {\n \n */\n \n-#![crate_id = \"fourcc#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"fourcc\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -48,7 +47,6 @@ fn main() {\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\")]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #![feature(plugin_registrar, managed_boxes)]\n "}, {"sha": "cf879c5d7efebf6fc76df49f77fdd38c8de5e7f4", "filename": "src/libgetopts/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -76,7 +76,6 @@\n //! }\n //! ~~~\n \n-#![crate_id = \"getopts#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"getopts\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -88,7 +87,6 @@\n        html_playground_url = \"http://play.rust-lang.org/\")]\n #![feature(globs, phase)]\n #![deny(missing_doc)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #[cfg(test)] extern crate debug;\n #[cfg(test)] #[phase(plugin, link)] extern crate log;"}, {"sha": "637ceb00ce67378d0d5c9cf601efe2dc8833402c", "filename": "src/libglob/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibglob%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibglob%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibglob%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -23,7 +23,6 @@\n  * `glob`/`fnmatch` functions.\n  */\n \n-#![crate_id = \"glob#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"glob\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -33,7 +32,6 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n use std::cell::Cell;\n use std::{cmp, os, path};"}, {"sha": "e5c2cdb43657fe0c6eef0510b193e8f080c74961", "filename": "src/libgraphviz/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibgraphviz%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibgraphviz%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgraphviz%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -266,7 +266,6 @@ pub fn main() {\n \n */\n \n-#![crate_id = \"graphviz#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"graphviz\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -275,7 +274,6 @@ pub fn main() {\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\")]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n use std::io;\n use std::str;"}, {"sha": "3574f415815d7c7bcfb4c62ad4787478565697dc", "filename": "src/libgreen/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibgreen%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibgreen%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -197,7 +197,6 @@\n //! pool.shutdown();\n //! ```\n \n-#![crate_id = \"green#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"green\"]\n #![experimental]\n #![license = \"MIT/ASL2\"]\n@@ -211,7 +210,6 @@\n // NB this does *not* include globs, please keep it that way.\n #![feature(macro_rules, phase, default_type_params)]\n #![allow(visible_private_types, deprecated)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #[cfg(test)] #[phase(plugin, link)] extern crate log;\n #[cfg(test)] extern crate rustuv;"}, {"sha": "57c187b5c64cbf38be668c10811266194e6f7037", "filename": "src/libhexfloat/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibhexfloat%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibhexfloat%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibhexfloat%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -36,7 +36,6 @@ fn main() {\n \n */\n \n-#![crate_id = \"hexfloat#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"hexfloat\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -46,7 +45,6 @@ fn main() {\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\")]\n #![feature(plugin_registrar, managed_boxes)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n extern crate syntax;\n extern crate rustc;"}, {"sha": "16e452fdcf9da0dab018baf45c89f4e8b67298c0", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![feature(globs)]\n-#![crate_id = \"libc#0.11.0\"] // NOTE: remove after a stage0 snap\n #![crate_name = \"libc\"]\n #![experimental]\n #![no_std] // we don't need std, and we can't have std, since it doesn't exist\n@@ -19,7 +18,6 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n /*!\n * Bindings for the C standard library and other platform libraries"}, {"sha": "c4c18ab6d39f8fdb969d20ea13757d78f7ad1019", "filename": "src/liblog/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Fliblog%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Fliblog%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -105,7 +105,6 @@ if logging is disabled, none of the components of the log will be executed.\n \n */\n \n-#![crate_id = \"log#0.11.0\"] // NOTE: Remove after stage0\n #![crate_name = \"log\"]\n #![experimental]\n #![license = \"MIT/ASL2\"]\n@@ -115,7 +114,6 @@ if logging is disabled, none of the components of the log will be executed.\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n #![feature(macro_rules)]\n #![deny(missing_doc)]\n "}, {"sha": "f9a6ef3a9634a59b584e3fb15eb117884a6c2ba4", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -46,7 +46,6 @@\n //! }\n //! ```\n \n-#![crate_id = \"native#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"native\"]\n #![experimental]\n #![license = \"MIT/ASL2\"]\n@@ -58,7 +57,6 @@\n \n #![deny(unused_result, unused_must_use)]\n #![allow(non_camel_case_types, deprecated)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n #![feature(default_type_params, lang_items)]\n \n // NB this crate explicitly does *not* allow glob imports, please seriously"}, {"sha": "36207266e58e6587aca3a4a4569d51d34f28877d", "filename": "src/libnum/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibnum%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibnum%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -44,7 +44,6 @@\n \n #![feature(macro_rules)]\n \n-#![crate_id = \"num#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"num\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -54,7 +53,6 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n #![allow(deprecated)] // from_str_radix\n \n extern crate rand;"}, {"sha": "9c01cb9e9dbe1d3ed23e90ffc7d851f62991bf38", "filename": "src/librand/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrand%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrand%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -16,7 +16,6 @@\n //! is not recommended to use this library directly, but rather the official\n //! interface through `std::rand`.\n \n-#![crate_id = \"rand#0.11.0\"] // NOTE: remove after a stage0 snap\n #![crate_name = \"rand\"]\n #![license = \"MIT/ASL2\"]\n #![crate_type = \"rlib\"]\n@@ -26,7 +25,6 @@\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![feature(macro_rules, phase, globs)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n #![no_std]\n #![experimental]\n "}, {"sha": "67ab8e052d15b5bd43a3479a74cee8faf68904a3", "filename": "src/libregex/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibregex%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibregex%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -356,7 +356,6 @@\n //! characters in the search text and `m` is the number of instructions in a\n //! compiled expression.\n \n-#![crate_id = \"regex#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"regex\"]\n #![crate_type = \"rlib\"]\n #![crate_type = \"dylib\"]\n@@ -368,7 +367,6 @@\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![feature(macro_rules, phase)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n #![deny(missing_doc)]\n \n #[cfg(test)]"}, {"sha": "0ef8f056b3f4e427596d70a00bae25a99f3f3660", "filename": "src/libregex_macros/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibregex_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibregex_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex_macros%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -11,15 +11,13 @@\n //! This crate provides the `regex!` macro. Its use is documented in the\n //! `regex` crate.\n \n-#![crate_id = \"regex_macros#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"regex_macros\"]\n #![crate_type = \"dylib\"]\n #![experimental]\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\")]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #![feature(plugin_registrar, managed_boxes, quote)]\n "}, {"sha": "98ba9990d9b958af2fc88bc29750b837f426b7ae", "filename": "src/librlibc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrlibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrlibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrlibc%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -20,15 +20,13 @@\n //! necessary. It is an error to include this library when also linking with\n //! the system libc library.\n \n-#![crate_id = \"rlibc#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"rlibc\"]\n #![license = \"MIT/ASL2\"]\n #![crate_type = \"rlib\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\")]\n #![feature(intrinsics)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #![no_std]\n #![experimental]"}, {"sha": "6e28d0cce3220762a64e526fb65347ce5a2056ba", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -18,7 +18,6 @@ This API is completely unstable and subject to change.\n \n */\n \n-#![crate_id = \"rustc#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"rustc\"]\n #![experimental]\n #![comment = \"The Rust compiler\"]\n@@ -32,7 +31,6 @@ This API is completely unstable and subject to change.\n #![allow(deprecated)]\n #![feature(macro_rules, globs, struct_variant, managed_boxes, quote)]\n #![feature(default_type_params, phase, unsafe_destructor)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n extern crate arena;\n extern crate debug;"}, {"sha": "71423ee56bc5a9c36f620cab45b3f26336dd821d", "filename": "src/librustc/plugin/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustc%2Fplugin%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustc%2Fplugin%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fplugin%2Fmod.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -22,7 +22,7 @@\n  * `#[plugin_registrar]` function:\n  *\n  * ```rust,ignore\n- * #![crate_id = \"myplugin\"]\n+ * #![crate_name = \"myplugin\"]\n  * #![crate_type = \"dylib\"]\n  * #![feature(plugin_registrar)]\n  *"}, {"sha": "6526943955c92860c3c9500ed1719666fab0a937", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -212,11 +212,6 @@ pub fn mt_to_string(cx: &ctxt, m: &mt) -> String {\n     format!(\"{}{}\", mutability_to_string(m.mutbl), ty_to_string(cx, m.ty))\n }\n \n-#[cfg(stage0)]\n-pub fn trait_store_to_str(cx: &ctxt, s: ty::TraitStore) -> String {\n-    trait_store_to_string(cx, s)\n-}\n-\n pub fn trait_store_to_string(cx: &ctxt, s: ty::TraitStore) -> String {\n     match s {\n         ty::UniqTraitStore => \"Box \".to_string(),\n@@ -240,11 +235,6 @@ pub fn trait_ref_to_string(cx: &ctxt, trait_ref: &ty::TraitRef) -> String {\n     trait_ref.user_string(cx).to_string()\n }\n \n-#[cfg(stage0)]\n-pub fn ty_to_str(cx: &ctxt, typ: t) -> String {\n-    ty_to_string(cx, typ)\n-}\n-\n pub fn ty_to_string(cx: &ctxt, typ: t) -> String {\n     fn fn_input_to_string(cx: &ctxt, input: ty::t) -> String {\n         ty_to_string(cx, input).to_string()"}, {"sha": "fc2fe00afbc0766e5d48a59196ca8f8c3752b3b3", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -8,14 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id = \"rustdoc#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"rustdoc\"]\n #![experimental]\n #![desc = \"rustdoc, the Rust documentation extractor\"]\n #![license = \"MIT/ASL2\"]\n #![crate_type = \"dylib\"]\n #![crate_type = \"rlib\"]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #![feature(globs, struct_variant, managed_boxes, macro_rules, phase)]\n "}, {"sha": "b707c62bb70275c753c4ed975fb07fce649deb52", "filename": "src/librustrt/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustrt%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustrt%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id = \"rustrt#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"rustrt\"]\n #![license = \"MIT/ASL2\"]\n #![crate_type = \"rlib\"]\n@@ -21,7 +20,6 @@\n #![feature(linkage, lang_items, unsafe_destructor)]\n #![no_std]\n #![experimental]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #[phase(plugin, link)] extern crate core;\n extern crate alloc;"}, {"sha": "0151be81e6377a97adf7c9c734bc30f521a4a07d", "filename": "src/librustuv/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustuv%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibrustuv%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -34,7 +34,6 @@ via `close` and `delete` methods.\n \n */\n \n-#![crate_id = \"rustuv#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"rustuv\"]\n #![experimental]\n #![license = \"MIT/ASL2\"]\n@@ -48,7 +47,6 @@ via `close` and `delete` methods.\n #![feature(macro_rules, unsafe_destructor)]\n #![deny(unused_result, unused_must_use)]\n #![allow(visible_private_types)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #[cfg(test)] extern crate green;\n #[cfg(test)] extern crate debug;"}, {"sha": "22664ba26281e362c6333fda8fd52769f956bdfa", "filename": "src/libsemver/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibsemver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibsemver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsemver%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -28,7 +28,6 @@\n //! An example version number with all five components is\n //! `0.8.1-rc.3.0+20130922.linux`.\n \n-#![crate_id = \"semver#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"semver\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -37,7 +36,6 @@\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\")]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n use std::char;\n use std::cmp;"}, {"sha": "7e31d1d59216e766790044e3b0c0130737ed0525", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -14,7 +14,6 @@\n Core encoding and decoding interfaces.\n */\n \n-#![crate_id = \"serialize#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"serialize\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -25,7 +24,6 @@ Core encoding and decoding interfaces.\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n #![feature(macro_rules, managed_boxes, default_type_params, phase)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n // test harness access\n #[cfg(test)]"}, {"sha": "14782cafce34781a6aed1cc8b3b3fed67368bd0b", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -94,7 +94,6 @@\n //! all the standard macros, such as `assert!`, `fail!`, `println!`,\n //! and `format!`, also available to all Rust code.\n \n-#![crate_id = \"std#0.11.0\"] // NOTE: remove after stage0 snap\n #![crate_name = \"std\"]\n #![unstable]\n #![comment = \"The Rust standard library\"]\n@@ -108,7 +107,6 @@\n \n #![feature(macro_rules, globs, managed_boxes, linkage)]\n #![feature(default_type_params, phase, lang_items, unsafe_destructor)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n // Don't link to std. We are std.\n #![no_std]"}, {"sha": "21f80777293125902b5aaeb9092e0ef621016d65", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -45,7 +45,7 @@\n #[doc(no_inline)] pub use ops::{BitAnd, BitOr, BitXor};\n #[doc(no_inline)] pub use ops::{Drop, Deref, DerefMut};\n #[doc(no_inline)] pub use ops::{Shl, Shr};\n-#[doc(no_inline)] #[cfg(not(stage0))] pub use ops::{Index, IndexMut};\n+#[doc(no_inline)] pub use ops::{Index, IndexMut};\n #[doc(no_inline)] pub use option::{Option, Some, None};\n #[doc(no_inline)] pub use result::{Result, Ok, Err};\n "}, {"sha": "45e8f348ff5105e5cbd680ca952c027a4aefd2f1", "filename": "src/libsync/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibsync%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibsync%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -17,7 +17,6 @@\n //! use this crate specifically. Instead, its functionality is reexported\n //! through `std::sync`.\n \n-#![crate_id = \"sync#0.11.0\"] // NOTE: remove after stage0 snap\n #![crate_name = \"sync\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -31,7 +30,6 @@\n #![feature(phase, globs, macro_rules, unsafe_destructor)]\n #![deny(missing_doc)]\n #![no_std]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #[phase(plugin, link)] extern crate core;\n extern crate alloc;"}, {"sha": "1ef376c6615ec393c751e40b3f41d5609302d335", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -14,7 +14,6 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![crate_id = \"syntax#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"syntax\"]\n #![experimental]\n #![license = \"MIT/ASL2\"]\n@@ -27,7 +26,6 @@\n #![feature(macro_rules, globs, managed_boxes, default_type_params, phase)]\n #![feature(quote, unsafe_destructor)]\n #![allow(deprecated)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n extern crate serialize;\n extern crate term;"}, {"sha": "9589a92348585c2f32168e342dd30b9467e8a10f", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 0, "deletions": 140, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -245,146 +245,6 @@ pub fn arg_to_string(arg: &ast::Arg) -> String {\n     to_string(|s| s.print_arg(arg))\n }\n \n-\n-\n-#[cfg(stage0)]\n-pub fn to_str(f: |&mut State| -> IoResult<()>) -> String {\n-    let mut s = rust_printer(box MemWriter::new());\n-    f(&mut s).unwrap();\n-    eof(&mut s.s).unwrap();\n-    unsafe {\n-        // FIXME(pcwalton): A nasty function to extract the string from an `io::Writer`\n-        // that we \"know\" to be a `MemWriter` that works around the lack of checked\n-        // downcasts.\n-        let (_, wr): (uint, Box<MemWriter>) = mem::transmute_copy(&s.s.out);\n-        let result =\n-            str::from_utf8_owned(Vec::from_slice(wr.get_ref())).unwrap();\n-        mem::forget(wr);\n-        result.to_string()\n-    }\n-}\n-\n-#[cfg(stage0)]\n-pub fn ty_to_str(ty: &ast::Ty) -> String {\n-    to_str(|s| s.print_type(ty))\n-}\n-\n-#[cfg(stage0)]\n-pub fn pat_to_str(pat: &ast::Pat) -> String {\n-    to_str(|s| s.print_pat(pat))\n-}\n-\n-#[cfg(stage0)]\n-pub fn expr_to_str(e: &ast::Expr) -> String {\n-    to_str(|s| s.print_expr(e))\n-}\n-\n-#[cfg(stage0)]\n-pub fn lifetime_to_str(e: &ast::Lifetime) -> String {\n-    to_str(|s| s.print_lifetime(e))\n-}\n-\n-#[cfg(stage0)]\n-pub fn tt_to_str(tt: &ast::TokenTree) -> String {\n-    to_str(|s| s.print_tt(tt))\n-}\n-\n-#[cfg(stage0)]\n-pub fn tts_to_str(tts: &[ast::TokenTree]) -> String {\n-    to_str(|s| s.print_tts(tts))\n-}\n-\n-#[cfg(stage0)]\n-pub fn stmt_to_str(stmt: &ast::Stmt) -> String {\n-    to_str(|s| s.print_stmt(stmt))\n-}\n-\n-#[cfg(stage0)]\n-pub fn item_to_str(i: &ast::Item) -> String {\n-    to_str(|s| s.print_item(i))\n-}\n-\n-#[cfg(stage0)]\n-pub fn generics_to_str(generics: &ast::Generics) -> String {\n-    to_str(|s| s.print_generics(generics))\n-}\n-\n-#[cfg(stage0)]\n-pub fn ty_method_to_str(p: &ast::TypeMethod) -> String {\n-    to_str(|s| s.print_ty_method(p))\n-}\n-\n-#[cfg(stage0)]\n-pub fn method_to_str(p: &ast::Method) -> String {\n-    to_str(|s| s.print_method(p))\n-}\n-\n-#[cfg(stage0)]\n-pub fn fn_block_to_str(p: &ast::FnDecl) -> String {\n-    to_str(|s| s.print_fn_block_args(p))\n-}\n-\n-#[cfg(stage0)]\n-pub fn path_to_str(p: &ast::Path) -> String {\n-    to_str(|s| s.print_path(p, false))\n-}\n-\n-#[cfg(stage0)]\n-pub fn fun_to_str(decl: &ast::FnDecl, fn_style: ast::FnStyle, name: ast::Ident,\n-                  opt_explicit_self: Option<ast::ExplicitSelf_>,\n-                  generics: &ast::Generics) -> String {\n-    to_str(|s| {\n-        try!(s.print_fn(decl, Some(fn_style), abi::Rust,\n-                        name, generics, opt_explicit_self, ast::Inherited));\n-        try!(s.end()); // Close the head box\n-        s.end() // Close the outer box\n-    })\n-}\n-\n-#[cfg(stage0)]\n-pub fn block_to_str(blk: &ast::Block) -> String {\n-    to_str(|s| {\n-        // containing cbox, will be closed by print-block at }\n-        try!(s.cbox(indent_unit));\n-        // head-ibox, will be closed by print-block after {\n-        try!(s.ibox(0u));\n-        s.print_block(blk)\n-    })\n-}\n-\n-#[cfg(stage0)]\n-pub fn meta_item_to_str(mi: &ast::MetaItem) -> String {\n-    to_str(|s| s.print_meta_item(mi))\n-}\n-\n-#[cfg(stage0)]\n-pub fn attribute_to_str(attr: &ast::Attribute) -> String {\n-    to_str(|s| s.print_attribute(attr))\n-}\n-\n-#[cfg(stage0)]\n-pub fn lit_to_str(l: &ast::Lit) -> String {\n-    to_str(|s| s.print_literal(l))\n-}\n-\n-#[cfg(stage0)]\n-pub fn explicit_self_to_str(explicit_self: ast::ExplicitSelf_) -> String {\n-    to_str(|s| s.print_explicit_self(explicit_self, ast::MutImmutable).map(|_| {}))\n-}\n-\n-#[cfg(stage0)]\n-pub fn variant_to_str(var: &ast::Variant) -> String {\n-    to_str(|s| s.print_variant(var))\n-}\n-\n-#[cfg(stage0)]\n-pub fn arg_to_str(arg: &ast::Arg) -> String {\n-    to_str(|s| s.print_arg(arg))\n-}\n-\n-\n-\n-\n pub fn visibility_qualified(vis: ast::Visibility, s: &str) -> String {\n     match vis {\n         ast::Public => format!(\"pub {}\", s),"}, {"sha": "66a1d4e797d189514ef919083da3e015ee756748", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -38,7 +38,6 @@\n //! [win]: http://msdn.microsoft.com/en-us/library/windows/desktop/ms682010%28v=vs.85%29.aspx\n //! [ti]: https://en.wikipedia.org/wiki/Terminfo\n \n-#![crate_id = \"term#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"term\"]\n #![experimental]\n #![comment = \"Simple ANSI color library\"]\n@@ -49,7 +48,6 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #![feature(macro_rules, phase)]\n "}, {"sha": "4c982aa27c573db150e814030a9122e641212c89", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -23,8 +23,7 @@\n // running tests while providing a base that other test frameworks may\n // build off of.\n \n-#![crate_id = \"test#0.11.0\"] // NOTE: remove after stage0\n-#![crate_name = \"test\"] // NOTE: remove after stage0\n+#![crate_name = \"test\"]\n #![experimental]\n #![comment = \"Rust internal test library only used by rustc\"]\n #![license = \"MIT/ASL2\"]\n@@ -33,7 +32,6 @@\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\")]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #![feature(asm, macro_rules, phase)]\n "}, {"sha": "19168469b5b6a6032cd06afc4ce5112e8dd6756e", "filename": "src/libtime/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibtime%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibtime%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtime%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -10,7 +10,6 @@\n \n //! Simple time handling.\n \n-#![crate_id = \"time#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"time\"]\n #![experimental]\n \n@@ -22,7 +21,6 @@\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n #![feature(phase)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #[cfg(test)] extern crate debug;\n #[cfg(test)] #[phase(plugin, link)] extern crate log;"}, {"sha": "be94f117b539ec81a36f87bfd433b9a4088c2015", "filename": "src/liburl/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Fliburl%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Fliburl%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliburl%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -10,7 +10,6 @@\n \n //! Types/fns concerning URLs (see RFC 3986)\n \n-#![crate_id = \"url#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"url\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -21,7 +20,6 @@\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n #![feature(default_type_params)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n use std::collections::HashMap;\n use std::fmt;"}, {"sha": "1579b676660b265ca2aaab872acaf59ffdb7c8ff", "filename": "src/libuuid/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibuuid%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Flibuuid%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibuuid%2Flib.rs?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -54,7 +54,6 @@ Examples of string representations:\n \n */\n \n-#![crate_id = \"uuid#0.11.0\"] // NOTE: remove after stage0\n #![crate_name = \"uuid\"]\n #![experimental]\n #![crate_type = \"rlib\"]\n@@ -64,7 +63,6 @@ Examples of string representations:\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/0.11.0/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #![feature(default_type_params)]\n "}, {"sha": "c0c7015e31a77840815841aca47aae8238e70bce", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/898701cb35833b2ecea8bc7f3902a35b7eccc219/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=898701cb35833b2ecea8bc7f3902a35b7eccc219", "patch": "@@ -1,3 +1,11 @@\n+S 2014-07-09 8ddd286\n+  freebsd-x86_64 de0c39057f409b69e5ddb888ba3e20b90d63f5db\n+  linux-i386 28bef31f2a017e1998256d0c2b2e0a0c9221451b\n+  linux-x86_64 853bd73501a10d49cafdf823110c61f13a3392d6\n+  macos-i386 b89540ae54f9e565565d36147a586bb4bfbd861b\n+  macos-x86_64 58709eb936e7fd66a28a1bb82aaf43a4d8260dea\n+  winnt-i386 64a32dcb008d4590a6c6a9efaffbe1d22a334d34\n+\n S 2014-07-05 aaff4e0\n   freebsd-x86_64 10272ca9eb17e1be4a4b172aacfb4b33fffcc8fb\n   linux-i386 72ba9f6e0d096c30f128cb3736ffac0b57530a20"}]}