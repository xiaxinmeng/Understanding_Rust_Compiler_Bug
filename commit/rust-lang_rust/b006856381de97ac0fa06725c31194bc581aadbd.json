{"sha": "b006856381de97ac0fa06725c31194bc581aadbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMDY4NTYzODFkZTk3YWMwZmEwNjcyNWMzMTE5NGJjNTgxYWFkYmQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-28T15:07:07Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-28T15:07:07Z"}, "message": "Support goto definition for ADT-SelfParams", "tree": {"sha": "383150ecc488c841bcc4ff7e782007162135982e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/383150ecc488c841bcc4ff7e782007162135982e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b006856381de97ac0fa06725c31194bc581aadbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b006856381de97ac0fa06725c31194bc581aadbd", "html_url": "https://github.com/rust-lang/rust/commit/b006856381de97ac0fa06725c31194bc581aadbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b006856381de97ac0fa06725c31194bc581aadbd/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66d477f5a72247b04b9025f6ba9c403ca628d41", "url": "https://api.github.com/repos/rust-lang/rust/commits/c66d477f5a72247b04b9025f6ba9c403ca628d41", "html_url": "https://github.com/rust-lang/rust/commit/c66d477f5a72247b04b9025f6ba9c403ca628d41"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "d41dd3d928ef6070763047b22ade1e9d61a878b1", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/b006856381de97ac0fa06725c31194bc581aadbd/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b006856381de97ac0fa06725c31194bc581aadbd/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=b006856381de97ac0fa06725c31194bc581aadbd", "patch": "@@ -3,12 +3,7 @@ use ide_db::{\n     defs::{NameClass, NameRefClass},\n     symbol_index, RootDatabase,\n };\n-use syntax::{\n-    ast::{self},\n-    match_ast, AstNode,\n-    SyntaxKind::*,\n-    SyntaxToken, TokenAtOffset, T,\n-};\n+use syntax::{ast, match_ast, AstNode, SyntaxKind::*, SyntaxToken, TokenAtOffset, T};\n \n use crate::{\n     display::{ToNav, TryToNav},\n@@ -44,6 +39,12 @@ pub(crate) fn goto_definition(\n                 let nav = def.try_to_nav(sema.db)?;\n                 vec![nav]\n             },\n+            ast::SelfParam(self_param) => {\n+                let ty = sema.type_of_self(&self_param)?;\n+                let adt_def = ty.autoderef(db).filter_map(|ty| ty.as_adt()).last()?;\n+                let nav = adt_def.to_nav(db);\n+                vec![nav]\n+            },\n             _ => return None,\n         }\n     };\n@@ -981,6 +982,35 @@ trait Iterator {\n }\n \n fn g() -> <() as Iterator<A = (), B<|> = u8>>::A {}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn todo_def_type_for_self() {\n+        check(\n+            r#\"\n+struct Foo {}\n+     //^^^\n+\n+impl Foo {\n+    fn bar(&self<|>) {}\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn todo_def_type_for_arbitrary_self() {\n+        check(\n+            r#\"\n+struct Arc<T>(T);\n+     //^^^\n+struct Foo {}\n+\n+impl Foo {\n+    fn bar(self<|>: Arc<Self>) {}\n+}\n \"#,\n         );\n     }"}]}