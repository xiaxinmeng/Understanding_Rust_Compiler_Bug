{"sha": "872950bc188ba104ecd1f532427dea6dc52533bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3Mjk1MGJjMTg4YmExMDRlY2QxZjUzMjQyN2RlYTZkYzUyNTMzYmQ=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-30T20:43:30Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-30T20:43:30Z"}, "message": "Test renames", "tree": {"sha": "0f642fa1ff5bf77d99cdd59becf465a8f53bd25d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f642fa1ff5bf77d99cdd59becf465a8f53bd25d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/872950bc188ba104ecd1f532427dea6dc52533bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/872950bc188ba104ecd1f532427dea6dc52533bd", "html_url": "https://github.com/rust-lang/rust/commit/872950bc188ba104ecd1f532427dea6dc52533bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/872950bc188ba104ecd1f532427dea6dc52533bd/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c402b007a3272efada7924fce4eecf698b98968b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c402b007a3272efada7924fce4eecf698b98968b", "html_url": "https://github.com/rust-lang/rust/commit/c402b007a3272efada7924fce4eecf698b98968b"}], "stats": {"total": 93, "additions": 92, "deletions": 1}, "files": [{"sha": "a314fbc40afb59255e0db48b13037af9b482a948", "filename": "crates/ra_analysis/tests/tests.rs", "status": "modified", "additions": 92, "deletions": 1, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/872950bc188ba104ecd1f532427dea6dc52533bd/crates%2Fra_analysis%2Ftests%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872950bc188ba104ecd1f532427dea6dc52533bd/crates%2Fra_analysis%2Ftests%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Ftests%2Ftests.rs?ref=872950bc188ba104ecd1f532427dea6dc52533bd", "patch": "@@ -1,5 +1,5 @@\n use ra_syntax::TextRange;\n-use test_utils::assert_eq_dbg;\n+use test_utils::{assert_eq_dbg, assert_eq_text};\n \n use ra_analysis::{\n     mock_analysis::{analysis_and_position, single_file, single_file_with_position, MockAnalysis},\n@@ -453,3 +453,94 @@ fn test_find_all_refs_for_fn_param() {\n     let refs = get_all_refs(code);\n     assert_eq!(refs.len(), 2);\n }\n+#[test]\n+fn test_rename_for_local() {\n+    test_rename(\n+        r#\"\n+    fn main() {\n+        let mut i = 1;\n+        let j = 1;\n+        i = i<|> + j;\n+\n+        {\n+            i = 0;\n+        }\n+\n+        i = 5;\n+    }\"#,\n+        \"k\",\n+        r#\"\n+    fn main() {\n+        let mut k = 1;\n+        let j = 1;\n+        k = k + j;\n+\n+        {\n+            k = 0;\n+        }\n+\n+        k = 5;\n+    }\"#,\n+    );\n+}\n+\n+#[test]\n+fn test_rename_for_param_inside() {\n+    test_rename(\n+        r#\"\n+    fn foo(i : u32) -> u32 {\n+        i<|>\n+    }\"#,\n+        \"j\",\n+        r#\"\n+    fn foo(j : u32) -> u32 {\n+        j\n+    }\"#,\n+    );\n+}\n+\n+#[test]\n+fn test_rename_refs_for_fn_param() {\n+    test_rename(\n+        r#\"\n+    fn foo(i<|> : u32) -> u32 {\n+        i\n+    }\"#,\n+        \"new_name\",\n+        r#\"\n+    fn foo(new_name : u32) -> u32 {\n+        new_name\n+    }\"#,\n+    );\n+}\n+\n+#[test]\n+fn test_rename_for_mut_param() {\n+    test_rename(\n+        r#\"\n+    fn foo(mut i<|> : u32) -> u32 {\n+        i\n+    }\"#,\n+        \"new_name\",\n+        r#\"\n+    fn foo(mut new_name : u32) -> u32 {\n+        new_name\n+    }\"#,\n+    );\n+}\n+fn test_rename(text: &str, new_name: &str, expected: &str) {\n+    let (analysis, position) = single_file_with_position(text);\n+    let edits = analysis.rename(position, new_name).unwrap();\n+    let mut text_edit_bulder = ra_text_edit::TextEditBuilder::new();\n+    let mut file_id: Option<FileId> = None;\n+    for edit in edits {\n+        file_id = Some(edit.file_id);\n+        for atom in edit.edit.as_atoms() {\n+            text_edit_bulder.replace(atom.delete, atom.insert.clone());\n+        }\n+    }\n+    let result = text_edit_bulder\n+        .finish()\n+        .apply(&*analysis.file_text(file_id.unwrap()));\n+    assert_eq_text!(expected, &*result);\n+}"}]}