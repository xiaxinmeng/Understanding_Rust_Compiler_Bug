{"sha": "8d0b9697b5739c1e6bb6e9eea513218e5a60cb1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMGI5Njk3YjU3MzljMWU2YmI2ZTllZWE1MTMyMThlNWE2MGNiMWE=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-11-03T18:34:28Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-11-13T11:28:43Z"}, "message": "Fix ui tests", "tree": {"sha": "d633d2c23f6b5c294e318c5e603e6a526bd3f43e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d633d2c23f6b5c294e318c5e603e6a526bd3f43e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d0b9697b5739c1e6bb6e9eea513218e5a60cb1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d0b9697b5739c1e6bb6e9eea513218e5a60cb1a", "html_url": "https://github.com/rust-lang/rust/commit/8d0b9697b5739c1e6bb6e9eea513218e5a60cb1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d0b9697b5739c1e6bb6e9eea513218e5a60cb1a/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afa884c03a90f4d773e28faaad4bc7845d677332", "url": "https://api.github.com/repos/rust-lang/rust/commits/afa884c03a90f4d773e28faaad4bc7845d677332", "html_url": "https://github.com/rust-lang/rust/commit/afa884c03a90f4d773e28faaad4bc7845d677332"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ef5fb8eadc355284e9ed7d2295b0a7a2459e800d", "filename": "src/test/ui/nll/user-annotations/dump-fn-method.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d0b9697b5739c1e6bb6e9eea513218e5a60cb1a/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdump-fn-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d0b9697b5739c1e6bb6e9eea513218e5a60cb1a/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdump-fn-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdump-fn-method.rs?ref=8d0b9697b5739c1e6bb6e9eea513218e5a60cb1a", "patch": "@@ -39,7 +39,7 @@ fn main() {\n     // Here: we only want the `T` to be given, the rest should be variables.\n     //\n     // (`T` refers to the declaration of `Bazoom`)\n-    let x = <_ as Bazoom<u32>>::method::<_>; //~ ERROR [?0, u32, ?1]\n+    let x = <_ as Bazoom<u32>>::method::<_>; //~ ERROR [^0, u32, ^1]\n     x(&22, 44, 66);\n \n     // Here: all are given\n@@ -51,7 +51,7 @@ fn main() {\n     //\n     // (`U` refers to the declaration of `Bazoom`)\n     let y = 22_u32;\n-    y.method::<u32>(44, 66); //~ ERROR [?0, ?1, u32]\n+    y.method::<u32>(44, 66); //~ ERROR [^0, ^1, u32]\n \n     // Here: nothing is given, so we don't have any annotation.\n     let y = 22_u32;"}, {"sha": "359423d0cfbea4b31a8254da8c0233709427e57f", "filename": "src/test/ui/nll/user-annotations/dump-fn-method.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8d0b9697b5739c1e6bb6e9eea513218e5a60cb1a/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdump-fn-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d0b9697b5739c1e6bb6e9eea513218e5a60cb1a/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdump-fn-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdump-fn-method.stderr?ref=8d0b9697b5739c1e6bb6e9eea513218e5a60cb1a", "patch": "@@ -4,10 +4,10 @@ error: user substs: Canonical { max_universe: U0, variables: [], value: UserSubs\n LL |     let x = foo::<u32>; //~ ERROR [u32]\n    |             ^^^^^^^^^^\n \n-error: user substs: Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General) }, CanonicalVarInfo { kind: Ty(General) }], value: UserSubsts { substs: [?0, u32, ?1], user_self_ty: None } }\n+error: user substs: Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General) }, CanonicalVarInfo { kind: Ty(General) }], value: UserSubsts { substs: [^0, u32, ^1], user_self_ty: None } }\n   --> $DIR/dump-fn-method.rs:42:13\n    |\n-LL |     let x = <_ as Bazoom<u32>>::method::<_>; //~ ERROR [?0, u32, ?1]\n+LL |     let x = <_ as Bazoom<u32>>::method::<_>; //~ ERROR [^0, u32, ^1]\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: user substs: Canonical { max_universe: U0, variables: [], value: UserSubsts { substs: [u8, u16, u32], user_self_ty: None } }\n@@ -16,10 +16,10 @@ error: user substs: Canonical { max_universe: U0, variables: [], value: UserSubs\n LL |     let x = <u8 as Bazoom<u16>>::method::<u32>; //~ ERROR [u8, u16, u32]\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: user substs: Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General) }, CanonicalVarInfo { kind: Ty(General) }], value: UserSubsts { substs: [?0, ?1, u32], user_self_ty: None } }\n+error: user substs: Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General) }, CanonicalVarInfo { kind: Ty(General) }], value: UserSubsts { substs: [^0, ^1, u32], user_self_ty: None } }\n   --> $DIR/dump-fn-method.rs:54:5\n    |\n-LL |     y.method::<u32>(44, 66); //~ ERROR [?0, ?1, u32]\n+LL |     y.method::<u32>(44, 66); //~ ERROR [^0, ^1, u32]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors"}]}