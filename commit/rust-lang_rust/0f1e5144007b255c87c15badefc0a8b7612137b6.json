{"sha": "0f1e5144007b255c87c15badefc0a8b7612137b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMWU1MTQ0MDA3YjI1NWM4N2MxNWJhZGVmYzBhOGI3NjEyMTM3YjY=", "commit": {"author": {"name": "Andy Grover", "email": "agrover@redhat.com", "date": "2015-06-24T17:21:35Z"}, "committer": {"name": "Andy Grover", "email": "agrover@redhat.com", "date": "2015-06-24T17:22:10Z"}, "message": "Add flock() to liblibc", "tree": {"sha": "1734ac4e800650548f64e564f710b86d47ba5e06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1734ac4e800650548f64e564f710b86d47ba5e06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f1e5144007b255c87c15badefc0a8b7612137b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1e5144007b255c87c15badefc0a8b7612137b6", "html_url": "https://github.com/rust-lang/rust/commit/0f1e5144007b255c87c15badefc0a8b7612137b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f1e5144007b255c87c15badefc0a8b7612137b6/comments", "author": null, "committer": null, "parents": [{"sha": "43ad8d0beca33b9a2a8f64f30b71724e0b213bd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/43ad8d0beca33b9a2a8f64f30b71724e0b213bd4", "html_url": "https://github.com/rust-lang/rust/commit/43ad8d0beca33b9a2a8f64f30b71724e0b213bd4"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "6e01796ad82279b9f1f6305e4a04e65858700edc", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0f1e5144007b255c87c15badefc0a8b7612137b6/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1e5144007b255c87c15badefc0a8b7612137b6/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=0f1e5144007b255c87c15badefc0a8b7612137b6", "patch": "@@ -3600,6 +3600,11 @@ pub mod consts {\n             pub const SHUT_RD: c_int = 0;\n             pub const SHUT_WR: c_int = 1;\n             pub const SHUT_RDWR: c_int = 2;\n+\n+            pub const LOCK_SH: c_int = 1;\n+            pub const LOCK_EX: c_int = 2;\n+            pub const LOCK_NB: c_int = 4;\n+            pub const LOCK_UN: c_int = 8;\n         }\n         #[cfg(any(target_arch = \"mips\",\n                   target_arch = \"mipsel\"))]\n@@ -3684,6 +3689,11 @@ pub mod consts {\n             pub const SHUT_RD: c_int = 0;\n             pub const SHUT_WR: c_int = 1;\n             pub const SHUT_RDWR: c_int = 2;\n+\n+            pub const LOCK_SH: c_int = 1;\n+            pub const LOCK_EX: c_int = 2;\n+            pub const LOCK_NB: c_int = 4;\n+            pub const LOCK_UN: c_int = 8;\n         }\n         #[cfg(any(target_arch = \"x86\",\n                   target_arch = \"x86_64\",\n@@ -4227,6 +4237,11 @@ pub mod consts {\n             pub const SHUT_RD: c_int = 0;\n             pub const SHUT_WR: c_int = 1;\n             pub const SHUT_RDWR: c_int = 2;\n+\n+            pub const LOCK_SH: c_int = 1;\n+            pub const LOCK_EX: c_int = 2;\n+            pub const LOCK_NB: c_int = 4;\n+            pub const LOCK_UN: c_int = 8;\n         }\n         pub mod extra {\n             use types::os::arch::c95::c_int;\n@@ -4651,6 +4666,11 @@ pub mod consts {\n             pub const SHUT_RD: c_int = 0;\n             pub const SHUT_WR: c_int = 1;\n             pub const SHUT_RDWR: c_int = 2;\n+\n+            pub const LOCK_SH: c_int = 1;\n+            pub const LOCK_EX: c_int = 2;\n+            pub const LOCK_NB: c_int = 4;\n+            pub const LOCK_UN: c_int = 8;\n         }\n         pub mod extra {\n             use types::os::arch::c95::c_int;\n@@ -5092,6 +5112,11 @@ pub mod consts {\n             pub const SHUT_RD: c_int = 0;\n             pub const SHUT_WR: c_int = 1;\n             pub const SHUT_RDWR: c_int = 2;\n+\n+            pub const LOCK_SH: c_int = 1;\n+            pub const LOCK_EX: c_int = 2;\n+            pub const LOCK_NB: c_int = 4;\n+            pub const LOCK_UN: c_int = 8;\n         }\n         pub mod extra {\n             use types::os::arch::c95::c_int;\n@@ -6121,6 +6146,7 @@ pub mod funcs {\n                            -> c_int;\n             pub fn realpath(pathname: *const c_char, resolved: *mut c_char)\n                             -> *mut c_char;\n+            pub fn flock(fd: c_int, operation: c_int) -> c_int;\n         }\n     }\n \n@@ -6137,6 +6163,7 @@ pub mod funcs {\n                            -> c_int;\n             pub fn mincore(addr: *mut c_void, len: size_t, vec: *mut c_uchar)\n                            -> c_int;\n+            pub fn flock(fd: c_int, operation: c_int) -> c_int;\n         }\n     }\n "}]}