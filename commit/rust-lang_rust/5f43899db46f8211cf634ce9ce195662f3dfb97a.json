{"sha": "5f43899db46f8211cf634ce9ce195662f3dfb97a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmNDM4OTlkYjQ2ZjgyMTFjZjYzNGNlOWNlMTk1NjYyZjNkZmI5N2E=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-10T22:56:15Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-13T01:25:21Z"}, "message": "Implement the astencode rules for predicates. These don't actually get\nused by trans, but it's easy to do.", "tree": {"sha": "c31d9d6bd957dced84faf83279abe7f6e4b56240", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c31d9d6bd957dced84faf83279abe7f6e4b56240"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f43899db46f8211cf634ce9ce195662f3dfb97a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f43899db46f8211cf634ce9ce195662f3dfb97a", "html_url": "https://github.com/rust-lang/rust/commit/5f43899db46f8211cf634ce9ce195662f3dfb97a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f43899db46f8211cf634ce9ce195662f3dfb97a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97cf91aa30c84b14c72d88f51f9f22a50a8e3b54", "url": "https://api.github.com/repos/rust-lang/rust/commits/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54", "html_url": "https://github.com/rust-lang/rust/commit/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "50337ec25bd19dfd7bf96036af5dc52d8efb2b7a", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5f43899db46f8211cf634ce9ce195662f3dfb97a/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f43899db46f8211cf634ce9ce195662f3dfb97a/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=5f43899db46f8211cf634ce9ce195662f3dfb97a", "patch": "@@ -830,6 +830,8 @@ trait rbml_writer_helpers<'tcx> {\n     fn emit_tys<'a>(&mut self, ecx: &e::EncodeContext<'a, 'tcx>, tys: &[Ty<'tcx>]);\n     fn emit_type_param_def<'a>(&mut self, ecx: &e::EncodeContext<'a, 'tcx>,\n                                type_param_def: &ty::TypeParameterDef<'tcx>);\n+    fn emit_predicate<'a>(&mut self, ecx: &e::EncodeContext<'a, 'tcx>,\n+                          predicate: &ty::Predicate<'tcx>);\n     fn emit_trait_ref<'a>(&mut self, ecx: &e::EncodeContext<'a, 'tcx>,\n                           ty: &ty::TraitRef<'tcx>);\n     fn emit_polytype<'a>(&mut self, ecx: &e::EncodeContext<'a, 'tcx>,\n@@ -936,6 +938,15 @@ impl<'a, 'tcx> rbml_writer_helpers<'tcx> for Encoder<'a> {\n         });\n     }\n \n+    fn emit_predicate<'a>(&mut self, ecx: &e::EncodeContext<'a, 'tcx>,\n+                          predicate: &ty::Predicate<'tcx>) {\n+        self.emit_opaque(|this| {\n+            Ok(tyencode::enc_predicate(this.writer,\n+                                       &ecx.ty_str_ctxt(),\n+                                       predicate))\n+        });\n+    }\n+\n     fn emit_polytype<'a>(&mut self,\n                          ecx: &e::EncodeContext<'a, 'tcx>,\n                          pty: ty::Polytype<'tcx>) {\n@@ -953,6 +964,11 @@ impl<'a, 'tcx> rbml_writer_helpers<'tcx> for Encoder<'a> {\n                         Ok(encode_vec_per_param_space(\n                             this, &pty.generics.regions,\n                             |this, def| def.encode(this).unwrap()))\n+                    });\n+                    this.emit_struct_field(\"predicates\", 2, |this| {\n+                        Ok(encode_vec_per_param_space(\n+                            this, &pty.generics.predicates,\n+                            |this, def| this.emit_predicate(ecx, def)))\n                     })\n                 })\n             });\n@@ -1336,6 +1352,8 @@ trait rbml_decoder_decoder_helpers<'tcx> {\n                               -> Rc<ty::TraitRef<'tcx>>;\n     fn read_type_param_def<'a, 'b>(&mut self, dcx: &DecodeContext<'a, 'b, 'tcx>)\n                                    -> ty::TypeParameterDef<'tcx>;\n+    fn read_predicate<'a, 'b>(&mut self, dcx: &DecodeContext<'a, 'b, 'tcx>)\n+                              -> ty::Predicate<'tcx>;\n     fn read_polytype<'a, 'b>(&mut self, dcx: &DecodeContext<'a, 'b, 'tcx>)\n                              -> ty::Polytype<'tcx>;\n     fn read_existential_bounds<'a, 'b>(&mut self, dcx: &DecodeContext<'a, 'b, 'tcx>)\n@@ -1536,6 +1554,15 @@ impl<'a, 'tcx> rbml_decoder_decoder_helpers<'tcx> for reader::Decoder<'a> {\n         }).unwrap()\n     }\n \n+    fn read_predicate<'a, 'b>(&mut self, dcx: &DecodeContext<'a, 'b, 'tcx>)\n+                              -> ty::Predicate<'tcx>\n+    {\n+        self.read_opaque(|this, doc| {\n+            Ok(tydecode::parse_predicate_data(doc.data, doc.start, dcx.cdata.cnum, dcx.tcx,\n+                                              |s, a| this.convert_def_id(dcx, s, a)))\n+        }).unwrap()\n+    }\n+\n     fn read_polytype<'a, 'b>(&mut self, dcx: &DecodeContext<'a, 'b, 'tcx>)\n                              -> ty::Polytype<'tcx> {\n         self.read_struct(\"Polytype\", 2, |this| {\n@@ -1556,7 +1583,10 @@ impl<'a, 'tcx> rbml_decoder_decoder_helpers<'tcx> for reader::Decoder<'a> {\n                             }).unwrap(),\n \n                             predicates:\n-                            subst::VecPerParamSpace::empty(), // TODO fix in later commit\n+                            this.read_struct_field(\"predicates\", 2, |this| {\n+                                Ok(this.read_vec_per_param_space(\n+                                    |this| this.read_predicate(dcx)))\n+                            }).unwrap(),\n                         })\n                     })\n                 }).unwrap(),"}]}