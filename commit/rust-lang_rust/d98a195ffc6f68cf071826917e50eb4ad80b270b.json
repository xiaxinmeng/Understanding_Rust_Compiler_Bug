{"sha": "d98a195ffc6f68cf071826917e50eb4ad80b270b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5OGExOTVmZmM2ZjY4Y2YwNzE4MjY5MTdlNTBlYjRhZDgwYjI3MGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-29T03:48:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-29T03:48:52Z"}, "message": "auto merge of #5610 : thestinger/rust/tutorial, r=pcwalton", "tree": {"sha": "1da188a90fc4a2d2338e0d072253e2ebeee8cc9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1da188a90fc4a2d2338e0d072253e2ebeee8cc9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d98a195ffc6f68cf071826917e50eb4ad80b270b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d98a195ffc6f68cf071826917e50eb4ad80b270b", "html_url": "https://github.com/rust-lang/rust/commit/d98a195ffc6f68cf071826917e50eb4ad80b270b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d98a195ffc6f68cf071826917e50eb4ad80b270b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a6cd2b21e240d3b075b30d598e661b038fe6fbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a6cd2b21e240d3b075b30d598e661b038fe6fbe", "html_url": "https://github.com/rust-lang/rust/commit/7a6cd2b21e240d3b075b30d598e661b038fe6fbe"}, {"sha": "d4509f270b57d6a8869cf45ef29f2e0313592c52", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4509f270b57d6a8869cf45ef29f2e0313592c52", "html_url": "https://github.com/rust-lang/rust/commit/d4509f270b57d6a8869cf45ef29f2e0313592c52"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "9f36786648aba9083200f45fe23b993dd87e3d78", "filename": "doc/tutorial.md", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d98a195ffc6f68cf071826917e50eb4ad80b270b/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/d98a195ffc6f68cf071826917e50eb4ad80b270b/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=d98a195ffc6f68cf071826917e50eb4ad80b270b", "patch": "@@ -875,8 +875,7 @@ the compiler that unsafety does not leak outside of the unsafe block, and is\n used to create safe concepts on top of low-level code.\n \n ~~~~\n-use core::libc::funcs::c95::stdlib::{calloc, free};\n-use core::libc::types::os::arch::c95::size_t;\n+use core::libc::{calloc, free, size_t};\n \n fn main() {\n     unsafe {\n@@ -909,9 +908,7 @@ The unsafe code from above can be contained behind a safe API that prevents\n memory leaks or use-after-free:\n \n ~~~~\n-use core::libc::funcs::c95::stdlib::{calloc, free};\n-use core::libc::types::common::c95::c_void;\n-use core::libc::types::os::arch::c95::size_t;\n+use core::libc::{calloc, free, c_void, size_t};\n \n struct Blob { priv ptr: *c_void }\n \n@@ -985,7 +982,9 @@ when it is collected.\n \n If an object doesn't contain garbage-collected boxes, it consists of a single\n ownership tree and is given the `Owned` trait which allows it to be sent\n-between tasks.\n+between tasks. Custom destructors can only be implemented directly on types\n+that are `Owned`, but garbage-collected boxes can still *contain* types with\n+custom destructors.\n \n # Boxes\n "}]}