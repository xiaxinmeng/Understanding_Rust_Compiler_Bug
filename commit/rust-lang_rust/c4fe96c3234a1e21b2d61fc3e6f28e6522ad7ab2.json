{"sha": "c4fe96c3234a1e21b2d61fc3e6f28e6522ad7ab2", "node_id": "C_kwDOAAsO6NoAKGM0ZmU5NmMzMjM0YTFlMjFiMmQ2MWZjM2U2ZjI4ZTY1MjJhZDdhYjI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-11T16:30:35Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-27T18:22:45Z"}, "message": "Allow to remove unused definitions without renumbering locals.", "tree": {"sha": "b2959a20a9e848e43735ad0251fc9c1da2e34541", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2959a20a9e848e43735ad0251fc9c1da2e34541"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4fe96c3234a1e21b2d61fc3e6f28e6522ad7ab2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4fe96c3234a1e21b2d61fc3e6f28e6522ad7ab2", "html_url": "https://github.com/rust-lang/rust/commit/c4fe96c3234a1e21b2d61fc3e6f28e6522ad7ab2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4fe96c3234a1e21b2d61fc3e6f28e6522ad7ab2/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "982726cdc4c291b88f1099f49e573a1a6de078ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/982726cdc4c291b88f1099f49e573a1a6de078ff", "html_url": "https://github.com/rust-lang/rust/commit/982726cdc4c291b88f1099f49e573a1a6de078ff"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "09b980bab29429c19e5ec43b94e9a7b90737c63a", "filename": "compiler/rustc_mir_transform/src/simplify.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c4fe96c3234a1e21b2d61fc3e6f28e6522ad7ab2/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4fe96c3234a1e21b2d61fc3e6f28e6522ad7ab2/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs?ref=c4fe96c3234a1e21b2d61fc3e6f28e6522ad7ab2", "patch": "@@ -404,6 +404,18 @@ impl<'tcx> MirPass<'tcx> for SimplifyLocals {\n     }\n }\n \n+pub fn remove_unused_definitions<'tcx>(body: &mut Body<'tcx>) {\n+    // First, we're going to get a count of *actual* uses for every `Local`.\n+    let mut used_locals = UsedLocals::new(body);\n+\n+    // Next, we're going to remove any `Local` with zero actual uses. When we remove those\n+    // `Locals`, we're also going to subtract any uses of other `Locals` from the `used_locals`\n+    // count. For example, if we removed `_2 = discriminant(_1)`, then we'll subtract one from\n+    // `use_counts[_1]`. That in turn might make `_1` unused, so we loop until we hit a\n+    // fixedpoint where there are no more unused locals.\n+    remove_unused_definitions_helper(&mut used_locals, body);\n+}\n+\n pub fn simplify_locals<'tcx>(body: &mut Body<'tcx>, tcx: TyCtxt<'tcx>) {\n     // First, we're going to get a count of *actual* uses for every `Local`.\n     let mut used_locals = UsedLocals::new(body);\n@@ -413,7 +425,7 @@ pub fn simplify_locals<'tcx>(body: &mut Body<'tcx>, tcx: TyCtxt<'tcx>) {\n     // count. For example, if we removed `_2 = discriminant(_1)`, then we'll subtract one from\n     // `use_counts[_1]`. That in turn might make `_1` unused, so we loop until we hit a\n     // fixedpoint where there are no more unused locals.\n-    remove_unused_definitions(&mut used_locals, body);\n+    remove_unused_definitions_helper(&mut used_locals, body);\n \n     // Finally, we'll actually do the work of shrinking `body.local_decls` and remapping the `Local`s.\n     let map = make_local_map(&mut body.local_decls, &used_locals);\n@@ -548,7 +560,7 @@ impl<'tcx> Visitor<'tcx> for UsedLocals {\n }\n \n /// Removes unused definitions. Updates the used locals to reflect the changes made.\n-fn remove_unused_definitions(used_locals: &mut UsedLocals, body: &mut Body<'_>) {\n+fn remove_unused_definitions_helper(used_locals: &mut UsedLocals, body: &mut Body<'_>) {\n     // The use counts are updated as we remove the statements. A local might become unused\n     // during the retain operation, leading to a temporary inconsistency (storage statements or\n     // definitions referencing the local might remain). For correctness it is crucial that this"}]}