{"sha": "c40fed5804f523cc90389941f1a16e5ee956ce5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MGZlZDU4MDRmNTIzY2M5MDM4OTk0MWYxYTE2ZTVlZTk1NmNlNWY=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-08-26T00:42:36Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-08-26T00:42:36Z"}, "message": "Actually switch to using the bigger hashmap once a it finishes growing and rehashing.", "tree": {"sha": "c4202d7894cfa434c1b4d3fac0a03ff47116a698", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4202d7894cfa434c1b4d3fac0a03ff47116a698"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c40fed5804f523cc90389941f1a16e5ee956ce5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c40fed5804f523cc90389941f1a16e5ee956ce5f", "html_url": "https://github.com/rust-lang/rust/commit/c40fed5804f523cc90389941f1a16e5ee956ce5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c40fed5804f523cc90389941f1a16e5ee956ce5f/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b053f24c71237586af7c23613356393149614a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b053f24c71237586af7c23613356393149614a2", "html_url": "https://github.com/rust-lang/rust/commit/6b053f24c71237586af7c23613356393149614a2"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "ced31513b63cff6a66dc448904602822e3d24e23", "filename": "src/lib/map.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c40fed5804f523cc90389941f1a16e5ee956ce5f/src%2Flib%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c40fed5804f523cc90389941f1a16e5ee956ce5f/src%2Flib%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmap.rs?ref=c40fed5804f523cc90389941f1a16e5ee956ce5f", "patch": "@@ -74,7 +74,7 @@ fn mk_hashmap[K, V](&hashfn[K] hasher, &eqfn[K] eqer) -> hashmap[K, V] {\n   {\n     let uint i = 0u;\n     while (i < nbkts) {\n-      let uint j = (hash[K](hasher, nbkts, key, i));\n+      let uint j = hash[K](hasher, nbkts, key, i);\n       alt (bkts.(j)) {\n         case (some[K, V](k, _)) {\n           if (eqer(key, k)) {\n@@ -145,10 +145,12 @@ fn mk_hashmap[K, V](&hashfn[K] hasher, &eqfn[K] eqer) -> hashmap[K, V] {\n       let util.rational load = rec(num=(nelts + 1u) as int, den=nbkts as int);\n       if (!util.rational_leq(load, lf)) {\n         let uint nnewbkts = _uint.next_power_of_two(nbkts + 1u);\n-\n         let vec[mutable bucket[K, V]] newbkts = make_buckets[K, V](nnewbkts);\n         rehash[K, V](hasher, eqer, bkts, nbkts, newbkts, nnewbkts);\n+        bkts = newbkts;\n+        nbkts = nnewbkts;\n       }\n+\n       if (insert_common[K, V](hasher, eqer, bkts, nbkts, key, val)) {\n         nelts += 1u;\n         ret true;"}]}