{"sha": "08af25fb27a521ee924787c10c96e8d9e2b04db9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4YWYyNWZiMjdhNTIxZWU5MjQ3ODdjMTBjOTZlOGQ5ZTJiMDRkYjk=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-10-05T20:33:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-05T20:33:16Z"}, "message": "Rollup merge of #54812 - pnkfelix:issue-32382-index-assoc-type-with-lifetime, r=nikomatsakis\n\nRegression test for #32382.", "tree": {"sha": "468bcc7ea79e0264ade88b8c560c8c82254bce64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/468bcc7ea79e0264ade88b8c560c8c82254bce64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08af25fb27a521ee924787c10c96e8d9e2b04db9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbt8qMCRBK7hj4Ov3rIwAAdHIIAH0h/GTjTRD/HshFMVaTJWVB\nUSmAJio/co+y24enrTu42CSENFgZtBGec6KoZKkW6kXNbhNWhbNNtZksnjcxHUN1\n2boD803hVn5yzvTInEdexXs4WeSBp9Ei7EjXOSSUv2Pv4/RTqRMHJgnYG6Nw/OBn\nXNzB9HFfgfQUn9f8bMAmJ7tDagjkE/kEy6sHU4c9nb+s2c7g78XnnkIa8UwkU4l5\njj/Q7KDCeOe7tFisqbY9AJVpdY29BTT5xIGRMsYF0PJC6Hg4cFooI12MLbxgtfM4\nD7Z7ZeR8kcpLIEXskw8/pAIk3NDyiFIlrmN6XEO0U5ZRyPOCHxnKhfK88+jLmPk=\n=SdVq\n-----END PGP SIGNATURE-----\n", "payload": "tree 468bcc7ea79e0264ade88b8c560c8c82254bce64\nparent ee745d6abfe1b5cb3f03505800db2cb94b6d42f9\nparent 594655bafa416ba282f80c457fe0b27e80b707d9\nauthor Pietro Albini <pietro@pietroalbini.org> 1538771596 +0200\ncommitter GitHub <noreply@github.com> 1538771596 +0200\n\nRollup merge of #54812 - pnkfelix:issue-32382-index-assoc-type-with-lifetime, r=nikomatsakis\n\nRegression test for #32382.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08af25fb27a521ee924787c10c96e8d9e2b04db9", "html_url": "https://github.com/rust-lang/rust/commit/08af25fb27a521ee924787c10c96e8d9e2b04db9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08af25fb27a521ee924787c10c96e8d9e2b04db9/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee745d6abfe1b5cb3f03505800db2cb94b6d42f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee745d6abfe1b5cb3f03505800db2cb94b6d42f9", "html_url": "https://github.com/rust-lang/rust/commit/ee745d6abfe1b5cb3f03505800db2cb94b6d42f9"}, {"sha": "594655bafa416ba282f80c457fe0b27e80b707d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/594655bafa416ba282f80c457fe0b27e80b707d9", "html_url": "https://github.com/rust-lang/rust/commit/594655bafa416ba282f80c457fe0b27e80b707d9"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "a114d7092ecf97a39010fea0427eb2e7e998e3d3", "filename": "src/test/ui/nll/issue-32382-index-assoc-type-with-lifetime.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/08af25fb27a521ee924787c10c96e8d9e2b04db9/src%2Ftest%2Fui%2Fnll%2Fissue-32382-index-assoc-type-with-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08af25fb27a521ee924787c10c96e8d9e2b04db9/src%2Ftest%2Fui%2Fnll%2Fissue-32382-index-assoc-type-with-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-32382-index-assoc-type-with-lifetime.rs?ref=08af25fb27a521ee924787c10c96e8d9e2b04db9", "patch": "@@ -0,0 +1,42 @@\n+#![feature(nll)]\n+// compile-pass\n+\n+// rust-lang/rust#32382: Borrow checker used to complain about\n+// `foobar_3` in the `impl` below, presumably due to some interaction\n+// between the use of a lifetime in the associated type and the use of\n+// the overloaded operator[]. This regression test ensures that we do\n+// not resume complaining about it in the future.\n+\n+\n+use std::marker::PhantomData;\n+use std::ops::Index;\n+\n+pub trait Context: Clone {\n+    type Container: ?Sized;\n+    fn foobar_1( container: &Self::Container ) -> &str;\n+    fn foobar_2( container: &Self::Container ) -> &str;\n+    fn foobar_3( container: &Self::Container ) -> &str;\n+}\n+\n+#[derive(Clone)]\n+struct Foobar<'a> {\n+    phantom: PhantomData<&'a ()>\n+}\n+\n+impl<'a> Context for Foobar<'a> {\n+    type Container = [&'a str];\n+\n+    fn foobar_1<'r>( container: &'r [&'a str] ) -> &'r str {\n+        container[0]\n+    }\n+\n+    fn foobar_2<'r>( container: &'r Self::Container ) -> &'r str {\n+        container.index( 0 )\n+    }\n+\n+    fn foobar_3<'r>( container: &'r Self::Container ) -> &'r str {\n+        container[0]\n+    }\n+}\n+\n+fn main() { }"}]}