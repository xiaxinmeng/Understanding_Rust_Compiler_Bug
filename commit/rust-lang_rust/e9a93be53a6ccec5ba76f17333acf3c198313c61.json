{"sha": "e9a93be53a6ccec5ba76f17333acf3c198313c61", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5YTkzYmU1M2E2Y2NlYzViYTc2ZjE3MzMzYWNmM2MxOTgzMTNjNjE=", "commit": {"author": {"name": "AnthonyMikh", "email": "anthony.mikh@yandex.ru", "date": "2019-09-25T20:08:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-25T20:08:09Z"}, "message": "Use `max` instead of `if`s", "tree": {"sha": "68f00af90c4f64235a737803c8866cb00f89dfb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68f00af90c4f64235a737803c8866cb00f89dfb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9a93be53a6ccec5ba76f17333acf3c198313c61", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdi8kpCRBK7hj4Ov3rIwAAdHIIAExx8wFQp44z4pCsZCHAvuzc\n38O5OlWMax2NxImYl/HSCPhpRG66iJ5sWfB27B5NZCYBvNhMFHZ8vg7QighR7AmS\nIgHQNN6QfMvEGj33Fo3oswBXvWAtGxG0H4rdWBMFTjWmi0tnI6izfTNo9LRwUbJc\nZWUy7lsgmlmFJyRSrh62oQTchn745VGWlHdZYF2hIi7s+/06WdGXPcCnjVtARMzQ\nKxZd7/zmijGIGEjqWUQ9/QttTJXDT5/AIysD+d62GckPYi73IiQ8STDyZW2fsjDR\neQKGn8h3ESJSwvnZSbL3tUOe3M8k36XaAq7T27lSb4txbFJ2mLSm6771hUt6oPI=\n=gzyQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 68f00af90c4f64235a737803c8866cb00f89dfb4\nparent 2cb460e6259af63924a719beaf91c5804dd0a789\nauthor AnthonyMikh <anthony.mikh@yandex.ru> 1569442089 +0300\ncommitter GitHub <noreply@github.com> 1569442089 +0300\n\nUse `max` instead of `if`s"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9a93be53a6ccec5ba76f17333acf3c198313c61", "html_url": "https://github.com/rust-lang/rust/commit/e9a93be53a6ccec5ba76f17333acf3c198313c61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9a93be53a6ccec5ba76f17333acf3c198313c61/comments", "author": {"login": "AnthonyMikh", "id": 19252795, "node_id": "MDQ6VXNlcjE5MjUyNzk1", "avatar_url": "https://avatars.githubusercontent.com/u/19252795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnthonyMikh", "html_url": "https://github.com/AnthonyMikh", "followers_url": "https://api.github.com/users/AnthonyMikh/followers", "following_url": "https://api.github.com/users/AnthonyMikh/following{/other_user}", "gists_url": "https://api.github.com/users/AnthonyMikh/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnthonyMikh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnthonyMikh/subscriptions", "organizations_url": "https://api.github.com/users/AnthonyMikh/orgs", "repos_url": "https://api.github.com/users/AnthonyMikh/repos", "events_url": "https://api.github.com/users/AnthonyMikh/events{/privacy}", "received_events_url": "https://api.github.com/users/AnthonyMikh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cb460e6259af63924a719beaf91c5804dd0a789", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb460e6259af63924a719beaf91c5804dd0a789", "html_url": "https://github.com/rust-lang/rust/commit/2cb460e6259af63924a719beaf91c5804dd0a789"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "45c3dd8f4d825c1cfcbf1057f9892becd0179d18", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e9a93be53a6ccec5ba76f17333acf3c198313c61/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9a93be53a6ccec5ba76f17333acf3c198313c61/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=e9a93be53a6ccec5ba76f17333acf3c198313c61", "patch": "@@ -169,10 +169,8 @@ impl Margin {\n     fn right(&self, line_len: usize) -> usize {\n         if line_len.saturating_sub(self.computed_left) <= self.column_width {\n             line_len\n-        } else if self.computed_right > line_len {\n-            line_len\n         } else {\n-            self.computed_right\n+            min(line_len, self.computed_right)\n         }\n     }\n }\n@@ -797,9 +795,7 @@ impl EmitterWriter {\n                     }\n                 }\n             }\n-            if line_len < p {\n-                line_len = p;\n-            }\n+            line_len = max(line_len, p);\n         }\n \n         if line_len != 0 {\n@@ -1772,9 +1768,7 @@ impl FileWithAnnotatedLines {\n \n         let mut max_depth = 0;  // max overlapping multiline spans\n         for (file, ann) in multiline_annotations {\n-            if ann.depth > max_depth {\n-                max_depth = ann.depth;\n-            }\n+            max_depth = max(max_depth, ann.depth);\n             let mut end_ann = ann.as_end();\n             if !ann.overlaps_exactly {\n                 // avoid output like"}]}