{"sha": "796114a5b0c66abbb2527257b8a38c4cda964a66", "node_id": "C_kwDOAAsO6NoAKDc5NjExNGE1YjBjNjZhYmJiMjUyNzI1N2I4YTM4YzRjZGE5NjRhNjY", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-10-26T19:09:28Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-10-26T19:09:28Z"}, "message": "Add documentation", "tree": {"sha": "2707b1db03b050e4a14b63f095367d1af9f8c974", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2707b1db03b050e4a14b63f095367d1af9f8c974"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/796114a5b0c66abbb2527257b8a38c4cda964a66", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgbSfWKRQb2tiqhuHtakDJeupmrF\nChDbM0msU+PXaBOk8AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQNgGBNf+FF2wCYvR5I8SoHb/F86ow27GiMF3iWT9X0ALgQuUpAf1LB904DtkmGk6tu\nVIKLZ3NsN4PuSoY0fiuQk=\n-----END SSH SIGNATURE-----", "payload": "tree 2707b1db03b050e4a14b63f095367d1af9f8c974\nparent ed142028641079918b95b539f0570e92469687fe\nauthor Nilstrieb <48135649+Nilstrieb@users.noreply.github.com> 1666811368 +0200\ncommitter Nilstrieb <48135649+Nilstrieb@users.noreply.github.com> 1666811368 +0200\n\nAdd documentation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/796114a5b0c66abbb2527257b8a38c4cda964a66", "html_url": "https://github.com/rust-lang/rust/commit/796114a5b0c66abbb2527257b8a38c4cda964a66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/796114a5b0c66abbb2527257b8a38c4cda964a66/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed142028641079918b95b539f0570e92469687fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed142028641079918b95b539f0570e92469687fe", "html_url": "https://github.com/rust-lang/rust/commit/ed142028641079918b95b539f0570e92469687fe"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "4376e5832efbcfbc880ec621678bec79e1f375e9", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/796114a5b0c66abbb2527257b8a38c4cda964a66/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/796114a5b0c66abbb2527257b8a38c4cda964a66/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=796114a5b0c66abbb2527257b8a38c4cda964a66", "patch": "@@ -158,7 +158,7 @@ pub struct Parser<'a> {\n     /// This allows us to recover when the user forget to add braces around\n     /// multiple statements in the closure body.\n     pub current_closure: Option<ClosureSpans>,\n-    /// Whether the parser is allowed to recover and parse invalid code successfully (and emit a diagnostic as a side effect).\n+    /// Whether the parser is allowed to do recovery.\n     /// This is disabled when parsing macro arguments, see #103534\n     pub recovery: Recovery,\n }\n@@ -506,6 +506,13 @@ impl<'a> Parser<'a> {\n         self\n     }\n \n+    /// Whether the parser is allowed to recover from broken code.\n+    ///\n+    /// If this returns false, recovering broken code into valid code (especially if this recovery does lookahead)\n+    /// is not allowed. All recovery done by the parser must be gated behind this check.\n+    ///\n+    /// Technically, this only needs to restruct eager recovery by doing lookahead at more tokens.\n+    /// But making the distinction is very subtle, and simply forbidding all recovery is a lot simpler to uphold.\n     fn may_recover(&self) -> bool {\n         matches!(self.recovery, Recovery::Allowed)\n     }"}]}