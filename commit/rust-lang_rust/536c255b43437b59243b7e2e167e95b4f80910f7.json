{"sha": "536c255b43437b59243b7e2e167e95b4f80910f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNmMyNTViNDM0MzdiNTkyNDNiN2UyZTE2N2U5NWI0ZjgwOTEwZjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-03T17:22:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-03T17:22:10Z"}, "message": "Auto merge of #5130 - JohnTitor:split-up-index-slice, r=flip1995\n\nSplit up `indexing_slicing` ui test\n\nCloses #2038\n\nNow all the stderrs are less than 200 lines :tada:\n\nchangelog: none", "tree": {"sha": "cd226f507f5ae06cffd4d08e334ee895509ad88d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd226f507f5ae06cffd4d08e334ee895509ad88d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/536c255b43437b59243b7e2e167e95b4f80910f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/536c255b43437b59243b7e2e167e95b4f80910f7", "html_url": "https://github.com/rust-lang/rust/commit/536c255b43437b59243b7e2e167e95b4f80910f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/536c255b43437b59243b7e2e167e95b4f80910f7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a39589480b8d2d1145fd01c335a723bb4408371f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a39589480b8d2d1145fd01c335a723bb4408371f", "html_url": "https://github.com/rust-lang/rust/commit/a39589480b8d2d1145fd01c335a723bb4408371f"}, {"sha": "49934e70a28d599d4b46d6885c906c5541472b2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/49934e70a28d599d4b46d6885c906c5541472b2d", "html_url": "https://github.com/rust-lang/rust/commit/49934e70a28d599d4b46d6885c906c5541472b2d"}], "stats": {"total": 247, "additions": 130, "deletions": 117}, "files": [{"sha": "e36feb3a27134b8847b95f42d78d6c0dc367d9c6", "filename": "clippy_dev/src/stderr_length_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/536c255b43437b59243b7e2e167e95b4f80910f7/clippy_dev%2Fsrc%2Fstderr_length_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/536c255b43437b59243b7e2e167e95b4f80910f7/clippy_dev%2Fsrc%2Fstderr_length_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fstderr_length_check.rs?ref=536c255b43437b59243b7e2e167e95b4f80910f7", "patch": "@@ -7,7 +7,7 @@ use std::io::prelude::*;\n // The maximum length allowed for stderr files.\n //\n // We limit this because small files are easier to deal with than bigger files.\n-const LIMIT: usize = 220;\n+const LIMIT: usize = 200;\n \n pub fn check() {\n     let stderr_files = stderr_files();"}, {"sha": "000d5269930ba8f29a69a8c496c7cded649a14dc", "filename": "tests/ui/indexing_slicing_index.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/536c255b43437b59243b7e2e167e95b4f80910f7/tests%2Fui%2Findexing_slicing_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/536c255b43437b59243b7e2e167e95b4f80910f7/tests%2Fui%2Findexing_slicing_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing_index.rs?ref=536c255b43437b59243b7e2e167e95b4f80910f7", "patch": "@@ -0,0 +1,31 @@\n+#![warn(clippy::indexing_slicing)]\n+// We also check the out_of_bounds_indexing lint here, because it lints similar things and\n+// we want to avoid false positives.\n+#![warn(clippy::out_of_bounds_indexing)]\n+#![allow(clippy::no_effect, clippy::unnecessary_operation)]\n+\n+fn main() {\n+    let x = [1, 2, 3, 4];\n+    let index: usize = 1;\n+    x[index];\n+    x[4]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+    x[1 << 3]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+\n+    x[0]; // Ok, should not produce stderr.\n+    x[3]; // Ok, should not produce stderr.\n+\n+    let y = &x;\n+    y[0];\n+\n+    let v = vec![0; 5];\n+    v[0];\n+    v[10];\n+    v[1 << 3];\n+\n+    const N: usize = 15; // Out of bounds\n+    const M: usize = 3; // In bounds\n+    x[N]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+    x[M]; // Ok, should not produce stderr.\n+    v[N];\n+    v[M];\n+}"}, {"sha": "b4fac2a0fe051735a25fb52b366c43ddc9c3329f", "filename": "tests/ui/indexing_slicing_index.stderr", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/536c255b43437b59243b7e2e167e95b4f80910f7/tests%2Fui%2Findexing_slicing_index.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/536c255b43437b59243b7e2e167e95b4f80910f7/tests%2Fui%2Findexing_slicing_index.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing_index.stderr?ref=536c255b43437b59243b7e2e167e95b4f80910f7", "patch": "@@ -0,0 +1,79 @@\n+error: index out of bounds: the len is 4 but the index is 4\n+  --> $DIR/indexing_slicing_index.rs:11:5\n+   |\n+LL |     x[4]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+   |     ^^^^\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+\n+error: index out of bounds: the len is 4 but the index is 8\n+  --> $DIR/indexing_slicing_index.rs:12:5\n+   |\n+LL |     x[1 << 3]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+   |     ^^^^^^^^^\n+\n+error: index out of bounds: the len is 4 but the index is 15\n+  --> $DIR/indexing_slicing_index.rs:27:5\n+   |\n+LL |     x[N]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+   |     ^^^^\n+\n+error: indexing may panic.\n+  --> $DIR/indexing_slicing_index.rs:10:5\n+   |\n+LL |     x[index];\n+   |     ^^^^^^^^\n+   |\n+   = note: `-D clippy::indexing-slicing` implied by `-D warnings`\n+   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n+\n+error: indexing may panic.\n+  --> $DIR/indexing_slicing_index.rs:18:5\n+   |\n+LL |     y[0];\n+   |     ^^^^\n+   |\n+   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n+\n+error: indexing may panic.\n+  --> $DIR/indexing_slicing_index.rs:21:5\n+   |\n+LL |     v[0];\n+   |     ^^^^\n+   |\n+   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n+\n+error: indexing may panic.\n+  --> $DIR/indexing_slicing_index.rs:22:5\n+   |\n+LL |     v[10];\n+   |     ^^^^^\n+   |\n+   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n+\n+error: indexing may panic.\n+  --> $DIR/indexing_slicing_index.rs:23:5\n+   |\n+LL |     v[1 << 3];\n+   |     ^^^^^^^^^\n+   |\n+   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n+\n+error: indexing may panic.\n+  --> $DIR/indexing_slicing_index.rs:29:5\n+   |\n+LL |     v[N];\n+   |     ^^^^\n+   |\n+   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n+\n+error: indexing may panic.\n+  --> $DIR/indexing_slicing_index.rs:30:5\n+   |\n+LL |     v[M];\n+   |     ^^^^\n+   |\n+   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n+\n+error: aborting due to 10 previous errors\n+"}, {"sha": "7b107db39f0221a1fc1d3a4295c463f53e549e8e", "filename": "tests/ui/indexing_slicing_slice.rs", "status": "renamed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/536c255b43437b59243b7e2e167e95b4f80910f7/tests%2Fui%2Findexing_slicing_slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/536c255b43437b59243b7e2e167e95b4f80910f7/tests%2Fui%2Findexing_slicing_slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing_slice.rs?ref=536c255b43437b59243b7e2e167e95b4f80910f7", "patch": "@@ -1,4 +1,3 @@\n-#![feature(plugin)]\n #![warn(clippy::indexing_slicing)]\n // We also check the out_of_bounds_indexing lint here, because it lints similar things and\n // we want to avoid false positives.\n@@ -10,49 +9,29 @@ fn main() {\n     let index: usize = 1;\n     let index_from: usize = 2;\n     let index_to: usize = 3;\n-    x[index];\n     &x[index..];\n     &x[..index];\n     &x[index_from..index_to];\n     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n-    x[4]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n-    x[1 << 3]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n     &x[5..][..10]; // Two lint reports, one for out of bounds [5..] and another for slicing [..10].\n     &x[0..][..3];\n     &x[1..][..5];\n \n     &x[0..].get(..3); // Ok, should not produce stderr.\n-    x[0]; // Ok, should not produce stderr.\n-    x[3]; // Ok, should not produce stderr.\n     &x[0..3]; // Ok, should not produce stderr.\n \n     let y = &x;\n-    y[0];\n     &y[1..2];\n     &y[0..=4];\n     &y[..=4];\n \n     &y[..]; // Ok, should not produce stderr.\n \n     let v = vec![0; 5];\n-    v[0];\n-    v[10];\n-    v[1 << 3];\n     &v[10..100];\n     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n     &v[10..];\n     &v[..100];\n \n     &v[..]; // Ok, should not produce stderr.\n-\n-    //\n-    // Continue tests at end function to minimize the changes to this file's corresponding stderr.\n-    //\n-\n-    const N: usize = 15; // Out of bounds\n-    const M: usize = 3; // In bounds\n-    x[N]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n-    x[M]; // Ok, should not produce stderr.\n-    v[N];\n-    v[M];\n }", "previous_filename": "tests/ui/indexing_slicing.rs"}, {"sha": "ec6c157ac1a2659510a80d6f36355d5a41b90041", "filename": "tests/ui/indexing_slicing_slice.stderr", "status": "renamed", "additions": 19, "deletions": 95, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/536c255b43437b59243b7e2e167e95b4f80910f7/tests%2Fui%2Findexing_slicing_slice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/536c255b43437b59243b7e2e167e95b4f80910f7/tests%2Fui%2Findexing_slicing_slice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing_slice.stderr?ref=536c255b43437b59243b7e2e167e95b4f80910f7", "patch": "@@ -1,213 +1,137 @@\n-error: index out of bounds: the len is 4 but the index is 4\n-  --> $DIR/indexing_slicing.rs:18:5\n-   |\n-LL |     x[4]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n-   |     ^^^^\n-   |\n-   = note: `#[deny(const_err)]` on by default\n-\n-error: index out of bounds: the len is 4 but the index is 8\n-  --> $DIR/indexing_slicing.rs:19:5\n-   |\n-LL |     x[1 << 3]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n-   |     ^^^^^^^^^\n-\n-error: index out of bounds: the len is 4 but the index is 15\n-  --> $DIR/indexing_slicing.rs:54:5\n-   |\n-LL |     x[N]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n-   |     ^^^^\n-\n-error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:13:5\n-   |\n-LL |     x[index];\n-   |     ^^^^^^^^\n-   |\n-   = note: `-D clippy::indexing-slicing` implied by `-D warnings`\n-   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n-\n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:14:6\n+  --> $DIR/indexing_slicing_slice.rs:12:6\n    |\n LL |     &x[index..];\n    |      ^^^^^^^^^^\n    |\n+   = note: `-D clippy::indexing-slicing` implied by `-D warnings`\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:15:6\n+  --> $DIR/indexing_slicing_slice.rs:13:6\n    |\n LL |     &x[..index];\n    |      ^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:16:6\n+  --> $DIR/indexing_slicing_slice.rs:14:6\n    |\n LL |     &x[index_from..index_to];\n    |      ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:17:6\n+  --> $DIR/indexing_slicing_slice.rs:15:6\n    |\n LL |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:17:6\n+  --> $DIR/indexing_slicing_slice.rs:15:6\n    |\n LL |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n    |      ^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:20:6\n+  --> $DIR/indexing_slicing_slice.rs:16:6\n    |\n LL |     &x[5..][..10]; // Two lint reports, one for out of bounds [5..] and another for slicing [..10].\n    |      ^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:20:8\n+  --> $DIR/indexing_slicing_slice.rs:16:8\n    |\n LL |     &x[5..][..10]; // Two lint reports, one for out of bounds [5..] and another for slicing [..10].\n    |        ^\n    |\n    = note: `-D clippy::out-of-bounds-indexing` implied by `-D warnings`\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:21:6\n+  --> $DIR/indexing_slicing_slice.rs:17:6\n    |\n LL |     &x[0..][..3];\n    |      ^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:22:6\n+  --> $DIR/indexing_slicing_slice.rs:18:6\n    |\n LL |     &x[1..][..5];\n    |      ^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n-error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:30:5\n-   |\n-LL |     y[0];\n-   |     ^^^^\n-   |\n-   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n-\n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:31:6\n+  --> $DIR/indexing_slicing_slice.rs:24:6\n    |\n LL |     &y[1..2];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:32:6\n+  --> $DIR/indexing_slicing_slice.rs:25:6\n    |\n LL |     &y[0..=4];\n    |      ^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:33:6\n+  --> $DIR/indexing_slicing_slice.rs:26:6\n    |\n LL |     &y[..=4];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n-error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:38:5\n-   |\n-LL |     v[0];\n-   |     ^^^^\n-   |\n-   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n-\n-error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:39:5\n-   |\n-LL |     v[10];\n-   |     ^^^^^\n-   |\n-   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n-\n-error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:40:5\n-   |\n-LL |     v[1 << 3];\n-   |     ^^^^^^^^^\n-   |\n-   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n-\n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:41:6\n+  --> $DIR/indexing_slicing_slice.rs:31:6\n    |\n LL |     &v[10..100];\n    |      ^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:42:6\n+  --> $DIR/indexing_slicing_slice.rs:32:6\n    |\n LL |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n    |      ^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:42:8\n+  --> $DIR/indexing_slicing_slice.rs:32:8\n    |\n LL |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n    |        ^^\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:43:6\n+  --> $DIR/indexing_slicing_slice.rs:33:6\n    |\n LL |     &v[10..];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:44:6\n+  --> $DIR/indexing_slicing_slice.rs:34:6\n    |\n LL |     &v[..100];\n    |      ^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n-error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:56:5\n-   |\n-LL |     v[N];\n-   |     ^^^^\n-   |\n-   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n-\n-error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:57:5\n-   |\n-LL |     v[M];\n-   |     ^^^^\n-   |\n-   = help: Consider using `.get(n)` or `.get_mut(n)` instead\n-\n-error: aborting due to 27 previous errors\n+error: aborting due to 17 previous errors\n ", "previous_filename": "tests/ui/indexing_slicing.stderr"}]}