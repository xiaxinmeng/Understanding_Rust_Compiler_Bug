{"sha": "a14e5e70462fed497ce8e12e52c1ef099678a8de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNGU1ZTcwNDYyZmVkNDk3Y2U4ZTEyZTUyYzFlZjA5OTY3OGE4ZGU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-19T21:00:15Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-19T21:01:21Z"}, "message": "Avoid double-closing pipes in std::run::start_program\n\nLinux and mac seem fine with it, Windows does not", "tree": {"sha": "82aa6b0e51c649b7ae7b5b97265d807aca7f0165", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82aa6b0e51c649b7ae7b5b97265d807aca7f0165"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a14e5e70462fed497ce8e12e52c1ef099678a8de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a14e5e70462fed497ce8e12e52c1ef099678a8de", "html_url": "https://github.com/rust-lang/rust/commit/a14e5e70462fed497ce8e12e52c1ef099678a8de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a14e5e70462fed497ce8e12e52c1ef099678a8de/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a33bc56e43adbdfce78c63337c175053038f3362", "url": "https://api.github.com/repos/rust-lang/rust/commits/a33bc56e43adbdfce78c63337c175053038f3362", "html_url": "https://github.com/rust-lang/rust/commit/a33bc56e43adbdfce78c63337c175053038f3362"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "20da4289b22ef52fb51eb1825041dae784ab33b7", "filename": "src/lib/run_program.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a14e5e70462fed497ce8e12e52c1ef099678a8de/src%2Flib%2Frun_program.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a14e5e70462fed497ce8e12e52c1ef099678a8de/src%2Flib%2Frun_program.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Frun_program.rs?ref=a14e5e70462fed497ce8e12e52c1ef099678a8de", "patch": "@@ -50,7 +50,7 @@ fn start_program(str prog, vec[str] args) -> @program {\n     os::libc::close(pipe_input._0);\n     os::libc::close(pipe_output._1);\n     obj new_program(int pid,\n-                    int in_fd,\n+                    mutable int in_fd,\n                     os::libc::FILE out_file,\n                     mutable bool finished) {\n         fn get_id() -> int { ret pid; }\n@@ -60,14 +60,23 @@ fn start_program(str prog, vec[str] args) -> @program {\n         fn output() -> io::reader {\n             ret io::new_reader(io::FILE_buf_reader(out_file, false));\n         }\n-        fn close_input() { os::libc::close(in_fd); }\n+        fn close_input() {\n+            auto invalid_fd = -1;\n+            if (in_fd != invalid_fd) {\n+                os::libc::close(in_fd);\n+                in_fd = invalid_fd;\n+            }\n+        }\n         fn finish() -> int {\n             if (finished) { ret 0; }\n             finished = true;\n-            os::libc::close(in_fd);\n+            self.close_input();\n             ret os::waitpid(pid);\n         }drop {\n-             if (!finished) { os::libc::close(in_fd); os::waitpid(pid); }\n+            self.close_input();\n+            if (!finished) {\n+                os::waitpid(pid);\n+            }\n              os::libc::fclose(out_file);\n          }\n     }"}]}