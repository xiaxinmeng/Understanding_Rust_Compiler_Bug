{"sha": "e860655a999ad921eb379d7f220c3e8ad1bcbb54", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NjA2NTVhOTk5YWQ5MjFlYjM3OWQ3ZjIyMGMzZThhZDFiY2JiNTQ=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-05-23T18:17:38Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-05-23T18:17:38Z"}, "message": "Remove some needless // gate-test- comments\n\nAlso, add detection to treat such comments as tidy errors.\nWe also remove the found_lib_feature code because it\nwas just repeating the found_feature code. Originally it\nwas intended to allow for gate-test lines for\nlib features, but apparently nobody missed it.", "tree": {"sha": "45a77fbffd0d61386377fcf669cf24ee9da31232", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45a77fbffd0d61386377fcf669cf24ee9da31232"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e860655a999ad921eb379d7f220c3e8ad1bcbb54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e860655a999ad921eb379d7f220c3e8ad1bcbb54", "html_url": "https://github.com/rust-lang/rust/commit/e860655a999ad921eb379d7f220c3e8ad1bcbb54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e860655a999ad921eb379d7f220c3e8ad1bcbb54/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b13bff5203c1bdc6ac6dc87f69b5359a9503078", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b13bff5203c1bdc6ac6dc87f69b5359a9503078", "html_url": "https://github.com/rust-lang/rust/commit/5b13bff5203c1bdc6ac6dc87f69b5359a9503078"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "eeede4b8aa13c9ed7826b35fe3ceb63f7ca46c27", "filename": "src/test/compile-fail-fulldeps/proc-macro/feature-gate-proc_macro.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e860655a999ad921eb379d7f220c3e8ad1bcbb54/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Ffeature-gate-proc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e860655a999ad921eb379d7f220c3e8ad1bcbb54/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Ffeature-gate-proc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Ffeature-gate-proc_macro.rs?ref=e860655a999ad921eb379d7f220c3e8ad1bcbb54", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:attr_proc_macro.rs\n-// gate-test-proc_macro\n #![feature(use_extern_macros)]\n \n extern crate attr_proc_macro;\n@@ -21,4 +20,4 @@ struct Foo;\n \n fn main() {\n     let _ = Foo;\n-}\n\\ No newline at end of file\n+}"}, {"sha": "77f61ba47b005ebe9b077ec302f412ba0a2a2e11", "filename": "src/test/compile-fail/feature-gate-global_asm.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e860655a999ad921eb379d7f220c3e8ad1bcbb54/src%2Ftest%2Fcompile-fail%2Ffeature-gate-global_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e860655a999ad921eb379d7f220c3e8ad1bcbb54/src%2Ftest%2Fcompile-fail%2Ffeature-gate-global_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-global_asm.rs?ref=e860655a999ad921eb379d7f220c3e8ad1bcbb54", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// gate-test-global_asm\n-\n global_asm!(\"\"); //~ ERROR `global_asm!` is not stable\n \n fn main() {}"}, {"sha": "791b8d77e0b907f635782f1d7b33dec9ec09ae83", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e860655a999ad921eb379d7f220c3e8ad1bcbb54/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e860655a999ad921eb379d7f220c3e8ad1bcbb54/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=e860655a999ad921eb379d7f220c3e8ad1bcbb54", "patch": "@@ -70,7 +70,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n         }\n \n         let filen_underscore = filename.replace(\"-\",\"_\").replace(\".rs\",\"\");\n-        test_filen_gate(&filen_underscore, &mut features);\n+        let filename_is_gate_test = test_filen_gate(&filen_underscore, &mut features);\n \n         contents.truncate(0);\n         t!(t!(File::open(&file), &file).read_to_string(&mut contents));\n@@ -92,17 +92,20 @@ pub fn check(path: &Path, bad: &mut bool) {\n                 },\n                 None => continue,\n             };\n-            let found_feature = features.get_mut(feature_name)\n-                                        .map(|v| { v.has_gate_test = true; () })\n-                                        .is_some();\n-\n-            let found_lib_feature = features.get_mut(feature_name)\n-                                            .map(|v| { v.has_gate_test = true; () })\n-                                            .is_some();\n-\n-            if !(found_feature || found_lib_feature) {\n-                err(&format!(\"gate-test test found referencing a nonexistent feature '{}'\",\n-                             feature_name));\n+            match features.get_mut(feature_name) {\n+                Some(f) => {\n+                    if filename_is_gate_test {\n+                        err(&format!(\"The file is already marked as gate test \\\n+                                      through its name, no need for a \\\n+                                      'gate-test-{}' comment\",\n+                                     feature_name));\n+                    }\n+                    f.has_gate_test = true;\n+                }\n+                None => {\n+                    err(&format!(\"gate-test test found referencing a nonexistent feature '{}'\",\n+                                 feature_name));\n+                }\n             }\n         }\n     });\n@@ -265,4 +268,4 @@ pub fn collect_lib_features(base_src_path: &Path,\n         }\n     });\n     lib_features\n-}\n\\ No newline at end of file\n+}"}]}