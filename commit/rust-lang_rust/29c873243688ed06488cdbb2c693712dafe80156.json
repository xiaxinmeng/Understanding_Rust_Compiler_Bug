{"sha": "29c873243688ed06488cdbb2c693712dafe80156", "node_id": "C_kwDOAAsO6NoAKDI5Yzg3MzI0MzY4OGVkMDY0ODhjZGJiMmM2OTM3MTJkYWZlODAxNTY", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-01-28T16:30:46Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-02-02T15:40:12Z"}, "message": "Make the error for opaque types that have no hidden types a bit informative", "tree": {"sha": "ef4347d11f98160f10b3781c097eeca9ee86923b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef4347d11f98160f10b3781c097eeca9ee86923b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29c873243688ed06488cdbb2c693712dafe80156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29c873243688ed06488cdbb2c693712dafe80156", "html_url": "https://github.com/rust-lang/rust/commit/29c873243688ed06488cdbb2c693712dafe80156", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29c873243688ed06488cdbb2c693712dafe80156/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d2e9651060c984d18cf8863ceacf215ec00446c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d2e9651060c984d18cf8863ceacf215ec00446c", "html_url": "https://github.com/rust-lang/rust/commit/4d2e9651060c984d18cf8863ceacf215ec00446c"}], "stats": {"total": 171, "additions": 115, "deletions": 56}, "files": [{"sha": "912a16ffb8a13aca0efe3895f26fcbeb0ed49a73", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -724,7 +724,12 @@ fn find_opaque_ty_constraints(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Ty<'_> {\n         Some((_, ty)) => ty,\n         None => {\n             let span = tcx.def_span(def_id);\n-            tcx.sess.span_err(span, \"could not find defining uses\");\n+            let name = tcx.item_name(tcx.parent(def_id.to_def_id()).unwrap());\n+            let label = format!(\n+                \"`{}` must be used in combination with a concrete type within the same module\",\n+                name\n+            );\n+            tcx.sess.struct_span_err(span, \"unconstrained opaque type\").note(&label).emit();\n             tcx.ty_error()\n         }\n     }"}, {"sha": "c65f3fb2aa0a114aa6edc8a3c8dfd3869e8070e7", "filename": "src/test/ui/generic-associated-types/issue-87258_a.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_a.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -16,7 +16,7 @@ pub trait Trait2 {\n \n impl<'c, S: Trait2> Trait2 for &'c mut S {\n     type FooFuture<'a> = impl Trait1;\n-    //~^ ERROR could not find defining uses\n+    //~^ ERROR unconstrained opaque type\n     fn foo<'a>() -> Self::FooFuture<'a> {\n         Struct(unimplemented!())\n     }"}, {"sha": "db3a5c819cbf3d7d317f533e3ac33a30fd84f130", "filename": "src/test/ui/generic-associated-types/issue-87258_a.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_a.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_a.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_a.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,8 +1,10 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/issue-87258_a.rs:18:26\n    |\n LL |     type FooFuture<'a> = impl Trait1;\n    |                          ^^^^^^^^^^^\n+   |\n+   = note: `FooFuture` must be used in combination with a concrete type within the same module\n \n error: aborting due to previous error\n "}, {"sha": "f59e0d7665942f7cc68fe1df2b93c62b9b422e05", "filename": "src/test/ui/generic-associated-types/issue-87258_b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_b.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -15,7 +15,7 @@ pub trait Trait2 {\n }\n \n type Helper<'xenon, 'yttrium, KABOOM: Trait2> = impl Trait1;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n \n impl<'c, S: Trait2> Trait2 for &'c mut S {\n     type FooFuture<'a> = Helper<'c, 'a, S>;"}, {"sha": "9faccc96124bc9648c915ce51078e78bdb48587b", "filename": "src/test/ui/generic-associated-types/issue-87258_b.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87258_b.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,8 +1,10 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/issue-87258_b.rs:17:49\n    |\n LL | type Helper<'xenon, 'yttrium, KABOOM: Trait2> = impl Trait1;\n    |                                                 ^^^^^^^^^^^\n+   |\n+   = note: `Helper` must be used in combination with a concrete type within the same module\n \n error: aborting due to previous error\n "}, {"sha": "c6cde3aa065e77073767a194c9132c59aaf9c4a2", "filename": "src/test/ui/generic-associated-types/issue-88595.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -18,7 +18,7 @@ struct C;\n impl<'a> A<'a> for C {\n     type B<'b> = impl Clone;\n     //~^ ERROR: lifetime bound not satisfied\n-    //~| ERROR: could not find defining uses\n+    //~| ERROR: unconstrained opaque type\n \n     fn a(&'a self) -> Self::B<'a> {} //~ ERROR: non-defining opaque type use in defining scope\n }"}, {"sha": "58afc42fdea7695dd157346090883a01ccd75f95", "filename": "src/test/ui/generic-associated-types/issue-88595.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -29,11 +29,13 @@ LL | impl<'a> A<'a> for C {\n LL |     type B<'b> = impl Clone;\n    |            ^^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/issue-88595.rs:19:18\n    |\n LL |     type B<'b> = impl Clone;\n    |                  ^^^^^^^^^^\n+   |\n+   = note: `B` must be used in combination with a concrete type within the same module\n \n error: aborting due to 3 previous errors\n "}, {"sha": "a60e34c17b671aa0f8057e97913a68b1cd70f949", "filename": "src/test/ui/impl-trait/recursive-type-alias-impl-trait-declaration-too-subtle.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-type-alias-impl-trait-declaration-too-subtle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-type-alias-impl-trait-declaration-too-subtle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-type-alias-impl-trait-declaration-too-subtle.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -2,7 +2,7 @@\n \n mod a {\n     type Foo = impl PartialEq<(Foo, i32)>;\n-    //~^ ERROR could not find defining uses\n+    //~^ ERROR unconstrained opaque type\n \n     struct Bar;\n \n@@ -15,7 +15,7 @@ mod a {\n \n mod b {\n     type Foo = impl PartialEq<(Foo, i32)>;\n-    //~^ ERROR could not find defining uses\n+    //~^ ERROR unconstrained opaque type\n \n     struct Bar;\n "}, {"sha": "eae7d38d1162b72ec217394d909dd600baf6bc66", "filename": "src/test/ui/impl-trait/recursive-type-alias-impl-trait-declaration-too-subtle.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-type-alias-impl-trait-declaration-too-subtle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-type-alias-impl-trait-declaration-too-subtle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-type-alias-impl-trait-declaration-too-subtle.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,14 +1,18 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/recursive-type-alias-impl-trait-declaration-too-subtle.rs:4:16\n    |\n LL |     type Foo = impl PartialEq<(Foo, i32)>;\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `Foo` must be used in combination with a concrete type within the same module\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/recursive-type-alias-impl-trait-declaration-too-subtle.rs:17:16\n    |\n LL |     type Foo = impl PartialEq<(Foo, i32)>;\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `Foo` must be used in combination with a concrete type within the same module\n \n error: aborting due to 2 previous errors\n "}, {"sha": "295e2375428aa98c1139dd6aaa981a413b2cd3f3", "filename": "src/test/ui/impl-trait/two_tait_defining_each_other2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,7 +1,7 @@\n #![feature(type_alias_impl_trait)]\n \n type A = impl Foo;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n type B = impl Foo;\n \n trait Foo {}"}, {"sha": "e48a5724a7fa56779a2a07222715412ffc3be043", "filename": "src/test/ui/impl-trait/two_tait_defining_each_other2.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,8 +1,10 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/two_tait_defining_each_other2.rs:3:10\n    |\n LL | type A = impl Foo;\n    |          ^^^^^^^^\n+   |\n+   = note: `A` must be used in combination with a concrete type within the same module\n \n error: aborting due to previous error\n "}, {"sha": "13dab7ed954f85b5ec7a13da761a91ab95f42c84", "filename": "src/test/ui/lint/inline-trait-and-foreign-items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -23,7 +23,7 @@ impl Trait for () {\n     type T = Self;\n \n     #[inline] //~ ERROR attribute should be applied to function or closure\n-    type U = impl Trait; //~ ERROR could not find defining uses\n+    type U = impl Trait; //~ ERROR unconstrained opaque type\n }\n \n extern \"C\" {"}, {"sha": "fc7e89e4f4cce6dae3bf812d0c727aa7ef1c5746", "filename": "src/test/ui/lint/inline-trait-and-foreign-items.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -61,11 +61,13 @@ LL |     #[inline]\n LL |     type T;\n    |     ------- not a function or closure\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/inline-trait-and-foreign-items.rs:26:14\n    |\n LL |     type U = impl Trait;\n    |              ^^^^^^^^^^\n+   |\n+   = note: `U` must be used in combination with a concrete type within the same module\n \n error: aborting due to 6 previous errors; 2 warnings emitted\n "}, {"sha": "26ce9b93105e6fc3ed4c3c8f2c6e576b4bae96aa", "filename": "src/test/ui/never_type/impl_trait_fallback3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fnever_type%2Fimpl_trait_fallback3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fnever_type%2Fimpl_trait_fallback3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fimpl_trait_fallback3.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -7,7 +7,7 @@ trait T {\n }\n \n type Foo = impl T;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n \n fn a() -> Foo {\n     // This is not a defining use, it doesn't actually constrain the opaque type."}, {"sha": "121019d5f69aefe3739137e5f63c63b78a6a8030", "filename": "src/test/ui/never_type/impl_trait_fallback3.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fnever_type%2Fimpl_trait_fallback3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fnever_type%2Fimpl_trait_fallback3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fimpl_trait_fallback3.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,8 +1,10 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/impl_trait_fallback3.rs:9:12\n    |\n LL | type Foo = impl T;\n    |            ^^^^^^\n+   |\n+   = note: `Foo` must be used in combination with a concrete type within the same module\n \n error: aborting due to previous error\n "}, {"sha": "30479580f11a3c0122291b0020d1738bf15406f4", "filename": "src/test/ui/save-analysis/issue-68621.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-68621.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-68621.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-68621.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -11,7 +11,7 @@ trait Service {\n struct Struct;\n \n impl Service for Struct {\n-    type Future = impl Trait; //~ ERROR: could not find defining uses\n+    type Future = impl Trait; //~ ERROR: unconstrained opaque type\n }\n \n fn main() {}"}, {"sha": "4a4bf9a6996bc489aade43388ffe581b7185de76", "filename": "src/test/ui/save-analysis/issue-68621.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-68621.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-68621.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-68621.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,8 +1,10 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/issue-68621.rs:14:19\n    |\n LL |     type Future = impl Trait;\n    |                   ^^^^^^^^^^\n+   |\n+   = note: `Future` must be used in combination with a concrete type within the same module\n \n error: aborting due to previous error\n "}, {"sha": "f3d12d02ccd3a57c4a273d901da7848eebf3f1a1", "filename": "src/test/ui/type-alias-impl-trait/bound_reduction2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -7,7 +7,7 @@ trait TraitWithAssoc {\n }\n \n type Foo<V> = impl Trait<V>;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n \n trait Trait<U> {}\n "}, {"sha": "f309fa53b1a31013b6653c883bd16f6c4da77149", "filename": "src/test/ui/type-alias-impl-trait/bound_reduction2.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -10,11 +10,13 @@ note: used non-generic type `<T as TraitWithAssoc>::Assoc` for generic parameter\n LL | type Foo<V> = impl Trait<V>;\n    |          ^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/bound_reduction2.rs:9:15\n    |\n LL | type Foo<V> = impl Trait<V>;\n    |               ^^^^^^^^^^^^^\n+   |\n+   = note: `Foo` must be used in combination with a concrete type within the same module\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ce6ed8080092cf4c198a841c67f71292696f7825", "filename": "src/test/ui/type-alias-impl-trait/bounds-are-checked.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -4,7 +4,7 @@\n #![feature(type_alias_impl_trait)]\n \n type X<'a> = impl Into<&'static str> + From<&'a str>;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n \n fn f<'a: 'static>(t: &'a str) -> X<'a> {\n     //~^ WARNING unnecessary lifetime parameter"}, {"sha": "34141c9c8a64ef89f3126821cb5a3490562bd991", "filename": "src/test/ui/type-alias-impl-trait/bounds-are-checked.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -15,11 +15,13 @@ LL | type X<'a> = impl Into<&'static str> + From<&'a str>;\n LL |     t\n    |     ^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/bounds-are-checked.rs:6:14\n    |\n LL | type X<'a> = impl Into<&'static str> + From<&'a str>;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `X` must be used in combination with a concrete type within the same module\n \n error: aborting due to 2 previous errors; 1 warning emitted\n "}, {"sha": "6febd07157aa60fdbdcda2d5f8698e4ba7f78b00", "filename": "src/test/ui/type-alias-impl-trait/declared_but_never_defined.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_never_defined.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_never_defined.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_never_defined.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -3,4 +3,4 @@\n fn main() {}\n \n // declared but never defined\n-type Bar = impl std::fmt::Debug; //~ ERROR could not find defining uses\n+type Bar = impl std::fmt::Debug; //~ ERROR unconstrained opaque type"}, {"sha": "60bc24320a301c25bf90ce300ee2a1813351d4b4", "filename": "src/test/ui/type-alias-impl-trait/declared_but_never_defined.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_never_defined.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_never_defined.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_never_defined.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,8 +1,10 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/declared_but_never_defined.rs:6:12\n    |\n LL | type Bar = impl std::fmt::Debug;\n    |            ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `Bar` must be used in combination with a concrete type within the same module\n \n error: aborting due to previous error\n "}, {"sha": "5bda5f0fceaaa6dba9dd7e78fa2e554ee3d2ebb2", "filename": "src/test/ui/type-alias-impl-trait/declared_but_not_defined_in_scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_not_defined_in_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_not_defined_in_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_not_defined_in_scope.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -4,7 +4,7 @@ fn main() {}\n \n mod boo {\n     // declared in module but not defined inside of it\n-    pub type Boo = impl ::std::fmt::Debug; //~ ERROR could not find defining uses\n+    pub type Boo = impl ::std::fmt::Debug; //~ ERROR unconstrained opaque type\n }\n \n fn bomp() -> boo::Boo {"}, {"sha": "d61561d3ea937cc40669a317c36c05ce80e78770", "filename": "src/test/ui/type-alias-impl-trait/declared_but_not_defined_in_scope.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_not_defined_in_scope.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_not_defined_in_scope.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fdeclared_but_not_defined_in_scope.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,8 +1,10 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/declared_but_not_defined_in_scope.rs:7:20\n    |\n LL |     pub type Boo = impl ::std::fmt::Debug;\n    |                    ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `Boo` must be used in combination with a concrete type within the same module\n \n error[E0308]: mismatched types\n   --> $DIR/declared_but_not_defined_in_scope.rs:11:5"}, {"sha": "efb681e7e88e338e1b7024f2df61f9eaad449690", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_lifetime_param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_lifetime_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_lifetime_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_lifetime_param.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -3,7 +3,7 @@\n fn main() {}\n \n type Two<'a, 'b> = impl std::fmt::Debug;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n \n fn one<'a>(t: &'a ()) -> Two<'a, 'a> {\n     t"}, {"sha": "f68ab3de2ba22483b41c7bcdde0b88945ea9da70", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_lifetime_param.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_lifetime_param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_lifetime_param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_lifetime_param.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -10,11 +10,13 @@ note: lifetime used multiple times\n LL | type Two<'a, 'b> = impl std::fmt::Debug;\n    |          ^^  ^^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/generic_duplicate_lifetime_param.rs:5:20\n    |\n LL | type Two<'a, 'b> = impl std::fmt::Debug;\n    |                    ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `Two` must be used in combination with a concrete type within the same module\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e67ca695585ae6afd1ec5f13ed58e6cc7ca9602e", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -6,11 +6,11 @@ fn main() {}\n \n // test that unused generic parameters are ok\n type TwoTys<T, U> = impl Debug;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n type TwoLifetimes<'a, 'b> = impl Debug;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n type TwoConsts<const X: usize, const Y: usize> = impl Debug;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n \n fn one_ty<T: Debug>(t: T) -> TwoTys<T, T> {\n     t"}, {"sha": "fb0b4104330bcaadbbc2465a1e5ae91ded63c788", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -10,11 +10,13 @@ note: type used multiple times\n LL | type TwoTys<T, U> = impl Debug;\n    |             ^  ^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/generic_duplicate_param_use.rs:8:21\n    |\n LL | type TwoTys<T, U> = impl Debug;\n    |                     ^^^^^^^^^^\n+   |\n+   = note: `TwoTys` must be used in combination with a concrete type within the same module\n \n error: non-defining opaque type use in defining scope\n   --> $DIR/generic_duplicate_param_use.rs:21:5\n@@ -28,11 +30,13 @@ note: lifetime used multiple times\n LL | type TwoLifetimes<'a, 'b> = impl Debug;\n    |                   ^^  ^^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/generic_duplicate_param_use.rs:10:29\n    |\n LL | type TwoLifetimes<'a, 'b> = impl Debug;\n    |                             ^^^^^^^^^^\n+   |\n+   = note: `TwoLifetimes` must be used in combination with a concrete type within the same module\n \n error: non-defining opaque type use in defining scope\n   --> $DIR/generic_duplicate_param_use.rs:26:5\n@@ -46,11 +50,13 @@ note: constant used multiple times\n LL | type TwoConsts<const X: usize, const Y: usize> = impl Debug;\n    |                      ^               ^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/generic_duplicate_param_use.rs:12:50\n    |\n LL | type TwoConsts<const X: usize, const Y: usize> = impl Debug;\n    |                                                  ^^^^^^^^^^\n+   |\n+   = note: `TwoConsts` must be used in combination with a concrete type within the same module\n \n error: aborting due to 6 previous errors\n "}, {"sha": "dd7817a8f7d1f87ff21e8b67a3356d1d23b3edaa", "filename": "src/test/ui/type-alias-impl-trait/generic_nondefining_use.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -5,11 +5,11 @@ use std::fmt::Debug;\n fn main() {}\n \n type OneTy<T> = impl Debug;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n type OneLifetime<'a> = impl Debug;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n type OneConst<const X: usize> = impl Debug;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n \n // Not defining uses, because they doesn't define *all* possible generics.\n "}, {"sha": "6bc02c2989a54a7106d344e5f7862a3a8b2ef245", "filename": "src/test/ui/type-alias-impl-trait/generic_nondefining_use.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -10,11 +10,13 @@ note: used non-generic type `u32` for generic parameter\n LL | type OneTy<T> = impl Debug;\n    |            ^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/generic_nondefining_use.rs:7:17\n    |\n LL | type OneTy<T> = impl Debug;\n    |                 ^^^^^^^^^^\n+   |\n+   = note: `OneTy` must be used in combination with a concrete type within the same module\n \n error: non-defining opaque type use in defining scope\n   --> $DIR/generic_nondefining_use.rs:22:5\n@@ -25,11 +27,13 @@ LL | type OneLifetime<'a> = impl Debug;\n LL |     6u32\n    |     ^^^^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/generic_nondefining_use.rs:9:24\n    |\n LL | type OneLifetime<'a> = impl Debug;\n    |                        ^^^^^^^^^^\n+   |\n+   = note: `OneLifetime` must be used in combination with a concrete type within the same module\n \n error: non-defining opaque type use in defining scope\n   --> $DIR/generic_nondefining_use.rs:27:5\n@@ -43,11 +47,13 @@ note: used non-generic constant `123_usize` for generic parameter\n LL | type OneConst<const X: usize> = impl Debug;\n    |                     ^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/generic_nondefining_use.rs:11:33\n    |\n LL | type OneConst<const X: usize> = impl Debug;\n    |                                 ^^^^^^^^^^\n+   |\n+   = note: `OneConst` must be used in combination with a concrete type within the same module\n \n error: aborting due to 6 previous errors\n "}, {"sha": "fd254724fb5540b7b496f765729a3e922f26f51f", "filename": "src/test/ui/type-alias-impl-trait/issue-60564.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -6,7 +6,7 @@ trait IterBits {\n }\n \n type IterBitsIter<T, E, I> = impl std::iter::Iterator<Item = I>;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n \n impl<T: Copy, E> IterBits for T\n where"}, {"sha": "c5ac477187dd0f75fbb0f44c582ed4cb2b00409f", "filename": "src/test/ui/type-alias-impl-trait/issue-60564.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -10,11 +10,13 @@ note: used non-generic type `u8` for generic parameter\n LL | type IterBitsIter<T, E, I> = impl std::iter::Iterator<Item = I>;\n    |                         ^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/issue-60564.rs:8:30\n    |\n LL | type IterBitsIter<T, E, I> = impl std::iter::Iterator<Item = I>;\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `IterBitsIter` must be used in combination with a concrete type within the same module\n \n error: aborting due to 2 previous errors\n "}, {"sha": "7f25d320677ed416b146f34540ca5ed7bdb56ebd", "filename": "src/test/ui/type-alias-impl-trait/issue-68368-non-defining-use-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use-2.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -5,7 +5,7 @@\n #![feature(type_alias_impl_trait)]\n trait Trait<T> {}\n type Alias<'a, U> = impl Trait<U>;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n fn f<'a>() -> Alias<'a, ()> {}\n //~^ ERROR non-defining opaque type use in defining scope\n "}, {"sha": "4afa903969f2616ea55eb34d3edde8742b652840", "filename": "src/test/ui/type-alias-impl-trait/issue-68368-non-defining-use-2.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use-2.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -10,11 +10,13 @@ note: used non-generic type `()` for generic parameter\n LL | type Alias<'a, U> = impl Trait<U>;\n    |                ^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/issue-68368-non-defining-use-2.rs:7:21\n    |\n LL | type Alias<'a, U> = impl Trait<U>;\n    |                     ^^^^^^^^^^^^^\n+   |\n+   = note: `Alias` must be used in combination with a concrete type within the same module\n \n error: aborting due to 2 previous errors\n "}, {"sha": "b2b8a68bd75255871422c41335d491fa9874e18e", "filename": "src/test/ui/type-alias-impl-trait/issue-68368-non-defining-use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -5,7 +5,7 @@\n #![feature(type_alias_impl_trait)]\n trait Trait<T> {}\n type Alias<'a, U> = impl Trait<U>;\n-//~^ ERROR could not find defining uses\n+//~^ ERROR unconstrained opaque type\n fn f<'a>() -> Alias<'a, ()> {}\n //~^ ERROR non-defining opaque type use in defining scope\n "}, {"sha": "94dc3b7c2b0475e92fcc98a1a705afb4337b2d70", "filename": "src/test/ui/type-alias-impl-trait/issue-68368-non-defining-use.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -10,11 +10,13 @@ note: used non-generic type `()` for generic parameter\n LL | type Alias<'a, U> = impl Trait<U>;\n    |                ^\n \n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/issue-68368-non-defining-use.rs:7:21\n    |\n LL | type Alias<'a, U> = impl Trait<U>;\n    |                     ^^^^^^^^^^^^^\n+   |\n+   = note: `Alias` must be used in combination with a concrete type within the same module\n \n error: aborting due to 2 previous errors\n "}, {"sha": "fbab5470b4f6d7b2f300803452c8cbf8e2bd5083", "filename": "src/test/ui/type-alias-impl-trait/nested-tait-inference3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnested-tait-inference3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnested-tait-inference3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnested-tait-inference3.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -4,7 +4,7 @@\n use std::fmt::Debug;\n \n type FooX = impl Debug;\n-//~^ could not find defining uses\n+//~^ unconstrained opaque type\n \n trait Foo<A> { }\n "}, {"sha": "b1d947a9ccf4ec62423b7119c21b4cd7ee1f120f", "filename": "src/test/ui/type-alias-impl-trait/nested-tait-inference3.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnested-tait-inference3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnested-tait-inference3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnested-tait-inference3.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,8 +1,10 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/nested-tait-inference3.rs:6:13\n    |\n LL | type FooX = impl Debug;\n    |             ^^^^^^^^^^\n+   |\n+   = note: `FooX` must be used in combination with a concrete type within the same module\n \n error: aborting due to previous error\n "}, {"sha": "fa578eced5f2b21bb31d9f06e1a2c4ae2f076bf8", "filename": "src/test/ui/type-alias-impl-trait/no_inferrable_concrete_type.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,9 +1,9 @@\n // Issue 52985: user code provides no use case that allows a type alias `impl Trait`\n-// We now emit a 'could not find defining uses' error\n+// We now emit a 'unconstrained opaque type' error\n \n #![feature(type_alias_impl_trait)]\n \n-type Foo = impl Copy; //~ could not find defining uses\n+type Foo = impl Copy; //~ unconstrained opaque type\n \n // make compiler happy about using 'Foo'\n fn bar(x: Foo) -> Foo {"}, {"sha": "009935347e66c6d1975e0fd4df822f82a41fcaea", "filename": "src/test/ui/type-alias-impl-trait/no_inferrable_concrete_type.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,8 +1,10 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/no_inferrable_concrete_type.rs:6:12\n    |\n LL | type Foo = impl Copy;\n    |            ^^^^^^^^^\n+   |\n+   = note: `Foo` must be used in combination with a concrete type within the same module\n \n error: aborting due to previous error\n "}, {"sha": "e5e7fb677ede91e66d1deb4f5eda564d42425d74", "filename": "src/test/ui/type-alias-impl-trait/type-alias-impl-trait-with-cycle-error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,7 +1,7 @@\n #![feature(type_alias_impl_trait)]\n \n type Foo = impl Fn() -> Foo;\n-//~^ ERROR: could not find defining uses\n+//~^ ERROR: unconstrained opaque type\n \n fn crash(x: Foo) -> Foo {\n     x"}, {"sha": "a770eeac39b7d5beaae0149e9c72d12a6126bd4b", "filename": "src/test/ui/type-alias-impl-trait/type-alias-impl-trait-with-cycle-error.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,8 +1,10 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/type-alias-impl-trait-with-cycle-error.rs:3:12\n    |\n LL | type Foo = impl Fn() -> Foo;\n    |            ^^^^^^^^^^^^^^^^\n+   |\n+   = note: `Foo` must be used in combination with a concrete type within the same module\n \n error: aborting due to previous error\n "}, {"sha": "7c7a1b405bcdcd5caedbfe50e676eb72f02115b9", "filename": "src/test/ui/type-alias-impl-trait/type-alias-impl-trait-with-cycle-error2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error2.rs?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -5,7 +5,7 @@ pub trait Bar<T> {\n }\n \n type Foo = impl Bar<Foo, Item = Foo>;\n-//~^ ERROR: could not find defining uses\n+//~^ ERROR: unconstrained opaque type\n \n fn crash(x: Foo) -> Foo {\n     x"}, {"sha": "3f3699ce5324aa984087c42f8fa103870ff25113", "filename": "src/test/ui/type-alias-impl-trait/type-alias-impl-trait-with-cycle-error2.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29c873243688ed06488cdbb2c693712dafe80156/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-with-cycle-error2.stderr?ref=29c873243688ed06488cdbb2c693712dafe80156", "patch": "@@ -1,8 +1,10 @@\n-error: could not find defining uses\n+error: unconstrained opaque type\n   --> $DIR/type-alias-impl-trait-with-cycle-error2.rs:7:12\n    |\n LL | type Foo = impl Bar<Foo, Item = Foo>;\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `Foo` must be used in combination with a concrete type within the same module\n \n error: aborting due to previous error\n "}]}