{"sha": "8d66f01ab50870c63f85c3c7395347e5b82caa88", "node_id": "C_kwDOAAsO6NoAKDhkNjZmMDFhYjUwODcwYzYzZjg1YzNjNzM5NTM0N2U1YjgyY2FhODg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-04T17:18:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-04T17:18:20Z"}, "message": "Rollup merge of #110982 - cjgillot:elided-self-const, r=petrochenkov\n\nDo not recurse into const generic args when resolving self lifetime elision.\n\nFixes https://github.com/rust-lang/rust/issues/110899\n\nr? `@petrochenkov`", "tree": {"sha": "c4cd4051d628f4100a5b8ba60bdee476e7f26e97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4cd4051d628f4100a5b8ba60bdee476e7f26e97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d66f01ab50870c63f85c3c7395347e5b82caa88", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkU+jcCRBK7hj4Ov3rIwAALdIIACdv5qiJSLRGBNKSKb2CTQlb\nTZIFV/NcDNxSCJwlZM4uxSx2VG+rjH6ho/6lczknN0gbb5cC2JdjHgzanxLub2A3\nOJpAIWhH8YJDihMsdi1lHwkN8Jx1Ouk2/0LLlj5mdjPtuvbtzkZvp6CoAdpFhfR2\nZnRZoT1f+WqZ5wh1rDy7aeo5/rK5GRA7t22iMoYAH9873dq8iNAzDvDSdrkw1bMj\nRJ7mgxd9dx46gKLl2JjjEVchDWaq6Oh3eCKIGqRJzXa1t0tivvEbzWGARgsDsH1b\nbFMje4HjH1D8iw67C8UZoSUk51DsgLseyM2bkVYWzTYexhhf5eprVJELOlAlCMY=\n=/keX\n-----END PGP SIGNATURE-----\n", "payload": "tree c4cd4051d628f4100a5b8ba60bdee476e7f26e97\nparent 0ac8ebdf11f7b288f3c62c12f97c57dd16f07808\nparent 8972a23f4827e784a9dc2f14435d2bc34197c74b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1683220700 +0200\ncommitter GitHub <noreply@github.com> 1683220700 +0200\n\nRollup merge of #110982 - cjgillot:elided-self-const, r=petrochenkov\n\nDo not recurse into const generic args when resolving self lifetime elision.\n\nFixes https://github.com/rust-lang/rust/issues/110899\n\nr? `@petrochenkov`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d66f01ab50870c63f85c3c7395347e5b82caa88", "html_url": "https://github.com/rust-lang/rust/commit/8d66f01ab50870c63f85c3c7395347e5b82caa88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d66f01ab50870c63f85c3c7395347e5b82caa88/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ac8ebdf11f7b288f3c62c12f97c57dd16f07808", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ac8ebdf11f7b288f3c62c12f97c57dd16f07808", "html_url": "https://github.com/rust-lang/rust/commit/0ac8ebdf11f7b288f3c62c12f97c57dd16f07808"}, {"sha": "8972a23f4827e784a9dc2f14435d2bc34197c74b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8972a23f4827e784a9dc2f14435d2bc34197c74b", "html_url": "https://github.com/rust-lang/rust/commit/8972a23f4827e784a9dc2f14435d2bc34197c74b"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "6f5d54bcf87e418a90e66764dce883bbf4e67c2a", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d66f01ab50870c63f85c3c7395347e5b82caa88/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d66f01ab50870c63f85c3c7395347e5b82caa88/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=8d66f01ab50870c63f85c3c7395347e5b82caa88", "patch": "@@ -2070,6 +2070,10 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n                 }\n                 visit::walk_ty(self, ty)\n             }\n+\n+            // A type may have an expression as a const generic argument.\n+            // We do not want to recurse into those.\n+            fn visit_expr(&mut self, _: &'a Expr) {}\n         }\n \n         let impl_self = self"}, {"sha": "4bcb645c60eef797823579238fdcd37ff319f05b", "filename": "tests/ui/self/elision/nested-item.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8d66f01ab50870c63f85c3c7395347e5b82caa88/tests%2Fui%2Fself%2Felision%2Fnested-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d66f01ab50870c63f85c3c7395347e5b82caa88/tests%2Fui%2Fself%2Felision%2Fnested-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fself%2Felision%2Fnested-item.rs?ref=8d66f01ab50870c63f85c3c7395347e5b82caa88", "patch": "@@ -0,0 +1,13 @@\n+// Regression test for #110899.\n+// When looking for the elided lifetime for `wrap`,\n+// we must not consider the lifetimes in `bar` as candidates.\n+\n+fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &() {\n+    //~^ ERROR `self` parameter is only allowed in associated functions\n+    //~| ERROR `self` parameter is only allowed in associated functions\n+    //~| ERROR missing lifetime specifier\n+    //~| ERROR cannot find type `Wrap` in this scope\n+    &()\n+}\n+\n+fn main() {}"}, {"sha": "752fd82332c380b25417b79a30af93cc0ec06967", "filename": "tests/ui/self/elision/nested-item.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/8d66f01ab50870c63f85c3c7395347e5b82caa88/tests%2Fui%2Fself%2Felision%2Fnested-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d66f01ab50870c63f85c3c7395347e5b82caa88/tests%2Fui%2Fself%2Felision%2Fnested-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fself%2Felision%2Fnested-item.stderr?ref=8d66f01ab50870c63f85c3c7395347e5b82caa88", "patch": "@@ -0,0 +1,38 @@\n+error: `self` parameter is only allowed in associated functions\n+  --> $DIR/nested-item.rs:5:9\n+   |\n+LL | fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &() {\n+   |         ^^^^ not semantically valid as function parameter\n+   |\n+   = note: associated functions are those in `impl` or `trait` definitions\n+\n+error: `self` parameter is only allowed in associated functions\n+  --> $DIR/nested-item.rs:5:29\n+   |\n+LL | fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &() {\n+   |                             ^^^^^ not semantically valid as function parameter\n+   |\n+   = note: associated functions are those in `impl` or `trait` definitions\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/nested-item.rs:5:46\n+   |\n+LL | fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &() {\n+   |                                              ^ expected named lifetime parameter\n+   |\n+   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\n+help: consider using the `'static` lifetime\n+   |\n+LL | fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &'static () {\n+   |                                               +++++++\n+\n+error[E0412]: cannot find type `Wrap` in this scope\n+  --> $DIR/nested-item.rs:5:15\n+   |\n+LL | fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &() {\n+   |               ^^^^ not found in this scope\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0106, E0412.\n+For more information about an error, try `rustc --explain E0106`."}]}