{"sha": "3ebcd78b4285cee14f6b479d33bc939a5cc0414b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYmNkNzhiNDI4NWNlZTE0ZjZiNDc5ZDMzYmM5MzlhNWNjMDQxNGI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-08T22:55:25Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-11T18:44:23Z"}, "message": "fmt, and fix rustfmt-induced rebase hickup", "tree": {"sha": "332f67868e400c9c114a8d43161c43044eea0581", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/332f67868e400c9c114a8d43161c43044eea0581"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ebcd78b4285cee14f6b479d33bc939a5cc0414b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ebcd78b4285cee14f6b479d33bc939a5cc0414b", "html_url": "https://github.com/rust-lang/rust/commit/3ebcd78b4285cee14f6b479d33bc939a5cc0414b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ebcd78b4285cee14f6b479d33bc939a5cc0414b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a95b010e6b46d113228b67ef237b42868e7be8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a95b010e6b46d113228b67ef237b42868e7be8d", "html_url": "https://github.com/rust-lang/rust/commit/9a95b010e6b46d113228b67ef237b42868e7be8d"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "2d1493febc4134b81f5c37740e62d8db45de1b6e", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3ebcd78b4285cee14f6b479d33bc939a5cc0414b/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ebcd78b4285cee14f6b479d33bc939a5cc0414b/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=3ebcd78b4285cee14f6b479d33bc939a5cc0414b", "patch": "@@ -324,8 +324,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     // this is a single iterator (that handles `spread_arg`), then\n                     // `pass_argument` would be the loop body. It takes care to\n                     // not advance `caller_iter` for ZSTs.\n-                    let mut locals_iter = body.args_iter();\n-                    while let Some(local) = locals_iter.next() {\n+                    for local in body.args_iter() {\n                         let dest = self.eval_place(&mir::Place::from(local))?;\n                         if Some(local) == body.spread_arg {\n                             // Must be a tuple\n@@ -340,9 +339,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     }\n                     // Now we should have no more caller args\n                     if caller_iter.next().is_some() {\n-                        throw_ub_format!(\n-                            \"calling a function with more arguments than it expected\"\n-                        )\n+                        throw_ub_format!(\"calling a function with more arguments than it expected\")\n                     }\n                     // Don't forget to check the return type!\n                     if let Some((caller_ret, _)) = ret {"}]}