{"sha": "88fc42bbc8f9589bdbcca9d86026e4673b54deee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZmM0MmJiYzhmOTU4OWJkYmNjYTlkODYwMjZlNDY3M2I1NGRlZWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-11T08:37:35Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-11T08:52:44Z"}, "message": "compiletest: no need to call rustc here", "tree": {"sha": "1d0d1cadc54da9dd135218ed78b2a26b504f8e0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d0d1cadc54da9dd135218ed78b2a26b504f8e0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88fc42bbc8f9589bdbcca9d86026e4673b54deee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88fc42bbc8f9589bdbcca9d86026e4673b54deee", "html_url": "https://github.com/rust-lang/rust/commit/88fc42bbc8f9589bdbcca9d86026e4673b54deee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88fc42bbc8f9589bdbcca9d86026e4673b54deee/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9decd31fe4ee675e13814e7c88f71f93f2a7cf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9decd31fe4ee675e13814e7c88f71f93f2a7cf7", "html_url": "https://github.com/rust-lang/rust/commit/c9decd31fe4ee675e13814e7c88f71f93f2a7cf7"}], "stats": {"total": 34, "additions": 8, "deletions": 26}, "files": [{"sha": "17125de9f55fb089700632c8aefcb71ef3e0b7a7", "filename": "tests/compiletest.rs", "status": "modified", "additions": 8, "deletions": 26, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/88fc42bbc8f9589bdbcca9d86026e4673b54deee/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88fc42bbc8f9589bdbcca9d86026e4673b54deee/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=88fc42bbc8f9589bdbcca9d86026e4673b54deee", "patch": "@@ -9,23 +9,11 @@ use colored::*;\n use compiletest_rs as compiletest;\n \n fn miri_path() -> PathBuf {\n-    if rustc_test_suite().is_some() {\n-        PathBuf::from(option_env!(\"MIRI_PATH\").unwrap())\n-    } else {\n-        PathBuf::from(env!(\"CARGO_BIN_EXE_miri\"))\n-    }\n-}\n-\n-fn rustc_test_suite() -> Option<PathBuf> {\n-    option_env!(\"RUSTC_TEST_SUITE\").map(PathBuf::from)\n-}\n-\n-fn rustc_lib_path() -> PathBuf {\n-    option_env!(\"RUSTC_LIB_PATH\").unwrap().into()\n+    PathBuf::from(option_env!(\"MIRI_PATH\").unwrap_or(env!(\"CARGO_BIN_EXE_miri\")))\n }\n \n fn run_tests(mode: &str, path: &str, target: &str) {\n-    let in_rustc_test_suite = rustc_test_suite().is_some();\n+    let in_rustc_test_suite = option_env!(\"RUSTC_STAGE\").is_some();\n     // Add some flags we always want.\n     let mut flags = Vec::new();\n     flags.push(\"--edition 2018\".to_owned());\n@@ -50,9 +38,9 @@ fn run_tests(mode: &str, path: &str, target: &str) {\n     let mut config = compiletest::Config::default().tempdir();\n     config.mode = mode.parse().expect(\"Invalid mode\");\n     config.rustc_path = miri_path();\n-    if in_rustc_test_suite {\n-        config.run_lib_path = rustc_lib_path();\n-        config.compile_lib_path = rustc_lib_path();\n+    if let Some(lib_path) = option_env!(\"RUSTC_LIB_PATH\") {\n+        config.run_lib_path = PathBuf::from(lib_path);\n+        config.compile_lib_path = PathBuf::from(lib_path);\n     }\n     config.filter = env::args().nth(1);\n     config.host = get_host();\n@@ -91,15 +79,9 @@ fn miri_pass(path: &str, target: &str) {\n }\n \n fn get_host() -> String {\n-    let rustc = rustc_test_suite().unwrap_or(PathBuf::from(\"rustc\"));\n-    let rustc_version = std::process::Command::new(rustc)\n-        .arg(\"-vV\")\n-        .output()\n-        .expect(\"rustc not found for -vV\")\n-        .stdout;\n-    let rustc_version = std::str::from_utf8(&rustc_version).expect(\"rustc -vV is not utf8\");\n-    let version_meta = rustc_version::version_meta_for(&rustc_version)\n-        .expect(\"failed to parse rustc version info\");\n+    let version_meta = rustc_version::VersionMeta::for_command(\n+        std::process::Command::new(miri_path())\n+    ).expect(\"failed to parse rustc version info\");\n     version_meta.host\n }\n "}]}