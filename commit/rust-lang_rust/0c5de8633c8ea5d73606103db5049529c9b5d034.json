{"sha": "0c5de8633c8ea5d73606103db5049529c9b5d034", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNWRlODYzM2M4ZWE1ZDczNjA2MTAzZGI1MDQ5NTI5YzliNWQwMzQ=", "commit": {"author": {"name": "Paul Faria", "email": "Nashenas88@gmail.com", "date": "2017-09-27T02:24:19Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2017-10-05T02:50:53Z"}, "message": "Store a new Region value every time we create a new region variable", "tree": {"sha": "16a4e0646d54d9e4c8198ff0c4df811dcb5a96d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16a4e0646d54d9e4c8198ff0c4df811dcb5a96d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c5de8633c8ea5d73606103db5049529c9b5d034", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c5de8633c8ea5d73606103db5049529c9b5d034", "html_url": "https://github.com/rust-lang/rust/commit/0c5de8633c8ea5d73606103db5049529c9b5d034", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c5de8633c8ea5d73606103db5049529c9b5d034/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7e73e4b1abe120520d1894b89c0e25469f41e69", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7e73e4b1abe120520d1894b89c0e25469f41e69", "html_url": "https://github.com/rust-lang/rust/commit/d7e73e4b1abe120520d1894b89c0e25469f41e69"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "0ed0321a948b63709d757c9d55c6e5e44a0ac830", "filename": "src/librustc_mir/transform/nll/mod.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0c5de8633c8ea5d73606103db5049529c9b5d034/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5de8633c8ea5d73606103db5049529c9b5d034/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs?ref=0c5de8633c8ea5d73606103db5049529c9b5d034", "patch": "@@ -15,12 +15,14 @@ use rustc::mir::{Mir, Location, Rvalue, BasicBlock, Statement, StatementKind};\n use rustc::mir::visit::{MutVisitor, Lookup};\n use rustc::mir::transform::{MirPass, MirSource};\n use rustc::infer::{self, InferCtxt};\n+use rustc::util::nodemap::FxHashSet;\n use syntax_pos::DUMMY_SP;\n use std::collections::HashMap;\n \n #[allow(dead_code)]\n struct NLLVisitor<'a, 'gcx: 'a + 'tcx, 'tcx: 'a> {\n     lookup_map: HashMap<RegionVid, Lookup>,\n+    regions: Vec<Region>,\n     infcx: InferCtxt<'a, 'gcx, 'tcx>,\n }\n \n@@ -29,15 +31,17 @@ impl<'a, 'gcx, 'tcx> NLLVisitor<'a, 'gcx, 'tcx> {\n         NLLVisitor {\n             infcx,\n             lookup_map: HashMap::new(),\n+            regions: vec![],\n         }\n     }\n \n     pub fn into_results(self) -> HashMap<RegionVid, Lookup> {\n         self.lookup_map\n     }\n \n-    fn renumber_regions<T>(&self, value: &T) -> T where T: TypeFoldable<'tcx> {\n+    fn renumber_regions<T>(&mut self, value: &T) -> T where T: TypeFoldable<'tcx> {\n         self.infcx.tcx.fold_regions(value, &mut false, |_region, _depth| {\n+            self.regions.push(Region::default());\n             self.infcx.next_region_var(infer::MiscVariable(DUMMY_SP))\n         })\n     }\n@@ -143,4 +147,9 @@ impl MirPass for NLL {\n             let _results = visitor.into_results();\n         })\n     }\n-}\n\\ No newline at end of file\n+}\n+\n+#[derive(Clone, Debug, Default, PartialEq, Eq)]\n+struct Region {\n+    points: FxHashSet<Location>,\n+}"}]}