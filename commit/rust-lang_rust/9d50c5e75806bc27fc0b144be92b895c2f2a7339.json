{"sha": "9d50c5e75806bc27fc0b144be92b895c2f2a7339", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNTBjNWU3NTgwNmJjMjdmYzBiMTQ0YmU5MmI4OTVjMmYyYTczMzk=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-19T19:00:44Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-20T12:55:26Z"}, "message": "Small corrections to docs", "tree": {"sha": "f443f239d9fcce724b57775b8bd88f1701c267bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f443f239d9fcce724b57775b8bd88f1701c267bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d50c5e75806bc27fc0b144be92b895c2f2a7339", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d50c5e75806bc27fc0b144be92b895c2f2a7339", "html_url": "https://github.com/rust-lang/rust/commit/9d50c5e75806bc27fc0b144be92b895c2f2a7339", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d50c5e75806bc27fc0b144be92b895c2f2a7339/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a8fa53a5d28fa3e849e26e907480dd28b8f2aa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a8fa53a5d28fa3e849e26e907480dd28b8f2aa3", "html_url": "https://github.com/rust-lang/rust/commit/8a8fa53a5d28fa3e849e26e907480dd28b8f2aa3"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "16091bb242cdd60191d9723549863a9a7cee9eda", "filename": "src/helpers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d50c5e75806bc27fc0b144be92b895c2f2a7339/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d50c5e75806bc27fc0b144be92b895c2f2a7339/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=9d50c5e75806bc27fc0b144be92b895c2f2a7339", "patch": "@@ -346,14 +346,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         Ok(())\n     }\n \n-    /// Sets the last error variable\n+    /// Sets the last error variable.\n     fn set_last_error(&mut self, scalar: Scalar<Tag>) -> InterpResult<'tcx> {\n         let this = self.eval_context_mut();\n         let errno_place = this.machine.last_error.unwrap();\n         this.write_scalar(scalar, errno_place.into())\n     }\n \n-    /// Gets the last error variable\n+    /// Gets the last error variable.\n     fn get_last_error(&mut self) -> InterpResult<'tcx, Scalar<Tag>> {\n         let this = self.eval_context_mut();\n         let errno_place = this.machine.last_error.unwrap();"}, {"sha": "50f0ecf590936d2497343a624a2e4e0091bdf412", "filename": "src/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d50c5e75806bc27fc0b144be92b895c2f2a7339/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d50c5e75806bc27fc0b144be92b895c2f2a7339/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=9d50c5e75806bc27fc0b144be92b895c2f2a7339", "patch": "@@ -91,7 +91,7 @@ pub struct Evaluator<'tcx> {\n     pub(crate) argv: Option<Pointer<Tag>>,\n     pub(crate) cmd_line: Option<Pointer<Tag>>,\n \n-    /// Last OS error location in memory. It is a 32 bit integer (unsigned for Windows)\n+    /// Last OS error location in memory. It is a 32-bit integer\n     pub(crate) last_error: Option<MPlaceTy<'tcx, Tag>>,\n \n     /// TLS state."}]}