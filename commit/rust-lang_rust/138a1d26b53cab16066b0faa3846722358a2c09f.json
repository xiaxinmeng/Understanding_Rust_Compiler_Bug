{"sha": "138a1d26b53cab16066b0faa3846722358a2c09f", "node_id": "C_kwDOAAsO6NoAKDEzOGExZDI2YjUzY2FiMTYwNjZiMGZhYTM4NDY3MjIzNThhMmMwOWY", "commit": {"author": {"name": "Fawaz", "email": "fawaz@tirmizi.dev", "date": "2023-01-09T08:17:58Z"}, "committer": {"name": "Fawaz", "email": "fawaz@tirmizi.dev", "date": "2023-01-13T06:35:38Z"}, "message": "riscv: Fix ELF header flags\n\nThe previous version added both `EF_RISCV_FLOAT_ABI_DOUBLE` and\n`EF_RISCV_RVC` if the \"D\" extension was enabled on riscv64 targets.\nriscv32 targets were not accounted for. This patch changes this\nso that:\n\n- Only add `EF_RISCV_RVC` if the \"C\" extension is enabled\n- Add `EF_RISCV_FLOAT_ABI_SINGLE` if the \"F\" extension is enabled\n  and the \"D\" extension is not\n- Add these ELF flags for riscv32 as well", "tree": {"sha": "41d01fc33a746888185a731481d75095da261a8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41d01fc33a746888185a731481d75095da261a8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/138a1d26b53cab16066b0faa3846722358a2c09f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/138a1d26b53cab16066b0faa3846722358a2c09f", "html_url": "https://github.com/rust-lang/rust/commit/138a1d26b53cab16066b0faa3846722358a2c09f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/138a1d26b53cab16066b0faa3846722358a2c09f/comments", "author": {"login": "FawazTirmizi", "id": 31876813, "node_id": "MDQ6VXNlcjMxODc2ODEz", "avatar_url": "https://avatars.githubusercontent.com/u/31876813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FawazTirmizi", "html_url": "https://github.com/FawazTirmizi", "followers_url": "https://api.github.com/users/FawazTirmizi/followers", "following_url": "https://api.github.com/users/FawazTirmizi/following{/other_user}", "gists_url": "https://api.github.com/users/FawazTirmizi/gists{/gist_id}", "starred_url": "https://api.github.com/users/FawazTirmizi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FawazTirmizi/subscriptions", "organizations_url": "https://api.github.com/users/FawazTirmizi/orgs", "repos_url": "https://api.github.com/users/FawazTirmizi/repos", "events_url": "https://api.github.com/users/FawazTirmizi/events{/privacy}", "received_events_url": "https://api.github.com/users/FawazTirmizi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FawazTirmizi", "id": 31876813, "node_id": "MDQ6VXNlcjMxODc2ODEz", "avatar_url": "https://avatars.githubusercontent.com/u/31876813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FawazTirmizi", "html_url": "https://github.com/FawazTirmizi", "followers_url": "https://api.github.com/users/FawazTirmizi/followers", "following_url": "https://api.github.com/users/FawazTirmizi/following{/other_user}", "gists_url": "https://api.github.com/users/FawazTirmizi/gists{/gist_id}", "starred_url": "https://api.github.com/users/FawazTirmizi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FawazTirmizi/subscriptions", "organizations_url": "https://api.github.com/users/FawazTirmizi/orgs", "repos_url": "https://api.github.com/users/FawazTirmizi/repos", "events_url": "https://api.github.com/users/FawazTirmizi/events{/privacy}", "received_events_url": "https://api.github.com/users/FawazTirmizi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a377893da2cd7124e5a18c7116cbb70e16dd5541", "url": "https://api.github.com/repos/rust-lang/rust/commits/a377893da2cd7124e5a18c7116cbb70e16dd5541", "html_url": "https://github.com/rust-lang/rust/commit/a377893da2cd7124e5a18c7116cbb70e16dd5541"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "5ad2744f61deedb63d57205724628e54e2267b0a", "filename": "compiler/rustc_codegen_ssa/src/back/metadata.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/138a1d26b53cab16066b0faa3846722358a2c09f/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138a1d26b53cab16066b0faa3846722358a2c09f/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs?ref=138a1d26b53cab16066b0faa3846722358a2c09f", "patch": "@@ -165,11 +165,23 @@ pub(crate) fn create_object_file(sess: &Session) -> Option<write::Object<'static\n                 };\n             e_flags\n         }\n-        Architecture::Riscv64 if sess.target.options.features.contains(\"+d\") => {\n-            // copied from `riscv64-linux-gnu-gcc foo.c -c`, note though\n-            // that the `+d` target feature represents whether the double\n-            // float abi is enabled.\n-            let e_flags = elf::EF_RISCV_RVC | elf::EF_RISCV_FLOAT_ABI_DOUBLE;\n+        Architecture::Riscv32 | Architecture::Riscv64 => {\n+            // Source: https://github.com/riscv-non-isa/riscv-elf-psabi-doc/blob/079772828bd10933d34121117a222b4cc0ee2200/riscv-elf.adoc\n+            let mut e_flags: u32 = 0x0;\n+            let features = &sess.target.options.features;\n+            // Check if compressed is enabled\n+            if features.contains(\"+c\") {\n+                e_flags |= elf::EF_RISCV_RVC;\n+            }\n+\n+            // Select the appropriate floating-point ABI\n+            if features.contains(\"+d\") {\n+                e_flags |= elf::EF_RISCV_FLOAT_ABI_DOUBLE;\n+            } else if features.contains(\"+f\") {\n+                e_flags |= elf::EF_RISCV_FLOAT_ABI_SINGLE;\n+            } else {\n+                e_flags |= elf::EF_RISCV_FLOAT_ABI_SOFT;\n+            }\n             e_flags\n         }\n         _ => 0,"}]}