{"sha": "68abb24e8d99f0fb7175c2102da3638814b6b2c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4YWJiMjRlOGQ5OWYwZmI3MTc1YzIxMDJkYTM2Mzg4MTRiNmIyYzc=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-11-08T02:40:00Z"}, "committer": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-11-12T13:42:40Z"}, "message": "Factor out NamedParseResult.", "tree": {"sha": "eccf320c233d407ba83d61a5efaa687fe215aea5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eccf320c233d407ba83d61a5efaa687fe215aea5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68abb24e8d99f0fb7175c2102da3638814b6b2c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68abb24e8d99f0fb7175c2102da3638814b6b2c7", "html_url": "https://github.com/rust-lang/rust/commit/68abb24e8d99f0fb7175c2102da3638814b6b2c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68abb24e8d99f0fb7175c2102da3638814b6b2c7/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eef10d0b5b9e0788442fc6c8ecce57ae7f5a4047", "url": "https://api.github.com/repos/rust-lang/rust/commits/eef10d0b5b9e0788442fc6c8ecce57ae7f5a4047", "html_url": "https://github.com/rust-lang/rust/commit/eef10d0b5b9e0788442fc6c8ecce57ae7f5a4047"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "29e1ea1d1edd78caaa83e515ce7dc4d3d81f8ada", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/68abb24e8d99f0fb7175c2102da3638814b6b2c7/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68abb24e8d99f0fb7175c2102da3638814b6b2c7/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=68abb24e8d99f0fb7175c2102da3638814b6b2c7", "patch": "@@ -143,6 +143,8 @@ pub struct MatcherPos {\n     sp_lo: BytePos,\n }\n \n+pub type NamedParseResult = ParseResult<HashMap<Ident, Rc<NamedMatch>>>;\n+\n pub fn count_names(ms: &[TokenTree]) -> usize {\n     ms.iter().fold(0, |count, elt| {\n         count + match *elt {\n@@ -200,8 +202,7 @@ pub enum NamedMatch {\n     MatchedNonterminal(Rc<Nonterminal>)\n }\n \n-fn nameize(ms: &[TokenTree], res: &[Rc<NamedMatch>])\n-            -> ParseResult<HashMap<Ident, Rc<NamedMatch>>> {\n+fn nameize(ms: &[TokenTree], res: &[Rc<NamedMatch>]) -> NamedParseResult {\n     fn n_rec(m: &TokenTree, res: &[Rc<NamedMatch>],\n              ret_val: &mut HashMap<Ident, Rc<NamedMatch>>, idx: &mut usize)\n              -> Result<(), (syntax_pos::Span, String)> {\n@@ -265,8 +266,6 @@ pub fn parse_failure_msg(tok: Token) -> String {\n     }\n }\n \n-pub type NamedParseResult = ParseResult<HashMap<Ident, Rc<NamedMatch>>>;\n-\n /// Perform a token equality check, ignoring syntax context (that is, an\n /// unhygienic comparison)\n pub fn token_name_eq(t1 : &Token, t2 : &Token) -> bool {"}]}