{"sha": "9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43", "node_id": "C_kwDOAAsO6NoAKDliOWM3ZDBlY2M5ZDkwMmIzZWQ1ZWFjMmYwNmY4NjY5ZmVkNTdmNDM", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-23T18:22:26Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-23T20:26:31Z"}, "message": "Depend on `Mutability` ordering", "tree": {"sha": "ebedd02fe1d3d8d7cd5ebfe66e59709e619d1102", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebedd02fe1d3d8d7cd5ebfe66e59709e619d1102"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43", "html_url": "https://github.com/rust-lang/rust/commit/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8195e12dd925e65f982519d84587a5673a712908", "url": "https://api.github.com/repos/rust-lang/rust/commits/8195e12dd925e65f982519d84587a5673a712908", "html_url": "https://github.com/rust-lang/rust/commit/8195e12dd925e65f982519d84587a5673a712908"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "70943eb7943cfd3e0cede9ad3741f2e5b9a2ebe7", "filename": "compiler/rustc_hir_analysis/src/coherence/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs?ref=9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43", "patch": "@@ -370,7 +370,7 @@ pub fn coerce_unsized_info<'tcx>(tcx: TyCtxt<'tcx>, impl_did: DefId) -> CoerceUn\n     let check_mutbl = |mt_a: ty::TypeAndMut<'tcx>,\n                        mt_b: ty::TypeAndMut<'tcx>,\n                        mk_ptr: &dyn Fn(Ty<'tcx>) -> Ty<'tcx>| {\n-        if (mt_a.mutbl, mt_b.mutbl) == (hir::Mutability::Not, hir::Mutability::Mut) {\n+        if mt_a.mutbl < mt_b.mutbl {\n             infcx\n                 .err_ctxt()\n                 .report_mismatched_types("}, {"sha": "1d55378b91bd331a7ae17577002077ce4c7eaa0e", "filename": "compiler/rustc_hir_typeck/src/_match.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43/compiler%2Frustc_hir_typeck%2Fsrc%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43/compiler%2Frustc_hir_typeck%2Fsrc%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2F_match.rs?ref=9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43", "patch": "@@ -572,8 +572,5 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n }\n \n fn arms_contain_ref_bindings<'tcx>(arms: &'tcx [hir::Arm<'tcx>]) -> Option<hir::Mutability> {\n-    arms.iter().filter_map(|a| a.pat.contains_explicit_ref_binding()).max_by_key(|m| match *m {\n-        hir::Mutability::Mut => 1,\n-        hir::Mutability::Not => 0,\n-    })\n+    arms.iter().filter_map(|a| a.pat.contains_explicit_ref_binding()).max()\n }"}, {"sha": "1cea8c9dadce3e32e9d51f478bb163871ecdef6f", "filename": "compiler/rustc_hir_typeck/src/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43/compiler%2Frustc_hir_typeck%2Fsrc%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43/compiler%2Frustc_hir_typeck%2Fsrc%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcast.rs?ref=9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43", "patch": "@@ -951,7 +951,7 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n         m_cast: ty::TypeAndMut<'tcx>,\n     ) -> Result<CastKind, CastError> {\n         // array-ptr-cast: allow mut-to-mut, mut-to-const, const-to-const\n-        if m_expr.mutbl == hir::Mutability::Mut || m_cast.mutbl == hir::Mutability::Not {\n+        if m_expr.mutbl >= m_cast.mutbl {\n             if let ty::Array(ety, _) = m_expr.ty.kind() {\n                 // Due to the limitations of LLVM global constants,\n                 // region pointers end up pointing at copies of"}, {"sha": "0dffde40eebc913793982500ee0db8f0ebd8c65b", "filename": "compiler/rustc_hir_typeck/src/coercion.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs?ref=9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43", "patch": "@@ -108,11 +108,7 @@ fn coerce_mutbls<'tcx>(\n     from_mutbl: hir::Mutability,\n     to_mutbl: hir::Mutability,\n ) -> RelateResult<'tcx, ()> {\n-    match (from_mutbl, to_mutbl) {\n-        (hir::Mutability::Mut, hir::Mutability::Mut | hir::Mutability::Not)\n-        | (hir::Mutability::Not, hir::Mutability::Not) => Ok(()),\n-        (hir::Mutability::Not, hir::Mutability::Mut) => Err(TypeError::Mutability),\n-    }\n+    if from_mutbl >= to_mutbl { Ok(()) } else { Err(TypeError::Mutability) }\n }\n \n /// Do not require any adjustments, i.e. coerce `x -> x`."}, {"sha": "914ff1ab3da5e9bab174f1ddd0ad605d8a12ae34", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=9b9c7d0ecc9d902b3ed5eac2f06f8669fed57f43", "patch": "@@ -1268,10 +1268,10 @@ declare_lint_pass!(MutableTransmutes => [MUTABLE_TRANSMUTES]);\n \n impl<'tcx> LateLintPass<'tcx> for MutableTransmutes {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &hir::Expr<'_>) {\n-        if let Some((&ty::Ref(_, _, from_mt), &ty::Ref(_, _, to_mt))) =\n+        if let Some((&ty::Ref(_, _, from_mutbl), &ty::Ref(_, _, to_mutbl))) =\n             get_transmute_from_to(cx, expr).map(|(ty1, ty2)| (ty1.kind(), ty2.kind()))\n         {\n-            if to_mt == hir::Mutability::Mut && from_mt == hir::Mutability::Not {\n+            if from_mutbl < to_mutbl {\n                 cx.struct_span_lint(\n                     MUTABLE_TRANSMUTES,\n                     expr.span,"}]}