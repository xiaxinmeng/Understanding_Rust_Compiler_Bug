{"sha": "ec3f6e1932db297d2a575e591d4c508d785a0a52", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjM2Y2ZTE5MzJkYjI5N2QyYTU3NWU1OTFkNGM1MDhkNzg1YTBhNTI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-25T04:08:16Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-25T04:10:14Z"}, "message": "implement Mutable trait for vec", "tree": {"sha": "b5576dfab3ef7c0fdbad5062ac1cbaeb24e8ef87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5576dfab3ef7c0fdbad5062ac1cbaeb24e8ef87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec3f6e1932db297d2a575e591d4c508d785a0a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3f6e1932db297d2a575e591d4c508d785a0a52", "html_url": "https://github.com/rust-lang/rust/commit/ec3f6e1932db297d2a575e591d4c508d785a0a52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec3f6e1932db297d2a575e591d4c508d785a0a52/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d95c9cbe3891837b7e608473876fcd97dc35a6c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d95c9cbe3891837b7e608473876fcd97dc35a6c9", "html_url": "https://github.com/rust-lang/rust/commit/d95c9cbe3891837b7e608473876fcd97dc35a6c9"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "f7a65ed1fe442ae7e7537df9db0af0d0c49c02fa", "filename": "src/libcore/core.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec3f6e1932db297d2a575e591d4c508d785a0a52/src%2Flibcore%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ec3f6e1932db297d2a575e591d4c508d785a0a52/src%2Flibcore%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rc?ref=ec3f6e1932db297d2a575e591d4c508d785a0a52", "patch": "@@ -190,7 +190,7 @@ pub use path::PosixPath;\n \n pub use tuple::{CopyableTuple, ImmutableTuple, ExtendedTupleOps};\n pub use str::{StrSlice, Trimmable};\n-pub use container::Container;\n+pub use container::{Container, Mutable};\n pub use vec::{CopyableVector, ImmutableVector};\n pub use vec::{ImmutableEqVector, ImmutableCopyableVector};\n pub use vec::{OwnedVector, OwnedCopyableVector};"}, {"sha": "72aa828ff12a7d460bd25d7bee9c58ada10d2673", "filename": "src/libcore/prelude.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec3f6e1932db297d2a575e591d4c508d785a0a52/src%2Flibcore%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec3f6e1932db297d2a575e591d4c508d785a0a52/src%2Flibcore%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprelude.rs?ref=ec3f6e1932db297d2a575e591d4c508d785a0a52", "patch": "@@ -29,7 +29,7 @@ pub use path::PosixPath;\n \n pub use tuple::{CopyableTuple, ImmutableTuple, ExtendedTupleOps};\n pub use str::{StrSlice, Trimmable};\n-pub use container::Container;\n+pub use container::{Container, Mutable};\n pub use vec::{CopyableVector, ImmutableVector};\n pub use vec::{ImmutableEqVector, ImmutableCopyableVector};\n pub use vec::{OwnedVector, OwnedCopyableVector};"}, {"sha": "7f6999e5163027260b8a05b8c1238558f9da69a7", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ec3f6e1932db297d2a575e591d4c508d785a0a52/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec3f6e1932db297d2a575e591d4c508d785a0a52/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=ec3f6e1932db297d2a575e591d4c508d785a0a52", "patch": "@@ -14,7 +14,7 @@\n #[forbid(deprecated_pattern)];\n #[warn(non_camel_case_types)];\n \n-use container::Container;\n+use container::{Container, Mutable};\n use cast::transmute;\n use cast;\n use cmp::{Eq, Ord};\n@@ -1941,6 +1941,11 @@ impl<T> ~[T]: OwnedVector<T> {\n     }\n }\n \n+impl<T> ~[T]: Mutable {\n+    /// Clear the vector, removing all values.\n+    fn clear(&mut self) { self.truncate(0) }\n+}\n+\n pub trait OwnedCopyableVector<T: Copy> {\n     fn push_all(&mut self, rhs: &[const T]);\n     fn grow(&mut self, n: uint, initval: &T);\n@@ -2692,6 +2697,14 @@ mod tests {\n         // If the unsafe block didn't drop things properly, we blow up here.\n     }\n \n+    #[test]\n+    fn test_clear() {\n+        let mut v = ~[@6,@5,@4];\n+        v.clear();\n+        assert(v.len() == 0);\n+        // If the unsafe block didn't drop things properly, we blow up here.\n+    }\n+\n     #[test]\n     fn test_dedup() {\n         fn case(a: ~[uint], b: ~[uint]) {"}]}