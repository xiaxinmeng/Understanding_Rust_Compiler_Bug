{"sha": "490475ee198f31b1e294bf91518430a93811074d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5MDQ3NWVlMTk4ZjMxYjFlMjk0YmY5MTUxODQzMGE5MzgxMTA3NGQ=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-12-15T08:46:02Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-12-15T08:46:02Z"}, "message": "generate default implementation for an enum from an enum variant #6860\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "0491b0030b259665fb46086436c34422eda4fc49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0491b0030b259665fb46086436c34422eda4fc49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/490475ee198f31b1e294bf91518430a93811074d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/490475ee198f31b1e294bf91518430a93811074d", "html_url": "https://github.com/rust-lang/rust/commit/490475ee198f31b1e294bf91518430a93811074d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/490475ee198f31b1e294bf91518430a93811074d/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08090d81b130d349524ec3c5523d62e15dbbf27a", "url": "https://api.github.com/repos/rust-lang/rust/commits/08090d81b130d349524ec3c5523d62e15dbbf27a", "html_url": "https://github.com/rust-lang/rust/commit/08090d81b130d349524ec3c5523d62e15dbbf27a"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "5f6885710c8bfa21d4eb72edd250c87069efa9a8", "filename": "crates/assists/src/handlers/generate_default_from_enum_variant.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/490475ee198f31b1e294bf91518430a93811074d/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_default_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/490475ee198f31b1e294bf91518430a93811074d/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_default_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_default_from_enum_variant.rs?ref=490475ee198f31b1e294bf91518430a93811074d", "patch": "@@ -106,15 +106,15 @@ mod tests {\n         check_assist(\n             generate_default_from_enum_variant,\n             r#\"enum Variant {\n-                Undefined,\n-                Minor<|>,\n-                Major,\n-            }\"#,\n+    Undefined,\n+    Minor<|>,\n+    Major,\n+}\"#,\n             r#\"enum Variant {\n-                Undefined,\n-                Minor,\n-                Major,\n-            }\n+    Undefined,\n+    Minor,\n+    Major,\n+}\n \n impl Default for Variant {\n     fn default() -> Self {\n@@ -129,16 +129,16 @@ impl Default for Variant {\n         mark::check!(test_gen_default_impl_already_exists);\n         check_not_applicable(\n             r#\"enum Variant {\n-                Undefined,\n-                Minor<|>,\n-                Major,\n-            }\n-\n-            impl Default for Variant {\n-                fn default() -> Self {\n-                    Self::Minor\n-                }\n-            }\"#,\n+    Undefined,\n+    Minor<|>,\n+    Major,\n+}\n+\n+impl Default for Variant {\n+    fn default() -> Self {\n+        Self::Minor\n+    }\n+}\"#,\n         );\n     }\n \n@@ -147,10 +147,10 @@ impl Default for Variant {\n         mark::check!(test_gen_default_on_non_unit_variant_not_implemented);\n         check_not_applicable(\n             r#\"enum Variant {\n-            Undefined,\n-            Minor(u32)<|>,\n-            Major,\n-        }\"#,\n+    Undefined,\n+    Minor(u32)<|>,\n+    Major,\n+}\"#,\n         );\n     }\n "}]}