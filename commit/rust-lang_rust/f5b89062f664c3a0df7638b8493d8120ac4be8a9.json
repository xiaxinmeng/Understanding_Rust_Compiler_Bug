{"sha": "f5b89062f664c3a0df7638b8493d8120ac4be8a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1Yjg5MDYyZjY2NGMzYTBkZjc2MzhiODQ5M2Q4MTIwYWM0YmU4YTk=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-10-08T19:36:50Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-10-14T17:25:30Z"}, "message": "Unused result warning: \"X which must\" \u21a6 \"X that must\"", "tree": {"sha": "4575a709ed30be44e2d81fa9cb8b836229ef5586", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4575a709ed30be44e2d81fa9cb8b836229ef5586"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5b89062f664c3a0df7638b8493d8120ac4be8a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5b89062f664c3a0df7638b8493d8120ac4be8a9", "html_url": "https://github.com/rust-lang/rust/commit/f5b89062f664c3a0df7638b8493d8120ac4be8a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5b89062f664c3a0df7638b8493d8120ac4be8a9/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68df4330378c9f22e9f8eae4a7a6764814b3e296", "url": "https://api.github.com/repos/rust-lang/rust/commits/68df4330378c9f22e9f8eae4a7a6764814b3e296", "html_url": "https://github.com/rust-lang/rust/commit/68df4330378c9f22e9f8eae4a7a6764814b3e296"}], "stats": {"total": 102, "additions": 51, "deletions": 51}, "files": [{"sha": "b01aed0915d08957f84105890bd1d9f6983ee820", "filename": "src/doc/rustc/src/lints/listing/warn-by-default.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md", "raw_url": "https://github.com/rust-lang/rust/raw/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md?ref=f5b89062f664c3a0df7638b8493d8120ac4be8a9", "patch": "@@ -279,7 +279,7 @@ warning: functions generic over types must be mangled\n 1 |   #[no_mangle]\n   |   ------------ help: remove this attribute\n 2 | / fn foo<T>(t: T) {\n-3 | |     \n+3 | |\n 4 | | }\n   | |_^\n   |\n@@ -513,7 +513,7 @@ This will produce:\n warning: borrow of packed field requires unsafe function or block (error E0133)\n   --> src/main.rs:11:13\n    |\n-11 |     let y = &x.data.0; \n+11 |     let y = &x.data.0;\n    |             ^^^^^^^^^\n    |\n    = note: #[warn(safe_packed_borrows)] on by default\n@@ -874,7 +874,7 @@ fn main() {\n This will produce:\n \n ```text\n-warning: unused `std::result::Result` which must be used\n+warning: unused `std::result::Result` that must be used\n  --> src/main.rs:6:5\n   |\n 6 |     returns_result();"}, {"sha": "c42fb7019c77108f2f79d262aade754e71bf33ae", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=f5b89062f664c3a0df7638b8493d8120ac4be8a9", "patch": "@@ -253,7 +253,7 @@\n //! using it. The compiler will warn us about this kind of behavior:\n //!\n //! ```text\n-//! warning: unused result which must be used: iterator adaptors are lazy and\n+//! warning: unused result that must be used: iterator adaptors are lazy and\n //! do nothing unless consumed\n //! ```\n //!"}, {"sha": "720f2ca7f676cd1d96a05073e2a837b578ed57a0", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=f5b89062f664c3a0df7638b8493d8120ac4be8a9", "patch": "@@ -143,7 +143,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n \n         if let Some(must_use_op) = must_use_op {\n             cx.span_lint(UNUSED_MUST_USE, expr.span,\n-                         &format!(\"unused {} which must be used\", must_use_op));\n+                         &format!(\"unused {} that must be used\", must_use_op));\n             op_warned = true;\n         }\n \n@@ -154,7 +154,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n         fn check_must_use(cx: &LateContext, def_id: DefId, sp: Span, describe_path: &str) -> bool {\n             for attr in cx.tcx.get_attrs(def_id).iter() {\n                 if attr.check_name(\"must_use\") {\n-                    let msg = format!(\"unused {}`{}` which must be used\",\n+                    let msg = format!(\"unused {}`{}` that must be used\",\n                                           describe_path, cx.tcx.item_path_str(def_id));\n                     let mut err = cx.struct_span_lint(UNUSED_MUST_USE, sp, &msg);\n                     // check for #[must_use = \"...\"]"}, {"sha": "68307a9c456b7b3eadf449e6492a53e5ab8eb1e0", "filename": "src/test/ui/conditional-compilation/cfg-attr-multi-true.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.rs?ref=f5b89062f664c3a0df7638b8493d8120ac4be8a9", "patch": "@@ -18,5 +18,5 @@ impl MustUseDeprecated { //~ warning: use of deprecated item\n \n fn main() {\n     MustUseDeprecated::new(); //~ warning: use of deprecated item\n-    //| warning: unused `MustUseDeprecated` which must be used\n+    //| warning: unused `MustUseDeprecated` that must be used\n }"}, {"sha": "8b62587c6f8932c80f810f3894a04efdc336800a", "filename": "src/test/ui/conditional-compilation/cfg-attr-multi-true.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.stderr?ref=f5b89062f664c3a0df7638b8493d8120ac4be8a9", "patch": "@@ -24,7 +24,7 @@ warning: use of deprecated item 'MustUseDeprecated'\n LL |         MustUseDeprecated {} //~ warning: use of deprecated item\n    |         ^^^^^^^^^^^^^^^^^\n \n-warning: unused `MustUseDeprecated` which must be used\n+warning: unused `MustUseDeprecated` that must be used\n   --> $DIR/cfg-attr-multi-true.rs:20:5\n    |\n LL |     MustUseDeprecated::new(); //~ warning: use of deprecated item"}, {"sha": "57e80982d745680e5107d6506cfe77cfe9f75b56", "filename": "src/test/ui/fn_must_use.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Ffn_must_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Ffn_must_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn_must_use.stderr?ref=f5b89062f664c3a0df7638b8493d8120ac4be8a9", "patch": "@@ -1,4 +1,4 @@\n-warning: unused return value of `need_to_use_this_value` which must be used\n+warning: unused return value of `need_to_use_this_value` that must be used\n   --> $DIR/fn_must_use.rs:65:5\n    |\n LL |     need_to_use_this_value(); //~ WARN unused return value\n@@ -11,45 +11,45 @@ LL | #![warn(unused_must_use)]\n    |         ^^^^^^^^^^^^^^^\n    = note: it's important\n \n-warning: unused return value of `MyStruct::need_to_use_this_method_value` which must be used\n+warning: unused return value of `MyStruct::need_to_use_this_method_value` that must be used\n   --> $DIR/fn_must_use.rs:70:5\n    |\n LL |     m.need_to_use_this_method_value(); //~ WARN unused return value\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused return value of `EvenNature::is_even` which must be used\n+warning: unused return value of `EvenNature::is_even` that must be used\n   --> $DIR/fn_must_use.rs:71:5\n    |\n LL |     m.is_even(); // trait method!\n    |     ^^^^^^^^^^^^\n    |\n    = note: no side effects\n \n-warning: unused return value of `MyStruct::need_to_use_this_associated_function_value` which must be used\n+warning: unused return value of `MyStruct::need_to_use_this_associated_function_value` that must be used\n   --> $DIR/fn_must_use.rs:74:5\n    |\n LL |     MyStruct::need_to_use_this_associated_function_value();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused return value of `std::cmp::PartialEq::eq` which must be used\n+warning: unused return value of `std::cmp::PartialEq::eq` that must be used\n   --> $DIR/fn_must_use.rs:80:5\n    |\n LL |     2.eq(&3); //~ WARN unused return value\n    |     ^^^^^^^^^\n \n-warning: unused return value of `std::cmp::PartialEq::eq` which must be used\n+warning: unused return value of `std::cmp::PartialEq::eq` that must be used\n   --> $DIR/fn_must_use.rs:81:5\n    |\n LL |     m.eq(&n); //~ WARN unused return value\n    |     ^^^^^^^^^\n \n-warning: unused comparison which must be used\n+warning: unused comparison that must be used\n   --> $DIR/fn_must_use.rs:84:5\n    |\n LL |     2 == 3; //~ WARN unused comparison\n    |     ^^^^^^\n \n-warning: unused comparison which must be used\n+warning: unused comparison that must be used\n   --> $DIR/fn_must_use.rs:85:5\n    |\n LL |     m == n; //~ WARN unused comparison"}, {"sha": "0f8bd97525187bef8c05fa7f107202cabbfc601d", "filename": "src/test/ui/lint/must-use-ops.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Flint%2Fmust-use-ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Flint%2Fmust-use-ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust-use-ops.stderr?ref=f5b89062f664c3a0df7638b8493d8120ac4be8a9", "patch": "@@ -1,4 +1,4 @@\n-warning: unused comparison which must be used\n+warning: unused comparison that must be used\n   --> $DIR/must-use-ops.rs:22:5\n    |\n LL |     val == 1;\n@@ -10,121 +10,121 @@ note: lint level defined here\n LL | #![warn(unused_must_use)]\n    |         ^^^^^^^^^^^^^^^\n \n-warning: unused comparison which must be used\n+warning: unused comparison that must be used\n   --> $DIR/must-use-ops.rs:23:5\n    |\n LL |     val < 1;\n    |     ^^^^^^^\n \n-warning: unused comparison which must be used\n+warning: unused comparison that must be used\n   --> $DIR/must-use-ops.rs:24:5\n    |\n LL |     val <= 1;\n    |     ^^^^^^^^\n \n-warning: unused comparison which must be used\n+warning: unused comparison that must be used\n   --> $DIR/must-use-ops.rs:25:5\n    |\n LL |     val != 1;\n    |     ^^^^^^^^\n \n-warning: unused comparison which must be used\n+warning: unused comparison that must be used\n   --> $DIR/must-use-ops.rs:26:5\n    |\n LL |     val >= 1;\n    |     ^^^^^^^^\n \n-warning: unused comparison which must be used\n+warning: unused comparison that must be used\n   --> $DIR/must-use-ops.rs:27:5\n    |\n LL |     val > 1;\n    |     ^^^^^^^\n \n-warning: unused arithmetic operation which must be used\n+warning: unused arithmetic operation that must be used\n   --> $DIR/must-use-ops.rs:30:5\n    |\n LL |     val + 2;\n    |     ^^^^^^^\n \n-warning: unused arithmetic operation which must be used\n+warning: unused arithmetic operation that must be used\n   --> $DIR/must-use-ops.rs:31:5\n    |\n LL |     val - 2;\n    |     ^^^^^^^\n \n-warning: unused arithmetic operation which must be used\n+warning: unused arithmetic operation that must be used\n   --> $DIR/must-use-ops.rs:32:5\n    |\n LL |     val / 2;\n    |     ^^^^^^^\n \n-warning: unused arithmetic operation which must be used\n+warning: unused arithmetic operation that must be used\n   --> $DIR/must-use-ops.rs:33:5\n    |\n LL |     val * 2;\n    |     ^^^^^^^\n \n-warning: unused arithmetic operation which must be used\n+warning: unused arithmetic operation that must be used\n   --> $DIR/must-use-ops.rs:34:5\n    |\n LL |     val % 2;\n    |     ^^^^^^^\n \n-warning: unused logical operation which must be used\n+warning: unused logical operation that must be used\n   --> $DIR/must-use-ops.rs:37:5\n    |\n LL |     true && true;\n    |     ^^^^^^^^^^^^\n \n-warning: unused logical operation which must be used\n+warning: unused logical operation that must be used\n   --> $DIR/must-use-ops.rs:38:5\n    |\n LL |     false || true;\n    |     ^^^^^^^^^^^^^\n \n-warning: unused bitwise operation which must be used\n+warning: unused bitwise operation that must be used\n   --> $DIR/must-use-ops.rs:41:5\n    |\n LL |     5 ^ val;\n    |     ^^^^^^^\n \n-warning: unused bitwise operation which must be used\n+warning: unused bitwise operation that must be used\n   --> $DIR/must-use-ops.rs:42:5\n    |\n LL |     5 & val;\n    |     ^^^^^^^\n \n-warning: unused bitwise operation which must be used\n+warning: unused bitwise operation that must be used\n   --> $DIR/must-use-ops.rs:43:5\n    |\n LL |     5 | val;\n    |     ^^^^^^^\n \n-warning: unused bitwise operation which must be used\n+warning: unused bitwise operation that must be used\n   --> $DIR/must-use-ops.rs:44:5\n    |\n LL |     5 << val;\n    |     ^^^^^^^^\n \n-warning: unused bitwise operation which must be used\n+warning: unused bitwise operation that must be used\n   --> $DIR/must-use-ops.rs:45:5\n    |\n LL |     5 >> val;\n    |     ^^^^^^^^\n \n-warning: unused unary operation which must be used\n+warning: unused unary operation that must be used\n   --> $DIR/must-use-ops.rs:48:5\n    |\n LL |     !val;\n    |     ^^^^\n \n-warning: unused unary operation which must be used\n+warning: unused unary operation that must be used\n   --> $DIR/must-use-ops.rs:49:5\n    |\n LL |     -val;\n    |     ^^^^\n \n-warning: unused unary operation which must be used\n+warning: unused unary operation that must be used\n   --> $DIR/must-use-ops.rs:50:5\n    |\n LL |     *val_pointer;"}, {"sha": "ee61c2d1dbc52d14aefeecba4223bbd39e7a2c2d", "filename": "src/test/ui/lint/must_use-unit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.stderr?ref=f5b89062f664c3a0df7638b8493d8120ac4be8a9", "patch": "@@ -1,4 +1,4 @@\n-error: unused return value of `foo` which must be used\n+error: unused return value of `foo` that must be used\n   --> $DIR/must_use-unit.rs:14:5\n    |\n LL |     foo(); //~ unused return value of `foo`\n@@ -10,7 +10,7 @@ note: lint level defined here\n LL | #![deny(unused_must_use)]\n    |         ^^^^^^^^^^^^^^^\n \n-error: unused return value of `bar` which must be used\n+error: unused return value of `bar` that must be used\n   --> $DIR/must_use-unit.rs:16:5\n    |\n LL |     bar(); //~ unused return value of `bar`"}, {"sha": "69d226ef1d0ed23df879956e2b907adb47ebc6ec", "filename": "src/test/ui/unused/unused-result.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Funused%2Funused-result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Funused%2Funused-result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused%2Funused-result.rs?ref=f5b89062f664c3a0df7638b8493d8120ac4be8a9", "patch": "@@ -28,8 +28,8 @@ fn qux() -> MustUseMsg { return foo::<MustUseMsg>(); }\n #[allow(unused_results)]\n fn test() {\n     foo::<isize>();\n-    foo::<MustUse>(); //~ ERROR: unused `MustUse` which must be used\n-    foo::<MustUseMsg>(); //~ ERROR: unused `MustUseMsg` which must be used\n+    foo::<MustUse>(); //~ ERROR: unused `MustUse` that must be used\n+    foo::<MustUseMsg>(); //~ ERROR: unused `MustUseMsg` that must be used\n     //~^ NOTE: some message\n }\n \n@@ -42,8 +42,8 @@ fn test2() {\n \n fn main() {\n     foo::<isize>(); //~ ERROR: unused result\n-    foo::<MustUse>(); //~ ERROR: unused `MustUse` which must be used\n-    foo::<MustUseMsg>(); //~ ERROR: unused `MustUseMsg` which must be used\n+    foo::<MustUse>(); //~ ERROR: unused `MustUse` that must be used\n+    foo::<MustUseMsg>(); //~ ERROR: unused `MustUseMsg` that must be used\n     //~^ NOTE: some message\n \n     let _ = foo::<isize>();"}, {"sha": "156ec889387b08a14f93eba36c37c36f423de6e4", "filename": "src/test/ui/unused/unused-result.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Funused%2Funused-result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5b89062f664c3a0df7638b8493d8120ac4be8a9/src%2Ftest%2Fui%2Funused%2Funused-result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused%2Funused-result.stderr?ref=f5b89062f664c3a0df7638b8493d8120ac4be8a9", "patch": "@@ -1,7 +1,7 @@\n-error: unused `MustUse` which must be used\n+error: unused `MustUse` that must be used\n   --> $DIR/unused-result.rs:31:5\n    |\n-LL |     foo::<MustUse>(); //~ ERROR: unused `MustUse` which must be used\n+LL |     foo::<MustUse>(); //~ ERROR: unused `MustUse` that must be used\n    |     ^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n@@ -10,10 +10,10 @@ note: lint level defined here\n LL | #![deny(unused_results, unused_must_use)]\n    |                         ^^^^^^^^^^^^^^^\n \n-error: unused `MustUseMsg` which must be used\n+error: unused `MustUseMsg` that must be used\n   --> $DIR/unused-result.rs:32:5\n    |\n-LL |     foo::<MustUseMsg>(); //~ ERROR: unused `MustUseMsg` which must be used\n+LL |     foo::<MustUseMsg>(); //~ ERROR: unused `MustUseMsg` that must be used\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: some message\n@@ -30,16 +30,16 @@ note: lint level defined here\n LL | #![deny(unused_results, unused_must_use)]\n    |         ^^^^^^^^^^^^^^\n \n-error: unused `MustUse` which must be used\n+error: unused `MustUse` that must be used\n   --> $DIR/unused-result.rs:45:5\n    |\n-LL |     foo::<MustUse>(); //~ ERROR: unused `MustUse` which must be used\n+LL |     foo::<MustUse>(); //~ ERROR: unused `MustUse` that must be used\n    |     ^^^^^^^^^^^^^^^^^\n \n-error: unused `MustUseMsg` which must be used\n+error: unused `MustUseMsg` that must be used\n   --> $DIR/unused-result.rs:46:5\n    |\n-LL |     foo::<MustUseMsg>(); //~ ERROR: unused `MustUseMsg` which must be used\n+LL |     foo::<MustUseMsg>(); //~ ERROR: unused `MustUseMsg` that must be used\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: some message"}]}