{"sha": "44e6406f9a29e03280f4e16434c06e1d0abfaffc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZTY0MDZmOWEyOWUwMzI4MGY0ZTE2NDM0YzA2ZTFkMGFiZmFmZmM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-06-08T01:31:35Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-06-08T14:31:05Z"}, "message": "std: Handle ENOSYS when calling `pipe2`\n\nShould help fix an accidental regression from #39386.", "tree": {"sha": "f3e8ce08ebd80311db2dba53b4fcf3c1e30c0a7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3e8ce08ebd80311db2dba53b4fcf3c1e30c0a7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44e6406f9a29e03280f4e16434c06e1d0abfaffc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44e6406f9a29e03280f4e16434c06e1d0abfaffc", "html_url": "https://github.com/rust-lang/rust/commit/44e6406f9a29e03280f4e16434c06e1d0abfaffc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44e6406f9a29e03280f4e16434c06e1d0abfaffc/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03eb7109c722117322064390bc66578cde3f7b8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/03eb7109c722117322064390bc66578cde3f7b8e", "html_url": "https://github.com/rust-lang/rust/commit/03eb7109c722117322064390bc66578cde3f7b8e"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "ca5ef4bcfc5f4c3bb95e9a329fad2f0eb4eb9892", "filename": "src/libstd/sys/unix/pipe.rs", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/44e6406f9a29e03280f4e16434c06e1d0abfaffc/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44e6406f9a29e03280f4e16434c06e1d0abfaffc/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs?ref=44e6406f9a29e03280f4e16434c06e1d0abfaffc", "patch": "@@ -11,8 +11,9 @@\n use io;\n use libc::{self, c_int};\n use mem;\n-use sys::{cvt, cvt_r};\n+use sync::atomic::{AtomicBool, ATOMIC_BOOL_INIT, Ordering};\n use sys::fd::FileDesc;\n+use sys::{cvt, cvt_r};\n \n ////////////////////////////////////////////////////////////////////////////////\n // Anonymous pipes\n@@ -21,6 +22,9 @@ use sys::fd::FileDesc;\n pub struct AnonPipe(FileDesc);\n \n pub fn anon_pipe() -> io::Result<(AnonPipe, AnonPipe)> {\n+    weak! { fn pipe2(*mut c_int, c_int) -> c_int }\n+    static INVALID: AtomicBool = ATOMIC_BOOL_INIT;\n+\n     let mut fds = [0; 2];\n \n     // Unfortunately the only known way right now to create atomically set the\n@@ -31,13 +35,26 @@ pub fn anon_pipe() -> io::Result<(AnonPipe, AnonPipe)> {\n                 target_os = \"freebsd\",\n                 target_os = \"linux\",\n                 target_os = \"netbsd\",\n-                target_os = \"openbsd\"))\n+                target_os = \"openbsd\")) &&\n+       !INVALID.load(Ordering::SeqCst)\n     {\n-        weak! { fn pipe2(*mut c_int, c_int) -> c_int }\n+\n         if let Some(pipe) = pipe2.get() {\n-            cvt(unsafe { pipe(fds.as_mut_ptr(), libc::O_CLOEXEC) })?;\n-            return Ok((AnonPipe(FileDesc::new(fds[0])),\n-                       AnonPipe(FileDesc::new(fds[1]))));\n+            // Note that despite calling a glibc function here we may still\n+            // get ENOSYS. Glibc has `pipe2` since 2.9 and doesn't try to\n+            // emulate on older kernels, so if you happen to be running on\n+            // an older kernel you may see `pipe2` as a symbol but still not\n+            // see the syscall.\n+            match cvt(unsafe { pipe(fds.as_mut_ptr(), libc::O_CLOEXEC) }) {\n+                Ok(_) => {\n+                    return Ok((AnonPipe(FileDesc::new(fds[0])),\n+                               AnonPipe(FileDesc::new(fds[1]))));\n+                }\n+                Err(ref e) if e.raw_os_error() == Some(libc::ENOSYS) => {\n+                    INVALID.store(true, Ordering::SeqCst);\n+                }\n+                Err(e) => return Err(e),\n+            }\n         }\n     }\n     cvt(unsafe { libc::pipe(fds.as_mut_ptr()) })?;"}]}