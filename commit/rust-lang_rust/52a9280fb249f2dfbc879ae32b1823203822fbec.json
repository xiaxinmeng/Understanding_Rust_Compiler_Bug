{"sha": "52a9280fb249f2dfbc879ae32b1823203822fbec", "node_id": "C_kwDOAAsO6NoAKDUyYTkyODBmYjI0OWYyZGZiYzg3OWFlMzJiMTgyMzIwMzgyMmZiZWM", "commit": {"author": {"name": "Cassaundra Smith", "email": "cass@cassaundra.org", "date": "2022-12-02T03:17:03Z"}, "committer": {"name": "Cassaundra Smith", "email": "cass@cassaundra.org", "date": "2022-12-13T03:32:12Z"}, "message": "Refine when invalid prefix case error arises\n\nFix cases where the \"invalid base prefix for number literal\" error arises with\nsuffixes that look erroneously capitalized but which are in fact invalid.", "tree": {"sha": "e57ab41f31179a9616bb09d8999c88facca45903", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e57ab41f31179a9616bb09d8999c88facca45903"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52a9280fb249f2dfbc879ae32b1823203822fbec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEwVHIrt/ZuT7try0K6Ah7Dz1nTZsFAmOX8mQACgkQ6Ah7Dz1n\nTZtIsA//bf9NYRCCz44IRYQGr7girLShRIbSm1YUXtbBChLcXYa7m9ikrxwVuVmL\nuBk5Cma453Er72wWjphKAiv530AhELJsE9ImVt1olRo7N+fRpuK+VK2YxGnUOmmM\nCyp/Ofesy3RHucYoSb0gc316Lm6lMn+cH4dt0g4ZzkwNmhBNgii2i/tn48ywbtFG\n7aupq4W7fIM7hm6d/RTJFSmLqakQNCGz8G3k8wxBq2q9LZ2Vxfwgw88AkKmyddMy\nPP+5YRcgBgK31lC4KVnVnuUETXlQkZlC5QfUNdakQhu2EAp1Q3pRph7fOqlrZ54J\nNXOG6yKR6uKfpwgI/mi+Dgo/zG0hmlJ7ufapy5RDXO9aDYlv/3l+xRrvybCK2C6U\n/ngG4aBz3bqevvWHIm131zYu2/6fDQGCkYp6pWBpM3y/bcDFJjeV2NQwC2prbuL5\niAeaKmOvhV1IjsU0+6eyVT/jJ08SoAfpk+xoAvPMjl7h9iOGRGmOJsNWyPlvcSVv\nVrUIMAm1P/0s/85+RP7qyJc9wDKmWY5lpf4n19A1UoLNSzUVaTcZY+gR2YgOEnD0\n4RFIWlr0cN5aQIvAwxP8fgA8Blci8R8ezVyU9k8hMEzUvf50eG9JGlDc4w9pHq26\nsHZDO1Z+TE39YghjhgD9WSvPZ9EswrDTjTPul4XLDrzg0NTqjqc=\n=W+jR\n-----END PGP SIGNATURE-----", "payload": "tree e57ab41f31179a9616bb09d8999c88facca45903\nparent 2585bcea0bc2a9c42a4be2c1eba5c61137f2b167\nauthor Cassaundra Smith <cass@cassaundra.org> 1669951023 -0800\ncommitter Cassaundra Smith <cass@cassaundra.org> 1670902332 -0800\n\nRefine when invalid prefix case error arises\n\nFix cases where the \"invalid base prefix for number literal\" error arises with\nsuffixes that look erroneously capitalized but which are in fact invalid.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52a9280fb249f2dfbc879ae32b1823203822fbec", "html_url": "https://github.com/rust-lang/rust/commit/52a9280fb249f2dfbc879ae32b1823203822fbec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52a9280fb249f2dfbc879ae32b1823203822fbec/comments", "author": {"login": "cassaundra", "id": 21976313, "node_id": "MDQ6VXNlcjIxOTc2MzEz", "avatar_url": "https://avatars.githubusercontent.com/u/21976313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassaundra", "html_url": "https://github.com/cassaundra", "followers_url": "https://api.github.com/users/cassaundra/followers", "following_url": "https://api.github.com/users/cassaundra/following{/other_user}", "gists_url": "https://api.github.com/users/cassaundra/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassaundra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassaundra/subscriptions", "organizations_url": "https://api.github.com/users/cassaundra/orgs", "repos_url": "https://api.github.com/users/cassaundra/repos", "events_url": "https://api.github.com/users/cassaundra/events{/privacy}", "received_events_url": "https://api.github.com/users/cassaundra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cassaundra", "id": 21976313, "node_id": "MDQ6VXNlcjIxOTc2MzEz", "avatar_url": "https://avatars.githubusercontent.com/u/21976313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassaundra", "html_url": "https://github.com/cassaundra", "followers_url": "https://api.github.com/users/cassaundra/followers", "following_url": "https://api.github.com/users/cassaundra/following{/other_user}", "gists_url": "https://api.github.com/users/cassaundra/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassaundra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassaundra/subscriptions", "organizations_url": "https://api.github.com/users/cassaundra/orgs", "repos_url": "https://api.github.com/users/cassaundra/repos", "events_url": "https://api.github.com/users/cassaundra/events{/privacy}", "received_events_url": "https://api.github.com/users/cassaundra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2585bcea0bc2a9c42a4be2c1eba5c61137f2b167", "url": "https://api.github.com/repos/rust-lang/rust/commits/2585bcea0bc2a9c42a4be2c1eba5c61137f2b167", "html_url": "https://github.com/rust-lang/rust/commit/2585bcea0bc2a9c42a4be2c1eba5c61137f2b167"}], "stats": {"total": 117, "additions": 107, "deletions": 10}, "files": [{"sha": "268849ecd59d03822a4d5a972c599e64f760259b", "filename": "compiler/rustc_session/src/errors.rs", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/52a9280fb249f2dfbc879ae32b1823203822fbec/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a9280fb249f2dfbc879ae32b1823203822fbec/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ferrors.rs?ref=52a9280fb249f2dfbc879ae32b1823203822fbec", "patch": "@@ -291,20 +291,33 @@ pub fn report_lit_error(sess: &ParseSess, err: LitError, lit: token::Lit, span:\n         s.len() > 1 && s.starts_with(first_chars) && s[1..].chars().all(|c| c.is_ascii_digit())\n     }\n \n-    // Try to lowercase the prefix if it's a valid base prefix.\n-    fn fix_base_capitalisation(s: &str) -> Option<String> {\n-        if let Some(stripped) = s.strip_prefix('B') {\n-            Some(format!(\"0b{stripped}\"))\n-        } else if let Some(stripped) = s.strip_prefix('O') {\n-            Some(format!(\"0o{stripped}\"))\n-        } else if let Some(stripped) = s.strip_prefix('X') {\n-            Some(format!(\"0x{stripped}\"))\n+    // Try to lowercase the prefix if the prefix and suffix are valid.\n+    fn fix_base_capitalisation(prefix: &str, suffix: &str) -> Option<String> {\n+        let mut chars = suffix.chars();\n+\n+        let base_char = chars.next().unwrap();\n+        let base = match base_char {\n+            'B' => 2,\n+            'O' => 8,\n+            'X' => 16,\n+            _ => return None,\n+        };\n+\n+        // check that the suffix contains only base-appropriate characters\n+        let valid = prefix == \"0\"\n+            && chars\n+                .filter(|c| *c != '_')\n+                .take_while(|c| *c != 'i' && *c != 'u')\n+                .all(|c| c.to_digit(base).is_some());\n+\n+        if valid {\n+            Some(format!(\"0{}{}\", base_char.to_ascii_lowercase(), &suffix[1..]))\n         } else {\n             None\n         }\n     }\n \n-    let token::Lit { kind, suffix, .. } = lit;\n+    let token::Lit { kind, symbol, suffix, .. } = lit;\n     match err {\n         // `LexerError` is an error, but it was already reported\n         // by lexer, so here we don't report it the second time.\n@@ -324,7 +337,7 @@ pub fn report_lit_error(sess: &ParseSess, err: LitError, lit: token::Lit, span:\n             if looks_like_width_suffix(&['i', 'u'], &suf) {\n                 // If it looks like a width, try to be helpful.\n                 sess.emit_err(InvalidIntLiteralWidth { span, width: suf[1..].into() });\n-            } else if let Some(fixed) = fix_base_capitalisation(suf) {\n+            } else if let Some(fixed) = fix_base_capitalisation(symbol.as_str(), suf) {\n                 sess.emit_err(InvalidNumLiteralBasePrefix { span, fixed });\n             } else {\n                 sess.emit_err(InvalidNumLiteralSuffix { span, suffix: suf.to_string() });"}, {"sha": "f00cde4a74c02980fb69454ce12a175f68880fe8", "filename": "src/test/ui/numeric/uppercase-base-prefix-invalid-no-fix.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/52a9280fb249f2dfbc879ae32b1823203822fbec/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix-invalid-no-fix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a9280fb249f2dfbc879ae32b1823203822fbec/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix-invalid-no-fix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix-invalid-no-fix.rs?ref=52a9280fb249f2dfbc879ae32b1823203822fbec", "patch": "@@ -0,0 +1,34 @@\n+// Checks that integers with seeming uppercase base prefixes do not get bogus capitalization\n+// suggestions.\n+\n+fn main() {\n+    _ = 123X1a3;\n+    //~^ ERROR invalid suffix `X1a3` for number literal\n+    //~| NOTE invalid suffix `X1a3`\n+    //~| HELP the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+\n+    _ = 456O123;\n+    //~^ ERROR invalid suffix `O123` for number literal\n+    //~| NOTE invalid suffix `O123`\n+    //~| HELP the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+\n+    _ = 789B101;\n+    //~^ ERROR invalid suffix `B101` for number literal\n+    //~| NOTE invalid suffix `B101`\n+    //~| HELP the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+\n+    _ = 0XYZ;\n+    //~^ ERROR invalid suffix `XYZ` for number literal\n+    //~| NOTE invalid suffix `XYZ`\n+    //~| HELP the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+\n+    _ = 0OPQ;\n+    //~^ ERROR invalid suffix `OPQ` for number literal\n+    //~| NOTE invalid suffix `OPQ`\n+    //~| HELP the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+\n+    _ = 0BCD;\n+    //~^ ERROR invalid suffix `BCD` for number literal\n+    //~| NOTE invalid suffix `BCD`\n+    //~| HELP the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+}"}, {"sha": "380c16ca789f4ed395fac22de5f91f3eeb5b4973", "filename": "src/test/ui/numeric/uppercase-base-prefix-invalid-no-fix.stderr", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/52a9280fb249f2dfbc879ae32b1823203822fbec/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix-invalid-no-fix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52a9280fb249f2dfbc879ae32b1823203822fbec/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix-invalid-no-fix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix-invalid-no-fix.stderr?ref=52a9280fb249f2dfbc879ae32b1823203822fbec", "patch": "@@ -0,0 +1,50 @@\n+error: invalid suffix `X1a3` for number literal\n+  --> $DIR/uppercase-base-prefix-invalid-no-fix.rs:5:9\n+   |\n+LL |     _ = 123X1a3;\n+   |         ^^^^^^^ invalid suffix `X1a3`\n+   |\n+   = help: the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+\n+error: invalid suffix `O123` for number literal\n+  --> $DIR/uppercase-base-prefix-invalid-no-fix.rs:10:9\n+   |\n+LL |     _ = 456O123;\n+   |         ^^^^^^^ invalid suffix `O123`\n+   |\n+   = help: the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+\n+error: invalid suffix `B101` for number literal\n+  --> $DIR/uppercase-base-prefix-invalid-no-fix.rs:15:9\n+   |\n+LL |     _ = 789B101;\n+   |         ^^^^^^^ invalid suffix `B101`\n+   |\n+   = help: the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+\n+error: invalid suffix `XYZ` for number literal\n+  --> $DIR/uppercase-base-prefix-invalid-no-fix.rs:20:9\n+   |\n+LL |     _ = 0XYZ;\n+   |         ^^^^ invalid suffix `XYZ`\n+   |\n+   = help: the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+\n+error: invalid suffix `OPQ` for number literal\n+  --> $DIR/uppercase-base-prefix-invalid-no-fix.rs:25:9\n+   |\n+LL |     _ = 0OPQ;\n+   |         ^^^^ invalid suffix `OPQ`\n+   |\n+   = help: the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+\n+error: invalid suffix `BCD` for number literal\n+  --> $DIR/uppercase-base-prefix-invalid-no-fix.rs:30:9\n+   |\n+LL |     _ = 0BCD;\n+   |         ^^^^ invalid suffix `BCD`\n+   |\n+   = help: the suffix must be one of the numeric types (`u32`, `isize`, `f32`, etc.)\n+\n+error: aborting due to 6 previous errors\n+"}]}