{"sha": "99ebb816cf9db45953c123bec95c2c3e19ed2302", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZWJiODE2Y2Y5ZGI0NTk1M2MxMjNiZWM5NWMyYzNlMTllZDIzMDI=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-07-01T10:11:29Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-07-19T05:55:24Z"}, "message": "debuginfo: Added test cases for packed structs (/w drop)", "tree": {"sha": "a68d6ee0754cf3e38b725409f783bff857d0ec30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a68d6ee0754cf3e38b725409f783bff857d0ec30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99ebb816cf9db45953c123bec95c2c3e19ed2302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99ebb816cf9db45953c123bec95c2c3e19ed2302", "html_url": "https://github.com/rust-lang/rust/commit/99ebb816cf9db45953c123bec95c2c3e19ed2302", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99ebb816cf9db45953c123bec95c2c3e19ed2302/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6230ec14820c07755f533fff5664f91d3bc244b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6230ec14820c07755f533fff5664f91d3bc244b4", "html_url": "https://github.com/rust-lang/rust/commit/6230ec14820c07755f533fff5664f91d3bc244b4"}], "stats": {"total": 356, "additions": 356, "deletions": 0}, "files": [{"sha": "9ff91aa00d1c908a64bcda7ba6a161f9d63f6a5c", "filename": "src/test/debug-info/packed-struct-with-destructor.rs", "status": "added", "additions": 219, "deletions": 0, "changes": 219, "blob_url": "https://github.com/rust-lang/rust/blob/99ebb816cf9db45953c123bec95c2c3e19ed2302/src%2Ftest%2Fdebug-info%2Fpacked-struct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99ebb816cf9db45953c123bec95c2c3e19ed2302/src%2Ftest%2Fdebug-info%2Fpacked-struct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fpacked-struct-with-destructor.rs?ref=99ebb816cf9db45953c123bec95c2c3e19ed2302", "patch": "@@ -0,0 +1,219 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-win32 Broken because of LLVM bug: http://llvm.org/bugs/show_bug.cgi?id=16249\n+\n+// compile-flags:-Z extra-debug-info\n+// debugger:set print pretty off\n+// debugger:break zzz\n+// debugger:run\n+// debugger:finish\n+\n+// debugger:print packed\n+// check:$1 = {x = 123, y = 234, z = 345}\n+\n+// debugger:print packedInPacked\n+// check:$2 = {a = 1111, b = {x = 2222, y = 3333, z = 4444}, c = 5555, d = {x = 6666, y = 7777, z = 8888}}\n+\n+// debugger:print packedInUnpacked\n+// check:$3 = {a = -1111, b = {x = -2222, y = -3333, z = -4444}, c = -5555, d = {x = -6666, y = -7777, z = -8888}}\n+\n+// debugger:print unpackedInPacked\n+// check:$4 = {a = 987, b = {x = 876, y = 765, z = 654}, c = {x = 543, y = 432, z = 321}, d = 210}\n+\n+\n+// debugger:print packedInPackedWithDrop\n+// check:$5 = {a = 11, b = {x = 22, y = 33, z = 44}, c = 55, d = {x = 66, y = 77, z = 88}}\n+\n+// debugger:print packedInUnpackedWithDrop\n+// check:$6 = {a = -11, b = {x = -22, y = -33, z = -44}, c = -55, d = {x = -66, y = -77, z = -88}}\n+\n+// debugger:print unpackedInPackedWithDrop\n+// check:$7 = {a = 98, b = {x = 87, y = 76, z = 65}, c = {x = 54, y = 43, z = 32}, d = 21}\n+\n+// debugger:print deeplyNested\n+// check:$8 = {a = {a = 1, b = {x = 2, y = 3, z = 4}, c = 5, d = {x = 6, y = 7, z = 8}}, b = {a = 9, b = {x = 10, y = 11, z = 12}, c = {x = 13, y = 14, z = 15}, d = 16}, c = {a = 17, b = {x = 18, y = 19, z = 20}, c = 21, d = {x = 22, y = 23, z = 24}}, d = {a = 25, b = {x = 26, y = 27, z = 28}, c = 29, d = {x = 30, y = 31, z = 32}}, e = {a = 33, b = {x = 34, y = 35, z = 36}, c = {x = 37, y = 38, z = 39}, d = 40}, f = {a = 41, b = {x = 42, y = 43, z = 44}, c = 45, d = {x = 46, y = 47, z = 48}}}\n+\n+#[packed]\n+struct Packed {\n+    x: i16,\n+    y: i32,\n+    z: i64\n+}\n+\n+impl Drop for Packed {\n+    fn drop(&self) {}\n+}\n+\n+#[packed]\n+struct PackedInPacked {\n+    a: i32,\n+    b: Packed,\n+    c: i64,\n+    d: Packed\n+}\n+\n+struct PackedInUnpacked {\n+    a: i32,\n+    b: Packed,\n+    c: i64,\n+    d: Packed\n+}\n+\n+struct Unpacked {\n+    x: i64,\n+    y: i32,\n+    z: i16\n+}\n+\n+impl Drop for Unpacked {\n+    fn drop(&self) {}\n+}\n+\n+#[packed]\n+struct UnpackedInPacked {\n+    a: i16,\n+    b: Unpacked,\n+    c: Unpacked,\n+    d: i64\n+}\n+\n+#[packed]\n+struct PackedInPackedWithDrop {\n+    a: i32,\n+    b: Packed,\n+    c: i64,\n+    d: Packed\n+}\n+\n+impl Drop for PackedInPackedWithDrop {\n+    fn drop(&self) {}\n+}\n+\n+struct PackedInUnpackedWithDrop {\n+    a: i32,\n+    b: Packed,\n+    c: i64,\n+    d: Packed\n+}\n+\n+impl Drop for PackedInUnpackedWithDrop {\n+    fn drop(&self) {}\n+}\n+\n+#[packed]\n+struct UnpackedInPackedWithDrop {\n+    a: i16,\n+    b: Unpacked,\n+    c: Unpacked,\n+    d: i64\n+}\n+\n+impl Drop for UnpackedInPackedWithDrop {\n+    fn drop(&self) {}\n+}\n+\n+struct DeeplyNested {\n+    a: PackedInPacked,\n+    b: UnpackedInPackedWithDrop,\n+    c: PackedInUnpacked,\n+    d: PackedInUnpackedWithDrop,\n+    e: UnpackedInPacked,\n+    f: PackedInPackedWithDrop\n+}\n+\n+fn main() {\n+    let packed = Packed { x: 123, y: 234, z: 345 };\n+\n+    let packedInPacked = PackedInPacked {\n+        a: 1111,\n+        b: Packed { x: 2222, y: 3333, z: 4444 },\n+        c: 5555,\n+        d: Packed { x: 6666, y: 7777, z: 8888 }\n+    };\n+\n+    let packedInUnpacked = PackedInUnpacked {\n+        a: -1111,\n+        b: Packed { x: -2222, y: -3333, z: -4444 },\n+        c: -5555,\n+        d: Packed { x: -6666, y: -7777, z: -8888 }\n+    };\n+\n+    let unpackedInPacked = UnpackedInPacked {\n+        a: 987,\n+        b: Unpacked { x: 876, y: 765, z: 654 },\n+        c: Unpacked { x: 543, y: 432, z: 321 },\n+        d: 210\n+    };\n+\n+    let packedInPackedWithDrop = PackedInPackedWithDrop {\n+        a: 11,\n+        b: Packed { x: 22, y: 33, z: 44 },\n+        c: 55,\n+        d: Packed { x: 66, y: 77, z: 88 }\n+    };\n+\n+    let packedInUnpackedWithDrop = PackedInUnpackedWithDrop {\n+        a: -11,\n+        b: Packed { x: -22, y: -33, z: -44 },\n+        c: -55,\n+        d: Packed { x: -66, y: -77, z: -88 }\n+    };\n+\n+    let unpackedInPackedWithDrop = UnpackedInPackedWithDrop {\n+        a: 98,\n+        b: Unpacked { x: 87, y: 76, z: 65 },\n+        c: Unpacked { x: 54, y: 43, z: 32 },\n+        d: 21\n+    };\n+\n+    let deeplyNested = DeeplyNested {\n+        a: PackedInPacked {\n+            a: 1,\n+            b: Packed { x: 2, y: 3, z: 4 },\n+            c: 5,\n+            d: Packed { x: 6, y: 7, z: 8 }\n+        },\n+        b: UnpackedInPackedWithDrop {\n+            a: 9,\n+            b: Unpacked { x: 10, y: 11, z: 12 },\n+            c: Unpacked { x: 13, y: 14, z: 15 },\n+            d: 16\n+        },\n+        c: PackedInUnpacked {\n+            a: 17,\n+            b: Packed { x: 18, y: 19, z: 20 },\n+            c: 21,\n+            d: Packed { x: 22, y: 23, z: 24 }\n+        },\n+        d: PackedInUnpackedWithDrop {\n+            a: 25,\n+            b: Packed { x: 26, y: 27, z: 28 },\n+            c: 29,\n+            d: Packed { x: 30, y: 31, z: 32 }\n+        },\n+        e: UnpackedInPacked {\n+            a: 33,\n+            b: Unpacked { x: 34, y: 35, z: 36 },\n+            c: Unpacked { x: 37, y: 38, z: 39 },\n+            d: 40\n+        },\n+        f: PackedInPackedWithDrop {\n+            a: 41,\n+            b: Packed { x: 42, y: 43, z: 44 },\n+            c: 45,\n+            d: Packed { x: 46, y: 47, z: 48 }\n+        }\n+    };\n+\n+    zzz();\n+}\n+\n+fn zzz() {()}\n\\ No newline at end of file"}, {"sha": "11c09cfceb57bc6032303359bafc5ba8c8d5eebe", "filename": "src/test/debug-info/packed-struct.rs", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/99ebb816cf9db45953c123bec95c2c3e19ed2302/src%2Ftest%2Fdebug-info%2Fpacked-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99ebb816cf9db45953c123bec95c2c3e19ed2302/src%2Ftest%2Fdebug-info%2Fpacked-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fpacked-struct.rs?ref=99ebb816cf9db45953c123bec95c2c3e19ed2302", "patch": "@@ -0,0 +1,112 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-win32 Broken because of LLVM bug: http://llvm.org/bugs/show_bug.cgi?id=16249\n+\n+// compile-flags:-Z extra-debug-info\n+// debugger:set print pretty off\n+// debugger:break zzz\n+// debugger:run\n+// debugger:finish\n+\n+// debugger:print packed\n+// check:$1 = {x = 123, y = 234, z = 345}\n+\n+// debugger:print packedInPacked\n+// check:$2 = {a = 1111, b = {x = 2222, y = 3333, z = 4444}, c = 5555, d = {x = 6666, y = 7777, z = 8888}}\n+\n+// debugger:print packedInUnpacked\n+// check:$3 = {a = -1111, b = {x = -2222, y = -3333, z = -4444}, c = -5555, d = {x = -6666, y = -7777, z = -8888}}\n+\n+// debugger:print unpackedInPacked\n+// check:$4 = {a = 987, b = {x = 876, y = 765, z = 654, w = 543}, c = {x = 432, y = 321, z = 210, w = 109}, d = -98}\n+\n+// debugger:print sizeof(packed)\n+// check:$5 = 14\n+\n+// debugger:print sizeof(packedInPacked)\n+// check:$6 = 40\n+\n+// debugger:print sizeof(packedInUnpacked)\n+// check:$7 = 48\n+\n+// debugger:print sizeof(unpackedInPacked)\n+// check:$8 = 58\n+\n+\n+\n+#[packed]\n+struct Packed {\n+    x: i16,\n+    y: i32,\n+    z: i64\n+}\n+\n+#[packed]\n+struct PackedInPacked {\n+    a: i32,\n+    b: Packed,\n+    c: i64,\n+    d: Packed\n+}\n+\n+// layout: aaaa bbbb bbbb bbbb bb.. .... cccc cccc dddd dddd dddd dd..\n+struct PackedInUnpacked {\n+    a: i32,\n+    b: Packed,\n+    c: i64,\n+    d: Packed\n+}\n+\n+// layout: xx.. yyyy zz.. .... wwww wwww\n+struct Unpacked {\n+    x: i16,\n+    y: i32,\n+    z: i16,\n+    w: i64\n+}\n+\n+// layout: aabb bbbb bbbb bbbb bbbb bbbb bbcc cccc cccc cccc cccc cccc ccdd dddd dd\n+#[packed]\n+struct UnpackedInPacked {\n+    a: i16,\n+    b: Unpacked,\n+    c: Unpacked,\n+    d: i64\n+}\n+\n+fn main() {\n+    let packed = Packed { x: 123, y: 234, z: 345 };\n+\n+    let packedInPacked = PackedInPacked {\n+        a: 1111,\n+        b: Packed { x: 2222, y: 3333, z: 4444 },\n+        c: 5555,\n+        d: Packed { x: 6666, y: 7777, z: 8888 }\n+    };\n+\n+    let packedInUnpacked = PackedInUnpacked {\n+        a: -1111,\n+        b: Packed { x: -2222, y: -3333, z: -4444 },\n+        c: -5555,\n+        d: Packed { x: -6666, y: -7777, z: -8888 }\n+    };\n+\n+    let unpackedInPacked = UnpackedInPacked {\n+        a: 987,\n+        b: Unpacked { x: 876, y: 765, z: 654, w: 543 },\n+        c: Unpacked { x: 432, y: 321, z: 210, w: 109 },\n+        d: -98\n+    };\n+\n+    zzz();\n+}\n+\n+fn zzz() {()}\n\\ No newline at end of file"}, {"sha": "87e61ebe373f24d111a3bceb871b25a65ce335a8", "filename": "src/test/debug-info/struct-with-destructor.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/99ebb816cf9db45953c123bec95c2c3e19ed2302/src%2Ftest%2Fdebug-info%2Fstruct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99ebb816cf9db45953c123bec95c2c3e19ed2302/src%2Ftest%2Fdebug-info%2Fstruct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fstruct-with-destructor.rs?ref=99ebb816cf9db45953c123bec95c2c3e19ed2302", "patch": "@@ -21,6 +21,13 @@\n // debugger:print withDestructor\n // check:$3 = {a = {x = 10, y = 20}, guard = -1}\n \n+// debugger:print nested\n+// check:$4 = {a = {a = {x = 7890, y = 9870}}}\n+\n+// debugger:print sizeof(nested)\n+// check:$5 = 32\n+\n+\n struct NoDestructor {\n     x : i32,\n     y : i64\n@@ -45,6 +52,18 @@ struct WithDestructorGuarded {\n     guard: i64\n }\n \n+struct NestedInner {\n+    a: WithDestructor\n+}\n+\n+impl Drop for NestedInner {\n+    fn drop(&self) {}\n+}\n+\n+struct NestedOuter {\n+    a: NestedInner\n+}\n+\n \n // The compiler adds a 'destructed' boolean field to structs implementing Drop. This field is used\n // at runtime to prevent drop() to be executed more than once (see middle::trans::adt).\n@@ -80,6 +99,12 @@ fn main() {\n         guard: -1\n     };\n \n+    // expected layout = xxxx....yyyyyyyyD.......D...\n+    //                   <--WithDestructor------>\n+    //                   <-------NestedInner-------->\n+    //                   <-------NestedOuter-------->\n+    let nested = NestedOuter { a: NestedInner { a: WithDestructor { x: 7890, y: 9870 } } };\n+\n     zzz();\n }\n "}]}