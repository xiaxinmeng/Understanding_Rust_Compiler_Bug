{"sha": "ec39a76a3e8a96563845eca4eb77f3ba2a2090a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMzlhNzZhM2U4YTk2NTYzODQ1ZWNhNGViNzdmM2JhMmEyMDkwYTk=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-03-10T20:15:29Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-03-13T08:36:02Z"}, "message": "Call str::to_owned in String::from and uninline it\n\nString::from does not need to be inlined, it can be without it just like\nstr::to_owned and String::clone are.", "tree": {"sha": "10fc0d1b022ede0b316b7cbef7d1adf5730ccf40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10fc0d1b022ede0b316b7cbef7d1adf5730ccf40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec39a76a3e8a96563845eca4eb77f3ba2a2090a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec39a76a3e8a96563845eca4eb77f3ba2a2090a9", "html_url": "https://github.com/rust-lang/rust/commit/ec39a76a3e8a96563845eca4eb77f3ba2a2090a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec39a76a3e8a96563845eca4eb77f3ba2a2090a9/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e05371c13f851a5af57a96a5e13c99537787314", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e05371c13f851a5af57a96a5e13c99537787314", "html_url": "https://github.com/rust-lang/rust/commit/3e05371c13f851a5af57a96a5e13c99537787314"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "98225dd3ddaf34e6ea524aff2f79bd7190a7f033", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ec39a76a3e8a96563845eca4eb77f3ba2a2090a9/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec39a76a3e8a96563845eca4eb77f3ba2a2090a9/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=ec39a76a3e8a96563845eca4eb77f3ba2a2090a9", "patch": "@@ -66,7 +66,7 @@ use core::str::pattern::Pattern;\n use rustc_unicode::char::{decode_utf16, REPLACEMENT_CHARACTER};\n use rustc_unicode::str as unicode_str;\n \n-use borrow::Cow;\n+use borrow::{Cow, ToOwned};\n use range::RangeArgument;\n use str::{self, FromStr, Utf8Error, Chars};\n use vec::Vec;\n@@ -1797,20 +1797,8 @@ impl AsRef<[u8]> for String {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> From<&'a str> for String {\n-    #[cfg(not(test))]\n-    #[inline]\n     fn from(s: &'a str) -> String {\n-        String { vec: <[_]>::to_vec(s.as_bytes()) }\n-    }\n-\n-    // HACK(japaric): with cfg(test) the inherent `[T]::to_vec` method, which is\n-    // required for this method definition, is not available. Since we don't\n-    // require this method for testing purposes, I'll just stub it\n-    // NB see the slice::hack module in slice.rs for more information\n-    #[inline]\n-    #[cfg(test)]\n-    fn from(_: &str) -> String {\n-        panic!(\"not available with cfg(test)\");\n+        s.to_owned()\n     }\n }\n "}]}