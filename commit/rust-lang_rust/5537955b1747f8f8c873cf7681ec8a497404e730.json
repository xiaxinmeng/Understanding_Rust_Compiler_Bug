{"sha": "5537955b1747f8f8c873cf7681ec8a497404e730", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1Mzc5NTViMTc0N2Y4ZjhjODczY2Y3NjgxZWM4YTQ5NzQwNGU3MzA=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-12T20:21:58Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-14T13:29:38Z"}, "message": "Add doc example for `OsString::reserve_exact`.", "tree": {"sha": "d58a1797b68fd54e486cbd75fe11429fffd81511", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d58a1797b68fd54e486cbd75fe11429fffd81511"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5537955b1747f8f8c873cf7681ec8a497404e730", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5537955b1747f8f8c873cf7681ec8a497404e730", "html_url": "https://github.com/rust-lang/rust/commit/5537955b1747f8f8c873cf7681ec8a497404e730", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5537955b1747f8f8c873cf7681ec8a497404e730/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d57d92f071d24a4c189cc8aef897be25bcd9d55", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d57d92f071d24a4c189cc8aef897be25bcd9d55", "html_url": "https://github.com/rust-lang/rust/commit/4d57d92f071d24a4c189cc8aef897be25bcd9d55"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "d960d76146fe967e3f3b1bc5b62ef396adac005c", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5537955b1747f8f8c873cf7681ec8a497404e730/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5537955b1747f8f8c873cf7681ec8a497404e730/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=5537955b1747f8f8c873cf7681ec8a497404e730", "patch": "@@ -210,6 +210,16 @@ impl OsString {\n     /// Note that the allocator may give the collection more space than it\n     /// requests. Therefore capacity can not be relied upon to be precisely\n     /// minimal. Prefer reserve if future insertions are expected.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::ffi::OsString;\n+    ///\n+    /// let mut s = OsString::new();\n+    /// s.reserve_exact(10);\n+    /// assert!(s.capacity() >= 10);\n+    /// ```\n     #[stable(feature = \"osstring_simple_functions\", since = \"1.9.0\")]\n     pub fn reserve_exact(&mut self, additional: usize) {\n         self.inner.reserve_exact(additional)"}]}