{"sha": "7eda5b508f14a262ffd6aabee631b5e39ce45874", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZGE1YjUwOGYxNGEyNjJmZmQ2YWFiZWU2MzFiNWUzOWNlNDU4NzQ=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-10-08T12:19:37Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-10-08T12:43:45Z"}, "message": "Added tests illustrating when and when not to use the UGEH attribute w.r.t. a lifetime param.", "tree": {"sha": "d1954080e893d6a662cb742d60e683c2bef4240d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1954080e893d6a662cb742d60e683c2bef4240d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7eda5b508f14a262ffd6aabee631b5e39ce45874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7eda5b508f14a262ffd6aabee631b5e39ce45874", "html_url": "https://github.com/rust-lang/rust/commit/7eda5b508f14a262ffd6aabee631b5e39ce45874", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7eda5b508f14a262ffd6aabee631b5e39ce45874/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2e261f376b4d9dad7e9dd891da4865afd613303", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2e261f376b4d9dad7e9dd891da4865afd613303", "html_url": "https://github.com/rust-lang/rust/commit/e2e261f376b4d9dad7e9dd891da4865afd613303"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "92028c7a818c206742cac8837509603e2df5f220", "filename": "src/test/compile-fail/issue28498-reject-lifetime-param.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7eda5b508f14a262ffd6aabee631b5e39ce45874/src%2Ftest%2Fcompile-fail%2Fissue28498-reject-lifetime-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7eda5b508f14a262ffd6aabee631b5e39ce45874/src%2Ftest%2Fcompile-fail%2Fissue28498-reject-lifetime-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue28498-reject-lifetime-param.rs?ref=7eda5b508f14a262ffd6aabee631b5e39ce45874", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Demonstrate that having a lifetime param causes dropck to reject code\n+// that might indirectly access previously dropped value.\n+//\n+// Compare with run-pass/issue28498-ugeh-with-lifetime-param.rs\n+\n+#[derive(Debug)]\n+struct ScribbleOnDrop(String);\n+\n+impl Drop for ScribbleOnDrop {\n+    fn drop(&mut self) {\n+        self.0 = format!(\"DROPPED\");\n+    }\n+}\n+\n+struct Foo<'a>(u32, &'a ScribbleOnDrop);\n+\n+impl<'a> Drop for Foo<'a> {\n+    fn drop(&mut self) {\n+        // Use of `unsafe_destructor_blind_to_params` is unsound,\n+        // because destructor accesses borrowed data in `self.1`\n+        // and we must force that to strictly outlive `self`.\n+        println!(\"Dropping Foo({}, {:?})\", self.0, self.1);\n+    }\n+}\n+\n+fn main() {\n+    let (last_dropped, foo0);\n+    let (foo1, first_dropped);\n+\n+    last_dropped = ScribbleOnDrop(format!(\"last\"));\n+    first_dropped = ScribbleOnDrop(format!(\"first\"));\n+    foo0 = Foo(0, &last_dropped);\n+    //~^ ERROR `last_dropped` does not live long enough\n+    foo1 = Foo(1, &first_dropped);\n+    //~^ ERROR `first_dropped` does not live long enough\n+\n+    println!(\"foo0.1: {:?} foo1.1: {:?}\", foo0.1, foo1.1);\n+}"}, {"sha": "19be2568e4ff24147251cd4b032deaa0fb088583", "filename": "src/test/run-pass/issue28498-ugeh-with-lifetime-param.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7eda5b508f14a262ffd6aabee631b5e39ce45874/src%2Ftest%2Frun-pass%2Fissue28498-ugeh-with-lifetime-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7eda5b508f14a262ffd6aabee631b5e39ce45874/src%2Ftest%2Frun-pass%2Fissue28498-ugeh-with-lifetime-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue28498-ugeh-with-lifetime-param.rs?ref=7eda5b508f14a262ffd6aabee631b5e39ce45874", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Demonstrate the use of the unguarded escape hatch with a lifetime param\n+// to assert that destructor will not access any dead data.\n+//\n+// Compare with compile-fail/issue28498-reject-lifetime-param.rs\n+\n+#![feature(dropck_parametricity)]\n+\n+#[derive(Debug)]\n+struct ScribbleOnDrop(String);\n+\n+impl Drop for ScribbleOnDrop {\n+    fn drop(&mut self) {\n+        self.0 = format!(\"DROPPED\");\n+    }\n+}\n+\n+struct Foo<'a>(u32, &'a ScribbleOnDrop);\n+\n+impl<'a> Drop for Foo<'a> {\n+    #[unsafe_destructor_blind_to_params]\n+    fn drop(&mut self) {\n+        // Use of `unsafe_destructor_blind_to_params` is sound,\n+        // because destructor never accesses `self.1`.\n+        println!(\"Dropping Foo({}, _)\", self.0);\n+    }\n+}\n+\n+fn main() {\n+    let (last_dropped, foo0);\n+    let (foo1, first_dropped);\n+\n+    last_dropped = ScribbleOnDrop(format!(\"last\"));\n+    first_dropped = ScribbleOnDrop(format!(\"first\"));\n+    foo0 = Foo(0, &last_dropped);\n+    foo1 = Foo(1, &first_dropped);\n+\n+    println!(\"foo0.1: {:?} foo1.1: {:?}\", foo0.1, foo1.1);\n+}"}]}