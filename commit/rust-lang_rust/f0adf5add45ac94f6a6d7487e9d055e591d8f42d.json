{"sha": "f0adf5add45ac94f6a6d7487e9d055e591d8f42d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwYWRmNWFkZDQ1YWM5NGY2YTZkNzQ4N2U5ZDA1NWU1OTFkOGY0MmQ=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-17T07:52:33Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-17T07:53:03Z"}, "message": "Revert thread-local changes", "tree": {"sha": "2a81dc364c8aa90c382d719a6bf47693d59f050b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a81dc364c8aa90c382d719a6bf47693d59f050b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0adf5add45ac94f6a6d7487e9d055e591d8f42d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0adf5add45ac94f6a6d7487e9d055e591d8f42d", "html_url": "https://github.com/rust-lang/rust/commit/f0adf5add45ac94f6a6d7487e9d055e591d8f42d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0adf5add45ac94f6a6d7487e9d055e591d8f42d/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a6a133f7e92962c614789b284c01f2f03f644b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a6a133f7e92962c614789b284c01f2f03f644b9", "html_url": "https://github.com/rust-lang/rust/commit/5a6a133f7e92962c614789b284c01f2f03f644b9"}], "stats": {"total": 18, "additions": 4, "deletions": 14}, "files": [{"sha": "bfa5e753082151b73cc8d51b0ff1e6d8b9df8c40", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f0adf5add45ac94f6a6d7487e9d055e591d8f42d/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0adf5add45ac94f6a6d7487e9d055e591d8f42d/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=f0adf5add45ac94f6a6d7487e9d055e591d8f42d", "patch": "@@ -1926,33 +1926,23 @@ pub mod tls {\n \n     /// A thread local variable which stores a pointer to the current ImplicitCtxt\n     #[cfg(not(parallel_queries))]\n-    // Accessing `thread_local` in another crate is bugged, so we have\n-    // two accessors `set_raw_tlv` and `get_tlv` which do not have an\n-    // inline attribute to prevent that\n-    #[thread_local]\n-    static TLV: Cell<usize> = Cell::new(0);\n-\n-    /// This is used to set the pointer to the current ImplicitCtxt.\n-    #[cfg(not(parallel_queries))]\n-    fn set_raw_tlv(value: usize) {\n-        TLV.set(value)\n-    }\n+    thread_local!(static TLV: Cell<usize> = Cell::new(0));\n \n     /// Sets TLV to `value` during the call to `f`.\n     /// It is restored to its previous value after.\n     /// This is used to set the pointer to the new ImplicitCtxt.\n     #[cfg(not(parallel_queries))]\n     fn set_tlv<F: FnOnce() -> R, R>(value: usize, f: F) -> R {\n         let old = get_tlv();\n-        let _reset = OnDrop(move || set_raw_tlv(old));\n-        set_raw_tlv(value);\n+        let _reset = OnDrop(move || TLV.with(|tlv| tlv.set(old)));\n+        TLV.with(|tlv| tlv.set(value));\n         f()\n     }\n \n     /// This is used to get the pointer to the current ImplicitCtxt.\n     #[cfg(not(parallel_queries))]\n     fn get_tlv() -> usize {\n-        TLV.get()\n+        TLV.with(|tlv| tlv.get())\n     }\n \n     /// This is a callback from libsyntax as it cannot access the implicit state"}]}