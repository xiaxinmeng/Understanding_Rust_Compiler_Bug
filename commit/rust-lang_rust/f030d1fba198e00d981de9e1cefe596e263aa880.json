{"sha": "f030d1fba198e00d981de9e1cefe596e263aa880", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMzBkMWZiYTE5OGUwMGQ5ODFkZTllMWNlZmU1OTZlMjYzYWE4ODA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-29T11:21:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-29T11:21:58Z"}, "message": "Auto merge of #31144 - jseyfried:remove_import_ordering_restriction, r=nrc\n\nWe no longer require `use` and `extern crate` items to precede other items in modules thanks to [RFC #385](https://github.com/rust-lang/rfcs/pull/385), but we still require `use` and `extern crate` items to precede statements in blocks (other items can appear anywhere in a block).\n\nI think that this is a needless distinction between imports and other items that contradicts the intent of the RFC.", "tree": {"sha": "8b3cc1aef1af7992df8e681ca51b11a0fbd2919d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b3cc1aef1af7992df8e681ca51b11a0fbd2919d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f030d1fba198e00d981de9e1cefe596e263aa880", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f030d1fba198e00d981de9e1cefe596e263aa880", "html_url": "https://github.com/rust-lang/rust/commit/f030d1fba198e00d981de9e1cefe596e263aa880", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f030d1fba198e00d981de9e1cefe596e263aa880/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33b73e9643fdf7b5d3be47d92e996ab04d6212e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/33b73e9643fdf7b5d3be47d92e996ab04d6212e9", "html_url": "https://github.com/rust-lang/rust/commit/33b73e9643fdf7b5d3be47d92e996ab04d6212e9"}, {"sha": "f05bc16a5d8bb1bfb0ee2b281fb3dc6fdefa258c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f05bc16a5d8bb1bfb0ee2b281fb3dc6fdefa258c", "html_url": "https://github.com/rust-lang/rust/commit/f05bc16a5d8bb1bfb0ee2b281fb3dc6fdefa258c"}], "stats": {"total": 25, "additions": 0, "deletions": 25}, "files": [{"sha": "25811687da8b201c54c01faf56e2ec826b56661c", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f030d1fba198e00d981de9e1cefe596e263aa880/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f030d1fba198e00d981de9e1cefe596e263aa880/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=f030d1fba198e00d981de9e1cefe596e263aa880", "patch": "@@ -2516,29 +2516,6 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n             self.value_ribs.push(Rib::new(NormalRibKind));\n         }\n \n-        // Check for imports appearing after non-item statements.\n-        let mut found_non_item = false;\n-        for statement in &block.stmts {\n-            if let hir::StmtDecl(ref declaration, _) = statement.node {\n-                if let hir::DeclItem(i) = declaration.node {\n-                    let i = self.ast_map.expect_item(i.id);\n-                    match i.node {\n-                        ItemExternCrate(_) | ItemUse(_) if found_non_item => {\n-                            span_err!(self.session,\n-                                      i.span,\n-                                      E0154,\n-                                      \"imports are not allowed after non-item statements\");\n-                        }\n-                        _ => {}\n-                    }\n-                } else {\n-                    found_non_item = true\n-                }\n-            } else {\n-                found_non_item = true;\n-            }\n-        }\n-\n         // Descend into the block.\n         intravisit::walk_block(self, block);\n "}, {"sha": "24a1e4e24d81a959f3b29345ad3bf597b454e144", "filename": "src/test/compile-fail/blind-item-block-middle.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f030d1fba198e00d981de9e1cefe596e263aa880/src%2Ftest%2Fcompile-fail%2Fblind-item-block-middle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f030d1fba198e00d981de9e1cefe596e263aa880/src%2Ftest%2Fcompile-fail%2Fblind-item-block-middle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblind-item-block-middle.rs?ref=f030d1fba198e00d981de9e1cefe596e263aa880", "patch": "@@ -14,5 +14,4 @@ fn main() {\n     let bar = 5;\n     //~^ ERROR declaration of `bar` shadows an enum variant or unit-like struct in scope\n     use foo::bar;\n-    //~^ ERROR imports are not allowed after non-item statements\n }"}, {"sha": "bb654b1a20b9102ac1c1f658db6582e51756d198", "filename": "src/test/run-pass/blind-item-local-shadow.rs", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f030d1fba198e00d981de9e1cefe596e263aa880/src%2Ftest%2Frun-pass%2Fblind-item-local-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f030d1fba198e00d981de9e1cefe596e263aa880/src%2Ftest%2Frun-pass%2Fblind-item-local-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblind-item-local-shadow.rs?ref=f030d1fba198e00d981de9e1cefe596e263aa880", "patch": "@@ -15,6 +15,5 @@ mod bar {\n fn main() {\n     let foo = || false;\n     use bar::foo;\n-    //~^ ERROR imports are not allowed after non-item statements\n     assert_eq!(foo(), false);\n }", "previous_filename": "src/test/compile-fail/blind-item-local-shadow.rs"}]}