{"sha": "fd3594b9ee56a288058de0b3e9d2aa5098e98944", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMzU5NGI5ZWU1NmEyODgwNThkZTBiM2U5ZDJhYTUwOThlOTg5NDQ=", "commit": {"author": {"name": "Christopher Durham", "email": "cad97@cad97.com", "date": "2019-11-09T20:19:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-09T20:19:09Z"}, "message": "Layout::pad_to_align is infallible", "tree": {"sha": "87e99fd2f2e8e02f91219cd9686755f92584d9ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e99fd2f2e8e02f91219cd9686755f92584d9ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd3594b9ee56a288058de0b3e9d2aa5098e98944", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdxx89CRBK7hj4Ov3rIwAAdHIIACpURvLII4be9b1ccYHqlijg\nqbKsjwPb5BT4yeoarj9IYgUCLvILoIxpJpNrtTqxSSIJdBFe495pJBf5luAtqWt2\ntPZqb7En3vDi1IllGtEc085NREwXF2gUrIX0yS+T3QWoEjaISwkWh0t2Rm6tVc6z\nx3oDXTJXY5joWvWlCHk5sHbdu1saqlb2Bi71YvXe5hccORLZtHsTr6q48HxxvThP\nXJjMn7H6jcrZ6JaBJFPYb9l6yxUVGBLETDuH5CViYwgNoxHtvpK5zh4Jo4Q/ax8Y\nwqdObiQ1CX1Po5zEFIQLTEZhQyQmPaM7QrExGcNT8OYxrt+LSKxLaG3FadYy7+8=\n=TzCn\n-----END PGP SIGNATURE-----\n", "payload": "tree 87e99fd2f2e8e02f91219cd9686755f92584d9ca\nparent eb981a1da4bcd2d372f0b61b38e6ce3b13a47468\nauthor Christopher Durham <cad97@cad97.com> 1573330749 -0500\ncommitter GitHub <noreply@github.com> 1573330749 -0500\n\nLayout::pad_to_align is infallible"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd3594b9ee56a288058de0b3e9d2aa5098e98944", "html_url": "https://github.com/rust-lang/rust/commit/fd3594b9ee56a288058de0b3e9d2aa5098e98944", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd3594b9ee56a288058de0b3e9d2aa5098e98944/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb981a1da4bcd2d372f0b61b38e6ce3b13a47468", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb981a1da4bcd2d372f0b61b38e6ce3b13a47468", "html_url": "https://github.com/rust-lang/rust/commit/eb981a1da4bcd2d372f0b61b38e6ce3b13a47468"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "c6d18b04a31ddd3356dc941c498ac547a5bcf371", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fd3594b9ee56a288058de0b3e9d2aa5098e98944/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd3594b9ee56a288058de0b3e9d2aa5098e98944/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=fd3594b9ee56a288058de0b3e9d2aa5098e98944", "patch": "@@ -213,16 +213,18 @@ impl Layout {\n     /// Creates a layout by rounding the size of this layout up to a multiple\n     /// of the layout's alignment.\n     ///\n-    /// Returns `Err` if the padded size would overflow.\n-    ///\n     /// This is equivalent to adding the result of `padding_needed_for`\n     /// to the layout's current size.\n     #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n     #[inline]\n-    pub fn pad_to_align(&self) -> Result<Layout, LayoutErr> {\n+    pub fn pad_to_align(&self) -> Layout {\n         let pad = self.padding_needed_for(self.align());\n-        let new_size = self.size().checked_add(pad)\n-            .ok_or(LayoutErr { private: () })?;\n+        // This cannot overflow: it is an invariant of Layout that\n+        // > `size`, when rounded up to the nearest multiple of `align`,\n+        // > must not overflow (i.e., the rounded value must be less than\n+        // > `usize::MAX`)\n+        let new_size = self.size() + pad;\n+        debug_assert!(new_size > self.size());\n \n         Layout::from_size_align(new_size, self.align())\n     }"}]}