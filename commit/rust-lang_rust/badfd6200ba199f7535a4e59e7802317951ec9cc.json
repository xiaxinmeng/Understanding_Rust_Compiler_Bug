{"sha": "badfd6200ba199f7535a4e59e7802317951ec9cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhZGZkNjIwMGJhMTk5Zjc1MzVhNGU1OWU3ODAyMzE3OTUxZWM5Y2M=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-27T19:56:50Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-30T21:02:58Z"}, "message": "Cleanup bootstrap", "tree": {"sha": "9a26ae52064c210fa52d426195bdae30b61e4b27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a26ae52064c210fa52d426195bdae30b61e4b27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/badfd6200ba199f7535a4e59e7802317951ec9cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/badfd6200ba199f7535a4e59e7802317951ec9cc", "html_url": "https://github.com/rust-lang/rust/commit/badfd6200ba199f7535a4e59e7802317951ec9cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/badfd6200ba199f7535a4e59e7802317951ec9cc/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21b987ea089c08627016bca7074960a1ba77ae6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/21b987ea089c08627016bca7074960a1ba77ae6d", "html_url": "https://github.com/rust-lang/rust/commit/21b987ea089c08627016bca7074960a1ba77ae6d"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "b8417218a2231e285e3adbefc3b99ba1c01fc77d", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/badfd6200ba199f7535a4e59e7802317951ec9cc/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/badfd6200ba199f7535a4e59e7802317951ec9cc/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=badfd6200ba199f7535a4e59e7802317951ec9cc", "patch": "@@ -391,18 +391,18 @@ fn krate_emscripten(build: &Build,\n          let test_file_name = test.to_string_lossy().into_owned();\n          println!(\"running {}\", test_file_name);\n          let nodejs = build.config.nodejs.as_ref().expect(\"nodejs not configured\");\n-         let output = Command::new(nodejs)\n+         let status = Command::new(nodejs)\n              .arg(&test_file_name)\n              .stderr(::std::process::Stdio::inherit())\n-             .output();\n-         let output = match output {\n-             Ok(status) => status,\n+             .status();\n+         match status {\n+             Ok(status) => {\n+                 if !status.success() {\n+                     panic!(\"some tests failed\");\n+                 }\n+             }\n              Err(e) => panic!(format!(\"failed to execute command: {}\", e)),\n          };\n-         println!(\"{}\", String::from_utf8(output.stdout).unwrap());\n-         if !output.status.success() {\n-             panic!(\"some tests failed\");\n-         }\n      }\n  }\n "}]}