{"sha": "064f52fa96a51e3871eeaa453fa87221245e6421", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NGY1MmZhOTZhNTFlMzg3MWVlYWE0NTNmYTg3MjIxMjQ1ZTY0MjE=", "commit": {"author": {"name": "Jesse Ruderman", "email": "jruderman@gmail.com", "date": "2011-09-24T22:36:09Z"}, "committer": {"name": "Jesse Ruderman", "email": "jruderman@gmail.com", "date": "2011-09-24T22:36:09Z"}, "message": "Mark some fns as pure so type_is_unique_box doesn't need to be unchecked", "tree": {"sha": "7c1dd55d1adb10c663d8d832832af81eed750b81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c1dd55d1adb10c663d8d832832af81eed750b81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/064f52fa96a51e3871eeaa453fa87221245e6421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/064f52fa96a51e3871eeaa453fa87221245e6421", "html_url": "https://github.com/rust-lang/rust/commit/064f52fa96a51e3871eeaa453fa87221245e6421", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/064f52fa96a51e3871eeaa453fa87221245e6421/comments", "author": {"login": "jruderman", "id": 692547, "node_id": "MDQ6VXNlcjY5MjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/692547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jruderman", "html_url": "https://github.com/jruderman", "followers_url": "https://api.github.com/users/jruderman/followers", "following_url": "https://api.github.com/users/jruderman/following{/other_user}", "gists_url": "https://api.github.com/users/jruderman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jruderman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jruderman/subscriptions", "organizations_url": "https://api.github.com/users/jruderman/orgs", "repos_url": "https://api.github.com/users/jruderman/repos", "events_url": "https://api.github.com/users/jruderman/events{/privacy}", "received_events_url": "https://api.github.com/users/jruderman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jruderman", "id": 692547, "node_id": "MDQ6VXNlcjY5MjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/692547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jruderman", "html_url": "https://github.com/jruderman", "followers_url": "https://api.github.com/users/jruderman/followers", "following_url": "https://api.github.com/users/jruderman/following{/other_user}", "gists_url": "https://api.github.com/users/jruderman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jruderman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jruderman/subscriptions", "organizations_url": "https://api.github.com/users/jruderman/orgs", "repos_url": "https://api.github.com/users/jruderman/repos", "events_url": "https://api.github.com/users/jruderman/events{/privacy}", "received_events_url": "https://api.github.com/users/jruderman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48c2c9b3a7da174d58219f2c2e0cc43926280f35", "url": "https://api.github.com/repos/rust-lang/rust/commits/48c2c9b3a7da174d58219f2c2e0cc43926280f35", "html_url": "https://github.com/rust-lang/rust/commit/48c2c9b3a7da174d58219f2c2e0cc43926280f35"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "0986a0c12658564d55ccd2eec730a527ee4ad1c1", "filename": "src/comp/middle/trans_uniq.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/064f52fa96a51e3871eeaa453fa87221245e6421/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064f52fa96a51e3871eeaa453fa87221245e6421/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs?ref=064f52fa96a51e3871eeaa453fa87221245e6421", "patch": "@@ -20,9 +20,7 @@ export trans_uniq, make_free_glue, type_is_unique_box, copy_val,\n autoderef, duplicate;\n \n pure fn type_is_unique_box(bcx: @block_ctxt, ty: ty::t) -> bool {\n-    unchecked {\n-        ty::type_is_unique_box(bcx_tcx(bcx), ty)\n-    }\n+    ty::type_is_unique_box(bcx_tcx(bcx), ty)\n }\n \n fn trans_uniq(cx: @block_ctxt, contents: @ast::expr,"}, {"sha": "a91f7946c7d33b41028c226ba8a63647e4aa7c31", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/064f52fa96a51e3871eeaa453fa87221245e6421/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064f52fa96a51e3871eeaa453fa87221245e6421/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=064f52fa96a51e3871eeaa453fa87221245e6421", "patch": "@@ -592,7 +592,7 @@ fn mk_iter_body_fn(cx: ctxt, output: t) -> t {\n }\n \n // Returns the one-level-deep type structure of the given type.\n-fn struct(cx: ctxt, typ: t) -> sty { ret interner::get(*cx.ts, typ).struct; }\n+pure fn struct(cx: ctxt, typ: t) -> sty { interner::get(*cx.ts, typ).struct }\n \n \n // Returns the canonical name of the given type.\n@@ -862,36 +862,36 @@ fn get_element_type(cx: ctxt, ty: t, i: uint) -> t {\n     // tag.\n }\n \n-fn type_is_box(cx: ctxt, ty: t) -> bool {\n+pure fn type_is_box(cx: ctxt, ty: t) -> bool {\n     alt struct(cx, ty) {\n       ty_box(_) { ret true; }\n       _ { ret false; }\n     }\n }\n \n-fn type_is_boxed(cx: ctxt, ty: t) -> bool {\n+pure fn type_is_boxed(cx: ctxt, ty: t) -> bool {\n     alt struct(cx, ty) {\n       ty_box(_) { ret true; }\n       _ { ret false; }\n     }\n }\n \n-fn type_is_unique_box(cx: ctxt, ty: t) -> bool {\n+pure fn type_is_unique_box(cx: ctxt, ty: t) -> bool {\n     alt struct(cx, ty) {\n       ty_uniq(_) { ret true; }\n       _ { ret false; }\n     }\n }\n \n-fn type_is_vec(cx: ctxt, ty: t) -> bool {\n+pure fn type_is_vec(cx: ctxt, ty: t) -> bool {\n     ret alt struct(cx, ty) {\n           ty_vec(_) { true }\n           ty_str. { true }\n           _ { false }\n         };\n }\n \n-fn type_is_unique(cx: ctxt, ty: t) -> bool {\n+pure fn type_is_unique(cx: ctxt, ty: t) -> bool {\n     alt struct(cx, ty) {\n       ty_uniq(_) { ret true; }\n       ty_vec(_) { true }\n@@ -900,7 +900,7 @@ fn type_is_unique(cx: ctxt, ty: t) -> bool {\n     }\n }\n \n-fn type_is_scalar(cx: ctxt, ty: t) -> bool {\n+pure fn type_is_scalar(cx: ctxt, ty: t) -> bool {\n     alt struct(cx, ty) {\n       ty_nil. { ret true; }\n       ty_bool. { ret true; }"}, {"sha": "164b38fe87052a8ec6d9a2d146ead7b06a9d0426", "filename": "src/comp/syntax/util/interner.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/064f52fa96a51e3871eeaa453fa87221245e6421/src%2Fcomp%2Fsyntax%2Futil%2Finterner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064f52fa96a51e3871eeaa453fa87221245e6421/src%2Fcomp%2Fsyntax%2Futil%2Finterner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Futil%2Finterner.rs?ref=064f52fa96a51e3871eeaa453fa87221245e6421", "patch": "@@ -28,7 +28,7 @@ fn intern<@T>(itr: interner<T>, val: T) -> uint {\n     }\n }\n \n-fn get<@T>(itr: interner<T>, idx: uint) -> T { ret itr.vect[idx]; }\n+pure fn get<@T>(itr: interner<T>, idx: uint) -> T { ret itr.vect[idx]; }\n \n-fn len<T>(itr: interner<T>) -> uint { ret vec::len(itr.vect); }\n+pure fn len<T>(itr: interner<T>) -> uint { ret vec::len(itr.vect); }\n "}]}