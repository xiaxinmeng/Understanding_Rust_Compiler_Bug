{"sha": "71bc2673edc7ba52c012392266ed7b9480e0f6ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxYmMyNjczZWRjN2JhNTJjMDEyMzkyMjY2ZWQ3Yjk0ODBlMGY2ZWM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-09T00:09:24Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-09T01:40:30Z"}, "message": "Fix number-peek code in fmt!, close #1610.", "tree": {"sha": "508fbfc0e0fc84bb2b4ac8d4685d3228a445b640", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/508fbfc0e0fc84bb2b4ac8d4685d3228a445b640"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71bc2673edc7ba52c012392266ed7b9480e0f6ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71bc2673edc7ba52c012392266ed7b9480e0f6ec", "html_url": "https://github.com/rust-lang/rust/commit/71bc2673edc7ba52c012392266ed7b9480e0f6ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71bc2673edc7ba52c012392266ed7b9480e0f6ec/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "800de26372513c12cf735b7dc43791808e5a5ee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/800de26372513c12cf735b7dc43791808e5a5ee9", "html_url": "https://github.com/rust-lang/rust/commit/800de26372513c12cf735b7dc43791808e5a5ee9"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "0475ff420ce0536a23e6a3eb8b0aefd6d4eeeaf1", "filename": "src/libcore/extfmt.rs", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/71bc2673edc7ba52c012392266ed7b9480e0f6ec/src%2Flibcore%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc2673edc7ba52c012392266ed7b9480e0f6ec/src%2Flibcore%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fextfmt.rs?ref=71bc2673edc7ba52c012392266ed7b9480e0f6ec", "patch": "@@ -118,18 +118,25 @@ mod ct {\n     }\n     fn peek_num(s: ~str, i: uint, lim: uint) ->\n        option<{num: uint, next: uint}> {\n-        if i >= lim { return none; }\n-        let c = s[i];\n-        if !('0' as u8 <= c && c <= '9' as u8) { return option::none; }\n-        let n = (c - ('0' as u8)) as uint;\n-        return match peek_num(s, i + 1u, lim) {\n-              none => some({num: n, next: i + 1u}),\n-              some(next) => {\n-                let m = next.num;\n-                let j = next.next;\n-                some({num: n * 10u + m, next: j})\n-              }\n-            };\n+        let mut j = i;\n+        let mut accum = 0u;\n+        let mut found = false;\n+        while j < lim {\n+            match char::to_digit(s[j] as char, 10) {\n+                some(x) => {\n+                    found = true;\n+                    accum *= 10;\n+                    accum += x;\n+                    j += 1;\n+                },\n+                none => break\n+            }\n+        }\n+        if found {\n+            some({num: accum, next: j})\n+        } else {\n+            none\n+        }\n     }\n     fn parse_conversion(s: ~str, i: uint, lim: uint, error: error_fn) ->\n        {piece: piece, next: uint} {"}, {"sha": "bdf839d8b1f8d531c6a79f5b3fa78028aee1844c", "filename": "src/test/run-pass/syntax-extension-fmt.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71bc2673edc7ba52c012392266ed7b9480e0f6ec/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc2673edc7ba52c012392266ed7b9480e0f6ec/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs?ref=71bc2673edc7ba52c012392266ed7b9480e0f6ec", "patch": "@@ -138,6 +138,8 @@ fn part4() {\n     test(fmt!{\"%.5c\", 'A'}, ~\"A\");\n     test(fmt!{\"%.5f\", 5.82}, ~\"5.82000\");\n     test(fmt!{\"%.5f\", 5.0}, ~\"5.00000\");\n+    test(fmt!{\"%.100f\", 1.1}, ~\"1.1000000000000000888178419700125232338905334472656250000000000000000000000000000000000000000000000000\");\n+\n     // Bool precision. I'm not sure if it's good or bad to have bool\n     // conversions support precision - it's not standard printf so we\n     // can do whatever. For now I'm making it behave the same as string"}]}