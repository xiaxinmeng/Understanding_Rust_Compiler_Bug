{"sha": "c09cad1f28135d019231c171d631e608c7b39f0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwOWNhZDFmMjgxMzVkMDE5MjMxYzE3MWQ2MzFlNjA4YzdiMzlmMGU=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-06-03T01:55:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-03T01:55:10Z"}, "message": "Rollup merge of #51313 - euclio:variant-name-suggestion-fix, r=oli-obk\n\nuse type name in E0599 enum variant suggestion\n\nAlso, rename the variable from \"type_str\" to \"item_kind\" to avoid\nthe ambiguity that caused this bug.", "tree": {"sha": "a5a0c0d4c24b0084e5183fa83732d048b09b3401", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5a0c0d4c24b0084e5183fa83732d048b09b3401"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c09cad1f28135d019231c171d631e608c7b39f0e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbE0p/CRBK7hj4Ov3rIwAAdHIIAE3zd4NLgQ6sI2skbrKJGMk7\nCbaU7jM/Mr+9nOB019T4qxVve8Oo0NOPc/UBt3C820gnqJjG79+imCA29chh5puQ\nZp2tmQqktncYUa+QTf8GvgfStt78SOLGo9hXftcRkIpUe82hgmijTD2NjlFdzHx6\nKCFeyrTwYsoB83Js6raatUFwe1giEkkqoPA2PDwv5DvUUUfOsGonC36UrvIFChuJ\nhU1xkOcAXTK4yEEMncn1XEplUg32yfGZ2tZT2kd+PYp926LQ0kSEMInbZNACTbqu\nyPBhkAf4rOVpnRygJ0giHtMgNjT5uKCTtCI4aTHwG+2rT8NC5DZdLpJXaV4DFr4=\n=tU9T\n-----END PGP SIGNATURE-----\n", "payload": "tree a5a0c0d4c24b0084e5183fa83732d048b09b3401\nparent a689b2d8acd09eed0e471ff75ae301e49b4c436e\nparent 9eb70c3cf5c36b71db409ec845dddb7b7da5d587\nauthor Mark Simulacrum <mark.simulacrum@gmail.com> 1527990910 -0600\ncommitter GitHub <noreply@github.com> 1527990910 -0600\n\nRollup merge of #51313 - euclio:variant-name-suggestion-fix, r=oli-obk\n\nuse type name in E0599 enum variant suggestion\n\nAlso, rename the variable from \"type_str\" to \"item_kind\" to avoid\nthe ambiguity that caused this bug.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c09cad1f28135d019231c171d631e608c7b39f0e", "html_url": "https://github.com/rust-lang/rust/commit/c09cad1f28135d019231c171d631e608c7b39f0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c09cad1f28135d019231c171d631e608c7b39f0e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a689b2d8acd09eed0e471ff75ae301e49b4c436e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a689b2d8acd09eed0e471ff75ae301e49b4c436e", "html_url": "https://github.com/rust-lang/rust/commit/a689b2d8acd09eed0e471ff75ae301e49b4c436e"}, {"sha": "9eb70c3cf5c36b71db409ec845dddb7b7da5d587", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb70c3cf5c36b71db409ec845dddb7b7da5d587", "html_url": "https://github.com/rust-lang/rust/commit/9eb70c3cf5c36b71db409ec845dddb7b7da5d587"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "86cd8d0fb2c5207c0cdd5846ad235bb29e4583a7", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c09cad1f28135d019231c171d631e608c7b39f0e/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c09cad1f28135d019231c171d631e608c7b39f0e/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=c09cad1f28135d019231c171d631e608c7b39f0e", "patch": "@@ -195,7 +195,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 let ty_string = self.ty_to_string(actual);\n                 let is_method = mode == Mode::MethodCall;\n                 let mut suggestion = None;\n-                let type_str = if is_method {\n+                let item_kind = if is_method {\n                     \"method\"\n                 } else if actual.is_enum() {\n                     if let TyAdt(ref adt_def, _) = actual.sty {\n@@ -235,7 +235,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                             span,\n                             E0689,\n                             \"can't call {} `{}` on ambiguous numeric type `{}`\",\n-                            type_str,\n+                            item_kind,\n                             item_name,\n                             ty_string\n                         );\n@@ -284,12 +284,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                             span,\n                             E0599,\n                             \"no {} named `{}` found for type `{}` in the current scope\",\n-                            type_str,\n+                            item_kind,\n                             item_name,\n                             ty_string\n                         );\n                         if let Some(suggestion) = suggestion {\n-                            err.note(&format!(\"did you mean `{}::{}`?\", type_str, suggestion));\n+                            err.note(&format!(\"did you mean `{}::{}`?\", ty_string, suggestion));\n                         }\n                         err\n                     }\n@@ -301,7 +301,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     if let Some(full_sp) = tcx.hir.span_if_local(def.did) {\n                         let def_sp = tcx.sess.codemap().def_span(full_sp);\n                         err.span_label(def_sp, format!(\"{} `{}` not found {}\",\n-                                                       type_str,\n+                                                       item_kind,\n                                                        item_name,\n                                                        if def.is_enum() && !is_method {\n                                                            \"here\"\n@@ -355,7 +355,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         }\n                     }\n                 } else {\n-                    err.span_label(span, format!(\"{} not found in `{}`\", type_str, ty_string));\n+                    err.span_label(span, format!(\"{} not found in `{}`\", item_kind, ty_string));\n                 }\n \n                 if self.is_fn_ty(&rcvr_ty, span) {"}, {"sha": "d87f239bca6906e865613569637a5ece0d89c80c", "filename": "src/test/ui/issue-23217.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c09cad1f28135d019231c171d631e608c7b39f0e/src%2Ftest%2Fui%2Fissue-23217.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c09cad1f28135d019231c171d631e608c7b39f0e/src%2Ftest%2Fui%2Fissue-23217.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-23217.stderr?ref=c09cad1f28135d019231c171d631e608c7b39f0e", "patch": "@@ -6,7 +6,7 @@ LL | pub enum SomeEnum {\n LL |     B = SomeEnum::A,\n    |         ^^^^^^^^^^^ variant not found in `SomeEnum`\n    |\n-   = note: did you mean `variant::B`?\n+   = note: did you mean `SomeEnum::B`?\n \n error: aborting due to previous error\n "}, {"sha": "c04e21f7c58572d7e6e63bd10dfc3ed01317e62b", "filename": "src/test/ui/issue-28971.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c09cad1f28135d019231c171d631e608c7b39f0e/src%2Ftest%2Fui%2Fissue-28971.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c09cad1f28135d019231c171d631e608c7b39f0e/src%2Ftest%2Fui%2Fissue-28971.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-28971.stderr?ref=c09cad1f28135d019231c171d631e608c7b39f0e", "patch": "@@ -7,7 +7,7 @@ LL | enum Foo {\n LL |             Foo::Baz(..) => (),\n    |             ^^^^^^^^^^^^ variant not found in `Foo`\n    |\n-   = note: did you mean `variant::Bar`?\n+   = note: did you mean `Foo::Bar`?\n \n error: aborting due to previous error\n "}]}