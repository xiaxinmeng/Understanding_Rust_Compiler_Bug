{"sha": "91e61ad9670baf6884dd77e93dbe5160fa50fb49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxZTYxYWQ5NjcwYmFmNjg4NGRkNzdlOTNkYmU1MTYwZmE1MGZiNDk=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-04T00:00:32Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-05T03:16:13Z"}, "message": "vim: Fix indentation at global scope after non-semantic ([{/)]}\n\nIf an unbalanced [ exists in a string or comment, this should not be\nconsidered when calculating the indent at the top level.\n\nSimilarly, when testing for ({/}) to see if we're at the top level to\nbegin with, strings and comments should be skipped.", "tree": {"sha": "c31d129361199c7943e2fdc847ae8bb8172c0447", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c31d129361199c7943e2fdc847ae8bb8172c0447"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91e61ad9670baf6884dd77e93dbe5160fa50fb49", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91e61ad9670baf6884dd77e93dbe5160fa50fb49", "html_url": "https://github.com/rust-lang/rust/commit/91e61ad9670baf6884dd77e93dbe5160fa50fb49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91e61ad9670baf6884dd77e93dbe5160fa50fb49/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c691df8acaf10aa3721476e5d7fafcee11b0aaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c691df8acaf10aa3721476e5d7fafcee11b0aaa", "html_url": "https://github.com/rust-lang/rust/commit/0c691df8acaf10aa3721476e5d7fafcee11b0aaa"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "9fdc18582ba297084614cefaa6be96c7d4b5c160", "filename": "src/etc/vim/indent/rust.vim", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/91e61ad9670baf6884dd77e93dbe5160fa50fb49/src%2Fetc%2Fvim%2Findent%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/91e61ad9670baf6884dd77e93dbe5160fa50fb49/src%2Fetc%2Fvim%2Findent%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Findent%2Frust.vim?ref=91e61ad9670baf6884dd77e93dbe5160fa50fb49", "patch": "@@ -30,7 +30,7 @@ endif\n \n \" Come here when loading the script the first time.\n \n-function s:get_line_trimmed(lnum)\n+function! s:get_line_trimmed(lnum)\n \t\" Get the line and remove a trailing comment.\n \t\" Use syntax highlighting attributes when possible.\n \t\" NOTE: this is not accurate; /* */ or a line continuation could trick it\n@@ -61,6 +61,20 @@ function s:get_line_trimmed(lnum)\n \tendif\n endfunction\n \n+function! s:is_string_comment(lnum, col)\n+\tif has('syntax_items')\n+\t\tfor id in synstack(a:lnum, a:col)\n+\t\t\tlet synname = synIDattr(id, \"name\")\n+\t\t\tif synname == \"rustString\" || synname =~ \"^rustComment\"\n+\t\t\t\treturn 1\n+\t\t\tendif\n+\t\tendfor\n+\telse\n+\t\t\" without syntax, let's not even try\n+\t\treturn 0\n+\tendif\n+endfunction\n+\n function GetRustIndent(lnum)\n \n \t\" Starting assumption: cindent (called at the end) will do it right\n@@ -152,8 +166,10 @@ function GetRustIndent(lnum)\n \t\" column zero)\n \n \tcall cursor(a:lnum, 1)\n-\tif searchpair('{\\|(', '', '}\\|)', 'nbW') == 0\n-\t\tif searchpair('\\[', '', '\\]', 'nbW') == 0\n+\tif searchpair('{\\|(', '', '}\\|)', 'nbW'\n+\t\t\t\t\\ 's:is_string_comment(line(\".\"), col(\".\"))') == 0\n+\t\tif searchpair('\\[', '', '\\]', 'nbW',\n+\t\t\t\t\t\\ 's:is_string_comment(line(\".\"), col(\".\"))') == 0\n \t\t\t\" Global scope, should be zero\n \t\t\treturn 0\n \t\telse"}]}