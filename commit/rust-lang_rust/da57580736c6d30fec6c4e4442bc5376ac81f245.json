{"sha": "da57580736c6d30fec6c4e4442bc5376ac81f245", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNTc1ODA3MzZjNmQzMGZlYzZjNGU0NDQyYmM1Mzc2YWM4MWYyNDU=", "commit": {"author": {"name": "Lukas Kalbertodt", "email": "lukas.kalbertodt@gmail.com", "date": "2017-10-02T07:50:36Z"}, "committer": {"name": "Lukas Kalbertodt", "email": "lukas.kalbertodt@gmail.com", "date": "2017-11-03T20:27:40Z"}, "message": "Remove unused AsciiExt imports and fix tests related to ascii methods\n\nMany AsciiExt imports have become useless thanks to the inherent ascii\nmethods added in the last commits. These were removed. In some places, I\nfully specified the ascii method being called to enforce usage of the\nAsciiExt trait. Note that some imports are not removed but tagged with\na `#[cfg(stage0)]` attribute. This is necessary, because certain ascii\nmethods are not yet available in stage0. All those imports will be\nremoved later.\n\nAdditionally, failing tests were fixed. The test suite should exit\nsuccessfully now.", "tree": {"sha": "d56aa1a4da1c032756e8c6ca48c9bb47d3f4114a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d56aa1a4da1c032756e8c6ca48c9bb47d3f4114a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da57580736c6d30fec6c4e4442bc5376ac81f245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da57580736c6d30fec6c4e4442bc5376ac81f245", "html_url": "https://github.com/rust-lang/rust/commit/da57580736c6d30fec6c4e4442bc5376ac81f245", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da57580736c6d30fec6c4e4442bc5376ac81f245/comments", "author": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1916e3c4aad7b0e0de1cfd190819609f55520996", "url": "https://api.github.com/repos/rust-lang/rust/commits/1916e3c4aad7b0e0de1cfd190819609f55520996", "html_url": "https://github.com/rust-lang/rust/commit/1916e3c4aad7b0e0de1cfd190819609f55520996"}], "stats": {"total": 31, "additions": 10, "deletions": 21}, "files": [{"sha": "38c94d4d8b5f36a64739c7b2d4192be4876b7e5d", "filename": "src/liballoc/benches/str.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Fbenches%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Fbenches%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fstr.rs?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -272,15 +272,12 @@ make_test!(match_indices_a_str, s, s.match_indices(\"a\").count());\n make_test!(split_a_str, s, s.split(\"a\").count());\n \n make_test!(trim_ascii_char, s, {\n-    use std::ascii::AsciiExt;\n     s.trim_matches(|c: char| c.is_ascii())\n });\n make_test!(trim_left_ascii_char, s, {\n-    use std::ascii::AsciiExt;\n     s.trim_left_matches(|c: char| c.is_ascii())\n });\n make_test!(trim_right_ascii_char, s, {\n-    use std::ascii::AsciiExt;\n     s.trim_right_matches(|c: char| c.is_ascii())\n });\n "}, {"sha": "e8aff0998715726bc21c4908b790a71f19400535", "filename": "src/liballoc/borrow.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fborrow.rs?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -191,7 +191,6 @@ impl<'a, B: ?Sized> Cow<'a, B>\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::ascii::AsciiExt;\n     /// use std::borrow::Cow;\n     ///\n     /// let mut cow = Cow::Borrowed(\"foo\");"}, {"sha": "b75ecb6ea51cf8ebc44aab4889f5c0d4e5847595", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -390,8 +390,6 @@ impl str {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::ascii::AsciiExt;\n-    ///\n     /// let mut v = String::from(\"hello\");\n     /// // correct length\n     /// assert!(v.get_mut(0..5).is_some());\n@@ -617,8 +615,6 @@ impl str {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// use std::ascii::AsciiExt;\n-    ///\n     /// let mut s = \"Per Martin-L\u00f6f\".to_string();\n     /// {\n     ///     let (first, last) = s.split_at_mut(3);"}, {"sha": "25fcc1ccdab589e8c774572c82098967ec58a563", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -773,8 +773,6 @@ impl String {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// use std::ascii::AsciiExt;\n-    ///\n     /// let mut s = String::from(\"foobar\");\n     /// let s_mut_str = s.as_mut_str();\n     ///"}, {"sha": "6b075e7ac0e0d0f47f1fbd776973306e048abcf6", "filename": "src/liballoc/tests/str.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Ftests%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Ftests%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstr.rs?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -706,7 +706,6 @@ fn test_split_at() {\n \n #[test]\n fn test_split_at_mut() {\n-    use std::ascii::AsciiExt;\n     let mut s = \"Hello World\".to_string();\n     {\n         let (a, b) = s.split_at_mut(5);"}, {"sha": "9cfde5dcc73c8433b0f37f030a30b1b0b6fbb9b0", "filename": "src/liballoc/tests/vec.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec.rs?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::ascii::AsciiExt;\n use std::borrow::Cow;\n use std::mem::size_of;\n use std::panic;\n@@ -966,5 +965,3 @@ fn drain_filter_complex() {\n         assert_eq!(vec, vec![1, 3, 5, 7, 9, 11, 13, 15, 17, 19]);\n     }\n }\n-\n-"}, {"sha": "5aca199cf40c068896632a566ab7bd30e0eed334", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -853,8 +853,6 @@ impl<T> Vec<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::ascii::AsciiExt;\n-    ///\n     /// let mut vec = vec![\"foo\", \"bar\", \"Bar\", \"baz\", \"bar\"];\n     ///\n     /// vec.dedup_by(|a, b| a.eq_ignore_ascii_case(b));"}, {"sha": "d648099d74d365e476619744d1462c40d0538448", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -38,6 +38,7 @@ use hir::def_id::{CrateNum, LOCAL_CRATE};\n use hir::intravisit::{self, FnKind};\n use hir;\n use session::Session;\n+#[cfg(stage0)]\n use std::ascii::AsciiExt;\n use std::hash;\n use syntax::ast;"}, {"sha": "915383d8189e0db2a797150a318453e9723d7a22", "filename": "src/librustdoc/clean/cfg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg.rs?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -15,6 +15,7 @@\n use std::mem;\n use std::fmt::{self, Write};\n use std::ops;\n+#[cfg(stage0)]\n use std::ascii::AsciiExt;\n \n use syntax::symbol::Symbol;"}, {"sha": "228bd7a033090a8202f24e92d712c52fbe902a41", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -34,6 +34,7 @@\n //! both occur before the crate is rendered.\n pub use self::ExternalLocation::*;\n \n+#[cfg(stage0)]\n use std::ascii::AsciiExt;\n use std::cell::RefCell;\n use std::cmp::Ordering;"}, {"sha": "96d719c528c109bf5fad03ef6a48ad897ce36b4a", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -38,8 +38,8 @@ use iter::FusedIterator;\n /// ```\n /// use std::ascii::AsciiExt;\n ///\n-/// assert_eq!(\"cafe\u0301\".to_ascii_uppercase(), \"CAFE\u0301\");\n-/// assert_eq!(\"caf\u00e9\".to_ascii_uppercase(), \"CAF\u00e9\");\n+/// assert_eq!(AsciiExt::to_ascii_uppercase(\"cafe\u0301\"), \"CAFE\u0301\");\n+/// assert_eq!(AsciiExt::to_ascii_uppercase(\"caf\u00e9\"), \"CAF\u00e9\");\n /// ```\n ///\n /// In the first example, the lowercased string is represented `\"cafe\\u{301}\"`\n@@ -681,7 +681,9 @@ impl fmt::Debug for EscapeDefault {\n \n #[cfg(test)]\n mod tests {\n-    use super::*;\n+    //! Note that most of these tests are not testing `AsciiExt` methods, but\n+    //! test inherent ascii methods of char, u8, str and [u8]. `AsciiExt` is\n+    //! just using those methods, though.\n     use char::from_u32;\n \n     #[test]"}, {"sha": "3ed3297e05ed95a5976c1795ce3deccb9fe9e987", "filename": "src/test/ui/deref-suggestion.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Ftest%2Fui%2Fderef-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da57580736c6d30fec6c4e4442bc5376ac81f245/src%2Ftest%2Fui%2Fderef-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderef-suggestion.stderr?ref=da57580736c6d30fec6c4e4442bc5376ac81f245", "patch": "@@ -10,8 +10,8 @@ error[E0308]: mismatched types\n            - .escape_debug()\n            - .escape_default()\n            - .escape_unicode()\n-           - .to_lowercase()\n-           - .to_uppercase()\n+           - .to_ascii_lowercase()\n+           - .to_ascii_uppercase()\n \n error[E0308]: mismatched types\n   --> $DIR/deref-suggestion.rs:23:10"}]}