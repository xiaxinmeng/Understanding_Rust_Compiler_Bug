{"sha": "68670f631c22b1cab5eaa29aab4d97c94117c424", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NjcwZjYzMWMyMmIxY2FiNWVhYTI5YWFiNGQ5N2M5NDExN2M0MjQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-15T18:48:04Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-15T18:48:04Z"}, "message": "Make type_is_pod handle more types.", "tree": {"sha": "51a91741ec8ce520e41742e34173fa65ac179e07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51a91741ec8ce520e41742e34173fa65ac179e07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68670f631c22b1cab5eaa29aab4d97c94117c424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68670f631c22b1cab5eaa29aab4d97c94117c424", "html_url": "https://github.com/rust-lang/rust/commit/68670f631c22b1cab5eaa29aab4d97c94117c424", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68670f631c22b1cab5eaa29aab4d97c94117c424/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6c613ffa514fc72bb7c818401b41a22ca03cdf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6c613ffa514fc72bb7c818401b41a22ca03cdf0", "html_url": "https://github.com/rust-lang/rust/commit/e6c613ffa514fc72bb7c818401b41a22ca03cdf0"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "d08ae902005feb8cb5f2be289d7d826d0a2f3240", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/68670f631c22b1cab5eaa29aab4d97c94117c424/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68670f631c22b1cab5eaa29aab4d97c94117c424/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=68670f631c22b1cab5eaa29aab4d97c94117c424", "patch": "@@ -1876,6 +1876,8 @@ fn type_is_pod(cx: ctxt, ty: t) -> bool {\n       ty_type | ty_ptr(_) { result = true; }\n       // Boxed types\n       ty_str | ty_box(_) | ty_uniq(_) | ty_vec(_) | ty_fn(_) |\n+      ty_estr(vstore_uniq) | ty_estr(vstore_box) |\n+      ty_evec(_, vstore_uniq) | ty_evec(_, vstore_box) |\n       ty_iface(_, _) | ty_rptr(_,_) | ty_opaque_box { result = false; }\n       // Structural types\n       ty_enum(did, substs) {\n@@ -1897,7 +1899,7 @@ fn type_is_pod(cx: ctxt, ty: t) -> bool {\n         for elts.each {|elt| if !type_is_pod(cx, elt) { result = false; } }\n       }\n       ty_estr(vstore_fixed(_)) { result = true; }\n-      ty_evec(mt, vstore_fixed(_)) {\n+      ty_evec(mt, vstore_fixed(_)) | ty_unboxed_vec(mt) {\n         result = type_is_pod(cx, mt.ty);\n       }\n       ty_res(_, inner, substs) {\n@@ -1913,7 +1915,14 @@ fn type_is_pod(cx: ctxt, ty: t) -> bool {\n             type_is_pod(cx, sty)\n         };\n       }\n-      _ { cx.sess.bug(\"unexpected type in type_is_pod\"); }\n+\n+      ty_estr(vstore_slice(*)) | ty_evec(_, vstore_slice(*)) {\n+        result = false;\n+      }\n+\n+      ty_var(*) | ty_var_integral(*) | ty_self(*) {\n+        cx.sess.bug(\"non concrete type in type_is_pod\");\n+      }\n     }\n \n     ret result;"}]}