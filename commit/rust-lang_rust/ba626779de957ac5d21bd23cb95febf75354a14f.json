{"sha": "ba626779de957ac5d21bd23cb95febf75354a14f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNjI2Nzc5ZGU5NTdhYzVkMjFiZDIzY2I5NWZlYmY3NTM1NGExNGY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-26T22:38:34Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-26T22:41:42Z"}, "message": "Handle printing 'auto' occurring in loop-variable context.", "tree": {"sha": "82417b012b6f3ef0cee10787e708d9274e580fd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82417b012b6f3ef0cee10787e708d9274e580fd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba626779de957ac5d21bd23cb95febf75354a14f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba626779de957ac5d21bd23cb95febf75354a14f", "html_url": "https://github.com/rust-lang/rust/commit/ba626779de957ac5d21bd23cb95febf75354a14f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba626779de957ac5d21bd23cb95febf75354a14f/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c97510a1677a93fea9d893325c828daee833b1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c97510a1677a93fea9d893325c828daee833b1e", "html_url": "https://github.com/rust-lang/rust/commit/1c97510a1677a93fea9d893325c828daee833b1e"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "24e9581446f3a7984f33f5aadd0b56f068028e10", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ba626779de957ac5d21bd23cb95febf75354a14f/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba626779de957ac5d21bd23cb95febf75354a14f/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=ba626779de957ac5d21bd23cb95febf75354a14f", "patch": "@@ -1086,7 +1086,10 @@ fn print_decl(&ps s, &@ast::decl decl) {\n fn print_ident(&ps s, &ast::ident ident) { word(s.s, ident); }\n \n fn print_for_decl(&ps s, @ast::local loc) {\n-    print_type(s, *option::get(loc.node.ty));\n+    alt (loc.node.ty) {\n+      none { word(s.s, \"auto\"); }\n+      some (?t) { print_type(s, *t); }\n+    }\n     space(s.s);\n     word(s.s, loc.node.ident);\n }"}]}