{"sha": "481909403167d88ecc61ebe16d7065ea002bae84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MTkwOTQwMzE2N2Q4OGVjYzYxZWJlMTZkNzA2NWVhMDAyYmFlODQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-03T09:28:06Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-03T09:28:06Z"}, "message": "Reintroduce alignment check", "tree": {"sha": "b37335239272fc88835761ebe66c514880608b5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b37335239272fc88835761ebe66c514880608b5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/481909403167d88ecc61ebe16d7065ea002bae84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/481909403167d88ecc61ebe16d7065ea002bae84", "html_url": "https://github.com/rust-lang/rust/commit/481909403167d88ecc61ebe16d7065ea002bae84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/481909403167d88ecc61ebe16d7065ea002bae84/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21debc698433e5003dd325d6292425e8d2c13142", "url": "https://api.github.com/repos/rust-lang/rust/commits/21debc698433e5003dd325d6292425e8d2c13142", "html_url": "https://github.com/rust-lang/rust/commit/21debc698433e5003dd325d6292425e8d2c13142"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "b62add8a559b41b3d9dc152f5327416e1190ae7e", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/481909403167d88ecc61ebe16d7065ea002bae84/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/481909403167d88ecc61ebe16d7065ea002bae84/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=481909403167d88ecc61ebe16d7065ea002bae84", "patch": "@@ -799,6 +799,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n         signed: bool,\n     ) -> EvalResult<'tcx> {\n         let endianness = self.endianness();\n+        self.check_align(ptr, ptr_align)?;\n \n         let val = match val {\n             ScalarMaybeUndef::Scalar(scalar) => scalar,"}]}