{"sha": "07c5e5d81363b6cdbca64637832620ab4870d258", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YzVlNWQ4MTM2M2I2Y2RiY2E2NDYzNzgzMjYyMGFiNDg3MGQyNTg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-02-09T22:05:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-02-10T00:23:39Z"}, "message": "std: Clean up the swap function a little", "tree": {"sha": "c50243096b7db657c9b8906b987d7f5fd005258c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c50243096b7db657c9b8906b987d7f5fd005258c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07c5e5d81363b6cdbca64637832620ab4870d258", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07c5e5d81363b6cdbca64637832620ab4870d258", "html_url": "https://github.com/rust-lang/rust/commit/07c5e5d81363b6cdbca64637832620ab4870d258", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07c5e5d81363b6cdbca64637832620ab4870d258/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b7733109d7b692c2ddd404f1bb6c751c3194750", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b7733109d7b692c2ddd404f1bb6c751c3194750", "html_url": "https://github.com/rust-lang/rust/commit/1b7733109d7b692c2ddd404f1bb6c751c3194750"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "644b5cefdc8762a24225774b336b3c87c59f7478", "filename": "src/libstd/util.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/07c5e5d81363b6cdbca64637832620ab4870d258/src%2Flibstd%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c5e5d81363b6cdbca64637832620ab4870d258/src%2Flibstd%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Futil.rs?ref=07c5e5d81363b6cdbca64637832620ab4870d258", "patch": "@@ -26,19 +26,16 @@ pub fn id<T>(x: T) -> T { x }\n pub fn swap<T>(x: &mut T, y: &mut T) {\n     unsafe {\n         // Give ourselves some scratch space to work with\n-        let mut tmp: T = mem::uninit();\n-        let t: *mut T = &mut tmp;\n+        let mut t: T = mem::uninit();\n \n         // Perform the swap, `&mut` pointers never alias\n-        let x_raw: *mut T = x;\n-        let y_raw: *mut T = y;\n-        ptr::copy_nonoverlapping_memory(t, &*x_raw, 1);\n-        ptr::copy_nonoverlapping_memory(x, &*y_raw, 1);\n-        ptr::copy_nonoverlapping_memory(y, &*t, 1);\n+        ptr::copy_nonoverlapping_memory(&mut t, &*x, 1);\n+        ptr::copy_nonoverlapping_memory(x, &*y, 1);\n+        ptr::copy_nonoverlapping_memory(y, &t, 1);\n \n         // y and t now point to the same thing, but we need to completely forget `tmp`\n         // because it's no longer relevant.\n-        cast::forget(tmp);\n+        cast::forget(t);\n     }\n }\n "}]}