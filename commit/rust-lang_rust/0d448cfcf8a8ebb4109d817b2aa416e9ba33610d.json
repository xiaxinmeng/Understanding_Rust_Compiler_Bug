{"sha": "0d448cfcf8a8ebb4109d817b2aa416e9ba33610d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNDQ4Y2ZjZjhhOGViYjQxMDlkODE3YjJhYTQxNmU5YmEzMzYxMGQ=", "commit": {"author": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-04-17T07:00:02Z"}, "committer": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-05-05T09:25:12Z"}, "message": "Generate the UndoLog upcasts with a macro", "tree": {"sha": "440761700260a21a524a46ef64640e43053e90be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/440761700260a21a524a46ef64640e43053e90be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d448cfcf8a8ebb4109d817b2aa416e9ba33610d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d448cfcf8a8ebb4109d817b2aa416e9ba33610d", "html_url": "https://github.com/rust-lang/rust/commit/0d448cfcf8a8ebb4109d817b2aa416e9ba33610d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d448cfcf8a8ebb4109d817b2aa416e9ba33610d/comments", "author": null, "committer": null, "parents": [{"sha": "bc2fc7fb80d6f55a018e24de07d1ebdbc79d9136", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc2fc7fb80d6f55a018e24de07d1ebdbc79d9136", "html_url": "https://github.com/rust-lang/rust/commit/bc2fc7fb80d6f55a018e24de07d1ebdbc79d9136"}], "stats": {"total": 78, "additions": 22, "deletions": 56}, "files": [{"sha": "2271da01526180cd28e47076862d020ecf015f4c", "filename": "src/librustc_infer/infer/undo_log.rs", "status": "modified", "additions": 22, "deletions": 56, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/0d448cfcf8a8ebb4109d817b2aa416e9ba33610d/src%2Flibrustc_infer%2Finfer%2Fundo_log.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d448cfcf8a8ebb4109d817b2aa416e9ba33610d/src%2Flibrustc_infer%2Finfer%2Fundo_log.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fundo_log.rs?ref=0d448cfcf8a8ebb4109d817b2aa416e9ba33610d", "patch": "@@ -27,70 +27,36 @@ pub(crate) enum UndoLog<'tcx> {\n     PushRegionObligation,\n }\n \n-impl<'tcx> From<region_constraints::UndoLog<'tcx>> for UndoLog<'tcx> {\n-    fn from(l: region_constraints::UndoLog<'tcx>) -> Self {\n-        UndoLog::RegionConstraintCollector(l)\n-    }\n-}\n-\n-impl<'tcx> From<sv::UndoLog<ut::Delegate<type_variable::TyVidEqKey<'tcx>>>> for UndoLog<'tcx> {\n-    fn from(l: sv::UndoLog<ut::Delegate<type_variable::TyVidEqKey<'tcx>>>) -> Self {\n-        UndoLog::TypeVariables(type_variable::UndoLog::EqRelation(l))\n-    }\n-}\n-\n-impl<'tcx> From<sv::UndoLog<ut::Delegate<ty::TyVid>>> for UndoLog<'tcx> {\n-    fn from(l: sv::UndoLog<ut::Delegate<ty::TyVid>>) -> Self {\n-        UndoLog::TypeVariables(type_variable::UndoLog::SubRelation(l))\n-    }\n-}\n-\n-impl<'tcx> From<sv::UndoLog<type_variable::Delegate>> for UndoLog<'tcx> {\n-    fn from(l: sv::UndoLog<type_variable::Delegate>) -> Self {\n-        UndoLog::TypeVariables(type_variable::UndoLog::Values(l))\n-    }\n-}\n-\n-impl<'tcx> From<type_variable::Instantiate> for UndoLog<'tcx> {\n-    fn from(l: type_variable::Instantiate) -> Self {\n-        UndoLog::TypeVariables(type_variable::UndoLog::from(l))\n+macro_rules! impl_from {\n+    ($($ctor: ident ($ty: ty),)*) => {\n+        $(\n+        impl<'tcx> From<$ty> for UndoLog<'tcx> {\n+            fn from(x: $ty) -> Self {\n+                UndoLog::$ctor(x.into())\n+            }\n+        }\n+        )*\n     }\n }\n \n-impl From<type_variable::UndoLog<'tcx>> for UndoLog<'tcx> {\n-    fn from(t: type_variable::UndoLog<'tcx>) -> Self {\n-        Self::TypeVariables(t)\n-    }\n-}\n+// Upcast from a single kind of \"undoable action\" to the general enum\n+impl_from! {\n+    RegionConstraintCollector(region_constraints::UndoLog<'tcx>),\n+    TypeVariables(type_variable::UndoLog<'tcx>),\n \n-impl<'tcx> From<sv::UndoLog<ut::Delegate<ty::ConstVid<'tcx>>>> for UndoLog<'tcx> {\n-    fn from(l: sv::UndoLog<ut::Delegate<ty::ConstVid<'tcx>>>) -> Self {\n-        Self::ConstUnificationTable(l)\n-    }\n-}\n+    TypeVariables(sv::UndoLog<ut::Delegate<type_variable::TyVidEqKey<'tcx>>>),\n+    TypeVariables(sv::UndoLog<ut::Delegate<ty::TyVid>>),\n+    TypeVariables(sv::UndoLog<type_variable::Delegate>),\n+    TypeVariables(type_variable::Instantiate),\n \n-impl<'tcx> From<sv::UndoLog<ut::Delegate<ty::IntVid>>> for UndoLog<'tcx> {\n-    fn from(l: sv::UndoLog<ut::Delegate<ty::IntVid>>) -> Self {\n-        Self::IntUnificationTable(l)\n-    }\n-}\n+    IntUnificationTable(sv::UndoLog<ut::Delegate<ty::IntVid>>),\n \n-impl<'tcx> From<sv::UndoLog<ut::Delegate<ty::FloatVid>>> for UndoLog<'tcx> {\n-    fn from(l: sv::UndoLog<ut::Delegate<ty::FloatVid>>) -> Self {\n-        Self::FloatUnificationTable(l)\n-    }\n-}\n+    FloatUnificationTable(sv::UndoLog<ut::Delegate<ty::FloatVid>>),\n \n-impl<'tcx> From<sv::UndoLog<ut::Delegate<ty::RegionVid>>> for UndoLog<'tcx> {\n-    fn from(l: sv::UndoLog<ut::Delegate<ty::RegionVid>>) -> Self {\n-        Self::RegionUnificationTable(l)\n-    }\n-}\n+    ConstUnificationTable(sv::UndoLog<ut::Delegate<ty::ConstVid<'tcx>>>),\n \n-impl<'tcx> From<traits::UndoLog<'tcx>> for UndoLog<'tcx> {\n-    fn from(l: traits::UndoLog<'tcx>) -> Self {\n-        Self::ProjectionCache(l)\n-    }\n+    RegionUnificationTable(sv::UndoLog<ut::Delegate<ty::RegionVid>>),\n+    ProjectionCache(traits::UndoLog<'tcx>),\n }\n \n impl<'tcx> Rollback<UndoLog<'tcx>> for InferCtxtInner<'tcx> {"}]}