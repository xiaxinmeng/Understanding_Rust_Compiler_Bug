{"sha": "11deb2f5f1ef731a48e8637a140203a40f9ad303", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZGViMmY1ZjFlZjczMWE0OGU4NjM3YTE0MDIwM2E0MGY5YWQzMDM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-10-20T22:36:30Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-10-20T22:36:30Z"}, "message": "Eliminate <tag#> stuff from the \"friendly\" type errors", "tree": {"sha": "a4210138db0029481ea5e6fd3bf70c1930eed51b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4210138db0029481ea5e6fd3bf70c1930eed51b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11deb2f5f1ef731a48e8637a140203a40f9ad303", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11deb2f5f1ef731a48e8637a140203a40f9ad303", "html_url": "https://github.com/rust-lang/rust/commit/11deb2f5f1ef731a48e8637a140203a40f9ad303", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11deb2f5f1ef731a48e8637a140203a40f9ad303/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bb675ba4243314baf3b41dbea01511fdc3ae729", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb675ba4243314baf3b41dbea01511fdc3ae729", "html_url": "https://github.com/rust-lang/rust/commit/4bb675ba4243314baf3b41dbea01511fdc3ae729"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "8056dc1ee7f6309412c5ae806c8e5247ff7a3e55", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/11deb2f5f1ef731a48e8637a140203a40f9ad303/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/11deb2f5f1ef731a48e8637a140203a40f9ad303/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=11deb2f5f1ef731a48e8637a140203a40f9ad303", "patch": "@@ -75,6 +75,39 @@ let rec friendly_stringify cx fallback ty =\n           let fn_args_str = String.concat \", \" (Array.to_list fn_args) in\n           let fn_rv_str = format_slot fnsig.Ast.sig_output_slot in\n           Printf.sprintf \"fn(%s) -> %s\" fn_args_str fn_rv_str\n+      | Ast.TY_tag { Ast.tag_id = tag_id; Ast.tag_args = args } ->\n+          let tag_info = Hashtbl.find cx.Semant.ctxt_all_tag_info tag_id in\n+          let tag_idents = tag_info.Semant.tag_idents in\n+          let item_id = ref None in\n+          (* Ugly hack ahead... *)\n+          begin\n+            try\n+              Hashtbl.iter\n+                begin\n+                  fun _ (_, item_id', _) ->\n+                    item_id := Some item_id'; raise Exit\n+                end\n+                tag_idents\n+            with Exit -> ();\n+          end;\n+          begin\n+            match !item_id with\n+                None -> fallback ty\n+              | Some item_id ->\n+                  let item_types = cx.Semant.ctxt_all_item_types in\n+                  let ty = Hashtbl.find item_types item_id in\n+                  let args_suffix =\n+                    if Array.length args == 0 then \"\"\n+                    else\n+                      Printf.sprintf \"[%s]\"\n+                        (String.concat \",\"\n+                          (Array.to_list\n+                            (Array.map\n+                              (friendly_stringify cx fallback)\n+                              args)))\n+                  in\n+                  (friendly_stringify cx fallback ty) ^ args_suffix\n+          end\n \n       | _ -> fallback ty (* TODO: we can do better for objects *)\n "}]}