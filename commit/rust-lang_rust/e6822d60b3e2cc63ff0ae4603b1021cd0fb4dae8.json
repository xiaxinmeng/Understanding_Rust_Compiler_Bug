{"sha": "e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ODIyZDYwYjNlMmNjNjNmZjBhZTQ2MDNiMTAyMWNkMGZiNGRhZTg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-14T08:03:10Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-14T08:23:47Z"}, "message": "make sure we find some things without validation or stacked borrows, respectively", "tree": {"sha": "3ff076728efbb16fbeed00f7f171fa3700ebe64f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ff076728efbb16fbeed00f7f171fa3700ebe64f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "html_url": "https://github.com/rust-lang/rust/commit/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "179e78d0ad95c60689f0df4cc6e3491b53b586ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/179e78d0ad95c60689f0df4cc6e3491b53b586ad", "html_url": "https://github.com/rust-lang/rust/commit/179e78d0ad95c60689f0df4cc6e3491b53b586ad"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "c2c4ce6726dfb9f1d04167d7ded1d3a0e3cfa95a", "filename": "tests/compile-fail/stacked_borrows/load_invalid_mut.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_mut.rs?ref=e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "patch": "@@ -1,3 +1,6 @@\n+// Make sure we catch this even without validation\n+// compile-flags: -Zmiri-disable-validation\n+\n // Make sure that we cannot load from memory a `&mut` that got already invalidated.\n fn main() {\n     let x = &mut 42;"}, {"sha": "7d681f649a107f623ef449813b5c32e7b55ba1d7", "filename": "tests/compile-fail/stacked_borrows/load_invalid_shr.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_shr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_shr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_shr.rs?ref=e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "patch": "@@ -1,3 +1,6 @@\n+// Make sure we catch this even without validation\n+// compile-flags: -Zmiri-disable-validation\n+\n // Make sure that we cannot load from memory a `&` that got already invalidated.\n fn main() {\n     let x = &mut 42;"}, {"sha": "0a67cfc5a1b362ead0f71b7a38b52d4398f2d4ed", "filename": "tests/compile-fail/unaligned_pointers/unaligned_ptr1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr1.rs?ref=e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "patch": "@@ -1,5 +1,5 @@\n-// This should fail even without validation\n-// compile-flags: -Zmiri-disable-validation\n+// This should fail even without validation or Stacked Borrows.\n+// compile-flags: -Zmiri-disable-validation -Zmiri-disable-stacked-borrows\n \n fn main() {\n     let x = [2u16, 3, 4]; // Make it big enough so we don't get an out-of-bounds error."}, {"sha": "b1fb2f4aa9762646d9ec8705bdab8cec1b355e9f", "filename": "tests/compile-fail/unaligned_pointers/unaligned_ptr2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr2.rs?ref=e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "patch": "@@ -1,5 +1,5 @@\n-// This should fail even without validation.\n-// compile-flags: -Zmiri-disable-validation\n+// This should fail even without validation or Stacked Borrows.\n+// compile-flags: -Zmiri-disable-validation -Zmiri-disable-stacked-borrows\n \n fn main() {\n     let x = [2u32, 3]; // Make it big enough so we don't get an out-of-bounds error."}, {"sha": "c5a3398384e495ea6830b306c83345825288de2d", "filename": "tests/compile-fail/unaligned_pointers/unaligned_ptr3.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr3.rs?ref=e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "patch": "@@ -1,5 +1,5 @@\n-// This should fail even without validation.\n-// compile-flags: -Zmiri-disable-validation\n+// This should fail even without validation or Stacked Borrows.\n+// compile-flags: -Zmiri-disable-validation -Zmiri-disable-stacked-borrows\n \n fn main() {\n     let x = [2u16, 3, 4, 5]; // Make it big enough so we don't get an out-of-bounds error."}, {"sha": "a83c6af21acfd62e2c3474d96c2e16c6472991ec", "filename": "tests/compile-fail/validity/dangling_ref1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref1.rs?ref=e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "patch": "@@ -1,3 +1,5 @@\n+// Make sure we catch this even without Stacked Borrows\n+// compile-flags: -Zmiri-disable-stacked-borrows\n use std::mem;\n \n fn main() {"}, {"sha": "7aff1a49785cc4b848aed83a96e6f4e7175dbc5a", "filename": "tests/compile-fail/validity/dangling_ref2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref2.rs?ref=e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "patch": "@@ -1,3 +1,5 @@\n+// Make sure we catch this even without Stacked Borrows\n+// compile-flags: -Zmiri-disable-stacked-borrows\n use std::mem;\n \n fn main() {"}, {"sha": "495a266a85dc64e382b33fa856e57592b4a34721", "filename": "tests/compile-fail/validity/dangling_ref3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref3.rs?ref=e6822d60b3e2cc63ff0ae4603b1021cd0fb4dae8", "patch": "@@ -1,3 +1,5 @@\n+// Make sure we catch this even without Stacked Borrows\n+// compile-flags: -Zmiri-disable-stacked-borrows\n use std::mem;\n \n fn dangling() -> *const u8 {"}]}