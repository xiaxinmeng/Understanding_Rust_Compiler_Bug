{"sha": "9207a13bfc48ebc8582555abd922748a69d2488c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMDdhMTNiZmM0OGViYzg1ODI1NTVhYmQ5MjI3NDhhNjlkMjQ4OGM=", "commit": {"author": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2020-02-22T19:05:32Z"}, "committer": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2020-02-22T19:17:04Z"}, "message": "get rid of lazy", "tree": {"sha": "5fabd3853012701727d300e86a7992b977943c83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fabd3853012701727d300e86a7992b977943c83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9207a13bfc48ebc8582555abd922748a69d2488c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9207a13bfc48ebc8582555abd922748a69d2488c", "html_url": "https://github.com/rust-lang/rust/commit/9207a13bfc48ebc8582555abd922748a69d2488c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9207a13bfc48ebc8582555abd922748a69d2488c/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74360571e9850840c093bdba2310fa7b8f898a0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/74360571e9850840c093bdba2310fa7b8f898a0f", "html_url": "https://github.com/rust-lang/rust/commit/74360571e9850840c093bdba2310fa7b8f898a0f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "2576514735bae4964539f81fe9c286da803b3c23", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9207a13bfc48ebc8582555abd922748a69d2488c/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9207a13bfc48ebc8582555abd922748a69d2488c/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=9207a13bfc48ebc8582555abd922748a69d2488c", "patch": "@@ -1392,7 +1392,7 @@ impl<'a, 'tcx> CrateMetadata {\n \n     fn generator_kind(&self, id: DefIndex) -> Option<hir::GeneratorKind> {\n         match self.kind(id) {\n-            EntryKind::Generator(data) => Some(data.decode(self)),\n+            EntryKind::Generator(data) => Some(data),\n             _ => None,\n         }\n     }"}, {"sha": "ee54f40ece5c8c2cafeb68c5845ce5c88f9dc865", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9207a13bfc48ebc8582555abd922748a69d2488c/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9207a13bfc48ebc8582555abd922748a69d2488c/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=9207a13bfc48ebc8582555abd922748a69d2488c", "patch": "@@ -1268,7 +1268,7 @@ impl EncodeContext<'tcx> {\n         record!(self.per_def.kind[def_id] <- match ty.kind {\n             ty::Generator(..) => {\n                 let data = self.tcx.generator_kind(def_id).unwrap();\n-                EntryKind::Generator(self.lazy(data))\n+                EntryKind::Generator(data)\n             }\n \n             ty::Closure(..) => EntryKind::Closure,"}, {"sha": "01a3f6c560f1bd1e3c3174a302022a1987827005", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9207a13bfc48ebc8582555abd922748a69d2488c/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9207a13bfc48ebc8582555abd922748a69d2488c/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=9207a13bfc48ebc8582555abd922748a69d2488c", "patch": "@@ -302,7 +302,7 @@ enum EntryKind {\n     Mod(Lazy<ModData>),\n     MacroDef(Lazy<MacroDef>),\n     Closure,\n-    Generator(Lazy<hir::GeneratorKind>),\n+    Generator(hir::GeneratorKind),\n     Trait(Lazy<TraitData>),\n     Impl(Lazy<ImplData>),\n     Method(Lazy<MethodData>),"}]}