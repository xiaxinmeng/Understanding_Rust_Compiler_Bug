{"sha": "f6906ba11b1d8148892aec733e8c7dd147ccc565", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2OTA2YmExMWIxZDgxNDg4OTJhZWM3MzNlOGM3ZGQxNDdjY2M1NjU=", "commit": {"author": {"name": "Baoshan Pang", "email": "baoshan.pang@windriver.com", "date": "2019-07-29T17:19:59Z"}, "committer": {"name": "Baoshan Pang", "email": "baoshan.pang@windriver.com", "date": "2019-07-29T17:19:59Z"}, "message": "use gloabl variable 'environ' to pass environments to rtpSpawn", "tree": {"sha": "45c68b5ecc4fc268e726ecf55570d80f65e659f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45c68b5ecc4fc268e726ecf55570d80f65e659f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6906ba11b1d8148892aec733e8c7dd147ccc565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6906ba11b1d8148892aec733e8c7dd147ccc565", "html_url": "https://github.com/rust-lang/rust/commit/f6906ba11b1d8148892aec733e8c7dd147ccc565", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6906ba11b1d8148892aec733e8c7dd147ccc565/comments", "author": {"login": "bpangWR", "id": 53950092, "node_id": "MDQ6VXNlcjUzOTUwMDky", "avatar_url": "https://avatars.githubusercontent.com/u/53950092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpangWR", "html_url": "https://github.com/bpangWR", "followers_url": "https://api.github.com/users/bpangWR/followers", "following_url": "https://api.github.com/users/bpangWR/following{/other_user}", "gists_url": "https://api.github.com/users/bpangWR/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpangWR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpangWR/subscriptions", "organizations_url": "https://api.github.com/users/bpangWR/orgs", "repos_url": "https://api.github.com/users/bpangWR/repos", "events_url": "https://api.github.com/users/bpangWR/events{/privacy}", "received_events_url": "https://api.github.com/users/bpangWR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bpangWR", "id": 53950092, "node_id": "MDQ6VXNlcjUzOTUwMDky", "avatar_url": "https://avatars.githubusercontent.com/u/53950092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpangWR", "html_url": "https://github.com/bpangWR", "followers_url": "https://api.github.com/users/bpangWR/followers", "following_url": "https://api.github.com/users/bpangWR/following{/other_user}", "gists_url": "https://api.github.com/users/bpangWR/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpangWR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpangWR/subscriptions", "organizations_url": "https://api.github.com/users/bpangWR/orgs", "repos_url": "https://api.github.com/users/bpangWR/repos", "events_url": "https://api.github.com/users/bpangWR/events{/privacy}", "received_events_url": "https://api.github.com/users/bpangWR/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04b88a9eba8abbac87eddcb2998beea09589c2c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/04b88a9eba8abbac87eddcb2998beea09589c2c9", "html_url": "https://github.com/rust-lang/rust/commit/04b88a9eba8abbac87eddcb2998beea09589c2c9"}], "stats": {"total": 17, "additions": 3, "deletions": 14}, "files": [{"sha": "b07966fa2062654a65c48e02957c67d0b35d4653", "filename": "src/libstd/sys/vxworks/process/process_vxworks.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f6906ba11b1d8148892aec733e8c7dd147ccc565/src%2Flibstd%2Fsys%2Fvxworks%2Fprocess%2Fprocess_vxworks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6906ba11b1d8148892aec733e8c7dd147ccc565/src%2Flibstd%2Fsys%2Fvxworks%2Fprocess%2Fprocess_vxworks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fprocess%2Fprocess_vxworks.rs?ref=f6906ba11b1d8148892aec733e8c7dd147ccc565", "patch": "@@ -1,7 +1,7 @@\n use crate::io::{self, Error, ErrorKind};\n-use libc::{self, c_int};\n+use libc::{self, c_int, c_char};\n use libc::{RTP_ID};\n-\n+use crate::sys;\n use crate::sys::cvt;\n use crate::sys::process::rtp;\n use crate::sys::process::process_common::*;\n@@ -16,8 +16,6 @@ impl Command {\n         use crate::sys::{cvt_r};\n         const CLOEXEC_MSG_FOOTER: &'static [u8] = b\"NOEX\";\n \n-        let envp = self.capture_env();\n-\n         if self.saw_nul() {\n             return Err(io::Error::new(ErrorKind::InvalidInput,\n                                       \"nul byte found in provided data\"));\n@@ -54,19 +52,10 @@ impl Command {\n                 t!(cvt(libc::chdir(cwd.as_ptr())));\n             }\n \n-            //            let envp = envp.map(|c| c.as_ptr())\n-            //                .unwrap_or(*sys::os::environ() as *const _);\n-            // FIXME: https://github.com/rust-lang/rust/issues/61993\n-            let envp_empty = CStringArray::with_capacity(0);\n-            let envp = match envp {\n-                Some(x) => x,\n-                None => envp_empty,\n-            };\n-            let envp = envp.as_ptr();\n             let ret = rtp::rtpSpawn(\n                 self.get_argv()[0],                   // executing program\n                 self.get_argv().as_ptr() as *const _, // argv\n-                envp as *const _,                     // environment variable pointers\n+                *sys::os::environ() as *const *const c_char,\n                 100 as c_int,                         // initial priority\n                 0x16000,                                    // initial stack size. 0 defaults\n                                                       // to 0x4000 in 32 bit and 0x8000 in 64 bit"}]}