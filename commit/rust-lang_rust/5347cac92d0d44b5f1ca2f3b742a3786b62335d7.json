{"sha": "5347cac92d0d44b5f1ca2f3b742a3786b62335d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNDdjYWM5MmQwZDQ0YjVmMWNhMmYzYjc0MmEzNzg2YjYyMzM1ZDc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-03T20:31:25Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-03T20:35:49Z"}, "message": "rustc: Handle n-ary tag constructors in iter_structural_ty (which lets us process their refcounts correctly)", "tree": {"sha": "fc97740bd27696d7559c32ede7a6297b7464e28b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc97740bd27696d7559c32ede7a6297b7464e28b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5347cac92d0d44b5f1ca2f3b742a3786b62335d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5347cac92d0d44b5f1ca2f3b742a3786b62335d7", "html_url": "https://github.com/rust-lang/rust/commit/5347cac92d0d44b5f1ca2f3b742a3786b62335d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5347cac92d0d44b5f1ca2f3b742a3786b62335d7/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4316df63231dbf9c698e1bf464f7cecafea54a0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4316df63231dbf9c698e1bf464f7cecafea54a0c", "html_url": "https://github.com/rust-lang/rust/commit/4316df63231dbf9c698e1bf464f7cecafea54a0c"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "378c01c2a7e279fec121daa099acb86bd1e9382e", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5347cac92d0d44b5f1ca2f3b742a3786b62335d7/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5347cac92d0d44b5f1ca2f3b742a3786b62335d7/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=5347cac92d0d44b5f1ca2f3b742a3786b62335d7", "patch": "@@ -604,15 +604,28 @@ fn iter_structural_ty(@block_ctxt cx,\n \n                 alt (variant._1) {\n                     case (n_ary) {\n-                        // FIXME: broken at the moment, causes type_is_binding\n-                        // errors; need to unpack the fn type returned by\n-                        // ann_to_type.\n                         let vec[ValueRef] vals = vec(C_int(0), C_int(1),\n                                                      C_int(i as int));\n-                        auto llfld = r.bcx.build.GEP(v, vals);\n-                        auto ty = typeck.ann_to_type(variants.(i).ann);\n-                        r = f(variant_cx, llfld, ty);\n-                        r.bcx.build.Br(next_cx.llbb);\n+                        auto llvar = variant_cx.build.GEP(v, vals);\n+\n+                        auto fn_ty = typeck.ann_to_type(variants.(i).ann); \n+                        alt (fn_ty.struct) {\n+                            case (typeck.ty_fn(?args, _)) {\n+                                auto j = 0u;\n+                                for (typeck.arg a in args) {\n+                                    auto idx = vec(C_int(0), C_int(j as int));\n+                                    auto llfp = variant_cx.build.GEP(llvar,\n+                                                                     idx);\n+                                    auto llfld = variant_cx.build.Load(llfp);\n+                                    auto res = f(variant_cx, llfld, a.ty);\n+                                    variant_cx = res.bcx;\n+                                    j += 1u;\n+                                }\n+                            }\n+                            case (_) { fail; }\n+                        }\n+\n+                        variant_cx.build.Br(next_cx.llbb);\n                     }\n                     case (nullary) {\n                         // Nothing to do."}]}