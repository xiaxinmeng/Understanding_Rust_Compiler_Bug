{"sha": "606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "node_id": "C_kwDOAAsO6NoAKDYwNjg5NGViMGIxZGNjM2E0NjE2YWZmNGI1NGRiZDE5YTJhNDZiYTU", "commit": {"author": {"name": "Yacin Tmimi", "email": "yacintmimi@gmail.com", "date": "2021-12-19T21:47:13Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-02-04T00:52:58Z"}, "message": "Retain trailing separator when extracting the last inline post comment\n\nFixes 5042\n\nPreviously, trailing commas were removed from the last inline comment.\nThis lead to rustfmt refusing to format code snippets because\nthe original comment did not match the rewritten comment.\n\nNow, when rustfmt extracts the last inline comment it leaves trailing\nseparators alone. Rustfmt does not need to remove these separators\nbecause they are commented out.", "tree": {"sha": "24bde5880007ee32a51f94c164c2879c16b76916", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24bde5880007ee32a51f94c164c2879c16b76916"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "html_url": "https://github.com/rust-lang/rust/commit/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/comments", "author": {"login": "ytmimi", "id": 29028348, "node_id": "MDQ6VXNlcjI5MDI4MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/29028348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytmimi", "html_url": "https://github.com/ytmimi", "followers_url": "https://api.github.com/users/ytmimi/followers", "following_url": "https://api.github.com/users/ytmimi/following{/other_user}", "gists_url": "https://api.github.com/users/ytmimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytmimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytmimi/subscriptions", "organizations_url": "https://api.github.com/users/ytmimi/orgs", "repos_url": "https://api.github.com/users/ytmimi/repos", "events_url": "https://api.github.com/users/ytmimi/events{/privacy}", "received_events_url": "https://api.github.com/users/ytmimi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "368a9b7cef25c22c3e836453e73d8584b251b578", "url": "https://api.github.com/repos/rust-lang/rust/commits/368a9b7cef25c22c3e836453e73d8584b251b578", "html_url": "https://github.com/rust-lang/rust/commit/368a9b7cef25c22c3e836453e73d8584b251b578"}], "stats": {"total": 156, "additions": 149, "deletions": 7}, "files": [{"sha": "97eea19f93210f70376d63c83a80b7d81e59adaf", "filename": "src/lists.rs", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "patch": "@@ -611,15 +611,30 @@ pub(crate) fn extract_post_comment(\n     post_snippet: &str,\n     comment_end: usize,\n     separator: &str,\n+    is_last: bool,\n ) -> Option<String> {\n     let white_space: &[_] = &[' ', '\\t'];\n \n     // Cleanup post-comment: strip separators and whitespace.\n     let post_snippet = post_snippet[..comment_end].trim();\n+\n+    let last_inline_comment_ends_with_separator = if is_last {\n+        if let Some(line) = post_snippet.lines().last() {\n+            line.ends_with(separator) && line.trim().starts_with(\"//\")\n+        } else {\n+            false\n+        }\n+    } else {\n+        false\n+    };\n+\n     let post_snippet_trimmed = if post_snippet.starts_with(|c| c == ',' || c == ':') {\n         post_snippet[1..].trim_matches(white_space)\n     } else if let Some(stripped) = post_snippet.strip_prefix(separator) {\n         stripped.trim_matches(white_space)\n+    } else if last_inline_comment_ends_with_separator {\n+        // since we're on the last item it's fine to keep any trailing separators in comments\n+        post_snippet.trim_matches(white_space)\n     }\n     // not comment or over two lines\n     else if post_snippet.ends_with(',')\n@@ -748,14 +763,12 @@ where\n                 .snippet_provider\n                 .span_to_snippet(mk_sp((self.get_hi)(&item), next_start))\n                 .unwrap_or(\"\");\n-            let comment_end = get_comment_end(\n-                post_snippet,\n-                self.separator,\n-                self.terminator,\n-                self.inner.peek().is_none(),\n-            );\n+            let is_last = self.inner.peek().is_none();\n+            let comment_end =\n+                get_comment_end(post_snippet, self.separator, self.terminator, is_last);\n             let new_lines = has_extra_newline(post_snippet, comment_end);\n-            let post_comment = extract_post_comment(post_snippet, comment_end, self.separator);\n+            let post_comment =\n+                extract_post_comment(post_snippet, comment_end, self.separator, is_last);\n \n             self.prev_span_end = (self.get_hi)(&item) + BytePos(comment_end as u32);\n "}, {"sha": "5d171f32a1aea10b1bfdd19915f44690df52eab1", "filename": "tests/source/issue-5042/multi-line_comment_with_trailing_comma.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Fsource%2Fissue-5042%2Fmulti-line_comment_with_trailing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Fsource%2Fissue-5042%2Fmulti-line_comment_with_trailing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-5042%2Fmulti-line_comment_with_trailing_comma.rs?ref=606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "patch": "@@ -0,0 +1,24 @@\n+fn main() {\n+    // 5042 deals with trailing commas, not the indentation issue of these comments\n+    // When a future PR fixes the inentation issues these test can be updated\n+    let _ = std::ops::Add::add(10, 20\n+        // ...\n+        // ...,\n+        );\n+\n+    let _ = std::ops::Add::add(10, 20\n+        /* ... */\n+        // ...,\n+        );\n+\n+    let _ = std::ops::Add::add(10, 20\n+        // ...,\n+        // ...,\n+        );\n+\n+    let _ = std::ops::Add::add(10, 20\n+        // ...,\n+        /* ...\n+        */,\n+        );\n+}"}, {"sha": "b8a824b34b796e32d611c4b024385f5e2959a740", "filename": "tests/source/issue-5042/multi-line_comment_without_trailing_comma.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Fsource%2Fissue-5042%2Fmulti-line_comment_without_trailing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Fsource%2Fissue-5042%2Fmulti-line_comment_without_trailing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-5042%2Fmulti-line_comment_without_trailing_comma.rs?ref=606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "patch": "@@ -0,0 +1,24 @@\n+fn main() {\n+    // 5042 deals with trailing commas, not the indentation issue of these comments\n+    // When a future PR fixes the inentation issues these test can be updated\n+    let _ = std::ops::Add::add(10, 20\n+        // ...\n+        // ...\n+        );\n+\n+    let _ = std::ops::Add::add(10, 20\n+        /* ... */\n+        // ...\n+        );\n+\n+    let _ = std::ops::Add::add(10, 20\n+        // ...\n+        // ...\n+        );\n+\n+    let _ = std::ops::Add::add(10, 20\n+        // ...\n+        /* ...\n+        */\n+        );\n+}"}, {"sha": "bd765b7b41f4972d29cdec26c8ae4021e4d92d06", "filename": "tests/source/issue-5042/single-line_comment_with_trailing_comma.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Fsource%2Fissue-5042%2Fsingle-line_comment_with_trailing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Fsource%2Fissue-5042%2Fsingle-line_comment_with_trailing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-5042%2Fsingle-line_comment_with_trailing_comma.rs?ref=606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "patch": "@@ -0,0 +1,9 @@\n+fn main() {\n+    let _ = std::ops::Add::add(10, 20\n+        // ...,\n+        );\n+\n+    let _ = std::ops::Add::add(10, 20\n+        /* ... */,\n+        );\n+}"}, {"sha": "2ed8de875add8b87722dbda589b108ca26ac8969", "filename": "tests/source/issue-5042/single-line_comment_without_trailing_comma.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Fsource%2Fissue-5042%2Fsingle-line_comment_without_trailing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Fsource%2Fissue-5042%2Fsingle-line_comment_without_trailing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-5042%2Fsingle-line_comment_without_trailing_comma.rs?ref=606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "patch": "@@ -0,0 +1,10 @@\n+fn main() {\n+    let _ = std::ops::Add::add(10, 20\n+        // ...\n+        );\n+\n+    let _ = std::ops::Add::add(10, 20\n+        /* ... */\n+        );\n+}\n+"}, {"sha": "1ae1212b488d9112a36be37564bf2db2658ab729", "filename": "tests/target/issue-5042/multi-line_comment_with_trailing_comma.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Ftarget%2Fissue-5042%2Fmulti-line_comment_with_trailing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Ftarget%2Fissue-5042%2Fmulti-line_comment_with_trailing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-5042%2Fmulti-line_comment_with_trailing_comma.rs?ref=606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "patch": "@@ -0,0 +1,24 @@\n+fn main() {\n+    // 5042 deals with trailing commas, not the indentation issue of these comments\n+    // When a future PR fixes the inentation issues these test can be updated\n+    let _ = std::ops::Add::add(\n+        10, 20, // ...\n+           // ...,\n+    );\n+\n+    let _ = std::ops::Add::add(\n+        10, 20, /* ... */\n+           // ...,\n+    );\n+\n+    let _ = std::ops::Add::add(\n+        10, 20, // ...,\n+           // ...,\n+    );\n+\n+    let _ = std::ops::Add::add(\n+        10, 20, // ...,\n+           /* ...\n+            */\n+    );\n+}"}, {"sha": "30d174664c9cfbf5fa6579d314a5ef72caea3abc", "filename": "tests/target/issue-5042/multi-line_comment_without_trailing_comma.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Ftarget%2Fissue-5042%2Fmulti-line_comment_without_trailing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Ftarget%2Fissue-5042%2Fmulti-line_comment_without_trailing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-5042%2Fmulti-line_comment_without_trailing_comma.rs?ref=606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "patch": "@@ -0,0 +1,24 @@\n+fn main() {\n+    // 5042 deals with trailing commas, not the indentation issue of these comments\n+    // When a future PR fixes the inentation issues these test can be updated\n+    let _ = std::ops::Add::add(\n+        10, 20, // ...\n+           // ...\n+    );\n+\n+    let _ = std::ops::Add::add(\n+        10, 20, /* ... */\n+           // ...\n+    );\n+\n+    let _ = std::ops::Add::add(\n+        10, 20, // ...\n+           // ...\n+    );\n+\n+    let _ = std::ops::Add::add(\n+        10, 20, // ...\n+           /* ...\n+            */\n+    );\n+}"}, {"sha": "87b651dd285efa6c1421993db791e588b23fb259", "filename": "tests/target/issue-5042/single-line_comment_with_trailing_comma.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Ftarget%2Fissue-5042%2Fsingle-line_comment_with_trailing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Ftarget%2Fissue-5042%2Fsingle-line_comment_with_trailing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-5042%2Fsingle-line_comment_with_trailing_comma.rs?ref=606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "patch": "@@ -0,0 +1,7 @@\n+fn main() {\n+    let _ = std::ops::Add::add(\n+        10, 20, // ...,\n+    );\n+\n+    let _ = std::ops::Add::add(10, 20 /* ... */);\n+}"}, {"sha": "116df86a4b55468d48325adbb0f74fe43789be82", "filename": "tests/target/issue-5042/single-line_comment_without_trailing_comma.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Ftarget%2Fissue-5042%2Fsingle-line_comment_without_trailing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5/tests%2Ftarget%2Fissue-5042%2Fsingle-line_comment_without_trailing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-5042%2Fsingle-line_comment_without_trailing_comma.rs?ref=606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "patch": "@@ -0,0 +1,7 @@\n+fn main() {\n+    let _ = std::ops::Add::add(\n+        10, 20, // ...\n+    );\n+\n+    let _ = std::ops::Add::add(10, 20 /* ... */);\n+}"}]}