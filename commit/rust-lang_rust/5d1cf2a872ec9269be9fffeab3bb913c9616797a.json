{"sha": "5d1cf2a872ec9269be9fffeab3bb913c9616797a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMWNmMmE4NzJlYzkyNjliZTlmZmZlYWIzYmI5MTNjOTYxNjc5N2E=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-21T23:43:38Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-21T23:43:38Z"}, "message": "Out-of-order-code typo. Snapshot again.", "tree": {"sha": "435681e354aa334aa1ad9247cd731c5c15121787", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/435681e354aa334aa1ad9247cd731c5c15121787"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d1cf2a872ec9269be9fffeab3bb913c9616797a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d1cf2a872ec9269be9fffeab3bb913c9616797a", "html_url": "https://github.com/rust-lang/rust/commit/5d1cf2a872ec9269be9fffeab3bb913c9616797a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d1cf2a872ec9269be9fffeab3bb913c9616797a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fd5802c654c88dde6795b7652b20089dca962a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd5802c654c88dde6795b7652b20089dca962a4", "html_url": "https://github.com/rust-lang/rust/commit/8fd5802c654c88dde6795b7652b20089dca962a4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d12943202c768bac9519c137e3370a21d52f7017", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1cf2a872ec9269be9fffeab3bb913c9616797a/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1cf2a872ec9269be9fffeab3bb913c9616797a/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=5d1cf2a872ec9269be9fffeab3bb913c9616797a", "patch": "@@ -910,8 +910,8 @@ fn parse_bottom_expr(p: parser) -> @ast::expr {\n             ex = ast::expr_fail(some(e));\n         } else { ex = ast::expr_fail(none); }\n     } else if eat_word(p, \"log_full\") {\n-        let e = parse_expr(p);\n         let lvl = parse_expr(p);\n+        let e = parse_expr(p);\n         ex = ast::expr_log(2, lvl, e);\n         hi = e.span.hi;\n     } else if eat_word(p, \"log\") {"}]}