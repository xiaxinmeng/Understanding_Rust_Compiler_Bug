{"sha": "302f99693f09fae5e9323cfa0160f2c6ebd6b274", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMmY5OTY5M2YwOWZhZTVlOTMyM2NmYTAxNjBmMmM2ZWJkNmIyNzQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-06-12T17:27:23Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-06-15T08:13:55Z"}, "message": "Add E0611", "tree": {"sha": "50092335f37ba0b28bc87833b05e125c7cf58cca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50092335f37ba0b28bc87833b05e125c7cf58cca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/302f99693f09fae5e9323cfa0160f2c6ebd6b274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/302f99693f09fae5e9323cfa0160f2c6ebd6b274", "html_url": "https://github.com/rust-lang/rust/commit/302f99693f09fae5e9323cfa0160f2c6ebd6b274", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/302f99693f09fae5e9323cfa0160f2c6ebd6b274/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0189cec5d4e782ca17dd510934e93a7bd327ba86", "url": "https://api.github.com/repos/rust-lang/rust/commits/0189cec5d4e782ca17dd510934e93a7bd327ba86", "html_url": "https://github.com/rust-lang/rust/commit/0189cec5d4e782ca17dd510934e93a7bd327ba86"}], "stats": {"total": 83, "additions": 81, "deletions": 2}, "files": [{"sha": "61d140a245aa766082663cb2b59ddc16063f76e8", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/302f99693f09fae5e9323cfa0160f2c6ebd6b274/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302f99693f09fae5e9323cfa0160f2c6ebd6b274/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=302f99693f09fae5e9323cfa0160f2c6ebd6b274", "patch": "@@ -3051,8 +3051,9 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n \n         if let Some((did, field_ty)) = private_candidate {\n             let struct_path = self.tcx().item_path_str(did);\n-            let msg = format!(\"field `{}` of struct `{}` is private\", idx.node, struct_path);\n-            self.tcx().sess.span_err(expr.span, &msg);\n+            struct_span_err!(self.tcx().sess, expr.span, E0611,\n+                             \"field `{}` of tuple-struct `{}` is private\",\n+                             idx.node, struct_path);\n             return field_ty;\n         }\n "}, {"sha": "223206fffc5010cc4e00dc250be0f74598b66b30", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/302f99693f09fae5e9323cfa0160f2c6ebd6b274/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302f99693f09fae5e9323cfa0160f2c6ebd6b274/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=302f99693f09fae5e9323cfa0160f2c6ebd6b274", "patch": "@@ -4152,6 +4152,62 @@ println!(\"x: {}, y: {}\", variable.x, variable.y);\n For more information see The Rust Book: https://doc.rust-lang.org/book/\n \"##,\n \n+E0611: r##\"\n+Attempted to access a private field on a tuple-struct.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0611\n+mod some_module {\n+    pub struct Foo(u32);\n+\n+    impl Foo {\n+        pub fn new() -> Foo { Foo(0) }\n+    }\n+}\n+\n+let y = some_module::Foo::new();\n+println!(\"{}\", y.0); // error: field `0` of tuple-struct `some_module::Foo`\n+                     //        is private\n+```\n+\n+Since the field is private, you have two solutions:\n+\n+1) Make the field public:\n+\n+```\n+mod some_module {\n+    pub struct Foo(pub u32); // The field is now public.\n+\n+    impl Foo {\n+        pub fn new() -> Foo { Foo(0) }\n+    }\n+}\n+\n+let y = some_module::Foo::new();\n+println!(\"{}\", y.0); // So we can access it directly.\n+```\n+\n+2) Add a getter function to keep the field private but allow for accessing its\n+value:\n+\n+```\n+mod some_module {\n+    pub struct Foo(u32);\n+\n+    impl Foo {\n+        pub fn new() -> Foo { Foo(0) }\n+\n+        // We add the getter function.\n+        pub fn get(&self) -> &u32 { self.0 }\n+    }\n+}\n+\n+let y = some_module::Foo::new();\n+println!(\"{}\", y.get()); // So we can get the value through the function.\n+```\n+\"##,\n+\n E0617: r##\"\n Attempted to pass an invalid type of variable into a variadic function.\n "}, {"sha": "1e392d194b1d83d85f1993c28c1cd4d83e190adc", "filename": "src/test/compile-fail/E0611.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/302f99693f09fae5e9323cfa0160f2c6ebd6b274/src%2Ftest%2Fcompile-fail%2FE0611.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302f99693f09fae5e9323cfa0160f2c6ebd6b274/src%2Ftest%2Fcompile-fail%2FE0611.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0611.rs?ref=302f99693f09fae5e9323cfa0160f2c6ebd6b274", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod a {\n+    pub struct Foo(u32);\n+\n+    impl Foo {\n+        pub fn new() -> Foo { Foo(0) }\n+    }\n+}\n+\n+fn main() {\n+   let y = a::Foo::new();\n+   y.0; //~ ERROR E0611\n+}"}]}