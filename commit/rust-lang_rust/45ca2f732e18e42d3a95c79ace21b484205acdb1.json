{"sha": "45ca2f732e18e42d3a95c79ace21b484205acdb1", "node_id": "C_kwDOAAsO6NoAKDQ1Y2EyZjczMmUxOGU0MmQzYTk1Yzc5YWNlMjFiNDg0MjA1YWNkYjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-29T02:03:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-29T02:03:01Z"}, "message": "Rollup merge of #112029 - jieyouxu:typo-const-in-const-param-def, r=cjgillot\n\nRecover upon mistyped error on typo'd `const` in const param def\n\nAnd add machine-applicable fix for the typo'd `const` keyword.\n\n### Before\n\n```\nerror: expected one of `,`, `:`, `=`, or `>`, found `N`\n --> src/lib.rs:1:18\n  |\n1 | pub fn bar<Const N: u8>() {}\n  |                  ^ expected one of `,`, `:`, `=`, or `>`\n```\n\n### After This PR\n\n```\nerror: `const` keyword was mistyped as `Const`\n --> test.rs:1:8\n  |\n1 | fn bar<Const N: u8>() {}\n  |        ^^^^^\n  |\nhelp: use the `const` keyword\n  |\n1 | fn bar<const N: u8>() {}\n  |        ~~~~~\n\n```\n\nFixes #111941.", "tree": {"sha": "7c3a73bfafcaa6f231c88fe6c3dc3f79b0aceee1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c3a73bfafcaa6f231c88fe6c3dc3f79b0aceee1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45ca2f732e18e42d3a95c79ace21b484205acdb1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkdAfVCRBK7hj4Ov3rIwAAloAIAF3JyEN+a5cP6dD+HFQ/xw4F\nIpkxVsFiom6lBirSHx1gHResALqk8VrwWcB//T62FwsxBMYF0WnAXogNB8pSmLdT\njjzzoATG02+B7Wv7b40ntcC6v1+BL2TayVuAXSDogI4r+M+ag7cfPkay8hVrpsbK\n6ul88hg31OcYofE2OmPFvKtXvjE8YpK5NidQsUzmsy4uRZiOEF0pifDsaRldBl8Y\n/ogIcnHznyD2ISlpoHnnwpZjiwxaJ0J7fmn0P4U6rPvfb8q85UgoMOHX78sQxe3/\nnp2mFbakLUDyfTuziGo8RC07yh/AXu/AXB9IuvqW5r2lGMy7U1WxJsbzjCFBQBE=\n=NKXU\n-----END PGP SIGNATURE-----\n", "payload": "tree 7c3a73bfafcaa6f231c88fe6c3dc3f79b0aceee1\nparent 089677eb32af83318467325edbef9b64053df532\nparent 41f5a30690884578f697727c38139728131217ea\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685325781 +0200\ncommitter GitHub <noreply@github.com> 1685325781 +0200\n\nRollup merge of #112029 - jieyouxu:typo-const-in-const-param-def, r=cjgillot\n\nRecover upon mistyped error on typo'd `const` in const param def\n\nAnd add machine-applicable fix for the typo'd `const` keyword.\n\n### Before\n\n```\nerror: expected one of `,`, `:`, `=`, or `>`, found `N`\n --> src/lib.rs:1:18\n  |\n1 | pub fn bar<Const N: u8>() {}\n  |                  ^ expected one of `,`, `:`, `=`, or `>`\n```\n\n### After This PR\n\n```\nerror: `const` keyword was mistyped as `Const`\n --> test.rs:1:8\n  |\n1 | fn bar<Const N: u8>() {}\n  |        ^^^^^\n  |\nhelp: use the `const` keyword\n  |\n1 | fn bar<const N: u8>() {}\n  |        ~~~~~\n\n```\n\nFixes #111941.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45ca2f732e18e42d3a95c79ace21b484205acdb1", "html_url": "https://github.com/rust-lang/rust/commit/45ca2f732e18e42d3a95c79ace21b484205acdb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45ca2f732e18e42d3a95c79ace21b484205acdb1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "089677eb32af83318467325edbef9b64053df532", "url": "https://api.github.com/repos/rust-lang/rust/commits/089677eb32af83318467325edbef9b64053df532", "html_url": "https://github.com/rust-lang/rust/commit/089677eb32af83318467325edbef9b64053df532"}, {"sha": "41f5a30690884578f697727c38139728131217ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/41f5a30690884578f697727c38139728131217ea", "html_url": "https://github.com/rust-lang/rust/commit/41f5a30690884578f697727c38139728131217ea"}], "stats": {"total": 106, "additions": 106, "deletions": 0}, "files": [{"sha": "8ab38c4fb8bea8f3512a92053b234d01197bd6e8", "filename": "compiler/rustc_parse/src/parser/generics.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/45ca2f732e18e42d3a95c79ace21b484205acdb1/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45ca2f732e18e42d3a95c79ace21b484205acdb1/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs?ref=45ca2f732e18e42d3a95c79ace21b484205acdb1", "patch": "@@ -43,6 +43,15 @@ impl<'a> Parser<'a> {\n     fn parse_ty_param(&mut self, preceding_attrs: AttrVec) -> PResult<'a, GenericParam> {\n         let ident = self.parse_ident()?;\n \n+        // We might have a typo'd `Const` that was parsed as a type parameter.\n+        if self.may_recover()\n+            && ident.name.as_str().to_ascii_lowercase() == kw::Const.as_str()\n+            && self.check_ident()\n+        // `Const` followed by IDENT\n+        {\n+            return Ok(self.recover_const_param_with_mistyped_const(preceding_attrs, ident)?);\n+        }\n+\n         // Parse optional colon and param bounds.\n         let mut colon_span = None;\n         let bounds = if self.eat(&token::Colon) {\n@@ -120,6 +129,41 @@ impl<'a> Parser<'a> {\n         })\n     }\n \n+    pub(crate) fn recover_const_param_with_mistyped_const(\n+        &mut self,\n+        preceding_attrs: AttrVec,\n+        mistyped_const_ident: Ident,\n+    ) -> PResult<'a, GenericParam> {\n+        let ident = self.parse_ident()?;\n+        self.expect(&token::Colon)?;\n+        let ty = self.parse_ty()?;\n+\n+        // Parse optional const generics default value.\n+        let default = if self.eat(&token::Eq) { Some(self.parse_const_arg()?) } else { None };\n+\n+        let mut err = self.struct_span_err(\n+            mistyped_const_ident.span,\n+            format!(\"`const` keyword was mistyped as `{}`\", mistyped_const_ident.as_str()),\n+        );\n+        err.span_suggestion_verbose(\n+            mistyped_const_ident.span,\n+            \"use the `const` keyword\",\n+            kw::Const.as_str(),\n+            Applicability::MachineApplicable,\n+        );\n+        err.emit();\n+\n+        Ok(GenericParam {\n+            ident,\n+            id: ast::DUMMY_NODE_ID,\n+            attrs: preceding_attrs,\n+            bounds: Vec::new(),\n+            kind: GenericParamKind::Const { ty, kw_span: mistyped_const_ident.span, default },\n+            is_placeholder: false,\n+            colon_span: None,\n+        })\n+    }\n+\n     /// Parses a (possibly empty) list of lifetime and type parameters, possibly including\n     /// a trailing comma and erroneous trailing attributes.\n     pub(super) fn parse_generic_params(&mut self) -> PResult<'a, ThinVec<ast::GenericParam>> {"}, {"sha": "85d3ebba57a3b7af027dcd2ceef517dc7cebd167", "filename": "tests/ui/parser/typod-const-in-const-param-def.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/45ca2f732e18e42d3a95c79ace21b484205acdb1/tests%2Fui%2Fparser%2Ftypod-const-in-const-param-def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45ca2f732e18e42d3a95c79ace21b484205acdb1/tests%2Fui%2Fparser%2Ftypod-const-in-const-param-def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftypod-const-in-const-param-def.rs?ref=45ca2f732e18e42d3a95c79ace21b484205acdb1", "patch": "@@ -0,0 +1,16 @@\n+pub fn foo<Const N: u8>() {}\n+//~^ ERROR `const` keyword was mistyped as `Const`\n+\n+pub fn bar<Const>() {}\n+// OK\n+\n+pub fn baz<Const N: u8, T>() {}\n+//~^ ERROR `const` keyword was mistyped as `Const`\n+\n+pub fn qux<T, Const N: u8>() {}\n+//~^ ERROR `const` keyword was mistyped as `Const`\n+\n+pub fn quux<T, Const N: u8, U>() {}\n+//~^ ERROR `const` keyword was mistyped as `Const`\n+\n+fn main() {}"}, {"sha": "75d73c6ea878a59b90066e7e6335656ef4f0d30e", "filename": "tests/ui/parser/typod-const-in-const-param-def.stderr", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/45ca2f732e18e42d3a95c79ace21b484205acdb1/tests%2Fui%2Fparser%2Ftypod-const-in-const-param-def.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45ca2f732e18e42d3a95c79ace21b484205acdb1/tests%2Fui%2Fparser%2Ftypod-const-in-const-param-def.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftypod-const-in-const-param-def.stderr?ref=45ca2f732e18e42d3a95c79ace21b484205acdb1", "patch": "@@ -0,0 +1,46 @@\n+error: `const` keyword was mistyped as `Const`\n+  --> $DIR/typod-const-in-const-param-def.rs:1:12\n+   |\n+LL | pub fn foo<Const N: u8>() {}\n+   |            ^^^^^\n+   |\n+help: use the `const` keyword\n+   |\n+LL | pub fn foo<const N: u8>() {}\n+   |            ~~~~~\n+\n+error: `const` keyword was mistyped as `Const`\n+  --> $DIR/typod-const-in-const-param-def.rs:7:12\n+   |\n+LL | pub fn baz<Const N: u8, T>() {}\n+   |            ^^^^^\n+   |\n+help: use the `const` keyword\n+   |\n+LL | pub fn baz<const N: u8, T>() {}\n+   |            ~~~~~\n+\n+error: `const` keyword was mistyped as `Const`\n+  --> $DIR/typod-const-in-const-param-def.rs:10:15\n+   |\n+LL | pub fn qux<T, Const N: u8>() {}\n+   |               ^^^^^\n+   |\n+help: use the `const` keyword\n+   |\n+LL | pub fn qux<T, const N: u8>() {}\n+   |               ~~~~~\n+\n+error: `const` keyword was mistyped as `Const`\n+  --> $DIR/typod-const-in-const-param-def.rs:13:16\n+   |\n+LL | pub fn quux<T, Const N: u8, U>() {}\n+   |                ^^^^^\n+   |\n+help: use the `const` keyword\n+   |\n+LL | pub fn quux<T, const N: u8, U>() {}\n+   |                ~~~~~\n+\n+error: aborting due to 4 previous errors\n+"}]}