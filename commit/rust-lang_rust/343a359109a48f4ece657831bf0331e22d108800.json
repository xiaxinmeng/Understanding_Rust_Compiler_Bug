{"sha": "343a359109a48f4ece657831bf0331e22d108800", "node_id": "C_kwDOAAsO6NoAKDM0M2EzNTkxMDlhNDhmNGVjZTY1NzgzMWJmMDMzMWUyMmQxMDg4MDA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-30T19:04:55Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-30T19:04:59Z"}, "message": "Use ObligationCtxt::new_in_snapshot in satisfied_from_param_env", "tree": {"sha": "c5a036c1a80cc94867a3b06d3e90c8f8b233b812", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5a036c1a80cc94867a3b06d3e90c8f8b233b812"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/343a359109a48f4ece657831bf0331e22d108800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/343a359109a48f4ece657831bf0331e22d108800", "html_url": "https://github.com/rust-lang/rust/commit/343a359109a48f4ece657831bf0331e22d108800", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/343a359109a48f4ece657831bf0331e22d108800/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f55b0022db8dccc6aa6bf3f650b562eaec0fdc54", "url": "https://api.github.com/repos/rust-lang/rust/commits/f55b0022db8dccc6aa6bf3f650b562eaec0fdc54", "html_url": "https://github.com/rust-lang/rust/commit/f55b0022db8dccc6aa6bf3f650b562eaec0fdc54"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "786473457ae43c27d9805256d2b478a0ae88ec45", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/343a359109a48f4ece657831bf0331e22d108800/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343a359109a48f4ece657831bf0331e22d108800/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=343a359109a48f4ece657831bf0331e22d108800", "patch": "@@ -219,7 +219,7 @@ fn satisfied_from_param_env<'tcx>(\n     }\n \n     if let Some(Ok(c)) = single_match {\n-        let ocx = ObligationCtxt::new(infcx);\n+        let ocx = ObligationCtxt::new_in_snapshot(infcx);\n         assert!(ocx.eq(&ObligationCause::dummy(), param_env, c.ty(), ct.ty()).is_ok());\n         assert!(ocx.eq(&ObligationCause::dummy(), param_env, c, ct).is_ok());\n         assert!(ocx.select_all_or_error().is_empty());"}, {"sha": "c9408ef3360b420de00d3aeb814db1de0433543c", "filename": "tests/rustdoc/document-item-with-associated-const-in-where-clause.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/343a359109a48f4ece657831bf0331e22d108800/tests%2Frustdoc%2Fdocument-item-with-associated-const-in-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343a359109a48f4ece657831bf0331e22d108800/tests%2Frustdoc%2Fdocument-item-with-associated-const-in-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fdocument-item-with-associated-const-in-where-clause.rs?ref=343a359109a48f4ece657831bf0331e22d108800", "patch": "@@ -0,0 +1,17 @@\n+#![feature(generic_const_exprs)]\n+#![allow(incomplete_features)]\n+\n+pub trait Enumerable {\n+    const N: usize;\n+}\n+\n+#[derive(Clone)]\n+pub struct SymmetricGroup<S>\n+where\n+    S: Enumerable,\n+    [(); S::N]: Sized,\n+{\n+    _phantom: std::marker::PhantomData<S>,\n+}\n+\n+fn main() {}"}, {"sha": "0ba0c5a72efbd8f9adfbeb3e656d30d588c75fac", "filename": "tests/ui/const-generics/generic_const_exprs/single-satisfied-ConstEvaluatable-in-probe.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/343a359109a48f4ece657831bf0331e22d108800/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fsingle-satisfied-ConstEvaluatable-in-probe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343a359109a48f4ece657831bf0331e22d108800/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fsingle-satisfied-ConstEvaluatable-in-probe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fsingle-satisfied-ConstEvaluatable-in-probe.rs?ref=343a359109a48f4ece657831bf0331e22d108800", "patch": "@@ -0,0 +1,39 @@\n+// check-pass\n+\n+#![allow(incomplete_features)]\n+#![feature(generic_const_exprs)]\n+\n+use std::marker::PhantomData;\n+\n+pub trait Bytes {\n+    const BYTES: usize;\n+}\n+\n+#[derive(Clone, Debug)]\n+pub struct Conster<OT>\n+where\n+    OT: Bytes,\n+    [(); OT::BYTES]: Sized,\n+{\n+    _offset_type: PhantomData<fn(OT) -> OT>,\n+}\n+\n+impl<OT> Conster<OT>\n+where\n+    OT: Bytes,\n+    [(); OT::BYTES]: Sized,\n+{\n+    pub fn new() -> Self {\n+        Conster { _offset_type: PhantomData }\n+    }\n+}\n+\n+pub fn make_conster<COT>() -> Conster<COT>\n+where\n+    COT: Bytes,\n+    [(); COT::BYTES]: Sized,\n+{\n+    Conster::new()\n+}\n+\n+fn main() {}"}]}