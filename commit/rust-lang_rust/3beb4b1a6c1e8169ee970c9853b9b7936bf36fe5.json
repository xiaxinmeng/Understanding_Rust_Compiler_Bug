{"sha": "3beb4b1a6c1e8169ee970c9853b9b7936bf36fe5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZWI0YjFhNmMxZTgxNjllZTk3MGM5ODUzYjliNzkzNmJmMzZmZTU=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-12-22T13:10:17Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-12-22T13:10:17Z"}, "message": "variable `CPUS_SIZE` should have a snake case name such as `cpus_size`", "tree": {"sha": "a7402f860d79c5de26e72d832a53cc20d82bbe9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7402f860d79c5de26e72d832a53cc20d82bbe9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3beb4b1a6c1e8169ee970c9853b9b7936bf36fe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3beb4b1a6c1e8169ee970c9853b9b7936bf36fe5", "html_url": "https://github.com/rust-lang/rust/commit/3beb4b1a6c1e8169ee970c9853b9b7936bf36fe5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3beb4b1a6c1e8169ee970c9853b9b7936bf36fe5/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb9c2c02306cbbafe8196e505ca5a0ac22a18769", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb9c2c02306cbbafe8196e505ca5a0ac22a18769", "html_url": "https://github.com/rust-lang/rust/commit/fb9c2c02306cbbafe8196e505ca5a0ac22a18769"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "2945d20ceb1b8c641f3dbe8af5fbc8c64505a580", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3beb4b1a6c1e8169ee970c9853b9b7936bf36fe5/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3beb4b1a6c1e8169ee970c9853b9b7936bf36fe5/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=3beb4b1a6c1e8169ee970c9853b9b7936bf36fe5", "patch": "@@ -923,21 +923,21 @@ fn get_concurrency() -> usize {\n               target_os = \"netbsd\"))]\n     fn num_cpus() -> usize {\n         let mut cpus: libc::c_uint = 0;\n-        let mut CPUS_SIZE = std::mem::size_of_val(&cpus);\n+        let mut cpus_size = std::mem::size_of_val(&cpus);\n         let mut mib = [libc::CTL_HW, libc::HW_AVAILCPU, 0, 0];\n \n         unsafe {\n             libc::sysctl(mib.as_mut_ptr(), 2,\n                          &mut cpus as *mut _ as *mut _,\n-                         &mut CPUS_SIZE as *mut _ as *mut _,\n+                         &mut cpus_size as *mut _ as *mut _,\n                          0 as *mut _, 0);\n         }\n         if cpus < 1 {\n             mib[1] = libc::HW_NCPU;\n             unsafe {\n                 libc::sysctl(mib.as_mut_ptr(), 2,\n                              &mut cpus as *mut _ as *mut _,\n-                             &mut CPUS_SIZE as *mut _ as *mut _,\n+                             &mut cpus_size as *mut _ as *mut _,\n                              0 as *mut _, 0);\n             }\n             if cpus < 1 {"}]}