{"sha": "33add0ee30ed9deb715d15e07b16568d4deb56b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYWRkMGVlMzBlZDlkZWI3MTVkMTVlMDdiMTY1NjhkNGRlYjU2YjM=", "commit": {"author": {"name": "Michael Killough", "email": "michaeljkillough@gmail.com", "date": "2019-03-17T18:50:22Z"}, "committer": {"name": "Michael Killough", "email": "michaeljkillough@gmail.com", "date": "2019-03-17T18:50:22Z"}, "message": "Simplify match statement.", "tree": {"sha": "aaeefde5b05c02ab9bec204fd5b36254c4253e1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaeefde5b05c02ab9bec204fd5b36254c4253e1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33add0ee30ed9deb715d15e07b16568d4deb56b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33add0ee30ed9deb715d15e07b16568d4deb56b3", "html_url": "https://github.com/rust-lang/rust/commit/33add0ee30ed9deb715d15e07b16568d4deb56b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33add0ee30ed9deb715d15e07b16568d4deb56b3/comments", "author": {"login": "mjkillough", "id": 532855, "node_id": "MDQ6VXNlcjUzMjg1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/532855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjkillough", "html_url": "https://github.com/mjkillough", "followers_url": "https://api.github.com/users/mjkillough/followers", "following_url": "https://api.github.com/users/mjkillough/following{/other_user}", "gists_url": "https://api.github.com/users/mjkillough/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjkillough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjkillough/subscriptions", "organizations_url": "https://api.github.com/users/mjkillough/orgs", "repos_url": "https://api.github.com/users/mjkillough/repos", "events_url": "https://api.github.com/users/mjkillough/events{/privacy}", "received_events_url": "https://api.github.com/users/mjkillough/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mjkillough", "id": 532855, "node_id": "MDQ6VXNlcjUzMjg1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/532855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjkillough", "html_url": "https://github.com/mjkillough", "followers_url": "https://api.github.com/users/mjkillough/followers", "following_url": "https://api.github.com/users/mjkillough/following{/other_user}", "gists_url": "https://api.github.com/users/mjkillough/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjkillough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjkillough/subscriptions", "organizations_url": "https://api.github.com/users/mjkillough/orgs", "repos_url": "https://api.github.com/users/mjkillough/repos", "events_url": "https://api.github.com/users/mjkillough/events{/privacy}", "received_events_url": "https://api.github.com/users/mjkillough/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "354134ffb4e6a0962e9faf19ebe2bb1cda4da9ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/354134ffb4e6a0962e9faf19ebe2bb1cda4da9ab", "html_url": "https://github.com/rust-lang/rust/commit/354134ffb4e6a0962e9faf19ebe2bb1cda4da9ab"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "3d0b7a827e78d3b72168e2dc8c1077e689f4abc0", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/33add0ee30ed9deb715d15e07b16568d4deb56b3/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33add0ee30ed9deb715d15e07b16568d4deb56b3/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=33add0ee30ed9deb715d15e07b16568d4deb56b3", "patch": "@@ -681,12 +681,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 let inner_ty = self.insert_type_vars_shallow(inner_ty);\n \n                 let bound_ty = match mode {\n-                    BindingMode::Ref(Mutability::Shared) => {\n-                        Ty::Ref(inner_ty.clone().into(), Mutability::Shared)\n-                    }\n-                    BindingMode::Ref(Mutability::Mut) => {\n-                        Ty::Ref(inner_ty.clone().into(), Mutability::Mut)\n-                    }\n+                    BindingMode::Ref(mutability) => Ty::Ref(inner_ty.clone().into(), mutability),\n                     BindingMode::Move => inner_ty.clone(),\n                 };\n                 let bound_ty = self.resolve_ty_as_possible(&mut vec![], bound_ty);"}]}