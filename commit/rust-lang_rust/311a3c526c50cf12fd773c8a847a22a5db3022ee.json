{"sha": "311a3c526c50cf12fd773c8a847a22a5db3022ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMWEzYzUyNmM1MGNmMTJmZDc3M2M4YTg0N2EyMmE1ZGIzMDIyZWU=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-16T08:39:38Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-16T08:43:36Z"}, "message": "Fix up write_list() to handle Mixed tactic", "tree": {"sha": "7abd10714d64449639efe36e6b7d99519e5c128d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7abd10714d64449639efe36e6b7d99519e5c128d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/311a3c526c50cf12fd773c8a847a22a5db3022ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/311a3c526c50cf12fd773c8a847a22a5db3022ee", "html_url": "https://github.com/rust-lang/rust/commit/311a3c526c50cf12fd773c8a847a22a5db3022ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/311a3c526c50cf12fd773c8a847a22a5db3022ee/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35466adbfe90939552580c15161a1ee9b9f1c4a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/35466adbfe90939552580c15161a1ee9b9f1c4a5", "html_url": "https://github.com/rust-lang/rust/commit/35466adbfe90939552580c15161a1ee9b9f1c4a5"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "b80d8d6541eb7a6334953760c5f248df1e891255", "filename": "src/lists.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/311a3c526c50cf12fd773c8a847a22a5db3022ee/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/311a3c526c50cf12fd773c8a847a22a5db3022ee/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=311a3c526c50cf12fd773c8a847a22a5db3022ee", "patch": "@@ -207,10 +207,18 @@ impl SeparatorPlace {\n         *self == SeparatorPlace::Back\n     }\n \n-    pub fn from_tactic(default: SeparatorPlace, tactic: DefinitiveListTactic) -> SeparatorPlace {\n+    pub fn from_tactic(\n+        default: SeparatorPlace,\n+        tactic: DefinitiveListTactic,\n+        sep: &str,\n+    ) -> SeparatorPlace {\n         match tactic {\n             DefinitiveListTactic::Vertical => default,\n-            _ => SeparatorPlace::Back,\n+            _ => if sep == \",\" {\n+                SeparatorPlace::Back\n+            } else {\n+                default\n+            },\n         }\n     }\n }\n@@ -269,7 +277,8 @@ where\n     let cloned_items = items.clone();\n     let mut iter = items.into_iter().enumerate().peekable();\n     let mut item_max_width: Option<usize> = None;\n-    let mut sep_place = SeparatorPlace::from_tactic(formatting.separator_place, tactic);\n+    let sep_place =\n+        SeparatorPlace::from_tactic(formatting.separator_place, tactic, formatting.separator);\n \n     let mut line_len = 0;\n     let indent_str = &formatting.shape.indent.to_string(formatting.config);\n@@ -278,7 +287,10 @@ where\n         let inner_item = item.item.as_ref()?;\n         let first = i == 0;\n         let last = iter.peek().is_none();\n-        let mut separate = !last || trailing_separator;\n+        let mut separate = match sep_place {\n+            SeparatorPlace::Front => !first,\n+            SeparatorPlace::Back => !last || trailing_separator,\n+        };\n         let item_sep_len = if separate { sep_len } else { 0 };\n \n         // Item string may be multi-line. Its length (used for block comment alignment)\n@@ -316,9 +328,6 @@ where\n                             trailing_separator = true;\n                         }\n                     }\n-                    sep_place = formatting.separator_place;\n-                } else {\n-                    sep_place = SeparatorPlace::Back;\n                 }\n \n                 if line_len > 0 {"}]}