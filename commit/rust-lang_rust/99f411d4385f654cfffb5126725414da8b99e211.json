{"sha": "99f411d4385f654cfffb5126725414da8b99e211", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZjQxMWQ0Mzg1ZjY1NGNmZmZiNTEyNjcyNTQxNGRhOGI5OWUyMTE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-19T14:03:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-19T14:03:29Z"}, "message": "Rollup merge of #83270 - steffahn:missing_word_in_skip_while_doc, r=joshtriplett\n\nFix typo/inaccuracy in the documentation of Iterator::skip_while\n\nOne of the examples used to say \u201cthis leads to a possibly confusing situation, where the type of the closure is a double reference\u201d while _actually_ referring to the type of the closure _argument_.\n\nThis PR just changes a single word in documentation.\n\n`````@rustbot````` modify labels: A-iterators, T-doc, T-lang", "tree": {"sha": "db96dc169be6fe780d497e3376236493fef72744", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db96dc169be6fe780d497e3376236493fef72744"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99f411d4385f654cfffb5126725414da8b99e211", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgVK8yCRBK7hj4Ov3rIwAAdHIIADOmPUJdhF1RdbNKGtlSKNMt\nbvNvvA6puglTJfuFRsveqkuykr4aV/roVvGv27QQHEGAVTU0MhYRtGt7NFiAj9GF\nr6pGX+ZSVHctsxBz9TgRzPxh+toBrDMrm02yCvX291k3r+vgotcAG1HFgz2Kevii\nj6mcYdXrk0JSAyF3AoTxNKWh208FRmtphJ1ahvFNsN4Kyextu7w8ogd34YGrQPJu\ni678n6YDv9+GS4KxVYCL1KJp640gN47MEc1Ne/TTsABqRYQ85+Q+/BQwR29nxwdj\nISoX1eqreZs2XHs7kpR/def8Rl518qqE2qQxYrG6nQmbVJ9z/RaqEC5NH5iWb6o=\n=fjv5\n-----END PGP SIGNATURE-----\n", "payload": "tree db96dc169be6fe780d497e3376236493fef72744\nparent 23128c41839fda23548da1cb16730de87d703ea6\nparent 99b2054fe59669231f595e22641a0f7a1f4ad918\nauthor Dylan DPC <dylan.dpc@gmail.com> 1616162609 +0100\ncommitter GitHub <noreply@github.com> 1616162609 +0100\n\nRollup merge of #83270 - steffahn:missing_word_in_skip_while_doc, r=joshtriplett\n\nFix typo/inaccuracy in the documentation of Iterator::skip_while\n\nOne of the examples used to say \u201cthis leads to a possibly confusing situation, where the type of the closure is a double reference\u201d while _actually_ referring to the type of the closure _argument_.\n\nThis PR just changes a single word in documentation.\n\n`````@rustbot````` modify labels: A-iterators, T-doc, T-lang\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99f411d4385f654cfffb5126725414da8b99e211", "html_url": "https://github.com/rust-lang/rust/commit/99f411d4385f654cfffb5126725414da8b99e211", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99f411d4385f654cfffb5126725414da8b99e211/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23128c41839fda23548da1cb16730de87d703ea6", "url": "https://api.github.com/repos/rust-lang/rust/commits/23128c41839fda23548da1cb16730de87d703ea6", "html_url": "https://github.com/rust-lang/rust/commit/23128c41839fda23548da1cb16730de87d703ea6"}, {"sha": "99b2054fe59669231f595e22641a0f7a1f4ad918", "url": "https://api.github.com/repos/rust-lang/rust/commits/99b2054fe59669231f595e22641a0f7a1f4ad918", "html_url": "https://github.com/rust-lang/rust/commit/99b2054fe59669231f595e22641a0f7a1f4ad918"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a07750f4ad1febcba63a15bab2359eb67edae650", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99f411d4385f654cfffb5126725414da8b99e211/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99f411d4385f654cfffb5126725414da8b99e211/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=99f411d4385f654cfffb5126725414da8b99e211", "patch": "@@ -1012,7 +1012,7 @@ pub trait Iterator {\n     ///\n     /// Because the closure passed to `skip_while()` takes a reference, and many\n     /// iterators iterate over references, this leads to a possibly confusing\n-    /// situation, where the type of the closure is a double reference:\n+    /// situation, where the type of the closure argument is a double reference:\n     ///\n     /// ```\n     /// let a = [-1, 0, 1];"}]}