{"sha": "8fea7054b9c77a7dcf242ce84cfc0a58d81a9c00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmZWE3MDU0YjljNzdhN2RjZjI0MmNlODRjZmMwYTU4ZDgxYTljMDA=", "commit": {"author": {"name": "Nick Fitzgerald", "email": "fitzgen@gmail.com", "date": "2019-02-08T09:02:24Z"}, "committer": {"name": "Nick Fitzgerald", "email": "fitzgen@gmail.com", "date": "2019-02-08T09:07:08Z"}, "message": "Use write_char for writing padding characters\n\nRemoves some unsafe *and* saves almost half a kilobyte of code size.", "tree": {"sha": "3af11c878270dd5837b6ddf4e87f5d624b3bc9d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3af11c878270dd5837b6ddf4e87f5d624b3bc9d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fea7054b9c77a7dcf242ce84cfc0a58d81a9c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fea7054b9c77a7dcf242ce84cfc0a58d81a9c00", "html_url": "https://github.com/rust-lang/rust/commit/8fea7054b9c77a7dcf242ce84cfc0a58d81a9c00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fea7054b9c77a7dcf242ce84cfc0a58d81a9c00/comments", "author": {"login": "fitzgen", "id": 74571, "node_id": "MDQ6VXNlcjc0NTcx", "avatar_url": "https://avatars.githubusercontent.com/u/74571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fitzgen", "html_url": "https://github.com/fitzgen", "followers_url": "https://api.github.com/users/fitzgen/followers", "following_url": "https://api.github.com/users/fitzgen/following{/other_user}", "gists_url": "https://api.github.com/users/fitzgen/gists{/gist_id}", "starred_url": "https://api.github.com/users/fitzgen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fitzgen/subscriptions", "organizations_url": "https://api.github.com/users/fitzgen/orgs", "repos_url": "https://api.github.com/users/fitzgen/repos", "events_url": "https://api.github.com/users/fitzgen/events{/privacy}", "received_events_url": "https://api.github.com/users/fitzgen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fitzgen", "id": 74571, "node_id": "MDQ6VXNlcjc0NTcx", "avatar_url": "https://avatars.githubusercontent.com/u/74571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fitzgen", "html_url": "https://github.com/fitzgen", "followers_url": "https://api.github.com/users/fitzgen/followers", "following_url": "https://api.github.com/users/fitzgen/following{/other_user}", "gists_url": "https://api.github.com/users/fitzgen/gists{/gist_id}", "starred_url": "https://api.github.com/users/fitzgen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fitzgen/subscriptions", "organizations_url": "https://api.github.com/users/fitzgen/orgs", "repos_url": "https://api.github.com/users/fitzgen/repos", "events_url": "https://api.github.com/users/fitzgen/events{/privacy}", "received_events_url": "https://api.github.com/users/fitzgen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05df9ff41537bab6586eea7ad9272eeb611e09e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/05df9ff41537bab6586eea7ad9272eeb611e09e1", "html_url": "https://github.com/rust-lang/rust/commit/05df9ff41537bab6586eea7ad9272eeb611e09e1"}], "stats": {"total": 32, "additions": 9, "deletions": 23}, "files": [{"sha": "4c0eb1eeb553024f22bca4d78d745475d5516908", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 8, "deletions": 22, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/8fea7054b9c77a7dcf242ce84cfc0a58d81a9c00/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fea7054b9c77a7dcf242ce84cfc0a58d81a9c00/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=8fea7054b9c77a7dcf242ce84cfc0a58d81a9c00", "patch": "@@ -1039,24 +1039,19 @@ pub fn write(output: &mut dyn Write, args: Arguments) -> Result {\n /// Padding after the end of something. Returned by `Formatter::padding`.\n #[must_use = \"don't forget to write the post padding\"]\n struct PostPadding {\n-    fill: [u8; 4],\n-    fill_len: u32,\n+    fill: char,\n     padding: usize,\n }\n \n impl PostPadding {\n-    /// Safety relies on `fill[..fill_len]` being a valid UTF-8 char.\n-    unsafe fn new(fill: [u8; 4], fill_len: u32, padding: usize) -> PostPadding {\n-        PostPadding { fill, fill_len, padding }\n+    fn new(fill: char, padding: usize) -> PostPadding {\n+        PostPadding { fill, padding }\n     }\n \n     /// Write this post padding.\n     fn write(self, buf: &mut dyn Write) -> Result {\n-        let fill = unsafe {\n-            str::from_utf8_unchecked(&self.fill.get_unchecked(..self.fill_len as usize))\n-        };\n         for _ in 0..self.padding {\n-            buf.write_str(fill)?;\n+            buf.write_char(self.fill)?;\n         }\n         Ok(())\n     }\n@@ -1326,20 +1321,11 @@ impl<'a> Formatter<'a> {\n             rt::v1::Alignment::Center => (padding / 2, (padding + 1) / 2),\n         };\n \n-        let mut fill = [0; 4];\n-        let fill_len = {\n-            let fill = self.fill.encode_utf8(&mut fill);\n-\n-            for _ in 0..pre_pad {\n-                self.buf.write_str(fill)?;\n-            }\n-\n-            fill.len()\n-        };\n+        for _ in 0..pre_pad {\n+            self.buf.write_char(self.fill)?;\n+        }\n \n-        Ok(unsafe {\n-            PostPadding::new(fill, fill_len as u32, post_pad)\n-        })\n+        Ok(PostPadding::new(self.fill, post_pad))\n     }\n \n     /// Takes the formatted parts and applies the padding."}, {"sha": "26de6a0c6899054c98f7890befd0639573a70e13", "filename": "src/test/run-make/wasm-stringify-ints-small/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8fea7054b9c77a7dcf242ce84cfc0a58d81a9c00/src%2Ftest%2Frun-make%2Fwasm-stringify-ints-small%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/8fea7054b9c77a7dcf242ce84cfc0a58d81a9c00/src%2Ftest%2Frun-make%2Fwasm-stringify-ints-small%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fwasm-stringify-ints-small%2FMakefile?ref=8fea7054b9c77a7dcf242ce84cfc0a58d81a9c00", "patch": "@@ -4,7 +4,7 @@ ifeq ($(TARGET),wasm32-unknown-unknown)\n all:\n \t$(RUSTC) foo.rs -C lto -O --target wasm32-unknown-unknown\n \twc -c < $(TMPDIR)/foo.wasm\n-\t[ \"`wc -c < $(TMPDIR)/foo.wasm`\" -lt \"21000\" ]\n+\t[ \"`wc -c < $(TMPDIR)/foo.wasm`\" -lt \"20500\" ]\n else\n all:\n endif"}]}