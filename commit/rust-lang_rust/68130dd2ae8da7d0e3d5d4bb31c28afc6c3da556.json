{"sha": "68130dd2ae8da7d0e3d5d4bb31c28afc6c3da556", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MTMwZGQyYWU4ZGE3ZDBlM2Q1ZDRiYjMxYzI4YWZjNmMzZGE1NTY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-06T11:22:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-06T11:22:19Z"}, "message": "Rollup merge of #71905 - mibac138:x-cmd-alias, r=Mark-Simulacrum\n\nAdd command aliases from Cargo to x.py commands\n\nFixes #71357", "tree": {"sha": "c4375181597d11952c9bba313d8125aee2e8022d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4375181597d11952c9bba313d8125aee2e8022d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68130dd2ae8da7d0e3d5d4bb31c28afc6c3da556", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJesp3rCRBK7hj4Ov3rIwAAdHIIAKCd6oIasxnOIKfFLyzGMRC4\n174xk7VZ6zjFHKipZ5H1GfGs74DTzesQHBn/eQgJaxPbSxmW/RHXyW9qnaxgm73G\n8HpW+YUGJhheJRk1YDyk5xzg5F6kqjdxSgcwsM52mxej4yNkKBi9Z11Gf3peuvEs\n0Y1aQQiHzm95gPxDnZ+7EGX2I4jwl9fRMp42DJesdzCR5PVc2lheYTHlFhl0P3q1\n4yge+RsUx7BUzsa/zLUoT1jWXiuXu/RAEmeBCQFeUOyP0pVcyuc18Q26Xvw3KMdv\nImQj2JDkaWnQ6azp8BVtK1vYG4yGlP7wSUAbKCp5AcIIbmLKrUvXn+8BPEB7Pm8=\n=KEi9\n-----END PGP SIGNATURE-----\n", "payload": "tree c4375181597d11952c9bba313d8125aee2e8022d\nparent e4bda619d549df918795d04b0c7f1c211196b474\nparent b83853d61725a6de7f5563275733daa6a61accca\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588764139 +0200\ncommitter GitHub <noreply@github.com> 1588764139 +0200\n\nRollup merge of #71905 - mibac138:x-cmd-alias, r=Mark-Simulacrum\n\nAdd command aliases from Cargo to x.py commands\n\nFixes #71357\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68130dd2ae8da7d0e3d5d4bb31c28afc6c3da556", "html_url": "https://github.com/rust-lang/rust/commit/68130dd2ae8da7d0e3d5d4bb31c28afc6c3da556", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68130dd2ae8da7d0e3d5d4bb31c28afc6c3da556/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4bda619d549df918795d04b0c7f1c211196b474", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4bda619d549df918795d04b0c7f1c211196b474", "html_url": "https://github.com/rust-lang/rust/commit/e4bda619d549df918795d04b0c7f1c211196b474"}, {"sha": "b83853d61725a6de7f5563275733daa6a61accca", "url": "https://api.github.com/repos/rust-lang/rust/commits/b83853d61725a6de7f5563275733daa6a61accca", "html_url": "https://github.com/rust-lang/rust/commit/b83853d61725a6de7f5563275733daa6a61accca"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "fb380af0a47e71bc9e202750575ccc36a610b4ce", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/68130dd2ae8da7d0e3d5d4bb31c28afc6c3da556/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68130dd2ae8da7d0e3d5d4bb31c28afc6c3da556/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=68130dd2ae8da7d0e3d5d4bb31c28afc6c3da556", "patch": "@@ -106,18 +106,18 @@ impl Flags {\n Usage: x.py <subcommand> [options] [<paths>...]\n \n Subcommands:\n-    build       Compile either the compiler or libraries\n-    check       Compile either the compiler or libraries, using cargo check\n+    build, b    Compile either the compiler or libraries\n+    check, c    Compile either the compiler or libraries, using cargo check\n     clippy      Run clippy (uses rustup/cargo-installed clippy binary)\n     fix         Run cargo fix\n     fmt         Run rustfmt\n-    test        Build and run some test suites\n+    test, t     Build and run some test suites\n     bench       Build and run some benchmarks\n     doc         Build documentation\n     clean       Clean out build directories\n     dist        Build distribution artifacts\n     install     Install distribution artifacts\n-    run         Run tools contained in this repository\n+    run, r      Run tools contained in this repository\n \n To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n         );\n@@ -184,17 +184,21 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n         // there on out.\n         let subcommand = args.iter().find(|&s| {\n             (s == \"build\")\n+                || (s == \"b\")\n                 || (s == \"check\")\n+                || (s == \"c\")\n                 || (s == \"clippy\")\n                 || (s == \"fix\")\n                 || (s == \"fmt\")\n                 || (s == \"test\")\n+                || (s == \"t\")\n                 || (s == \"bench\")\n                 || (s == \"doc\")\n                 || (s == \"clean\")\n                 || (s == \"dist\")\n                 || (s == \"install\")\n                 || (s == \"run\")\n+                || (s == \"r\")\n         });\n         let subcommand = match subcommand {\n             Some(s) => s,\n@@ -210,7 +214,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n \n         // Some subcommands get extra options\n         match subcommand.as_str() {\n-            \"test\" => {\n+            \"test\" | \"t\" => {\n                 opts.optflag(\"\", \"no-fail-fast\", \"Run all tests regardless of failure\");\n                 opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\");\n                 opts.optmulti(\n@@ -285,7 +289,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n         }\n         // Extra help text for some commands\n         match subcommand.as_str() {\n-            \"build\" => {\n+            \"build\" | \"b\" => {\n                 subcommand_help.push_str(\n                     \"\\n\n Arguments:\n@@ -312,7 +316,7 @@ Arguments:\n     Once this is done, build/$ARCH/stage1 contains a usable compiler.\",\n                 );\n             }\n-            \"check\" => {\n+            \"check\" | \"c\" => {\n                 subcommand_help.push_str(\n                     \"\\n\n Arguments:\n@@ -362,7 +366,7 @@ Arguments:\n         ./x.py fmt --check\",\n                 );\n             }\n-            \"test\" => {\n+            \"test\" | \"t\" => {\n                 subcommand_help.push_str(\n                     \"\\n\n Arguments:\n@@ -407,7 +411,7 @@ Arguments:\n         ./x.py doc --stage 1\",\n                 );\n             }\n-            \"run\" => {\n+            \"run\" | \"r\" => {\n                 subcommand_help.push_str(\n                     \"\\n\n Arguments:\n@@ -453,11 +457,11 @@ Arguments:\n         }\n \n         let cmd = match subcommand.as_str() {\n-            \"build\" => Subcommand::Build { paths },\n-            \"check\" => Subcommand::Check { paths },\n+            \"build\" | \"b\" => Subcommand::Build { paths },\n+            \"check\" | \"c\" => Subcommand::Check { paths },\n             \"clippy\" => Subcommand::Clippy { paths },\n             \"fix\" => Subcommand::Fix { paths },\n-            \"test\" => Subcommand::Test {\n+            \"test\" | \"t\" => Subcommand::Test {\n                 paths,\n                 bless: matches.opt_present(\"bless\"),\n                 compare_mode: matches.opt_str(\"compare-mode\"),\n@@ -487,7 +491,7 @@ Arguments:\n             \"fmt\" => Subcommand::Format { check: matches.opt_present(\"check\") },\n             \"dist\" => Subcommand::Dist { paths },\n             \"install\" => Subcommand::Install { paths },\n-            \"run\" => {\n+            \"run\" | \"r\" => {\n                 if paths.is_empty() {\n                     println!(\"\\nrun requires at least a path!\\n\");\n                     usage(1, &opts, &subcommand_help, &extra_help);"}]}