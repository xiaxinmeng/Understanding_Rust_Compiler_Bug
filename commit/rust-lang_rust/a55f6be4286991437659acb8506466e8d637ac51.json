{"sha": "a55f6be4286991437659acb8506466e8d637ac51", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NWY2YmU0Mjg2OTkxNDM3NjU5YWNiODUwNjQ2NmU4ZDYzN2FjNTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-15T02:24:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-15T02:24:21Z"}, "message": "Auto merge of #59982 - stepancheg:hasher-no-unsafe, r=rkruppe\n\nHasher: replace unsafe trasmute with to_ne_bytes\n\nSpead the knowledge of `to_ne_bytes` functions existence.", "tree": {"sha": "4d38c667c276d2bc17caf3e0c759a65546d788e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d38c667c276d2bc17caf3e0c759a65546d788e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a55f6be4286991437659acb8506466e8d637ac51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a55f6be4286991437659acb8506466e8d637ac51", "html_url": "https://github.com/rust-lang/rust/commit/a55f6be4286991437659acb8506466e8d637ac51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a55f6be4286991437659acb8506466e8d637ac51/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c090ab471d7590a1048e329006761e829a02c9a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c090ab471d7590a1048e329006761e829a02c9a8", "html_url": "https://github.com/rust-lang/rust/commit/c090ab471d7590a1048e329006761e829a02c9a8"}, {"sha": "fd4ac0e26c77bbf63d29025830bb18b01e2319bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4ac0e26c77bbf63d29025830bb18b01e2319bd", "html_url": "https://github.com/rust-lang/rust/commit/fd4ac0e26c77bbf63d29025830bb18b01e2319bd"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "973d41c14492e88f37bbe01b679e5d7834ef4b57", "filename": "src/libcore/hash/mod.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a55f6be4286991437659acb8506466e8d637ac51/src%2Flibcore%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55f6be4286991437659acb8506466e8d637ac51/src%2Flibcore%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fmod.rs?ref=a55f6be4286991437659acb8506466e8d637ac51", "patch": "@@ -83,7 +83,6 @@\n \n use fmt;\n use marker;\n-use mem;\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[allow(deprecated)]\n@@ -282,34 +281,31 @@ pub trait Hasher {\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_u16(&mut self, i: u16) {\n-        self.write(&unsafe { mem::transmute::<_, [u8; 2]>(i) })\n+        self.write(&i.to_ne_bytes())\n     }\n     /// Writes a single `u32` into this hasher.\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_u32(&mut self, i: u32) {\n-        self.write(&unsafe { mem::transmute::<_, [u8; 4]>(i) })\n+        self.write(&i.to_ne_bytes())\n     }\n     /// Writes a single `u64` into this hasher.\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_u64(&mut self, i: u64) {\n-        self.write(&unsafe { mem::transmute::<_, [u8; 8]>(i) })\n+        self.write(&i.to_ne_bytes())\n     }\n     /// Writes a single `u128` into this hasher.\n     #[inline]\n     #[stable(feature = \"i128\", since = \"1.26.0\")]\n     fn write_u128(&mut self, i: u128) {\n-        self.write(&unsafe { mem::transmute::<_, [u8; 16]>(i) })\n+        self.write(&i.to_ne_bytes())\n     }\n     /// Writes a single `usize` into this hasher.\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_usize(&mut self, i: usize) {\n-        let bytes = unsafe {\n-            ::slice::from_raw_parts(&i as *const usize as *const u8, mem::size_of::<usize>())\n-        };\n-        self.write(bytes);\n+        self.write(&i.to_ne_bytes())\n     }\n \n     /// Writes a single `i8` into this hasher.\n@@ -322,31 +318,31 @@ pub trait Hasher {\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_i16(&mut self, i: i16) {\n-        self.write_u16(i as u16)\n+        self.write(&i.to_ne_bytes())\n     }\n     /// Writes a single `i32` into this hasher.\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_i32(&mut self, i: i32) {\n-        self.write_u32(i as u32)\n+        self.write(&i.to_ne_bytes())\n     }\n     /// Writes a single `i64` into this hasher.\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_i64(&mut self, i: i64) {\n-        self.write_u64(i as u64)\n+        self.write(&i.to_ne_bytes())\n     }\n     /// Writes a single `i128` into this hasher.\n     #[inline]\n     #[stable(feature = \"i128\", since = \"1.26.0\")]\n     fn write_i128(&mut self, i: i128) {\n-        self.write_u128(i as u128)\n+        self.write(&i.to_ne_bytes())\n     }\n     /// Writes a single `isize` into this hasher.\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_isize(&mut self, i: isize) {\n-        self.write_usize(i as usize)\n+        self.write(&i.to_ne_bytes())\n     }\n }\n "}]}