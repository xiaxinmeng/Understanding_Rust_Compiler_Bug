{"sha": "96309ba4a1bbbffd1c03f50a21bb68526550b925", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MzA5YmE0YTFiYmJmZmQxYzAzZjUwYTIxYmI2ODUyNjU1MGI5MjU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-10T12:12:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-10T12:12:32Z"}, "message": "Merge #4835\n\n4835: Explain inline tests r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "14e8945d06fa2121856331c146386c6d1ceaf337", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14e8945d06fa2121856331c146386c6d1ceaf337"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96309ba4a1bbbffd1c03f50a21bb68526550b925", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe4M4wCRBK7hj4Ov3rIwAAdHIIAHDE2fyzArRQ3UnNhIcIYkWM\nfH5MFOl8hET6FTc6Bg/IGPPLgElxgBgaEPrkE9/g+B8RIl2+IuH9fLG3udEcXd+3\nMhjn2t5XegwoA/zmI9xm4pAJNg+DRGatgou3awxbQR6ANGorblBxtyjx0BxUOvnv\n6atzh3WsMfsojlgLgbCMJsflFwZvl/lnbR0qwwL45n7PzR0XZ3wFJLFAN6sOrsyF\nTX6j8xV8kX3SU4fN652H95mu2WZS3dCk00O2N1p0NtTM9fGz0N3JlExIyC6fVFXg\n2e+kcMSHMbKm0CbSY9ok39X9gcFNvW1bVotLODPC4bAerYZG0Muz/i7MIeoceAU=\n=MPAV\n-----END PGP SIGNATURE-----\n", "payload": "tree 14e8945d06fa2121856331c146386c6d1ceaf337\nparent f632727b2ab985a9c5ceca781d033a08ee3822ea\nparent 1538206609dbb88f10ff2525523096bab0c65740\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1591791152 +0000\ncommitter GitHub <noreply@github.com> 1591791152 +0000\n\nMerge #4835\n\n4835: Explain inline tests r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96309ba4a1bbbffd1c03f50a21bb68526550b925", "html_url": "https://github.com/rust-lang/rust/commit/96309ba4a1bbbffd1c03f50a21bb68526550b925", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96309ba4a1bbbffd1c03f50a21bb68526550b925/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f632727b2ab985a9c5ceca781d033a08ee3822ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/f632727b2ab985a9c5ceca781d033a08ee3822ea", "html_url": "https://github.com/rust-lang/rust/commit/f632727b2ab985a9c5ceca781d033a08ee3822ea"}, {"sha": "1538206609dbb88f10ff2525523096bab0c65740", "url": "https://api.github.com/repos/rust-lang/rust/commits/1538206609dbb88f10ff2525523096bab0c65740", "html_url": "https://github.com/rust-lang/rust/commit/1538206609dbb88f10ff2525523096bab0c65740"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "cf93135ee9b8085376a28ea4b9f8af380c98a05e", "filename": "docs/dev/README.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/96309ba4a1bbbffd1c03f50a21bb68526550b925/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/96309ba4a1bbbffd1c03f50a21bb68526550b925/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=96309ba4a1bbbffd1c03f50a21bb68526550b925", "patch": "@@ -303,6 +303,17 @@ Rather than talking in definitions and references, it talks in Strings and textu\n In general, API is centered around UI concerns -- the result of the call is what the user sees in the editor, and not what the compiler sees underneath.\n The results are 100% Rust specific though.\n \n+## Parser Tests\n+\n+Test for parser (`ra_parser`) live in `ra_syntax` crate (see `test_data` direcotory).\n+There are two kinds of tests:\n+\n+* Manually written test cases in `parser/ok` and `parser/error`\n+* \"Inline\" tests in `parser/inline` (these are generated) from comments in `ra_parser` crate.\n+\n+The purpose of inline tests is not to achieve full coverage by test cases, but to explain to the reader of the code what each particular `if` and `match` is responsible for.\n+If you are tempted to add a large inline test, it might be a good idea to leave only the simplest example in place, and move the test to a manual `parser/ok` test.\n+\n # Logging\n \n Logging is done by both rust-analyzer and VS Code, so it might be tricky to"}]}