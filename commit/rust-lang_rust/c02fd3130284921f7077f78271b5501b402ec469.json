{"sha": "c02fd3130284921f7077f78271b5501b402ec469", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMmZkMzEzMDI4NDkyMWY3MDc3Zjc4MjcxYjU1MDFiNDAyZWM0Njk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-01T07:41:35Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-12T16:54:48Z"}, "message": "`TraitItemKind::Type` -> `TraitItemKind::TyAlias`.", "tree": {"sha": "5123cde6f45a57b67141b509fe98e16bc21d2cee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5123cde6f45a57b67141b509fe98e16bc21d2cee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c02fd3130284921f7077f78271b5501b402ec469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c02fd3130284921f7077f78271b5501b402ec469", "html_url": "https://github.com/rust-lang/rust/commit/c02fd3130284921f7077f78271b5501b402ec469", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c02fd3130284921f7077f78271b5501b402ec469/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6403c6c766c704569564b9021071c4917d45a25", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6403c6c766c704569564b9021071c4917d45a25", "html_url": "https://github.com/rust-lang/rust/commit/f6403c6c766c704569564b9021071c4917d45a25"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "ec78bcf140313e4aea3104505545f8f08271d11d", "filename": "src/librustc/hir/lowering/item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs?ref=c02fd3130284921f7077f78271b5501b402ec469", "patch": "@@ -848,7 +848,7 @@ impl LoweringContext<'_> {\n                 );\n                 (generics, hir::TraitItemKind::Method(sig, hir::TraitMethod::Provided(body_id)))\n             }\n-            TraitItemKind::Type(ref bounds, ref default) => {\n+            TraitItemKind::TyAlias(ref bounds, ref default) => {\n                 let generics = self.lower_generics(&i.generics, ImplTraitContext::disallowed());\n                 let kind = hir::TraitItemKind::Type(\n                     self.lower_param_bounds(bounds, ImplTraitContext::disallowed()),\n@@ -877,7 +877,7 @@ impl LoweringContext<'_> {\n             TraitItemKind::Const(_, ref default) => {\n                 (hir::AssocItemKind::Const, default.is_some())\n             }\n-            TraitItemKind::Type(_, ref default) => {\n+            TraitItemKind::TyAlias(_, ref default) => {\n                 (hir::AssocItemKind::Type, default.is_some())\n             }\n             TraitItemKind::Method(ref sig, ref default) => ("}, {"sha": "5bfecf78e71ccf1726a7338c974864cf9a967c90", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=c02fd3130284921f7077f78271b5501b402ec469", "patch": "@@ -944,7 +944,7 @@ impl<'a> Parser<'a> {\n         };\n         self.expect_semi()?;\n \n-        Ok((ident, TraitItemKind::Type(bounds, default), generics))\n+        Ok((ident, TraitItemKind::TyAlias(bounds, default), generics))\n     }\n \n     /// Parses a `UseTree`."}, {"sha": "d2d5a33ec7aa9d8912fe509d918a16265fd64e87", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=c02fd3130284921f7077f78271b5501b402ec469", "patch": "@@ -1182,7 +1182,7 @@ impl<'a, 'b> Visitor<'b> for BuildReducedGraphVisitor<'a, 'b> {\n                 }\n                 (Res::Def(DefKind::Method, item_def_id), ValueNS)\n             }\n-            TraitItemKind::Type(..) => (Res::Def(DefKind::AssocTy, item_def_id), TypeNS),\n+            TraitItemKind::TyAlias(..) => (Res::Def(DefKind::AssocTy, item_def_id), TypeNS),\n             TraitItemKind::Macro(_) => bug!(),  // handled above\n         };\n "}, {"sha": "471e2634b8acfd1765c175dab77069ae612ce4d7", "filename": "src/librustc_resolve/def_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc_resolve%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc_resolve%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdef_collector.rs?ref=c02fd3130284921f7077f78271b5501b402ec469", "patch": "@@ -216,7 +216,7 @@ impl<'a> visit::Visitor<'a> for DefCollector<'a> {\n         let def_data = match ti.kind {\n             TraitItemKind::Method(..) | TraitItemKind::Const(..) =>\n                 DefPathData::ValueNs(ti.ident.name),\n-            TraitItemKind::Type(..) => {\n+            TraitItemKind::TyAlias(..) => {\n                 DefPathData::TypeNs(ti.ident.name)\n             },\n             TraitItemKind::Macro(..) => return self.visit_macro_invoc(ti.id),"}, {"sha": "d32a6a4b3e6b3e8ca28f257b57053fa93416a72b", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=c02fd3130284921f7077f78271b5501b402ec469", "patch": "@@ -821,7 +821,7 @@ impl<'a, 'b> LateResolutionVisitor<'a, '_> {\n                                             TraitItemKind::Method(_, _) => {\n                                                 visit::walk_trait_item(this, trait_item)\n                                             }\n-                                            TraitItemKind::Type(..) => {\n+                                            TraitItemKind::TyAlias(..) => {\n                                                 visit::walk_trait_item(this, trait_item)\n                                             }\n                                             TraitItemKind::Macro(_) => {\n@@ -995,7 +995,7 @@ impl<'a, 'b> LateResolutionVisitor<'a, '_> {\n         let trait_assoc_types = replace(\n             &mut self.diagnostic_metadata.current_trait_assoc_types,\n             trait_items.iter().filter_map(|item| match &item.kind {\n-                TraitItemKind::Type(bounds, _) if bounds.len() == 0 => Some(item.ident),\n+                TraitItemKind::TyAlias(bounds, _) if bounds.len() == 0 => Some(item.ident),\n                 _ => None,\n             }).collect(),\n         );"}, {"sha": "bd7851296ddc2df5ab3ddff915c658d5bbdae684", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=c02fd3130284921f7077f78271b5501b402ec469", "patch": "@@ -1056,7 +1056,7 @@ impl<'l, 'tcx> DumpVisitor<'l, 'tcx> {\n                     trait_item.span,\n                 );\n             }\n-            ast::TraitItemKind::Type(ref bounds, ref default_ty) => {\n+            ast::TraitItemKind::TyAlias(ref bounds, ref default_ty) => {\n                 // FIXME do something with _bounds (for type refs)\n                 let name = trait_item.ident.name.to_string();\n                 let qualname = format!(\"::{}\","}, {"sha": "4e2f78e8ab8ea3f4a2c932fa26f9f1ae25e6afd5", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=c02fd3130284921f7077f78271b5501b402ec469", "patch": "@@ -1613,7 +1613,7 @@ pub type TraitItem = ImplItem<TraitItemKind>;\n pub enum TraitItemKind {\n     Const(P<Ty>, Option<P<Expr>>),\n     Method(FnSig, Option<P<Block>>),\n-    Type(GenericBounds, Option<P<Ty>>),\n+    TyAlias(GenericBounds, Option<P<Ty>>),\n     Macro(Mac),\n }\n "}, {"sha": "10f6bbb5949110e5397e7efb61a5316a557e9581", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=c02fd3130284921f7077f78271b5501b402ec469", "patch": "@@ -585,7 +585,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     gate_feature_post!(&self, const_fn, ti.span, \"const fn is unstable\");\n                 }\n             }\n-            ast::TraitItemKind::Type(_, ref default) => {\n+            ast::TraitItemKind::TyAlias(_, ref default) => {\n                 if let Some(ty) = default {\n                     self.check_impl_trait(ty);\n                     gate_feature_post!(&self, associated_type_defaults, ti.span,"}, {"sha": "66cac0f917d933f3b41af1ac4c850ffc48746b30", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=c02fd3130284921f7077f78271b5501b402ec469", "patch": "@@ -955,7 +955,7 @@ pub fn noop_flat_map_trait_item<T: MutVisitor>(mut item: TraitItem, visitor: &mu\n             visit_fn_sig(sig, visitor);\n             visit_opt(body, |body| visitor.visit_block(body));\n         }\n-        TraitItemKind::Type(bounds, default) => {\n+        TraitItemKind::TyAlias(bounds, default) => {\n             visit_bounds(bounds, visitor);\n             visit_opt(default, |default| visitor.visit_ty(default));\n         }"}, {"sha": "00dcd7e8d0b6fad5f9362d63ff3753ac63217880", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=c02fd3130284921f7077f78271b5501b402ec469", "patch": "@@ -1567,7 +1567,7 @@ impl<'a> State<'a> {\n                     self.s.word(\";\");\n                 }\n             }\n-            ast::TraitItemKind::Type(ref bounds, ref default) => {\n+            ast::TraitItemKind::TyAlias(ref bounds, ref default) => {\n                 self.print_associated_type(ti.ident, Some(bounds),\n                                            default.as_ref().map(|ty| &**ty));\n             }"}, {"sha": "f96290ec4f8ed6c6bbdca246c2184f4ef270e227", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02fd3130284921f7077f78271b5501b402ec469/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=c02fd3130284921f7077f78271b5501b402ec469", "patch": "@@ -599,7 +599,7 @@ pub fn walk_trait_item<'a, V: Visitor<'a>>(visitor: &mut V, trait_item: &'a Trai\n             visitor.visit_fn(FnKind::Method(trait_item.ident, sig, &trait_item.vis, body),\n                              &sig.decl, trait_item.span, trait_item.id);\n         }\n-        TraitItemKind::Type(ref bounds, ref default) => {\n+        TraitItemKind::TyAlias(ref bounds, ref default) => {\n             walk_list!(visitor, visit_param_bound, bounds);\n             walk_list!(visitor, visit_ty, default);\n         }"}]}