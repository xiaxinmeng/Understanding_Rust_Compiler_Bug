{"sha": "818d7c939881e22ffd9ff15383cac3f06b60f4fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxOGQ3YzkzOTg4MWUyMmZmZDlmZjE1MzgzY2FjM2YwNmI2MGY0ZmQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-06-24T22:42:53Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-06-24T22:55:08Z"}, "message": "Use visit_fn_{pre,post} to avoid going past lambdas during writeback instead of explicitly casing.", "tree": {"sha": "455ecd62b959bfaa3e7f2afe4b3fa8644ce5a4fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/455ecd62b959bfaa3e7f2afe4b3fa8644ce5a4fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/818d7c939881e22ffd9ff15383cac3f06b60f4fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/818d7c939881e22ffd9ff15383cac3f06b60f4fd", "html_url": "https://github.com/rust-lang/rust/commit/818d7c939881e22ffd9ff15383cac3f06b60f4fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/818d7c939881e22ffd9ff15383cac3f06b60f4fd/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4499ebe858c9e1cf61e12f6735d88a49b56bfd13", "url": "https://api.github.com/repos/rust-lang/rust/commits/4499ebe858c9e1cf61e12f6735d88a49b56bfd13", "html_url": "https://github.com/rust-lang/rust/commit/4499ebe858c9e1cf61e12f6735d88a49b56bfd13"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "353eb3997dfb2e14ceb61c6aec174130d19c11dd", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/818d7c939881e22ffd9ff15383cac3f06b60f4fd/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/818d7c939881e22ffd9ff15383cac3f06b60f4fd/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=818d7c939881e22ffd9ff15383cac3f06b60f4fd", "patch": "@@ -966,13 +966,8 @@ mod writeback {\n     fn visit_stmt_pre(@fn_ctxt fcx, &@ast::stmt s) {\n         resolve_type_vars_for_node(fcx, s.span, ty::stmt_node_id(s));\n     }\n-    fn visit_expr_pre(@mutable bool ignore, @fn_ctxt fcx, &@ast::expr e) {\n+    fn visit_expr_pre(@fn_ctxt fcx, &@ast::expr e) {\n         resolve_type_vars_for_node(fcx, e.span, e.id);\n-        alt (e.node) {\n-            // We don't want to recurse down into lambdas.\n-            case (ast::expr_fn(_)) { *ignore = true; }\n-            case (_) { }\n-        }\n     }\n     fn visit_expr_post(@mutable bool ignore, &@ast::expr e) {\n         *ignore = false;\n@@ -1000,23 +995,31 @@ mod writeback {\n         }\n     }\n     fn resolve_type_vars_in_block(&@fn_ctxt fcx, &ast::block block) {\n-        // A trick to ignore any contained items.\n-\n+        // A trick to ignore any contained items and lambdas.\n         auto ignore = @mutable false;\n         fn visit_item_pre(@mutable bool ignore, &@ast::item item) {\n             *ignore = true;\n         }\n         fn visit_item_post(@mutable bool ignore, &@ast::item item) {\n             *ignore = false;\n         }\n+        fn visit_fn_pre(@mutable bool ignore, &ast::_fn f, &span sp,\n+                        &ast::fn_ident i, ast::node_id d) {\n+            *ignore = true;\n+        }\n+        fn visit_fn_post(@mutable bool ignore, &ast::_fn f, &span sp,\n+                         &ast::fn_ident i, ast::node_id d) {\n+            *ignore = false;\n+        }\n         fn keep_going(@mutable bool ignore) -> bool { ret !*ignore; }\n         auto visit =\n             rec(keep_going=bind keep_going(ignore),\n                 visit_item_pre=bind visit_item_pre(ignore, _),\n                 visit_item_post=bind visit_item_post(ignore, _),\n+                visit_fn_pre=bind visit_fn_pre(ignore, _, _, _, _),\n+                visit_fn_post=bind visit_fn_post(ignore, _, _, _, _),\n                 visit_stmt_pre=bind visit_stmt_pre(fcx, _),\n-                visit_expr_pre=bind visit_expr_pre(ignore, fcx, _),\n-                visit_expr_post=bind visit_expr_post(ignore, _),\n+                visit_expr_pre=bind visit_expr_pre(fcx, _),\n                 visit_block_pre=bind visit_block_pre(fcx, _),\n                 visit_pat_pre=bind visit_pat_pre(fcx, _),\n                 visit_local_pre=bind visit_local_pre(fcx, _)"}]}