{"sha": "0d300d4b9d83b5243217aea98551c1f1676567d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMzAwZDRiOWQ4M2I1MjQzMjE3YWVhOTg1NTFjMWYxNjc2NTY3ZDQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-21T19:13:34Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-22T23:09:46Z"}, "message": "Split test::Docs into one Step for each book.\n\nThe *.md at the root directory in src/doc are no longer tested, but this\nshould be fine since all files there are deprecated.", "tree": {"sha": "d27a657e55b82f504405530962ea378b81b81f9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d27a657e55b82f504405530962ea378b81b81f9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d300d4b9d83b5243217aea98551c1f1676567d4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqPTboACgkQ/vbIBR0O\nATxgPw//WP2C2CBHcIREjZd0OLf9Yecwe4s3bJDtjlscJFeejSUiuONQbnfNO19c\nyz4LebWinmaWExtHsj8AXLHFJyrktY8FJBgtea/B6bqICVBSU9Ryy4Jsv5Z8VeZH\n7LhH0JQNp+tpNUhtw5kWPRtq2T+BQlzT1mEzIE3P4aktENCfvp3ZWLFGiSl/L/sG\nqmV5owScJWI+weOnQNNRuUrC/VuIRbMVyxSLL5fAyaLPV9fy4JSWQ8rrCNORT9LY\nCLhqG34XuTSi/gKzZR6VORMXJNPUqARSuyrL+bWbxrZ9tUQKC+RepKj/Qz3PfwE5\ntm/s7O6NfN0pVl7N49X4T2xmxJYs/iHFY6G3owxed8ZZL8+LJ7ZLRBaSlGSSxpMX\nlhPSSPJ8DbozmCQAt4hmm9y0Uv/XZxXV4ixGKcdz6VeXFRe9Fro4XYkSUQwRmPtT\nyN+CFWINqBa8IwL/6o7MF4LP/PVD7RBUimbkDKIJEFj5YqRCUyTwuqyqckXJWP9b\nSYs+spKNQxgu8Kn6Qc0NRUUvZzsDqy2QUQIjH+xR10Cu6Y08rjQ/JekYEfEl386e\n/zxH/zczN+R73uIIVB4ijCOs4IutthS+V0lhBvAEqku6O5hsLfnmc6nwpdwnX5hw\nUOdsRyqDSNv/XV1oFAyXYCqFoOIYTRt5kK+cXwUfwzpRoslnfLc=\n=KOSy\n-----END PGP SIGNATURE-----", "payload": "tree d27a657e55b82f504405530962ea378b81b81f9b\nparent 51238c77e676f399a5b47d922e0da6af4837aff5\nauthor kennytm <kennytm@gmail.com> 1519240414 +0800\ncommitter kennytm <kennytm@gmail.com> 1519340986 +0800\n\nSplit test::Docs into one Step for each book.\n\nThe *.md at the root directory in src/doc are no longer tested, but this\nshould be fine since all files there are deprecated.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d300d4b9d83b5243217aea98551c1f1676567d4", "html_url": "https://github.com/rust-lang/rust/commit/0d300d4b9d83b5243217aea98551c1f1676567d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d300d4b9d83b5243217aea98551c1f1676567d4/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51238c77e676f399a5b47d922e0da6af4837aff5", "url": "https://api.github.com/repos/rust-lang/rust/commits/51238c77e676f399a5b47d922e0da6af4837aff5", "html_url": "https://github.com/rust-lang/rust/commit/51238c77e676f399a5b47d922e0da6af4837aff5"}], "stats": {"total": 71, "additions": 57, "deletions": 14}, "files": [{"sha": "49c7fc4770563eaa398881e1c3c480a75aa06be0", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0d300d4b9d83b5243217aea98551c1f1676567d4/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d300d4b9d83b5243217aea98551c1f1676567d4/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=0d300d4b9d83b5243217aea98551c1f1676567d4", "patch": "@@ -231,7 +231,7 @@ pub struct ShouldRun<'a> {\n     paths: BTreeSet<PathSet>,\n \n     // If this is a default rule, this is an additional constraint placed on\n-    // it's run. Generally something like compiler docs being enabled.\n+    // its run. Generally something like compiler docs being enabled.\n     is_really_default: bool,\n }\n \n@@ -326,7 +326,9 @@ impl<'a> Builder<'a> {\n                 test::RunPassPretty, test::RunFailPretty, test::RunPassValgrindPretty,\n                 test::RunPassFullDepsPretty, test::RunFailFullDepsPretty, test::RunMake,\n                 test::Crate, test::CrateLibrustc, test::Rustdoc, test::Linkcheck, test::Cargotest,\n-                test::Cargo, test::Rls, test::Docs, test::ErrorIndex, test::Distcheck,\n+                test::Cargo, test::Rls, test::ErrorIndex, test::Distcheck,\n+                test::Nomicon, test::Reference, test::RustdocBook, test::RustByExample,\n+                test::TheBook, test::UnstableBook,\n                 test::Rustfmt, test::Miri, test::Clippy, test::RustdocJS, test::RustdocTheme),\n             Kind::Bench => describe!(test::Crate, test::CrateLibrustc),\n             Kind::Doc => describe!(doc::UnstableBook, doc::UnstableBookGen, doc::TheBook,"}, {"sha": "03b7c18c5516271466b7cb9e0c89a1997b8917e6", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 53, "deletions": 12, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/0d300d4b9d83b5243217aea98551c1f1676567d4/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d300d4b9d83b5243217aea98551c1f1676567d4/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=0d300d4b9d83b5243217aea98551c1f1676567d4", "patch": "@@ -994,23 +994,19 @@ impl Step for Compiletest {\n }\n \n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n-pub struct Docs {\n+struct DocTest {\n     compiler: Compiler,\n+    path: &'static str,\n+    name: &'static str,\n+    is_ext_doc: bool,\n }\n \n-impl Step for Docs {\n+impl Step for DocTest {\n     type Output = ();\n-    const DEFAULT: bool = true;\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun) -> ShouldRun {\n-        run.path(\"src/doc\")\n-    }\n-\n-    fn make_run(run: RunConfig) {\n-        run.builder.ensure(Docs {\n-            compiler: run.builder.compiler(run.builder.top_stage, run.host),\n-        });\n+        run.never()\n     }\n \n     /// Run `rustdoc --test` for all documentation in `src/doc`.\n@@ -1026,9 +1022,9 @@ impl Step for Docs {\n \n         // Do a breadth-first traversal of the `src/doc` directory and just run\n         // tests for all files that end in `*.md`\n-        let mut stack = vec![build.src.join(\"src/doc\")];\n+        let mut stack = vec![build.src.join(self.path)];\n         let _time = util::timeit();\n-        let _folder = build.fold_output(|| \"test_docs\");\n+        let _folder = build.fold_output(|| format!(\"test_{}\", self.name));\n \n         while let Some(p) = stack.pop() {\n             if p.is_dir() {\n@@ -1051,6 +1047,51 @@ impl Step for Docs {\n     }\n }\n \n+macro_rules! test_book {\n+    ($($name:ident, $path:expr, $book_name:expr, default=$default:expr;)+) => {\n+        $(\n+            #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n+            pub struct $name {\n+                compiler: Compiler,\n+            }\n+\n+            impl Step for $name {\n+                type Output = ();\n+                const DEFAULT: bool = $default;\n+                const ONLY_HOSTS: bool = true;\n+\n+                fn should_run(run: ShouldRun) -> ShouldRun {\n+                    run.path($path)\n+                }\n+\n+                fn make_run(run: RunConfig) {\n+                    run.builder.ensure($name {\n+                        compiler: run.builder.compiler(run.builder.top_stage, run.host),\n+                    });\n+                }\n+\n+                fn run(self, builder: &Builder) {\n+                    builder.ensure(DocTest {\n+                        compiler: self.compiler,\n+                        path: $path,\n+                        name: $book_name,\n+                        is_ext_doc: !$default,\n+                    });\n+                }\n+            }\n+        )+\n+    }\n+}\n+\n+test_book!(\n+    Nomicon, \"src/doc/nomicon\", \"nomicon\", default=false;\n+    Reference, \"src/doc/reference\", \"reference\", default=false;\n+    RustdocBook, \"src/doc/rustdoc\", \"rustdoc\", default=true;\n+    RustByExample, \"src/doc/rust-by-example\", \"rust-by-example\", default=false;\n+    TheBook, \"src/doc/book\", \"book\", default=false;\n+    UnstableBook, \"src/doc/unstable-book\", \"unstable-book\", default=true;\n+);\n+\n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct ErrorIndex {\n     compiler: Compiler,"}]}