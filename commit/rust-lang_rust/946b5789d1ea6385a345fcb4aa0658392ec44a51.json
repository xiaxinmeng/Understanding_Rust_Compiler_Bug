{"sha": "946b5789d1ea6385a345fcb4aa0658392ec44a51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NmI1Nzg5ZDFlYTYzODVhMzQ1ZmNiNGFhMDY1ODM5MmVjNDRhNTE=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-04-08T08:44:23Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-04-09T11:45:05Z"}, "message": "Move completion label functions to display", "tree": {"sha": "e5c517463b5c3b0e6727c5b0717e0f03ee452fe4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5c517463b5c3b0e6727c5b0717e0f03ee452fe4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/946b5789d1ea6385a345fcb4aa0658392ec44a51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/946b5789d1ea6385a345fcb4aa0658392ec44a51", "html_url": "https://github.com/rust-lang/rust/commit/946b5789d1ea6385a345fcb4aa0658392ec44a51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/946b5789d1ea6385a345fcb4aa0658392ec44a51/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfaebd76aba1cfd7ac13b940d7847eb44b953cac", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfaebd76aba1cfd7ac13b940d7847eb44b953cac", "html_url": "https://github.com/rust-lang/rust/commit/dfaebd76aba1cfd7ac13b940d7847eb44b953cac"}], "stats": {"total": 63, "additions": 32, "deletions": 31}, "files": [{"sha": "deff59cd3ea5b024264aaead03a793ae715f6db5", "filename": "crates/ra_ide_api/src/completion.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/946b5789d1ea6385a345fcb4aa0658392ec44a51/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946b5789d1ea6385a345fcb4aa0658392ec44a51/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs?ref=946b5789d1ea6385a345fcb4aa0658392ec44a51", "patch": "@@ -13,12 +13,10 @@ mod complete_scope;\n mod complete_postfix;\n \n use ra_db::SourceDatabase;\n-use ra_syntax::{ast::{self, AstNode}, SyntaxKind::{ATTR, COMMENT}};\n \n use crate::{\n     db,\n     FilePosition,\n-    FunctionSignature,\n     completion::{\n         completion_item::{Completions, CompletionKind},\n         completion_context::CompletionContext,\n@@ -71,29 +69,3 @@ pub(crate) fn completions(db: &db::RootDatabase, position: FilePosition) -> Opti\n     complete_postfix::complete_postfix(&mut acc, &ctx);\n     Some(acc)\n }\n-\n-pub fn function_label(node: &ast::FnDef) -> Option<String> {\n-    Some(FunctionSignature::from(node).to_string())\n-}\n-\n-pub fn const_label(node: &ast::ConstDef) -> String {\n-    let label: String = node\n-        .syntax()\n-        .children_with_tokens()\n-        .filter(|child| !(child.kind() == COMMENT || child.kind() == ATTR))\n-        .map(|node| node.to_string())\n-        .collect();\n-\n-    label.trim().to_owned()\n-}\n-\n-pub fn type_label(node: &ast::TypeAliasDef) -> String {\n-    let label: String = node\n-        .syntax()\n-        .children_with_tokens()\n-        .filter(|child| !(child.kind() == COMMENT || child.kind() == ATTR))\n-        .map(|node| node.to_string())\n-        .collect();\n-\n-    label.trim().to_owned()\n-}"}, {"sha": "9aa346688758cef8dd5a71bc80996ebfe2ae8bd3", "filename": "crates/ra_ide_api/src/completion/presentation.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/946b5789d1ea6385a345fcb4aa0658392ec44a51/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946b5789d1ea6385a345fcb4aa0658392ec44a51/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=946b5789d1ea6385a345fcb4aa0658392ec44a51", "patch": "@@ -6,6 +6,9 @@ use ra_syntax::ast::NameOwner;\n \n use crate::completion::{\n     Completions, CompletionKind, CompletionItemKind, CompletionContext, CompletionItem,\n+};\n+\n+use crate::display::{\n     function_label, const_label, type_label,\n };\n \n@@ -101,7 +104,7 @@ impl Completions {\n                 CompletionItemKind::Function\n             })\n             .set_documentation(func.docs(ctx.db))\n-            .set_detail(detail);\n+            .detail(detail);\n         // If not an import, add parenthesis automatically.\n         if ctx.use_item_syntax.is_none() && !ctx.is_call {\n             tested_by!(inserts_parens_for_function_calls);"}, {"sha": "efadb9b10045e8508f3d84c5889e9951bdd828f6", "filename": "crates/ra_ide_api/src/display.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/946b5789d1ea6385a345fcb4aa0658392ec44a51/crates%2Fra_ide_api%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946b5789d1ea6385a345fcb4aa0658392ec44a51/crates%2Fra_ide_api%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay.rs?ref=946b5789d1ea6385a345fcb4aa0658392ec44a51", "patch": "@@ -3,10 +3,36 @@\n use super::*;\n use std::fmt::{self, Display};\n use join_to_string::join;\n-use ra_syntax::ast::{self, AstNode, NameOwner, VisibilityOwner, TypeParamsOwner};\n+use ra_syntax::{ast::{self, AstNode, NameOwner, VisibilityOwner, TypeParamsOwner}, SyntaxKind::{ATTR, COMMENT}};\n use std::convert::From;\n use hir::Docs;\n \n+pub(crate) fn function_label(node: &ast::FnDef) -> String {\n+    FunctionSignature::from(node).to_string()\n+}\n+\n+pub(crate) fn const_label(node: &ast::ConstDef) -> String {\n+    let label: String = node\n+        .syntax()\n+        .children_with_tokens()\n+        .filter(|child| !(child.kind() == COMMENT || child.kind() == ATTR))\n+        .map(|node| node.to_string())\n+        .collect();\n+\n+    label.trim().to_owned()\n+}\n+\n+pub(crate) fn type_label(node: &ast::TypeAliasDef) -> String {\n+    let label: String = node\n+        .syntax()\n+        .children_with_tokens()\n+        .filter(|child| !(child.kind() == COMMENT || child.kind() == ATTR))\n+        .map(|node| node.to_string())\n+        .collect();\n+\n+    label.trim().to_owned()\n+}\n+\n /// Contains information about a function signature\n #[derive(Debug)]\n pub struct FunctionSignature {"}, {"sha": "7d2c57f82cfd172d133d90020738ab01180f5632", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/946b5789d1ea6385a345fcb4aa0658392ec44a51/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946b5789d1ea6385a345fcb4aa0658392ec44a51/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=946b5789d1ea6385a345fcb4aa0658392ec44a51", "patch": "@@ -235,7 +235,7 @@ impl NavigationTarget {\n         }\n \n         visitor()\n-            .visit(crate::completion::function_label)\n+            .visit(|node: &ast::FnDef| Some(crate::display::function_label(node)))\n             .visit(|node: &ast::StructDef| visit_node(node, \"struct \"))\n             .visit(|node: &ast::EnumDef| visit_node(node, \"enum \"))\n             .visit(|node: &ast::TraitDef| visit_node(node, \"trait \"))"}]}