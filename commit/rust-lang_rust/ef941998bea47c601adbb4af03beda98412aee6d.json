{"sha": "ef941998bea47c601adbb4af03beda98412aee6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmOTQxOTk4YmVhNDdjNjAxYWRiYjRhZjAzYmVkYTk4NDEyYWVlNmQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-24T01:58:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-24T01:58:52Z"}, "message": "rustdoc: Correctly indent multiline fn signatures", "tree": {"sha": "8a4e68b063285b39b05224aad9579a88a7323b5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a4e68b063285b39b05224aad9579a88a7323b5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef941998bea47c601adbb4af03beda98412aee6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef941998bea47c601adbb4af03beda98412aee6d", "html_url": "https://github.com/rust-lang/rust/commit/ef941998bea47c601adbb4af03beda98412aee6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef941998bea47c601adbb4af03beda98412aee6d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17ac98ba22011c08289de98e16c84220f031f5eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/17ac98ba22011c08289de98e16c84220f031f5eb", "html_url": "https://github.com/rust-lang/rust/commit/17ac98ba22011c08289de98e16c84220f031f5eb"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "d0234ad6526215e182cf551b05c6c15a7a2146b9", "filename": "src/rustdoc/gen.rs", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ef941998bea47c601adbb4af03beda98412aee6d/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef941998bea47c601adbb4af03beda98412aee6d/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=ef941998bea47c601adbb4af03beda98412aee6d", "patch": "@@ -117,13 +117,19 @@ fn write_fn(\n fn write_sig(ctxt: ctxt, sig: option<str>) {\n     alt sig {\n       some(sig) {\n-        ctxt.w.write_line(#fmt(\"    %s\", sig));\n+        ctxt.w.write_line(code_block_indent(sig));\n         ctxt.w.write_line(\"\");\n       }\n       none { fail \"unimplemented\" }\n     }\n }\n \n+fn code_block_indent(s: str) -> str {\n+    let lines = str::lines_any(s);\n+    let indented = vec::map(lines, { |line| #fmt(\"    %s\", line) });\n+    str::connect(indented, \"\\n\")\n+}\n+\n #[test]\n fn should_write_the_function_signature() {\n     let markdown = test::render(\"#[doc = \\\"f\\\"] fn a() { }\");\n@@ -136,6 +142,23 @@ fn should_insert_blank_line_after_fn_signature() {\n     assert str::contains(markdown, \"fn a()\\n\\n\");\n }\n \n+#[test]\n+fn should_correctly_indent_fn_signature() {\n+    let doc = test::create_doc(\"fn a() { }\");\n+    let doc = ~{\n+        topmod: ~{\n+            fns: doc::fnlist([~{\n+                sig: some(\"line 1\\nline 2\")\n+                with *doc.topmod.fns[0]\n+            }])\n+            with *doc.topmod\n+        }\n+        with *doc\n+    };\n+    let markdown = test::write_markdown_str(doc);\n+    assert str::contains(markdown, \"    line 1\\n    line 2\");\n+}\n+\n fn write_brief(\n     ctxt: ctxt,\n     brief: option<str>\n@@ -280,6 +303,13 @@ fn should_write_return_description_on_same_line_as_type() {\n #[cfg(test)]\n mod test {\n     fn render(source: str) -> str {\n+        let doc = create_doc(source);\n+        let markdown = write_markdown_str(doc);\n+        #debug(\"markdown: %s\", markdown);\n+        markdown\n+    }\n+\n+    fn create_doc(source: str) -> doc::cratedoc {\n         let srv = astsrv::mk_srv_from_str(source);\n         let doc = extract::from_srv(srv, \"\");\n         #debug(\"doc (extract): %?\", doc);\n@@ -289,9 +319,7 @@ mod test {\n         #debug(\"doc (path): %?\", doc);\n         let doc = attr_pass::mk_pass()(srv, doc);\n         #debug(\"doc (attr): %?\", doc);\n-        let markdown = write_markdown_str(doc);\n-        #debug(\"markdown: %s\", markdown);\n-        markdown\n+        doc\n     }\n \n     fn write_markdown_str("}]}