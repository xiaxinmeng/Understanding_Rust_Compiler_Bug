{"sha": "0cee2c50952a11099692652af367b4fea3cb09a6", "node_id": "C_kwDOAAsO6NoAKDBjZWUyYzUwOTUyYTExMDk5NjkyNjUyYWYzNjdiNGZlYTNjYjA5YTY", "commit": {"author": {"name": "Tyler Weaver", "email": "tyler@picknik.ai", "date": "2023-01-02T23:42:56Z"}, "committer": {"name": "Tyler Weaver", "email": "tyler@picknik.ai", "date": "2023-01-02T23:42:56Z"}, "message": "Don't trigger lint if last method is to_lower/upper", "tree": {"sha": "28b26f76ae4030dc37700536df01947064c76bd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28b26f76ae4030dc37700536df01947064c76bd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cee2c50952a11099692652af367b4fea3cb09a6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAARcAAAAHc3NoLXJzYQAAAAMBAAEAAAEBALT2BR97TqMEfbs16kxp9J\nBwk/H0Kc3HrrEj5WAJngRJRlF5gV0mkh4CWr5gCardKxWaUrjLK/rVR/zyM8Ic4cAcY6pE\nIilIy/Owe20c1xOZdHPtoXKi5yKBENIhMPBNNVvNPl0uLwL73cH5DsXo0TFHyCaUkXv/uj\nDH8v1HSwDi2EVcMX6poH4RmSbq9Vfh1obNhY2uPJ2CqT2sFk3qWFK5sd+RIf3V9Ah1M36u\ndUEdl/rC4ByVjfAqjCDSbjtYP61Va70DNVGZOBjZXS+IZnQCyAqtjYu//U666YhMaBsPDS\ngl3liYqKG+GUcf94wfY7KQcMDhny2PpOa+Ve6o5vEAAAADZ2l0AAAAAAAAAAZzaGE1MTIA\nAAEUAAAADHJzYS1zaGEyLTUxMgAAAQCc/7gWm86SM84dX0jxJIfFCnyJiGDv6S47EsfX5o\nv26wdRv2RD4OVc0tqbA/NMWXzjRKAiWf/CTdr0yhq6sHvdwdzRL++ZtFSOu8K8nCuAwwIw\nM0auL8DzoEJmJCq6Sf4Mdhd6I0rT7VuqQXbVFeccu6/GqoV7XoFv/cpeQX81Cj4bSPuEVX\nDnkCtn3unzL7dhWS7+zo2IoiNEWdwAQDQHozFF9DJlSuSKtHt5vJGhrJOAMvu4/r6k/6aQ\ndakPZsImjrQHF1gFyVXG88+xyyFZ09/E7PGpENm+pBl0rpRhf41DmwPclUCXMoxoUuYG65\nYk0rKgYbajx8caSI27mP1a\n-----END SSH SIGNATURE-----", "payload": "tree 28b26f76ae4030dc37700536df01947064c76bd5\nparent 0aa7d73df37470b9f868873587faf64c3339f964\nauthor Tyler Weaver <tyler@picknik.ai> 1672702976 -0700\ncommitter Tyler Weaver <tyler@picknik.ai> 1672702976 -0700\n\nDon't trigger lint if last method is to_lower/upper\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cee2c50952a11099692652af367b4fea3cb09a6", "html_url": "https://github.com/rust-lang/rust/commit/0cee2c50952a11099692652af367b4fea3cb09a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cee2c50952a11099692652af367b4fea3cb09a6/comments", "author": {"login": "tylerjw", "id": 2490389, "node_id": "MDQ6VXNlcjI0OTAzODk=", "avatar_url": "https://avatars.githubusercontent.com/u/2490389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerjw", "html_url": "https://github.com/tylerjw", "followers_url": "https://api.github.com/users/tylerjw/followers", "following_url": "https://api.github.com/users/tylerjw/following{/other_user}", "gists_url": "https://api.github.com/users/tylerjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerjw/subscriptions", "organizations_url": "https://api.github.com/users/tylerjw/orgs", "repos_url": "https://api.github.com/users/tylerjw/repos", "events_url": "https://api.github.com/users/tylerjw/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerjw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tylerjw", "id": 2490389, "node_id": "MDQ6VXNlcjI0OTAzODk=", "avatar_url": "https://avatars.githubusercontent.com/u/2490389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerjw", "html_url": "https://github.com/tylerjw", "followers_url": "https://api.github.com/users/tylerjw/followers", "following_url": "https://api.github.com/users/tylerjw/following{/other_user}", "gists_url": "https://api.github.com/users/tylerjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerjw/subscriptions", "organizations_url": "https://api.github.com/users/tylerjw/orgs", "repos_url": "https://api.github.com/users/tylerjw/repos", "events_url": "https://api.github.com/users/tylerjw/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerjw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aa7d73df37470b9f868873587faf64c3339f964", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aa7d73df37470b9f868873587faf64c3339f964", "html_url": "https://github.com/rust-lang/rust/commit/0aa7d73df37470b9f868873587faf64c3339f964"}], "stats": {"total": 61, "additions": 12, "deletions": 49}, "files": [{"sha": "b6ec0fba6cfbb0c3a18b3187919df643acc739fc", "filename": "clippy_lints/src/methods/case_sensitive_file_extension_comparisons.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0cee2c50952a11099692652af367b4fea3cb09a6/clippy_lints%2Fsrc%2Fmethods%2Fcase_sensitive_file_extension_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cee2c50952a11099692652af367b4fea3cb09a6/clippy_lints%2Fsrc%2Fmethods%2Fcase_sensitive_file_extension_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fcase_sensitive_file_extension_comparisons.rs?ref=0cee2c50952a11099692652af367b4fea3cb09a6", "patch": "@@ -18,6 +18,13 @@ pub(super) fn check<'tcx>(\n     recv: &'tcx Expr<'_>,\n     arg: &'tcx Expr<'_>,\n ) {\n+    if let ExprKind::MethodCall(path_segment, ..) = recv.kind {\n+        let method_name = path_segment.ident.name.as_str();\n+        if method_name == \"to_lowercase\" || method_name == \"to_uppercase\" {\n+            return;\n+        }\n+    }\n+\n     if_chain! {\n         if let Some(method_id) = cx.typeck_results().type_dependent_def_id(expr.hir_id);\n         if let Some(impl_id) = cx.tcx.impl_of_method(method_id);\n@@ -44,16 +51,6 @@ pub(super) fn check<'tcx>(\n                         recv_source = format!(\"&{recv_source}\");\n                     }\n \n-                    if recv_source.ends_with(\".to_lowercase()\") {\n-                        diag.note(\"to_lowercase allocates memory, this can be avoided by using Path\");\n-                        recv_source = recv_source.strip_suffix(\".to_lowercase()\").unwrap().to_string();\n-                    }\n-\n-                    if recv_source.ends_with(\".to_uppercase()\") {\n-                        diag.note(\"to_uppercase allocates memory, this can be avoided by using Path\");\n-                        recv_source = recv_source.strip_suffix(\".to_uppercase()\").unwrap().to_string();\n-                    }\n-\n                     let suggestion_source = reindent_multiline(\n                         format!(\n                             \"std::path::Path::new({})"}, {"sha": "a19ed1ddcd54af7f27e0163247f9a11aef06f552", "filename": "tests/ui/case_sensitive_file_extension_comparisons.fixed", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cee2c50952a11099692652af367b4fea3cb09a6/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0cee2c50952a11099692652af367b4fea3cb09a6/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.fixed?ref=0cee2c50952a11099692652af367b4fea3cb09a6", "patch": "@@ -36,13 +36,9 @@ fn main() {\n         .extension()\n         .map_or(false, |ext| ext.eq_ignore_ascii_case(\"EXT12\"));\n \n-    // This should print a note about how to_lowercase and to_uppercase allocates\n-    let _ = std::path::Path::new(&String::new())\n-        .extension()\n-        .map_or(false, |ext| ext.eq_ignore_ascii_case(\"EXT12\"));\n-    let _ = std::path::Path::new(&String::new())\n-        .extension()\n-        .map_or(false, |ext| ext.eq_ignore_ascii_case(\"EXT12\"));\n+    // Should not trigger the lint failure because of the calls to to_lowercase and to_uppercase\n+    let _ = String::new().to_lowercase().ends_with(\".EXT12\");\n+    let _ = String::new().to_uppercase().ends_with(\".EXT12\");\n \n     // The test struct should not trigger the lint failure with .EXT12\n     TestStruct {}.ends_with(\".EXT12\");"}, {"sha": "ad56b7296f75f550b5e3ed7f70f048bf9354cb85", "filename": "tests/ui/case_sensitive_file_extension_comparisons.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cee2c50952a11099692652af367b4fea3cb09a6/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cee2c50952a11099692652af367b4fea3cb09a6/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.rs?ref=0cee2c50952a11099692652af367b4fea3cb09a6", "patch": "@@ -26,7 +26,7 @@ fn main() {\n     let _ = String::new().ends_with(\".EXT12\");\n     let _ = \"str\".ends_with(\".EXT12\");\n \n-    // This should print a note about how to_lowercase and to_uppercase allocates\n+    // Should not trigger the lint failure because of the calls to to_lowercase and to_uppercase\n     let _ = String::new().to_lowercase().ends_with(\".EXT12\");\n     let _ = String::new().to_uppercase().ends_with(\".EXT12\");\n "}, {"sha": "b5c8e4b4fe6832cee783b2497b0078eb657916cf", "filename": "tests/ui/case_sensitive_file_extension_comparisons.stderr", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0cee2c50952a11099692652af367b4fea3cb09a6/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0cee2c50952a11099692652af367b4fea3cb09a6/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.stderr?ref=0cee2c50952a11099692652af367b4fea3cb09a6", "patch": "@@ -69,35 +69,5 @@ LL +         .extension()\n LL ~         .map_or(false, |ext| ext.eq_ignore_ascii_case(\"EXT12\"));\n    |\n \n-error: case-sensitive file extension comparison\n-  --> $DIR/case_sensitive_file_extension_comparisons.rs:30:13\n-   |\n-LL |     let _ = String::new().to_lowercase().ends_with(\".EXT12\");\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using a case-insensitive comparison instead\n-   = note: to_lowercase allocates memory, this can be avoided by using Path\n-help: use std::path::Path\n-   |\n-LL ~     let _ = std::path::Path::new(&String::new())\n-LL +         .extension()\n-LL ~         .map_or(false, |ext| ext.eq_ignore_ascii_case(\"EXT12\"));\n-   |\n-\n-error: case-sensitive file extension comparison\n-  --> $DIR/case_sensitive_file_extension_comparisons.rs:31:13\n-   |\n-LL |     let _ = String::new().to_uppercase().ends_with(\".EXT12\");\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using a case-insensitive comparison instead\n-   = note: to_uppercase allocates memory, this can be avoided by using Path\n-help: use std::path::Path\n-   |\n-LL ~     let _ = std::path::Path::new(&String::new())\n-LL +         .extension()\n-LL ~         .map_or(false, |ext| ext.eq_ignore_ascii_case(\"EXT12\"));\n-   |\n-\n-error: aborting due to 7 previous errors\n+error: aborting due to 5 previous errors\n "}]}