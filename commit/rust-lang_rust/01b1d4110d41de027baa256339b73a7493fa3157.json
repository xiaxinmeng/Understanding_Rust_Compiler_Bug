{"sha": "01b1d4110d41de027baa256339b73a7493fa3157", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxYjFkNDExMGQ0MWRlMDI3YmFhMjU2MzM5YjczYTc0OTNmYTMxNTc=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-04-13T18:20:36Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-04-13T18:55:44Z"}, "message": "Remove code that is already in llvm for some time.", "tree": {"sha": "442d1b79b55bb999c816412abdbb7f1b53a91bdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/442d1b79b55bb999c816412abdbb7f1b53a91bdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01b1d4110d41de027baa256339b73a7493fa3157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01b1d4110d41de027baa256339b73a7493fa3157", "html_url": "https://github.com/rust-lang/rust/commit/01b1d4110d41de027baa256339b73a7493fa3157", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01b1d4110d41de027baa256339b73a7493fa3157/comments", "author": null, "committer": null, "parents": [{"sha": "8e0ecb4d1a3106dff57b9d949768df41d570ae67", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e0ecb4d1a3106dff57b9d949768df41d570ae67", "html_url": "https://github.com/rust-lang/rust/commit/8e0ecb4d1a3106dff57b9d949768df41d570ae67"}], "stats": {"total": 64, "additions": 1, "deletions": 63}, "files": [{"sha": "0b613d1212fb05d611b53a03cf108b0d4a01a695", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01b1d4110d41de027baa256339b73a7493fa3157/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/01b1d4110d41de027baa256339b73a7493fa3157/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=01b1d4110d41de027baa256339b73a7493fa3157", "patch": "@@ -368,7 +368,7 @@ RUNTIME_LIBS := $(CFG_GCC_POST_LIB_FLAGS)\n ######################################################################\n \n RUSTLLVM_LIB_CS := $(addprefix rustllvm/, \\\n-                     MachOObjectFile.cpp Object.cpp Passes.cpp)\n+                     MachOObjectFile.cpp Passes.cpp)\n \n RUSTLLVM_OBJS_CS := $(addprefix rustllvm/, RustWrapper.cpp)\n "}, {"sha": "603b23c74e9346f100a64e9b0da91d61d4fb018a", "filename": "src/rustllvm/Object.cpp", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/8e0ecb4d1a3106dff57b9d949768df41d570ae67/src%2Frustllvm%2FObject.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/8e0ecb4d1a3106dff57b9d949768df41d570ae67/src%2Frustllvm%2FObject.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FObject.cpp?ref=8e0ecb4d1a3106dff57b9d949768df41d570ae67", "patch": "@@ -1,59 +0,0 @@\n-//===- Object.cpp - C bindings to the object file library--------*- C++ -*-===//\n-//\n-//                     The LLVM Compiler Infrastructure\n-//\n-// This file is distributed under the University of Illinois Open Source\n-// License. See LICENSE.TXT for details.\n-//\n-//===----------------------------------------------------------------------===//\n-//\n-// This file defines the C bindings to the file-format-independent object\n-// library.\n-//\n-//===----------------------------------------------------------------------===//\n-\n-#include \"llvm/Object/ObjectFile.h\"\n-#include \"llvm-c/Object.h\"\n-\n-using namespace llvm;\n-using namespace object;\n-\n-LLVMObjectFileRef LLVMCreateObjectFile(LLVMMemoryBufferRef MemBuf) {\n-  return wrap(ObjectFile::createObjectFile(unwrap(MemBuf)));\n-}\n-\n-void LLVMDisposeObjectFile(LLVMObjectFileRef ObjectFile) {\n-  delete unwrap(ObjectFile);\n-}\n-\n-LLVMSectionIteratorRef LLVMGetSections(LLVMObjectFileRef ObjectFile) {\n-  ObjectFile::section_iterator SI = unwrap(ObjectFile)->begin_sections();\n-  return wrap(new ObjectFile::section_iterator(SI));\n-}\n-\n-void LLVMDisposeSectionIterator(LLVMSectionIteratorRef SI) {\n-  delete unwrap(SI);\n-}\n-\n-LLVMBool LLVMIsSectionIteratorAtEnd(LLVMObjectFileRef ObjectFile,\n-                                LLVMSectionIteratorRef SI) {\n-  return (*unwrap(SI) == unwrap(ObjectFile)->end_sections()) ? 1 : 0;\n-}\n-\n-void LLVMMoveToNextSection(LLVMSectionIteratorRef SI) {\n-  // We can't use unwrap() here because the argument to ++ must be an lvalue.\n-  ++*reinterpret_cast<ObjectFile::section_iterator*>(SI);\n-}\n-\n-const char *LLVMGetSectionName(LLVMSectionIteratorRef SI) {\n-  return (*unwrap(SI))->getName().data();\n-}\n-\n-uint64_t LLVMGetSectionSize(LLVMSectionIteratorRef SI) {\n-  return (*unwrap(SI))->getSize();\n-}\n-\n-const char *LLVMGetSectionContents(LLVMSectionIteratorRef SI) {\n-  return (*unwrap(SI))->getContents().data();\n-}\n-"}, {"sha": "ac9b48cda8f16cf938ff567247e27edd3bb5f304", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01b1d4110d41de027baa256339b73a7493fa3157/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/01b1d4110d41de027baa256339b73a7493fa3157/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=01b1d4110d41de027baa256339b73a7493fa3157", "patch": "@@ -29,9 +29,6 @@ extern \"C\" const char *LLVMRustGetLastError(void) {\n   return LLVMRustError;\n }\n \n-LLVMOpaqueObjectFile* (*RustHackToFetchObjectO)(LLVMOpaqueMemoryBuffer*)\n-  = LLVMCreateObjectFile;\n-\n extern \"C\" void LLVMAddBasicAliasAnalysisPass(LLVMPassManagerRef PM);\n \n void (*RustHackToFetchPassesO)(LLVMPassManagerRef PM) ="}]}