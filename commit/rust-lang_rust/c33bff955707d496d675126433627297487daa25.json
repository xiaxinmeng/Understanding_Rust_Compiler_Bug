{"sha": "c33bff955707d496d675126433627297487daa25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzM2JmZjk1NTcwN2Q0OTZkNjc1MTI2NDMzNjI3Mjk3NDg3ZGFhMjU=", "commit": {"author": {"name": "Daniel Patterson", "email": "dbp@riseup.net", "date": "2012-10-12T03:13:04Z"}, "committer": {"name": "Daniel Patterson", "email": "dbp@riseup.net", "date": "2012-10-12T03:13:04Z"}, "message": "tutorial: add note about mutability of vectors", "tree": {"sha": "340c34a16bac06c63c2c2ddcbbb8100912a2bd53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/340c34a16bac06c63c2c2ddcbbb8100912a2bd53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c33bff955707d496d675126433627297487daa25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c33bff955707d496d675126433627297487daa25", "html_url": "https://github.com/rust-lang/rust/commit/c33bff955707d496d675126433627297487daa25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c33bff955707d496d675126433627297487daa25/comments", "author": null, "committer": null, "parents": [{"sha": "140d16ac5803a0e7b61d0f901a82549c09e4411f", "url": "https://api.github.com/repos/rust-lang/rust/commits/140d16ac5803a0e7b61d0f901a82549c09e4411f", "html_url": "https://github.com/rust-lang/rust/commit/140d16ac5803a0e7b61d0f901a82549c09e4411f"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "12850a92a0389b5789798e1f739010f2ff3ac136", "filename": "doc/tutorial.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c33bff955707d496d675126433627297487daa25/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/c33bff955707d496d675126433627297487daa25/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=c33bff955707d496d675126433627297487daa25", "patch": "@@ -216,7 +216,7 @@ while count < 10 {\n \n Although Rust can almost always infer the types of local variables, you\n can specify a variable's type by following it with a colon, then the type\n-name. \n+name.\n \n ~~~~\n let monster_size: float = 57.8;\n@@ -381,6 +381,10 @@ of:\n `[mut T]`                 Mutable vector with unknown size\n ------------------------- -----------------------------------------------\n \n+> ***Note***: In the future, mutability for vectors may be defined by\n+> the slot that contains the vector, not the type of the vector itself,\n+> deprecating [mut T] syntax.\n+\n In function types, the return type is specified with an arrow, as in\n the type `fn() -> bool` or the function declaration `fn foo() -> bool\n { }`.  For functions that do not return a meaningful value, you can\n@@ -1951,7 +1955,7 @@ trait Printable {\n ~~~~\n \n Traits may be implemented for specific types with [impls]. An impl\n-that implements a trait includes the name of the trait at the start of \n+that implements a trait includes the name of the trait at the start of\n the definition, as in the following impls of `Printable` for `int`\n and `~str`.\n "}]}