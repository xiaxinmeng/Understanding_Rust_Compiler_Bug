{"sha": "22cf833dd1f1afc30192bb9d4e030bacb4de6fc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyY2Y4MzNkZDFmMWFmYzMwMTkyYmI5ZDRlMDMwYmFjYjRkZTZmYzc=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-06-12T19:05:37Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-06-12T19:23:06Z"}, "message": "Rename -Z no-verify to -Z verify-llvm-ir\n\nThis disables IR verification by default.", "tree": {"sha": "5b0c330bb4fd0b2dec7f3b3d351e205b161e1785", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b0c330bb4fd0b2dec7f3b3d351e205b161e1785"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7", "html_url": "https://github.com/rust-lang/rust/commit/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78a16443a3f9b617b83c1dda15b94b3636c2895d", "url": "https://api.github.com/repos/rust-lang/rust/commits/78a16443a3f9b617b83c1dda15b94b3636c2895d", "html_url": "https://github.com/rust-lang/rust/commit/78a16443a3f9b617b83c1dda15b94b3636c2895d"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "482ae02503b103f9cc713441f3cc4f7a0ffada9c", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=22cf833dd1f1afc30192bb9d4e030bacb4de6fc7", "patch": "@@ -1152,8 +1152,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"gather codegen statistics\"),\n     asm_comments: bool = (false, parse_bool, [TRACKED],\n         \"generate comments into the assembly (may change behavior)\"),\n-    no_verify: bool = (false, parse_bool, [TRACKED],\n-        \"skip LLVM verification\"),\n+    verify_llvm_ir: bool = (false, parse_bool, [TRACKED],\n+        \"verify LLVM IR\"),\n     borrowck_stats: bool = (false, parse_bool, [UNTRACKED],\n         \"gather borrowck statistics\"),\n     no_landing_pads: bool = (false, parse_bool, [TRACKED],\n@@ -3097,7 +3097,7 @@ mod tests {\n         assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());\n \n         opts = reference.clone();\n-        opts.debugging_opts.no_verify = true;\n+        opts.debugging_opts.verify_llvm_ir = true;\n         assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());\n \n         opts = reference.clone();"}, {"sha": "64075926b65e012594c3ff2aaae55a62654cd8be", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=22cf833dd1f1afc30192bb9d4e030bacb4de6fc7", "patch": "@@ -513,8 +513,8 @@ impl Session {\n     pub fn asm_comments(&self) -> bool {\n         self.opts.debugging_opts.asm_comments\n     }\n-    pub fn no_verify(&self) -> bool {\n-        self.opts.debugging_opts.no_verify\n+    pub fn verify_llvm_ir(&self) -> bool {\n+        self.opts.debugging_opts.verify_llvm_ir\n     }\n     pub fn borrowck_stats(&self) -> bool {\n         self.opts.debugging_opts.borrowck_stats"}, {"sha": "a33f8b569d0a8585e3cee4a92ffbf70e90b19699", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=22cf833dd1f1afc30192bb9d4e030bacb4de6fc7", "patch": "@@ -462,7 +462,7 @@ fn run_pass_manager(cgcx: &CodegenContext,\n         let pm = llvm::LLVMCreatePassManager();\n         llvm::LLVMRustAddAnalysisPasses(tm, pm, llmod);\n \n-        if !config.no_verify {\n+        if config.verify_llvm_ir {\n             let pass = llvm::LLVMRustFindAndCreatePass(\"verify\\0\".as_ptr() as *const _);\n             assert!(!pass.is_null());\n             llvm::LLVMRustAddPass(pm, pass);\n@@ -497,7 +497,7 @@ fn run_pass_manager(cgcx: &CodegenContext,\n             }\n         });\n \n-        if !config.no_verify {\n+        if config.verify_llvm_ir {\n             let pass = llvm::LLVMRustFindAndCreatePass(\"verify\\0\".as_ptr() as *const _);\n             assert!(!pass.is_null());\n             llvm::LLVMRustAddPass(pm, pass);"}, {"sha": "f6e2d68d7fabdbd9eff857e2df59d0b4d125268a", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22cf833dd1f1afc30192bb9d4e030bacb4de6fc7/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=22cf833dd1f1afc30192bb9d4e030bacb4de6fc7", "patch": "@@ -232,7 +232,7 @@ pub struct ModuleConfig {\n     emit_obj: bool,\n     // Miscellaneous flags.  These are mostly copied from command-line\n     // options.\n-    pub no_verify: bool,\n+    pub verify_llvm_ir: bool,\n     no_prepopulate_passes: bool,\n     no_builtins: bool,\n     time_passes: bool,\n@@ -271,7 +271,7 @@ impl ModuleConfig {\n             embed_bitcode_marker: false,\n             no_integrated_as: false,\n \n-            no_verify: false,\n+            verify_llvm_ir: false,\n             no_prepopulate_passes: false,\n             no_builtins: false,\n             time_passes: false,\n@@ -283,7 +283,7 @@ impl ModuleConfig {\n     }\n \n     fn set_flags(&mut self, sess: &Session, no_builtins: bool) {\n-        self.no_verify = sess.no_verify();\n+        self.verify_llvm_ir = sess.verify_llvm_ir();\n         self.no_prepopulate_passes = sess.opts.cg.no_prepopulate_passes;\n         self.no_builtins = no_builtins || sess.target.target.options.no_builtins;\n         self.time_passes = sess.time_passes();\n@@ -542,7 +542,7 @@ unsafe fn optimize(cgcx: &CodegenContext,\n             true\n         };\n \n-        if !config.no_verify { assert!(addpass(\"verify\")); }\n+        if config.verify_llvm_ir { assert!(addpass(\"verify\")); }\n         if !config.no_prepopulate_passes {\n             llvm::LLVMRustAddAnalysisPasses(tm, fpm, llmod);\n             llvm::LLVMRustAddAnalysisPasses(tm, mpm, llmod);"}]}