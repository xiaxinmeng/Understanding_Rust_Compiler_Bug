{"sha": "83fbdddc99f5fc4f76e144c6d86184dd09169287", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZmJkZGRjOTlmNWZjNGY3NmUxNDRjNmQ4NjE4NGRkMDkxNjkyODc=", "commit": {"author": {"name": "Florian Warzecha", "email": "liketechnik@disroot.org", "date": "2020-10-23T14:54:25Z"}, "committer": {"name": "Florian Warzecha", "email": "liketechnik@disroot.org", "date": "2020-10-23T14:54:25Z"}, "message": "ignore #[rustc_allow_const_fn_unstable] for macro expansion\n\nRecognition for `rustc_allow_const_fn_unstable` attribute was errorneously\nadded in 05f4a9a42abbbdb64d3ec4ed0ae6883c10c66e3f.", "tree": {"sha": "a4779b99a1a8c8bdab438ba00c9c465800de1094", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4779b99a1a8c8bdab438ba00c9c465800de1094"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83fbdddc99f5fc4f76e144c6d86184dd09169287", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmbauVGD14yLN3Z9qS+jH2X+RDGAFAl+S74EACgkQS+jH2X+R\nDGApng/+PzjzNkI/uFvZ6YdGjmWOhc9blWIqZmIZeC+SCLJFqDcv4Ul8sHbav5ng\nx+4Bk+IFWSoId05NVHAIH5i2EoGgq/iehwg20M8LUbfXR6IeSJTM+w2uE/VwQfBR\ngBf50T1VjtgxQWgWbXXMHHbAxiWORy8yCz0kAEU0zyxty9YJyoesOiC2nHupE/BX\nEncqTE70J7qQs6l1QvPZm5L7X5nJFomzT40ymVFXVHjsyrxmcFpTt0GB/5AAnImI\n5SYg3mdQ6ObnrtFvfTRrufJzU5nJWkVwB9QDbkhR2u7Vfd7lLkjS3a6R2d9P9tIF\n6ytnzDSooLdsvQDmZLCoLdpQenRnpiJX1rbzWzgUf+BM91mughBsN9eSR2XF7Bt1\nt8Gs9NaztrxUV7lZcv1x0CIwro0iNRaHyWz6naney7VABX+7WHJrmKC4mzW9Q4nV\n8TSc3O2OWBKCF2rnwRO3Q4ef+ITrQ2KGTJPSjKuZuT1pPUBStvQ89J01R97HMHHK\nyA+R2o3Li4WOe9mnuw+exN0rIDotx3Igyx/4L/eWlLxQjXkV8nhsUVpfa2RUQIR6\nnHCqFyBT3HlTRoBFMw8kTA/5FKOBN9GOTmkwpMrIbsLhl1aLOqE6ZxiWwSlbP2Rg\nDWvCZmZVaNYSufN0vYCgslKfnG6mgL+6mvlFnRtyatcClTundDs=\n=Lf8a\n-----END PGP SIGNATURE-----", "payload": "tree a4779b99a1a8c8bdab438ba00c9c465800de1094\nparent 3a63bf02998f7b5e040a4b87e049d03ddd144f74\nauthor Florian Warzecha <liketechnik@disroot.org> 1603464865 +0200\ncommitter Florian Warzecha <liketechnik@disroot.org> 1603464865 +0200\n\nignore #[rustc_allow_const_fn_unstable] for macro expansion\n\nRecognition for `rustc_allow_const_fn_unstable` attribute was errorneously\nadded in 05f4a9a42abbbdb64d3ec4ed0ae6883c10c66e3f.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83fbdddc99f5fc4f76e144c6d86184dd09169287", "html_url": "https://github.com/rust-lang/rust/commit/83fbdddc99f5fc4f76e144c6d86184dd09169287", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83fbdddc99f5fc4f76e144c6d86184dd09169287/comments", "author": {"login": "liketechnik", "id": 24209689, "node_id": "MDQ6VXNlcjI0MjA5Njg5", "avatar_url": "https://avatars.githubusercontent.com/u/24209689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liketechnik", "html_url": "https://github.com/liketechnik", "followers_url": "https://api.github.com/users/liketechnik/followers", "following_url": "https://api.github.com/users/liketechnik/following{/other_user}", "gists_url": "https://api.github.com/users/liketechnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/liketechnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liketechnik/subscriptions", "organizations_url": "https://api.github.com/users/liketechnik/orgs", "repos_url": "https://api.github.com/users/liketechnik/repos", "events_url": "https://api.github.com/users/liketechnik/events{/privacy}", "received_events_url": "https://api.github.com/users/liketechnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liketechnik", "id": 24209689, "node_id": "MDQ6VXNlcjI0MjA5Njg5", "avatar_url": "https://avatars.githubusercontent.com/u/24209689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liketechnik", "html_url": "https://github.com/liketechnik", "followers_url": "https://api.github.com/users/liketechnik/followers", "following_url": "https://api.github.com/users/liketechnik/following{/other_user}", "gists_url": "https://api.github.com/users/liketechnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/liketechnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liketechnik/subscriptions", "organizations_url": "https://api.github.com/users/liketechnik/orgs", "repos_url": "https://api.github.com/users/liketechnik/repos", "events_url": "https://api.github.com/users/liketechnik/events{/privacy}", "received_events_url": "https://api.github.com/users/liketechnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a63bf02998f7b5e040a4b87e049d03ddd144f74", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a63bf02998f7b5e040a4b87e049d03ddd144f74", "html_url": "https://github.com/rust-lang/rust/commit/3a63bf02998f7b5e040a4b87e049d03ddd144f74"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "b0e43a260e91de82cd5aaa6cbeb8f8f9f0bef87c", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/83fbdddc99f5fc4f76e144c6d86184dd09169287/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83fbdddc99f5fc4f76e144c6d86184dd09169287/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=83fbdddc99f5fc4f76e144c6d86184dd09169287", "patch": "@@ -768,13 +768,8 @@ impl SyntaxExtension {\n         name: Symbol,\n         attrs: &[ast::Attribute],\n     ) -> SyntaxExtension {\n-        let allow_internal_unstable = {\n-            let mut feat_list = Vec::new();\n-            attr::allow_internal_unstable(sess, &attrs).map(|features| feat_list.extend(features));\n-            attr::rustc_allow_const_fn_unstable(sess, &attrs)\n-                .map(|features| feat_list.extend(features));\n-            Some(feat_list.into())\n-        };\n+        let allow_internal_unstable = attr::allow_internal_unstable(sess, &attrs)\n+            .map(|features| features.collect::<Vec<Symbol>>().into());\n \n         let mut local_inner_macros = false;\n         if let Some(macro_export) = sess.find_by_name(attrs, sym::macro_export) {"}]}