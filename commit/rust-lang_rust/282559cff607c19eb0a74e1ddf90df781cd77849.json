{"sha": "282559cff607c19eb0a74e1ddf90df781cd77849", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MjU1OWNmZjYwN2MxOWViMGE3NGUxZGRmOTBkZjc4MWNkNzc4NDk=", "commit": {"author": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2018-10-08T13:20:16Z"}, "committer": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2018-10-08T13:26:22Z"}, "message": "Compute flags for `ty::UnnormalizedProjection`", "tree": {"sha": "9fdbe42c4c3a8871302554cbbe508893bf6379e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fdbe42c4c3a8871302554cbbe508893bf6379e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/282559cff607c19eb0a74e1ddf90df781cd77849", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/282559cff607c19eb0a74e1ddf90df781cd77849", "html_url": "https://github.com/rust-lang/rust/commit/282559cff607c19eb0a74e1ddf90df781cd77849", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/282559cff607c19eb0a74e1ddf90df781cd77849/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96ff8273951269565fb047aa00e42ab3b8038968", "url": "https://api.github.com/repos/rust-lang/rust/commits/96ff8273951269565fb047aa00e42ab3b8038968", "html_url": "https://github.com/rust-lang/rust/commit/96ff8273951269565fb047aa00e42ab3b8038968"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "10a90dfc8a8cf936a56662820ca3300e8600c0be", "filename": "src/librustc/ty/flags.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/282559cff607c19eb0a74e1ddf90df781cd77849/src%2Flibrustc%2Fty%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/282559cff607c19eb0a74e1ddf90df781cd77849/src%2Flibrustc%2Fty%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fflags.rs?ref=282559cff607c19eb0a74e1ddf90df781cd77849", "patch": "@@ -148,7 +148,10 @@ impl FlagComputation {\n                 self.add_projection_ty(data);\n             }\n \n-            &ty::UnnormalizedProjection(..) => bug!(\"only used with chalk-engine\"),\n+            &ty::UnnormalizedProjection(ref data) => {\n+                self.add_flags(TypeFlags::HAS_PROJECTION);\n+                self.add_projection_ty(data);\n+            },\n \n             &ty::Opaque(_, substs) => {\n                 self.add_flags(TypeFlags::HAS_PROJECTION);"}]}