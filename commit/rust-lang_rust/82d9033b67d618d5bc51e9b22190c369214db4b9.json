{"sha": "82d9033b67d618d5bc51e9b22190c369214db4b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZDkwMzNiNjdkNjE4ZDViYzUxZTliMjIxOTBjMzY5MjE0ZGI0Yjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-27T03:37:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-27T03:37:38Z"}, "message": "auto merge of #10679 : alexcrichton/rust/no-routine, r=pcwalton", "tree": {"sha": "bdc9f35854d9f9a540ea3dad1f14166eeceda3a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdc9f35854d9f9a540ea3dad1f14166eeceda3a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82d9033b67d618d5bc51e9b22190c369214db4b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82d9033b67d618d5bc51e9b22190c369214db4b9", "html_url": "https://github.com/rust-lang/rust/commit/82d9033b67d618d5bc51e9b22190c369214db4b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82d9033b67d618d5bc51e9b22190c369214db4b9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb52956fe40c2407bed467514fb8be44ce9ce194", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb52956fe40c2407bed467514fb8be44ce9ce194", "html_url": "https://github.com/rust-lang/rust/commit/fb52956fe40c2407bed467514fb8be44ce9ce194"}, {"sha": "7dcc066bd2e83513a3d55df38109ddcfada67497", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dcc066bd2e83513a3d55df38109ddcfada67497", "html_url": "https://github.com/rust-lang/rust/commit/7dcc066bd2e83513a3d55df38109ddcfada67497"}], "stats": {"total": 55, "additions": 5, "deletions": 50}, "files": [{"sha": "59b8b70035c0abadff02b479403f19e7d0820156", "filename": "src/libextra/c_vec.rs", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/82d9033b67d618d5bc51e9b22190c369214db4b9/src%2Flibextra%2Fc_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d9033b67d618d5bc51e9b22190c369214db4b9/src%2Flibextra%2Fc_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fc_vec.rs?ref=82d9033b67d618d5bc51e9b22190c369214db4b9", "patch": "@@ -37,7 +37,6 @@\n  */\n \n use std::ptr;\n-use std::routine::Runnable;\n use std::util;\n \n /**\n@@ -50,7 +49,7 @@ pub struct CVec<T> {\n }\n \n struct DtorRes {\n-    dtor: Option<~Runnable>,\n+    dtor: Option<proc()>,\n }\n \n #[unsafe_destructor]\n@@ -59,13 +58,13 @@ impl Drop for DtorRes {\n         let dtor = util::replace(&mut self.dtor, None);\n         match dtor {\n             None => (),\n-            Some(f) => f.run()\n+            Some(f) => f()\n         }\n     }\n }\n \n impl DtorRes {\n-    fn new(dtor: Option<~Runnable>) -> DtorRes {\n+    fn new(dtor: Option<proc()>) -> DtorRes {\n         DtorRes {\n             dtor: dtor,\n         }\n@@ -103,7 +102,7 @@ pub unsafe fn CVec<T>(base: *mut T, len: uint) -> CVec<T> {\n  * * dtor - A function to run when the value is destructed, useful\n  *          for freeing the buffer, etc.\n  */\n-pub unsafe fn c_vec_with_dtor<T>(base: *mut T, len: uint, dtor: ~Runnable)\n+pub unsafe fn c_vec_with_dtor<T>(base: *mut T, len: uint, dtor: proc())\n                                  -> CVec<T> {\n     return CVec{\n         base: base,\n@@ -155,19 +154,6 @@ mod tests {\n \n     use std::libc::*;\n     use std::libc;\n-    use std::routine::Runnable;\n-\n-    struct LibcFree {\n-        mem: *c_void,\n-    }\n-\n-    impl Runnable for LibcFree {\n-        fn run(~self) {\n-            unsafe {\n-                libc::free(self.mem)\n-            }\n-        }\n-    }\n \n     fn malloc(n: size_t) -> CVec<u8> {\n         unsafe {\n@@ -177,9 +163,7 @@ mod tests {\n \n             return c_vec_with_dtor(mem as *mut u8,\n                                    n as uint,\n-                                   ~LibcFree {\n-                                    mem: mem,\n-                                   } as ~Runnable);\n+                                   proc() unsafe { libc::free(mem); });\n         }\n     }\n "}, {"sha": "7a8b4467fcc9cdbf2ce37e859301d3fe892790b6", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/82d9033b67d618d5bc51e9b22190c369214db4b9/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d9033b67d618d5bc51e9b22190c369214db4b9/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=82d9033b67d618d5bc51e9b22190c369214db4b9", "patch": "@@ -192,7 +192,6 @@ pub mod reflect;\n pub mod condition;\n pub mod logging;\n pub mod util;\n-pub mod routine;\n pub mod mem;\n \n "}, {"sha": "e8a91b49c8ee4cb31aa4ecd70cfe0ccadbad551f", "filename": "src/libstd/routine.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/fb52956fe40c2407bed467514fb8be44ce9ce194/src%2Flibstd%2Froutine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb52956fe40c2407bed467514fb8be44ce9ce194/src%2Flibstd%2Froutine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Froutine.rs?ref=fb52956fe40c2407bed467514fb8be44ce9ce194", "patch": "@@ -1,28 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-/*!\n- * Routines are like closures except that they own their arguments and can\n- * only run once.\n- */\n-\n-/// A routine that takes no arguments and returns nothing.\n-pub trait Runnable {\n-    /// The entry point for the routine.\n-    fn run(~self);\n-}\n-\n-/// A convenience routine that does nothing.\n-pub struct NoOpRunnable;\n-\n-impl Runnable for NoOpRunnable {\n-    fn run(~self) {}\n-}\n-"}]}