{"sha": "ad887322541b1c255b210cf87fae675072d1027f", "node_id": "C_kwDOAAsO6NoAKGFkODg3MzIyNTQxYjFjMjU1YjIxMGNmODdmYWU2NzUwNzJkMTAyN2Y", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-03-26T13:58:19Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-03-26T13:58:19Z"}, "message": "Fix perf issue for auto trait selection", "tree": {"sha": "bd876f2d03dee317945b74bed25d539f39848af0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd876f2d03dee317945b74bed25d539f39848af0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad887322541b1c255b210cf87fae675072d1027f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad887322541b1c255b210cf87fae675072d1027f", "html_url": "https://github.com/rust-lang/rust/commit/ad887322541b1c255b210cf87fae675072d1027f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad887322541b1c255b210cf87fae675072d1027f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fe3b89cd57229343eeca753fdd8c63d9b03c65c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe3b89cd57229343eeca753fdd8c63d9b03c65c", "html_url": "https://github.com/rust-lang/rust/commit/3fe3b89cd57229343eeca753fdd8c63d9b03c65c"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "dc16460ca436ede5ff4f6a76e43024bef8c8d45f", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ad887322541b1c255b210cf87fae675072d1027f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad887322541b1c255b210cf87fae675072d1027f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=ad887322541b1c255b210cf87fae675072d1027f", "patch": "@@ -999,6 +999,15 @@ impl<'tcx> PolyTraitRef<'tcx> {\n             polarity: ty::ImplPolarity::Positive,\n         })\n     }\n+\n+    /// Same as [`PolyTraitRef::to_poly_trait_predicate`] but sets a negative polarity instead.\n+    pub fn to_poly_trait_predicate_negative_polarity(&self) -> ty::PolyTraitPredicate<'tcx> {\n+        self.map_bound(|trait_ref| ty::TraitPredicate {\n+            trait_ref,\n+            constness: ty::BoundConstness::NotConst,\n+            polarity: ty::ImplPolarity::Negative,\n+        })\n+    }\n }\n \n /// An existential reference to a trait, where `Self` is erased."}, {"sha": "6f6f21aa78842422d3c6aaad8d985532d7482d4c", "filename": "compiler/rustc_trait_selection/src/traits/auto_trait.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ad887322541b1c255b210cf87fae675072d1027f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad887322541b1c255b210cf87fae675072d1027f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs?ref=ad887322541b1c255b210cf87fae675072d1027f", "patch": "@@ -94,6 +94,24 @@ impl<'tcx> AutoTraitFinder<'tcx> {\n                 trait_pred.to_poly_trait_predicate(),\n             ));\n \n+            match result {\n+                Ok(Some(ImplSource::UserDefined(_))) => {\n+                    debug!(\n+                        \"find_auto_trait_generics({:?}): \\\n+                         manual impl found, bailing out\",\n+                        trait_ref\n+                    );\n+                    return true;\n+                }\n+                _ => {}\n+            }\n+\n+            let result = selcx.select(&Obligation::new(\n+                ObligationCause::dummy(),\n+                orig_env,\n+                trait_pred.to_poly_trait_predicate_negative_polarity(),\n+            ));\n+\n             match result {\n                 Ok(Some(ImplSource::UserDefined(_))) => {\n                     debug!("}, {"sha": "4704d8410129c5a0ba0d8d7c519c90f5ea639ecd", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ad887322541b1c255b210cf87fae675072d1027f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad887322541b1c255b210cf87fae675072d1027f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=ad887322541b1c255b210cf87fae675072d1027f", "patch": "@@ -1272,7 +1272,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         // the master cache. Since coherence executes pretty quickly,\n         // it's not worth going to more trouble to increase the\n         // hit-rate, I don't think.\n-        if self.intercrate || self.allow_negative_impls {\n+        if self.intercrate {\n             return false;\n         }\n \n@@ -1289,7 +1289,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         // mode, so don't do any caching. In particular, we might\n         // re-use the same `InferCtxt` with both an intercrate\n         // and non-intercrate `SelectionContext`\n-        if self.intercrate || self.allow_negative_impls {\n+        if self.intercrate {\n             return None;\n         }\n         let tcx = self.tcx();"}]}