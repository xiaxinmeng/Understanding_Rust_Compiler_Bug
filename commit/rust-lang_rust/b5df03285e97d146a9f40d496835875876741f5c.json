{"sha": "b5df03285e97d146a9f40d496835875876741f5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ZGYwMzI4NWU5N2QxNDZhOWY0MGQ0OTY4MzU4NzU4NzY3NDFmNWM=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-12-07T03:55:37Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-01-04T15:55:01Z"}, "message": "rustc: check_const: remove ~str support in patterns.", "tree": {"sha": "43ae76c091c3f134c75ed03483bcfb7e420f2aed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43ae76c091c3f134c75ed03483bcfb7e420f2aed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5df03285e97d146a9f40d496835875876741f5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5df03285e97d146a9f40d496835875876741f5c", "html_url": "https://github.com/rust-lang/rust/commit/b5df03285e97d146a9f40d496835875876741f5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5df03285e97d146a9f40d496835875876741f5c/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "856b90c400b0a3f5e8018255c7e33d3c1ae84a10", "url": "https://api.github.com/repos/rust-lang/rust/commits/856b90c400b0a3f5e8018255c7e33d3c1ae84a10", "html_url": "https://github.com/rust-lang/rust/commit/856b90c400b0a3f5e8018255c7e33d3c1ae84a10"}], "stats": {"total": 29, "additions": 6, "deletions": 23}, "files": [{"sha": "a30db670f9af2f534b799c9f4e916ec9a2d9b00a", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 6, "deletions": 23, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b5df03285e97d146a9f40d496835875876741f5c/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5df03285e97d146a9f40d496835875876741f5c/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=b5df03285e97d146a9f40d496835875876741f5c", "patch": "@@ -14,7 +14,6 @@ use middle::ty;\n use util::ppaux;\n \n use syntax::ast;\n-use syntax::ast_util;\n use syntax::visit::Visitor;\n use syntax::visit;\n \n@@ -82,26 +81,11 @@ fn check_item(v: &mut CheckCrateVisitor, it: &ast::Item) {\n }\n \n fn check_pat(v: &mut CheckCrateVisitor, p: &ast::Pat) {\n-    fn is_str(e: &ast::Expr) -> bool {\n-        match e.node {\n-            ast::ExprBox(_, ref expr) => {\n-                match expr.node {\n-                    ast::ExprLit(ref lit) => ast_util::lit_is_str(&**lit),\n-                    _ => false,\n-                }\n-            }\n-            _ => false,\n-        }\n-    }\n-    match p.node {\n-        // Let through plain ~-string literals here\n-        ast::PatLit(ref a) => if !is_str(&**a) { v.inside_const(|v| v.visit_expr(&**a)); },\n-        ast::PatRange(ref a, ref b) => {\n-            if !is_str(&**a) { v.inside_const(|v| v.visit_expr(&**a)); }\n-            if !is_str(&**b) { v.inside_const(|v| v.visit_expr(&**b)); }\n-        }\n-        _ => v.outside_const(|v| visit::walk_pat(v, p))\n-    }\n+    let is_const = match p.node {\n+        ast::PatLit(_) | ast::PatRange(..) => true,\n+        _ => false\n+    };\n+    v.with_const(is_const, |v| visit::walk_pat(v, p))\n }\n \n fn check_expr(v: &mut CheckCrateVisitor, e: &ast::Expr) -> bool {\n@@ -114,7 +98,6 @@ fn check_expr(v: &mut CheckCrateVisitor, e: &ast::Expr) -> bool {\n                       \"cannot do allocations in constant expressions\");\n             return false;\n         }\n-        ast::ExprLit(ref lit) if ast_util::lit_is_str(&**lit) => {}\n         ast::ExprBinary(..) | ast::ExprUnary(..) => {\n             let method_call = ty::MethodCall::expr(e.id);\n             if v.tcx.method_map.borrow().contains_key(&method_call) {\n@@ -123,7 +106,7 @@ fn check_expr(v: &mut CheckCrateVisitor, e: &ast::Expr) -> bool {\n                            expressions\");\n             }\n         }\n-        ast::ExprLit(_) => (),\n+        ast::ExprLit(_) => {}\n         ast::ExprCast(ref from, _) => {\n             let toty = ty::expr_ty(v.tcx, e);\n             let fromty = ty::expr_ty(v.tcx, &**from);"}]}