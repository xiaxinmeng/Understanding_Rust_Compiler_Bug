{"sha": "1694ea187392a4832a5d69fa008b1e5ff13fe584", "node_id": "C_kwDOAAsO6NoAKDE2OTRlYTE4NzM5MmE0ODMyYTVkNjlmYTAwOGIxZTVmZjEzZmU1ODQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-27T05:27:45Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-27T05:34:29Z"}, "message": "use check_region_obligations_and_report_errors in more places to avoid ICEs", "tree": {"sha": "185761bc268a7a3dcf49754d06ad1a21f5b315a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/185761bc268a7a3dcf49754d06ad1a21f5b315a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1694ea187392a4832a5d69fa008b1e5ff13fe584", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1694ea187392a4832a5d69fa008b1e5ff13fe584", "html_url": "https://github.com/rust-lang/rust/commit/1694ea187392a4832a5d69fa008b1e5ff13fe584", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1694ea187392a4832a5d69fa008b1e5ff13fe584/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9b31839b624345d59fda6e595b9abae71fcea13", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9b31839b624345d59fda6e595b9abae71fcea13", "html_url": "https://github.com/rust-lang/rust/commit/c9b31839b624345d59fda6e595b9abae71fcea13"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "e3ac23686b6d692398543e1754e853693436c7c7", "filename": "compiler/rustc_typeck/src/check/compare_method.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1694ea187392a4832a5d69fa008b1e5ff13fe584/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1694ea187392a4832a5d69fa008b1e5ff13fe584/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=1694ea187392a4832a5d69fa008b1e5ff13fe584", "patch": "@@ -1154,8 +1154,10 @@ pub(crate) fn compare_const_impl<'tcx>(\n         }\n \n         let outlives_environment = OutlivesEnvironment::new(param_env);\n-        infcx\n-            .resolve_regions_and_report_errors(impl_c.def_id.expect_local(), &outlives_environment);\n+        infcx.check_region_obligations_and_report_errors(\n+            impl_c.def_id.expect_local(),\n+            &outlives_environment,\n+        );\n     });\n }\n "}, {"sha": "1e404fda035af2fa00cc1f8a464dae418b9e0da4", "filename": "compiler/rustc_typeck/src/coherence/builtin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1694ea187392a4832a5d69fa008b1e5ff13fe584/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1694ea187392a4832a5d69fa008b1e5ff13fe584/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs?ref=1694ea187392a4832a5d69fa008b1e5ff13fe584", "patch": "@@ -349,7 +349,7 @@ fn visit_implementation_of_dispatch_from_dyn<'tcx>(tcx: TyCtxt<'tcx>, impl_did:\n \n                     // Finally, resolve all regions.\n                     let outlives_env = OutlivesEnvironment::new(param_env);\n-                    infcx.resolve_regions_and_report_errors(impl_did, &outlives_env);\n+                    infcx.check_region_obligations_and_report_errors(impl_did, &outlives_env);\n                 }\n             }\n             _ => {\n@@ -606,7 +606,7 @@ pub fn coerce_unsized_info<'tcx>(tcx: TyCtxt<'tcx>, impl_did: DefId) -> CoerceUn\n \n         // Finally, resolve all regions.\n         let outlives_env = OutlivesEnvironment::new(param_env);\n-        infcx.resolve_regions_and_report_errors(impl_did, &outlives_env);\n+        infcx.check_region_obligations_and_report_errors(impl_did, &outlives_env);\n \n         CoerceUnsizedInfo { custom_kind: kind }\n     })"}, {"sha": "74abb71a18e76f876d51008f4efef7cdcae80349", "filename": "compiler/rustc_typeck/src/impl_wf_check/min_specialization.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1694ea187392a4832a5d69fa008b1e5ff13fe584/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1694ea187392a4832a5d69fa008b1e5ff13fe584/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs?ref=1694ea187392a4832a5d69fa008b1e5ff13fe584", "patch": "@@ -158,8 +158,7 @@ fn get_impl_substs<'tcx>(\n         implied_bounds,\n         tcx.hir().local_def_id_to_hir_id(impl1_def_id),\n     );\n-    infcx.process_registered_region_obligations(outlives_env.region_bound_pairs(), param_env);\n-    infcx.resolve_regions_and_report_errors(impl1_def_id, &outlives_env);\n+    infcx.check_region_obligations_and_report_errors(impl1_def_id, &outlives_env);\n     let Ok(impl2_substs) = infcx.fully_resolve(impl2_substs) else {\n         let span = tcx.def_span(impl1_def_id);\n         tcx.sess.emit_err(SubstsOnOverriddenImpl { span });"}, {"sha": "3770c024fb92e040681fa8d515ffa9c00b541c19", "filename": "src/test/ui/coercion/issue-53475.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1694ea187392a4832a5d69fa008b1e5ff13fe584/src%2Ftest%2Fui%2Fcoercion%2Fissue-53475.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1694ea187392a4832a5d69fa008b1e5ff13fe584/src%2Ftest%2Fui%2Fcoercion%2Fissue-53475.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoercion%2Fissue-53475.rs?ref=1694ea187392a4832a5d69fa008b1e5ff13fe584", "patch": "@@ -0,0 +1,13 @@\n+#![feature(coerce_unsized)]\n+\n+use std::any::Any;\n+use std::ops::CoerceUnsized;\n+\n+struct Foo<T> {\n+    data: Box<T>,\n+}\n+\n+impl<T> CoerceUnsized<Foo<dyn Any>> for Foo<T> {}\n+//~^ ERROR the parameter type `T` may not live long enough\n+\n+fn main() {}"}, {"sha": "522c50dca9508fc716a902b17078a5e90bf9787c", "filename": "src/test/ui/coercion/issue-53475.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1694ea187392a4832a5d69fa008b1e5ff13fe584/src%2Ftest%2Fui%2Fcoercion%2Fissue-53475.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1694ea187392a4832a5d69fa008b1e5ff13fe584/src%2Ftest%2Fui%2Fcoercion%2Fissue-53475.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoercion%2Fissue-53475.stderr?ref=1694ea187392a4832a5d69fa008b1e5ff13fe584", "patch": "@@ -0,0 +1,14 @@\n+error[E0310]: the parameter type `T` may not live long enough\n+  --> $DIR/issue-53475.rs:10:1\n+   |\n+LL | impl<T> CoerceUnsized<Foo<dyn Any>> for Foo<T> {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds\n+   |\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL | impl<T: 'static> CoerceUnsized<Foo<dyn Any>> for Foo<T> {}\n+   |       +++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0310`."}]}