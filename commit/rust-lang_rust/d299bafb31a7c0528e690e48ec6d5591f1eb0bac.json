{"sha": "d299bafb31a7c0528e690e48ec6d5591f1eb0bac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyOTliYWZiMzFhN2MwNTI4ZTY5MGU0OGVjNmQ1NTkxZjFlYjBiYWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-25T07:12:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-25T07:12:37Z"}, "message": "auto merge of #17492 : alexcrichton/rust/issue-16274, r=aturon\n\nDetails in the commits.", "tree": {"sha": "0ae9520811c5f80e122d45896ad8a2fe2672a058", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ae9520811c5f80e122d45896ad8a2fe2672a058"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d299bafb31a7c0528e690e48ec6d5591f1eb0bac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d299bafb31a7c0528e690e48ec6d5591f1eb0bac", "html_url": "https://github.com/rust-lang/rust/commit/d299bafb31a7c0528e690e48ec6d5591f1eb0bac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d299bafb31a7c0528e690e48ec6d5591f1eb0bac/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ff308137afcacb4bc0d47e00d1dbb730229d932", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ff308137afcacb4bc0d47e00d1dbb730229d932", "html_url": "https://github.com/rust-lang/rust/commit/9ff308137afcacb4bc0d47e00d1dbb730229d932"}, {"sha": "3d8ca595a158dbf4ffbaece479e75b9c811ce815", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d8ca595a158dbf4ffbaece479e75b9c811ce815", "html_url": "https://github.com/rust-lang/rust/commit/3d8ca595a158dbf4ffbaece479e75b9c811ce815"}], "stats": {"total": 100, "additions": 98, "deletions": 2}, "files": [{"sha": "d4a1a35790936d5106287982557a84f2864bbac7", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d299bafb31a7c0528e690e48ec6d5591f1eb0bac/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d299bafb31a7c0528e690e48ec6d5591f1eb0bac/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=d299bafb31a7c0528e690e48ec6d5591f1eb0bac", "patch": "@@ -11,6 +11,8 @@\n //! Rust AST Visitor. Extracts useful information and massages it into a form\n //! usable for clean\n \n+use std::collections::HashSet;\n+\n use syntax::abi;\n use syntax::ast;\n use syntax::ast_util;\n@@ -38,16 +40,21 @@ pub struct RustdocVisitor<'a, 'tcx: 'a> {\n     pub attrs: Vec<ast::Attribute>,\n     pub cx: &'a core::DocContext<'tcx>,\n     pub analysis: Option<&'a core::CrateAnalysis>,\n+    view_item_stack: HashSet<ast::NodeId>,\n }\n \n impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n     pub fn new(cx: &'a core::DocContext<'tcx>,\n                analysis: Option<&'a core::CrateAnalysis>) -> RustdocVisitor<'a, 'tcx> {\n+        // If the root is reexported, terminate all recursion.\n+        let mut stack = HashSet::new();\n+        stack.insert(ast::CRATE_NODE_ID);\n         RustdocVisitor {\n             module: Module::new(None),\n             attrs: Vec::new(),\n             cx: cx,\n             analysis: analysis,\n+            view_item_stack: stack,\n         }\n     }\n \n@@ -228,8 +235,9 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         if !please_inline && analysis.public_items.contains(&def.node) {\n             return false\n         }\n+        if !self.view_item_stack.insert(def.node) { return false }\n \n-        match tcx.map.get(def.node) {\n+        let ret = match tcx.map.get(def.node) {\n             ast_map::NodeItem(it) => {\n                 if glob {\n                     match it.node {\n@@ -249,7 +257,9 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                 true\n             }\n             _ => false,\n-        }\n+        };\n+        self.view_item_stack.remove(&id);\n+        return ret;\n     }\n \n     pub fn visit_item(&mut self, item: &ast::Item,"}, {"sha": "b7fc6d6c0ad5b6f22c4c908dccd7f6c2426944b8", "filename": "src/test/run-make/rustdoc-recursion/Makefile", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d299bafb31a7c0528e690e48ec6d5591f1eb0bac/src%2Ftest%2Frun-make%2Frustdoc-recursion%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d299bafb31a7c0528e690e48ec6d5591f1eb0bac/src%2Ftest%2Frun-make%2Frustdoc-recursion%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-recursion%2FMakefile?ref=d299bafb31a7c0528e690e48ec6d5591f1eb0bac", "patch": "@@ -0,0 +1,12 @@\n+-include ../tools.mk\n+\n+# FIXME ignore windows\n+ifndef IS_WINDOWS\n+all:\n+\t$(HOST_RPATH_ENV) $(RUSTDOC) -w html -o $(TMPDIR)/doc foo.rs\n+\t$(HOST_RPATH_ENV) $(RUSTDOC) -w html -o $(TMPDIR)/doc foo2.rs\n+\t$(HOST_RPATH_ENV) $(RUSTDOC) -w html -o $(TMPDIR)/doc foo3.rs\n+else\n+all:\n+endif\n+"}, {"sha": "29a909f139ead13238b3c4153b6fe0c4916c04bf", "filename": "src/test/run-make/rustdoc-recursion/foo.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d299bafb31a7c0528e690e48ec6d5591f1eb0bac/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d299bafb31a7c0528e690e48ec6d5591f1eb0bac/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo.rs?ref=d299bafb31a7c0528e690e48ec6d5591f1eb0bac", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+#![feature(globs)]\n+\n+mod m {\n+    pub use self::a::Foo;\n+\n+    mod a {\n+        pub struct Foo;\n+    }\n+\n+    mod b {\n+        pub use super::*;\n+    }\n+}\n+"}, {"sha": "7505d20566dbb45ef209d92c1d86b050393a6d80", "filename": "src/test/run-make/rustdoc-recursion/foo2.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d299bafb31a7c0528e690e48ec6d5591f1eb0bac/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d299bafb31a7c0528e690e48ec6d5591f1eb0bac/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo2.rs?ref=d299bafb31a7c0528e690e48ec6d5591f1eb0bac", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+#![feature(globs)]\n+\n+mod m {\n+    pub use self::a::Foo;\n+\n+    mod a {\n+        pub struct Foo;\n+    }\n+\n+    mod b {\n+        pub use super::*;\n+    }\n+}"}, {"sha": "62a13f76ca4f08cb0d9433be25b979621714b19a", "filename": "src/test/run-make/rustdoc-recursion/foo3.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d299bafb31a7c0528e690e48ec6d5591f1eb0bac/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d299bafb31a7c0528e690e48ec6d5591f1eb0bac/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo3.rs?ref=d299bafb31a7c0528e690e48ec6d5591f1eb0bac", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(globs)]\n+\n+pub mod longhands {\n+    pub use super::*;\n+\n+    pub use super::common_types::computed::compute_CSSColor as to_computed_value;\n+\n+    pub fn computed_as_specified() {}\n+}\n+\n+pub mod common_types {\n+    pub mod computed {\n+        pub use super::super::longhands::computed_as_specified as compute_CSSColor;\n+    }\n+}"}]}