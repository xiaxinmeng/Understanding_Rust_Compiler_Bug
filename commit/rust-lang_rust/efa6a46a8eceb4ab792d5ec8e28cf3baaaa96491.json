{"sha": "efa6a46a8eceb4ab792d5ec8e28cf3baaaa96491", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmYTZhNDZhOGVjZWI0YWI3OTJkNWVjOGUyOGNmM2JhYWFhOTY0OTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-18T02:53:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-18T02:53:53Z"}, "message": "Auto merge of #24133 - kballard:add-sync-to-io-error, r=alexcrichton\n\nThis allows `io::Error` values to be stored in `Arc` properly.\r\n\r\nBecause this requires `Sync` of any value passed to `io::Error::new()`\r\nand modifies the relevant `convert::From` impls, this is a\r\n\r\n[breaking-change]\r\n\r\nFixes #24049.", "tree": {"sha": "89e7c7e0f3e09376ef09eac01fd7dacf26b90653", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89e7c7e0f3e09376ef09eac01fd7dacf26b90653"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efa6a46a8eceb4ab792d5ec8e28cf3baaaa96491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efa6a46a8eceb4ab792d5ec8e28cf3baaaa96491", "html_url": "https://github.com/rust-lang/rust/commit/efa6a46a8eceb4ab792d5ec8e28cf3baaaa96491", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efa6a46a8eceb4ab792d5ec8e28cf3baaaa96491/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1284be4044420bc4c41767284ae26be61a38d331", "url": "https://api.github.com/repos/rust-lang/rust/commits/1284be4044420bc4c41767284ae26be61a38d331", "html_url": "https://github.com/rust-lang/rust/commit/1284be4044420bc4c41767284ae26be61a38d331"}, {"sha": "986852911464df87088007e64780165cc538f9b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/986852911464df87088007e64780165cc538f9b9", "html_url": "https://github.com/rust-lang/rust/commit/986852911464df87088007e64780165cc538f9b9"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "9f09f464cfc68e689990ce6d69392996623e31a4", "filename": "src/libstd/error.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/efa6a46a8eceb4ab792d5ec8e28cf3baaaa96491/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efa6a46a8eceb4ab792d5ec8e28cf3baaaa96491/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=efa6a46a8eceb4ab792d5ec8e28cf3baaaa96491", "patch": "@@ -50,7 +50,7 @@\n use boxed::Box;\n use convert::From;\n use fmt::{self, Debug, Display};\n-use marker::Send;\n+use marker::{Send, Sync};\n use num;\n use option::Option;\n use option::Option::None;\n@@ -81,15 +81,15 @@ impl<'a, E: Error + 'a> From<E> for Box<Error + 'a> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, E: Error + Send + 'a> From<E> for Box<Error + Send + 'a> {\n-    fn from(err: E) -> Box<Error + Send + 'a> {\n+impl<'a, E: Error + Send + Sync + 'a> From<E> for Box<Error + Send + Sync + 'a> {\n+    fn from(err: E) -> Box<Error + Send + Sync + 'a> {\n         Box::new(err)\n     }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl From<String> for Box<Error + Send> {\n-    fn from(err: String) -> Box<Error + Send> {\n+impl From<String> for Box<Error + Send + Sync> {\n+    fn from(err: String) -> Box<Error + Send + Sync> {\n         #[derive(Debug)]\n         struct StringError(String);\n \n@@ -108,8 +108,8 @@ impl From<String> for Box<Error + Send> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b> From<&'b str> for Box<Error + Send + 'a> {\n-    fn from(err: &'b str) -> Box<Error + Send + 'a> {\n+impl<'a, 'b> From<&'b str> for Box<Error + Send + Sync + 'a> {\n+    fn from(err: &'b str) -> Box<Error + Send + Sync + 'a> {\n         From::from(String::from_str(err))\n     }\n }"}, {"sha": "959c15fcfd6c9c331a1c75f4684f23abc4eed00b", "filename": "src/libstd/io/error.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/efa6a46a8eceb4ab792d5ec8e28cf3baaaa96491/src%2Flibstd%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efa6a46a8eceb4ab792d5ec8e28cf3baaaa96491/src%2Flibstd%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ferror.rs?ref=efa6a46a8eceb4ab792d5ec8e28cf3baaaa96491", "patch": "@@ -12,7 +12,7 @@ use boxed::Box;\n use convert::Into;\n use error;\n use fmt;\n-use marker::Send;\n+use marker::{Send, Sync};\n use option::Option::{self, Some, None};\n use result;\n use sys;\n@@ -46,7 +46,7 @@ enum Repr {\n #[derive(Debug)]\n struct Custom {\n     kind: ErrorKind,\n-    error: Box<error::Error+Send>,\n+    error: Box<error::Error+Send+Sync>,\n }\n \n /// A list specifying general categories of I/O error.\n@@ -146,7 +146,7 @@ impl Error {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn new<E>(kind: ErrorKind, error: E) -> Error\n-        where E: Into<Box<error::Error+Send>>\n+        where E: Into<Box<error::Error+Send+Sync>>\n     {\n         Error {\n             repr: Repr::Custom(Box::new(Custom {\n@@ -223,3 +223,8 @@ impl error::Error for Error {\n         }\n     }\n }\n+\n+fn _assert_error_is_sync_send() {\n+    fn _is_sync_send<T: Sync+Send>() {}\n+    _is_sync_send::<Error>();\n+}"}]}