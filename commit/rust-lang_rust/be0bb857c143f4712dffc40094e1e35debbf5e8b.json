{"sha": "be0bb857c143f4712dffc40094e1e35debbf5e8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMGJiODU3YzE0M2Y0NzEyZGZmYzQwMDk0ZTFlMzVkZWJiZjVlOGI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-13T12:27:23Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-13T12:27:23Z"}, "message": "Discourage allocation", "tree": {"sha": "93fb340fe4c9d8a417ae6bc011b21c950e204b77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93fb340fe4c9d8a417ae6bc011b21c950e204b77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be0bb857c143f4712dffc40094e1e35debbf5e8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be0bb857c143f4712dffc40094e1e35debbf5e8b", "html_url": "https://github.com/rust-lang/rust/commit/be0bb857c143f4712dffc40094e1e35debbf5e8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be0bb857c143f4712dffc40094e1e35debbf5e8b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c87c4a0a40c79e90272d4df62c7e2dc12b6b2c3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c87c4a0a40c79e90272d4df62c7e2dc12b6b2c3e", "html_url": "https://github.com/rust-lang/rust/commit/c87c4a0a40c79e90272d4df62c7e2dc12b6b2c3e"}], "stats": {"total": 43, "additions": 32, "deletions": 11}, "files": [{"sha": "1ce8666e3e6954ebef87d85ebde046b121184658", "filename": "docs/dev/README.md", "status": "modified", "additions": 32, "deletions": 11, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/be0bb857c143f4712dffc40094e1e35debbf5e8b/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/be0bb857c143f4712dffc40094e1e35debbf5e8b/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=be0bb857c143f4712dffc40094e1e35debbf5e8b", "patch": "@@ -219,7 +219,7 @@ Do\n ```rust\n // Good\n struct Foo {\n-  bars: Vec<Bar>\n+    bars: Vec<Bar>\n }\n \n struct Bar;\n@@ -232,35 +232,56 @@ rather than\n struct Bar;\n \n struct Foo {\n-  bars: Vec<Bar>\n+    bars: Vec<Bar>\n }\n ```\n \n-## Documentation\n-\n-For `.md` and `.adoc` files, prefer a sentence-per-line format, don't wrap lines.\n-If the line is too long, you want to split the sentence in two :-)\n-\n ## Preconditions\n \n Function preconditions should generally be expressed in types and provided by the caller (rather than checked by callee):\n \n ```rust\n // Good\n fn frbonicate(walrus: Walrus) {\n-  ...\n+    ...\n }\n \n // Not as good\n fn frobnicate(walrus: Option<Walrus>) {\n-  let walrus = match walrus {\n+    let walrus = match walrus {\n+        Some(it) => it,\n+        None => return,\n+    };\n+    ...\n+}\n+```\n+\n+## Premature Pessimization\n+\n+While we don't specifically optimize code yet, avoid writing the code which is slower than it needs to be.\n+Don't allocate a `Vec` were an iterator would do, don't allocate strings needlessly.\n+\n+```rust\n+// Good\n+use itertools::Itertools;\n+\n+let (first_word, second_word) = match text.split_ascii_whitespace().collect_tuple() {\n     Some(it) => it,\n     None => return,\n-  };\n-  ...\n+}\n+\n+// Not as good\n+let words = text.split_ascii_whitespace().collect::<Vec<_>>();\n+if words.len() != 2 {\n+    return\n }\n ```\n \n+## Documentation\n+\n+For `.md` and `.adoc` files, prefer a sentence-per-line format, don't wrap lines.\n+If the line is too long, you want to split the sentence in two :-)\n+\n ## Commit Style\n \n We don't have specific rules around git history hygiene."}]}