{"sha": "0b84437b68f4b54e05eb4639230c46b925abf902", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiODQ0MzdiNjhmNGI1NGUwNWViNDYzOTIzMGM0NmI5MjVhYmY5MDI=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-06-28T05:49:05Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-06-28T05:49:05Z"}, "message": "Replace more vector additions (issue #2719)", "tree": {"sha": "ba38ee570a93fdf5b72d301b9e0fd688e14d427f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba38ee570a93fdf5b72d301b9e0fd688e14d427f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b84437b68f4b54e05eb4639230c46b925abf902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b84437b68f4b54e05eb4639230c46b925abf902", "html_url": "https://github.com/rust-lang/rust/commit/0b84437b68f4b54e05eb4639230c46b925abf902", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b84437b68f4b54e05eb4639230c46b925abf902/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61b1875c16de39c166b0f4d54bba19f9c6777d1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/61b1875c16de39c166b0f4d54bba19f9c6777d1a", "html_url": "https://github.com/rust-lang/rust/commit/61b1875c16de39c166b0f4d54bba19f9c6777d1a"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "8811d3a379b6756cc22524d5a34e99014dd356ea", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=0b84437b68f4b54e05eb4639230c46b925abf902", "patch": "@@ -1094,8 +1094,10 @@ pure fn permute<T: copy>(v: [T]/&, put: fn([T]/~)) {\n             let mut rest = slice(v, 0u, i);\n             unchecked {\n                 push_all(rest, view(v, i+1u, ln));\n+                permute(rest) {|permutation|\n+                    put(append([elt]/~, permutation))\n+                }\n             }\n-            permute(rest) {|permutation| put([elt]/~ + permutation)}\n             i += 1u;\n         }\n     }"}, {"sha": "803457f5af725323f7ce4e8bc01cfd121f96e269", "filename": "src/libstd/getopts.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fgetopts.rs?ref=0b84437b68f4b54e05eb4639230c46b925abf902", "patch": "@@ -199,7 +199,7 @@ fn getopts(args: [str]/~, opts: [opt]/~) -> result unsafe {\n         let cur = args[i];\n         let curlen = str::len(cur);\n         if !is_arg(cur) {\n-            free += [cur]/~;\n+            vec::push(free, cur);\n         } else if str::eq(cur, \"--\") {\n             let mut j = i + 1u;\n             while j < l { vec::push(free, args[j]); j += 1u; }\n@@ -223,7 +223,7 @@ fn getopts(args: [str]/~, opts: [opt]/~) -> result unsafe {\n                 names = []/~;\n                 while j < curlen {\n                     let range = str::char_range_at(cur, j);\n-                    names += [short(range.ch)]/~;\n+                    vec::push(names, short(range.ch));\n                     j = range.next;\n                 }\n             }\n@@ -341,7 +341,7 @@ Used when an option accepts multiple values.\n fn opt_strs(m: match, nm: str) -> [str]/~ {\n     let mut acc: [str]/~ = []/~;\n     for vec::each(opt_vals(m, nm)) {|v|\n-        alt v { val(s) { acc += [s]/~; } _ { } }\n+        alt v { val(s) { vec::push(acc, s); } _ { } }\n     }\n     ret acc;\n }"}, {"sha": "0b7c3e34d40350c99d66bd3374ae19364d04cf54", "filename": "src/libstd/md4.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Fmd4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Fmd4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmd4.rs?ref=0b84437b68f4b54e05eb4639230c46b925abf902", "patch": "@@ -5,17 +5,17 @@ fn md4(msg: [u8]/~) -> {a: u32, b: u32, c: u32, d: u32} {\n     let orig_len: u64 = (vec::len(msg) * 8u) as u64;\n \n     // pad message\n-    let mut msg = msg + [0x80u8]/~;\n+    let mut msg = vec::append(msg, [0x80u8]/~);\n     let mut bitlen = orig_len + 8u64;\n     while (bitlen + 64u64) % 512u64 > 0u64 {\n-        msg += [0u8]/~;\n+        vec::push(msg, 0u8);\n         bitlen += 8u64;\n     }\n \n     // append length\n     let mut i = 0u64;\n     while i < 8u64 {\n-        msg += [(orig_len >> (i * 8u64)) as u8]/~;\n+        vec::push(msg, (orig_len >> (i * 8u64)) as u8);\n         i += 1u64;\n     }\n "}, {"sha": "e4007341aede02f79a93b987e72e21265a5b4af9", "filename": "src/libstd/sha1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsha1.rs?ref=0b84437b68f4b54e05eb4639230c46b925abf902", "patch": "@@ -165,7 +165,7 @@ fn sha1() -> sha1 {\n             let b = (hpart >> 16u32 & 0xFFu32) as u8;\n             let c = (hpart >> 8u32 & 0xFFu32) as u8;\n             let d = (hpart & 0xFFu32) as u8;\n-            rs += [a, b, c, d]/~;\n+            rs = vec::append(rs, [a, b, c, d]/~);\n         }\n         ret rs;\n     }"}, {"sha": "4bf26afc2ae15049068743924dd0bf6ff80d8e58", "filename": "src/libstd/sort.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsort.rs?ref=0b84437b68f4b54e05eb4639230c46b925abf902", "patch": "@@ -48,8 +48,8 @@ fn merge_sort<T: copy>(le: le<T>, v: [const T]/~) -> [T]/~ {\n                 a_ix += 1u;\n             } else { vec::push(rs, b[b_ix]); b_ix += 1u; }\n         }\n-        rs += vec::slice(a, a_ix, a_len);\n-        rs += vec::slice(b, b_ix, b_len);\n+        rs = vec::append(rs, vec::slice(a, a_ix, a_len));\n+        rs = vec::append(rs, vec::slice(b, b_ix, b_len));\n         ret rs;\n     }\n }"}, {"sha": "b8e3b6da4a1074da67b43f2f0ff7dbf935c3a20a", "filename": "src/libstd/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftest.rs?ref=0b84437b68f4b54e05eb4639230c46b925abf902", "patch": "@@ -128,7 +128,7 @@ fn run_tests_console(opts: test_opts,\n                 st.failed += 1u;\n                 write_failed(st.out, st.use_color);\n                 st.out.write_line(\"\");\n-                st.failures += [copy test]/~;\n+                vec::push(st.failures, copy test);\n               }\n               tr_ignored {\n                 st.ignored += 1u;"}, {"sha": "db0dcf7f4f458df0b4c798f11b3c676277fa77d1", "filename": "src/libstd/uv_ll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Fuv_ll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b84437b68f4b54e05eb4639230c46b925abf902/src%2Flibstd%2Fuv_ll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_ll.rs?ref=0b84437b68f4b54e05eb4639230c46b925abf902", "patch": "@@ -678,7 +678,7 @@ unsafe fn buf_init(++input: *u8, len: uint) -> uv_buf_t {\n unsafe fn ip4_addr(ip: str, port: int)\n -> sockaddr_in {\n     let mut addr_vec = str::bytes(ip);\n-    addr_vec += [0u8]/~; // add null terminator\n+    vec::push(addr_vec, 0u8); // add null terminator\n     let addr_vec_ptr = vec::unsafe::to_ptr(addr_vec);\n     let ip_back = str::from_bytes(addr_vec);\n     log(debug, #fmt(\"vec val: '%s' length: %u\","}]}