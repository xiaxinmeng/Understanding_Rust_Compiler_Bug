{"sha": "bb4c7a9c6818bef1851639f03bb3b5b5a90dd45f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNGM3YTljNjgxOGJlZjE4NTE2MzlmMDNiYjNiNWI1YTkwZGQ0NWY=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-24T00:35:15Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-27T22:20:58Z"}, "message": "Arguments seem to be correctly passed to child processes now.", "tree": {"sha": "98f6b1873d955ae41689d0ea0d9a126ab7a5a4ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98f6b1873d955ae41689d0ea0d9a126ab7a5a4ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb4c7a9c6818bef1851639f03bb3b5b5a90dd45f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb4c7a9c6818bef1851639f03bb3b5b5a90dd45f", "html_url": "https://github.com/rust-lang/rust/commit/bb4c7a9c6818bef1851639f03bb3b5b5a90dd45f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb4c7a9c6818bef1851639f03bb3b5b5a90dd45f/comments", "author": null, "committer": null, "parents": [{"sha": "21efd07bc16c2e7614b5f37282d763d6de7d75bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/21efd07bc16c2e7614b5f37282d763d6de7d75bb", "html_url": "https://github.com/rust-lang/rust/commit/21efd07bc16c2e7614b5f37282d763d6de7d75bb"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "8f2f2f2db1be1c3eb35ecd753f6013cf1c554805", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/bb4c7a9c6818bef1851639f03bb3b5b5a90dd45f/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb4c7a9c6818bef1851639f03bb3b5b5a90dd45f/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=bb4c7a9c6818bef1851639f03bb3b5b5a90dd45f", "patch": "@@ -5867,7 +5867,9 @@ fn trans_spawn(&@block_ctxt cx,\n     \n     // Translate the arguments, remembering their types and where the values\n     // ended up.\n-    let vec[ty::t] arg_tys = [];\n+\n+    // There are 3 integers, for magic.\n+    let vec[ty::t] arg_tys = [ty::idx_int, ty::idx_int, ty::idx_int];\n     let vec[ValueRef] arg_vals = [];\n     for(@ast::expr e in args) {\n         auto arg = trans_expr(bcx, e);\n@@ -5881,14 +5883,15 @@ fn trans_spawn(&@block_ctxt cx,\n     }\n \n     // Make the tuple. We have to reverse the types first though.\n-    vec::reverse[ty::t](arg_tys);\n-    vec::reverse[ValueRef](arg_vals);\n+    //vec::reverse[ty::t](arg_tys);\n+    //vec::reverse[ValueRef](arg_vals);\n     auto args_ty = ty::mk_imm_tup(cx.fcx.lcx.ccx.tcx, arg_tys);\n     \n     // Allocate and fill the tuple.\n     auto llargs = alloc_ty(bcx, args_ty);\n \n-    auto i = vec::len[ValueRef](arg_vals) - 1u;\n+    // 3 to skip all the magic\n+    auto i = 3u;\n     for(ValueRef v in arg_vals) {\n         // log_err #fmt(\"ty(llargs) = %s\", \n         //              val_str(bcx.fcx.lcx.ccx.tn, llargs.val));\n@@ -5900,7 +5903,7 @@ fn trans_spawn(&@block_ctxt cx,\n \n         bcx.build.Store(v, target);\n \n-        i -= 1u;\n+        i += 1u;\n     }\n \n     // Now we're ready to do the upcall.\n@@ -5927,8 +5930,6 @@ fn trans_spawn(&@block_ctxt cx,\n     auto fnptr = trans_lval(bcx, func).res;\n     bcx = fnptr.bcx;\n     \n-    auto num_args = vec::len[@ast::expr](args);\n-\n     auto llfnptr = bcx.build.GEP(fnptr.val,\n                                  [C_int(0), C_int(0)]);\n     log_err \"Casting llfnptr\";\n@@ -5942,6 +5943,8 @@ fn trans_spawn(&@block_ctxt cx,\n     auto llargs_i = bcx.build.PointerCast(llargs.val,\n                                    T_int());\n \n+    auto args_size = size_of(bcx, args_ty).val;\n+\n     log_err \"Building call to start_task\";\n     log_err #fmt(\"ty(start_task) = %s\", \n                  val_str(bcx.fcx.lcx.ccx.tn,\n@@ -5958,12 +5961,12 @@ fn trans_spawn(&@block_ctxt cx,\n     log_err #fmt(\"ty(llargs) = %s\", \n                  val_str(bcx.fcx.lcx.ccx.tn,\n                          llargs_i));\n-    log_err #fmt(\"ty(num_args) = %s\", \n+    log_err #fmt(\"ty(args_size) = %s\", \n                  val_str(bcx.fcx.lcx.ccx.tn,\n-                         C_int(num_args as int)));\n+                         args_size));\n     bcx.build.Call(bcx.fcx.lcx.ccx.upcalls.start_task,\n                    [bcx.fcx.lltaskptr, new_task,\n-                    llfnptr_i, llargs_i, C_int(num_args as int)]);\n+                    llfnptr_i, llargs_i, args_size]);\n     log_err \"Done\";\n \n     /*"}, {"sha": "c6a3ba4bcff962143f7de569a85b7aee1620b4aa", "filename": "src/test/run-pass/spawn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb4c7a9c6818bef1851639f03bb3b5b5a90dd45f/src%2Ftest%2Frun-pass%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb4c7a9c6818bef1851639f03bb3b5b5a90dd45f/src%2Ftest%2Frun-pass%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn.rs?ref=bb4c7a9c6818bef1851639f03bb3b5b5a90dd45f", "patch": "@@ -8,6 +8,6 @@ fn main() {\n }\n \n fn child(int i) {\n-   log i;\n+   log_err i;\n }\n "}]}