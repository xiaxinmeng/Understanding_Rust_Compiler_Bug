{"sha": "35c76c68627cdd761d53ea6c7cb17e09e705dbf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1Yzc2YzY4NjI3Y2RkNzYxZDUzZWE2YzdjYjE3ZTA5ZTcwNWRiZjk=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-18T03:06:20Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-18T03:06:25Z"}, "message": "Ignore non-Rust files in run-pass.\n\nSpecifically, Vim's .<filename>.swp files were being run as tests.", "tree": {"sha": "56240b0af7ccbcfab4b92a3a97f11a54d6885a1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56240b0af7ccbcfab4b92a3a97f11a54d6885a1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35c76c68627cdd761d53ea6c7cb17e09e705dbf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35c76c68627cdd761d53ea6c7cb17e09e705dbf9", "html_url": "https://github.com/rust-lang/rust/commit/35c76c68627cdd761d53ea6c7cb17e09e705dbf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35c76c68627cdd761d53ea6c7cb17e09e705dbf9/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51edf7ede68cee0777778d6bbe2d64dad3099d24", "url": "https://api.github.com/repos/rust-lang/rust/commits/51edf7ede68cee0777778d6bbe2d64dad3099d24", "html_url": "https://github.com/rust-lang/rust/commit/51edf7ede68cee0777778d6bbe2d64dad3099d24"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "2f503f7a81103993bc1c0e4ef0b5fc8d6e717eea", "filename": "tests/compiletest.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/35c76c68627cdd761d53ea6c7cb17e09e705dbf9/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c76c68627cdd761d53ea6c7cb17e09e705dbf9/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=35c76c68627cdd761d53ea6c7cb17e09e705dbf9", "patch": "@@ -52,20 +52,23 @@ fn compile_test() {\n     for_all_targets(&sysroot, |target| {\n         for file in std::fs::read_dir(\"tests/run-pass\").unwrap() {\n             let file = file.unwrap();\n-            if !file.metadata().unwrap().is_file() {\n+            let path = file.path();\n+\n+            if !file.metadata().unwrap().is_file() || !path.to_str().unwrap().ends_with(\".rs\") {\n                 continue;\n             }\n-            let file = file.path();\n+\n             let stderr = std::io::stderr();\n-            write!(stderr.lock(), \"test [miri-pass] {} \", file.to_str().unwrap()).unwrap();\n+            write!(stderr.lock(), \"test [miri-pass] {} ... \", path.display()).unwrap();\n             let mut cmd = std::process::Command::new(\"target/debug/miri\");\n-            cmd.arg(file);\n+            cmd.arg(path);\n             cmd.arg(\"-Dwarnings\");\n             cmd.arg(format!(\"--target={}\", target));\n             let libs = Path::new(&sysroot).join(\"lib\");\n             let sysroot = libs.join(\"rustlib\").join(&target).join(\"lib\");\n             let paths = std::env::join_paths(&[libs, sysroot]).unwrap();\n             cmd.env(compiletest::procsrv::dylib_env_var(), paths);\n+\n             match cmd.output() {\n                 Ok(ref output) if output.status.success() => writeln!(stderr.lock(), \"ok\").unwrap(),\n                 Ok(output) => {"}]}