{"sha": "bd4ebf28bdf6eb898971b194f5cf773c88281251", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkNGViZjI4YmRmNmViODk4OTcxYjE5NGY1Y2Y3NzNjODgyODEyNTE=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-04-30T05:43:22Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-04-30T05:43:22Z"}, "message": "check that #[used] is used only on statics", "tree": {"sha": "ce741d8acbadef493b793ff5218f59ed0385a928", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce741d8acbadef493b793ff5218f59ed0385a928"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd4ebf28bdf6eb898971b194f5cf773c88281251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd4ebf28bdf6eb898971b194f5cf773c88281251", "html_url": "https://github.com/rust-lang/rust/commit/bd4ebf28bdf6eb898971b194f5cf773c88281251", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd4ebf28bdf6eb898971b194f5cf773c88281251/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f76f6fbdea497c3cb536e33387f405cc74b99b76", "url": "https://api.github.com/repos/rust-lang/rust/commits/f76f6fbdea497c3cb536e33387f405cc74b99b76", "html_url": "https://github.com/rust-lang/rust/commit/f76f6fbdea497c3cb536e33387f405cc74b99b76"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "cad6ff8ae9fc2a1ca584d853810f5eaab159d1be", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bd4ebf28bdf6eb898971b194f5cf773c88281251/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd4ebf28bdf6eb898971b194f5cf773c88281251/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=bd4ebf28bdf6eb898971b194f5cf773c88281251", "patch": "@@ -31,6 +31,7 @@ enum Target {\n     Expression,\n     Statement,\n     Closure,\n+    Static,\n     Other,\n }\n \n@@ -43,6 +44,7 @@ impl Target {\n             hir::ItemEnum(..) => Target::Enum,\n             hir::ItemConst(..) => Target::Const,\n             hir::ItemForeignMod(..) => Target::ForeignMod,\n+            hir::ItemStatic(..) => Target::Static,\n             _ => Target::Other,\n         }\n     }\n@@ -102,6 +104,7 @@ impl<'a, 'tcx> CheckAttrVisitor<'a, 'tcx> {\n         }\n \n         self.check_repr(item, target);\n+        self.check_used(item, target);\n     }\n \n     /// Check if an `#[inline]` is applied to a function or a closure.\n@@ -305,6 +308,15 @@ impl<'a, 'tcx> CheckAttrVisitor<'a, 'tcx> {\n             }\n         }\n     }\n+\n+    fn check_used(&self, item: &hir::Item, target: Target) {\n+        for attr in &item.attrs {\n+            if attr.name().map(|name| name == \"used\").unwrap_or(false) && target != Target::Static {\n+                self.tcx.sess\n+                    .span_err(attr.span, \"attribute must be applied to a `static` variable\");\n+            }\n+        }\n+    }\n }\n \n impl<'a, 'tcx> Visitor<'tcx> for CheckAttrVisitor<'a, 'tcx> {"}, {"sha": "f170d9c25f56d1234254ee97eb55618299d60377", "filename": "src/test/compile-fail/used.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/bd4ebf28bdf6eb898971b194f5cf773c88281251/src%2Ftest%2Fcompile-fail%2Fused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd4ebf28bdf6eb898971b194f5cf773c88281251/src%2Ftest%2Fcompile-fail%2Fused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fused.rs?ref=bd4ebf28bdf6eb898971b194f5cf773c88281251", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(used)]\n+\n+#[used]\n+static FOO: u32 = 0; // OK\n+\n+#[used] //~ ERROR attribute must be applied to a `static` variable\n+fn foo() {}\n+\n+#[used] //~ ERROR attribute must be applied to a `static` variable\n+struct Foo {}\n+\n+#[used] //~ ERROR attribute must be applied to a `static` variable\n+trait Bar {}\n+\n+#[used] //~ ERROR attribute must be applied to a `static` variable\n+impl Bar for Foo {}\n+\n+fn main() {}"}]}