{"sha": "bc96516a28d9e8e816b0f45c628a9cd49a2f380d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjOTY1MTZhMjhkOWU4ZTgxNmIwZjQ1YzYyOGE5Y2Q0OWEyZjM4MGQ=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-02-20T16:02:23Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-03-01T22:35:35Z"}, "message": "Mark pure asm as willreturn", "tree": {"sha": "b32609d26c3fd4961d262fd9aeb5192134cc5239", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b32609d26c3fd4961d262fd9aeb5192134cc5239"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc96516a28d9e8e816b0f45c628a9cd49a2f380d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc96516a28d9e8e816b0f45c628a9cd49a2f380d", "html_url": "https://github.com/rust-lang/rust/commit/bc96516a28d9e8e816b0f45c628a9cd49a2f380d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc96516a28d9e8e816b0f45c628a9cd49a2f380d/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41b81584e2ff579fa4ff1d94496fb0884b50fa2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/41b81584e2ff579fa4ff1d94496fb0884b50fa2e", "html_url": "https://github.com/rust-lang/rust/commit/41b81584e2ff579fa4ff1d94496fb0884b50fa2e"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "38c8ae711a4cba3915f42baf1402b9d357edd157", "filename": "compiler/rustc_codegen_llvm/src/asm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc96516a28d9e8e816b0f45c628a9cd49a2f380d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc96516a28d9e8e816b0f45c628a9cd49a2f380d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs?ref=bc96516a28d9e8e816b0f45c628a9cd49a2f380d", "patch": "@@ -304,6 +304,7 @@ impl AsmBuilderMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n             } else if options.contains(InlineAsmOptions::READONLY) {\n                 llvm::Attribute::ReadOnly.apply_callsite(llvm::AttributePlace::Function, result);\n             }\n+            llvm::Attribute::WillReturn.apply_callsite(llvm::AttributePlace::Function, result);\n         } else if options.contains(InlineAsmOptions::NOMEM) {\n             llvm::Attribute::InaccessibleMemOnly\n                 .apply_callsite(llvm::AttributePlace::Function, result);"}, {"sha": "e6d60044c84b4db76cf9c358d1c8bcf938863341", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc96516a28d9e8e816b0f45c628a9cd49a2f380d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc96516a28d9e8e816b0f45c628a9cd49a2f380d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=bc96516a28d9e8e816b0f45c628a9cd49a2f380d", "patch": "@@ -132,6 +132,7 @@ pub enum Attribute {\n     ReadNone = 26,\n     InaccessibleMemOnly = 27,\n     SanitizeHWAddress = 28,\n+    WillReturn = 29,\n }\n \n /// LLVMIntPredicate"}, {"sha": "f67e06706ea57deca52615f0193058bb4bfd20d2", "filename": "compiler/rustc_llvm/llvm-wrapper/LLVMWrapper.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc96516a28d9e8e816b0f45c628a9cd49a2f380d/compiler%2Frustc_llvm%2Fllvm-wrapper%2FLLVMWrapper.h", "raw_url": "https://github.com/rust-lang/rust/raw/bc96516a28d9e8e816b0f45c628a9cd49a2f380d/compiler%2Frustc_llvm%2Fllvm-wrapper%2FLLVMWrapper.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FLLVMWrapper.h?ref=bc96516a28d9e8e816b0f45c628a9cd49a2f380d", "patch": "@@ -86,6 +86,7 @@ enum LLVMRustAttribute {\n   ReadNone = 26,\n   InaccessibleMemOnly = 27,\n   SanitizeHWAddress = 28,\n+  WillReturn = 29,\n };\n \n typedef struct OpaqueRustString *RustStringRef;"}, {"sha": "a8536595404423b36c8f1425fa5d316a1b24ef3e", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc96516a28d9e8e816b0f45c628a9cd49a2f380d/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/bc96516a28d9e8e816b0f45c628a9cd49a2f380d/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=bc96516a28d9e8e816b0f45c628a9cd49a2f380d", "patch": "@@ -207,6 +207,8 @@ static Attribute::AttrKind fromRust(LLVMRustAttribute Kind) {\n     return Attribute::InaccessibleMemOnly;\n   case SanitizeHWAddress:\n     return Attribute::SanitizeHWAddress;\n+  case WillReturn:\n+    return Attribute::WillReturn;\n   }\n   report_fatal_error(\"bad AttributeKind\");\n }"}]}