{"sha": "edb39c0d208ef7850116bd3c931df091730c0e7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkYjM5YzBkMjA4ZWY3ODUwMTE2YmQzYzkzMWRmMDkxNzMwYzBlN2Y=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-11T07:42:25Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-17T12:15:47Z"}, "message": "attempt to improve span_label docs", "tree": {"sha": "6636b69d18ba311c24dd4620cdf25d3e889bd44f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6636b69d18ba311c24dd4620cdf25d3e889bd44f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edb39c0d208ef7850116bd3c931df091730c0e7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edb39c0d208ef7850116bd3c931df091730c0e7f", "html_url": "https://github.com/rust-lang/rust/commit/edb39c0d208ef7850116bd3c931df091730c0e7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edb39c0d208ef7850116bd3c931df091730c0e7f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9025c571e81ea9adad4dbee0614f1ca37338328", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9025c571e81ea9adad4dbee0614f1ca37338328", "html_url": "https://github.com/rust-lang/rust/commit/a9025c571e81ea9adad4dbee0614f1ca37338328"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "d0ad5a06e982ea460b18f1dc6e6f7554455643e5", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/edb39c0d208ef7850116bd3c931df091730c0e7f/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edb39c0d208ef7850116bd3c931df091730c0e7f/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=edb39c0d208ef7850116bd3c931df091730c0e7f", "patch": "@@ -127,14 +127,15 @@ impl Diagnostic {\n     }\n \n     /// Adds a span/label to be included in the resulting snippet.\n-    /// This label will be shown together with the original span/label used when creating the\n-    /// diagnostic, *not* a span added by one of the `span_*` methods.\n     ///\n-    /// This is pushed onto the `MultiSpan` that was created when the\n-    /// diagnostic was first built. If you don't call this function at\n-    /// all, and you just supplied a `Span` to create the diagnostic,\n-    /// then the snippet will just include that `Span`, which is\n-    /// called the primary span.\n+    /// This is pushed onto the [`MultiSpan`] that was created when the diagnostic\n+    /// was first built. That means it will be shown together with the original\n+    /// span/label, *not* a span added by one of the `span_{note,warn,help,suggestions}` methods.\n+    ///\n+    /// This span is *not* considered a [\"primary span\"][`MultiSpan`]; only\n+    /// the `Span` supplied when creating the diagnostic is primary.\n+    ///\n+    /// [`MultiSpan`]: ../rustc_span/struct.MultiSpan.html\n     pub fn span_label<T: Into<String>>(&mut self, span: Span, label: T) -> &mut Self {\n         self.span.push_span_label(span, label.into());\n         self"}, {"sha": "b8a6dd73952dc1d8634c02d911eeabc83cbb334f", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/edb39c0d208ef7850116bd3c931df091730c0e7f/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edb39c0d208ef7850116bd3c931df091730c0e7f/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=edb39c0d208ef7850116bd3c931df091730c0e7f", "patch": "@@ -184,11 +184,15 @@ impl<'a> DiagnosticBuilder<'a> {\n     }\n \n     /// Adds a span/label to be included in the resulting snippet.\n-    /// This is pushed onto the `MultiSpan` that was created when the\n-    /// diagnostic was first built. If you don't call this function at\n-    /// all, and you just supplied a `Span` to create the diagnostic,\n-    /// then the snippet will just include that `Span`, which is\n-    /// called the primary span.\n+    ///\n+    /// This is pushed onto the [`MultiSpan`] that was created when the diagnostic\n+    /// was first built. That means it will be shown together with the original\n+    /// span/label, *not* a span added by one of the `span_{note,warn,help,suggestions}` methods.\n+    ///\n+    /// This span is *not* considered a [\"primary span\"][`MultiSpan`]; only\n+    /// the `Span` supplied when creating the diagnostic is primary.\n+    ///\n+    /// [`MultiSpan`]: ../rustc_span/struct.MultiSpan.html\n     pub fn span_label(&mut self, span: Span, label: impl Into<String>) -> &mut Self {\n         self.0.diagnostic.span_label(span, label);\n         self"}]}