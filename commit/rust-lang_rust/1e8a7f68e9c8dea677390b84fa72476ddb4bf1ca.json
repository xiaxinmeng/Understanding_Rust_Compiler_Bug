{"sha": "1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlOGE3ZjY4ZTljOGRlYTY3NzM5MGI4NGZhNzI0NzZkZGI0YmYxY2E=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-07-24T21:33:15Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-07-27T20:01:17Z"}, "message": "Avoid duplicated errors for generic arguments in macro paths", "tree": {"sha": "f3d04e0fb830ba4e6be59ab4bab54e4fbcfd9301", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3d04e0fb830ba4e6be59ab4bab54e4fbcfd9301"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca", "html_url": "https://github.com/rust-lang/rust/commit/1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "128f565daeced02b9d90e1d1a6c0988d25fc1701", "url": "https://api.github.com/repos/rust-lang/rust/commits/128f565daeced02b9d90e1d1a6c0988d25fc1701", "html_url": "https://github.com/rust-lang/rust/commit/128f565daeced02b9d90e1d1a6c0988d25fc1701"}], "stats": {"total": 65, "additions": 16, "deletions": 49}, "files": [{"sha": "4d4f6aadce4df343bb92c9c9f327503f8df9e1c7", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca", "patch": "@@ -385,12 +385,21 @@ impl<'a> Resolver<'a> {\n \n     fn resolve_macro_to_def(&mut self, scope: Mark, path: &ast::Path, kind: MacroKind, force: bool)\n                             -> Result<Def, Determinacy> {\n-        let ast::Path { ref segments, span } = *path;\n-        segments.iter().find(|segment| segment.parameters.is_some()).map(|segment| {\n-            self.session.span_err(segment.parameters.as_ref().unwrap().span(),\n-                                  \"generic arguments in macro path\");\n-        });\n+        let def = self.resolve_macro_to_def_inner(scope, path, kind, force);\n+        if def != Err(Determinacy::Undetermined) {\n+            // Do not report duplicated errors on every undetermined resolution.\n+            path.segments.iter().find(|segment| segment.parameters.is_some()).map(|segment| {\n+                self.session.span_err(segment.parameters.as_ref().unwrap().span(),\n+                                      \"generic arguments in macro path\");\n+            });\n+        }\n+        def\n+    }\n \n+    fn resolve_macro_to_def_inner(&mut self, scope: Mark, path: &ast::Path,\n+                                  kind: MacroKind, force: bool)\n+                                  -> Result<Def, Determinacy> {\n+        let ast::Path { ref segments, span } = *path;\n         let path: Vec<_> = segments.iter().map(|seg| respan(seg.span, seg.identifier)).collect();\n         let invocation = self.invocations[&scope];\n         self.current_module = invocation.module.get();"}, {"sha": "7eeafa72c682966ce6687772389c6399e3023f7b", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca", "patch": "@@ -608,7 +608,7 @@ pub trait Resolver {\n     fn check_unused_macros(&self);\n }\n \n-#[derive(Copy, Clone, Debug)]\n+#[derive(Copy, Clone, Debug, PartialEq)]\n pub enum Determinacy {\n     Determined,\n     Undetermined,"}, {"sha": "f7115a0482666084017bddb1e35a422e49df569a", "filename": "src/test/ui/span/macro-ty-params.stderr", "status": "modified", "additions": 1, "deletions": 43, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr?ref=1e8a7f68e9c8dea677390b84fa72476ddb4bf1ca", "patch": "@@ -16,47 +16,5 @@ error: generic arguments in macro path\n 26 |     m!(MyTrait<>);\n    |               ^^\n \n-error: generic arguments in macro path\n-  --> $DIR/macro-ty-params.rs:26:15\n-   |\n-26 |     m!(MyTrait<>);\n-   |               ^^\n-\n-error: generic arguments in macro path\n-  --> $DIR/macro-ty-params.rs:26:15\n-   |\n-26 |     m!(MyTrait<>);\n-   |               ^^\n-\n-error: generic arguments in macro path\n-  --> $DIR/macro-ty-params.rs:22:8\n-   |\n-22 |     foo::<>!();\n-   |        ^^^^\n-\n-error: generic arguments in macro path\n-  --> $DIR/macro-ty-params.rs:18:8\n-   |\n-18 |     foo::<T>!();\n-   |        ^^^^^\n-\n-error: generic arguments in macro path\n-  --> $DIR/macro-ty-params.rs:18:8\n-   |\n-18 |     foo::<T>!();\n-   |        ^^^^^\n-\n-error: generic arguments in macro path\n-  --> $DIR/macro-ty-params.rs:22:8\n-   |\n-22 |     foo::<>!();\n-   |        ^^^^\n-\n-error: generic arguments in macro path\n-  --> $DIR/macro-ty-params.rs:26:15\n-   |\n-26 |     m!(MyTrait<>);\n-   |               ^^\n-\n-error: aborting due to 10 previous errors\n+error: aborting due to 3 previous errors\n "}]}