{"sha": "0282c27781b2f7501f4385ef22da82acc179c00e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyODJjMjc3ODFiMmY3NTAxZjQzODVlZjIyZGE4MmFjYzE3OWMwMGU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-06T17:32:51Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-06T17:32:51Z"}, "message": "rename cfg(rustdoc) into cfg(doc)", "tree": {"sha": "f55208a7cfe650d195d2beb5581f288ffee16b3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f55208a7cfe650d195d2beb5581f288ffee16b3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0282c27781b2f7501f4385ef22da82acc179c00e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0282c27781b2f7501f4385ef22da82acc179c00e", "html_url": "https://github.com/rust-lang/rust/commit/0282c27781b2f7501f4385ef22da82acc179c00e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0282c27781b2f7501f4385ef22da82acc179c00e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8b190ac4ad79e58d21ee1d573529ff74d8eedaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8b190ac4ad79e58d21ee1d573529ff74d8eedaa", "html_url": "https://github.com/rust-lang/rust/commit/e8b190ac4ad79e58d21ee1d573529ff74d8eedaa"}], "stats": {"total": 72, "additions": 36, "deletions": 36}, "files": [{"sha": "6937fb922de486e1231e947c58031fddc5db076d", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -25,7 +25,7 @@ fn main() {\n     let mut dylib_path = bootstrap::util::dylib_path();\n     dylib_path.insert(0, PathBuf::from(libdir.clone()));\n \n-    //FIXME(misdreavus): once stdsimd uses cfg(rustdoc) instead of cfg(dox), remove the `--cfg dox`\n+    //FIXME(misdreavus): once stdsimd uses cfg(doc) instead of cfg(dox), remove the `--cfg dox`\n     //arguments here\n     let mut cmd = Command::new(rustdoc);\n     cmd.args(&args)"}, {"sha": "f8be04a1087bf87245e7b7f27ad5d3069f468359", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -106,24 +106,24 @@ item, it will be accompanied by a banner explaining that the item is only availa\n platforms.\n \n For Rustdoc to document an item, it needs to see it, regardless of what platform it's currently\n-running on. To aid this, Rustdoc sets the flag `#[cfg(rustdoc)]` when running on your crate.\n+running on. To aid this, Rustdoc sets the flag `#[cfg(doc)]` when running on your crate.\n Combining this with the target platform of a given item allows it to appear when building your crate\n normally on that platform, as well as when building documentation anywhere.\n \n-For example, `#[cfg(any(windows, rustdoc))]` will preserve the item either on Windows or during the\n+For example, `#[cfg(any(windows, doc))]` will preserve the item either on Windows or during the\n documentation process. Then, adding a new attribute `#[doc(cfg(windows))]` will tell Rustdoc that\n the item is supposed to be used on Windows. For example:\n \n ```rust\n #![feature(doc_cfg)]\n \n /// Token struct that can only be used on Windows.\n-#[cfg(any(windows, rustdoc))]\n+#[cfg(any(windows, doc))]\n #[doc(cfg(windows))]\n pub struct WindowsToken;\n \n /// Token struct that can only be used on Unix.\n-#[cfg(any(unix, rustdoc))]\n+#[cfg(any(unix, doc))]\n #[doc(cfg(unix))]\n pub struct UnixToken;\n ```"}, {"sha": "e75f1aea992294db3a73c571094a7b1cc0b1ce0d", "filename": "src/doc/unstable-book/src/language-features/doc-cfg.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-cfg.md", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-cfg.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-cfg.md?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -13,7 +13,7 @@ This attribute has two effects:\n 2. The item's doc-tests will only run on the specific platform.\n \n In addition to allowing the use of the `#[doc(cfg)]` attribute, this feature enables the use of a\n-special conditional compilation flag, `#[cfg(rustdoc)]`, set whenever building documentation on your\n+special conditional compilation flag, `#[cfg(doc)]`, set whenever building documentation on your\n crate.\n \n This feature was introduced as part of PR [#43348] to allow the platform-specific parts of the\n@@ -22,7 +22,7 @@ standard library be documented.\n ```rust\n #![feature(doc_cfg)]\n \n-#[cfg(any(windows, rustdoc))]\n+#[cfg(any(windows, doc))]\n #[doc(cfg(windows))]\n /// The application's icon in the notification area (a.k.a. system tray).\n ///"}, {"sha": "c1e3f006ba5c0d77ab07bca0051629fd36351701", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -247,7 +247,7 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n     } = options;\n \n     // Add the rustdoc cfg into the doc build.\n-    cfgs.push(\"rustdoc\".to_string());\n+    cfgs.push(\"doc\".to_string());\n \n     let cpath = Some(input.clone());\n     let input = Input::File(input);"}, {"sha": "5e5e2055a8527f49aef62b3017a51a3ea3678b36", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -63,7 +63,7 @@ pub fn run(options: Options) -> i32 {\n     };\n \n     let mut cfgs = options.cfgs.clone();\n-    cfgs.push(\"rustdoc\".to_owned());\n+    cfgs.push(\"doc\".to_owned());\n     cfgs.push(\"doctest\".to_owned());\n     let config = interface::Config {\n         opts: sessopts,"}, {"sha": "a8d2b0cb397abf1df57f8a3866e54fcc7c347b81", "filename": "src/libstd/os/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibstd%2Fos%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibstd%2Fos%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fmod.rs?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -4,7 +4,7 @@\n #![allow(missing_docs, nonstandard_style, missing_debug_implementations)]\n \n cfg_if::cfg_if! {\n-    if #[cfg(rustdoc)] {\n+    if #[cfg(doc)] {\n \n         // When documenting libstd we want to show unix/windows/linux modules as\n         // these are the \"main modules\" that are used across platforms. This"}, {"sha": "9eeab34643f93db26ad76e520489e2ba443f4367", "filename": "src/libstd/sys/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibstd%2Fsys%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibstd%2Fsys%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fmod.rs?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -56,7 +56,7 @@ cfg_if::cfg_if! {\n // then later used in the `std::os` module when documenting, for example,\n // Windows when we're compiling for Linux.\n \n-#[cfg(rustdoc)]\n+#[cfg(doc)]\n cfg_if::cfg_if! {\n     if #[cfg(unix)] {\n         // On unix we'll document what's already available\n@@ -80,7 +80,7 @@ cfg_if::cfg_if! {\n     }\n }\n \n-#[cfg(rustdoc)]\n+#[cfg(doc)]\n cfg_if::cfg_if! {\n     if #[cfg(windows)] {\n         // On windows we'll just be documenting what's already available"}, {"sha": "bf0166ceb6fbf539466d22aac5c14af4e7859269", "filename": "src/libstd/sys/unix/mod.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fmod.rs?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -2,21 +2,21 @@\n \n use crate::io::ErrorKind;\n \n-#[cfg(any(rustdoc, target_os = \"linux\"))] pub use crate::os::linux as platform;\n-\n-#[cfg(all(not(rustdoc), target_os = \"android\"))]   pub use crate::os::android as platform;\n-#[cfg(all(not(rustdoc), target_os = \"dragonfly\"))] pub use crate::os::dragonfly as platform;\n-#[cfg(all(not(rustdoc), target_os = \"freebsd\"))]   pub use crate::os::freebsd as platform;\n-#[cfg(all(not(rustdoc), target_os = \"haiku\"))]     pub use crate::os::haiku as platform;\n-#[cfg(all(not(rustdoc), target_os = \"ios\"))]       pub use crate::os::ios as platform;\n-#[cfg(all(not(rustdoc), target_os = \"macos\"))]     pub use crate::os::macos as platform;\n-#[cfg(all(not(rustdoc), target_os = \"netbsd\"))]    pub use crate::os::netbsd as platform;\n-#[cfg(all(not(rustdoc), target_os = \"openbsd\"))]   pub use crate::os::openbsd as platform;\n-#[cfg(all(not(rustdoc), target_os = \"solaris\"))]   pub use crate::os::solaris as platform;\n-#[cfg(all(not(rustdoc), target_os = \"emscripten\"))] pub use crate::os::emscripten as platform;\n-#[cfg(all(not(rustdoc), target_os = \"fuchsia\"))]   pub use crate::os::fuchsia as platform;\n-#[cfg(all(not(rustdoc), target_os = \"l4re\"))]      pub use crate::os::linux as platform;\n-#[cfg(all(not(rustdoc), target_os = \"redox\"))]      pub use crate::os::redox as platform;\n+#[cfg(any(doc, target_os = \"linux\"))] pub use crate::os::linux as platform;\n+\n+#[cfg(all(not(doc), target_os = \"android\"))]   pub use crate::os::android as platform;\n+#[cfg(all(not(doc), target_os = \"dragonfly\"))] pub use crate::os::dragonfly as platform;\n+#[cfg(all(not(doc), target_os = \"freebsd\"))]   pub use crate::os::freebsd as platform;\n+#[cfg(all(not(doc), target_os = \"haiku\"))]     pub use crate::os::haiku as platform;\n+#[cfg(all(not(doc), target_os = \"ios\"))]       pub use crate::os::ios as platform;\n+#[cfg(all(not(doc), target_os = \"macos\"))]     pub use crate::os::macos as platform;\n+#[cfg(all(not(doc), target_os = \"netbsd\"))]    pub use crate::os::netbsd as platform;\n+#[cfg(all(not(doc), target_os = \"openbsd\"))]   pub use crate::os::openbsd as platform;\n+#[cfg(all(not(doc), target_os = \"solaris\"))]   pub use crate::os::solaris as platform;\n+#[cfg(all(not(doc), target_os = \"emscripten\"))] pub use crate::os::emscripten as platform;\n+#[cfg(all(not(doc), target_os = \"fuchsia\"))]   pub use crate::os::fuchsia as platform;\n+#[cfg(all(not(doc), target_os = \"l4re\"))]      pub use crate::os::linux as platform;\n+#[cfg(all(not(doc), target_os = \"redox\"))]      pub use crate::os::redox as platform;\n \n pub use self::rand::hashmap_random_keys;\n pub use libc::strlen;"}, {"sha": "8912aed9255806c05b48ac15be46f95e73dd5648", "filename": "src/libstd/sys_common/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibstd%2Fsys_common%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibstd%2Fsys_common%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fmod.rs?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -45,7 +45,7 @@ pub mod backtrace;\n pub mod condvar;\n pub mod io;\n pub mod mutex;\n-#[cfg(any(rustdoc, // see `mod os`, docs are generated for multiple platforms\n+#[cfg(any(doc, // see `mod os`, docs are generated for multiple platforms\n           unix,\n           target_os = \"redox\",\n           target_os = \"cloudabi\","}, {"sha": "5370bf2ea2228a503a6fee2d7135c7b7ff22f9c4", "filename": "src/libsyntax/feature_gate/builtin_attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -30,7 +30,7 @@ const GATED_CFGS: &[(Symbol, Symbol, GateFn)] = &[\n     (sym::target_thread_local, sym::cfg_target_thread_local, cfg_fn!(cfg_target_thread_local)),\n     (sym::target_has_atomic, sym::cfg_target_has_atomic, cfg_fn!(cfg_target_has_atomic)),\n     (sym::target_has_atomic_load_store, sym::cfg_target_has_atomic, cfg_fn!(cfg_target_has_atomic)),\n-    (sym::rustdoc, sym::doc_cfg, cfg_fn!(doc_cfg)),\n+    (sym::doc, sym::doc_cfg, cfg_fn!(doc_cfg)),\n ];\n \n #[derive(Debug)]"}, {"sha": "62fd3da9233fa895495fac6fd06685e01327a211", "filename": "src/test/rustdoc-ui/doc-test-rustdoc-feature.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Ftest%2Frustdoc-ui%2Fdoc-test-rustdoc-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Ftest%2Frustdoc-ui%2Fdoc-test-rustdoc-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-test-rustdoc-feature.rs?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -4,11 +4,11 @@\n \n #![feature(doc_cfg)]\n \n-// Make sure `cfg(rustdoc)` is set when finding doctests but not inside the doctests.\n+// Make sure `cfg(doc)` is set when finding doctests but not inside the doctests.\n \n /// ```\n /// #![feature(doc_cfg)]\n-/// assert!(!cfg!(rustdoc));\n+/// assert!(!cfg!(doc));\n /// ```\n-#[cfg(rustdoc)]\n+#[cfg(doc)]\n pub struct Foo;"}, {"sha": "9830503a8cac6ab7d05da1a3019a105b32247870", "filename": "src/test/ui/feature-gates/feature-gate-doc_cfg-cfg-rustdoc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.rs?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -1,4 +1,4 @@\n-#[cfg(rustdoc)] //~ ERROR: `cfg(rustdoc)` is experimental and subject to change\n+#[cfg(doc)] //~ ERROR: `cfg(doc)` is experimental and subject to change\n pub struct SomeStruct;\n \n fn main() {}"}, {"sha": "26a1f4decf4cfaaaf55e174d3f0dff2f1fecb332", "filename": "src/test/ui/feature-gates/feature-gate-doc_cfg-cfg-rustdoc.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0282c27781b2f7501f4385ef22da82acc179c00e/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr?ref=0282c27781b2f7501f4385ef22da82acc179c00e", "patch": "@@ -1,8 +1,8 @@\n-error[E0658]: `cfg(rustdoc)` is experimental and subject to change\n+error[E0658]: `cfg(doc)` is experimental and subject to change\n   --> $DIR/feature-gate-doc_cfg-cfg-rustdoc.rs:1:7\n    |\n-LL | #[cfg(rustdoc)]\n-   |       ^^^^^^^\n+LL | #[cfg(doc)]\n+   |       ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/43781\n    = help: add `#![feature(doc_cfg)]` to the crate attributes to enable"}]}