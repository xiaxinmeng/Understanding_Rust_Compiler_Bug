{"sha": "cad2d5840b1be3163855223b5c784852554ebfe0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZDJkNTg0MGIxYmUzMTYzODU1MjIzYjVjNzg0ODUyNTU0ZWJmZTA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-19T02:53:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-19T02:53:12Z"}, "message": "Rollup merge of #64591 - jamesmunns:grammar-fix, r=jonas-schievink\n\nFix a minor grammar nit, update UI tests\n\nMinor fix, but I noticed it while debugging some code", "tree": {"sha": "ec79d111f0d728409e8fc8e87822e37db32157bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec79d111f0d728409e8fc8e87822e37db32157bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cad2d5840b1be3163855223b5c784852554ebfe0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdgu2YCRBK7hj4Ov3rIwAAdHIIAIdpNYeUo6tJIVqbF1FG34Sd\nvhhKH+1na59+biwwLbf1FAId/okvJRWkb4VmnJOmB73sOvze3V98uSdPjBjDs1g1\ngF/zGYhenljcnkWI/C304hxELxf3VFy6pmC04MBRWwtmhLuiZqJkuQpHqptSW9KM\ni5FPRKJf69Kn6q6VIUvVDoF5TlrAILwGfmKdwWvvJKKn5a/hckFXZhracCeqWXlT\nVJrhs2BsWmlTHEOo9+kXs0Be7fPgHvIzEMi2/2jdHOUzbX19YReKndVrz75LCbgl\nK2aX5yS8fGPbRSRory4b3rPMQnwBpTiuGIFs6A3pmaG6HtylyFJCYnF+uAdbNDA=\n=nQIw\n-----END PGP SIGNATURE-----\n", "payload": "tree ec79d111f0d728409e8fc8e87822e37db32157bf\nparent 67565ae4ae0bfe686ecbbb7808c601a87bde5efe\nparent 333230fd140b3b39aa655bcfcda3ee6810b0ac3c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1568861592 +0200\ncommitter GitHub <noreply@github.com> 1568861592 +0200\n\nRollup merge of #64591 - jamesmunns:grammar-fix, r=jonas-schievink\n\nFix a minor grammar nit, update UI tests\n\nMinor fix, but I noticed it while debugging some code\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cad2d5840b1be3163855223b5c784852554ebfe0", "html_url": "https://github.com/rust-lang/rust/commit/cad2d5840b1be3163855223b5c784852554ebfe0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cad2d5840b1be3163855223b5c784852554ebfe0/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67565ae4ae0bfe686ecbbb7808c601a87bde5efe", "url": "https://api.github.com/repos/rust-lang/rust/commits/67565ae4ae0bfe686ecbbb7808c601a87bde5efe", "html_url": "https://github.com/rust-lang/rust/commit/67565ae4ae0bfe686ecbbb7808c601a87bde5efe"}, {"sha": "333230fd140b3b39aa655bcfcda3ee6810b0ac3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/333230fd140b3b39aa655bcfcda3ee6810b0ac3c", "html_url": "https://github.com/rust-lang/rust/commit/333230fd140b3b39aa655bcfcda3ee6810b0ac3c"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "a54bc05f169615917beae66bd191b58209457937", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -134,7 +134,7 @@ impl IntercrateAmbiguityCause {\n                     String::new()\n                 };\n                 format!(\n-                    \"upstream crates may add new impl of trait `{}`{} \\\n+                    \"upstream crates may add a new impl of trait `{}`{} \\\n                      in future versions\",\n                     trait_desc, self_desc\n                 )"}, {"sha": "8fe24bae7c6ca1e995cca02707235bf511608406", "filename": "src/test/ui/codemap_tests/overlapping_inherent_impls.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_inherent_impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_inherent_impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_inherent_impls.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -25,7 +25,7 @@ LL |     fn baz(&self) {}\n LL |     fn baz(&self) {}\n    |     ---------------- other definition for `baz`\n    |\n-   = note: upstream crates may add new impl of trait `std::marker::Copy` for type `std::vec::Vec<_>` in future versions\n+   = note: upstream crates may add a new impl of trait `std::marker::Copy` for type `std::vec::Vec<_>` in future versions\n \n error: aborting due to 3 previous errors\n "}, {"sha": "3a3e1a4afc3bb9596b4f7cb004e2cffe25491a91", "filename": "src/test/ui/coherence/coherence-overlap-upstream-inherent.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream-inherent.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream-inherent.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream-inherent.old.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -7,7 +7,7 @@ LL | impl<T> A<T> where T: Remote { fn dummy(&self) { } }\n LL | impl A<i16> { fn dummy(&self) { } }\n    |               ------------------- other definition for `dummy`\n    |\n-   = note: upstream crates may add new impl of trait `coherence_lib::Remote` for type `i16` in future versions\n+   = note: upstream crates may add a new impl of trait `coherence_lib::Remote` for type `i16` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "3a3e1a4afc3bb9596b4f7cb004e2cffe25491a91", "filename": "src/test/ui/coherence/coherence-overlap-upstream-inherent.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream-inherent.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream-inherent.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream-inherent.re.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -7,7 +7,7 @@ LL | impl<T> A<T> where T: Remote { fn dummy(&self) { } }\n LL | impl A<i16> { fn dummy(&self) { } }\n    |               ------------------- other definition for `dummy`\n    |\n-   = note: upstream crates may add new impl of trait `coherence_lib::Remote` for type `i16` in future versions\n+   = note: upstream crates may add a new impl of trait `coherence_lib::Remote` for type `i16` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "bd6f59f346b6d6937e0329c8ec2c2b7f1aed913a", "filename": "src/test/ui/coherence/coherence-overlap-upstream.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.old.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -6,7 +6,7 @@ LL | impl<T> Foo for T where T: Remote {}\n LL | impl Foo for i16 {}\n    | ^^^^^^^^^^^^^^^^ conflicting implementation for `i16`\n    |\n-   = note: upstream crates may add new impl of trait `coherence_lib::Remote` for type `i16` in future versions\n+   = note: upstream crates may add a new impl of trait `coherence_lib::Remote` for type `i16` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "bd6f59f346b6d6937e0329c8ec2c2b7f1aed913a", "filename": "src/test/ui/coherence/coherence-overlap-upstream.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.re.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -6,7 +6,7 @@ LL | impl<T> Foo for T where T: Remote {}\n LL | impl Foo for i16 {}\n    | ^^^^^^^^^^^^^^^^ conflicting implementation for `i16`\n    |\n-   = note: upstream crates may add new impl of trait `coherence_lib::Remote` for type `i16` in future versions\n+   = note: upstream crates may add a new impl of trait `coherence_lib::Remote` for type `i16` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "728eae5e547dabbe6569807e86cbd0301abef98f", "filename": "src/test/ui/coherence/coherence-projection-conflict-orphan.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-orphan.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-orphan.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-orphan.old.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -7,7 +7,7 @@ LL |\n LL | impl<A:Iterator> Foo<A::Item> for A { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `i32`\n    |\n-   = note: upstream crates may add new impl of trait `std::iter::Iterator` for type `i32` in future versions\n+   = note: upstream crates may add a new impl of trait `std::iter::Iterator` for type `i32` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "728eae5e547dabbe6569807e86cbd0301abef98f", "filename": "src/test/ui/coherence/coherence-projection-conflict-orphan.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-orphan.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-orphan.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-orphan.re.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -7,7 +7,7 @@ LL |\n LL | impl<A:Iterator> Foo<A::Item> for A { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `i32`\n    |\n-   = note: upstream crates may add new impl of trait `std::iter::Iterator` for type `i32` in future versions\n+   = note: upstream crates may add a new impl of trait `std::iter::Iterator` for type `i32` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "4d9f55c1215471cc99eb97190130b9bdafb1337f", "filename": "src/test/ui/coherence/coherence_copy_like_err_fundamental_struct_tuple.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.old.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -7,7 +7,7 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n LL | impl MyTrait for lib::MyFundamentalStruct<(MyType,)> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `lib::MyFundamentalStruct<(MyType,)>`\n    |\n-   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `lib::MyFundamentalStruct<(MyType,)>` in future versions\n+   = note: upstream crates may add a new impl of trait `lib::MyCopy` for type `lib::MyFundamentalStruct<(MyType,)>` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "4d9f55c1215471cc99eb97190130b9bdafb1337f", "filename": "src/test/ui/coherence/coherence_copy_like_err_fundamental_struct_tuple.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.re.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -7,7 +7,7 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n LL | impl MyTrait for lib::MyFundamentalStruct<(MyType,)> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `lib::MyFundamentalStruct<(MyType,)>`\n    |\n-   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `lib::MyFundamentalStruct<(MyType,)>` in future versions\n+   = note: upstream crates may add a new impl of trait `lib::MyCopy` for type `lib::MyFundamentalStruct<(MyType,)>` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "f0bcf659bb696946741bdccbdf5dd9af2b727ccd", "filename": "src/test/ui/coherence/coherence_copy_like_err_struct.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.old.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -7,7 +7,7 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n LL | impl MyTrait for lib::MyStruct<MyType> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `lib::MyStruct<MyType>`\n    |\n-   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `lib::MyStruct<MyType>` in future versions\n+   = note: upstream crates may add a new impl of trait `lib::MyCopy` for type `lib::MyStruct<MyType>` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "f0bcf659bb696946741bdccbdf5dd9af2b727ccd", "filename": "src/test/ui/coherence/coherence_copy_like_err_struct.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.re.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -7,7 +7,7 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n LL | impl MyTrait for lib::MyStruct<MyType> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `lib::MyStruct<MyType>`\n    |\n-   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `lib::MyStruct<MyType>` in future versions\n+   = note: upstream crates may add a new impl of trait `lib::MyCopy` for type `lib::MyStruct<MyType>` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "a40153af2cf30daf331b75e2086eab64f2375402", "filename": "src/test/ui/coherence/coherence_copy_like_err_tuple.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.old.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -7,7 +7,7 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n LL | impl MyTrait for (MyType,) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(MyType,)`\n    |\n-   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `(MyType,)` in future versions\n+   = note: upstream crates may add a new impl of trait `lib::MyCopy` for type `(MyType,)` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "a40153af2cf30daf331b75e2086eab64f2375402", "filename": "src/test/ui/coherence/coherence_copy_like_err_tuple.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.re.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -7,7 +7,7 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n LL | impl MyTrait for (MyType,) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(MyType,)`\n    |\n-   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `(MyType,)` in future versions\n+   = note: upstream crates may add a new impl of trait `lib::MyCopy` for type `(MyType,)` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "84c10d8fbc47728c0dabb807ae250f7f75ab35d7", "filename": "src/test/ui/issues/issue-48728.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -7,7 +7,7 @@ LL | #[derive(Clone)]\n LL | impl<T: Clone + ?Sized> Clone for Node<[T]> {\n    | ------------------------------------------- first implementation here\n    |\n-   = note: upstream crates may add new impl of trait `std::clone::Clone` for type `[_]` in future versions\n+   = note: upstream crates may add a new impl of trait `std::clone::Clone` for type `[_]` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "36f96b011983f0db757362adbeb9d23edc7d15a4", "filename": "src/test/ui/specialization/issue-52050.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fspecialization%2Fissue-52050.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cad2d5840b1be3163855223b5c784852554ebfe0/src%2Ftest%2Fui%2Fspecialization%2Fissue-52050.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fissue-52050.stderr?ref=cad2d5840b1be3163855223b5c784852554ebfe0", "patch": "@@ -11,7 +11,7 @@ LL |\n LL |   impl IntoPyDictPointer for ()\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `()`\n    |\n-   = note: upstream crates may add new impl of trait `std::iter::Iterator` for type `()` in future versions\n+   = note: upstream crates may add a new impl of trait `std::iter::Iterator` for type `()` in future versions\n \n error: aborting due to previous error\n "}]}