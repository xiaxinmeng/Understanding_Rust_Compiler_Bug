{"sha": "93fcf1c133f1a473ac598e4811e88ee91d979510", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzZmNmMWMxMzNmMWE0NzNhYzU5OGU0ODExZTg4ZWU5MWQ5Nzk1MTA=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-04-17T07:47:15Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-04-17T09:38:38Z"}, "message": "Use mmap for proc macro libs", "tree": {"sha": "5cf13e42c792a21858f4481492441b7be99617d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cf13e42c792a21858f4481492441b7be99617d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93fcf1c133f1a473ac598e4811e88ee91d979510", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93fcf1c133f1a473ac598e4811e88ee91d979510", "html_url": "https://github.com/rust-lang/rust/commit/93fcf1c133f1a473ac598e4811e88ee91d979510", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93fcf1c133f1a473ac598e4811e88ee91d979510/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69f0cb6cd77c2dc93f2eed180a6c16fd8c3fca5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f0cb6cd77c2dc93f2eed180a6c16fd8c3fca5a", "html_url": "https://github.com/rust-lang/rust/commit/69f0cb6cd77c2dc93f2eed180a6c16fd8c3fca5a"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "3826ae1c6f15a7b91d80bf92f32b56507024649e", "filename": "Cargo.lock", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/93fcf1c133f1a473ac598e4811e88ee91d979510/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/93fcf1c133f1a473ac598e4811e88ee91d979510/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=93fcf1c133f1a473ac598e4811e88ee91d979510", "patch": "@@ -675,6 +675,16 @@ version = \"2.3.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"3728d817d99e5ac407411fa471ff9800a778d88a24685968b36824eaf4bee400\"\n \n+[[package]]\n+name = \"memmap\"\n+version = \"0.7.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"6585fd95e7bb50d6cc31e20d4cf9afb4e2ba16c5846fc76793f11218da9c475b\"\n+dependencies = [\n+ \"libc\",\n+ \"winapi 0.3.8\",\n+]\n+\n [[package]]\n name = \"memoffset\"\n version = \"0.5.4\"\n@@ -1112,6 +1122,7 @@ dependencies = [\n  \"difference\",\n  \"goblin\",\n  \"libloading\",\n+ \"memmap\",\n  \"ra_mbe\",\n  \"ra_proc_macro\",\n  \"ra_tt\","}, {"sha": "ac2d156dc29217665a9a640d35fffb4aee03a837", "filename": "crates/ra_proc_macro_srv/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93fcf1c133f1a473ac598e4811e88ee91d979510/crates%2Fra_proc_macro_srv%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/93fcf1c133f1a473ac598e4811e88ee91d979510/crates%2Fra_proc_macro_srv%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2FCargo.toml?ref=93fcf1c133f1a473ac598e4811e88ee91d979510", "patch": "@@ -14,6 +14,7 @@ ra_mbe = { path = \"../ra_mbe\" }\n ra_proc_macro = { path = \"../ra_proc_macro\" }\n goblin = \"0.2.1\"\n libloading = \"0.6.0\"\n+memmap = \"0.7\"\n test_utils = { path = \"../test_utils\" }\n \n [dev-dependencies]"}, {"sha": "16bd7466e3862fc5166e2fa378b7de08a12f96b1", "filename": "crates/ra_proc_macro_srv/src/dylib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/93fcf1c133f1a473ac598e4811e88ee91d979510/crates%2Fra_proc_macro_srv%2Fsrc%2Fdylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93fcf1c133f1a473ac598e4811e88ee91d979510/crates%2Fra_proc_macro_srv%2Fsrc%2Fdylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Fdylib.rs?ref=93fcf1c133f1a473ac598e4811e88ee91d979510", "patch": "@@ -1,10 +1,12 @@\n //! Handles dynamic library loading for proc macro\n \n use crate::{proc_macro::bridge, rustc_server::TokenStream};\n+use std::fs::File;\n use std::path::Path;\n \n use goblin::{mach::Mach, Object};\n use libloading::Library;\n+use memmap::Mmap;\n use ra_proc_macro::ProcMacroKind;\n \n use std::io::Error as IoError;\n@@ -21,7 +23,8 @@ fn is_derive_registrar_symbol(symbol: &str) -> bool {\n }\n \n fn find_registrar_symbol(file: &Path) -> Result<Option<String>, IoError> {\n-    let buffer = std::fs::read(file)?;\n+    let file = File::open(file)?;\n+    let buffer = unsafe { Mmap::map(&file)? };\n     let object = Object::parse(&buffer).map_err(invalid_data_err)?;\n \n     match object {\n@@ -55,7 +58,7 @@ fn find_registrar_symbol(file: &Path) -> Result<Option<String>, IoError> {\n                         &s.name\n                     }\n                 })\n-                .find(|s| is_derive_registrar_symbol(&s))\n+                .find(|s| is_derive_registrar_symbol(s))\n                 .map(|s| s.to_string());\n             Ok(name)\n         }"}]}