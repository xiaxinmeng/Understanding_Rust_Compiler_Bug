{"sha": "9d9d06d5572b815ca934f0ad1c6a69e4791a85fd", "node_id": "C_kwDOAAsO6NoAKDlkOWQwNmQ1NTcyYjgxNWNhOTM0ZjBhZDFjNmE2OWU0NzkxYTg1ZmQ", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-10-21T21:00:31Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-11-10T18:48:31Z"}, "message": "Add lint to check for invalid `clippy:version` attributes", "tree": {"sha": "b40e841a9b5332e4ab04efba44509b1947d2c687", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b40e841a9b5332e4ab04efba44509b1947d2c687"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsfZNmu/fmIv8KDcv/Ny/Ka9k1gEFAmGME/8ACgkQ/Ny/Ka9k\n1gE66A/9FBRQ57xZDAcoj4bU8rlVCPPtgVL+gOz/igmxO182iODcEV3sPeSe7Jhq\n4EXXdAVCnM3g1bfLXR04ZmGfdTY7S/848UaD/wUdX1u4+ndRftqMmLX2McFvVFAC\nzO5j61loSafqzZEJ/6xJ6Sjfl08jCW7DowrPxZTfyNmM+lae4JWADoBcAbvEpy8C\nOfEUmTl8sNqGLDIOxfcMZLrl6QA38pNXr5qf4Bj6zT2/WeU0ypwl7H2GPvCKJA+z\npFTbxaZNcTcMpRNngbObOELJCGi7aQ2fwYmtTtYorRqowBPwlNyHJxXVwYBS2IFW\naBXUeBd0vhrj0wAaqKmt3GGLkJCw4m0uXJFIMbLUr4QS3Uq/rtrB3yn7ebEnKmIJ\n/azfjdcKIMJXy6wq7zmXh5E/sR9Dm0EPWVtKn+rXuD/oSmDxt9/qLq5doaNFur9r\nwWBM+7VNdxd04mm8kwxwT0nIvy410lSMSyszIS94dWpJibH4j9X60iV6sYcgAY8h\nlCZKHqZq7qOIQWbXjuw3IcT5YfmiTXs0oujAspCG5IBQL78aCcblEMQNzQa5bFI9\nmdMVhikSiOPYplFdejxu04l1t9z6yJJq9BonETd5Azo1vkEwPdGtyr1LG0xxgc3/\n0V99m42OqpxhyjYZ83OuMKptB6FdHBTqWVJyf3yIpDW0xBxN7+M=\n=Ojzw\n-----END PGP SIGNATURE-----", "payload": "tree b40e841a9b5332e4ab04efba44509b1947d2c687\nparent d647696c1f167802c9bb9ffe2c98459b152d563c\nauthor xFrednet <xFrednet@gmail.com> 1634850031 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1636570111 +0100\n\nAdd lint to check for invalid `clippy:version` attributes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd", "html_url": "https://github.com/rust-lang/rust/commit/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d647696c1f167802c9bb9ffe2c98459b152d563c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d647696c1f167802c9bb9ffe2c98459b152d563c", "html_url": "https://github.com/rust-lang/rust/commit/d647696c1f167802c9bb9ffe2c98459b152d563c"}], "stats": {"total": 206, "additions": 184, "deletions": 22}, "files": [{"sha": "d8f5db65c09819f801316461155fe27e05f89066", "filename": "clippy_lints/src/lib.register_internal.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/clippy_lints%2Fsrc%2Flib.register_internal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/clippy_lints%2Fsrc%2Flib.register_internal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_internal.rs?ref=9d9d06d5572b815ca934f0ad1c6a69e4791a85fd", "patch": "@@ -9,6 +9,7 @@ store.register_group(true, \"clippy::internal\", Some(\"clippy_internal\"), vec![\n     LintId::of(utils::internal_lints::DEFAULT_LINT),\n     LintId::of(utils::internal_lints::IF_CHAIN_STYLE),\n     LintId::of(utils::internal_lints::INTERNING_DEFINED_SYMBOL),\n+    LintId::of(utils::internal_lints::INVALID_CLIPPY_VERSION_ATTRIBUTE),\n     LintId::of(utils::internal_lints::INVALID_PATHS),\n     LintId::of(utils::internal_lints::LINT_WITHOUT_LINT_PASS),\n     LintId::of(utils::internal_lints::MATCH_TYPE_ON_DIAGNOSTIC_ITEM),"}, {"sha": "588debd26c6170406d4ecd476e7e4c1d7039217d", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=9d9d06d5572b815ca934f0ad1c6a69e4791a85fd", "patch": "@@ -16,6 +16,8 @@ store.register_lints(&[\n     #[cfg(feature = \"internal-lints\")]\n     utils::internal_lints::INTERNING_DEFINED_SYMBOL,\n     #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::INVALID_CLIPPY_VERSION_ATTRIBUTE,\n+    #[cfg(feature = \"internal-lints\")]\n     utils::internal_lints::INVALID_PATHS,\n     #[cfg(feature = \"internal-lints\")]\n     utils::internal_lints::LINT_WITHOUT_LINT_PASS,"}, {"sha": "6e09e25109fbb31e72fc77d87e5ad488c2fde580", "filename": "clippy_lints/src/misc_early/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs?ref=9d9d06d5572b815ca934f0ad1c6a69e4791a85fd", "patch": "@@ -156,6 +156,7 @@ declare_clippy_lint! {\n     /// // Good\n     /// let y = 123832i32;\n     /// ```\n+    #[clippy::version = \"1.58.0\"]\n     pub SEPARATED_LITERAL_SUFFIX,\n     restriction,\n     \"literals whose suffix is separated by an underscore\""}, {"sha": "aa722758859d9fa31875aceb666dbb4bea4716c2", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 68, "deletions": 2, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=9d9d06d5572b815ca934f0ad1c6a69e4791a85fd", "patch": "@@ -8,6 +8,7 @@ use clippy_utils::{\n     paths, SpanlessEq,\n };\n use if_chain::if_chain;\n+use rustc_ast as ast;\n use rustc_ast::ast::{Crate, ItemKind, LitKind, ModKind, NodeId};\n use rustc_ast::visit::FnKind;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -25,10 +26,11 @@ use rustc_lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintCon\n use rustc_middle::hir::map::Map;\n use rustc_middle::mir::interpret::ConstValue;\n use rustc_middle::ty;\n+use rustc_semver::RustcVersion;\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{Symbol, SymbolStr};\n-use rustc_span::{BytePos, Span};\n+use rustc_span::{sym, BytePos, Span};\n use rustc_typeck::hir_ty_to_ty;\n \n use std::borrow::{Borrow, Cow};\n@@ -314,6 +316,26 @@ declare_clippy_lint! {\n     \"non-idiomatic `if_chain!` usage\"\n }\n \n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for invalid `clippy::version` attributes\n+    ///\n+    /// ```txt\n+    /// +-------------------------------+\n+    /// | Valid values are:             |\n+    /// |  * \"pre 1.29.0\"               |\n+    /// |  * any valid semantic version |\n+    /// +-------------------------------+\n+    ///                  \\\n+    ///                   \\  (^v^)\n+    ///                     <(   )>\n+    ///                       w w\n+    /// ```\n+    pub INVALID_CLIPPY_VERSION_ATTRIBUTE,\n+    internal,\n+    \"found an invalid `clippy::version` attribute\"\n+}\n+\n declare_lint_pass!(ClippyLintsInternal => [CLIPPY_LINTS_INTERNAL]);\n \n impl EarlyLintPass for ClippyLintsInternal {\n@@ -351,7 +373,7 @@ pub struct LintWithoutLintPass {\n     registered_lints: FxHashSet<Symbol>,\n }\n \n-impl_lint_pass!(LintWithoutLintPass => [DEFAULT_LINT, LINT_WITHOUT_LINT_PASS]);\n+impl_lint_pass!(LintWithoutLintPass => [DEFAULT_LINT, LINT_WITHOUT_LINT_PASS, INVALID_CLIPPY_VERSION_ATTRIBUTE]);\n \n impl<'tcx> LateLintPass<'tcx> for LintWithoutLintPass {\n     fn check_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx Item<'_>) {\n@@ -361,6 +383,8 @@ impl<'tcx> LateLintPass<'tcx> for LintWithoutLintPass {\n \n         if let hir::ItemKind::Static(ty, Mutability::Not, body_id) = item.kind {\n             if is_lint_ref_type(cx, ty) {\n+                check_invalid_clippy_version_attribute(cx, item);\n+\n                 let expr = &cx.tcx.hir().body(body_id).value;\n                 if_chain! {\n                     if let ExprKind::AddrOf(_, _, inner_exp) = expr.kind;\n@@ -458,6 +482,48 @@ fn is_lint_ref_type<'tcx>(cx: &LateContext<'tcx>, ty: &Ty<'_>) -> bool {\n     false\n }\n \n+fn check_invalid_clippy_version_attribute(cx: &LateContext<'_>, item: &'_ Item<'_>) {\n+    if let Some(value) = extract_clippy_version_value(cx, item) {\n+        // The `sym!` macro doesn't work as it only expects a single token. I think\n+        // It's better to keep it this way and have a direct `Symbol::intern` call here :)\n+        if value == Symbol::intern(\"pre 1.29.0\") {\n+            return;\n+        }\n+\n+        if RustcVersion::parse(&*value.as_str()).is_err() {\n+            span_lint_and_help(\n+                cx,\n+                INVALID_CLIPPY_VERSION_ATTRIBUTE,\n+                item.span,\n+                \"this item has an invalid `clippy::version` attribute\",\n+                None,\n+                \"please use a valid sematic version, see `doc/adding_lints.md`\",\n+            );\n+        }\n+    }\n+}\n+\n+/// This function extracts the version value of a `clippy::version` attribute if the given value has\n+/// one\n+fn extract_clippy_version_value(cx: &LateContext<'_>, item: &'_ Item<'_>) -> Option<Symbol> {\n+    let attrs = cx.tcx.hir().attrs(item.hir_id());\n+    attrs.iter().find_map(|attr| {\n+        if_chain! {\n+            // Identify attribute\n+            if let ast::AttrKind::Normal(ref attr_kind, _) = &attr.kind;\n+            if let [tool_name, attr_name] = &attr_kind.path.segments[..];\n+            if tool_name.ident.name == sym::clippy;\n+            if attr_name.ident.name == sym::version;\n+            if let Some(version) = attr.value_str();\n+            then {\n+                Some(version)\n+            } else {\n+                None\n+            }\n+        }\n+    })\n+}\n+\n struct LintCollector<'a, 'tcx> {\n     output: &'a mut FxHashSet<Symbol>,\n     cx: &'a LateContext<'tcx>,"}, {"sha": "8051c58bad7a2711345098c08abcfa3f873df494", "filename": "clippy_lints/src/utils/internal_lints/metadata_collector.rs", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs?ref=9d9d06d5572b815ca934f0ad1c6a69e4791a85fd", "patch": "@@ -25,7 +25,7 @@ use std::fs::{self, OpenOptions};\n use std::io::prelude::*;\n use std::path::Path;\n \n-use crate::utils::internal_lints::is_lint_ref_type;\n+use crate::utils::internal_lints::{extract_clippy_version_value, is_lint_ref_type};\n use clippy_utils::{\n     diagnostics::span_lint, last_path_segment, match_def_path, match_function_call, match_path, paths, ty::match_type,\n     ty::walk_ptrs_ty_depth,\n@@ -570,25 +570,10 @@ fn extract_attr_docs(cx: &LateContext<'_>, item: &Item<'_>) -> Option<String> {\n }\n \n fn get_lint_version(cx: &LateContext<'_>, item: &Item<'_>) -> String {\n-    let attrs = cx.tcx.hir().attrs(item.hir_id());\n-    attrs\n-        .iter()\n-        .find_map(|attr| {\n-            if_chain! {\n-                // Identify attribute\n-                if let ast::AttrKind::Normal(ref attr_kind, _) = &attr.kind;\n-                if let [tool_name, attr_name] = &attr_kind.path.segments[..];\n-                if tool_name.ident.name == sym::clippy;\n-                if attr_name.ident.name == sym::version;\n-                if let Some(version) = attr.value_str();\n-                then {\n-                    Some(version.as_str().to_string())\n-                } else {\n-                    None\n-                }\n-            }\n-        })\n-        .unwrap_or_else(|| VERION_DEFAULT_STR.to_string())\n+    extract_clippy_version_value(cx, item).map_or_else(\n+        || VERION_DEFAULT_STR.to_string(),\n+        |version| version.as_str().to_string(),\n+    )\n }\n \n fn get_lint_group_and_level_or_lint("}, {"sha": "e1b37d42174457c5a1d9d440dd48173834cd589f", "filename": "tests/ui-internal/check_clippy_version_attribute.rs", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/tests%2Fui-internal%2Fcheck_clippy_version_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/tests%2Fui-internal%2Fcheck_clippy_version_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fcheck_clippy_version_attribute.rs?ref=9d9d06d5572b815ca934f0ad1c6a69e4791a85fd", "patch": "@@ -0,0 +1,69 @@\n+#![deny(clippy::internal)]\n+#![feature(rustc_private)]\n+\n+#[macro_use]\n+extern crate rustc_middle;\n+#[macro_use]\n+extern crate rustc_session;\n+extern crate rustc_lint;\n+\n+///////////////////////\n+// Valid descriptions\n+///////////////////////\n+declare_tool_lint! {\n+    #[clippy::version = \"pre 1.29.0\"]\n+    pub clippy::VALID_ONE,\n+    Warn,\n+    \"One\",\n+    report_in_external_macro: true\n+}\n+\n+declare_tool_lint! {\n+    #[clippy::version = \"1.29.0\"]\n+    pub clippy::VALID_TWO,\n+    Warn,\n+    \"Two\",\n+    report_in_external_macro: true\n+}\n+\n+declare_tool_lint! {\n+    #[clippy::version = \"1.59.0\"]\n+    pub clippy::VALID_THREE,\n+    Warn,\n+    \"Three\",\n+    report_in_external_macro: true\n+}\n+\n+///////////////////////\n+// Invalid attributes\n+///////////////////////\n+declare_tool_lint! {\n+    #[clippy::version = \"1.2.3.4.5.6\"]\n+    pub clippy::INVALID_ONE,\n+    Warn,\n+    \"One\",\n+    report_in_external_macro: true\n+}\n+\n+declare_tool_lint! {\n+    #[clippy::version = \"I'm a string\"]\n+    pub clippy::INVALID_TWO,\n+    Warn,\n+    \"Two\",\n+    report_in_external_macro: true\n+}\n+\n+///////////////////////\n+// Ignored attributes\n+///////////////////////\n+declare_tool_lint! {\n+    #[clippy::version]\n+    pub clippy::IGNORED_ONE,\n+    Warn,\n+    \"ONE\",\n+    report_in_external_macro: true\n+}\n+\n+declare_lint_pass!(Pass2 => [VALID_ONE, VALID_TWO, VALID_THREE, INVALID_ONE, INVALID_TWO, IGNORED_ONE]);\n+\n+fn main() {}"}, {"sha": "fa697ab74256f808f366c4a9c6f9d1d2a49cbf42", "filename": "tests/ui-internal/check_clippy_version_attribute.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/tests%2Fui-internal%2Fcheck_clippy_version_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9d9d06d5572b815ca934f0ad1c6a69e4791a85fd/tests%2Fui-internal%2Fcheck_clippy_version_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fcheck_clippy_version_attribute.stderr?ref=9d9d06d5572b815ca934f0ad1c6a69e4791a85fd", "patch": "@@ -0,0 +1,38 @@\n+error: this item has an invalid `clippy::version` attribute\n+  --> $DIR/check_clippy_version_attribute.rs:40:1\n+   |\n+LL | / declare_tool_lint! {\n+LL | |     #[clippy::version = \"1.2.3.4.5.6\"]\n+LL | |     pub clippy::INVALID_ONE,\n+LL | |     Warn,\n+LL | |     \"One\",\n+LL | |     report_in_external_macro: true\n+LL | | }\n+   | |_^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/check_clippy_version_attribute.rs:1:9\n+   |\n+LL | #![deny(clippy::internal)]\n+   |         ^^^^^^^^^^^^^^^^\n+   = note: `#[deny(clippy::invalid_clippy_version_attribute)]` implied by `#[deny(clippy::internal)]`\n+   = help: please use a valid sematic version, see `doc/adding_lints.md`\n+   = note: this error originates in the macro `$crate::declare_tool_lint` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: this item has an invalid `clippy::version` attribute\n+  --> $DIR/check_clippy_version_attribute.rs:48:1\n+   |\n+LL | / declare_tool_lint! {\n+LL | |     #[clippy::version = \"I'm a string\"]\n+LL | |     pub clippy::INVALID_TWO,\n+LL | |     Warn,\n+LL | |     \"Two\",\n+LL | |     report_in_external_macro: true\n+LL | | }\n+   | |_^\n+   |\n+   = help: please use a valid sematic version, see `doc/adding_lints.md`\n+   = note: this error originates in the macro `$crate::declare_tool_lint` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 2 previous errors\n+"}]}