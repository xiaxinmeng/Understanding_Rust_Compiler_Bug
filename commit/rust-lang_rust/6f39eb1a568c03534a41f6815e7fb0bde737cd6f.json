{"sha": "6f39eb1a568c03534a41f6815e7fb0bde737cd6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMzllYjFhNTY4YzAzNTM0YTQxZjY4MTVlN2ZiMGJkZTczN2NkNmY=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-02-16T07:27:46Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-02-16T08:12:28Z"}, "message": "Delegate ToStr implementation to Show for tuples", "tree": {"sha": "0b8690f784917b218ed18f82b4f4b7b67b3d62a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b8690f784917b218ed18f82b4f4b7b67b3d62a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f39eb1a568c03534a41f6815e7fb0bde737cd6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f39eb1a568c03534a41f6815e7fb0bde737cd6f", "html_url": "https://github.com/rust-lang/rust/commit/6f39eb1a568c03534a41f6815e7fb0bde737cd6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f39eb1a568c03534a41f6815e7fb0bde737cd6f/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf6abf8cb3d1e169c1baab8d266bd43c58dfbcc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf6abf8cb3d1e169c1baab8d266bd43c58dfbcc6", "html_url": "https://github.com/rust-lang/rust/commit/bf6abf8cb3d1e169c1baab8d266bd43c58dfbcc6"}], "stats": {"total": 55, "additions": 7, "deletions": 48}, "files": [{"sha": "ab14e9f566778664caad83207aa7744b54dbbf7b", "filename": "src/libstd/to_str.rs", "status": "modified", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/6f39eb1a568c03534a41f6815e7fb0bde737cd6f/src%2Flibstd%2Fto_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f39eb1a568c03534a41f6815e7fb0bde737cd6f/src%2Flibstd%2Fto_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fto_str.rs?ref=6f39eb1a568c03534a41f6815e7fb0bde737cd6f", "patch": "@@ -40,17 +40,6 @@ impl ToStr for () {\n     fn to_str(&self) -> ~str { ~\"()\" }\n }\n \n-impl<A:ToStr> ToStr for (A,) {\n-    #[inline]\n-    fn to_str(&self) -> ~str {\n-        match *self {\n-            (ref a,) => {\n-                format!(\"({},)\", (*a).to_str())\n-            }\n-        }\n-    }\n-}\n-\n impl<A:ToStr+Hash+Eq, B:ToStr> ToStr for HashMap<A, B> {\n     #[inline]\n     fn to_str(&self) -> ~str {\n@@ -91,36 +80,6 @@ impl<A:ToStr+Hash+Eq> ToStr for HashSet<A> {\n     }\n }\n \n-impl<A:ToStr,B:ToStr> ToStr for (A, B) {\n-    #[inline]\n-    fn to_str(&self) -> ~str {\n-        // FIXME(#4653): this causes an llvm assertion\n-        //let &(ref a, ref b) = self;\n-        match *self {\n-            (ref a, ref b) => {\n-                format!(\"({}, {})\", (*a).to_str(), (*b).to_str())\n-            }\n-        }\n-    }\n-}\n-\n-impl<A:ToStr,B:ToStr,C:ToStr> ToStr for (A, B, C) {\n-    #[inline]\n-    fn to_str(&self) -> ~str {\n-        // FIXME(#4653): this causes an llvm assertion\n-        //let &(ref a, ref b, ref c) = self;\n-        match *self {\n-            (ref a, ref b, ref c) => {\n-                format!(\"({}, {}, {})\",\n-                    (*a).to_str(),\n-                    (*b).to_str(),\n-                    (*c).to_str()\n-                )\n-            }\n-        }\n-    }\n-}\n-\n impl<'a,A:ToStr> ToStr for &'a [A] {\n     #[inline]\n     fn to_str(&self) -> ~str {\n@@ -178,13 +137,6 @@ mod tests {\n         assert_eq!((~\"hi\").to_str(), ~\"hi\");\n     }\n \n-    #[test]\n-    fn test_tuple_types() {\n-        assert_eq!((1, 2).to_str(), ~\"(1, 2)\");\n-        assert_eq!((~\"a\", ~\"b\", false).to_str(), ~\"(a, b, false)\");\n-        assert_eq!(((), ((), 100)).to_str(), ~\"((), ((), 100))\");\n-    }\n-\n     #[test]\n     fn test_vectors() {\n         let x: ~[int] = ~[];"}, {"sha": "f2d1144f281ee378248dd48ec1649bf111720d9f", "filename": "src/libstd/tuple.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6f39eb1a568c03534a41f6815e7fb0bde737cd6f/src%2Flibstd%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f39eb1a568c03534a41f6815e7fb0bde737cd6f/src%2Flibstd%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftuple.rs?ref=6f39eb1a568c03534a41f6815e7fb0bde737cd6f", "patch": "@@ -17,6 +17,7 @@ use clone::Clone;\n #[cfg(not(test))] use default::Default;\n use fmt;\n use result::{Ok, Err};\n+use to_str::ToStr;\n \n /// Method extensions to pairs where both types satisfy the `Clone` bound\n pub trait CloneableTuple<T, U> {\n@@ -179,6 +180,12 @@ macro_rules! tuple_impls {\n                 }\n             }\n \n+            impl<$($T: fmt::Show),+> ToStr for ($($T,)+) {\n+                fn to_str(&self) -> ~str {\n+                    format!(\"{}\", *self)\n+                }\n+            }\n+\n             impl<$($T: fmt::Show),+> fmt::Show for ($($T,)+) {\n                 fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n                     write_tuple!(f.buf, $(self.$get_ref_fn()),+)"}]}