{"sha": "5c4568d08b00dbd437aa7f4e572b41b598ee9734", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNDU2OGQwOGIwMGRiZDQzN2FhN2Y0ZTU3MmI0MWI1OThlZTk3MzQ=", "commit": {"author": {"name": "b-naber", "email": "bn@MacBook-Pro-42.fritz.box", "date": "2020-11-21T14:44:06Z"}, "committer": {"name": "b-naber", "email": "bn@MacBook-Pro-42.local", "date": "2020-11-25T19:08:38Z"}, "message": "add tests", "tree": {"sha": "449d9333ea7079ae8ed7889ef374f26531de5e6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/449d9333ea7079ae8ed7889ef374f26531de5e6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c4568d08b00dbd437aa7f4e572b41b598ee9734", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c4568d08b00dbd437aa7f4e572b41b598ee9734", "html_url": "https://github.com/rust-lang/rust/commit/5c4568d08b00dbd437aa7f4e572b41b598ee9734", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c4568d08b00dbd437aa7f4e572b41b598ee9734/comments", "author": null, "committer": null, "parents": [{"sha": "37d103f3cfb7be39a1a7d4d1b6d289601d59bfdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/37d103f3cfb7be39a1a7d4d1b6d289601d59bfdb", "html_url": "https://github.com/rust-lang/rust/commit/37d103f3cfb7be39a1a7d4d1b6d289601d59bfdb"}], "stats": {"total": 378, "additions": 346, "deletions": 32}, "files": [{"sha": "b10bfea9febe50efb34384d8ec3287301d10cf3b", "filename": "src/test/ui/generic-associated-types/parse/trait-path-expected-token.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expected-token.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expected-token.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expected-token.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,11 @@\n+#![feature(generic_associated_types)]\n+//~^ WARNING: the feature `generic_associated_types` is incomplete\n+\n+trait X {\n+    type Y<'a>;\n+}\n+\n+fn f1<'a>(arg : Box<dyn X<Y = B = &'a ()>>) {}\n+    //~^ ERROR: expected one of `!`, `(`, `+`, `,`, `::`, `<`, or `>`, found `=`\n+\n+fn main() {}"}, {"sha": "051253cadc652a7fab35ad5208a42c512ce94f53", "filename": "src/test/ui/generic-associated-types/parse/trait-path-expected-token.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expected-token.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expected-token.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expected-token.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,17 @@\n+error: expected one of `!`, `(`, `+`, `,`, `::`, `<`, or `>`, found `=`\n+  --> $DIR/trait-path-expected-token.rs:8:33\n+   |\n+LL | fn f1<'a>(arg : Box<dyn X<Y = B = &'a ()>>) {}\n+   |                                 ^ expected one of 7 possible tokens\n+\n+warning: the feature `generic_associated_types` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/trait-path-expected-token.rs:1:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44265 <https://github.com/rust-lang/rust/issues/44265> for more information\n+\n+error: aborting due to previous error; 1 warning emitted\n+"}, {"sha": "de61cfa1cf7181acfc548d84abcacf5d78c6e525", "filename": "src/test/ui/generic-associated-types/parse/trait-path-expressions.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expressions.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,23 @@\n+#![feature(generic_associated_types)]\n+//~^ WARNING: the feature `generic_associated_types` is incomplete\n+\n+mod error1 {\n+  trait X {\n+      type Y<'a>;\n+  }\n+\n+  fn f1<'a>(arg : Box<dyn X< 1 = 32 >>) {}\n+      //~^ ERROR: expected expression, found `)`\n+}\n+\n+mod error2 {\n+\n+  trait X {\n+      type Y<'a>;\n+  }\n+\n+  fn f2<'a>(arg : Box<dyn X< { 1 } = 32 >>) {}\n+    //~^ ERROR: only types can be used in associated type constraints\n+}\n+\n+fn main() {}"}, {"sha": "a9ba8adcaba3f6f2fe6b847179f4c2f6c4224330", "filename": "src/test/ui/generic-associated-types/parse/trait-path-expressions.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expressions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expressions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-expressions.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,25 @@\n+error: expected expression, found `)`\n+  --> $DIR/trait-path-expressions.rs:9:39\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X< 1 = 32 >>) {}\n+   |                              -        ^ expected expression\n+   |                              |\n+   |                              while parsing a const generic argument starting here\n+\n+error: only types can be used in associated type constraints\n+  --> $DIR/trait-path-expressions.rs:19:30\n+   |\n+LL |   fn f2<'a>(arg : Box<dyn X< { 1 } = 32 >>) {}\n+   |                              ^^^^^\n+\n+warning: the feature `generic_associated_types` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/trait-path-expressions.rs:1:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44265 <https://github.com/rust-lang/rust/issues/44265> for more information\n+\n+error: aborting due to 2 previous errors; 1 warning emitted\n+"}, {"sha": "dad8c2a2909da85a0bb7cf9d3db7155c043fb3d0", "filename": "src/test/ui/generic-associated-types/parse/trait-path-missing-gen_arg.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-missing-gen_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-missing-gen_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-missing-gen_arg.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,21 @@\n+#![feature(generic_associated_types)]\n+//~^ WARNING: the feature `generic_associated_types` is incomplete\n+\n+trait X {\n+    type Y<'a>;\n+}\n+\n+const _: () = {\n+  fn f1<'a>(arg : Box<dyn X< : 32 >>) {}\n+      //~^ ERROR: expected one of `>`, const, lifetime, or type, found `:`\n+      //~| ERROR: expected parameter name, found `>`\n+      //~| ERROR: expected one of `!`, `)`, `+`, `,`, or `::`, found `>`\n+      //~| ERROR: constant provided when a type was expected\n+};\n+\n+const _: () = {\n+  fn f1<'a>(arg : Box<dyn X< = 32 >>) {}\n+      //~^ ERROR: expected one of `>`, const, lifetime, or type, found `=`\n+};\n+\n+fn main() {}"}, {"sha": "583697f0b67d2df01a62d1a4b4115a76e071686d", "filename": "src/test/ui/generic-associated-types/parse/trait-path-missing-gen_arg.stderr", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-missing-gen_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-missing-gen_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-missing-gen_arg.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,50 @@\n+error: expected one of `>`, const, lifetime, or type, found `:`\n+  --> $DIR/trait-path-missing-gen_arg.rs:9:30\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X< : 32 >>) {}\n+   |                              ^ expected one of `>`, const, lifetime, or type\n+   |\n+help: expressions must be enclosed in braces to be used as const generic arguments\n+   |\n+LL |   fn f1<'a>(arg : Box<{ dyn X< : 32 } >>) {}\n+   |                       ^             ^\n+\n+error: expected parameter name, found `>`\n+  --> $DIR/trait-path-missing-gen_arg.rs:9:36\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X< : 32 >>) {}\n+   |                                    ^ expected parameter name\n+\n+error: expected one of `!`, `)`, `+`, `,`, or `::`, found `>`\n+  --> $DIR/trait-path-missing-gen_arg.rs:9:36\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X< : 32 >>) {}\n+   |                                    ^\n+   |                                    |\n+   |                                    expected one of `!`, `)`, `+`, `,`, or `::`\n+   |                                    help: missing `,`\n+\n+error: expected one of `>`, const, lifetime, or type, found `=`\n+  --> $DIR/trait-path-missing-gen_arg.rs:17:30\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X< = 32 >>) {}\n+   |                              ^ expected one of `>`, const, lifetime, or type\n+\n+warning: the feature `generic_associated_types` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/trait-path-missing-gen_arg.rs:1:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44265 <https://github.com/rust-lang/rust/issues/44265> for more information\n+\n+error[E0747]: constant provided when a type was expected\n+  --> $DIR/trait-path-missing-gen_arg.rs:9:23\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X< : 32 >>) {}\n+   |                       ^^^^^^^^^^^\n+\n+error: aborting due to 5 previous errors; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0747`."}, {"sha": "0bf48b1f418109e546de11796ab659a531735cc4", "filename": "src/test/ui/generic-associated-types/parse/trait-path-segments.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-segments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-segments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-segments.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,35 @@\n+#![feature(generic_associated_types)]\n+//~^ WARNING: the feature `generic_associated_types` is incomplete\n+\n+const _: () = {\n+    trait X {\n+        type Y<'a>;\n+    }\n+\n+    fn f1<'a>(arg : Box<dyn X<X::Y = u32>>) {}\n+        //~^ ERROR: paths with multiple segments cannot be used in associated type constraints\n+  };\n+\n+const _: () = {\n+    trait X {\n+        type Y<'a>;\n+    }\n+\n+    trait Z {}\n+\n+    impl<T : X<<Self as X>::Y<'a> = &'a u32>> Z for T {}\n+        //~^ ERROR: qualified paths cannot be used in associated type constraints\n+};\n+\n+const _: () = {\n+    trait X {\n+      type Y<'a>;\n+    }\n+\n+    trait Z {}\n+\n+    impl<T : X<X::Y<'a> = &'a u32>> Z for T {}\n+        //~^ ERROR: paths with multiple segments cannot be used in associated type constraints\n+};\n+\n+fn main() {}"}, {"sha": "4e2b84d0182392fdbd05bb57fdc36b56ed1b6a18", "filename": "src/test/ui/generic-associated-types/parse/trait-path-segments.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-segments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-segments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-segments.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,31 @@\n+error: paths with multiple segments cannot be used in associated type constraints\n+  --> $DIR/trait-path-segments.rs:9:31\n+   |\n+LL |     fn f1<'a>(arg : Box<dyn X<X::Y = u32>>) {}\n+   |                               ^^^^\n+\n+error: qualified paths cannot be used in associated type constraints\n+  --> $DIR/trait-path-segments.rs:20:16\n+   |\n+LL |     impl<T : X<<Self as X>::Y<'a> = &'a u32>> Z for T {}\n+   |                ^^^^^^^^^-^^^^^^^^\n+   |                         |\n+   |                         not allowed in associated type constraints\n+\n+error: paths with multiple segments cannot be used in associated type constraints\n+  --> $DIR/trait-path-segments.rs:31:16\n+   |\n+LL |     impl<T : X<X::Y<'a> = &'a u32>> Z for T {}\n+   |                ^^^^^^^^\n+\n+warning: the feature `generic_associated_types` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/trait-path-segments.rs:1:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44265 <https://github.com/rust-lang/rust/issues/44265> for more information\n+\n+error: aborting due to 3 previous errors; 1 warning emitted\n+"}, {"sha": "e203a5e0d2de682ede2c2a3d7032decca0930d4b", "filename": "src/test/ui/generic-associated-types/parse/trait-path-type-error-once-implemented.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,10 @@\n+#![feature(generic_associated_types)]\n+\n+trait X {\n+    type Y<'a>;\n+}\n+\n+const _: () = {\n+  fn f2<'a>(arg : Box<dyn X<Y<1> = &'a ()>>) {}\n+      //~^  ERROR: generic associated types in trait paths are currently not implemented\n+};"}, {"sha": "e59a72a99eeb9d437b56327930f34e56ad2b5715", "filename": "src/test/ui/generic-associated-types/parse/trait-path-type-error-once-implemented.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,8 @@\n+error: generic associated types in trait paths are currently not implemented\n+  --> $DIR/trait-path-type-error-once-implemented.rs:8:30\n+   |\n+LL |   fn f2<'a>(arg : Box<dyn X<Y<1> = &'a ()>>) {}\n+   |                              ^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "6cdb501ec65fb2c184a5d24dd87980e75d8093f6", "filename": "src/test/ui/generic-associated-types/parse/trait-path-types.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-types.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,23 @@\n+#![feature(generic_associated_types)]\n+//~^ WARNING: the feature `generic_associated_types` is incomplete\n+\n+trait X {\n+    type Y<'a>;\n+}\n+\n+const _: () = {\n+  fn f<'a>(arg : Box<dyn X< [u8; 1] = u32>>) {}\n+      //~^ ERROR: only path types can be used in associated type constraints\n+};\n+\n+const _: () = {\n+  fn f1<'a>(arg : Box<dyn X<(Y<'a>) = &'a ()>>) {}\n+      //~^ ERROR: only path types can be used in associated type constraints\n+};\n+\n+const _: () = {\n+  fn f1<'a>(arg : Box<dyn X< 'a = u32 >>) {}\n+      //~^ ERROR: only types can be used in associated type constraints\n+};\n+\n+fn main() {}"}, {"sha": "f5be084613b4c1f5ecaf4b72f7642c902bca8417", "filename": "src/test/ui/generic-associated-types/parse/trait-path-types.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-types.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,29 @@\n+error: only path types can be used in associated type constraints\n+  --> $DIR/trait-path-types.rs:9:29\n+   |\n+LL |   fn f<'a>(arg : Box<dyn X< [u8; 1] = u32>>) {}\n+   |                             ^^^^^^^\n+\n+error: only path types can be used in associated type constraints\n+  --> $DIR/trait-path-types.rs:14:29\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X<(Y<'a>) = &'a ()>>) {}\n+   |                             ^^^^^^^\n+\n+error: only types can be used in associated type constraints\n+  --> $DIR/trait-path-types.rs:19:30\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X< 'a = u32 >>) {}\n+   |                              ^^\n+\n+warning: the feature `generic_associated_types` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/trait-path-types.rs:1:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44265 <https://github.com/rust-lang/rust/issues/44265> for more information\n+\n+error: aborting due to 3 previous errors; 1 warning emitted\n+"}, {"sha": "02d53d5faeec5ae7eca25957f382476010b5315c", "filename": "src/test/ui/generic-associated-types/parse/trait-path-unimplemented.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-unimplemented.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,17 @@\n+#![feature(generic_associated_types)]\n+\n+trait X {\n+    type Y<'a>;\n+}\n+\n+const _: () = {\n+  fn f1<'a>(arg : Box<dyn X<Y<'a> = &'a ()>>) {}\n+      //~^  ERROR: generic associated types in trait paths are currently not implemented\n+};\n+\n+const _: () = {\n+  fn f1<'a>(arg : Box<dyn X<Y('a) = &'a ()>>) {}\n+      //~^  ERROR: lifetime in trait object type must be followed by `+`\n+};\n+\n+fn main() {}"}, {"sha": "1fba9cebd249102dd147136ea193554ce2f32fae", "filename": "src/test/ui/generic-associated-types/parse/trait-path-unimplemented.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-unimplemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-unimplemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-unimplemented.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -0,0 +1,14 @@\n+error: lifetime in trait object type must be followed by `+`\n+  --> $DIR/trait-path-unimplemented.rs:13:31\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X<Y('a) = &'a ()>>) {}\n+   |                               ^^\n+\n+error: generic associated types in trait paths are currently not implemented\n+  --> $DIR/trait-path-unimplemented.rs:8:30\n+   |\n+LL |   fn f1<'a>(arg : Box<dyn X<Y<'a> = &'a ()>>) {}\n+   |                              ^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "f108ae5de1483cf219ebe129b9f8a58472dce51c", "filename": "src/test/ui/issues/issue-20616-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-2.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -9,7 +9,7 @@ type Type_1_<'a, T> = &'a T;\n //type Type_1<'a T> = &'a T; // error: expected `,` or `>` after lifetime name, found `T`\n \n \n-type Type_2 = Type_1_<'static ()>; //~ error: expected one of `,` or `>`, found `(`\n+type Type_2 = Type_1_<'static ()>; //~ error: expected one of `,`, `:`, `=`, or `>`, found `(`\n \n \n //type Type_3<T> = Box<T,,>; // error: expected type, found `,`"}, {"sha": "01e3d3dd7ccf03f0600c15e5239595c97827befd", "filename": "src/test/ui/issues/issue-20616-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-2.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `,` or `>`, found `(`\n+error: expected one of `,`, `:`, `=`, or `>`, found `(`\n   --> $DIR/issue-20616-2.rs:12:31\n    |\n LL | type Type_2 = Type_1_<'static ()>;\n-   |                               ^ expected one of `,` or `>`\n+   |                               ^ expected one of `,`, `:`, `=`, or `>`\n \n error: aborting due to previous error\n "}, {"sha": "780038c11b8089aa2d9ad95e3b66ad5290bd8eea", "filename": "src/test/ui/issues/issue-20616-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -11,7 +11,7 @@ type Type_1_<'a, T> = &'a T;\n \n \n type Type_3<T> = Box<T,,>;\n-//~^ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+//~^ error: expected one of `>`, const, lifetime, or type, found `,`\n \n \n //type Type_4<T> = Type_1_<'static,, T>; // error: expected type, found `,`"}, {"sha": "2f8cf8a79ed9439544dcdf9ac33092d6ffc311d1", "filename": "src/test/ui/issues/issue-20616-3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+error: expected one of `>`, const, lifetime, or type, found `,`\n   --> $DIR/issue-20616-3.rs:13:24\n    |\n LL | type Type_3<T> = Box<T,,>;\n-   |                        ^ expected one of `>`, const, identifier, lifetime, or type\n+   |                        ^ expected one of `>`, const, lifetime, or type\n \n error: aborting due to previous error\n "}, {"sha": "85aa9c1146d67982dbd11011eb3855493f494970", "filename": "src/test/ui/issues/issue-20616-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -14,7 +14,7 @@ type Type_1_<'a, T> = &'a T;\n \n \n type Type_4<T> = Type_1_<'static,, T>;\n-//~^ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+//~^ error: expected one of `>`, const, lifetime, or type, found `,`\n \n \n type Type_5_<'a> = Type_1_<'a, ()>;"}, {"sha": "3be6c2e78ced00995ffe0688224ea46312811da2", "filename": "src/test/ui/issues/issue-20616-4.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+error: expected one of `>`, const, lifetime, or type, found `,`\n   --> $DIR/issue-20616-4.rs:16:34\n    |\n LL | type Type_4<T> = Type_1_<'static,, T>;\n-   |                                  ^ expected one of `>`, const, identifier, lifetime, or type\n+   |                                  ^ expected one of `>`, const, lifetime, or type\n \n error: aborting due to previous error\n "}, {"sha": "c0c6bc6dd97fee24d90de55e7fb7cf1970628653", "filename": "src/test/ui/issues/issue-20616-5.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -20,7 +20,7 @@ type Type_5_<'a> = Type_1_<'a, ()>;\n \n \n type Type_5<'a> = Type_1_<'a, (),,>;\n-//~^ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+//~^ error: expected one of `>`, const, lifetime, or type, found `,`\n \n \n //type Type_6 = Type_5_<'a,,>; // error: expected type, found `,`"}, {"sha": "b90fbf60051476412dc84c36e55655a8e9ab7066", "filename": "src/test/ui/issues/issue-20616-5.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+error: expected one of `>`, const, lifetime, or type, found `,`\n   --> $DIR/issue-20616-5.rs:22:34\n    |\n LL | type Type_5<'a> = Type_1_<'a, (),,>;\n-   |                                  ^ expected one of `>`, const, identifier, lifetime, or type\n+   |                                  ^ expected one of `>`, const, lifetime, or type\n \n error: aborting due to previous error\n "}, {"sha": "73c75bdc45fb1dc72f59e2e89acab98345b4a8a6", "filename": "src/test/ui/issues/issue-20616-6.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -23,7 +23,7 @@ type Type_5_<'a> = Type_1_<'a, ()>;\n \n \n type Type_6 = Type_5_<'a,,>;\n-//~^ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+//~^ error: expected one of `>`, const, lifetime, or type, found `,`\n \n \n //type Type_7 = Box<(),,>; // error: expected type, found `,`"}, {"sha": "ea1c15ba4233773e7216ecc02fee562f7162ebff", "filename": "src/test/ui/issues/issue-20616-6.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+error: expected one of `>`, const, lifetime, or type, found `,`\n   --> $DIR/issue-20616-6.rs:25:26\n    |\n LL | type Type_6 = Type_5_<'a,,>;\n-   |                          ^ expected one of `>`, const, identifier, lifetime, or type\n+   |                          ^ expected one of `>`, const, lifetime, or type\n \n error: aborting due to previous error\n "}, {"sha": "8beeebd7a9550f63341b519b78106a479066c9a4", "filename": "src/test/ui/issues/issue-20616-7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -26,7 +26,7 @@ type Type_5_<'a> = Type_1_<'a, ()>;\n \n \n type Type_7 = Box<(),,>;\n-//~^ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+//~^ error: expected one of `>`, const, lifetime, or type, found `,`\n \n \n //type Type_8<'a,,> = &'a (); // error: expected ident, found `,`"}, {"sha": "dcd199902fc0b5643710ad34e0a745c849298170", "filename": "src/test/ui/issues/issue-20616-7.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+error: expected one of `>`, const, lifetime, or type, found `,`\n   --> $DIR/issue-20616-7.rs:28:22\n    |\n LL | type Type_7 = Box<(),,>;\n-   |                      ^ expected one of `>`, const, identifier, lifetime, or type\n+   |                      ^ expected one of `>`, const, lifetime, or type\n \n error: aborting due to previous error\n "}, {"sha": "b45c00f694321227064f2fe67d81206fa7a3d028", "filename": "src/test/ui/issues/issue-34334.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-34334.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-34334.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34334.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,6 +1,6 @@\n fn main () {\n     let sr: Vec<(u32, _, _) = vec![];\n-    //~^ ERROR expected one of `,` or `>`, found `=`\n+    //~^ ERROR only path types can be used in associated type constraints\n     let sr2: Vec<(u32, _, _)> = sr.iter().map(|(faction, th_sender, th_receiver)| {}).collect();\n     //~^ ERROR a value of type `Vec<(u32, _, _)>` cannot be built\n }"}, {"sha": "a9b9bf06d7f420a98092fdf59af9fda8cc65f01f", "filename": "src/test/ui/issues/issue-34334.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `,` or `>`, found `=`\n-  --> $DIR/issue-34334.rs:2:29\n+error: only path types can be used in associated type constraints\n+  --> $DIR/issue-34334.rs:2:17\n    |\n LL |     let sr: Vec<(u32, _, _) = vec![];\n-   |         --                  ^ expected one of `,` or `>`\n+   |         --      ^^^^^^^^^^^\n    |         |\n    |         while parsing the type for `sr`\n "}, {"sha": "4f866b78976612a1e0ebaba7f5efbc64ec4d614e", "filename": "src/test/ui/parser/issue-62660.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Fissue-62660.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Fissue-62660.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62660.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -5,7 +5,7 @@ struct Foo;\n \n impl Foo {\n     pub fn foo(_: i32, self: Box<Self) {}\n-    //~^ ERROR expected one of `!`, `(`, `+`, `,`, `::`, `<`, or `>`, found `)`\n+    //~^ ERROR expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `)`\n }\n \n fn main() {}"}, {"sha": "a50ada9056b977560903f6e2c9ef7402fe78353a", "filename": "src/test/ui/parser/issue-62660.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Fissue-62660.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Fissue-62660.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62660.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `!`, `(`, `+`, `,`, `::`, `<`, or `>`, found `)`\n+error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `)`\n   --> $DIR/issue-62660.rs:7:38\n    |\n LL |     pub fn foo(_: i32, self: Box<Self) {}\n-   |                                      ^ expected one of 7 possible tokens\n+   |                                      ^ expected one of 9 possible tokens\n \n error: aborting due to previous error\n "}, {"sha": "e249a93df92a2174b4ab221f7c07788560667f9f", "filename": "src/test/ui/parser/issue-63116.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Fissue-63116.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Fissue-63116.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-63116.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -12,7 +12,7 @@ error: expected one of `!`, `(`, `)`, `+`, `,`, `::`, or `<`, found `;`\n LL | impl W <s(f;Y(;]\n    |            ^ expected one of 7 possible tokens\n \n-error: expected one of `!`, `&&`, `&`, `(`, `)`, `*`, `+`, `,`, `->`, `...`, `::`, `<`, `>`, `?`, `[`, `_`, `async`, `const`, `dyn`, `extern`, `fn`, `for`, `impl`, `unsafe`, lifetime, or path, found `;`\n+error: expected one of `!`, `&&`, `&`, `(`, `)`, `*`, `+`, `,`, `->`, `...`, `::`, `:`, `<`, `=`, `>`, `?`, `[`, `_`, `async`, `const`, `dyn`, `extern`, `fn`, `for`, `impl`, `unsafe`, lifetime, or path, found `;`\n   --> $DIR/issue-63116.rs:3:15\n    |\n LL | impl W <s(f;Y(;]"}, {"sha": "7cc14971f633f619a1c3f21c10126ee711fb5e6f", "filename": "src/test/ui/parser/lifetime-semicolon.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -3,6 +3,6 @@ struct Foo<'a, 'b> {\n }\n \n fn foo<'a, 'b>(x: &mut Foo<'a; 'b>) {}\n-//~^ ERROR expected one of `,` or `>`, found `;`\n+//~^ ERROR expected one of `,`, `:`, `=`, or `>`, found `;`\n \n fn main() {}"}, {"sha": "3b67705aae9f2446e6dc088f9db14b8efc2debd1", "filename": "src/test/ui/parser/lifetime-semicolon.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `,` or `>`, found `;`\n+error: expected one of `,`, `:`, `=`, or `>`, found `;`\n   --> $DIR/lifetime-semicolon.rs:5:30\n    |\n LL | fn foo<'a, 'b>(x: &mut Foo<'a; 'b>) {}\n-   |                              ^ expected one of `,` or `>`\n+   |                              ^ expected one of `,`, `:`, `=`, or `>`\n \n error: aborting due to previous error\n "}, {"sha": "e807a179473c4ecd2ebb63a53123d0d6f36fb42f", "filename": "src/test/ui/parser/removed-syntax-closure-lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-closure-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-closure-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-closure-lifetime.rs?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,2 +1,2 @@\n type closure = Box<lt/fn()>;\n-//~^ ERROR expected one of `!`, `(`, `+`, `,`, `::`, `<`, or `>`, found `/`\n+//~^ ERROR expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `/`"}, {"sha": "63b6e138ce5f6cc29a9244d81f77138b8f4fcb45", "filename": "src/test/ui/parser/removed-syntax-closure-lifetime.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-closure-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4568d08b00dbd437aa7f4e572b41b598ee9734/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-closure-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-closure-lifetime.stderr?ref=5c4568d08b00dbd437aa7f4e572b41b598ee9734", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `!`, `(`, `+`, `,`, `::`, `<`, or `>`, found `/`\n+error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`, found `/`\n   --> $DIR/removed-syntax-closure-lifetime.rs:1:22\n    |\n LL | type closure = Box<lt/fn()>;\n-   |                      ^ expected one of 7 possible tokens\n+   |                      ^ expected one of 9 possible tokens\n \n error: aborting due to previous error\n "}]}