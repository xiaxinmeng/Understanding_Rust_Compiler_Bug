{"sha": "8a3272985b2c9bcd764d72ecf78e9c321b710e63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhMzI3Mjk4NWIyYzliY2Q3NjRkNzJlY2Y3OGU5YzMyMWI3MTBlNjM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-04T21:59:51Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-04T21:59:51Z"}, "message": "Correctly reject `TraitCandidate` in all cases\n\nFollow up to #69255, fix #69629.", "tree": {"sha": "2116f20ef0abf4a3287e07f663320c33efa51be8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2116f20ef0abf4a3287e07f663320c33efa51be8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a3272985b2c9bcd764d72ecf78e9c321b710e63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a3272985b2c9bcd764d72ecf78e9c321b710e63", "html_url": "https://github.com/rust-lang/rust/commit/8a3272985b2c9bcd764d72ecf78e9c321b710e63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a3272985b2c9bcd764d72ecf78e9c321b710e63/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b0cfa5b4c5099f45ca540ee1c7d8c1ecd5267d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b0cfa5b4c5099f45ca540ee1c7d8c1ecd5267d2", "html_url": "https://github.com/rust-lang/rust/commit/2b0cfa5b4c5099f45ca540ee1c7d8c1ecd5267d2"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "4f65b0e87a18cc97238c21776811245efae25f3b", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8a3272985b2c9bcd764d72ecf78e9c321b710e63/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a3272985b2c9bcd764d72ecf78e9c321b710e63/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=8a3272985b2c9bcd764d72ecf78e9c321b710e63", "patch": "@@ -1403,6 +1403,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n                     let predicate = trait_ref.without_const().to_predicate();\n                     let obligation = traits::Obligation::new(cause, self.param_env, predicate);\n                     if !self.predicate_may_hold(&obligation) {\n+                        result = ProbeResult::NoMatch;\n                         if self.probe(|_| {\n                             match self.select_trait_candidate(trait_ref) {\n                                 Err(_) => return true,\n@@ -1413,7 +1414,6 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n                                         // Determine exactly which obligation wasn't met, so\n                                         // that we can give more context in the error.\n                                         if !self.predicate_may_hold(&obligation) {\n-                                            result = ProbeResult::NoMatch;\n                                             let o = self.resolve_vars_if_possible(obligation);\n                                             let predicate =\n                                                 self.resolve_vars_if_possible(&predicate);\n@@ -1431,7 +1431,6 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n                                 _ => {\n                                     // Some nested subobligation of this predicate\n                                     // failed.\n-                                    result = ProbeResult::NoMatch;\n                                     let predicate = self.resolve_vars_if_possible(&predicate);\n                                     possibly_unsatisfied_predicates.push((predicate, None));\n                                 }"}]}