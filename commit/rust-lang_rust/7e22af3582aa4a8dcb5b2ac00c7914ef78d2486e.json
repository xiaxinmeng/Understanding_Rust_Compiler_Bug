{"sha": "7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMjJhZjM1ODJhYTRhOGRjYjViMmFjMDBjNzkxNGVmNzhkMjQ4NmU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-02T22:06:08Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-03T02:37:06Z"}, "message": "syntax: Enable parsing of `const` globals\n\nThis rewrites them to the current `ItemStatic` production of the compiler, but I\nwant to get this into a snapshot. It will be illegal to use a `static` in a\npattern of a `match` statement, so all those current uses will need to be\nrewritten to `const` once it's implemented. This requires that the stage0\nsnapshot is able to parse `const`.\n\ncc #17718", "tree": {"sha": "2a493a659d2e79f28eae608e33598859b2df7173", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a493a659d2e79f28eae608e33598859b2df7173"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e", "html_url": "https://github.com/rust-lang/rust/commit/7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2d4eb186e99b66051be9089f836c66a558dd995", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2d4eb186e99b66051be9089f836c66a558dd995", "html_url": "https://github.com/rust-lang/rust/commit/b2d4eb186e99b66051be9089f836c66a558dd995"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "8d70dd3e1a8669073a345d25526d8b447fa47729", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e", "patch": "@@ -4746,8 +4746,7 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    fn parse_item_const(&mut self) -> ItemInfo {\n-        let m = if self.eat_keyword(keywords::Mut) {MutMutable} else {MutImmutable};\n+    fn parse_item_const(&mut self, m: Mutability) -> ItemInfo {\n         let id = self.parse_ident();\n         self.expect(&token::COLON);\n         let ty = self.parse_ty(true);\n@@ -5303,7 +5302,26 @@ impl<'a> Parser<'a> {\n         if self.is_keyword(keywords::Static) {\n             // STATIC ITEM\n             self.bump();\n-            let (ident, item_, extra_attrs) = self.parse_item_const();\n+            let m = if self.eat_keyword(keywords::Mut) {MutMutable} else {MutImmutable};\n+            let (ident, item_, extra_attrs) = self.parse_item_const(m);\n+            let last_span = self.last_span;\n+            let item = self.mk_item(lo,\n+                                    last_span.hi,\n+                                    ident,\n+                                    item_,\n+                                    visibility,\n+                                    maybe_append(attrs, extra_attrs));\n+            return IoviItem(item);\n+        }\n+        if self.is_keyword(keywords::Const) {\n+            // CONST ITEM\n+            self.bump();\n+            if self.eat_keyword(keywords::Mut) {\n+                let last_span = self.last_span;\n+                self.span_err(last_span, \"const globals cannot be mutable, \\\n+                                          did you mean to declare a static?\");\n+            }\n+            let (ident, item_, extra_attrs) = self.parse_item_const(MutImmutable);\n             let last_span = self.last_span;\n             let item = self.mk_item(lo,\n                                     last_span.hi,"}, {"sha": "31a5fee2044dc878259c2c8b742ff7e77fadf314", "filename": "src/test/compile-fail/issue-17718-const-mut.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-mut.rs?ref=7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+const\n+mut //~ ERROR: const globals cannot be mutable, did you mean to declare a static?\n+FOO: uint = 3;\n+\n+fn main() {\n+}\n+"}, {"sha": "3ca6f473a7900a6fe3de06c98b6166b16ea04e44", "filename": "src/test/run-pass/issue-17718-parse-const.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e/src%2Ftest%2Frun-pass%2Fissue-17718-parse-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e/src%2Ftest%2Frun-pass%2Fissue-17718-parse-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17718-parse-const.rs?ref=7e22af3582aa4a8dcb5b2ac00c7914ef78d2486e", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+const FOO: uint = 3;\n+\n+fn main() {\n+    assert_eq!(FOO, 3);\n+}"}]}