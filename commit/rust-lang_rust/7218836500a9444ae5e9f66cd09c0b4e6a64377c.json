{"sha": "7218836500a9444ae5e9f66cd09c0b4e6a64377c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMTg4MzY1MDBhOTQ0NGFlNWU5ZjY2Y2QwOWMwYjRlNmE2NDM3N2M=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-02-20T10:49:50Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-08T07:34:18Z"}, "message": "Fix mozjs crater failure", "tree": {"sha": "298c07bfaaff64896008dc718926e7db222baaaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/298c07bfaaff64896008dc718926e7db222baaaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7218836500a9444ae5e9f66cd09c0b4e6a64377c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqg53oACgkQpp+NIls6\n19mS/hAAqEX5o4EfWQeDbs5AiMflyLv2/sZ7CWuxId7qmiIFuPA5VJMt7FPgKgpB\nwFTiymyLqpBN7yWzzZ8ppV38P8ohouKXdX8r9+SnZ6+Wr9jToQ+W7epVixMbu5WR\nljcms6OizXsqgpPkHgjOQMMH8H67fFcw6YMq6VuTsFU71YhODNqqg0DwclVlL8tN\ncgTu1w63mzVZzsOpoDon/p73tLXn+z/yHz+AqAqwuI5tXRchNAOfjEwaVr40CAa1\nz5aTHScVpPo28/uYEl5dYgAcYKV5wJHA1HJvDhyg5i08eJfiFKCWNLCW45tT7SdZ\nUEmu+uKCDlqE7fAHK419I7lBcpDYjYliFu3FcQnkLeakptCKEey1YgGLvD3WubM7\ntyhVg3sQtG2MucSb7YaXTlUsI5F1G4okHQkkzsgSdnqvxRHSUhAlAURlXj2V7iK9\nFRtVfF5ZKPX9bn2syMq1uFbDz8o7sZDwZoKD8p7SkmEMYtzV1V2GaGdFn1GOqMJh\nCd2024hRPDmA+jg5rbgRQtWss0ro7VYHIahMP4ms3lKbPfGpS7+Y7y+MI+Io9XHk\n9ZdG/+LELJeOPIBH39FXnnHWyQ8gYjhy7JzhUFIHNE/3uyPXVWbjH5+dKBgMDXwh\nzOz2JR8xgWTPQF3EZ/Zg13NC0zrbhBqsjsViXOK9tyT6amRNJHA=\n=TiQW\n-----END PGP SIGNATURE-----", "payload": "tree 298c07bfaaff64896008dc718926e7db222baaaf\nparent 134c2910ec53016dd4319206921c623e8c9a57b7\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1519123790 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1520494458 +0100\n\nFix mozjs crater failure\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7218836500a9444ae5e9f66cd09c0b4e6a64377c", "html_url": "https://github.com/rust-lang/rust/commit/7218836500a9444ae5e9f66cd09c0b4e6a64377c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7218836500a9444ae5e9f66cd09c0b4e6a64377c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "134c2910ec53016dd4319206921c623e8c9a57b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/134c2910ec53016dd4319206921c623e8c9a57b7", "html_url": "https://github.com/rust-lang/rust/commit/134c2910ec53016dd4319206921c623e8c9a57b7"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "e0ad306571d249c515f47c5bf16c65d6433d30bf", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7218836500a9444ae5e9f66cd09c0b4e6a64377c/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7218836500a9444ae5e9f66cd09c0b4e6a64377c/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=7218836500a9444ae5e9f66cd09c0b4e6a64377c", "patch": "@@ -246,7 +246,10 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n     }\n \n     pub(super) fn resolve(&self, def_id: DefId, substs: &'tcx Substs<'tcx>) -> EvalResult<'tcx, ty::Instance<'tcx>> {\n-        let substs = self.tcx.trans_apply_param_substs(self.substs(), &substs);\n+        trace!(\"resolve: {:?}, {:#?}\", def_id, substs);\n+        trace!(\"substs: {:#?}\", self.substs());\n+        trace!(\"param_env: {:#?}\", self.param_env);\n+        let substs = self.tcx.trans_apply_param_substs_env(self.substs(), self.param_env, &substs);\n         ty::Instance::resolve(\n             *self.tcx,\n             self.param_env,\n@@ -690,8 +693,13 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n                                     bug!(\"reifying a fn ptr that requires \\\n                                           const arguments\");\n                                 }\n-                                let instance = self.resolve(def_id, substs)?;\n-                                let fn_ptr = self.memory.create_fn_alloc(instance);\n+                                let instance: EvalResult<'tcx, _> = ty::Instance::resolve(\n+                                    *self.tcx,\n+                                    self.param_env,\n+                                    def_id,\n+                                    substs,\n+                                ).ok_or(EvalErrorKind::TypeckError.into());\n+                                let fn_ptr = self.memory.create_fn_alloc(instance?);\n                                 let valty = ValTy {\n                                     value: Value::ByVal(PrimVal::Ptr(fn_ptr)),\n                                     ty: dest_ty,"}, {"sha": "9c8a4b5ae6a2d355dfe97a9e2d19a023236893fa", "filename": "src/test/run-pass/ctfe/mozjs-error.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/7218836500a9444ae5e9f66cd09c0b4e6a64377c/src%2Ftest%2Frun-pass%2Fctfe%2Fmozjs-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7218836500a9444ae5e9f66cd09c0b4e6a64377c/src%2Ftest%2Frun-pass%2Fctfe%2Fmozjs-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fctfe%2Fmozjs-error.rs?ref=7218836500a9444ae5e9f66cd09c0b4e6a64377c", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct CustomAutoRooterVFTable {\n+    trace: unsafe extern \"C\" fn(this: *mut i32, trc: *mut u32),\n+}\n+\n+unsafe trait CustomAutoTraceable: Sized {\n+    const vftable: CustomAutoRooterVFTable = CustomAutoRooterVFTable {\n+        trace: Self::trace,\n+    };\n+\n+    unsafe extern \"C\" fn trace(this: *mut i32, trc: *mut u32) {\n+        let this = this as *const Self;\n+        let this = this.as_ref().unwrap();\n+        Self::do_trace(this, trc);\n+    }\n+\n+    fn do_trace(&self, trc: *mut u32);\n+}\n+\n+unsafe impl CustomAutoTraceable for () {\n+    fn do_trace(&self, _: *mut u32) {\n+        // nop\n+    }\n+}\n+\n+fn main() {\n+    let _ = <()>::vftable;\n+}"}]}