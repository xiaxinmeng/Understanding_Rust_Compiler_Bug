{"sha": "80c67268fc007d55fa0ff193ac0be6ab83640aa6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYzY3MjY4ZmMwMDdkNTVmYTBmZjE5M2FjMGJlNmFiODM2NDBhYTY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-19T02:04:37Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-19T02:04:37Z"}, "message": "Pass correct lliterbody; can compile and run no-put iters.", "tree": {"sha": "5b082b3656449985d1b6712e464a37dddcdeea7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b082b3656449985d1b6712e464a37dddcdeea7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80c67268fc007d55fa0ff193ac0be6ab83640aa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80c67268fc007d55fa0ff193ac0be6ab83640aa6", "html_url": "https://github.com/rust-lang/rust/commit/80c67268fc007d55fa0ff193ac0be6ab83640aa6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80c67268fc007d55fa0ff193ac0be6ab83640aa6/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34c60b6edb810d9f142d248b27d8e6e34c95d63c", "url": "https://api.github.com/repos/rust-lang/rust/commits/34c60b6edb810d9f142d248b27d8e6e34c95d63c", "html_url": "https://github.com/rust-lang/rust/commit/34c60b6edb810d9f142d248b27d8e6e34c95d63c"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "59d6ad7f764022638dcb58656956a8ed48f47ab9", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/80c67268fc007d55fa0ff193ac0be6ab83640aa6/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c67268fc007d55fa0ff193ac0be6ab83640aa6/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=80c67268fc007d55fa0ff193ac0be6ab83640aa6", "patch": "@@ -2238,7 +2238,7 @@ fn trans_for_each(@block_ctxt cx,\n     // escape. This could be determined upstream, and probably ought\n     // to be so, eventualy. For first cut, skip this. Null env.\n \n-    auto env_ty = T_struct(vec(T_ptr(T_i8())));\n+    auto env_ty = T_opaque_closure_ptr(cx.fcx.ccx.tn);\n \n \n     // Step 2: Declare foreach body function.\n@@ -2283,11 +2283,19 @@ fn trans_for_each(@block_ctxt cx,\n     // Step 3: Call iter passing [lliterbody, llenv], plus other args.\n \n     alt (seq.node) {\n+\n         case (ast.expr_call(?f, ?args, ?ann)) {\n \n+            auto pair = cx.build.Alloca(T_fn_pair(cx.fcx.ccx.tn,\n+                                                  iter_body_llty));\n+            auto code_cell = cx.build.GEP(pair,\n+                                          vec(C_int(0),\n+                                              C_int(abi.fn_field_code)));\n+            cx.build.Store(lliterbody, code_cell);\n+\n             // log \"lliterbody: \" + val_str(cx.fcx.ccx.tn, lliterbody);\n             ret trans_call(cx, f,\n-                           some[ValueRef](lliterbody),\n+                           some[ValueRef](cx.build.Load(pair)),\n                            args,\n                            ann);\n         }\n@@ -3364,7 +3372,7 @@ fn trans_expr(@block_ctxt cx, @ast.expr e) -> result {\n             ret trans_ret(cx, e);\n         }\n \n-        case (ast.expr_ret(?e)) {\n+        case (ast.expr_put(?e)) {\n             ret trans_put(cx, e);\n         }\n "}]}