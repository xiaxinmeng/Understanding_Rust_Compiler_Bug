{"sha": "528cbc4879ceab332d509e4959fcea8baa7e8b92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyOGNiYzQ4NzljZWFiMzMyZDUwOWU0OTU5ZmNlYThiYWE3ZThiOTI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-08T15:43:03Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-08T15:43:03Z"}, "message": "fix memory leak when vec::IntoIter panics during drop", "tree": {"sha": "bde2a13df015b8a6de3406812d37340b4e32b7d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bde2a13df015b8a6de3406812d37340b4e32b7d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/528cbc4879ceab332d509e4959fcea8baa7e8b92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/528cbc4879ceab332d509e4959fcea8baa7e8b92", "html_url": "https://github.com/rust-lang/rust/commit/528cbc4879ceab332d509e4959fcea8baa7e8b92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/528cbc4879ceab332d509e4959fcea8baa7e8b92/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f943349eafaa75a60c05b0c84dcdb771d0eae8c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f943349eafaa75a60c05b0c84dcdb771d0eae8c9", "html_url": "https://github.com/rust-lang/rust/commit/f943349eafaa75a60c05b0c84dcdb771d0eae8c9"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "913e261ef12a515cd23d8bbd1a3a8507b5bdfe0c", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/528cbc4879ceab332d509e4959fcea8baa7e8b92/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/528cbc4879ceab332d509e4959fcea8baa7e8b92/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=528cbc4879ceab332d509e4959fcea8baa7e8b92", "patch": "@@ -2626,13 +2626,21 @@ impl<T: Clone> Clone for IntoIter<T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe impl<#[may_dangle] T> Drop for IntoIter<T> {\n     fn drop(&mut self) {\n+        struct DropGuard<'a, T>(&'a mut IntoIter<T>);\n+\n+        impl<T> Drop for DropGuard<'_, T> {\n+            fn drop(&mut self) {\n+                // RawVec handles deallocation\n+                let _ = unsafe { RawVec::from_raw_parts(self.0.buf.as_ptr(), self.0.cap) };\n+            }\n+        }\n+\n+        let guard = DropGuard(self);\n         // destroy the remaining elements\n         unsafe {\n-            ptr::drop_in_place(self.as_mut_slice());\n+            ptr::drop_in_place(guard.0.as_mut_slice());\n         }\n-\n-        // RawVec handles deallocation\n-        let _ = unsafe { RawVec::from_raw_parts(self.buf.as_ptr(), self.cap) };\n+        // now `guard` will be dropped and do the rest\n     }\n }\n "}]}