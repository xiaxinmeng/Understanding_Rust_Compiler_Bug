{"sha": "dd99a88289f12c00f95981f068c3177b3324b72c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkOTlhODgyODlmMTJjMDBmOTU5ODFmMDY4YzMxNzdiMzMyNGI3MmM=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-06T16:55:22Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-09T22:09:17Z"}, "message": "Dogfood inside `if_let_chain!`", "tree": {"sha": "7d23c394f4191411c23045f346e6d10ef1a79cb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d23c394f4191411c23045f346e6d10ef1a79cb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd99a88289f12c00f95981f068c3177b3324b72c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXWekNAAoJEF5CfHlMukXoPMwQAIdy+ctp8q/DaeiD7PY2rndS\nRpLWyUEpGp9PjWrQozeK0G+Mg13MuWP9rdyO7IY4F/KnWkGwUWZk8UG3y09HWQNE\n3JQxVUHSEyKDZyrIBighdQGXJW9t+H1LNtKRbBjfTN78yg3OICaCD8J8vY2ninxb\n0kcpEvAp6wY6rdFj74DYCtxGWSqXBySXjnYAbR8hezHJeR5nXVa+XGhsDCx11tLH\nIN6PxX4whA8jED0xQSXrgWdSagB3RqvAPsfk0+8i8Hv7RZDXxHrqPt0sG8KdHUdf\nOvWDrk2vLBA5F9wvYzc8qHBMmjIzxqhdmmvVEj6mHA+D7nRio5On0vtdjlI10wUH\n1yuUYZvenKhCbbor5ZMBxvo0B3BZFH8lOZpmu87UMy6Jefa7LGNSY5wCa4wgSnH9\npJbkFiCGRiM90GBzCjZI2+K2yFhaWo2B6vBPVS+odatvKfeJyf7IrX0tGl329sue\n630+RqfQEnSsOOxdbdgaJeH/EV6NEQsB1bIE7zdOYJ8+ZzQPq5hWft/4tWVV66Cw\nQU7XjfTeUhMK7bj5yjx5dsAa7jcRRQr2gt33D518ctLeVFzyZznlGWe1EWIE5Uwp\nMmQxzWvzckRr92bi2WY/XeoVfI9SwmDJBpGSQHv3Pm4fUzEuQv9fqvoGP1PGLNuc\nlkeafMsxMdEDf6B9Aygm\n=f0+E\n-----END PGP SIGNATURE-----", "payload": "tree 7d23c394f4191411c23045f346e6d10ef1a79cb6\nparent 489576437d5c72029c7af77fc6921b5946cd22e6\nauthor mcarton <cartonmartin+git@gmail.com> 1465232122 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1465510157 +0200\n\nDogfood inside `if_let_chain!`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd99a88289f12c00f95981f068c3177b3324b72c", "html_url": "https://github.com/rust-lang/rust/commit/dd99a88289f12c00f95981f068c3177b3324b72c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd99a88289f12c00f95981f068c3177b3324b72c/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "489576437d5c72029c7af77fc6921b5946cd22e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/489576437d5c72029c7af77fc6921b5946cd22e6", "html_url": "https://github.com/rust-lang/rust/commit/489576437d5c72029c7af77fc6921b5946cd22e6"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "fab15ac3238f75336ed4c19d98389d0ff9142b38", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dd99a88289f12c00f95981f068c3177b3324b72c/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd99a88289f12c00f95981f068c3177b3324b72c/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=dd99a88289f12c00f95981f068c3177b3324b72c", "patch": "@@ -339,15 +339,15 @@ fn all_ranges(cx: &LateContext, arms: &[Arm]) -> Vec<SpannedRange<ConstVal>> {\n                 Some(pats.iter().filter_map(|pat| {\n                     if_let_chain! {[\n                         let PatKind::Range(ref lhs, ref rhs) = pat.node,\n-                        let Ok(lhs) = eval_const_expr_partial(cx.tcx, &lhs, ExprTypeChecked, None),\n-                        let Ok(rhs) = eval_const_expr_partial(cx.tcx, &rhs, ExprTypeChecked, None)\n+                        let Ok(lhs) = eval_const_expr_partial(cx.tcx, lhs, ExprTypeChecked, None),\n+                        let Ok(rhs) = eval_const_expr_partial(cx.tcx, rhs, ExprTypeChecked, None)\n                     ], {\n                         return Some(SpannedRange { span: pat.span, node: (lhs, rhs) });\n                     }}\n \n                     if_let_chain! {[\n                         let PatKind::Lit(ref value) = pat.node,\n-                        let Ok(value) = eval_const_expr_partial(cx.tcx, &value, ExprTypeChecked, None)\n+                        let Ok(value) = eval_const_expr_partial(cx.tcx, value, ExprTypeChecked, None)\n                     ], {\n                         return Some(SpannedRange { span: pat.span, node: (value.clone(), value) });\n                     }}"}, {"sha": "8b84f94fa8e06a3e4f036251e8687e039786ff36", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd99a88289f12c00f95981f068c3177b3324b72c/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd99a88289f12c00f95981f068c3177b3324b72c/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=dd99a88289f12c00f95981f068c3177b3324b72c", "patch": "@@ -104,13 +104,11 @@ impl LateLintPass for RegexPass {\n             let Some(def) = cx.tcx.def_map.borrow().get(&fun.id),\n         ], {\n             let def_id = def.def_id();\n-            if match_def_path(cx, def_id, &paths::REGEX_NEW) {\n+            if match_def_path(cx, def_id, &paths::REGEX_NEW) ||\n+               match_def_path(cx, def_id, &paths::REGEX_BUILDER_NEW) {\n                 check_regex(cx, &args[0], true);\n-            } else if match_def_path(cx, def_id, &paths::REGEX_BYTES_NEW) {\n-                check_regex(cx, &args[0], false);\n-            } else if match_def_path(cx, def_id, &paths::REGEX_BUILDER_NEW) {\n-                check_regex(cx, &args[0], true);\n-            } else if match_def_path(cx, def_id, &paths::REGEX_BYTES_BUILDER_NEW) {\n+            } else if match_def_path(cx, def_id, &paths::REGEX_BYTES_NEW) ||\n+               match_def_path(cx, def_id, &paths::REGEX_BYTES_BUILDER_NEW) {\n                 check_regex(cx, &args[0], false);\n             } else if match_def_path(cx, def_id, &paths::REGEX_SET_NEW) {\n                 check_set(cx, &args[0], true);"}]}