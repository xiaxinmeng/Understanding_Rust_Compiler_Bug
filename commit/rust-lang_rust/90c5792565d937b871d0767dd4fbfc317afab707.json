{"sha": "90c5792565d937b871d0767dd4fbfc317afab707", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYzU3OTI1NjVkOTM3Yjg3MWQwNzY3ZGQ0ZmJmYzMxN2FmYWI3MDc=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-07-18T00:09:50Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-07-18T00:09:50Z"}, "message": "Set rustfmt-format_macro_matchers to false by default\n\ncc #2543", "tree": {"sha": "91f7d952daa7e564bee64f105a369f423df82cc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91f7d952daa7e564bee64f105a369f423df82cc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90c5792565d937b871d0767dd4fbfc317afab707", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90c5792565d937b871d0767dd4fbfc317afab707", "html_url": "https://github.com/rust-lang/rust/commit/90c5792565d937b871d0767dd4fbfc317afab707", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90c5792565d937b871d0767dd4fbfc317afab707/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79c5ee8b42fe93f7432108fc0a656fc728f10c1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/79c5ee8b42fe93f7432108fc0a656fc728f10c1d", "html_url": "https://github.com/rust-lang/rust/commit/79c5ee8b42fe93f7432108fc0a656fc728f10c1d"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "403154ea6d8be0385e5ff4bce2b377ec44cf07d3", "filename": "Configurations.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90c5792565d937b871d0767dd4fbfc317afab707/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/90c5792565d937b871d0767dd4fbfc317afab707/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=90c5792565d937b871d0767dd4fbfc317afab707", "patch": "@@ -1055,10 +1055,10 @@ Format the bodies of macros.\n \n ```rust\n macro_rules! foo {\n-    ($a:ident : $b:ty) => {\n+    ($a: ident : $b: ty) => {\n         $a(42): $b;\n     };\n-    ($a:ident $b:ident $c:ident) => {\n+    ($a: ident $b: ident $c: ident) => {\n         $a = $b + $c;\n     };\n }\n@@ -1068,8 +1068,8 @@ macro_rules! foo {\n \n ```rust\n macro_rules! foo {\n-    ($a:ident : $b:ty) => { $a(42): $b; };\n-    ($a:ident $b:ident $c:ident) => { $a=$b+$c; };\n+    ($a: ident : $b: ty) => { $a(42): $b; };\n+    ($a: ident $b: ident $c: ident) => { $a=$b+$c; };\n }\n ```\n "}, {"sha": "ba6596c3da7f15493c6fc4e94d1ca1e57f4b44a2", "filename": "src/config/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90c5792565d937b871d0767dd4fbfc317afab707/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c5792565d937b871d0767dd4fbfc317afab707/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=90c5792565d937b871d0767dd4fbfc317afab707", "patch": "@@ -53,7 +53,7 @@ create_config! {\n     license_template_path: String, String::default(), false,\n         \"Beginning of file must match license template\";\n     format_strings: bool, false, false, \"Format string literals where necessary\";\n-    format_macro_matchers: bool, true, false,\n+    format_macro_matchers: bool, false, false,\n         \"Format the metavariable matching patterns in macros\";\n     format_macro_bodies: bool, true, false, \"Format the bodies of macros\";\n "}, {"sha": "e8f9aa505acdf8a251e1a3fd65f8ed25e5f0272d", "filename": "tests/source/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/90c5792565d937b871d0767dd4fbfc317afab707/tests%2Fsource%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c5792565d937b871d0767dd4fbfc317afab707/tests%2Fsource%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacro_rules.rs?ref=90c5792565d937b871d0767dd4fbfc317afab707", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-format_macro_matchers: true\n \n macro_rules! m {\n     () => ();"}, {"sha": "10a207009b73dd3d2457fc93364c8581500c9835", "filename": "tests/source/macros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/90c5792565d937b871d0767dd4fbfc317afab707/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c5792565d937b871d0767dd4fbfc317afab707/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=90c5792565d937b871d0767dd4fbfc317afab707", "patch": "@@ -1,4 +1,5 @@\n // rustfmt-normalize_comments: true\n+// rustfmt-format_macro_matchers: true\n itemmacro!(this, is.now() .formatted(yay));\n \n itemmacro!(really, long.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbb() .is.formatted());"}, {"sha": "4f31519faaf2d28cb24d244eca7c20a4aa5c1653", "filename": "tests/target/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90c5792565d937b871d0767dd4fbfc317afab707/tests%2Ftarget%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c5792565d937b871d0767dd4fbfc317afab707/tests%2Ftarget%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacro_rules.rs?ref=90c5792565d937b871d0767dd4fbfc317afab707", "patch": "@@ -1,3 +1,5 @@\n+// rustfmt-format_macro_matchers: true\n+\n macro_rules! m {\n     () => {};\n     ($x:ident) => {};"}, {"sha": "00b91ca81a29d68dee3ba2d5977145db1ce51cb4", "filename": "tests/target/macros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/90c5792565d937b871d0767dd4fbfc317afab707/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c5792565d937b871d0767dd4fbfc317afab707/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=90c5792565d937b871d0767dd4fbfc317afab707", "patch": "@@ -1,4 +1,5 @@\n // rustfmt-normalize_comments: true\n+// rustfmt-format_macro_matchers: true\n itemmacro!(this, is.now().formatted(yay));\n \n itemmacro!("}]}