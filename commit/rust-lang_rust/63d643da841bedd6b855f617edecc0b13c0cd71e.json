{"sha": "63d643da841bedd6b855f617edecc0b13c0cd71e", "node_id": "C_kwDOAAsO6NoAKDYzZDY0M2RhODQxYmVkZDZiODU1ZjYxN2VkZWNjMGIxM2MwY2Q3MWU", "commit": {"author": {"name": "\u8bb8\u6770\u53cb Jieyou Xu (Joe)", "email": "jieyouxu@outlook.com", "date": "2023-06-04T02:18:09Z"}, "committer": {"name": "\u8bb8\u6770\u53cb Jieyou Xu (Joe)", "email": "jieyouxu@outlook.com", "date": "2023-06-09T02:01:16Z"}, "message": "Add help for trying to do C-like pointer arithmetics", "tree": {"sha": "dd76f9ba433420e012df2988e2c77836146f352d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd76f9ba433420e012df2988e2c77836146f352d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63d643da841bedd6b855f617edecc0b13c0cd71e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEze4qXcfh0ileWqZTxf1dMgFP20cFAmSCh+0ACgkQxf1dMgFP\n20e1+w//cwF8h1j9Y2aLZzMtLctaf5J8XWZqUtZQ5CHnE8vDqmQZeNQ12KYwJph6\nRRZUKrrHp3zOwaP9bGGnV3IW5ht9MIfu6Cd8vTD04GL0ecD7gcOYTppnAjeIrgiQ\nPp2KdRRbxBd8JB2QrUn+dAc3aryu8i12UE3ICMEKLDQmunl9P7KUSYKkYWsaafGd\n4O9BjNtn8IlB3oELUvyRWNUSnCTmaHPeDs1OojZnngn5lk/WXqaXmGsE0i+Y9cO4\npdaIGQlbbDSUhg4feK6ulxmsNTuAivZ+i9DhA0Hh6si2zEuFZv/rk2Aw4DPgbmDk\nNVzFHEPuOh4YGpaXanlmLMmv4uYZSlZ693SuK3P4YUJTRtavzD2hhGnMAT64AqY+\nbDoMa0HYkOx3V05UwTXhowbX+pTQi+PONTF5iLG007yuY3AaAoPSbQCa55W1Fn/I\nl7rXO2Fvr2of0GtPG0FSCysvmPKh3vBJ0/aVana+Wa72meRJq8aAImXChNqfKBXK\n4snf5MtMwkVb76nUVB38/JPrBOBHYx9+yk0bScMJp/RZ+21wteFYOFctJ0//v4GU\njCtGRn2Z4UYIgXeUaF/eTFrqZJIgbGkNF58A9XqsWS6nMdSmWrdEjw1yE6qaI+F4\nx09iIyPg8qsmhrnlwFOtvgDSaWQws+NRhHH+ab92oD/gt9NUHhE=\n=ouEr\n-----END PGP SIGNATURE-----", "payload": "tree dd76f9ba433420e012df2988e2c77836146f352d\nparent 8b35c0bb0f833c0077dc57006eb317edde2a2d1e\nauthor \u8bb8\u6770\u53cb Jieyou Xu (Joe) <jieyouxu@outlook.com> 1685845089 +0800\ncommitter \u8bb8\u6770\u53cb Jieyou Xu (Joe) <jieyouxu@outlook.com> 1686276076 +0800\n\nAdd help for trying to do C-like pointer arithmetics\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63d643da841bedd6b855f617edecc0b13c0cd71e", "html_url": "https://github.com/rust-lang/rust/commit/63d643da841bedd6b855f617edecc0b13c0cd71e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63d643da841bedd6b855f617edecc0b13c0cd71e/comments", "author": {"login": "jieyouxu", "id": 39484203, "node_id": "MDQ6VXNlcjM5NDg0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/39484203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieyouxu", "html_url": "https://github.com/jieyouxu", "followers_url": "https://api.github.com/users/jieyouxu/followers", "following_url": "https://api.github.com/users/jieyouxu/following{/other_user}", "gists_url": "https://api.github.com/users/jieyouxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieyouxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieyouxu/subscriptions", "organizations_url": "https://api.github.com/users/jieyouxu/orgs", "repos_url": "https://api.github.com/users/jieyouxu/repos", "events_url": "https://api.github.com/users/jieyouxu/events{/privacy}", "received_events_url": "https://api.github.com/users/jieyouxu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jieyouxu", "id": 39484203, "node_id": "MDQ6VXNlcjM5NDg0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/39484203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieyouxu", "html_url": "https://github.com/jieyouxu", "followers_url": "https://api.github.com/users/jieyouxu/followers", "following_url": "https://api.github.com/users/jieyouxu/following{/other_user}", "gists_url": "https://api.github.com/users/jieyouxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieyouxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieyouxu/subscriptions", "organizations_url": "https://api.github.com/users/jieyouxu/orgs", "repos_url": "https://api.github.com/users/jieyouxu/repos", "events_url": "https://api.github.com/users/jieyouxu/events{/privacy}", "received_events_url": "https://api.github.com/users/jieyouxu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b35c0bb0f833c0077dc57006eb317edde2a2d1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b35c0bb0f833c0077dc57006eb317edde2a2d1e", "html_url": "https://github.com/rust-lang/rust/commit/8b35c0bb0f833c0077dc57006eb317edde2a2d1e"}], "stats": {"total": 135, "additions": 135, "deletions": 0}, "files": [{"sha": "5081285736e61cabc01905645a60324a9c4919bd", "filename": "compiler/rustc_hir_typeck/src/expr.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/63d643da841bedd6b855f617edecc0b13c0cd71e/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63d643da841bedd6b855f617edecc0b13c0cd71e/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs?ref=63d643da841bedd6b855f617edecc0b13c0cd71e", "patch": "@@ -2870,6 +2870,21 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             );\n                         }\n                     }\n+\n+                    if base_t.is_unsafe_ptr() && idx_t.is_integral() {\n+                        err.multipart_suggestion(\n+                            \"consider using `wrapping_add` or `add` for indexing into raw pointer\",\n+                            vec![\n+                                (base.span.between(idx.span), \".wrapping_add(\".to_owned()),\n+                                (\n+                                    idx.span.shrink_to_hi().until(expr.span.shrink_to_hi()),\n+                                    \")\".to_owned(),\n+                                ),\n+                            ],\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n+\n                     let reported = err.emit();\n                     self.tcx.ty_error(reported)\n                 }"}, {"sha": "4f3d1d456798cc4ead1293ddfef23cd044f60152", "filename": "compiler/rustc_hir_typeck/src/op.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/63d643da841bedd6b855f617edecc0b13c0cd71e/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63d643da841bedd6b855f617edecc0b13c0cd71e/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs?ref=63d643da841bedd6b855f617edecc0b13c0cd71e", "patch": "@@ -521,6 +521,52 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         }\n                     }\n                 }\n+\n+                // Suggest using `add`, `offset` or `offset_from` for pointer - {integer},\n+                // pointer + {integer} or pointer - pointer.\n+                if op.span.can_be_used_for_suggestions() {\n+                    match op.node {\n+                        hir::BinOpKind::Add if lhs_ty.is_unsafe_ptr() && rhs_ty.is_integral() => {\n+                            err.multipart_suggestion(\n+                                \"consider using `wrapping_add` or `add` for pointer + {integer}\",\n+                                vec![\n+                                    (\n+                                        lhs_expr.span.between(rhs_expr.span),\n+                                        \".wrapping_add(\".to_owned(),\n+                                    ),\n+                                    (rhs_expr.span.shrink_to_hi(), \")\".to_owned()),\n+                                ],\n+                                Applicability::MaybeIncorrect,\n+                            );\n+                        }\n+                        hir::BinOpKind::Sub => {\n+                            if lhs_ty.is_unsafe_ptr() && rhs_ty.is_integral() {\n+                                err.multipart_suggestion(\n+                                    \"consider using `wrapping_sub` or `sub` for pointer - {integer}\",\n+                                    vec![\n+                                        (lhs_expr.span.between(rhs_expr.span), \".wrapping_sub(\".to_owned()),\n+                                        (rhs_expr.span.shrink_to_hi(), \")\".to_owned()),\n+                                    ],\n+                                    Applicability::MaybeIncorrect\n+                                );\n+                            }\n+\n+                            if lhs_ty.is_unsafe_ptr() && rhs_ty.is_unsafe_ptr() {\n+                                err.multipart_suggestion(\n+                                    \"consider using `offset_from` for pointer - pointer if the pointers point to the same allocation\",\n+                                    vec![\n+                                        (lhs_expr.span.shrink_to_lo(), \"unsafe { \".to_owned()),\n+                                        (lhs_expr.span.between(rhs_expr.span), \".offset_from(\".to_owned()),\n+                                        (rhs_expr.span.shrink_to_hi(), \") }\".to_owned()),\n+                                    ],\n+                                    Applicability::MaybeIncorrect\n+                                );\n+                            }\n+                        }\n+                        _ => {}\n+                    }\n+                }\n+\n                 let reported = err.emit();\n                 self.tcx.ty_error(reported)\n             }"}, {"sha": "bdb884f54312c319073fbec2e0c9e3375e39d059", "filename": "tests/ui/typeck/issue-112252-ptr-arithmetics-help.fixed", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/63d643da841bedd6b855f617edecc0b13c0cd71e/tests%2Fui%2Ftypeck%2Fissue-112252-ptr-arithmetics-help.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/63d643da841bedd6b855f617edecc0b13c0cd71e/tests%2Fui%2Ftypeck%2Fissue-112252-ptr-arithmetics-help.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fissue-112252-ptr-arithmetics-help.fixed?ref=63d643da841bedd6b855f617edecc0b13c0cd71e", "patch": "@@ -0,0 +1,10 @@\n+// run-rustfix\n+\n+fn main() {\n+    let _ptr1: *const u32 = std::ptr::null();\n+    let _ptr2: *const u32 = std::ptr::null();\n+    let _a = _ptr1.wrapping_add(5); //~ ERROR cannot add\n+    let _b = _ptr1.wrapping_sub(5); //~ ERROR cannot subtract\n+    let _c = unsafe { _ptr2.offset_from(_ptr1) }; //~ ERROR cannot subtract\n+    let _d = _ptr1.wrapping_add(5); //~ ERROR cannot index\n+}"}, {"sha": "cf68850cc4dee7d8aeb55815b1c08e95767486af", "filename": "tests/ui/typeck/issue-112252-ptr-arithmetics-help.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/63d643da841bedd6b855f617edecc0b13c0cd71e/tests%2Fui%2Ftypeck%2Fissue-112252-ptr-arithmetics-help.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63d643da841bedd6b855f617edecc0b13c0cd71e/tests%2Fui%2Ftypeck%2Fissue-112252-ptr-arithmetics-help.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fissue-112252-ptr-arithmetics-help.rs?ref=63d643da841bedd6b855f617edecc0b13c0cd71e", "patch": "@@ -0,0 +1,10 @@\n+// run-rustfix\n+\n+fn main() {\n+    let _ptr1: *const u32 = std::ptr::null();\n+    let _ptr2: *const u32 = std::ptr::null();\n+    let _a = _ptr1 + 5; //~ ERROR cannot add\n+    let _b = _ptr1 - 5; //~ ERROR cannot subtract\n+    let _c = _ptr2 - _ptr1; //~ ERROR cannot subtract\n+    let _d = _ptr1[5]; //~ ERROR cannot index\n+}"}, {"sha": "c55930da225bafd0ac5c692cb5c1c47154547e55", "filename": "tests/ui/typeck/issue-112252-ptr-arithmetics-help.stderr", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/63d643da841bedd6b855f617edecc0b13c0cd71e/tests%2Fui%2Ftypeck%2Fissue-112252-ptr-arithmetics-help.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/63d643da841bedd6b855f617edecc0b13c0cd71e/tests%2Fui%2Ftypeck%2Fissue-112252-ptr-arithmetics-help.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fissue-112252-ptr-arithmetics-help.stderr?ref=63d643da841bedd6b855f617edecc0b13c0cd71e", "patch": "@@ -0,0 +1,54 @@\n+error[E0369]: cannot add `{integer}` to `*const u32`\n+  --> $DIR/issue-112252-ptr-arithmetics-help.rs:6:20\n+   |\n+LL |     let _a = _ptr1 + 5;\n+   |              ----- ^ - {integer}\n+   |              |\n+   |              *const u32\n+   |\n+help: consider using `wrapping_add` or `add` for pointer + {integer}\n+   |\n+LL |     let _a = _ptr1.wrapping_add(5);\n+   |                   ~~~~~~~~~~~~~~ +\n+\n+error[E0369]: cannot subtract `{integer}` from `*const u32`\n+  --> $DIR/issue-112252-ptr-arithmetics-help.rs:7:20\n+   |\n+LL |     let _b = _ptr1 - 5;\n+   |              ----- ^ - {integer}\n+   |              |\n+   |              *const u32\n+   |\n+help: consider using `wrapping_sub` or `sub` for pointer - {integer}\n+   |\n+LL |     let _b = _ptr1.wrapping_sub(5);\n+   |                   ~~~~~~~~~~~~~~ +\n+\n+error[E0369]: cannot subtract `*const u32` from `*const u32`\n+  --> $DIR/issue-112252-ptr-arithmetics-help.rs:8:20\n+   |\n+LL |     let _c = _ptr2 - _ptr1;\n+   |              ----- ^ ----- *const u32\n+   |              |\n+   |              *const u32\n+   |\n+help: consider using `offset_from` for pointer - pointer if the pointers point to the same allocation\n+   |\n+LL |     let _c = unsafe { _ptr2.offset_from(_ptr1) };\n+   |              ++++++++      ~~~~~~~~~~~~~     +++\n+\n+error[E0608]: cannot index into a value of type `*const u32`\n+  --> $DIR/issue-112252-ptr-arithmetics-help.rs:9:14\n+   |\n+LL |     let _d = _ptr1[5];\n+   |              ^^^^^^^^\n+   |\n+help: consider using `wrapping_add` or `add` for indexing into raw pointer\n+   |\n+LL |     let _d = _ptr1.wrapping_add(5);\n+   |                   ~~~~~~~~~~~~~~ ~\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0369, E0608.\n+For more information about an error, try `rustc --explain E0369`."}]}