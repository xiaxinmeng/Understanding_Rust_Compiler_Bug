{"sha": "fe3df646fe415123d0a6bd09df698dc69074263a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlM2RmNjQ2ZmU0MTUxMjNkMGE2YmQwOWRmNjk4ZGM2OTA3NDI2M2E=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-06-24T03:19:26Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-06-24T22:08:59Z"}, "message": "Give up on checking filename", "tree": {"sha": "c1e12cadd7239d306806f93632607b2063f4c02e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1e12cadd7239d306806f93632607b2063f4c02e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe3df646fe415123d0a6bd09df698dc69074263a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe3df646fe415123d0a6bd09df698dc69074263a", "html_url": "https://github.com/rust-lang/rust/commit/fe3df646fe415123d0a6bd09df698dc69074263a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe3df646fe415123d0a6bd09df698dc69074263a/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d652d9d735f10402803318351f7a8ee91fc4c47", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d652d9d735f10402803318351f7a8ee91fc4c47", "html_url": "https://github.com/rust-lang/rust/commit/2d652d9d735f10402803318351f7a8ee91fc4c47"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "705fa5187292c5bdb953747fb2ca9948d9152d5a", "filename": "src/test/codegen/generator-debug-msvc.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe3df646fe415123d0a6bd09df698dc69074263a/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe3df646fe415123d0a6bd09df698dc69074263a/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs?ref=fe3df646fe415123d0a6bd09df698dc69074263a", "patch": "@@ -25,15 +25,13 @@ async fn async_fn_test() {\n     foo().await;\n }\n \n-// FIXME: We need \"checksum\" to prevent matching with the wrong (duplicate) file\n-//        metadata, even when -C codegen-units=1.\n-// CHECK-DAG:  [[FILE:!.*]] = !DIFile(filename: \"{{.*}}generator-debug-msvc.rs\", {{.*}}, checksum:\n+// FIXME: No way to reliably check the filename.\n \n // CHECK-DAG:  [[GEN_FN:!.*]] = !DINamespace(name: \"generator_test\"\n // CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"generator-0\", scope: [[GEN_FN]],\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n // For brevity, we just check the struct name and members of the last variant.\n-// CHECK-SAME: file: [[FILE]], line: 14,\n+// CHECK-SAME: file: [[FILE:![0-9]*]], line: 14,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n // CHECK-SAME: file: [[FILE]], line: 18,"}, {"sha": "4de57c644e8ca6a5c6eca0ed30db3957c2fb06fd", "filename": "src/test/codegen/generator-debug.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe3df646fe415123d0a6bd09df698dc69074263a/src%2Ftest%2Fcodegen%2Fgenerator-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe3df646fe415123d0a6bd09df698dc69074263a/src%2Ftest%2Fcodegen%2Fgenerator-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fgenerator-debug.rs?ref=fe3df646fe415123d0a6bd09df698dc69074263a", "patch": "@@ -25,17 +25,15 @@ async fn async_fn_test() {\n     foo().await;\n }\n \n-// FIXME: We need \"checksum\" to prevent matching with the wrong (duplicate) file\n-//        metadata, even when -C codegen-units=1.\n-// CHECK-DAG:  [[FILE:!.*]] = !DIFile(filename: \"{{.*}}generator-debug.rs\", {{.*}}, checksum:\n+// FIXME: No way to reliably check the filename.\n \n // CHECK-DAG:  [[GEN_FN:!.*]] = !DINamespace(name: \"generator_test\"\n // CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"generator-0\", scope: [[GEN_FN]], {{.*}}flags: DIFlagArtificial\n // CHECK:      [[VARIANT:!.*]] = !DICompositeType(tag: DW_TAG_variant_part, scope: [[GEN_FN]],\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK-SAME: discriminator: [[DISC:![0-9]*]]\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"0\", scope: [[VARIANT]],\n-// CHECK-SAME: file: [[FILE]], line: 14,\n+// CHECK-SAME: file: [[FILE:![0-9]*]], line: 14,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DICompositeType(tag: DW_TAG_structure_type, name: \"Unresumed\", scope: [[GEN]],\n // CHECK-SAME: flags: DIFlagArtificial"}]}