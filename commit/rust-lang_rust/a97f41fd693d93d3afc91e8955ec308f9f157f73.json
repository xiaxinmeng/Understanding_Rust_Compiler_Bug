{"sha": "a97f41fd693d93d3afc91e8955ec308f9f157f73", "node_id": "C_kwDOAAsO6NoAKGE5N2Y0MWZkNjkzZDkzZDNhZmM5MWU4OTU1ZWMzMDhmOWYxNTdmNzM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-12-06T22:58:24Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-12-20T21:37:14Z"}, "message": "don't ICE on variadic function calls", "tree": {"sha": "e6586d7bef5c6c71ff1500dafac050bffc5d63ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6586d7bef5c6c71ff1500dafac050bffc5d63ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a97f41fd693d93d3afc91e8955ec308f9f157f73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a97f41fd693d93d3afc91e8955ec308f9f157f73", "html_url": "https://github.com/rust-lang/rust/commit/a97f41fd693d93d3afc91e8955ec308f9f157f73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a97f41fd693d93d3afc91e8955ec308f9f157f73/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b81553267437627af63c79c1a20c73af865a842a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b81553267437627af63c79c1a20c73af865a842a", "html_url": "https://github.com/rust-lang/rust/commit/b81553267437627af63c79c1a20c73af865a842a"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "f3910c9765d2e65c91685ff5339ceba640375a80", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a97f41fd693d93d3afc91e8955ec308f9f157f73/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a97f41fd693d93d3afc91e8955ec308f9f157f73/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=a97f41fd693d93d3afc91e8955ec308f9f157f73", "patch": "@@ -331,8 +331,15 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 // `find_mir_or_eval_fn`.\n                 // FIXME: for variadic support, do we have to somehow determine calle's extra_args?\n                 let callee_fn_abi = self.fn_abi_of_instance(instance, ty::List::empty())?;\n-                assert!(!callee_fn_abi.c_variadic);\n-                assert!(!caller_fn_abi.c_variadic);\n+\n+                if callee_fn_abi.c_variadic != caller_fn_abi.c_variadic {\n+                    throw_ub_format!(\n+                        \"calling a c-variadic function via a non-variadic call site, or vice versa\"\n+                    );\n+                }\n+                if callee_fn_abi.c_variadic {\n+                    throw_unsup_format!(\"calling a c-variadic function is not supported\");\n+                }\n \n                 if M::enforce_abi(self) {\n                     if caller_fn_abi.conv != callee_fn_abi.conv {"}]}