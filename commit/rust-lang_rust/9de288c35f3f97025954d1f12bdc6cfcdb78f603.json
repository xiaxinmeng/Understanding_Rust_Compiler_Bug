{"sha": "9de288c35f3f97025954d1f12bdc6cfcdb78f603", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZTI4OGMzNWYzZjk3MDI1OTU0ZDFmMTJiZGM2Y2ZjZGI3OGY2MDM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-06T15:10:07Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-06T15:10:07Z"}, "message": "further refactoring away from commutativity", "tree": {"sha": "752d1296716f02378abb5b299e3a0a5f3cc4532a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/752d1296716f02378abb5b299e3a0a5f3cc4532a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9de288c35f3f97025954d1f12bdc6cfcdb78f603", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9de288c35f3f97025954d1f12bdc6cfcdb78f603", "html_url": "https://github.com/rust-lang/rust/commit/9de288c35f3f97025954d1f12bdc6cfcdb78f603", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9de288c35f3f97025954d1f12bdc6cfcdb78f603/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4856eab844913951f6288516fc89defa408297f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4856eab844913951f6288516fc89defa408297f2", "html_url": "https://github.com/rust-lang/rust/commit/4856eab844913951f6288516fc89defa408297f2"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "99e404e09e1e6f1edd0a1a2b2eda64ef9c003017", "filename": "src/rustc/middle/infer.rs", "status": "modified", "additions": 34, "deletions": 14, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9de288c35f3f97025954d1f12bdc6cfcdb78f603/src%2Frustc%2Fmiddle%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9de288c35f3f97025954d1f12bdc6cfcdb78f603/src%2Frustc%2Fmiddle%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Finfer.rs?ref=9de288c35f3f97025954d1f12bdc6cfcdb78f603", "patch": "@@ -961,7 +961,8 @@ iface combine {\n     fn tag() -> str;\n     fn bnd<V:copy>(b: bounds<V>) -> option<V>;\n     fn with_bnd<V:copy>(b: bounds<V>, v: V) -> bounds<V>;\n-    fn c_bot(b: ty::t) -> cres<ty::t>;\n+    fn c_bot_ty(b: ty::t) -> cres<ty::t>;\n+    fn c_ty_bot(b: ty::t) -> cres<ty::t>;\n     fn c_mts(a: ty::mt, b: ty::mt) -> cres<ty::mt>;\n     fn c_contratys(t1: ty::t, t2: ty::t) -> cres<ty::t>;\n     fn c_tys(t1: ty::t, t2: ty::t) -> cres<ty::t>;\n@@ -974,7 +975,8 @@ iface combine {\n         a: ty::region, b: ty::region) -> cres<ty::region>;\n     fn c_regions(\n         a: ty::region, b: ty::region) -> cres<ty::region>;\n-    fn c_regions_static(r: ty::region) -> cres<ty::region>;\n+    fn c_regions_static_r(r: ty::region) -> cres<ty::region>;\n+    fn c_regions_r_static(r: ty::region) -> cres<ty::region>;\n     fn c_regions_scope_scope(\n         a: ty::region, a_id: ast::node_id,\n         b: ty::region, b_id: ast::node_id) -> cres<ty::region>;\n@@ -1171,8 +1173,8 @@ fn c_tys<C:combine>(\n \n     indent {||\n     alt (ty::get(a).struct, ty::get(b).struct) {\n-      (ty::ty_bot, _) { self.c_bot(b) }\n-      (_, ty::ty_bot) { self.c_bot(b) }\n+      (ty::ty_bot, _) { self.c_ty_bot(b) }\n+      (_, ty::ty_bot) { self.c_bot_ty(b) }\n \n       (ty::ty_var(a_id), ty::ty_var(b_id)) {\n         c_vars(self, self.infcx().vb,\n@@ -1314,8 +1316,12 @@ fn c_regions<C:combine>(\n \n     indent {||\n     alt (a, b) {\n-      (ty::re_static, r) | (r, ty::re_static) {\n-        self.c_regions_static(r)\n+      (ty::re_static, r) {\n+        self.c_regions_static_r(r)\n+      }\n+\n+      (r, ty::re_static) {\n+        self.c_regions_r_static(r)\n       }\n \n       (ty::re_var(a_id), ty::re_var(b_id)) {\n@@ -1386,10 +1392,14 @@ impl of combine for lub {\n         {ub: some(v) with b}\n     }\n \n-    fn c_bot(b: ty::t) -> cres<ty::t> {\n+    fn c_bot_ty(b: ty::t) -> cres<ty::t> {\n         ok(b)\n     }\n \n+    fn c_ty_bot(b: ty::t) -> cres<ty::t> {\n+        self.c_bot_ty(b) // LUB is commutative\n+    }\n+\n     fn c_mts(a: ty::mt, b: ty::mt) -> cres<ty::mt> {\n         let tcx = self.infcx().tcx;\n \n@@ -1465,12 +1475,15 @@ impl of combine for lub {\n         ret glb(self.infcx()).c_regions(a, b);\n     }\n \n-    fn c_regions_static(_r: ty::region) -> cres<ty::region> {\n-        // LUB of `r` and static is always static---what's bigger than\n-        // that?\n+    fn c_regions_static_r(_r: ty::region) -> cres<ty::region> {\n+        // nothing lives longer than static\n         ret ok(ty::re_static);\n     }\n \n+    fn c_regions_r_static(r: ty::region) -> cres<ty::region> {\n+        self.c_regions_static_r(r) // LUB is commutative\n+    }\n+\n     fn c_regions_free_scope(\n         a: ty::region, _a_id: ast::node_id, _a_br: ty::bound_region,\n         _b: ty::region, _b_id: ast::node_id) -> cres<ty::region> {\n@@ -1517,10 +1530,14 @@ impl of combine for glb {\n         {lb: some(v) with b}\n     }\n \n-    fn c_bot(_b: ty::t) -> cres<ty::t> {\n+    fn c_bot_ty(_b: ty::t) -> cres<ty::t> {\n         ok(ty::mk_bot(self.infcx().tcx))\n     }\n \n+    fn c_ty_bot(b: ty::t) -> cres<ty::t> {\n+        self.c_bot_ty(b) // GLB is commutative\n+    }\n+\n     fn c_mts(a: ty::mt, b: ty::mt) -> cres<ty::mt> {\n         let tcx = self.infcx().tcx;\n \n@@ -1614,12 +1631,15 @@ impl of combine for glb {\n         ret lub(self.infcx()).c_regions(a, b);\n     }\n \n-    fn c_regions_static(r: ty::region) -> cres<ty::region> {\n-        // GLB of `r` and static is always `r`; static is bigger than\n-        // everything\n+    fn c_regions_static_r(r: ty::region) -> cres<ty::region> {\n+        // static lives longer than everything else\n         ret ok(r);\n     }\n \n+    fn c_regions_r_static(r: ty::region) -> cres<ty::region> {\n+        self.c_regions_static_r(r) // GLB is commutative\n+    }\n+\n     fn c_regions_free_scope(\n         _a: ty::region, _a_id: ast::node_id, _a_br: ty::bound_region,\n         b: ty::region, _b_id: ast::node_id) -> cres<ty::region> {"}]}