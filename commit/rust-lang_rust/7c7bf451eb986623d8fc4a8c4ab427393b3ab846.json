{"sha": "7c7bf451eb986623d8fc4a8c4ab427393b3ab846", "node_id": "C_kwDOAAsO6NoAKDdjN2JmNDUxZWI5ODY2MjNkOGZjNGE4YzRhYjQyNzM5M2IzYWI4NDY", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-07T17:23:33Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-07T17:23:33Z"}, "message": "Remove Clean impl for `&T`", "tree": {"sha": "41ad93d87eccf6dc30024fdb9e66c365d4cc9a58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41ad93d87eccf6dc30024fdb9e66c365d4cc9a58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c7bf451eb986623d8fc4a8c4ab427393b3ab846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c7bf451eb986623d8fc4a8c4ab427393b3ab846", "html_url": "https://github.com/rust-lang/rust/commit/7c7bf451eb986623d8fc4a8c4ab427393b3ab846", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c7bf451eb986623d8fc4a8c4ab427393b3ab846/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d07997702faad10881d9aad0611cebae19c145bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d07997702faad10881d9aad0611cebae19c145bf", "html_url": "https://github.com/rust-lang/rust/commit/d07997702faad10881d9aad0611cebae19c145bf"}], "stats": {"total": 8, "additions": 1, "deletions": 7}, "files": [{"sha": "9d893f3d06d51978f3f3c05541253224f949da1f", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7c7bf451eb986623d8fc4a8c4ab427393b3ab846/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c7bf451eb986623d8fc4a8c4ab427393b3ab846/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=7c7bf451eb986623d8fc4a8c4ab427393b3ab846", "patch": "@@ -54,12 +54,6 @@ crate trait Clean<T> {\n     fn clean(&self, cx: &mut DocContext<'_>) -> T;\n }\n \n-impl<T: Clean<U>, U> Clean<U> for &T {\n-    fn clean(&self, cx: &mut DocContext<'_>) -> U {\n-        (**self).clean(cx)\n-    }\n-}\n-\n impl Clean<Item> for doctree::Module<'_> {\n     fn clean(&self, cx: &mut DocContext<'_>) -> Item {\n         let mut items: Vec<Item> = vec![];\n@@ -1797,7 +1791,7 @@ impl Clean<Vec<Item>> for (&hir::Item<'_>, Option<Symbol>) {\n                     clean_fn_or_proc_macro(item, sig, generics, body_id, &mut name, cx)\n                 }\n                 ItemKind::Macro(ref macro_def) => MacroItem(Macro {\n-                    source: display_macro_source(cx, name, macro_def, def_id, &item.vis),\n+                    source: display_macro_source(cx, name, macro_def, def_id, item.vis),\n                 }),\n                 ItemKind::Trait(is_auto, unsafety, ref generics, bounds, item_ids) => {\n                     let items = item_ids"}]}