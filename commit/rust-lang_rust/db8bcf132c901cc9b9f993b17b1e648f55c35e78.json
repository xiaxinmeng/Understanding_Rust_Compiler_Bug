{"sha": "db8bcf132c901cc9b9f993b17b1e648f55c35e78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiOGJjZjEzMmM5MDFjYzliOWY5OTNiMTdiMWU2NDhmNTVjMzVlNzg=", "commit": {"author": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2021-03-12T23:06:17Z"}, "committer": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2021-03-15T15:35:28Z"}, "message": "implement function completion scoring", "tree": {"sha": "6cc0cf569b82c868bdac2d6e1a6d001583f77c61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cc0cf569b82c868bdac2d6e1a6d001583f77c61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db8bcf132c901cc9b9f993b17b1e648f55c35e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db8bcf132c901cc9b9f993b17b1e648f55c35e78", "html_url": "https://github.com/rust-lang/rust/commit/db8bcf132c901cc9b9f993b17b1e648f55c35e78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db8bcf132c901cc9b9f993b17b1e648f55c35e78/comments", "author": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f6d71cf0c41ac063bdb35dffe7ec713b1dbac42", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f6d71cf0c41ac063bdb35dffe7ec713b1dbac42", "html_url": "https://github.com/rust-lang/rust/commit/5f6d71cf0c41ac063bdb35dffe7ec713b1dbac42"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "2514dda7c70096a25f8cddf74d94614d6bb9591a", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/db8bcf132c901cc9b9f993b17b1e648f55c35e78/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8bcf132c901cc9b9f993b17b1e648f55c35e78/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=db8bcf132c901cc9b9f993b17b1e648f55c35e78", "patch": "@@ -927,6 +927,66 @@ fn f(foo: &Foo) { f(foo, w$0) }\n         );\n     }\n \n+    #[test]\n+    fn score_fn_type_and_name_match() {\n+        check_relevance(\n+            r#\"\n+struct A { bar: u8 }\n+fn baz() -> u8 { 0 }\n+fn bar() -> u8 { 0 }\n+fn f() { A { bar: b$0 }; }\n+\"#,\n+            expect![[r#\"\n+                fn baz() [type]\n+                st A []\n+                fn bar() [type+name]\n+                fn f() []\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn score_method_type_and_name_match() {\n+        check_relevance(\n+            r#\"\n+fn baz(aaa: u32){}\n+struct Foo;\n+impl Foo {\n+fn aaa(&self) -> u32 { 0 }\n+fn bbb(&self) -> u32 { 0 }\n+fn ccc(&self) -> u64 { 0 }\n+}\n+fn f() {\n+    baz(Foo.$0\n+}\n+\"#,\n+            expect![[r#\"\n+                me aaa() [type+name]\n+                me bbb() [type]\n+                me ccc() []\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn score_method_name_match_only() {\n+        check_relevance(\n+            r#\"\n+fn baz(aaa: u32){}\n+struct Foo;\n+impl Foo {\n+fn aaa(&self) -> u64 { 0 }\n+}\n+fn f() {\n+    baz(Foo.$0\n+}\n+\"#,\n+            expect![[r#\"\n+                me aaa() [name]\n+            \"#]],\n+        );\n+    }\n+\n     #[test]\n     fn suggest_ref_mut() {\n         cov_mark::check!(suggest_ref);"}, {"sha": "47e26a5d8d4cf886fbeb29b6cb66c2ac46764657", "filename": "crates/ide_completion/src/render/function.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/db8bcf132c901cc9b9f993b17b1e648f55c35e78/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8bcf132c901cc9b9f993b17b1e648f55c35e78/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs?ref=db8bcf132c901cc9b9f993b17b1e648f55c35e78", "patch": "@@ -5,7 +5,7 @@ use ide_db::SymbolKind;\n use syntax::ast::Fn;\n \n use crate::{\n-    item::{CompletionItem, CompletionItemKind, CompletionKind, ImportEdit},\n+    item::{CompletionItem, CompletionItemKind, CompletionKind, CompletionRelevance, ImportEdit},\n     render::{builder_ext::Params, RenderContext},\n };\n \n@@ -55,6 +55,21 @@ impl<'a> FunctionRender<'a> {\n             .add_call_parens(self.ctx.completion, self.name, params)\n             .add_import(import_to_add);\n \n+        let mut relevance = CompletionRelevance::default();\n+        if let Some(expected_type) = &self.ctx.completion.expected_type {\n+            let ret_ty = self.func.ret_type(self.ctx.db());\n+\n+            // We don't ever consider a function which returns unit type to be an\n+            // exact type match, since nearly always this is not meaningful to the\n+            // user.\n+            relevance.exact_type_match = &ret_ty == expected_type && !ret_ty.is_unit();\n+        }\n+        if let Some(expected_name) = &self.ctx.completion.expected_name {\n+            relevance.exact_name_match =\n+                expected_name == &self.func.name(self.ctx.db()).to_string();\n+        }\n+        item.set_relevance(relevance);\n+\n         item.build()\n     }\n "}]}