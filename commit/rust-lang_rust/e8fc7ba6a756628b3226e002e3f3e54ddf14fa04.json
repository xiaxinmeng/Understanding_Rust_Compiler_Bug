{"sha": "e8fc7ba6a756628b3226e002e3f3e54ddf14fa04", "node_id": "C_kwDOAAsO6NoAKGU4ZmM3YmE2YTc1NjYyOGIzMjI2ZTAwMmUzZjNlNTRkZGYxNGZhMDQ", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-05-13T07:43:15Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-05-13T07:43:15Z"}, "message": "Slap #[inline] on all the ByRefSized methods, per the8472's suggestion", "tree": {"sha": "fed3e2df526716985321ccabf1cee9b6c6bd19a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fed3e2df526716985321ccabf1cee9b6c6bd19a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8fc7ba6a756628b3226e002e3f3e54ddf14fa04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8fc7ba6a756628b3226e002e3f3e54ddf14fa04", "html_url": "https://github.com/rust-lang/rust/commit/e8fc7ba6a756628b3226e002e3f3e54ddf14fa04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8fc7ba6a756628b3226e002e3f3e54ddf14fa04/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83595f9242ad9e8a7da091f65d450e44e4434f89", "url": "https://api.github.com/repos/rust-lang/rust/commits/83595f9242ad9e8a7da091f65d450e44e4434f89", "html_url": "https://github.com/rust-lang/rust/commit/83595f9242ad9e8a7da091f65d450e44e4434f89"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "bf2e3e182e2a3234c3417cadb477be7d862e92a8", "filename": "library/core/src/iter/adapters/by_ref_sized.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e8fc7ba6a756628b3226e002e3f3e54ddf14fa04/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fby_ref_sized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8fc7ba6a756628b3226e002e3f3e54ddf14fa04/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fby_ref_sized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fby_ref_sized.rs?ref=e8fc7ba6a756628b3226e002e3f3e54ddf14fa04", "patch": "@@ -9,29 +9,35 @@ pub(crate) struct ByRefSized<'a, I>(pub &'a mut I);\n impl<I: Iterator> Iterator for ByRefSized<'_, I> {\n     type Item = I::Item;\n \n+    #[inline]\n     fn next(&mut self) -> Option<Self::Item> {\n         self.0.next()\n     }\n \n+    #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.0.size_hint()\n     }\n \n+    #[inline]\n     fn advance_by(&mut self, n: usize) -> Result<(), usize> {\n         self.0.advance_by(n)\n     }\n \n+    #[inline]\n     fn nth(&mut self, n: usize) -> Option<Self::Item> {\n         self.0.nth(n)\n     }\n \n+    #[inline]\n     fn fold<B, F>(self, init: B, f: F) -> B\n     where\n         F: FnMut(B, Self::Item) -> B,\n     {\n         self.0.fold(init, f)\n     }\n \n+    #[inline]\n     fn try_fold<B, F, R>(&mut self, init: B, f: F) -> R\n     where\n         F: FnMut(B, Self::Item) -> R,\n@@ -42,25 +48,30 @@ impl<I: Iterator> Iterator for ByRefSized<'_, I> {\n }\n \n impl<I: DoubleEndedIterator> DoubleEndedIterator for ByRefSized<'_, I> {\n+    #[inline]\n     fn next_back(&mut self) -> Option<Self::Item> {\n         self.0.next_back()\n     }\n \n+    #[inline]\n     fn advance_back_by(&mut self, n: usize) -> Result<(), usize> {\n         self.0.advance_back_by(n)\n     }\n \n+    #[inline]\n     fn nth_back(&mut self, n: usize) -> Option<Self::Item> {\n         self.0.nth_back(n)\n     }\n \n+    #[inline]\n     fn rfold<B, F>(self, init: B, f: F) -> B\n     where\n         F: FnMut(B, Self::Item) -> B,\n     {\n         self.0.rfold(init, f)\n     }\n \n+    #[inline]\n     fn try_rfold<B, F, R>(&mut self, init: B, f: F) -> R\n     where\n         F: FnMut(B, Self::Item) -> R,"}]}