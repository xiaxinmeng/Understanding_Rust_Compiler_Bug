{"sha": "854b1331810b503e266be96708ed753db2677865", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1NGIxMzMxODEwYjUwM2UyNjZiZTk2NzA4ZWQ3NTNkYjI2Nzc4NjU=", "commit": {"author": {"name": "Arif Roktim", "email": "arifrroktim@gmail.com", "date": "2020-10-21T20:56:20Z"}, "committer": {"name": "Arif Roktim", "email": "arifrroktim@gmail.com", "date": "2020-10-21T21:10:22Z"}, "message": "Properly identify camel cased acronyms as UpperCamelCase", "tree": {"sha": "f56ce95cb7a187ed2bf2410bdc19920d19205521", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f56ce95cb7a187ed2bf2410bdc19920d19205521"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/854b1331810b503e266be96708ed753db2677865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/854b1331810b503e266be96708ed753db2677865", "html_url": "https://github.com/rust-lang/rust/commit/854b1331810b503e266be96708ed753db2677865", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/854b1331810b503e266be96708ed753db2677865/comments", "author": {"login": "ArifRoktim", "id": 23637819, "node_id": "MDQ6VXNlcjIzNjM3ODE5", "avatar_url": "https://avatars.githubusercontent.com/u/23637819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArifRoktim", "html_url": "https://github.com/ArifRoktim", "followers_url": "https://api.github.com/users/ArifRoktim/followers", "following_url": "https://api.github.com/users/ArifRoktim/following{/other_user}", "gists_url": "https://api.github.com/users/ArifRoktim/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArifRoktim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArifRoktim/subscriptions", "organizations_url": "https://api.github.com/users/ArifRoktim/orgs", "repos_url": "https://api.github.com/users/ArifRoktim/repos", "events_url": "https://api.github.com/users/ArifRoktim/events{/privacy}", "received_events_url": "https://api.github.com/users/ArifRoktim/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ArifRoktim", "id": 23637819, "node_id": "MDQ6VXNlcjIzNjM3ODE5", "avatar_url": "https://avatars.githubusercontent.com/u/23637819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArifRoktim", "html_url": "https://github.com/ArifRoktim", "followers_url": "https://api.github.com/users/ArifRoktim/followers", "following_url": "https://api.github.com/users/ArifRoktim/following{/other_user}", "gists_url": "https://api.github.com/users/ArifRoktim/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArifRoktim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArifRoktim/subscriptions", "organizations_url": "https://api.github.com/users/ArifRoktim/orgs", "repos_url": "https://api.github.com/users/ArifRoktim/repos", "events_url": "https://api.github.com/users/ArifRoktim/events{/privacy}", "received_events_url": "https://api.github.com/users/ArifRoktim/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc63f153f07af0d494f6bdfba9291e821a839807", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc63f153f07af0d494f6bdfba9291e821a839807", "html_url": "https://github.com/rust-lang/rust/commit/cc63f153f07af0d494f6bdfba9291e821a839807"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "f179c62b7f36456810f802ec6fef6117997652f5", "filename": "crates/hir_ty/src/diagnostics/decl_check.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/854b1331810b503e266be96708ed753db2677865/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b1331810b503e266be96708ed753db2677865/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs?ref=854b1331810b503e266be96708ed753db2677865", "patch": "@@ -708,11 +708,23 @@ fn foo() {\n     }\n \n     #[test]\n-    fn incorrect_struct_name() {\n+    fn incorrect_struct_names() {\n         check_diagnostics(\n             r#\"\n struct non_camel_case_name {}\n     // ^^^^^^^^^^^^^^^^^^^ Structure `non_camel_case_name` should have CamelCase name, e.g. `NonCamelCaseName`\n+\n+struct SCREAMING_CASE {}\n+    // ^^^^^^^^^^^^^^ Structure `SCREAMING_CASE` should have CamelCase name, e.g. `ScreamingCase`\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn no_diagnostic_for_camel_cased_acronyms_in_struct_name() {\n+        check_diagnostics(\n+            r#\"\n+struct AABB {}\n \"#,\n         );\n     }\n@@ -728,11 +740,23 @@ struct SomeStruct { SomeField: u8 }\n     }\n \n     #[test]\n-    fn incorrect_enum_name() {\n+    fn incorrect_enum_names() {\n         check_diagnostics(\n             r#\"\n enum some_enum { Val(u8) }\n   // ^^^^^^^^^ Enum `some_enum` should have CamelCase name, e.g. `SomeEnum`\n+\n+enum SOME_ENUM\n+  // ^^^^^^^^^ Enum `SOME_ENUM` should have CamelCase name, e.g. `SomeEnum`\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn no_diagnostic_for_camel_cased_acronyms_in_enum_name() {\n+        check_diagnostics(\n+            r#\"\n+enum AABB {}\n \"#,\n         );\n     }"}, {"sha": "324d607658a8849709704f61acb6c4c96586c15c", "filename": "crates/hir_ty/src/diagnostics/decl_check/case_conv.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/854b1331810b503e266be96708ed753db2677865/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check%2Fcase_conv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b1331810b503e266be96708ed753db2677865/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check%2Fcase_conv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check%2Fcase_conv.rs?ref=854b1331810b503e266be96708ed753db2677865", "patch": "@@ -29,7 +29,13 @@ fn detect_case(ident: &str) -> DetectedCase {\n \n     if has_uppercase {\n         if !has_lowercase {\n-            DetectedCase::UpperSnakeCase\n+            if has_underscore {\n+                DetectedCase::UpperSnakeCase\n+            } else {\n+                // It has uppercase only and no underscores. Ex: \"AABB\"\n+                // This is a camel cased acronym.\n+                DetectedCase::UpperCamelCase\n+            }\n         } else if !has_underscore {\n             if first_lowercase {\n                 DetectedCase::LowerCamelCase\n@@ -180,6 +186,7 @@ mod tests {\n         check(to_camel_case, \"Weird_Case\", expect![[\"WeirdCase\"]]);\n         check(to_camel_case, \"name\", expect![[\"Name\"]]);\n         check(to_camel_case, \"A\", expect![[\"\"]]);\n+        check(to_camel_case, \"AABB\", expect![[\"\"]]);\n     }\n \n     #[test]"}]}