{"sha": "086c1834479b3c437b36a975d1ef54dcd9b58b2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NmMxODM0NDc5YjNjNDM3YjM2YTk3NWQxZWY1NGRjZDliNThiMmE=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-10-22T13:20:25Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-10-22T13:20:51Z"}, "message": "Use correct width when formatting type on local statement", "tree": {"sha": "15e5d4c7c626b3084a84216a780ed3ed614fefb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15e5d4c7c626b3084a84216a780ed3ed614fefb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/086c1834479b3c437b36a975d1ef54dcd9b58b2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/086c1834479b3c437b36a975d1ef54dcd9b58b2a", "html_url": "https://github.com/rust-lang/rust/commit/086c1834479b3c437b36a975d1ef54dcd9b58b2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/086c1834479b3c437b36a975d1ef54dcd9b58b2a/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf44c079c122c58076716c088b162f4dad6361f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf44c079c122c58076716c088b162f4dad6361f9", "html_url": "https://github.com/rust-lang/rust/commit/cf44c079c122c58076716c088b162f4dad6361f9"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "949307fefd0f93f714d6848ce157d7fb5dbd8b0f", "filename": "src/items.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/086c1834479b3c437b36a975d1ef54dcd9b58b2a/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086c1834479b3c437b36a975d1ef54dcd9b58b2a/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=086c1834479b3c437b36a975d1ef54dcd9b58b2a", "patch": "@@ -94,10 +94,16 @@ impl Rewrite for ast::Local {\n \n             if let Some(ref ty) = self.ty {\n                 let separator = type_annotation_separator(context.config);\n-                let indent = shape.indent + last_line_width(&result) + separator.len();\n-                // 1 = ;\n-                let budget = shape.width.checked_sub(indent.width() + 1)?;\n-                let rewrite = ty.rewrite(context, Shape::legacy(budget, indent))?;\n+                let ty_shape = if pat_str.contains('\\n') {\n+                    shape.with_max_width(context.config)\n+                } else {\n+                    shape\n+                }\n+                .offset_left(last_line_width(&result) + separator.len())?\n+                // 2 = ` =`\n+                .sub_width(2)?;\n+\n+                let rewrite = ty.rewrite(context, ty_shape)?;\n \n                 infix.push_str(separator);\n                 infix.push_str(&rewrite);"}]}