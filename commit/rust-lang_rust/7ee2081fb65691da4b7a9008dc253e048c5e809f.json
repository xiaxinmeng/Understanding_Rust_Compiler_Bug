{"sha": "7ee2081fb65691da4b7a9008dc253e048c5e809f", "node_id": "C_kwDOAAsO6NoAKDdlZTIwODFmYjY1NjkxZGE0YjdhOTAwOGRjMjUzZTA0OGM1ZTgwOWY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-17T15:51:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-17T15:51:30Z"}, "message": "Auto merge of #8441 - Jarcho:needless_borrow_temp, r=flip1995\n\nDon't lint `needless_borrow` in method receiver positions\n\nfixes #8408\nfixes #8407\nfixes #8391\nfixes #8367\nfixes #8380\n\nThis is a temporary fix for `needless_borrow`. The proper fix is included in #8355.\n\nThis should probably be merged into rustc before beta branches on Friday. This issue has been reported six or seven times in the past couple of weeks.\n\nchangelog: Fix various issues with `needless_borrow` n\u00b4. Note to changelog writer: those issues might have been introduced in this release cycle, so this might not matter in the changelog.", "tree": {"sha": "566815547161049bb78034cf3110fea3e8f5c243", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/566815547161049bb78034cf3110fea3e8f5c243"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ee2081fb65691da4b7a9008dc253e048c5e809f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ee2081fb65691da4b7a9008dc253e048c5e809f", "html_url": "https://github.com/rust-lang/rust/commit/7ee2081fb65691da4b7a9008dc253e048c5e809f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ee2081fb65691da4b7a9008dc253e048c5e809f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4cf91b9c8b393a83dc9690d2721346a1fe0569d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4cf91b9c8b393a83dc9690d2721346a1fe0569d", "html_url": "https://github.com/rust-lang/rust/commit/a4cf91b9c8b393a83dc9690d2721346a1fe0569d"}, {"sha": "a135b52102651b0c3f10dbf869a9e7cfae8adbce", "url": "https://api.github.com/repos/rust-lang/rust/commits/a135b52102651b0c3f10dbf869a9e7cfae8adbce", "html_url": "https://github.com/rust-lang/rust/commit/a135b52102651b0c3f10dbf869a9e7cfae8adbce"}], "stats": {"total": 34, "additions": 8, "deletions": 26}, "files": [{"sha": "fe3911983421b34f383384c939e82c308cde86b6", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ee2081fb65691da4b7a9008dc253e048c5e809f/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ee2081fb65691da4b7a9008dc253e048c5e809f/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=7ee2081fb65691da4b7a9008dc253e048c5e809f", "patch": "@@ -528,7 +528,7 @@ fn is_auto_reborrow_position(parent: Option<Node<'_>>) -> bool {\n fn is_auto_borrow_position(parent: Option<Node<'_>>, child_id: HirId) -> bool {\n     if let Some(Node::Expr(parent)) = parent {\n         match parent.kind {\n-            ExprKind::MethodCall(_, [self_arg, ..], _) => self_arg.hir_id == child_id,\n+            // ExprKind::MethodCall(_, [self_arg, ..], _) => self_arg.hir_id == child_id,\n             ExprKind::Field(..) => true,\n             ExprKind::Call(f, _) => f.hir_id == child_id,\n             _ => false,"}, {"sha": "efeb5cf5b2b25aedb3ad0cb7a06edc97c84ad29b", "filename": "tests/ui/needless_borrow.fixed", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7ee2081fb65691da4b7a9008dc253e048c5e809f/tests%2Fui%2Fneedless_borrow.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7ee2081fb65691da4b7a9008dc253e048c5e809f/tests%2Fui%2Fneedless_borrow.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.fixed?ref=7ee2081fb65691da4b7a9008dc253e048c5e809f", "patch": "@@ -64,9 +64,9 @@ fn main() {\n     *x = 5;\n \n     let s = String::new();\n-    let _ = s.len();\n-    let _ = s.capacity();\n-    let _ = s.capacity();\n+    // let _ = (&s).len();\n+    // let _ = (&s).capacity();\n+    // let _ = (&&s).capacity();\n \n     let x = (1, 2);\n     let _ = x.0;"}, {"sha": "3e416a0eb84aaa6ea38a285f0cefa7ca911e2904", "filename": "tests/ui/needless_borrow.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7ee2081fb65691da4b7a9008dc253e048c5e809f/tests%2Fui%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ee2081fb65691da4b7a9008dc253e048c5e809f/tests%2Fui%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.rs?ref=7ee2081fb65691da4b7a9008dc253e048c5e809f", "patch": "@@ -64,9 +64,9 @@ fn main() {\n     *x = 5;\n \n     let s = String::new();\n-    let _ = (&s).len();\n-    let _ = (&s).capacity();\n-    let _ = (&&s).capacity();\n+    // let _ = (&s).len();\n+    // let _ = (&s).capacity();\n+    // let _ = (&&s).capacity();\n \n     let x = (1, 2);\n     let _ = (&x).0;"}, {"sha": "05591ce4117b2e3937fca808cd4adaab9c218ff7", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7ee2081fb65691da4b7a9008dc253e048c5e809f/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7ee2081fb65691da4b7a9008dc253e048c5e809f/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=7ee2081fb65691da4b7a9008dc253e048c5e809f", "patch": "@@ -84,24 +84,6 @@ error: this expression creates a reference which is immediately dereferenced by\n LL |     let y: &mut i32 = &mut &mut x;\n    |                       ^^^^^^^^^^^ help: change this to: `x`\n \n-error: this expression borrows a value the compiler would automatically borrow\n-  --> $DIR/needless_borrow.rs:67:13\n-   |\n-LL |     let _ = (&s).len();\n-   |             ^^^^ help: change this to: `s`\n-\n-error: this expression borrows a value the compiler would automatically borrow\n-  --> $DIR/needless_borrow.rs:68:13\n-   |\n-LL |     let _ = (&s).capacity();\n-   |             ^^^^ help: change this to: `s`\n-\n-error: this expression creates a reference which is immediately dereferenced by the compiler\n-  --> $DIR/needless_borrow.rs:69:13\n-   |\n-LL |     let _ = (&&s).capacity();\n-   |             ^^^^^ help: change this to: `s`\n-\n error: this expression borrows a value the compiler would automatically borrow\n   --> $DIR/needless_borrow.rs:72:13\n    |\n@@ -114,5 +96,5 @@ error: this expression borrows a value the compiler would automatically borrow\n LL |     let _ = unsafe { (&*x).0 };\n    |                      ^^^^^ help: change this to: `(*x)`\n \n-error: aborting due to 19 previous errors\n+error: aborting due to 16 previous errors\n "}]}