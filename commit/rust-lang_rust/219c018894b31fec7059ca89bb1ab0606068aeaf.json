{"sha": "219c018894b31fec7059ca89bb1ab0606068aeaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxOWMwMTg4OTRiMzFmZWM3MDU5Y2E4OWJiMWFiMDYwNjA2OGFlYWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-30T22:11:46Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-11-01T17:08:24Z"}, "message": "std: Move platform-specific code out of libstd/lib.rs", "tree": {"sha": "b18b2913d5b8aca124d2306e1790c5ab46a2252d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b18b2913d5b8aca124d2306e1790c5ab46a2252d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/219c018894b31fec7059ca89bb1ab0606068aeaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/219c018894b31fec7059ca89bb1ab0606068aeaf", "html_url": "https://github.com/rust-lang/rust/commit/219c018894b31fec7059ca89bb1ab0606068aeaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/219c018894b31fec7059ca89bb1ab0606068aeaf/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d54cd4b2cd864fbd6f2f8d036903f88b6ea79b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d54cd4b2cd864fbd6f2f8d036903f88b6ea79b4", "html_url": "https://github.com/rust-lang/rust/commit/6d54cd4b2cd864fbd6f2f8d036903f88b6ea79b4"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "1d6c2403c2fe63c1793faa2e9306f58505d11fb3", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/219c018894b31fec7059ca89bb1ab0606068aeaf/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/219c018894b31fec7059ca89bb1ab0606068aeaf/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=219c018894b31fec7059ca89bb1ab0606068aeaf", "patch": "@@ -458,10 +458,7 @@ mod memchr;\n #[macro_use]\n #[path = \"sys/common/mod.rs\"] mod sys_common;\n \n-#[cfg(unix)]\n-#[path = \"sys/unix/mod.rs\"] mod sys;\n-#[cfg(windows)]\n-#[path = \"sys/windows/mod.rs\"] mod sys;\n+mod sys;\n \n pub mod rt;\n mod panicking;"}, {"sha": "f7e1a0a075a850e05408c089a30b95436d35b2db", "filename": "src/libstd/sys/mod.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/219c018894b31fec7059ca89bb1ab0606068aeaf/src%2Flibstd%2Fsys%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/219c018894b31fec7059ca89bb1ab0606068aeaf/src%2Flibstd%2Fsys%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fmod.rs?ref=219c018894b31fec7059ca89bb1ab0606068aeaf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub use self::imp::*;\n+\n+#[cfg(unix)]\n+#[path = \"unix/mod.rs\"]\n+mod imp;\n+\n+#[cfg(windows)]\n+#[path = \"windows/mod.rs\"]\n+mod imp;"}, {"sha": "0610a0245ea68235df6384559d05dccdc898624d", "filename": "src/libstd/sys/windows/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/219c018894b31fec7059ca89bb1ab0606068aeaf/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/219c018894b31fec7059ca89bb1ab0606068aeaf/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs?ref=219c018894b31fec7059ca89bb1ab0606068aeaf", "patch": "@@ -179,7 +179,7 @@ pub fn truncate_utf16_at_nul<'a>(v: &'a [u16]) -> &'a [u16] {\n     }\n }\n \n-trait IsZero {\n+pub trait IsZero {\n     fn is_zero(&self) -> bool;\n }\n \n@@ -193,15 +193,15 @@ macro_rules! impl_is_zero {\n \n impl_is_zero! { i8 i16 i32 i64 isize u8 u16 u32 u64 usize }\n \n-fn cvt<I: IsZero>(i: I) -> io::Result<I> {\n+pub fn cvt<I: IsZero>(i: I) -> io::Result<I> {\n     if i.is_zero() {\n         Err(io::Error::last_os_error())\n     } else {\n         Ok(i)\n     }\n }\n \n-fn dur2timeout(dur: Duration) -> c::DWORD {\n+pub fn dur2timeout(dur: Duration) -> c::DWORD {\n     // Note that a duration is a (u64, u32) (seconds, nanoseconds) pair, and the\n     // timeouts in windows APIs are typically u32 milliseconds. To translate, we\n     // have two pieces to take care of:"}, {"sha": "5caa7f8af440d96c0cba135483c38e122273fa5a", "filename": "src/tools/tidy/src/pal.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/219c018894b31fec7059ca89bb1ab0606068aeaf/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/219c018894b31fec7059ca89bb1ab0606068aeaf/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs?ref=219c018894b31fec7059ca89bb1ab0606068aeaf", "patch": "@@ -57,13 +57,13 @@ const EXCEPTION_PATHS: &'static [&'static str] = &[\n     \"src/libpanic_abort\",\n     \"src/libpanic_unwind\",\n     \"src/libunwind\",\n-    \"src/libstd/sys/unix\", // This is where platform-specific code for std should live\n-    \"src/libstd/sys/windows\", // Ditto\n+    \"src/libstd/sys/unix\", // This is where platform-specific code for unix\n+    \"src/libstd/sys/windows\", // Ditto for windows\n+    \"src/libstd/sys/mod.rs\", // This file chooses the platform\n     \"src/libstd/os\", // Platform-specific public interfaces\n     \"src/rtstartup\", // Not sure what to do about this. magic stuff for mingw\n \n     // temporary exceptions\n-    \"src/libstd/lib.rs\", // This could probably be done within the sys directory\n     \"src/libstd/rtdeps.rs\", // Until rustbuild replaces make\n     \"src/libstd/path.rs\",\n     \"src/libstd/num/f32.rs\","}]}