{"sha": "dfca7b333182c9f2153e846525833d7ed1c3bfd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmY2E3YjMzMzE4MmM5ZjIxNTNlODQ2NTI1ODMzZDdlZDFjM2JmZDQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-08-26T19:38:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-26T19:38:10Z"}, "message": "Rollup merge of #88289 - durin42:llvm-14-attrs, r=nikic\n\nFixes for LLVM change 0f45c16f2caa7c035e5c3edd40af9e0d51ad6ba7\n\nMore details in the individual commit messages, but the summary is: LLVM deleted an unused-to-them method that we used, we worked around it to avoid annoying cleanup/restructuring in the Rust-side code.", "tree": {"sha": "afaa462a93727ea5f8251d320a4395f079f06868", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afaa462a93727ea5f8251d320a4395f079f06868"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfca7b333182c9f2153e846525833d7ed1c3bfd4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhJ+2iCRBK7hj4Ov3rIwAA44IIAAJHKxIn7huOrf6Lnwp6Yhus\n4Y4rimItK0zMP6t02u3RSNoml1zQhdBAR6gOlQVINJZUqF+VJMC3UYprC5k4Syy0\nYVV0osAM9QvekxQbaMprWABPNn3nDWVCrnBk9o/xMNTd4SMfLzJlvqpEkLOutBnX\nb+tPIZk1AWg4LHcQQ4PJQUwcfD55BhXPyyZuzwI/a16l+uXTNZml/UV2kAKuRGki\nMW5x+40v2aoeb4Vaas8CHzsH9FreNVyQoVifSFQoDXHb5X1EOFNrLlWdRXUSXQaQ\nIwudXnjS5355bzJ/qPk4Gi0qD/6ycKloWrdqhnzqvcwrWPDVLKHuFKkcnCco+1k=\n=3mdj\n-----END PGP SIGNATURE-----\n", "payload": "tree afaa462a93727ea5f8251d320a4395f079f06868\nparent 1e94fe1a4553e4fcbbaecd385592f1d277d05e19\nparent 027db5d036768ba8b0e36cb1b9f3f0ed1e3da000\nauthor Manish Goregaokar <manishsmail@gmail.com> 1630006690 -0700\ncommitter GitHub <noreply@github.com> 1630006690 -0700\n\nRollup merge of #88289 - durin42:llvm-14-attrs, r=nikic\n\nFixes for LLVM change 0f45c16f2caa7c035e5c3edd40af9e0d51ad6ba7\n\nMore details in the individual commit messages, but the summary is: LLVM deleted an unused-to-them method that we used, we worked around it to avoid annoying cleanup/restructuring in the Rust-side code.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfca7b333182c9f2153e846525833d7ed1c3bfd4", "html_url": "https://github.com/rust-lang/rust/commit/dfca7b333182c9f2153e846525833d7ed1c3bfd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfca7b333182c9f2153e846525833d7ed1c3bfd4/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e94fe1a4553e4fcbbaecd385592f1d277d05e19", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e94fe1a4553e4fcbbaecd385592f1d277d05e19", "html_url": "https://github.com/rust-lang/rust/commit/1e94fe1a4553e4fcbbaecd385592f1d277d05e19"}, {"sha": "027db5d036768ba8b0e36cb1b9f3f0ed1e3da000", "url": "https://api.github.com/repos/rust-lang/rust/commits/027db5d036768ba8b0e36cb1b9f3f0ed1e3da000", "html_url": "https://github.com/rust-lang/rust/commit/027db5d036768ba8b0e36cb1b9f3f0ed1e3da000"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "4f07a0c67c13f43f50b1962a992b0c9b6ad50136", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/dfca7b333182c9f2153e846525833d7ed1c3bfd4/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/dfca7b333182c9f2153e846525833d7ed1c3bfd4/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=dfca7b333182c9f2153e846525833d7ed1c3bfd4", "patch": "@@ -270,34 +270,30 @@ extern \"C\" void LLVMRustAddFunctionAttribute(LLVMValueRef Fn, unsigned Index,\n                                              LLVMRustAttribute RustAttr) {\n   Function *A = unwrap<Function>(Fn);\n   Attribute Attr = Attribute::get(A->getContext(), fromRust(RustAttr));\n-  AttrBuilder B(Attr);\n-  A->addAttributes(Index, B);\n+  A->addAttribute(Index, Attr);\n }\n \n extern \"C\" void LLVMRustAddAlignmentAttr(LLVMValueRef Fn,\n                                          unsigned Index,\n                                          uint32_t Bytes) {\n   Function *A = unwrap<Function>(Fn);\n-  AttrBuilder B;\n-  B.addAlignmentAttr(Bytes);\n-  A->addAttributes(Index, B);\n+  A->addAttribute(Index, Attribute::getWithAlignment(\n+      A->getContext(), llvm::Align(Bytes)));\n }\n \n extern \"C\" void LLVMRustAddDereferenceableAttr(LLVMValueRef Fn, unsigned Index,\n                                                uint64_t Bytes) {\n   Function *A = unwrap<Function>(Fn);\n-  AttrBuilder B;\n-  B.addDereferenceableAttr(Bytes);\n-  A->addAttributes(Index, B);\n+  A->addAttribute(Index, Attribute::getWithDereferenceableBytes(A->getContext(),\n+                                                                Bytes));\n }\n \n extern \"C\" void LLVMRustAddDereferenceableOrNullAttr(LLVMValueRef Fn,\n                                                      unsigned Index,\n                                                      uint64_t Bytes) {\n   Function *A = unwrap<Function>(Fn);\n-  AttrBuilder B;\n-  B.addDereferenceableOrNullAttr(Bytes);\n-  A->addAttributes(Index, B);\n+  A->addAttribute(Index, Attribute::getWithDereferenceableOrNullBytes(\n+      A->getContext(), Bytes));\n }\n \n extern \"C\" void LLVMRustAddByValAttr(LLVMValueRef Fn, unsigned Index,\n@@ -323,9 +319,8 @@ extern \"C\" void LLVMRustAddFunctionAttrStringValue(LLVMValueRef Fn,\n                                                    const char *Name,\n                                                    const char *Value) {\n   Function *F = unwrap<Function>(Fn);\n-  AttrBuilder B;\n-  B.addAttribute(Name, Value);\n-  F->addAttributes(Index, B);\n+  F->addAttribute(Index, Attribute::get(\n+      F->getContext(), StringRef(Name), StringRef(Value)));\n }\n \n extern \"C\" void LLVMRustRemoveFunctionAttributes(LLVMValueRef Fn,"}]}