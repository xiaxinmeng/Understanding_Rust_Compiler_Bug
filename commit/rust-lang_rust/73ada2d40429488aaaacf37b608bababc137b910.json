{"sha": "73ada2d40429488aaaacf37b608bababc137b910", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYWRhMmQ0MDQyOTQ4OGFhYWFjZjM3YjYwOGJhYmFiYzEzN2I5MTA=", "commit": {"author": {"name": "Laurence Tratt", "email": "laurie@tratt.net", "date": "2020-08-12T14:07:38Z"}, "committer": {"name": "Laurence Tratt", "email": "laurie@tratt.net", "date": "2020-08-12T14:07:38Z"}, "message": "Explicitly document the size guarantees that Option makes.\n\nTriggered by a discussion on wg-unsafe-code-guidelines about which layouts of\n`Option<T>` one can guarantee are optimised to a single pointer.", "tree": {"sha": "e5a8643c4fae55f144eab0c1a6374fa1ca090c18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5a8643c4fae55f144eab0c1a6374fa1ca090c18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73ada2d40429488aaaacf37b608bababc137b910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73ada2d40429488aaaacf37b608bababc137b910", "html_url": "https://github.com/rust-lang/rust/commit/73ada2d40429488aaaacf37b608bababc137b910", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73ada2d40429488aaaacf37b608bababc137b910/comments", "author": {"login": "ltratt", "id": 20318, "node_id": "MDQ6VXNlcjIwMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/20318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltratt", "html_url": "https://github.com/ltratt", "followers_url": "https://api.github.com/users/ltratt/followers", "following_url": "https://api.github.com/users/ltratt/following{/other_user}", "gists_url": "https://api.github.com/users/ltratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltratt/subscriptions", "organizations_url": "https://api.github.com/users/ltratt/orgs", "repos_url": "https://api.github.com/users/ltratt/repos", "events_url": "https://api.github.com/users/ltratt/events{/privacy}", "received_events_url": "https://api.github.com/users/ltratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ltratt", "id": 20318, "node_id": "MDQ6VXNlcjIwMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/20318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltratt", "html_url": "https://github.com/ltratt", "followers_url": "https://api.github.com/users/ltratt/followers", "following_url": "https://api.github.com/users/ltratt/following{/other_user}", "gists_url": "https://api.github.com/users/ltratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltratt/subscriptions", "organizations_url": "https://api.github.com/users/ltratt/orgs", "repos_url": "https://api.github.com/users/ltratt/repos", "events_url": "https://api.github.com/users/ltratt/events{/privacy}", "received_events_url": "https://api.github.com/users/ltratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5989bf48724031b72326a5b731a15fca101339e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5989bf48724031b72326a5b731a15fca101339e2", "html_url": "https://github.com/rust-lang/rust/commit/5989bf48724031b72326a5b731a15fca101339e2"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "745b0f1ae8d47037d32344d7bd169dee8b9cf76a", "filename": "library/core/src/option.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/73ada2d40429488aaaacf37b608bababc137b910/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73ada2d40429488aaaacf37b608bababc137b910/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=73ada2d40429488aaaacf37b608bababc137b910", "patch": "@@ -70,10 +70,18 @@\n //! }\n //! ```\n //!\n-//! This usage of [`Option`] to create safe nullable pointers is so\n-//! common that Rust does special optimizations to make the\n-//! representation of [`Option`]`<`[`Box<T>`]`>` a single pointer. Optional pointers\n-//! in Rust are stored as efficiently as any other pointer type.\n+//! # Representation\n+//!\n+//! Rust guarantees to optimise the following inner types such that an [`Option`] which contains\n+//! them has the same size as a pointer:\n+//!\n+//! * `&T`\n+//! * `&mut T`\n+//! * `extern \"C\" fn`\n+//! * [`num::NonZero*`]\n+//! * [`ptr::NonNull<T>`]\n+//! * `#[repr(transparent)]` struct around one of the types in this list.\n+//! * [`Box<T>`]\n //!\n //! # Examples\n //!"}]}