{"sha": "9415adcd8aacfecb9df0f3b2b6b8acdc43503dda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MTVhZGNkOGFhY2ZlY2I5ZGYwZjNiMmI2YjhhY2RjNDM1MDNkZGE=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-04-20T21:06:10Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-05-14T17:38:27Z"}, "message": "deprecate #![doc(no_default_passes, passes, plugins)]", "tree": {"sha": "ea48a7974a0228efb639ba48dc88b99ecdd41117", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea48a7974a0228efb639ba48dc88b99ecdd41117"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9415adcd8aacfecb9df0f3b2b6b8acdc43503dda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9415adcd8aacfecb9df0f3b2b6b8acdc43503dda", "html_url": "https://github.com/rust-lang/rust/commit/9415adcd8aacfecb9df0f3b2b6b8acdc43503dda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9415adcd8aacfecb9df0f3b2b6b8acdc43503dda/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3fd12ff4e88321904e4e28949945c23f399da57", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3fd12ff4e88321904e4e28949945c23f399da57", "html_url": "https://github.com/rust-lang/rust/commit/c3fd12ff4e88321904e4e28949945c23f399da57"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "ad810a917282e96857b5068a39f9ce037ad91dfa", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/9415adcd8aacfecb9df0f3b2b6b8acdc43503dda/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9415adcd8aacfecb9df0f3b2b6b8acdc43503dda/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=9415adcd8aacfecb9df0f3b2b6b8acdc43503dda", "patch": "@@ -646,25 +646,55 @@ where R: 'static + Send,\n \n         krate.version = crate_version;\n \n+        let diag = core::new_handler(error_format, None);\n+\n+        fn report_deprecated_attr(name: &str, diag: &errors::Handler) {\n+            let mut msg = diag.struct_warn(&format!(\"WARNING: the `#![doc({})]` attribute is \\\n+                                                     considered deprecated\", name));\n+            msg.warn(\"please see https://github.com/rust-lang/rust/issues/44136\");\n+\n+            if name == \"no_default_passes\" {\n+                msg.help(\"you may want to use `#![doc(document_private_items)]`\");\n+            }\n+\n+            msg.emit();\n+        }\n+\n         // Process all of the crate attributes, extracting plugin metadata along\n         // with the passes which we are supposed to run.\n         for attr in krate.module.as_ref().unwrap().attrs.lists(\"doc\") {\n             let name = attr.name().map(|s| s.as_str());\n             let name = name.as_ref().map(|s| &s[..]);\n             if attr.is_word() {\n                 if name == Some(\"no_default_passes\") {\n+                    report_deprecated_attr(\"no_default_passes\", &diag);\n                     default_passes = false;\n                 }\n             } else if let Some(value) = attr.value_str() {\n                 let sink = match name {\n-                    Some(\"passes\") => &mut passes,\n-                    Some(\"plugins\") => &mut plugins,\n+                    Some(\"passes\") => {\n+                        report_deprecated_attr(\"passes = \\\"...\\\"\", &diag);\n+                        &mut passes\n+                    },\n+                    Some(\"plugins\") => {\n+                        report_deprecated_attr(\"plugins = \\\"...\\\"\", &diag);\n+                        &mut plugins\n+                    },\n                     _ => continue,\n                 };\n                 for p in value.as_str().split_whitespace() {\n                     sink.push(p.to_string());\n                 }\n             }\n+\n+            if attr.is_word() && name == Some(\"document_private_items\") {\n+                default_passes = false;\n+\n+                passes = vec![\n+                    String::from(\"collapse-docs\"),\n+                    String::from(\"unindent-comments\"),\n+                ];\n+            }\n         }\n \n         if default_passes {"}]}