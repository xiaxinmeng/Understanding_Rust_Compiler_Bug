{"sha": "8e9ccdf28f91d56113117fd512819363602bdf89", "node_id": "C_kwDOAAsO6NoAKDhlOWNjZGYyOGY5MWQ1NjExMzExN2ZkNTEyODE5MzYzNjAyYmRmODk", "commit": {"author": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-11-14T02:08:12Z"}, "committer": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-12-03T22:51:49Z"}, "message": "add tests for asm's options(may_unwind)", "tree": {"sha": "a75948b40d1ecd62c5d1b79524a287848b985745", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a75948b40d1ecd62c5d1b79524a287848b985745"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e9ccdf28f91d56113117fd512819363602bdf89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e9ccdf28f91d56113117fd512819363602bdf89", "html_url": "https://github.com/rust-lang/rust/commit/8e9ccdf28f91d56113117fd512819363602bdf89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e9ccdf28f91d56113117fd512819363602bdf89/comments", "author": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "686ace3b4119333f7d7868b05be2042fe56484a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/686ace3b4119333f7d7868b05be2042fe56484a7", "html_url": "https://github.com/rust-lang/rust/commit/686ace3b4119333f7d7868b05be2042fe56484a7"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "267eab7d105eac3a447c1c6a182fba2521c71977", "filename": "src/test/codegen/asm-may_unwind.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8e9ccdf28f91d56113117fd512819363602bdf89/src%2Ftest%2Fcodegen%2Fasm-may_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e9ccdf28f91d56113117fd512819363602bdf89/src%2Ftest%2Fcodegen%2Fasm-may_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fasm-may_unwind.rs?ref=8e9ccdf28f91d56113117fd512819363602bdf89", "patch": "@@ -0,0 +1,24 @@\n+// min-llvm-version: 13.0.0\n+// compile-flags: -O\n+\n+#![crate_type = \"rlib\"]\n+#![feature(asm, asm_unwind)]\n+\n+#[no_mangle]\n+pub extern \"C\" fn panicky() {}\n+\n+struct Foo;\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        println!();\n+    }\n+}\n+\n+// CHECK-LABEL: @may_unwind\n+// CHECK: invoke void asm sideeffect alignstack unwind\n+#[no_mangle]\n+pub unsafe fn may_unwind() {\n+    let _m = Foo;\n+    asm!(\"\", options(may_unwind));\n+}"}, {"sha": "8e1ece53a47b62d63d99b28550f6884345a16be6", "filename": "src/test/ui/asm/aarch64/may_unwind.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/8e9ccdf28f91d56113117fd512819363602bdf89/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fmay_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e9ccdf28f91d56113117fd512819363602bdf89/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fmay_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fmay_unwind.rs?ref=8e9ccdf28f91d56113117fd512819363602bdf89", "patch": "@@ -0,0 +1,31 @@\n+// min-llvm-version: 13.0.0\n+// only-aarch64\n+// run-pass\n+// needs-asm-support\n+\n+#![feature(asm, asm_unwind)]\n+\n+use std::panic::{catch_unwind, resume_unwind, AssertUnwindSafe};\n+\n+struct Foo<'a>(&'a mut bool);\n+\n+impl Drop for Foo<'_> {\n+    fn drop(&mut self) {\n+        *self.0 = false;\n+    }\n+}\n+\n+#[no_mangle]\n+extern \"C\" fn panicky() {\n+    resume_unwind(Box::new(()));\n+}\n+\n+fn main() {\n+    let flag = &mut true;\n+    catch_unwind(AssertUnwindSafe(|| {\n+        let _foo = Foo(flag);\n+        unsafe { asm!(\"bl _panicky\", options(may_unwind)) };\n+    }))\n+    .expect_err(\"expected a panic\");\n+    assert_eq!(*flag, false);\n+}"}, {"sha": "436e8b9d95a892d03d497e670806952c982360ee", "filename": "src/test/ui/asm/may_unwind.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8e9ccdf28f91d56113117fd512819363602bdf89/src%2Ftest%2Fui%2Fasm%2Fmay_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e9ccdf28f91d56113117fd512819363602bdf89/src%2Ftest%2Fui%2Fasm%2Fmay_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fmay_unwind.rs?ref=8e9ccdf28f91d56113117fd512819363602bdf89", "patch": "@@ -0,0 +1,9 @@\n+// min-llvm-version: 13.0.0\n+// run-pass\n+// needs-asm-support\n+\n+#![feature(asm, asm_unwind)]\n+\n+fn main() {\n+    unsafe { asm!(\"\", options(may_unwind)) };\n+}"}, {"sha": "cec597ea24ead130e5a4da1c938b84193ec4910a", "filename": "src/test/ui/asm/x86_64/may_unwind.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/8e9ccdf28f91d56113117fd512819363602bdf89/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Fmay_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e9ccdf28f91d56113117fd512819363602bdf89/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Fmay_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Fmay_unwind.rs?ref=8e9ccdf28f91d56113117fd512819363602bdf89", "patch": "@@ -0,0 +1,31 @@\n+// min-llvm-version: 13.0.0\n+// only-x86_64\n+// run-pass\n+// needs-asm-support\n+\n+#![feature(asm, asm_unwind)]\n+\n+use std::panic::{catch_unwind, resume_unwind, AssertUnwindSafe};\n+\n+struct Foo<'a>(&'a mut bool);\n+\n+impl Drop for Foo<'_> {\n+    fn drop(&mut self) {\n+        *self.0 = false;\n+    }\n+}\n+\n+#[no_mangle]\n+extern \"C\" fn panicky() {\n+    resume_unwind(Box::new(()));\n+}\n+\n+fn main() {\n+    let flag = &mut true;\n+    catch_unwind(AssertUnwindSafe(|| {\n+        let _foo = Foo(flag);\n+        unsafe { asm!(\"call panicky\", options(may_unwind)) };\n+    }))\n+    .expect_err(\"expected a panic\");\n+    assert_eq!(*flag, false);\n+}"}]}