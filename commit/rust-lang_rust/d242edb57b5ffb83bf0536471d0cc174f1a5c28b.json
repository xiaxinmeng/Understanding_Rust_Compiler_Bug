{"sha": "d242edb57b5ffb83bf0536471d0cc174f1a5c28b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNDJlZGI1N2I1ZmZiODNiZjA1MzY0NzFkMGNjMTc0ZjFhNWMyOGI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-01-20T03:07:29Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-01-20T06:53:22Z"}, "message": "Handle predicates that recurse in a check() expression\n\ntypestate was using the enclosing function ID for the \"this function\nreturns\" constraint, which meant confusion and panic in the case\nwhere a predicate p includes \"check p()\". Fixed it to use a fresh\nID.\n\nCloses #933", "tree": {"sha": "50cbc8205857eea3f666855821182b6991b0b273", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50cbc8205857eea3f666855821182b6991b0b273"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d242edb57b5ffb83bf0536471d0cc174f1a5c28b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d242edb57b5ffb83bf0536471d0cc174f1a5c28b", "html_url": "https://github.com/rust-lang/rust/commit/d242edb57b5ffb83bf0536471d0cc174f1a5c28b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d242edb57b5ffb83bf0536471d0cc174f1a5c28b/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9d517296aaf8660ef279c83a82d5b0ce0d5b535", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9d517296aaf8660ef279c83a82d5b0ce0d5b535", "html_url": "https://github.com/rust-lang/rust/commit/b9d517296aaf8660ef279c83a82d5b0ce0d5b535"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "30a93e4db368d3993dd8c77947f5a185fe41bc8f", "filename": "src/comp/middle/tstate/collect_locals.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d242edb57b5ffb83bf0536471d0cc174f1a5c28b/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d242edb57b5ffb83bf0536471d0cc174f1a5c28b/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs?ref=d242edb57b5ffb83bf0536471d0cc174f1a5c28b", "patch": "@@ -136,24 +136,25 @@ fn mk_fn_info(ccx: crate_ctxt,\n     /* add the special i_diverge and i_return constraints\n     (see the type definition for auxiliary::fn_info for an explanation) */\n \n-    // use the name of the function for the \"return\" constraint\n+    // use the function name for the \"returns\" constraint\"\n+    let returns_id = ccx.tcx.sess.next_node_id();\n+    let returns_constr = ninit(returns_id, name);\n     next =\n-        add_constraint(cx.tcx, respan(f_sp, ninit(id, name)), next, res_map);\n+        add_constraint(cx.tcx, respan(f_sp, returns_constr), next, res_map);\n     // and the name of the function, with a '!' appended to it, for the\n     // \"diverges\" constraint\n     let diverges_id = ccx.tcx.sess.next_node_id();\n-    let diverges_name = name + \"!\";\n-    next = add_constraint(cx.tcx, respan(f_sp, ninit(diverges_id,\n-                                                     diverges_name)),\n-                          next, res_map);\n+    let diverges_constr = ninit(diverges_id, name + \"!\");\n+    next = add_constraint(cx.tcx, respan(f_sp, diverges_constr), next,\n+                          res_map);\n \n     let v: @mutable [node_id] = @mutable [];\n     let rslt =\n         {constrs: res_map,\n          num_constraints: next,\n          cf: f_decl.cf,\n-         i_return: ninit(id, name),\n-         i_diverge: ninit(diverges_id, diverges_name),\n+         i_return: returns_constr,\n+         i_diverge: diverges_constr,\n          used_vars: v};\n     ccx.fm.insert(id, rslt);\n     #debug(\"%s has %u constraints\", name, num_constraints(rslt));"}, {"sha": "0c1fbbf8e581f7ea5ab10247d097fc28c5c78025", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d242edb57b5ffb83bf0536471d0cc174f1a5c28b/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d242edb57b5ffb83bf0536471d0cc174f1a5c28b/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=d242edb57b5ffb83bf0536471d0cc174f1a5c28b", "patch": "@@ -585,7 +585,7 @@ fn find_pre_post_state_expr(fcx: fn_ctxt, pres: prestate, e: @expr) -> bool {\n         woo! */\n         let post = false_postcond(num_constrs);\n         alt fcx.enclosing.cf {\n-          noreturn { kill_poststate_(fcx, ninit(fcx.id, fcx.name), post); }\n+          noreturn { kill_poststate_(fcx, fcx.enclosing.i_return, post); }\n           _ { }\n         }\n         ret set_prestate_ann(fcx.ccx, e.id, pres) |"}, {"sha": "53d94d3150654e6c157af52874c82331267a970f", "filename": "src/test/run-pass/issue-933.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d242edb57b5ffb83bf0536471d0cc174f1a5c28b/src%2Ftest%2Frun-pass%2Fissue-933.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d242edb57b5ffb83bf0536471d0cc174f1a5c28b/src%2Ftest%2Frun-pass%2Fissue-933.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-933.rs?ref=d242edb57b5ffb83bf0536471d0cc174f1a5c28b", "patch": "@@ -0,0 +1,2 @@\n+pure fn c() -> bool { check c(); true }\n+fn main() {}"}]}