{"sha": "7a7b2e352108e17dc4ac834b02ff59e7f81a2c5d", "node_id": "C_kwDOAAsO6NoAKDdhN2IyZTM1MjEwOGUxN2RjNGFjODM0YjAyZmY1OWU3ZjgxYTJjNWQ", "commit": {"author": {"name": "Arpad Borsos", "email": "swatinem@swatinem.de", "date": "2023-02-05T16:32:52Z"}, "committer": {"name": "Arpad Borsos", "email": "swatinem@swatinem.de", "date": "2023-02-07T07:52:15Z"}, "message": "Add test for Future inflating arg size to 3x\n\nThis adds one more test that should track improvements to generator\nlayout, like #62958 and #62575.\n\nIn particular, this test highlights suboptimal layout, as the storage\nfor the argument future is not being reused across its usage as `upvar`,\n`local` and `awaitee` (being polled to completion).", "tree": {"sha": "38b5faf44581a74f169d277c637455a7d0449097", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38b5faf44581a74f169d277c637455a7d0449097"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a7b2e352108e17dc4ac834b02ff59e7f81a2c5d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZNNjbpmzULCa7LeL/HvKd4JLMpgFAmPiAy8ACgkQ/HvKd4JL\nMpisqhAAwz0V3v49hBUTFGXnRa21oFCNnJq1U2Gd9kyymh32ko1yhz0H7oIxkLoV\nPwfjhPyyA1sBTS6uBMCi5u0WNplQVPXqv72vtfaT5G9rtNZRP+NtHZXJHp2Q+z13\nKTkZXvMTnrN4YIupSzgh/R6fFQ9unH1OiiRjdSYr9bAI+TW3SrRAYUkzAtBJNYXe\nGwN/yLVLkzTSRJGtciKjxC9Efaz9yrDHSCrZRzlLyJOLnUuySoUU/ZnbIF0GY8aM\nK+ao0jNHyOoG1X/FGfOibPFZ6JEnscIudxX91NIpx2FYOQec5Wsq0GcbTlns0x3s\nmHdK9hcoLEPVkdPj3EWxs4Op1WNix44tX/Q2iurHOzqQjGNdyQUjQ/cH3ItIEhKd\nvVLGB6F8dLkH0avieZWd/77oPMPzWYaQIPAtZk8223FqZrPBykO4TyFUCrZNWBL6\nu8o/SgjJJ6gR6cHswGPOxs6C4RHKC1Oe6H4Ikmx0n56O5agiAedpettv+Luz02+3\nT1FsEgiICZlilF4oUACN2/eSW7gYtzsOB1eqgPwIjRQCTkGbLsoApYCPFnDZ43Lj\n2aoBFIo6AOdDI0Wkdo4sP/DO58Bm9jFQVJMzLIFGirmZg/B3KD/kqkqBw61zOr/F\ngwHULcOuLKjOe92nkySdTTpyc0AUM94XJpHZ1EbshB3aAHXsNKw=\n=EhIt\n-----END PGP SIGNATURE-----", "payload": "tree 38b5faf44581a74f169d277c637455a7d0449097\nparent dffea43fc1102bdfe16d88ed412c23d4f0f08d9d\nauthor Arpad Borsos <swatinem@swatinem.de> 1675614772 +0100\ncommitter Arpad Borsos <swatinem@swatinem.de> 1675756335 +0100\n\nAdd test for Future inflating arg size to 3x\n\nThis adds one more test that should track improvements to generator\nlayout, like #62958 and #62575.\n\nIn particular, this test highlights suboptimal layout, as the storage\nfor the argument future is not being reused across its usage as `upvar`,\n`local` and `awaitee` (being polled to completion).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a7b2e352108e17dc4ac834b02ff59e7f81a2c5d", "html_url": "https://github.com/rust-lang/rust/commit/7a7b2e352108e17dc4ac834b02ff59e7f81a2c5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a7b2e352108e17dc4ac834b02ff59e7f81a2c5d/comments", "author": {"login": "Swatinem", "id": 580492, "node_id": "MDQ6VXNlcjU4MDQ5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/580492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swatinem", "html_url": "https://github.com/Swatinem", "followers_url": "https://api.github.com/users/Swatinem/followers", "following_url": "https://api.github.com/users/Swatinem/following{/other_user}", "gists_url": "https://api.github.com/users/Swatinem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swatinem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swatinem/subscriptions", "organizations_url": "https://api.github.com/users/Swatinem/orgs", "repos_url": "https://api.github.com/users/Swatinem/repos", "events_url": "https://api.github.com/users/Swatinem/events{/privacy}", "received_events_url": "https://api.github.com/users/Swatinem/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Swatinem", "id": 580492, "node_id": "MDQ6VXNlcjU4MDQ5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/580492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swatinem", "html_url": "https://github.com/Swatinem", "followers_url": "https://api.github.com/users/Swatinem/followers", "following_url": "https://api.github.com/users/Swatinem/following{/other_user}", "gists_url": "https://api.github.com/users/Swatinem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swatinem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swatinem/subscriptions", "organizations_url": "https://api.github.com/users/Swatinem/orgs", "repos_url": "https://api.github.com/users/Swatinem/repos", "events_url": "https://api.github.com/users/Swatinem/events{/privacy}", "received_events_url": "https://api.github.com/users/Swatinem/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dffea43fc1102bdfe16d88ed412c23d4f0f08d9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/dffea43fc1102bdfe16d88ed412c23d4f0f08d9d", "html_url": "https://github.com/rust-lang/rust/commit/dffea43fc1102bdfe16d88ed412c23d4f0f08d9d"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "1816d842d6c4179c0d57bb4513db215ea498b080", "filename": "tests/ui/async-await/future-sizes/async-awaiting-fut.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7a7b2e352108e17dc4ac834b02ff59e7f81a2c5d/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Fasync-awaiting-fut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a7b2e352108e17dc4ac834b02ff59e7f81a2c5d/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Fasync-awaiting-fut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Fasync-awaiting-fut.rs?ref=7a7b2e352108e17dc4ac834b02ff59e7f81a2c5d", "patch": "@@ -0,0 +1,24 @@\n+// compile-flags: -Z print-type-sizes --crate-type lib\n+// edition:2021\n+// build-pass\n+// ignore-pass\n+\n+async fn wait() {}\n+\n+async fn big_fut(arg: [u8; 1024]) {}\n+\n+async fn calls_fut(fut: impl std::future::Future<Output = ()>) {\n+    loop {\n+        wait().await;\n+        if true {\n+            return fut.await;\n+        } else {\n+            wait().await;\n+        }\n+    }\n+}\n+\n+pub async fn test() {\n+    let fut = big_fut([0u8; 1024]);\n+    calls_fut(fut).await;\n+}"}, {"sha": "eaf3e4b61e304a9241c510b538dd9a5dc794642a", "filename": "tests/ui/async-await/future-sizes/async-awaiting-fut.stdout", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/7a7b2e352108e17dc4ac834b02ff59e7f81a2c5d/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Fasync-awaiting-fut.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/7a7b2e352108e17dc4ac834b02ff59e7f81a2c5d/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Fasync-awaiting-fut.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Fasync-awaiting-fut.stdout?ref=7a7b2e352108e17dc4ac834b02ff59e7f81a2c5d", "patch": "@@ -0,0 +1,72 @@\n+print-type-size type: `[async fn body@$DIR/async-awaiting-fut.rs:21:21: 24:2]`: 3078 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Unresumed`: 0 bytes\n+print-type-size     variant `Suspend0`: 3077 bytes\n+print-type-size         local `.__awaitee`: 3077 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Returned`: 0 bytes\n+print-type-size     variant `Panicked`: 0 bytes\n+print-type-size type: `[async fn body@$DIR/async-awaiting-fut.rs:10:64: 19:2]`: 3077 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Unresumed`: 2051 bytes\n+print-type-size         padding: 1026 bytes\n+print-type-size         upvar `.fut`: 1025 bytes, alignment: 1 bytes\n+print-type-size     variant `Suspend0`: 2052 bytes\n+print-type-size         local `.fut`: 1025 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         local `..generator_field4`: 1 bytes\n+print-type-size         padding: 1 bytes\n+print-type-size         upvar `.fut`: 1025 bytes, alignment: 1 bytes\n+print-type-size         local `.__awaitee`: 1 bytes\n+print-type-size     variant `Suspend1`: 3076 bytes\n+print-type-size         padding: 1024 bytes\n+print-type-size         local `..generator_field4`: 1 bytes, alignment: 1 bytes\n+print-type-size         padding: 1 bytes\n+print-type-size         upvar `.fut`: 1025 bytes, alignment: 1 bytes\n+print-type-size         local `.__awaitee`: 1025 bytes\n+print-type-size     variant `Suspend2`: 2052 bytes\n+print-type-size         local `.fut`: 1025 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         local `..generator_field4`: 1 bytes\n+print-type-size         padding: 1 bytes\n+print-type-size         upvar `.fut`: 1025 bytes, alignment: 1 bytes\n+print-type-size         local `.__awaitee`: 1 bytes\n+print-type-size     variant `Returned`: 2051 bytes\n+print-type-size         padding: 1026 bytes\n+print-type-size         upvar `.fut`: 1025 bytes, alignment: 1 bytes\n+print-type-size     variant `Panicked`: 2051 bytes\n+print-type-size         padding: 1026 bytes\n+print-type-size         upvar `.fut`: 1025 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/async-awaiting-fut.rs:10:64: 19:2]>`: 3077 bytes, alignment: 1 bytes\n+print-type-size     field `.value`: 3077 bytes\n+print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/async-awaiting-fut.rs:10:64: 19:2]>`: 3077 bytes, alignment: 1 bytes\n+print-type-size     variant `MaybeUninit`: 3077 bytes\n+print-type-size         field `.uninit`: 0 bytes\n+print-type-size         field `.value`: 3077 bytes\n+print-type-size type: `[async fn body@$DIR/async-awaiting-fut.rs:8:35: 8:37]`: 1025 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Unresumed`: 1024 bytes\n+print-type-size         upvar `.arg`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Returned`: 1024 bytes\n+print-type-size         upvar `.arg`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Panicked`: 1024 bytes\n+print-type-size         upvar `.arg`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/async-awaiting-fut.rs:8:35: 8:37]>`: 1025 bytes, alignment: 1 bytes\n+print-type-size     field `.value`: 1025 bytes\n+print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/async-awaiting-fut.rs:8:35: 8:37]>`: 1025 bytes, alignment: 1 bytes\n+print-type-size     variant `MaybeUninit`: 1025 bytes\n+print-type-size         field `.uninit`: 0 bytes\n+print-type-size         field `.value`: 1025 bytes\n+print-type-size type: `[async fn body@$DIR/async-awaiting-fut.rs:6:17: 6:19]`: 1 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Unresumed`: 0 bytes\n+print-type-size     variant `Returned`: 0 bytes\n+print-type-size     variant `Panicked`: 0 bytes\n+print-type-size type: `std::mem::ManuallyDrop<bool>`: 1 bytes, alignment: 1 bytes\n+print-type-size     field `.value`: 1 bytes\n+print-type-size type: `std::mem::MaybeUninit<bool>`: 1 bytes, alignment: 1 bytes\n+print-type-size     variant `MaybeUninit`: 1 bytes\n+print-type-size         field `.uninit`: 0 bytes\n+print-type-size         field `.value`: 1 bytes\n+print-type-size type: `std::task::Poll<()>`: 1 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Ready`: 0 bytes\n+print-type-size         field `.0`: 0 bytes\n+print-type-size     variant `Pending`: 0 bytes"}]}