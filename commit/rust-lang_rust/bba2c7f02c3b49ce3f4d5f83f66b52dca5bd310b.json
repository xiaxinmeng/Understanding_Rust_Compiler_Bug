{"sha": "bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiYTJjN2YwMmMzYjQ5Y2UzZjRkNWY4M2Y2NmI1MmRjYTViZDMxMGI=", "commit": {"author": {"name": "xd009642", "email": "danielmckenna93@gmail.com", "date": "2019-07-27T21:53:26Z"}, "committer": {"name": "xd009642", "email": "danielmckenna93@gmail.com", "date": "2019-07-27T21:53:26Z"}, "message": "Updated tests.\n\nRemoved unnecessary type repetition in float test and regenerated stderr\nRegenerated type_repetition stderr", "tree": {"sha": "12f318bd5a43b90c95ff44718808868b6a4dd2b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12f318bd5a43b90c95ff44718808868b6a4dd2b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b", "html_url": "https://github.com/rust-lang/rust/commit/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b/comments", "author": {"login": "xd009642", "id": 3472518, "node_id": "MDQ6VXNlcjM0NzI1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3472518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xd009642", "html_url": "https://github.com/xd009642", "followers_url": "https://api.github.com/users/xd009642/followers", "following_url": "https://api.github.com/users/xd009642/following{/other_user}", "gists_url": "https://api.github.com/users/xd009642/gists{/gist_id}", "starred_url": "https://api.github.com/users/xd009642/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xd009642/subscriptions", "organizations_url": "https://api.github.com/users/xd009642/orgs", "repos_url": "https://api.github.com/users/xd009642/repos", "events_url": "https://api.github.com/users/xd009642/events{/privacy}", "received_events_url": "https://api.github.com/users/xd009642/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xd009642", "id": 3472518, "node_id": "MDQ6VXNlcjM0NzI1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3472518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xd009642", "html_url": "https://github.com/xd009642", "followers_url": "https://api.github.com/users/xd009642/followers", "following_url": "https://api.github.com/users/xd009642/following{/other_user}", "gists_url": "https://api.github.com/users/xd009642/gists{/gist_id}", "starred_url": "https://api.github.com/users/xd009642/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xd009642/subscriptions", "organizations_url": "https://api.github.com/users/xd009642/orgs", "repos_url": "https://api.github.com/users/xd009642/repos", "events_url": "https://api.github.com/users/xd009642/events{/privacy}", "received_events_url": "https://api.github.com/users/xd009642/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "925e8207fa8ff6cc4aea7337b6cb3eeb318123d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/925e8207fa8ff6cc4aea7337b6cb3eeb318123d3", "html_url": "https://github.com/rust-lang/rust/commit/925e8207fa8ff6cc4aea7337b6cb3eeb318123d3"}], "stats": {"total": 34, "additions": 12, "deletions": 22}, "files": [{"sha": "207c1bcbbc676da7857dfd211037129e5cd33f90", "filename": "tests/ui/float_cmp.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b/tests%2Fui%2Ffloat_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b/tests%2Fui%2Ffloat_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.rs?ref=bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b", "patch": "@@ -8,8 +8,7 @@ const ONE: f32 = ZERO + 1.0;\n \n fn twice<T>(x: T) -> T\n where\n-    T: Add<T, Output = T>,\n-    T: Copy,\n+    T: Add<T, Output = T> + Copy,\n {\n     x + x\n }"}, {"sha": "116e3e90e6372c41c1437832331d4cdf3a60135e", "filename": "tests/ui/float_cmp.stderr", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b/tests%2Fui%2Ffloat_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b/tests%2Fui%2Ffloat_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.stderr?ref=bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b", "patch": "@@ -1,48 +1,39 @@\n-error: this type has already been used as a bound predicate\n-  --> $DIR/float_cmp.rs:12:5\n-   |\n-LL |     T: Copy,\n-   |     ^^^^^^^\n-   |\n-   = note: `-D clippy::type-repetition-in-bounds` implied by `-D warnings`\n-   = help: consider combining the bounds: `T: Add<T, Output = T>, Copy`\n-\n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:60:5\n+  --> $DIR/float_cmp.rs:59:5\n    |\n LL |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(ONE as f64 - 2.0).abs() > error`\n    |\n    = note: `-D clippy::float-cmp` implied by `-D warnings`\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:60:5\n+  --> $DIR/float_cmp.rs:59:5\n    |\n LL |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:65:5\n+  --> $DIR/float_cmp.rs:64:5\n    |\n LL |     x == 1.0;\n    |     ^^^^^^^^ help: consider comparing them within some error: `(x - 1.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:65:5\n+  --> $DIR/float_cmp.rs:64:5\n    |\n LL |     x == 1.0;\n    |     ^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:68:5\n+  --> $DIR/float_cmp.rs:67:5\n    |\n LL |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(twice(x) - twice(ONE as f64)).abs() > error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:68:5\n+  --> $DIR/float_cmp.rs:67:5\n    |\n LL |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n "}, {"sha": "a72f512b0129a87da9ba8bfd60bbe6fa7782f352", "filename": "tests/ui/type_repetition_in_bounds.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b/tests%2Fui%2Ftype_repetition_in_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b/tests%2Fui%2Ftype_repetition_in_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype_repetition_in_bounds.stderr?ref=bba2c7f02c3b49ce3f4d5f83f66b52dca5bd310b", "patch": "@@ -1,15 +1,15 @@\n error: this type has already been used as a bound predicate\n-  --> $DIR/type_repetition_in_bounds.rs:3:37\n+  --> $DIR/type_repetition_in_bounds.rs:6:5\n    |\n-LL | pub fn foo<T>(_t: T) where T: Copy, T: Clone {\n-   |                                     ^^^^^^^^\n+LL |     T: Clone,\n+   |     ^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/type_repetition_in_bounds.rs:1:8\n    |\n LL | #[deny(clippy::type_repetition_in_bounds)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = help: consider combining the bounds: `T: Copy, Clone`\n+   = help: consider combining the bounds: `T: Copy + Clone`\n \n error: aborting due to previous error\n "}]}