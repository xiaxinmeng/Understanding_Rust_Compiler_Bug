{"sha": "8057faa2d320db0abdfb385ad1827f8902931cef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNTdmYWEyZDMyMGRiMGFiZGZiMzg1YWQxODI3Zjg5MDI5MzFjZWY=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-10-09T16:55:00Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-04T20:23:07Z"}, "message": "std: TrieSet should implement container::{,Mutable}Set", "tree": {"sha": "f17a3fb3384bf7de95a8b9d1fd5598c8f165a64e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f17a3fb3384bf7de95a8b9d1fd5598c8f165a64e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8057faa2d320db0abdfb385ad1827f8902931cef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8057faa2d320db0abdfb385ad1827f8902931cef", "html_url": "https://github.com/rust-lang/rust/commit/8057faa2d320db0abdfb385ad1827f8902931cef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8057faa2d320db0abdfb385ad1827f8902931cef/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c48e53c1e8c1427cbb2e827a9d43bfa36847d65", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c48e53c1e8c1427cbb2e827a9d43bfa36847d65", "html_url": "https://github.com/rust-lang/rust/commit/7c48e53c1e8c1427cbb2e827a9d43bfa36847d65"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "8b83e658386975c433e8892c9f6023b257a82fb1", "filename": "src/libcollections/trie.rs", "status": "modified", "additions": 27, "deletions": 13, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/8057faa2d320db0abdfb385ad1827f8902931cef/src%2Flibcollections%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8057faa2d320db0abdfb385ad1827f8902931cef/src%2Flibcollections%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftrie.rs?ref=8057faa2d320db0abdfb385ad1827f8902931cef", "patch": "@@ -293,32 +293,46 @@ impl Mutable for TrieSet {\n     fn clear(&mut self) { self.map.clear() }\n }\n \n-impl TrieSet {\n-    /// Create an empty TrieSet\n+impl Set<uint> for TrieSet {\n     #[inline]\n-    pub fn new() -> TrieSet {\n-        TrieSet{map: TrieMap::new()}\n+    fn contains(&self, value: &uint) -> bool {\n+        self.map.contains_key(value)\n     }\n \n-    /// Return true if the set contains a value\n     #[inline]\n-    pub fn contains(&self, value: &uint) -> bool {\n-        self.map.contains_key(value)\n+    fn is_disjoint(&self, other: &TrieSet) -> bool {\n+        self.iter().all(|v| !other.contains(&v))\n     }\n \n-    /// Add a value to the set. Return true if the value was not already\n-    /// present in the set.\n     #[inline]\n-    pub fn insert(&mut self, value: uint) -> bool {\n+    fn is_subset(&self, other: &TrieSet) -> bool {\n+        self.iter().all(|v| other.contains(&v))\n+    }\n+\n+    #[inline]\n+    fn is_superset(&self, other: &TrieSet) -> bool {\n+        other.is_subset(self)\n+    }\n+}\n+\n+impl MutableSet<uint> for TrieSet {\n+    #[inline]\n+    fn insert(&mut self, value: uint) -> bool {\n         self.map.insert(value, ())\n     }\n \n-    /// Remove a value from the set. Return true if the value was\n-    /// present in the set.\n     #[inline]\n-    pub fn remove(&mut self, value: &uint) -> bool {\n+    fn remove(&mut self, value: &uint) -> bool {\n         self.map.remove(value)\n     }\n+}\n+\n+impl TrieSet {\n+    /// Create an empty TrieSet\n+    #[inline]\n+    pub fn new() -> TrieSet {\n+        TrieSet{map: TrieMap::new()}\n+    }\n \n     /// Visit all values in reverse order\n     #[inline]"}]}