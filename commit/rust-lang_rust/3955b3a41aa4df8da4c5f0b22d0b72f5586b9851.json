{"sha": "3955b3a41aa4df8da4c5f0b22d0b72f5586b9851", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NTViM2E0MWFhNGRmOGRhNGM1ZjBiMjJkMGI3MmY1NTg2Yjk4NTE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-03-28T21:58:31Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-03-28T21:59:36Z"}, "message": "refactor so that pretty mode tests also run aux-build. Fixes #2060.", "tree": {"sha": "ab06209282e45c386e866d33a66d83c6aaa3fb42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab06209282e45c386e866d33a66d83c6aaa3fb42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3955b3a41aa4df8da4c5f0b22d0b72f5586b9851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3955b3a41aa4df8da4c5f0b22d0b72f5586b9851", "html_url": "https://github.com/rust-lang/rust/commit/3955b3a41aa4df8da4c5f0b22d0b72f5586b9851", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3955b3a41aa4df8da4c5f0b22d0b72f5586b9851/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18a97d71f95ad5b155537fff7b3a24758b08429e", "url": "https://api.github.com/repos/rust-lang/rust/commits/18a97d71f95ad5b155537fff7b3a24758b08429e", "html_url": "https://github.com/rust-lang/rust/commit/18a97d71f95ad5b155537fff7b3a24758b08429e"}], "stats": {"total": 41, "additions": 27, "deletions": 14}, "files": [{"sha": "c139b39bc14139d640b044b0f1b853e13e742fad", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/3955b3a41aa4df8da4c5f0b22d0b72f5586b9851/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3955b3a41aa4df8da4c5f0b22d0b72f5586b9851/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=3955b3a41aa4df8da4c5f0b22d0b72f5586b9851", "patch": "@@ -130,7 +130,7 @@ fn run_pretty_test(config: config, props: test_props, testfile: str) {\n     compare_source(expected, actual);\n \n     // Finally, let's make sure it actually appears to remain valid code\n-    let procres = typecheck_source(config, testfile, actual);\n+    let procres = typecheck_source(config, props, testfile, actual);\n \n     if procres.status != 0 {\n         fatal_procres(\"pretty-printed source does not typecheck\", procres);\n@@ -169,9 +169,10 @@ actual:\\n\\\n         }\n     }\n \n-    fn typecheck_source(config: config, testfile: str, src: str) -> procres {\n-        compose_and_run(config, testfile, make_typecheck_args,\n-                        config.compile_lib_path, option::some(src))\n+    fn typecheck_source(config: config, props: test_props,\n+                        testfile: str, src: str) -> procres {\n+        compose_and_run_compiler(\n+            config, props, testfile, make_typecheck_args, option::some(src))\n     }\n \n     fn make_typecheck_args(config: config, _testfile: str) -> procargs {\n@@ -285,6 +286,25 @@ type procres = {status: int, stdout: str, stderr: str, cmdline: str};\n \n fn compile_test(config: config, props: test_props,\n                 testfile: str) -> procres {\n+    compose_and_run_compiler(config, props, testfile,\n+                             make_compile_args(_, props, [], make_exe_name, _),\n+                             none)\n+}\n+\n+fn exec_compiled_test(config: config, props: test_props,\n+                      testfile: str) -> procres {\n+    compose_and_run(config, testfile,\n+                             bind make_run_args(_, props, _),\n+                             config.run_lib_path, option::none)\n+}\n+\n+fn compose_and_run_compiler(\n+    config: config,\n+    props: test_props,\n+    testfile: str,\n+    mk_args: fn(config: config, _testfile: str) -> procargs,\n+    input: option<str>) -> procres {\n+\n     vec::iter(props.aux_builds) {|rel_ab|\n         let abs_ab = path::connect(config.aux_base, rel_ab);\n         let auxres = compose_and_run(config, abs_ab,\n@@ -298,19 +318,12 @@ fn compile_test(config: config, props: test_props,\n         }\n     }\n \n-    compose_and_run(config, testfile,\n-                    make_compile_args(_, props, [], make_exe_name, _),\n-                    config.compile_lib_path, option::none)\n-}\n-\n-fn exec_compiled_test(config: config, props: test_props,\n-                      testfile: str) -> procres {\n-    compose_and_run(config, testfile, bind make_run_args(_, props, _),\n-                    config.run_lib_path, option::none)\n+    compose_and_run(config, testfile, mk_args,\n+                    config.compile_lib_path, input)\n }\n \n fn compose_and_run(config: config, testfile: str,\n-                   make_args: fn@(config, str) -> procargs, lib_path: str,\n+                   make_args: fn(config, str) -> procargs, lib_path: str,\n                    input: option<str>) -> procres {\n     let procargs = make_args(config, testfile);\n     ret program_output(config, testfile, lib_path,"}]}