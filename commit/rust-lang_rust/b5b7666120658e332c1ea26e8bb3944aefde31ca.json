{"sha": "b5b7666120658e332c1ea26e8bb3944aefde31ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1Yjc2NjYxMjA2NThlMzMyYzFlYTI2ZThiYjM5NDRhZWZkZTMxY2E=", "commit": {"author": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2017-10-01T18:55:58Z"}, "committer": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2017-10-08T14:29:32Z"}, "message": "Don't encourage people to ignore threading errors in the docs", "tree": {"sha": "fbfb1ee159a70973dde6b151f72ba1429b54b334", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbfb1ee159a70973dde6b151f72ba1429b54b334"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5b7666120658e332c1ea26e8bb3944aefde31ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5b7666120658e332c1ea26e8bb3944aefde31ca", "html_url": "https://github.com/rust-lang/rust/commit/b5b7666120658e332c1ea26e8bb3944aefde31ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5b7666120658e332c1ea26e8bb3944aefde31ca/comments", "author": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff8e264950b070578c8c8187241f4ca55ebf28fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff8e264950b070578c8c8187241f4ca55ebf28fe", "html_url": "https://github.com/rust-lang/rust/commit/ff8e264950b070578c8c8187241f4ca55ebf28fe"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "07bbddc62b9f9f5e07cad2d1e8c158878cfc8a71", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b5b7666120658e332c1ea26e8bb3944aefde31ca/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5b7666120658e332c1ea26e8bb3944aefde31ca/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=b5b7666120658e332c1ea26e8bb3944aefde31ca", "patch": "@@ -485,15 +485,17 @@ impl Builder {\n /// let (tx, rx) = channel();\n ///\n /// let sender = thread::spawn(move || {\n-///     let _ = tx.send(\"Hello, thread\".to_owned());\n+///     tx.send(\"Hello, thread\".to_owned())\n+///         .expect(\"Unable to send on channel\");\n /// });\n ///\n /// let receiver = thread::spawn(move || {\n-///     println!(\"{}\", rx.recv().unwrap());\n+///     let value = rx.recv().expect(\"Unable to receive from channel\");\n+///     println!(\"{}\", value);\n /// });\n ///\n-/// let _ = sender.join();\n-/// let _ = receiver.join();\n+/// sender.join().expect(\"The sender thread has panicked\");\n+/// receiver.join().expect(\"The receiver thread has panicked\");\n /// ```\n ///\n /// A thread can also return a value through its [`JoinHandle`], you can use\n@@ -1192,7 +1194,7 @@ impl<T> JoinInner<T> {\n ///     });\n /// });\n ///\n-/// let _ = original_thread.join();\n+/// original_thread.join().expect(\"The thread being joined has panicked\");\n /// println!(\"Original thread is joined.\");\n ///\n /// // We make sure that the new thread has time to run, before the main"}]}