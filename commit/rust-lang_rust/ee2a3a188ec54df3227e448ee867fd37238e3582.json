{"sha": "ee2a3a188ec54df3227e448ee867fd37238e3582", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMmEzYTE4OGVjNTRkZjMyMjdlNDQ4ZWU4NjdmZDM3MjM4ZTM1ODI=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-05-01T09:11:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-01T09:11:45Z"}, "message": "Merge pull request #367 from bjorn3/rustup2\n\nRustup to rustc 1.27.0-nightly (79252ff4e 2018-04-29)", "tree": {"sha": "374d3231140face8f9d1f07dd89e106b7974295c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/374d3231140face8f9d1f07dd89e106b7974295c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee2a3a188ec54df3227e448ee867fd37238e3582", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa6C9RCRBK7hj4Ov3rIwAAdHIIAJcClwfPvkplf2UwM5JXHiGO\n5H2FRHOTcsX0/q7xgyuSI1wCn/pPRE0mDBoHOUcsumCW1fmv2kJ2FBPkK1W6+Rxd\n/sNCmmyI0nXJGxIx6WfoT81QuEhG+iILz+Qs9VWAlMaDHE0MVbnBoZBPol1QpxRj\nfswWBxOr88mjcJBqirKpEPXqXaDXrxOtarpgKOyGpxkngaw0KN/Q1RBaGvHKOCQf\nakE9PpX9O9TGiHgJ7n6PU1xbfIo9wsZUMWBDHXD9uhre44JQ2ctwcNHIbkqXxW0h\n2fgMGdMA2iJh3SYddWQbEBd7Q5xzhsGLmOdW9tfZiMZ4RbLRFZDJ6Vp1LAp0JPk=\n=nTnd\n-----END PGP SIGNATURE-----\n", "payload": "tree 374d3231140face8f9d1f07dd89e106b7974295c\nparent f48fed70d4447445b586a35c4ae88683542ffc72\nparent ba1c88a3c15929692af82798f055885e972af417\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1525165905 +0200\ncommitter GitHub <noreply@github.com> 1525165905 +0200\n\nMerge pull request #367 from bjorn3/rustup2\n\nRustup to rustc 1.27.0-nightly (79252ff4e 2018-04-29)"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee2a3a188ec54df3227e448ee867fd37238e3582", "html_url": "https://github.com/rust-lang/rust/commit/ee2a3a188ec54df3227e448ee867fd37238e3582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee2a3a188ec54df3227e448ee867fd37238e3582/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f48fed70d4447445b586a35c4ae88683542ffc72", "url": "https://api.github.com/repos/rust-lang/rust/commits/f48fed70d4447445b586a35c4ae88683542ffc72", "html_url": "https://github.com/rust-lang/rust/commit/f48fed70d4447445b586a35c4ae88683542ffc72"}, {"sha": "ba1c88a3c15929692af82798f055885e972af417", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1c88a3c15929692af82798f055885e972af417", "html_url": "https://github.com/rust-lang/rust/commit/ba1c88a3c15929692af82798f055885e972af417"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "15b67cca93976ba44a026cd7d8e66353dabe3b0e", "filename": "miri/fn_call.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee2a3a188ec54df3227e448ee867fd37238e3582/miri%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee2a3a188ec54df3227e448ee867fd37238e3582/miri%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Ffn_call.rs?ref=ee2a3a188ec54df3227e448ee867fd37238e3582", "patch": "@@ -2,9 +2,9 @@ use rustc::ty::{self, Ty};\n use rustc::ty::layout::{self, Align, LayoutOf};\n use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc::mir;\n+use rustc_target::spec::abi::Abi;\n use rustc_data_structures::indexed_vec::Idx;\n use syntax::attr;\n-use syntax::abi::Abi;\n use syntax::codemap::Span;\n \n use std::mem;\n@@ -177,7 +177,7 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n         let attrs = self.tcx.get_attrs(def_id);\n         let link_name = match attr::first_attr_value_str_by_name(&attrs, \"link_name\") {\n             Some(name) => name.as_str(),\n-            None => self.tcx.item_name(def_id),\n+            None => self.tcx.item_name(def_id).as_str(),\n         };\n \n         match &link_name[..] {"}, {"sha": "9f4950e8c9fb788918dff0cc03dc8f7f9e4bce04", "filename": "miri/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee2a3a188ec54df3227e448ee867fd37238e3582/miri%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee2a3a188ec54df3227e448ee867fd37238e3582/miri%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fintrinsic.rs?ref=ee2a3a188ec54df3227e448ee867fd37238e3582", "patch": "@@ -29,7 +29,7 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n     ) -> EvalResult<'tcx> {\n         let substs = instance.substs;\n \n-        let intrinsic_name = &self.tcx.item_name(instance.def_id())[..];\n+        let intrinsic_name = &self.tcx.item_name(instance.def_id()).as_str()[..];\n         match intrinsic_name {\n             \"align_offset\" => {\n                 // FIXME: return a real value in case the target allocation has an"}, {"sha": "73437d713d01b8ed72ea10b01e76747279a947b7", "filename": "miri/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ee2a3a188ec54df3227e448ee867fd37238e3582/miri%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee2a3a188ec54df3227e448ee867fd37238e3582/miri%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Flib.rs?ref=ee2a3a188ec54df3227e448ee867fd37238e3582", "patch": "@@ -11,6 +11,7 @@ extern crate log;\n #[macro_use]\n extern crate rustc;\n extern crate rustc_mir;\n+extern crate rustc_target;\n extern crate rustc_data_structures;\n extern crate syntax;\n extern crate regex;"}, {"sha": "51b40772139974307921f29a2518240446a496ef", "filename": "miri/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee2a3a188ec54df3227e448ee867fd37238e3582/miri%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee2a3a188ec54df3227e448ee867fd37238e3582/miri%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fvalidation.rs?ref=ee2a3a188ec54df3227e448ee867fd37238e3582", "patch": "@@ -3,7 +3,7 @@ use rustc::hir::Mutability::*;\n use rustc::mir::{self, ValidationOp, ValidationOperand};\n use rustc::mir::interpret::GlobalId;\n use rustc::ty::{self, Ty, TypeFoldable, TyCtxt, Instance};\n-use rustc::ty::layout::LayoutOf;\n+use rustc::ty::layout::{LayoutOf, PrimitiveExt};\n use rustc::ty::subst::{Substs, Subst};\n use rustc::traits::{self, TraitEngine};\n use rustc::infer::InferCtxt;"}]}