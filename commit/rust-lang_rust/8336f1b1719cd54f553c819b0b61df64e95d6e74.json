{"sha": "8336f1b1719cd54f553c819b0b61df64e95d6e74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMzZmMWIxNzE5Y2Q1NGY1NTNjODE5YjBiNjFkZjY0ZTk1ZDZlNzQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-18T21:45:16Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-18T21:45:16Z"}, "message": "Rollup merge of #52418 - estebank:desugaring-type, r=nikomatsakis\n\nDo not use desugared ident when suggesting adding a type\n\nRe #51116.", "tree": {"sha": "2332319f643c9969b2aa9b88aa112822d18402a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2332319f643c9969b2aa9b88aa112822d18402a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8336f1b1719cd54f553c819b0b61df64e95d6e74", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAltPtOwACgkQ/vbIBR0O\nATwNXg//fIdWDO1ncnRDMwN7Z6y+oO/VEz1bxDNQnwDmtWuoSavKNRXyl7nileMk\nP3fCBUot3omc+XJvY/WRujk03yUIL3NXjoID83tCO75eyIWe66abMIdoVC4EPEiN\nzO4HKcYgvn6DJMp4qnPSu1JPNGFuBFAFku+MLOQt3DeZ+y0fBKF40X2VdMFKUReO\ngZ4ZPE+I8seMBvzuZqLH+zjCnTtPjZLu8fRX3UJ9+wo5vN5Fvk8o3M1uOghh2e9Q\n/mhzi3V9nayS/A/QgnL3Mhq4d0A9ViqJ+vfXDL3v4BWmRJQQFSB1O/Mmhp3q09ah\nUGic5qtROvqIXL/cR5aCO7GaQvGj21u/2fKHHyv7InIELntXf8QU9736Fy7SEwdl\n28bebSLv7DPyjn2pZFsoD1P6R4ZemheCEZDGZ0lCmtqTGMWmcxtbUSIdpd4QPIa6\njKJr/DhH9Ed/2KPSNI+4ahxgvPbWH7zv/TT9bb9Jxulw5132ZYfehocWAd7/8LLm\nfS9xdaTniACkNJpzmihtHCaE3k6VF/A292I4FeH0I8O6POUEi19gxdMDzMandU9/\nEL/dbKkBXztYr3ksh67GrMeawoO+gD7MKJ+u/66cB/AxfE/GrtpffHijaXh8GnUk\nD646VpbPtPZYbZIMTek/ieO2p7+WdY7UbRwjMyKovORr68LByOY=\n=JNPj\n-----END PGP SIGNATURE-----", "payload": "tree 2332319f643c9969b2aa9b88aa112822d18402a1\nparent b1c6b76739c8b0565d4ced6f4fa396f5b73bd484\nparent 2c5b60d8f0545a7efd74706724c76c5c115f343e\nauthor kennytm <kennytm@gmail.com> 1531950316 +0800\ncommitter kennytm <kennytm@gmail.com> 1531950316 +0800\n\nRollup merge of #52418 - estebank:desugaring-type, r=nikomatsakis\n\nDo not use desugared ident when suggesting adding a type\n\nRe #51116.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8336f1b1719cd54f553c819b0b61df64e95d6e74", "html_url": "https://github.com/rust-lang/rust/commit/8336f1b1719cd54f553c819b0b61df64e95d6e74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8336f1b1719cd54f553c819b0b61df64e95d6e74/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1c6b76739c8b0565d4ced6f4fa396f5b73bd484", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1c6b76739c8b0565d4ced6f4fa396f5b73bd484", "html_url": "https://github.com/rust-lang/rust/commit/b1c6b76739c8b0565d4ced6f4fa396f5b73bd484"}, {"sha": "2c5b60d8f0545a7efd74706724c76c5c115f343e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c5b60d8f0545a7efd74706724c76c5c115f343e", "html_url": "https://github.com/rust-lang/rust/commit/2c5b60d8f0545a7efd74706724c76c5c115f343e"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "93fb282546bb05de85533dc1dc3c7cec3e06ce23", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=8336f1b1719cd54f553c819b0b61df64e95d6e74", "patch": "@@ -4011,8 +4011,12 @@ impl<'a> LoweringContext<'a> {\n                 let iter = self.str_to_ident(\"iter\");\n \n                 let next_ident = self.str_to_ident(\"__next\");\n+                let next_sp = self.allow_internal_unstable(\n+                    CompilerDesugaringKind::ForLoop,\n+                    head_sp,\n+                );\n                 let next_pat = self.pat_ident_binding_mode(\n-                    pat.span,\n+                    next_sp,\n                     next_ident,\n                     hir::BindingAnnotation::Mutable,\n                 );"}, {"sha": "c9ac6cdedbbc66fc882db6f3ee1e062351465b01", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=8336f1b1719cd54f553c819b0b61df64e95d6e74", "patch": "@@ -412,6 +412,7 @@ impl_stable_hash_for!(enum ::syntax_pos::hygiene::CompilerDesugaringKind {\n     DotFill,\n     QuestionMark,\n     ExistentialReturnType,\n+    ForLoop,\n     Catch\n });\n "}, {"sha": "04d14f40b850b7867ffd9b7e9f098955159b09b2", "filename": "src/librustc/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=8336f1b1719cd54f553c819b0b61df64e95d6e74", "patch": "@@ -13,6 +13,7 @@ use hir::intravisit::{self, Visitor, NestedVisitorMap};\n use infer::InferCtxt;\n use infer::type_variable::TypeVariableOrigin;\n use ty::{self, Ty, TyInfer, TyVar};\n+use syntax::codemap::CompilerDesugaringKind;\n use syntax_pos::Span;\n use errors::DiagnosticBuilder;\n \n@@ -132,7 +133,15 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             labels.push((pattern.span, format!(\"consider giving this closure parameter a type\")));\n         } else if let Some(pattern) = local_visitor.found_local_pattern {\n             if let Some(simple_ident) = pattern.simple_ident() {\n-                labels.push((pattern.span, format!(\"consider giving `{}` a type\", simple_ident)));\n+                match pattern.span.compiler_desugaring_kind() {\n+                    None => labels.push((pattern.span,\n+                                         format!(\"consider giving `{}` a type\", simple_ident))),\n+                    Some(CompilerDesugaringKind::ForLoop) => labels.push((\n+                        pattern.span,\n+                        \"the element type for this iterator is not specified\".to_string(),\n+                    )),\n+                    _ => {}\n+                }\n             } else {\n                 labels.push((pattern.span, format!(\"consider giving the pattern a type\")));\n             }"}, {"sha": "1531f030127e302516fe924b350571ac3d5e3675", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=8336f1b1719cd54f553c819b0b61df64e95d6e74", "patch": "@@ -602,6 +602,7 @@ pub enum CompilerDesugaringKind {\n     /// `impl Trait` with `Foo`.\n     ExistentialReturnType,\n     Async,\n+    ForLoop,\n }\n \n impl CompilerDesugaringKind {\n@@ -612,6 +613,7 @@ impl CompilerDesugaringKind {\n             CompilerDesugaringKind::QuestionMark => \"?\",\n             CompilerDesugaringKind::Catch => \"do catch\",\n             CompilerDesugaringKind::ExistentialReturnType => \"existential type\",\n+            CompilerDesugaringKind::ForLoop => \"for loop\",\n         })\n     }\n }"}, {"sha": "a7a7ea7c69b69713083945f29d43a63def77d39a", "filename": "src/test/ui/issue-20261.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Ftest%2Fui%2Fissue-20261.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Ftest%2Fui%2Fissue-20261.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-20261.stderr?ref=8336f1b1719cd54f553c819b0b61df64e95d6e74", "patch": "@@ -2,7 +2,7 @@ error[E0282]: type annotations needed\n   --> $DIR/issue-20261.rs:14:11\n    |\n LL |     for (ref i,) in [].iter() {\n-   |         -------- consider giving `__next` a type\n+   |                     --------- the element type for this iterator is not specified\n LL |         i.clone();\n    |           ^^^^^ cannot infer type for `_`\n    |"}, {"sha": "34217c6236c43e8db3634cb0696ec895917d7f55", "filename": "src/test/ui/issue-51116.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Ftest%2Fui%2Fissue-51116.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Ftest%2Fui%2Fissue-51116.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-51116.rs?ref=8336f1b1719cd54f553c819b0b61df64e95d6e74", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let tiles = Default::default();\n+    for row in &mut tiles {\n+        for tile in row {\n+            //~^ NOTE the element type for this iterator is not specified\n+            *tile = 0;\n+            //~^ ERROR type annotations needed\n+            //~| NOTE cannot infer type for `_`\n+            //~| NOTE type must be known at this point\n+        }\n+    }\n+\n+    let tiles: [[usize; 3]; 3] = tiles;\n+}"}, {"sha": "0c38688340bf333641cad9ad7842b04e291941fc", "filename": "src/test/ui/issue-51116.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Ftest%2Fui%2Fissue-51116.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8336f1b1719cd54f553c819b0b61df64e95d6e74/src%2Ftest%2Fui%2Fissue-51116.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-51116.stderr?ref=8336f1b1719cd54f553c819b0b61df64e95d6e74", "patch": "@@ -0,0 +1,14 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/issue-51116.rs:16:13\n+   |\n+LL |         for tile in row {\n+   |                     --- the element type for this iterator is not specified\n+LL |             //~^ NOTE the element type for this iterator is not specified\n+LL |             *tile = 0;\n+   |             ^^^^^ cannot infer type for `_`\n+   |\n+   = note: type must be known at this point\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}]}