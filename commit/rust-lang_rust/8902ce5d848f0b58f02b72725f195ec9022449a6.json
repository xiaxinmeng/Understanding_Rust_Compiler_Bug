{"sha": "8902ce5d848f0b58f02b72725f195ec9022449a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MDJjZTVkODQ4ZjBiNThmMDJiNzI3MjVmMTk1ZWM5MDIyNDQ5YTY=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-05-08T19:00:32Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-10-04T11:54:02Z"}, "message": "Address review comments", "tree": {"sha": "a30022894bb299e866173b1133be86c6a3a5b957", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a30022894bb299e866173b1133be86c6a3a5b957"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8902ce5d848f0b58f02b72725f195ec9022449a6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl95t9oACgkQtAh+UQ6Y\nsWQ6Ow/8CP5XRhLDorymxdIVXx6FxscB3r3d7q3EMnMLVrj3Ag5Jm/zz6JY+v6PD\nh828fa0diT6WWmcASjnkfiSFAUY6raahLXTk4H6YUXpJNhYHaLJlseRl/4aIsUpv\n/lccoPpbsfjtfFpkMFDZvqQql3iPqmsWluQ43+1dpjVCxPVsrtw5B+lGpsFo3HL0\noBcc01xMxWhCduR5rB+hZiM8Sth9tUd/Ei/Vf2FgTNUP9JrpDYf25A/fuc8CZP3r\nn88fu37IfADts1JNY+Nw8fBCuWdQ/oLtTBT8Viulr/YMJLL+jXwDIy8QS+48TRiT\nnvSLcaMAVtBTOpaoDkIOkd+9yDH+20uTjLFD3jCkHJ+3OZWI3WyrKWGOC0hGX0c/\nHtqXe8u8Uas8XAYDzd141bvlJsrpyfvKxTYgpOyUL8m80Yosi5zxR47RZ+IEukAj\nehrfDbr32gruN5WHoWaGqWbTGDiNVwFky5R4OtMPPN01xxzwGfmUvcFbgtry9GDS\n6z/aUseg3P6YqX+LgGik+1kWepag67edqmY2ra4jewhtl7CG1atHEeyrTruDtSrq\n8TQDj2SKmJC6pOBQNr+xa1RWTq1E64WPkKvMXM1CUui3Ya6zHgIMYep7Zr3ppmGl\nC3V2D/RXRPnbl3JwkZutKhwKYOcDhY5BNVDlRifvAzjlehfYGfE=\n=DrAq\n-----END PGP SIGNATURE-----", "payload": "tree a30022894bb299e866173b1133be86c6a3a5b957\nparent 1e71862046bdea989e4a25c266b2df768cb4f0bb\nauthor Matthew Jasper <mjjasper1@gmail.com> 1588964432 +0100\ncommitter Aaron Hill <aa1ronham@gmail.com> 1601812442 -0400\n\nAddress review comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8902ce5d848f0b58f02b72725f195ec9022449a6", "html_url": "https://github.com/rust-lang/rust/commit/8902ce5d848f0b58f02b72725f195ec9022449a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8902ce5d848f0b58f02b72725f195ec9022449a6/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e71862046bdea989e4a25c266b2df768cb4f0bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e71862046bdea989e4a25c266b2df768cb4f0bb", "html_url": "https://github.com/rust-lang/rust/commit/1e71862046bdea989e4a25c266b2df768cb4f0bb"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "3e45061a9cd6bf8fd9f0eae7b89c13a935a80711", "filename": "compiler/rustc_mir/src/dataflow/move_paths/builder.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8902ce5d848f0b58f02b72725f195ec9022449a6/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8902ce5d848f0b58f02b72725f195ec9022449a6/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=8902ce5d848f0b58f02b72725f195ec9022449a6", "patch": "@@ -362,12 +362,16 @@ impl<'b, 'a, 'tcx> Gatherer<'b, 'a, 'tcx> {\n     fn gather_terminator(&mut self, term: &Terminator<'tcx>) {\n         match term.kind {\n             TerminatorKind::Goto { target: _ }\n+            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseUnwind { .. }\n+            // In some sense returning moves the return place into the current\n+            // call's destination, however, since there are no statements after\n+            // this that could possibly access the return place, this doesn't\n+            // need recording.\n             | TerminatorKind::Return\n             | TerminatorKind::Resume\n             | TerminatorKind::Abort\n             | TerminatorKind::GeneratorDrop\n-            | TerminatorKind::FalseEdge { .. }\n-            | TerminatorKind::FalseUnwind { .. }\n             | TerminatorKind::Unreachable => {}\n \n             TerminatorKind::Assert { ref cond, .. } => {"}, {"sha": "65d3d2595a58ee808301ac2fe773a9d5ebde1747", "filename": "compiler/rustc_mir_build/src/build/scope.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8902ce5d848f0b58f02b72725f195ec9022449a6/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8902ce5d848f0b58f02b72725f195ec9022449a6/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs?ref=8902ce5d848f0b58f02b72725f195ec9022449a6", "patch": "@@ -69,7 +69,7 @@ scheduled in a [DropTree]. Later, before `in_breakable_scope` exits, the drops\n will be added to the CFG.\n \n Panics are handled in a similar fashion, except that the drops are added to the\n-mir once the rest of the function has finished being lowered. If a terminator\n+MIR once the rest of the function has finished being lowered. If a terminator\n can panic, call `diverge_from(block)` with the block containing the terminator\n `block`.\n \n@@ -285,8 +285,8 @@ impl DropTree {\n         blocks: &mut IndexVec<DropIdx, Option<BasicBlock>>,\n     ) {\n         // StorageDead statements can share blocks with each other and also with\n-        // a Drop terminator. We iterate through the blocks to find which blocks\n-        // need\n+        // a Drop terminator. We iterate through the drops to find which drops\n+        // need their own block.\n         #[derive(Clone, Copy)]\n         enum Block {\n             // This drop is unreachable\n@@ -295,7 +295,7 @@ impl DropTree {\n             // specified index.\n             Shares(DropIdx),\n             // This drop has more than one way of being reached, or it is\n-            // branched to from outside the tree, or it's predecessor is a\n+            // branched to from outside the tree, or its predecessor is a\n             // `Value` drop.\n             Own,\n         }\n@@ -308,7 +308,7 @@ impl DropTree {\n             needs_block[ROOT_NODE] = Block::Own;\n         }\n \n-        // Sort so that we only need to check the last\n+        // Sort so that we only need to check the last value.\n         let entry_points = &mut self.entry_points;\n         entry_points.sort();\n "}]}