{"sha": "45021cae551826727c32c7499c68ca48d046890f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MDIxY2FlNTUxODI2NzI3YzMyYzc0OTljNjhjYTQ4ZDA0Njg5MGY=", "commit": {"author": {"name": "Roland Ruckerbauer", "email": "roland.rucky@gmail.com", "date": "2020-05-19T20:52:15Z"}, "committer": {"name": "Roland Ruckerbauer", "email": "roland.rucky@gmail.com", "date": "2020-05-19T20:53:19Z"}, "message": "Apply suggestion of @flodiebold: Get rid of multiple unwraps", "tree": {"sha": "d8d974f6939ab55ebf362088ff130c3c4216936f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8d974f6939ab55ebf362088ff130c3c4216936f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45021cae551826727c32c7499c68ca48d046890f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45021cae551826727c32c7499c68ca48d046890f", "html_url": "https://github.com/rust-lang/rust/commit/45021cae551826727c32c7499c68ca48d046890f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45021cae551826727c32c7499c68ca48d046890f/comments", "author": null, "committer": null, "parents": [{"sha": "da09f967469127576d9a87a7c143f754777a4f6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/da09f967469127576d9a87a7c143f754777a4f6b", "html_url": "https://github.com/rust-lang/rust/commit/da09f967469127576d9a87a7c143f754777a4f6b"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "b28724f0e9461e03a6388b961feb77f58ae91ad4", "filename": "crates/ra_hir_ty/src/infer/expr.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/45021cae551826727c32c7499c68ca48d046890f/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45021cae551826727c32c7499c68ca48d046890f/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=45021cae551826727c32c7499c68ca48d046890f", "patch": "@@ -238,25 +238,23 @@ impl<'a> InferenceContext<'a> {\n                     Ty::unit()\n                 };\n \n-                let mut has_brkctx = false;\n+                let last_ty = if let Some(ctxt) = self.breakables.last() {\n+                    ctxt.break_ty.clone()\n+                } else {\n+                    Ty::Unknown\n+                };\n \n-                if self.breakables.last().is_some() {\n-                    has_brkctx = true;\n+                let merged_type = self.coerce_merge_branch(&last_ty, &val_ty);\n+\n+                if let Some(ctxt) = self.breakables.last_mut() {\n+                    ctxt.break_ty = merged_type;\n+                    ctxt.may_break = true;\n                 } else {\n                     self.push_diagnostic(InferenceDiagnostic::BreakOutsideOfLoop {\n                         expr: tgt_expr,\n                     });\n                 }\n \n-                if has_brkctx {\n-                    let last_ty = self.breakables.last().expect(\"This is a bug\").break_ty.clone();\n-                    let merged_type = self.coerce_merge_branch(&last_ty, &val_ty);\n-\n-                    let ctxt = self.breakables.last_mut().expect(\"This is a bug\");\n-                    ctxt.may_break = true;\n-                    ctxt.break_ty = merged_type;\n-                }\n-\n                 Ty::simple(TypeCtor::Never)\n             }\n             Expr::Return { expr } => {"}]}