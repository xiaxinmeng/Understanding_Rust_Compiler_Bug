{"sha": "9a6343478ce9765c299ad594dd8a8a8d38202c68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNjM0MzQ3OGNlOTc2NWMyOTlhZDU5NGRkOGE4YThkMzgyMDJjNjg=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-06-25T06:08:06Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-06-25T06:08:06Z"}, "message": "Renamed test and added test for same crate", "tree": {"sha": "528c2f932fdff6375dbed866e768194b7fc4616b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/528c2f932fdff6375dbed866e768194b7fc4616b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a6343478ce9765c299ad594dd8a8a8d38202c68", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjbeLZzPb62/vY3smZSV3NIU3bZIFAmDVctEACgkQZSV3NIU3\nbZIOwxAAnswHiMJI9HWLv2tgowVfNvfmg868pWUPIDN4UOYSN6jsxSy84IUvG3jJ\nep661hZO7fMupi+lJn/dcV+hjlSKc5Xg5wJ1oJw3EtB5m1toBFP60neKcVJsruOL\nekONd9tl4XPXHzEj08RV9DRSy4ZDs5tB+jqM+lLGSpneyBjMacht+Nm7g4RTQwn/\nNB/TLemALwkBinbTAgFtKXoKraZHa7rus++ah/7cfeCiG/KuMZCGAUx42jT0eLpU\neW/oQ5UvgXRaeC/M4hu1Y+z/bJP/0dQAF3Wh/sIgTWjrp+sJUbrX6lqBUpNTw6RD\nnlpPFSl7m2ZdlBg3o66PYh/vpm6OT/5NlrW/R+tc7zNLl8Rv70k1MORRHz3g+MOY\nqwCrSoS+cHb5qN4eaoseJ041sEM5TpPg3S3h9+Pml9CIiR6jo2OvGbN7N3yj8aky\n8pkN59IRXrFE+laoi3vb1zlZvb6qZ5yy4RpVFyTXUSOeUh/+w5J5brEFgtHXIDaz\nOp3R7+eH87eWyS3QvCjykhjlW+BP0e+fsEzg+4nhm9LO9LftRBf/+u2CdobRpgrP\nZnABRJzuB7uMhy/rDK/2HYWN1aEbqg54g6/D1QJbusYzyGkmPZ1YXGB1KojIAuXr\nuCdjPehTsXLOsOnymg1N3Yqh92ECShwI7s0xtMCOVE3fE6RXP2Q=\n=07Rx\n-----END PGP SIGNATURE-----", "payload": "tree 528c2f932fdff6375dbed866e768194b7fc4616b\nparent 0aaefff0096b04d46b9502508ec4c935ed10ae25\nauthor Deadbeef <ent3rm4n@gmail.com> 1624601286 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1624601286 +0800\n\nRenamed test and added test for same crate\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a6343478ce9765c299ad594dd8a8a8d38202c68", "html_url": "https://github.com/rust-lang/rust/commit/9a6343478ce9765c299ad594dd8a8a8d38202c68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a6343478ce9765c299ad594dd8a8a8d38202c68/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aaefff0096b04d46b9502508ec4c935ed10ae25", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aaefff0096b04d46b9502508ec4c935ed10ae25", "html_url": "https://github.com/rust-lang/rust/commit/0aaefff0096b04d46b9502508ec4c935ed10ae25"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "15953122280f37a7bfe0f3eda33cd9793f011dd0", "filename": "src/test/rustdoc/auxiliary/cross-crate-hidden-impl-parameter.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9a6343478ce9765c299ad594dd8a8a8d38202c68/src%2Ftest%2Frustdoc%2Fauxiliary%2Fcross-crate-hidden-impl-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a6343478ce9765c299ad594dd8a8a8d38202c68/src%2Ftest%2Frustdoc%2Fauxiliary%2Fcross-crate-hidden-impl-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fcross-crate-hidden-impl-parameter.rs?ref=9a6343478ce9765c299ad594dd8a8a8d38202c68", "previous_filename": "src/test/rustdoc/auxiliary/cross-crate-hidden.rs"}, {"sha": "eb2ced2f7f413f58be498a285808de10a5c9f634", "filename": "src/test/rustdoc/cross-crate-hidden-impl-parameter.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9a6343478ce9765c299ad594dd8a8a8d38202c68/src%2Ftest%2Frustdoc%2Fcross-crate-hidden-impl-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a6343478ce9765c299ad594dd8a8a8d38202c68/src%2Ftest%2Frustdoc%2Fcross-crate-hidden-impl-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcross-crate-hidden-impl-parameter.rs?ref=9a6343478ce9765c299ad594dd8a8a8d38202c68", "patch": "@@ -1,10 +1,10 @@\n // Issue #86448: test for cross-crate `doc(hidden)`\n #![crate_name = \"foo\"]\n \n-// aux-build:cross-crate-hidden.rs\n-extern crate cross_crate_hidden;\n+// aux-build:cross-crate-hidden-impl-parameter.rs\n+extern crate cross_crate_hidden_impl_parameter;\n \n-pub use ::cross_crate_hidden::{HiddenType, HiddenTrait}; // OK, not re-exported\n+pub use ::cross_crate_hidden_impl_parameter::{HiddenType, HiddenTrait}; // OK, not re-exported\n \n pub enum MyLibType {}\n ", "previous_filename": "src/test/rustdoc/cross-crate-hidden.rs"}, {"sha": "d55393af8599ba5b53a254914e52acd6c3d5bf00", "filename": "src/test/rustdoc/same-crate-hidden-impl-parameter.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/9a6343478ce9765c299ad594dd8a8a8d38202c68/src%2Ftest%2Frustdoc%2Fsame-crate-hidden-impl-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a6343478ce9765c299ad594dd8a8a8d38202c68/src%2Ftest%2Frustdoc%2Fsame-crate-hidden-impl-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsame-crate-hidden-impl-parameter.rs?ref=9a6343478ce9765c299ad594dd8a8a8d38202c68", "patch": "@@ -0,0 +1,36 @@\n+// test for `doc(hidden)` with impl parameters in the same crate.\n+#![crate_name = \"foo\"]\n+\n+#[doc(hidden)]\n+pub enum HiddenType {}\n+\n+#[doc(hidden)]\n+pub trait HiddenTrait {}\n+\n+pub enum MyLibType {}\n+\n+// @!has foo/enum.MyLibType.html '//*[@id=\"impl-From%3CHiddenType%3E\"]' 'impl From<HiddenType> for MyLibType'\n+impl From<HiddenType> for MyLibType {\n+    fn from(it: HiddenType) -> MyLibType {\n+        match it {}\n+    }\n+}\n+\n+pub struct T<T>(T);\n+\n+// @!has foo/enum.MyLibType.html '//*[@id=\"impl-From%3CT%3CT%3CT%3CT%3CHiddenType%3E%3E%3E%3E%3E\"]' 'impl From<T<T<T<T<HiddenType>>>>> for MyLibType'\n+impl From<T<T<T<T<HiddenType>>>>> for MyLibType {\n+    fn from(it: T<T<T<T<HiddenType>>>>) -> MyLibType {\n+        todo!()\n+    }\n+}\n+\n+// @!has foo/enum.MyLibType.html '//*[@id=\"impl-HiddenTrait\"]' 'impl HiddenTrait for MyLibType'\n+impl HiddenTrait for MyLibType {}\n+\n+// @!has foo/struct.T.html '//*[@id=\"impl-From%3CMyLibType%3E\"]' 'impl From<MyLibType> for T<T<T<T<HiddenType>>>>'\n+impl From<MyLibType> for T<T<T<T<HiddenType>>>> {\n+    fn from(it: MyLibType) -> T<T<T<T<HiddenType>>>> {\n+        match it {}\n+    }\n+}"}]}