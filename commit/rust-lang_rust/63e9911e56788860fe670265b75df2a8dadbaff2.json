{"sha": "63e9911e56788860fe670265b75df2a8dadbaff2", "node_id": "C_kwDOAAsO6NoAKDYzZTk5MTFlNTY3ODg4NjBmZTY3MDI2NWI3NWRmMmE4ZGFkYmFmZjI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-19T20:57:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-19T20:57:39Z"}, "message": "Rollup merge of #95740 - Amanieu:kreg0, r=nagisa\n\nasm: Add a kreg0 register class on x86 which includes k0\n\nPreviously we only exposed a kreg register class which excludes the k0\nregister since it can't be used in many instructions. However k0 is a\nvalid register and we need to have a way of marking it as clobbered for\nclobber_abi.\n\nFixes #94977", "tree": {"sha": "5a9ac1310d84e9db66f07501667aec446a89d020", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a9ac1310d84e9db66f07501667aec446a89d020"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63e9911e56788860fe670265b75df2a8dadbaff2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63e9911e56788860fe670265b75df2a8dadbaff2", "html_url": "https://github.com/rust-lang/rust/commit/63e9911e56788860fe670265b75df2a8dadbaff2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63e9911e56788860fe670265b75df2a8dadbaff2/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21be9da2099cb3c95ce8b7cef31ab77686775639", "url": "https://api.github.com/repos/rust-lang/rust/commits/21be9da2099cb3c95ce8b7cef31ab77686775639", "html_url": "https://github.com/rust-lang/rust/commit/21be9da2099cb3c95ce8b7cef31ab77686775639"}, {"sha": "52cd51f3ec1499b1fe442d3bf300b3079efe3b8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/52cd51f3ec1499b1fe442d3bf300b3079efe3b8d", "html_url": "https://github.com/rust-lang/rust/commit/52cd51f3ec1499b1fe442d3bf300b3079efe3b8d"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "2e8cd934eb2986fb22f6633618722ec912ab8f44", "filename": "src/asm.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/63e9911e56788860fe670265b75df2a8dadbaff2/src%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63e9911e56788860fe670265b75df2a8dadbaff2/src%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fasm.rs?ref=63e9911e56788860fe670265b75df2a8dadbaff2", "patch": "@@ -589,6 +589,7 @@ fn reg_to_gcc(reg: InlineAsmRegOrRegClass) -> ConstraintOrRegister {\n             | InlineAsmRegClass::X86(X86InlineAsmRegClass::ymm_reg) => \"x\",\n             InlineAsmRegClass::X86(X86InlineAsmRegClass::zmm_reg) => \"v\",\n             InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg) => unimplemented!(),\n+            InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg0) => unimplemented!(),\n             InlineAsmRegClass::Wasm(WasmInlineAsmRegClass::local) => unimplemented!(),\n             InlineAsmRegClass::X86(\n                 X86InlineAsmRegClass::x87_reg | X86InlineAsmRegClass::mmx_reg,\n@@ -654,6 +655,7 @@ fn dummy_output_type<'gcc, 'tcx>(cx: &CodegenCx<'gcc, 'tcx>, reg: InlineAsmRegCl\n         | InlineAsmRegClass::X86(X86InlineAsmRegClass::zmm_reg) => cx.type_f32(),\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::x87_reg) => unimplemented!(),\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg) => cx.type_i16(),\n+        InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg0) => cx.type_i16(),\n         InlineAsmRegClass::Wasm(WasmInlineAsmRegClass::local) => cx.type_i32(),\n         InlineAsmRegClass::SpirV(SpirVInlineAsmRegClass::reg) => {\n             bug!(\"LLVM backend does not support SPIR-V\")\n@@ -784,6 +786,7 @@ fn modifier_to_gcc(arch: InlineAsmArch, reg: InlineAsmRegClass, modifier: Option\n             _ => unreachable!(),\n         },\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg) => None,\n+        InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg0) => None,\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::x87_reg | X86InlineAsmRegClass::mmx_reg) => {\n             unreachable!(\"clobber-only\")\n         }"}]}