{"sha": "720a4b53f5c79be6072166e22fd3aa81104d91f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMGE0YjUzZjVjNzliZTYwNzIxNjZlMjJmZDNhYTgxMTA0ZDkxZjI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-12-26T07:18:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-26T07:18:58Z"}, "message": "Rollup merge of #46940 - EdSchouten:cloudabi, r=alexcrichton\n\nAdd support for CloudABI targets to the rustc backend.\n\nCloudABI is a sandboxed UNIX-like runtime environment. It is a\nprogramming environment that uses a capability-based security model. In\npractice this means that many POSIX interfaces are present, except for\nones that try to access resources out of thin air. For example, open()\nis gone, but openat() is present.\n\nRight now I'm at the point where I can compile very basic CloudABI\napplications on all four supported architectures (ARM and x86, 32 and 64\nbits). The next step will be to get libstd to work. Patches for that are\noutside the scope of this change.\n\nMore info: https://nuxi.nl/cloudabi/ https://github.com/NuxiNL/cloudlibc/", "tree": {"sha": "c1b8cb0144a5755fa4851afa5a4bfd1cb389aa28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1b8cb0144a5755fa4851afa5a4bfd1cb389aa28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/720a4b53f5c79be6072166e22fd3aa81104d91f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/720a4b53f5c79be6072166e22fd3aa81104d91f2", "html_url": "https://github.com/rust-lang/rust/commit/720a4b53f5c79be6072166e22fd3aa81104d91f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/720a4b53f5c79be6072166e22fd3aa81104d91f2/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32016d5eb1e102657763c4080b0a4085db8eba6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/32016d5eb1e102657763c4080b0a4085db8eba6a", "html_url": "https://github.com/rust-lang/rust/commit/32016d5eb1e102657763c4080b0a4085db8eba6a"}, {"sha": "41567525fe4e0efaf3fd2483af5b7800e7befbcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/41567525fe4e0efaf3fd2483af5b7800e7befbcf", "html_url": "https://github.com/rust-lang/rust/commit/41567525fe4e0efaf3fd2483af5b7800e7befbcf"}], "stats": {"total": 182, "additions": 180, "deletions": 2}, "files": [{"sha": "d5e8194c3f79b9bda698b9ce04e9eb90a489552d", "filename": "src/librustc_back/target/aarch64_unknown_cloudabi.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_cloudabi.rs?ref=720a4b53f5c79be6072166e22fd3aa81104d91f2", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use LinkerFlavor;\n+use target::{Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::cloudabi_base::opts();\n+    base.max_atomic_width = Some(128);\n+    base.abi_blacklist = super::arm_base::abi_blacklist();\n+\n+    Ok(Target {\n+        llvm_target: \"aarch64-unknown-cloudabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\".to_string(),\n+        arch: \"aarch64\".to_string(),\n+        target_os: \"cloudabi\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+        options: base,\n+    })\n+}"}, {"sha": "4dad8e1713b432811570a0764d0566b1f6764286", "filename": "src/librustc_back/target/armv7_unknown_cloudabi_eabihf.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_cloudabi_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_cloudabi_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_cloudabi_eabihf.rs?ref=720a4b53f5c79be6072166e22fd3aa81104d91f2", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use LinkerFlavor;\n+use target::{Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::cloudabi_base::opts();\n+    base.cpu = \"cortex-a8\".to_string();\n+    base.max_atomic_width = Some(64);\n+    base.features = \"+v7,+vfp3,+neon\".to_string();\n+    base.abi_blacklist = super::arm_base::abi_blacklist();\n+\n+    Ok(Target {\n+        llvm_target: \"armv7-unknown-cloudabi-eabihf\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"cloudabi\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+        options: base,\n+    })\n+}"}, {"sha": "c29130bdf8e9619955432a33dad24230264ed552", "filename": "src/librustc_back/target/cloudabi_base.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Fcloudabi_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Fcloudabi_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fcloudabi_base.rs?ref=720a4b53f5c79be6072166e22fd3aa81104d91f2", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use LinkerFlavor;\n+use target::{LinkArgs, TargetOptions, RelroLevel};\n+use std::default::Default;\n+\n+pub fn opts() -> TargetOptions {\n+    let mut args = LinkArgs::new();\n+    args.insert(LinkerFlavor::Gcc, vec![\n+        \"-Wl,-Bstatic\".to_string(),\n+        \"-Wl,--no-dynamic-linker\".to_string(),\n+        \"-Wl,--eh-frame-hdr\".to_string(),\n+        \"-Wl,--gc-sections\".to_string(),\n+    ]);\n+\n+    TargetOptions {\n+        executables: true,\n+        target_family: Some(\"unix\".to_string()),\n+        linker_is_gnu: true,\n+        pre_link_args: args,\n+        position_independent_executables: true,\n+        relro_level: RelroLevel::Full,\n+        exe_allocation_crate: super::maybe_jemalloc(),\n+        .. Default::default()\n+    }\n+}"}, {"sha": "b9aa6176d87687d8f73d3f734b23cd36dc95fed6", "filename": "src/librustc_back/target/i686_unknown_cloudabi.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_cloudabi.rs?ref=720a4b53f5c79be6072166e22fd3aa81104d91f2", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use LinkerFlavor;\n+use target::{Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::cloudabi_base::opts();\n+    base.cpu = \"pentium4\".to_string();\n+    base.max_atomic_width = Some(64);\n+    base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m32\".to_string());\n+    base.stack_probes = true;\n+\n+    Ok(Target {\n+        llvm_target: \"i686-unknown-cloudabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128\".to_string(),\n+        arch: \"x86\".to_string(),\n+        target_os: \"cloudabi\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+        options: base,\n+    })\n+}"}, {"sha": "5c18e82fe3a92dd8eff693938bd9b3dc02f4fa38", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=720a4b53f5c79be6072166e22fd3aa81104d91f2", "patch": "@@ -57,6 +57,7 @@ mod apple_base;\n mod apple_ios_base;\n mod arm_base;\n mod bitrig_base;\n+mod cloudabi_base;\n mod dragonfly_base;\n mod emscripten_base;\n mod freebsd_base;\n@@ -227,6 +228,11 @@ supported_targets! {\n     (\"thumbv7em-none-eabihf\", thumbv7em_none_eabihf),\n \n     (\"msp430-none-elf\", msp430_none_elf),\n+\n+    (\"aarch64-unknown-cloudabi\", aarch64_unknown_cloudabi),\n+    (\"armv7-unknown-cloudabi-eabihf\", armv7_unknown_cloudabi_eabihf),\n+    (\"i686-unknown-cloudabi\", i686_unknown_cloudabi),\n+    (\"x86_64-unknown-cloudabi\", x86_64_unknown_cloudabi),\n }\n \n /// Everything `rustc` knows about how to compile for a specific target."}, {"sha": "f9a563174d4a96c7f90d960db5a48c7e0f8741c4", "filename": "src/librustc_back/target/x86_64_unknown_cloudabi.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_cloudabi.rs?ref=720a4b53f5c79be6072166e22fd3aa81104d91f2", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use LinkerFlavor;\n+use target::{Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::cloudabi_base::opts();\n+    base.cpu = \"x86-64\".to_string();\n+    base.max_atomic_width = Some(64);\n+    base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n+    base.stack_probes = true;\n+\n+    Ok(Target {\n+        llvm_target: \"x86_64-unknown-cloudabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\".to_string(),\n+        arch: \"x86_64\".to_string(),\n+        target_os: \"cloudabi\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+        options: base,\n+    })\n+}"}, {"sha": "fc2759df447482fba908c843103c049366df1b7d", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/720a4b53f5c79be6072166e22fd3aa81104d91f2/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=720a4b53f5c79be6072166e22fd3aa81104d91f2", "patch": "@@ -46,8 +46,9 @@ static HOSTS: &'static [&'static str] = &[\n \n static TARGETS: &'static [&'static str] = &[\n     \"aarch64-apple-ios\",\n-    \"aarch64-unknown-fuchsia\",\n     \"aarch64-linux-android\",\n+    \"aarch64-unknown-cloudabi\",\n+    \"aarch64-unknown-fuchsia\",\n     \"aarch64-unknown-linux-gnu\",\n     \"aarch64-unknown-linux-musl\",\n     \"arm-linux-androideabi\",\n@@ -58,6 +59,7 @@ static TARGETS: &'static [&'static str] = &[\n     \"armv5te-unknown-linux-gnueabi\",\n     \"armv7-apple-ios\",\n     \"armv7-linux-androideabi\",\n+    \"armv7-unknown-cloudabi-eabihf\",\n     \"armv7-unknown-linux-gnueabihf\",\n     \"armv7-unknown-linux-musleabihf\",\n     \"armv7s-apple-ios\",\n@@ -69,6 +71,7 @@ static TARGETS: &'static [&'static str] = &[\n     \"i686-linux-android\",\n     \"i686-pc-windows-gnu\",\n     \"i686-pc-windows-msvc\",\n+    \"i686-unknown-cloudabi\",\n     \"i686-unknown-freebsd\",\n     \"i686-unknown-linux-gnu\",\n     \"i686-unknown-linux-musl\",\n@@ -86,13 +89,14 @@ static TARGETS: &'static [&'static str] = &[\n     \"sparcv9-sun-solaris\",\n     \"wasm32-unknown-emscripten\",\n     \"wasm32-unknown-unknown\",\n-    \"x86_64-linux-android\",\n     \"x86_64-apple-darwin\",\n     \"x86_64-apple-ios\",\n+    \"x86_64-linux-android\",\n     \"x86_64-pc-windows-gnu\",\n     \"x86_64-pc-windows-msvc\",\n     \"x86_64-rumprun-netbsd\",\n     \"x86_64-sun-solaris\",\n+    \"x86_64-unknown-cloudabi\",\n     \"x86_64-unknown-freebsd\",\n     \"x86_64-unknown-fuchsia\",\n     \"x86_64-unknown-linux-gnu\","}]}