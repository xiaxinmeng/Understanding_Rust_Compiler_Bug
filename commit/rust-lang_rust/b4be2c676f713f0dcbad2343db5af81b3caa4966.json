{"sha": "b4be2c676f713f0dcbad2343db5af81b3caa4966", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0YmUyYzY3NmY3MTNmMGRjYmFkMjM0M2RiNWFmODFiM2NhYTQ5NjY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-15T13:00:55Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-19T03:00:51Z"}, "message": "create a smallintmap benchmark", "tree": {"sha": "526057b9f0eed180e2b630a6b8c286c9dd1e8768", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/526057b9f0eed180e2b630a6b8c286c9dd1e8768"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4be2c676f713f0dcbad2343db5af81b3caa4966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4be2c676f713f0dcbad2343db5af81b3caa4966", "html_url": "https://github.com/rust-lang/rust/commit/b4be2c676f713f0dcbad2343db5af81b3caa4966", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4be2c676f713f0dcbad2343db5af81b3caa4966/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfde2ba524559aeb5abcfce72d933d74d1226d67", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfde2ba524559aeb5abcfce72d933d74d1226d67", "html_url": "https://github.com/rust-lang/rust/commit/bfde2ba524559aeb5abcfce72d933d74d1226d67"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "8c5e5195cbc125d3ceffd6a647443948ab75b67d", "filename": "src/test/bench/core-vec-append.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b4be2c676f713f0dcbad2343db5af81b3caa4966/src%2Ftest%2Fbench%2Fcore-vec-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4be2c676f713f0dcbad2343db5af81b3caa4966/src%2Ftest%2Fbench%2Fcore-vec-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-vec-append.rs?ref=b4be2c676f713f0dcbad2343db5af81b3caa4966", "previous_filename": "src/test/bench/vec-append.rs"}, {"sha": "d524400750ae17874e6293d04998bc717bab1d10", "filename": "src/test/bench/std-smallintmap.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/b4be2c676f713f0dcbad2343db5af81b3caa4966/src%2Ftest%2Fbench%2Fstd-smallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4be2c676f713f0dcbad2343db5af81b3caa4966/src%2Ftest%2Fbench%2Fstd-smallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fstd-smallintmap.rs?ref=b4be2c676f713f0dcbad2343db5af81b3caa4966", "patch": "@@ -0,0 +1,46 @@\n+// Microbenchmark for the smallintmap library\n+\n+use std;\n+import std::smallintmap;\n+import std::smallintmap::{smallintmap, map};\n+import io::writer_util;\n+\n+fn append_sequential(min: uint, max: uint, map: smallintmap<uint>) {\n+    uint::range(min, max) { |i|\n+        map.insert(i, i + 22u);\n+    }\n+}\n+\n+fn check_sequential(min: uint, max: uint, map: smallintmap<uint>) {\n+    uint::range(min, max) { |i|\n+        assert map.get(i) == i + 22u;\n+    }\n+}\n+\n+fn main(args: [str]) {\n+    let args = if vec::len(args) <= 1u {[\"\", \"1000000\", \"100\"]} else {args};\n+    let max = uint::from_str(args[1]).get();\n+    let rep = uint::from_str(args[2]).get();\n+\n+    let mut checkf = 0.0;\n+    let mut appendf = 0.0;\n+\n+    uint::range(0u, rep) {|_r|\n+        let map = smallintmap::mk();\n+        let start = std::time::precise_time_s();\n+        append_sequential(0u, max, map);\n+        let mid = std::time::precise_time_s();\n+        check_sequential(0u, max, map);\n+        let end = std::time::precise_time_s();\n+\n+        checkf += (end - mid) as float;\n+        appendf += (mid - start) as float;\n+    }\n+\n+    let maxf = max as float;\n+\n+    io::stdout().write_str(#fmt(\"insert(): %? seconds\\n\", checkf));\n+    io::stdout().write_str(#fmt(\"        : %f op/sec\\n\", maxf/checkf));\n+    io::stdout().write_str(#fmt(\"get()   : %? seconds\\n\", appendf));\n+    io::stdout().write_str(#fmt(\"        : %f op/sec\\n\", maxf/appendf));\n+}\n\\ No newline at end of file"}]}