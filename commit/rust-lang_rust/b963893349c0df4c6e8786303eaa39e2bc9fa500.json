{"sha": "b963893349c0df4c6e8786303eaa39e2bc9fa500", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NjM4OTMzNDljMGRmNGM2ZTg3ODYzMDNlYWEzOWUyYmM5ZmE1MDA=", "commit": {"author": {"name": "Matt Hall", "email": "matthew@quickbeam.me.uk", "date": "2021-02-20T16:51:16Z"}, "committer": {"name": "Matt Hall", "email": "matthew@quickbeam.me.uk", "date": "2021-02-20T16:51:16Z"}, "message": "Fix #7712 retain visibility extracting mod to file", "tree": {"sha": "fb8cd9f819e663dd36fa98d4f8d47e8c2ed8a2f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb8cd9f819e663dd36fa98d4f8d47e8c2ed8a2f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b963893349c0df4c6e8786303eaa39e2bc9fa500", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b963893349c0df4c6e8786303eaa39e2bc9fa500", "html_url": "https://github.com/rust-lang/rust/commit/b963893349c0df4c6e8786303eaa39e2bc9fa500", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b963893349c0df4c6e8786303eaa39e2bc9fa500/comments", "author": {"login": "mattyhall", "id": 5175499, "node_id": "MDQ6VXNlcjUxNzU0OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5175499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattyhall", "html_url": "https://github.com/mattyhall", "followers_url": "https://api.github.com/users/mattyhall/followers", "following_url": "https://api.github.com/users/mattyhall/following{/other_user}", "gists_url": "https://api.github.com/users/mattyhall/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattyhall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattyhall/subscriptions", "organizations_url": "https://api.github.com/users/mattyhall/orgs", "repos_url": "https://api.github.com/users/mattyhall/repos", "events_url": "https://api.github.com/users/mattyhall/events{/privacy}", "received_events_url": "https://api.github.com/users/mattyhall/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mattyhall", "id": 5175499, "node_id": "MDQ6VXNlcjUxNzU0OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5175499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattyhall", "html_url": "https://github.com/mattyhall", "followers_url": "https://api.github.com/users/mattyhall/followers", "following_url": "https://api.github.com/users/mattyhall/following{/other_user}", "gists_url": "https://api.github.com/users/mattyhall/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattyhall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattyhall/subscriptions", "organizations_url": "https://api.github.com/users/mattyhall/orgs", "repos_url": "https://api.github.com/users/mattyhall/repos", "events_url": "https://api.github.com/users/mattyhall/events{/privacy}", "received_events_url": "https://api.github.com/users/mattyhall/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de67469f59d5c16e9b4ca106a0265bb8b1585c83", "url": "https://api.github.com/repos/rust-lang/rust/commits/de67469f59d5c16e9b4ca106a0265bb8b1585c83", "html_url": "https://github.com/rust-lang/rust/commit/de67469f59d5c16e9b4ca106a0265bb8b1585c83"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "1f2d8f20fb8f7ee97598e94f871659dafaecbd6a", "filename": "crates/assists/src/handlers/move_module_to_file.rs", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/b963893349c0df4c6e8786303eaa39e2bc9fa500/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_module_to_file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b963893349c0df4c6e8786303eaa39e2bc9fa500/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_module_to_file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_module_to_file.rs?ref=b963893349c0df4c6e8786303eaa39e2bc9fa500", "patch": "@@ -1,4 +1,4 @@\n-use ast::edit::IndentLevel;\n+use ast::{edit::IndentLevel, VisibilityOwner};\n use ide_db::base_db::AnchoredPathBuf;\n use syntax::{\n     ast::{self, edit::AstNodeEdit, NameOwner},\n@@ -36,6 +36,8 @@ pub(crate) fn move_module_to_file(acc: &mut Assists, ctx: &AssistContext) -> Opt\n \n     let module_def = ctx.sema.to_def(&module_ast)?;\n     let parent_module = module_def.parent(ctx.db())?;\n+    let vis_str =\n+        if let Some(v) = module_ast.visibility() { v.to_string() + \" \" } else { \"\".to_string() };\n \n     acc.add(\n         AssistId(\"move_module_to_file\", AssistKind::RefactorExtract),\n@@ -59,7 +61,10 @@ pub(crate) fn move_module_to_file(acc: &mut Assists, ctx: &AssistContext) -> Opt\n                 items\n             };\n \n-            builder.replace(module_ast.syntax().text_range(), format!(\"mod {};\", module_name));\n+            builder.replace(\n+                module_ast.syntax().text_range(),\n+                format!(\"{}mod {};\", vis_str, module_name),\n+            );\n \n             let dst = AnchoredPathBuf { anchor: ctx.frange.file_id, path };\n             builder.create_file(dst, contents);\n@@ -137,6 +142,42 @@ fn f() {}\n         );\n     }\n \n+    #[test]\n+    fn extract_public() {\n+        check_assist(\n+            move_module_to_file,\n+            r#\"\n+pub mod $0tests {\n+    #[test] fn t() {}\n+}\n+\"#,\n+            r#\"\n+//- /main.rs\n+pub mod tests;\n+//- /tests.rs\n+#[test] fn t() {}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn extract_public_crate() {\n+        check_assist(\n+            move_module_to_file,\n+            r#\"\n+pub(crate) mod $0tests {\n+    #[test] fn t() {}\n+}\n+\"#,\n+            r#\"\n+//- /main.rs\n+pub(crate) mod tests;\n+//- /tests.rs\n+#[test] fn t() {}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn available_before_curly() {\n         mark::check!(available_before_curly);"}]}