{"sha": "667973204d5ff01a92eef35c54d004797413b8a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2Nzk3MzIwNGQ1ZmYwMWE5MmVlZjM1YzU0ZDAwNDc5NzQxM2I4YTI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-03-08T21:16:36Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-03-09T01:10:06Z"}, "message": "Note the future epoch for epoch lints", "tree": {"sha": "e51ac3b2386b321e0f18860fcef35ff24189d9c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e51ac3b2386b321e0f18860fcef35ff24189d9c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/667973204d5ff01a92eef35c54d004797413b8a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/667973204d5ff01a92eef35c54d004797413b8a2", "html_url": "https://github.com/rust-lang/rust/commit/667973204d5ff01a92eef35c54d004797413b8a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/667973204d5ff01a92eef35c54d004797413b8a2/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbe57cf13e59b9697f3c840e93611cab6e4a8fab", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbe57cf13e59b9697f3c840e93611cab6e4a8fab", "html_url": "https://github.com/rust-lang/rust/commit/fbe57cf13e59b9697f3c840e93611cab6e4a8fab"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "668e099ebab4131a944d3a3a54096e05dee155bd", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/667973204d5ff01a92eef35c54d004797413b8a2/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/667973204d5ff01a92eef35c54d004797413b8a2/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=667973204d5ff01a92eef35c54d004797413b8a2", "patch": "@@ -493,9 +493,14 @@ pub fn struct_lint_level<'a>(sess: &'a Session,\n     // Check for future incompatibility lints and issue a stronger warning.\n     let lints = sess.lint_store.borrow();\n     if let Some(future_incompatible) = lints.future_incompatible(LintId::of(lint)) {\n+        let future = if let Some(epoch) = future_incompatible.epoch {\n+            format!(\"the {} epoch\", epoch)\n+        } else {\n+            \"a future release\".to_owned()\n+        };\n         let explanation = format!(\"this was previously accepted by the compiler \\\n                                    but is being phased out; \\\n-                                   it will become a hard error in a future release!\");\n+                                   it will become a hard error in {}!\", future);\n         let citation = format!(\"for more information, see {}\",\n                                future_incompatible.reference);\n         err.warn(&explanation);"}, {"sha": "32cbc79c550e3121a65a82a869318433cf488a4c", "filename": "src/libsyntax/epoch.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/667973204d5ff01a92eef35c54d004797413b8a2/src%2Flibsyntax%2Fepoch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/667973204d5ff01a92eef35c54d004797413b8a2/src%2Flibsyntax%2Fepoch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fepoch.rs?ref=667973204d5ff01a92eef35c54d004797413b8a2", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use std::fmt;\n use std::str::FromStr;\n \n /// The epoch of the compiler (RFC 2052)\n@@ -37,12 +38,13 @@ pub enum Epoch {\n // must be in order from oldest to newest\n pub const ALL_EPOCHS: &[Epoch] = &[Epoch::Epoch2015, Epoch::Epoch2018];\n \n-impl ToString for Epoch {\n-    fn to_string(&self) -> String {\n-        match *self {\n-            Epoch::Epoch2015 => \"2015\".into(),\n-            Epoch::Epoch2018 => \"2018\".into(),\n-        }\n+impl fmt::Display for Epoch {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        let s = match *self {\n+            Epoch::Epoch2015 => \"2015\",\n+            Epoch::Epoch2018 => \"2018\",\n+        };\n+        write!(f, \"{}\", s)\n     }\n }\n "}]}