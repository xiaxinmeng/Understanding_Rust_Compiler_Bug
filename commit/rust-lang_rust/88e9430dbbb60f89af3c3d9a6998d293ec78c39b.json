{"sha": "88e9430dbbb60f89af3c3d9a6998d293ec78c39b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZTk0MzBkYmJiNjBmODlhZjNjM2Q5YTY5OThkMjkzZWM3OGMzOWI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-12-01T20:27:18Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-12-20T10:37:15Z"}, "message": "call `impl_or_trait_item()` instead instead of `associated_item()`\n\nThe older method was not aware of the return type possibility.", "tree": {"sha": "0428bafc8a9e6c4e6ed358c9fe11b93044aefe74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0428bafc8a9e6c4e6ed358c9fe11b93044aefe74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88e9430dbbb60f89af3c3d9a6998d293ec78c39b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88e9430dbbb60f89af3c3d9a6998d293ec78c39b", "html_url": "https://github.com/rust-lang/rust/commit/88e9430dbbb60f89af3c3d9a6998d293ec78c39b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88e9430dbbb60f89af3c3d9a6998d293ec78c39b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "044b07dd2089d8e3786c5939fc948710d722845f", "url": "https://api.github.com/repos/rust-lang/rust/commits/044b07dd2089d8e3786c5939fc948710d722845f", "html_url": "https://github.com/rust-lang/rust/commit/044b07dd2089d8e3786c5939fc948710d722845f"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "d2089fb491528c8d083b9aa61ee9c7daf39744dd", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/88e9430dbbb60f89af3c3d9a6998d293ec78c39b/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e9430dbbb60f89af3c3d9a6998d293ec78c39b/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=88e9430dbbb60f89af3c3d9a6998d293ec78c39b", "patch": "@@ -468,7 +468,7 @@ impl<'a, 'gcx, 'tcx> ProbeContext<'a, 'gcx, 'tcx> {\n \n         debug!(\"assemble_inherent_impl_probe {:?}\", impl_def_id);\n \n-        let item = match self.associated_item(impl_def_id) {\n+        let item = match self.impl_or_trait_item(impl_def_id) {\n             Some(m) => m,\n             None => {\n                 return;\n@@ -598,7 +598,7 @@ impl<'a, 'gcx, 'tcx> ProbeContext<'a, 'gcx, 'tcx> {\n \n         let tcx = self.tcx;\n         for bound_trait_ref in traits::transitive_bounds(tcx, bounds) {\n-            let item = match self.associated_item(bound_trait_ref.def_id()) {\n+            let item = match self.impl_or_trait_item(bound_trait_ref.def_id()) {\n                 Some(v) => v,\n                 None => {\n                     continue;\n@@ -1350,15 +1350,7 @@ impl<'a, 'gcx, 'tcx> ProbeContext<'a, 'gcx, 'tcx> {\n         self.tcx.erase_late_bound_regions(value)\n     }\n \n-    /// Find item with name `item_name` defined in impl/trait `def_id`\n-    /// and return it, or `None`, if no such item was defined there.\n-    fn associated_item(&self, def_id: DefId) -> Option<ty::AssociatedItem> {\n-        match self.looking_for {\n-            LookingFor::MethodName(item_name) => self.fcx.associated_item(def_id, item_name),\n-            _ => None,\n-        }\n-    }\n-\n+    /// Find the method with the appropriate name (or return type, as the case may be).\n     fn impl_or_trait_item(&self, def_id: DefId) -> Option<ty::AssociatedItem> {\n         match self.looking_for {\n             LookingFor::MethodName(name) => {"}]}