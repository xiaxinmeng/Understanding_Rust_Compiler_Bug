{"sha": "e2c80477532b54271cbb7249d0bb36d7b257fca2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyYzgwNDc3NTMyYjU0MjcxY2JiNzI0OWQwYmIzNmQ3YjI1N2ZjYTI=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-24T23:32:22Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-14T02:42:12Z"}, "message": "Kill move paths of dead variants", "tree": {"sha": "6276d4cc6e47e19b711d62f938856656df2756d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6276d4cc6e47e19b711d62f938856656df2756d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2c80477532b54271cbb7249d0bb36d7b257fca2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2c80477532b54271cbb7249d0bb36d7b257fca2", "html_url": "https://github.com/rust-lang/rust/commit/e2c80477532b54271cbb7249d0bb36d7b257fca2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2c80477532b54271cbb7249d0bb36d7b257fca2/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99b96199a6f47a8ff97c0df8dda849b5f6f58abf", "url": "https://api.github.com/repos/rust-lang/rust/commits/99b96199a6f47a8ff97c0df8dda849b5f6f58abf", "html_url": "https://github.com/rust-lang/rust/commit/99b96199a6f47a8ff97c0df8dda849b5f6f58abf"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "bd710bc429abe7a392ec27a64c003d268d240c5d", "filename": "src/librustc_mir/dataflow/impls/mod.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/e2c80477532b54271cbb7249d0bb36d7b257fca2/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2c80477532b54271cbb7249d0bb36d7b257fca2/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs?ref=e2c80477532b54271cbb7249d0bb36d7b257fca2", "patch": "@@ -3,7 +3,8 @@\n //! zero-sized structure.\n \n use rustc::mir::{self, Body, Location};\n-use rustc::ty::TyCtxt;\n+use rustc::ty::layout::VariantIdx;\n+use rustc::ty::{self, TyCtxt};\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::Idx;\n \n@@ -12,12 +13,13 @@ use super::MoveDataParamEnv;\n use crate::util::elaborate_drops::DropFlagState;\n \n use super::generic::{AnalysisDomain, GenKill, GenKillAnalysis};\n-use super::move_paths::{HasMoveData, InitIndex, InitKind, MoveData, MovePathIndex};\n+use super::move_paths::{HasMoveData, InitIndex, InitKind, LookupResult, MoveData, MovePathIndex};\n use super::{BottomValue, GenKillSet};\n \n use super::drop_flag_effects_for_function_entry;\n use super::drop_flag_effects_for_location;\n use super::on_lookup_result_bits;\n+use crate::dataflow::drop_flag_effects;\n \n mod borrowed_locals;\n mod indirect_mutation;\n@@ -338,6 +340,37 @@ impl<'tcx> GenKillAnalysis<'tcx> for MaybeInitializedPlaces<'_, 'tcx> {\n             },\n         );\n     }\n+\n+    fn discriminant_switch_effect(\n+        &self,\n+        trans: &mut impl GenKill<Self::Idx>,\n+        _block: mir::BasicBlock,\n+        enum_place: &mir::Place<'tcx>,\n+        _adt: &ty::AdtDef,\n+        variant: VariantIdx,\n+    ) {\n+        let enum_mpi = match self.move_data().rev_lookup.find(enum_place.as_ref()) {\n+            LookupResult::Exact(mpi) => mpi,\n+            LookupResult::Parent(_) => return,\n+        };\n+\n+        // Kill all move paths that correspond to variants other than this one\n+        let move_paths = &self.move_data().move_paths;\n+        let enum_path = &move_paths[enum_mpi];\n+        for (mpi, variant_path) in enum_path.children(move_paths) {\n+            trans.kill(mpi);\n+            match variant_path.place.projection.last().unwrap() {\n+                mir::ProjectionElem::Downcast(_, idx) if *idx == variant => continue,\n+                _ => drop_flag_effects::on_all_children_bits(\n+                    self.tcx,\n+                    self.body,\n+                    self.move_data(),\n+                    mpi,\n+                    |mpi| trans.kill(mpi),\n+                ),\n+            }\n+        }\n+    }\n }\n \n impl<'tcx> AnalysisDomain<'tcx> for MaybeUninitializedPlaces<'_, 'tcx> {"}]}