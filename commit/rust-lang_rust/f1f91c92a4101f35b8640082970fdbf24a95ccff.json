{"sha": "f1f91c92a4101f35b8640082970fdbf24a95ccff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZjkxYzkyYTQxMDFmMzViODY0MDA4Mjk3MGZkYmYyNGE5NWNjZmY=", "commit": {"author": {"name": "XAMPPRocky", "email": "4464295+XAMPPRocky@users.noreply.github.com", "date": "2020-03-24T15:07:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-24T15:07:25Z"}, "message": "Apply suggestions from code review\n\nCo-Authored-By: LeSeulArtichaut <leseulartichaut@gmail.com>", "tree": {"sha": "59c2894eabfd8fa891fec24e47fde29d987196a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59c2894eabfd8fa891fec24e47fde29d987196a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1f91c92a4101f35b8640082970fdbf24a95ccff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeeiItCRBK7hj4Ov3rIwAAdHIIAJN28ksnc+MbFq0bJMy87sTS\nJIOeZuKeoPdjwYiJC1hIFueuZNQAvS8IU2qf9sTwDQ+vSKV/BExg8Ls7cVjKrqa7\nuXkZ+KWBie0ADdKfdJS5J8EF/YFG4DLXSMQIygreQ8yFU8DQEFYOiGY3IxGoVKv4\nTrkenSayac60wZVlvEXtwtOshyw1GxiDR/puANLUOZ/hPygUeokGdm/1eCKs2BlK\np/a4cZJY0L2Zb//C43YHC/9LIVd+hm5Nk30Qos1/D5FbmqpDqkQRwBWtxRk3bfz+\nxCiq8AaTwsVqm3MQBvI4zJtrQastzSaaEMwR94trFN6NsESrI/TuCPYmHttK+FE=\n=zGC2\n-----END PGP SIGNATURE-----\n", "payload": "tree 59c2894eabfd8fa891fec24e47fde29d987196a6\nparent d74c17ba0c0a60f484dd35c6edb5093bfeeda508\nauthor XAMPPRocky <4464295+XAMPPRocky@users.noreply.github.com> 1585062445 +0100\ncommitter GitHub <noreply@github.com> 1585062445 +0100\n\nApply suggestions from code review\n\nCo-Authored-By: LeSeulArtichaut <leseulartichaut@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1f91c92a4101f35b8640082970fdbf24a95ccff", "html_url": "https://github.com/rust-lang/rust/commit/f1f91c92a4101f35b8640082970fdbf24a95ccff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1f91c92a4101f35b8640082970fdbf24a95ccff/comments", "author": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d74c17ba0c0a60f484dd35c6edb5093bfeeda508", "url": "https://api.github.com/repos/rust-lang/rust/commits/d74c17ba0c0a60f484dd35c6edb5093bfeeda508", "html_url": "https://github.com/rust-lang/rust/commit/d74c17ba0c0a60f484dd35c6edb5093bfeeda508"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e8205b15a45d3cb71ceb121c762abf33cad3c3f3", "filename": "RELEASES.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f1f91c92a4101f35b8640082970fdbf24a95ccff/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/f1f91c92a4101f35b8640082970fdbf24a95ccff/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=f1f91c92a4101f35b8640082970fdbf24a95ccff", "patch": "@@ -24,7 +24,7 @@ Compiler\n - [You can now pass multiple lint flags to rustc to override the previous\n   flags.][67885] For example; `rustc -D unused -A unused-variables` denies\n   everything in the `unused` lint group unused except `unused-variables` which\n-  is explicitly allowed. Passing `rustc -A unused-variables -D unused` denies\n+  is explicitly allowed. However, passing `rustc -A unused-variables -D unused` denies\n   everything in the `unused` lint group **including** `unused-variables` since\n   the allow flag is specified before the deny flag (and therefore overridden).\n - [rustc will now prefer your system MinGW libraries over its bundled libraries\n@@ -35,13 +35,13 @@ Libraries\n ---------\n - [`Arc<[T; N]>`, `Box<[T; N]>`, and `Rc<[T; N]>`, now implement\n   `TryFrom<Arc<[T]>>`,`TryFrom<Box<[T]>>`, and `TryFrom<Rc<[T]>>`\n-  respectively.][69538] Where `N` is `0..=32`.\n+  respectively.][69538] These conversions succeed when `N` is `0..=32`.\n - [All `to_be_bytes`, `to_le_bytes`, `to_ne_bytes`, `from_be_bytes`,\n   `from_le_bytes`, and `from_ne_bytes` methods for integers are\n   now `const`.][69373]\n - [You can now use associated constants on floats and integers directly, rather\n   than having to import the module.][68952] e.g. You can now write `u32::MAX` or\n-  `f32::NAN` no imports.\n+  `f32::NAN` with no imports.\n - [`u8::is_ascii` is now `const`.][68984]\n - [`String` now implements `AsMut<str>`.][68742]\n - [Added the `primitive` module to `std` and `core`.][67637] This module"}]}