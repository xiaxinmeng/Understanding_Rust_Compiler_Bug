{"sha": "c599a4cfc3e33903d6523ba7355f862780714bda", "node_id": "C_kwDOAAsO6NoAKGM1OTlhNGNmYzNlMzM5MDNkNjUyM2JhNzM1NWY4NjI3ODA3MTRiZGE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-04-07T18:58:02Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-04-07T19:00:07Z"}, "message": "do not round-trip function pointer through integer", "tree": {"sha": "43ee2abd90c4f1a5356088d400a9773be98f5e7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43ee2abd90c4f1a5356088d400a9773be98f5e7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c599a4cfc3e33903d6523ba7355f862780714bda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c599a4cfc3e33903d6523ba7355f862780714bda", "html_url": "https://github.com/rust-lang/rust/commit/c599a4cfc3e33903d6523ba7355f862780714bda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c599a4cfc3e33903d6523ba7355f862780714bda/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe855919890d2c7e462763462efd479b083d015a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe855919890d2c7e462763462efd479b083d015a", "html_url": "https://github.com/rust-lang/rust/commit/fe855919890d2c7e462763462efd479b083d015a"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "c55df04200313dfa524c272b1194db731fcf599a", "filename": "library/std/src/sys/windows/compat.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c599a4cfc3e33903d6523ba7355f862780714bda/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c599a4cfc3e33903d6523ba7355f862780714bda/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs?ref=c599a4cfc3e33903d6523ba7355f862780714bda", "patch": "@@ -92,11 +92,10 @@ macro_rules! compat_fn {\n                 let symbol_name: *const u8 = concat!(stringify!($symbol), \"\\0\").as_ptr();\n                 let module_handle = $crate::sys::c::GetModuleHandleA(module_name as *const i8);\n                 if !module_handle.is_null() {\n-                    match $crate::sys::c::GetProcAddress(module_handle, symbol_name as *const i8).addr() {\n-                        0 => {}\n-                        n => {\n-                            return Some(mem::transmute::<usize, F>(n));\n-                        }\n+                    let ptr = $crate::sys::c::GetProcAddress(module_handle, symbol_name as *const i8);\n+                    if !ptr.is_null() {\n+                        // Transmute to the right function pointer type.\n+                        return Some(mem::transmute(ptr));\n                     }\n                 }\n                 return None;"}]}