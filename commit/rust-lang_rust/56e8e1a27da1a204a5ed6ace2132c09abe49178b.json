{"sha": "56e8e1a27da1a204a5ed6ace2132c09abe49178b", "node_id": "C_kwDOAAsO6NoAKDU2ZThlMWEyN2RhMWEyMDRhNWVkNmFjZTIxMzJjMDlhYmU0OTE3OGI", "commit": {"author": {"name": "NotAPenguin", "email": "michiel.vandeginste@gmail.com", "date": "2023-05-08T11:20:33Z"}, "committer": {"name": "NotAPenguin", "email": "michiel.vandeginste@gmail.com", "date": "2023-05-08T11:20:33Z"}, "message": "new lint: clippy::ref_patterns", "tree": {"sha": "7226a5c226dcafc7598fcae7cf650987d0f873e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7226a5c226dcafc7598fcae7cf650987d0f873e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56e8e1a27da1a204a5ed6ace2132c09abe49178b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56e8e1a27da1a204a5ed6ace2132c09abe49178b", "html_url": "https://github.com/rust-lang/rust/commit/56e8e1a27da1a204a5ed6ace2132c09abe49178b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56e8e1a27da1a204a5ed6ace2132c09abe49178b/comments", "author": {"login": "NotAPenguin0", "id": 26485755, "node_id": "MDQ6VXNlcjI2NDg1NzU1", "avatar_url": "https://avatars.githubusercontent.com/u/26485755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NotAPenguin0", "html_url": "https://github.com/NotAPenguin0", "followers_url": "https://api.github.com/users/NotAPenguin0/followers", "following_url": "https://api.github.com/users/NotAPenguin0/following{/other_user}", "gists_url": "https://api.github.com/users/NotAPenguin0/gists{/gist_id}", "starred_url": "https://api.github.com/users/NotAPenguin0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NotAPenguin0/subscriptions", "organizations_url": "https://api.github.com/users/NotAPenguin0/orgs", "repos_url": "https://api.github.com/users/NotAPenguin0/repos", "events_url": "https://api.github.com/users/NotAPenguin0/events{/privacy}", "received_events_url": "https://api.github.com/users/NotAPenguin0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "NotAPenguin0", "id": 26485755, "node_id": "MDQ6VXNlcjI2NDg1NzU1", "avatar_url": "https://avatars.githubusercontent.com/u/26485755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NotAPenguin0", "html_url": "https://github.com/NotAPenguin0", "followers_url": "https://api.github.com/users/NotAPenguin0/followers", "following_url": "https://api.github.com/users/NotAPenguin0/following{/other_user}", "gists_url": "https://api.github.com/users/NotAPenguin0/gists{/gist_id}", "starred_url": "https://api.github.com/users/NotAPenguin0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NotAPenguin0/subscriptions", "organizations_url": "https://api.github.com/users/NotAPenguin0/orgs", "repos_url": "https://api.github.com/users/NotAPenguin0/repos", "events_url": "https://api.github.com/users/NotAPenguin0/events{/privacy}", "received_events_url": "https://api.github.com/users/NotAPenguin0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3aab0ddc435cfad61ab35225fab7cae0e6837316", "url": "https://api.github.com/repos/rust-lang/rust/commits/3aab0ddc435cfad61ab35225fab7cae0e6837316", "html_url": "https://github.com/rust-lang/rust/commit/3aab0ddc435cfad61ab35225fab7cae0e6837316"}], "stats": {"total": 105, "additions": 104, "deletions": 1}, "files": [{"sha": "85d451a87d0c346ff266a4cbeff62b264f0bfd17", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/56e8e1a27da1a204a5ed6ace2132c09abe49178b/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/56e8e1a27da1a204a5ed6ace2132c09abe49178b/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=56e8e1a27da1a204a5ed6ace2132c09abe49178b", "patch": "@@ -4978,6 +4978,7 @@ Released 2018-09-13\n [`ref_binding_to_reference`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_binding_to_reference\n [`ref_in_deref`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_in_deref\n [`ref_option_ref`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_option_ref\n+[`ref_patterns`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns\n [`regex_macro`]: https://rust-lang.github.io/rust-clippy/master/index.html#regex_macro\n [`repeat_once`]: https://rust-lang.github.io/rust-clippy/master/index.html#repeat_once\n [`replace_consts`]: https://rust-lang.github.io/rust-clippy/master/index.html#replace_consts"}, {"sha": "6614b99713a523bb786365e5dff721df129d0b59", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/56e8e1a27da1a204a5ed6ace2132c09abe49178b/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56e8e1a27da1a204a5ed6ace2132c09abe49178b/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=56e8e1a27da1a204a5ed6ace2132c09abe49178b", "patch": "@@ -539,6 +539,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::redundant_slicing::REDUNDANT_SLICING_INFO,\n     crate::redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES_INFO,\n     crate::ref_option_ref::REF_OPTION_REF_INFO,\n+    crate::ref_patterns::REF_PATTERNS_INFO,\n     crate::reference::DEREF_ADDROF_INFO,\n     crate::regex::INVALID_REGEX_INFO,\n     crate::regex::TRIVIAL_REGEX_INFO,"}, {"sha": "766a701fad8390902bbb968d23fa194cc25da254", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56e8e1a27da1a204a5ed6ace2132c09abe49178b/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56e8e1a27da1a204a5ed6ace2132c09abe49178b/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=56e8e1a27da1a204a5ed6ace2132c09abe49178b", "patch": "@@ -266,6 +266,7 @@ mod redundant_pub_crate;\n mod redundant_slicing;\n mod redundant_static_lifetimes;\n mod ref_option_ref;\n+mod ref_patterns;\n mod reference;\n mod regex;\n mod return_self_not_must_use;\n@@ -971,6 +972,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(manual_slice_size_calculation::ManualSliceSizeCalculation));\n     store.register_early_pass(|| Box::new(suspicious_doc_comments::SuspiciousDocComments));\n     store.register_late_pass(|_| Box::new(items_after_test_module::ItemsAfterTestModule));\n+    store.register_early_pass(|| Box::new(ref_patterns::RefPatterns));\n     store.register_late_pass(|_| Box::new(default_constructed_unit_structs::DefaultConstructedUnitStructs));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }"}, {"sha": "303f0125690873570d17a251409d024a4fc1bdc0", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/56e8e1a27da1a204a5ed6ace2132c09abe49178b/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56e8e1a27da1a204a5ed6ace2132c09abe49178b/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=56e8e1a27da1a204a5ed6ace2132c09abe49178b", "patch": "@@ -16,9 +16,12 @@ use rustc_span::source_map::{ExpnKind, Span};\n \n use clippy_utils::sugg::Sugg;\n use clippy_utils::{\n-    get_parent_expr, in_constant, is_integer_literal, is_no_std_crate, iter_input_pats, last_path_segment, SpanlessEq,\n+    get_parent_expr, in_constant, is_integer_literal, is_lint_allowed, is_no_std_crate, iter_input_pats,\n+    last_path_segment, SpanlessEq,\n };\n \n+use crate::ref_patterns::REF_PATTERNS;\n+\n declare_clippy_lint! {\n     /// ### What it does\n     /// Checks for function arguments and let bindings denoted as\n@@ -162,6 +165,10 @@ impl<'tcx> LateLintPass<'tcx> for LintPass {\n             return;\n         }\n         for arg in iter_input_pats(decl, body) {\n+            // Do not emit if clippy::ref_patterns is not allowed to avoid having two lints for the same issue.\n+            if !is_lint_allowed(cx, REF_PATTERNS, arg.pat.hir_id) {\n+                return;\n+            }\n             if let PatKind::Binding(BindingAnnotation(ByRef::Yes, _), ..) = arg.pat.kind {\n                 span_lint(\n                     cx,\n@@ -180,6 +187,8 @@ impl<'tcx> LateLintPass<'tcx> for LintPass {\n             if let StmtKind::Local(local) = stmt.kind;\n             if let PatKind::Binding(BindingAnnotation(ByRef::Yes, mutabl), .., name, None) = local.pat.kind;\n             if let Some(init) = local.init;\n+            // Do not emit if clippy::ref_patterns is not allowed to avoid having two lints for the same issue.\n+            if is_lint_allowed(cx, REF_PATTERNS, local.pat.hir_id);\n             then {\n                 let ctxt = local.span.ctxt();\n                 let mut app = Applicability::MachineApplicable;"}, {"sha": "b1530eed1c11fe5183457e220e20d00ad558b71b", "filename": "clippy_lints/src/ref_patterns.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/56e8e1a27da1a204a5ed6ace2132c09abe49178b/clippy_lints%2Fsrc%2Fref_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56e8e1a27da1a204a5ed6ace2132c09abe49178b/clippy_lints%2Fsrc%2Fref_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fref_patterns.rs?ref=56e8e1a27da1a204a5ed6ace2132c09abe49178b", "patch": "@@ -0,0 +1,44 @@\n+use clippy_utils::diagnostics::span_lint_and_help;\n+use rustc_ast::ast::{BindingAnnotation, Pat, PatKind};\n+use rustc_lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for usages of the `ref` keyword.\n+    /// ### Why is this bad?\n+    /// The `ref` keyword can be confusing for people unfamiliar with it, and often\n+    /// it is more concise to use `&` instead.\n+    /// ### Example\n+    /// ```rust\n+    /// let opt = Some(5);\n+    /// if let Some(ref foo) = opt {}\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// let opt = Some(5);\n+    /// if let Some(foo) = &opt {}\n+    /// ```\n+    #[clippy::version = \"1.71.0\"]\n+    pub REF_PATTERNS,\n+    restriction,\n+    \"use of a ref pattern, e.g. Some(ref value)\"\n+}\n+declare_lint_pass!(RefPatterns => [REF_PATTERNS]);\n+\n+impl EarlyLintPass for RefPatterns {\n+    fn check_pat(&mut self, cx: &EarlyContext<'_>, pat: &Pat) {\n+        if let PatKind::Ident(BindingAnnotation::REF, _, _) = pat.kind\n+                && !pat.span.from_expansion()\n+        {\n+            span_lint_and_help(\n+                cx,\n+                REF_PATTERNS,\n+                pat.span,\n+                \"usage of ref pattern\",\n+                None,\n+                \"consider using `&` for clarity instead\",\n+            );\n+        }\n+    }\n+}"}, {"sha": "c51e0bc76efdab9862deaf47f93235af5aac2669", "filename": "tests/ui/ref_patterns.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/56e8e1a27da1a204a5ed6ace2132c09abe49178b/tests%2Fui%2Fref_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56e8e1a27da1a204a5ed6ace2132c09abe49178b/tests%2Fui%2Fref_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fref_patterns.rs?ref=56e8e1a27da1a204a5ed6ace2132c09abe49178b", "patch": "@@ -0,0 +1,19 @@\n+#![allow(unused)]\n+#![warn(clippy::ref_patterns)]\n+\n+fn use_in_pattern() {\n+    let opt = Some(5);\n+    match opt {\n+        None => {},\n+        Some(ref opt) => {},\n+    }\n+}\n+\n+fn use_in_binding() {\n+    let x = 5;\n+    let ref y = x;\n+}\n+\n+fn use_in_parameter(ref x: i32) {}\n+\n+fn main() {}"}, {"sha": "aa007782683a650081b90d100a921b4b93fd6119", "filename": "tests/ui/ref_patterns.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/56e8e1a27da1a204a5ed6ace2132c09abe49178b/tests%2Fui%2Fref_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/56e8e1a27da1a204a5ed6ace2132c09abe49178b/tests%2Fui%2Fref_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fref_patterns.stderr?ref=56e8e1a27da1a204a5ed6ace2132c09abe49178b", "patch": "@@ -0,0 +1,27 @@\n+error: usage of ref pattern\n+  --> $DIR/ref_patterns.rs:8:14\n+   |\n+LL |         Some(ref opt) => {},\n+   |              ^^^^^^^\n+   |\n+   = help: consider using `&` for clarity instead\n+   = note: `-D clippy::ref-patterns` implied by `-D warnings`\n+\n+error: usage of ref pattern\n+  --> $DIR/ref_patterns.rs:14:9\n+   |\n+LL |     let ref y = x;\n+   |         ^^^^^\n+   |\n+   = help: consider using `&` for clarity instead\n+\n+error: usage of ref pattern\n+  --> $DIR/ref_patterns.rs:17:21\n+   |\n+LL | fn use_in_parameter(ref x: i32) {}\n+   |                     ^^^^^\n+   |\n+   = help: consider using `&` for clarity instead\n+\n+error: aborting due to 3 previous errors\n+"}]}