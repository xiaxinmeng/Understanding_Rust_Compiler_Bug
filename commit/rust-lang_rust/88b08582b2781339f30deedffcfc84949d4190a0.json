{"sha": "88b08582b2781339f30deedffcfc84949d4190a0", "node_id": "C_kwDOAAsO6NoAKDg4YjA4NTgyYjI3ODEzMzlmMzBkZWVkZmZjZmM4NDk0OWQ0MTkwYTA", "commit": {"author": {"name": "zica", "email": "9918800@gmail.com", "date": "2023-06-15T03:14:24Z"}, "committer": {"name": "zica", "email": "9918800@gmail.com", "date": "2023-06-15T03:41:56Z"}, "message": "Correct types in method descriptions of `NonZero*` types", "tree": {"sha": "2c33456b366da6466433013043f57407efae83eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c33456b366da6466433013043f57407efae83eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88b08582b2781339f30deedffcfc84949d4190a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88b08582b2781339f30deedffcfc84949d4190a0", "html_url": "https://github.com/rust-lang/rust/commit/88b08582b2781339f30deedffcfc84949d4190a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88b08582b2781339f30deedffcfc84949d4190a0/comments", "author": {"login": "zica87", "id": 59327276, "node_id": "MDQ6VXNlcjU5MzI3Mjc2", "avatar_url": "https://avatars.githubusercontent.com/u/59327276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zica87", "html_url": "https://github.com/zica87", "followers_url": "https://api.github.com/users/zica87/followers", "following_url": "https://api.github.com/users/zica87/following{/other_user}", "gists_url": "https://api.github.com/users/zica87/gists{/gist_id}", "starred_url": "https://api.github.com/users/zica87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zica87/subscriptions", "organizations_url": "https://api.github.com/users/zica87/orgs", "repos_url": "https://api.github.com/users/zica87/repos", "events_url": "https://api.github.com/users/zica87/events{/privacy}", "received_events_url": "https://api.github.com/users/zica87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zica87", "id": 59327276, "node_id": "MDQ6VXNlcjU5MzI3Mjc2", "avatar_url": "https://avatars.githubusercontent.com/u/59327276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zica87", "html_url": "https://github.com/zica87", "followers_url": "https://api.github.com/users/zica87/followers", "following_url": "https://api.github.com/users/zica87/following{/other_user}", "gists_url": "https://api.github.com/users/zica87/gists{/gist_id}", "starred_url": "https://api.github.com/users/zica87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zica87/subscriptions", "organizations_url": "https://api.github.com/users/zica87/orgs", "repos_url": "https://api.github.com/users/zica87/repos", "events_url": "https://api.github.com/users/zica87/events{/privacy}", "received_events_url": "https://api.github.com/users/zica87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a28e125b2130c179e40023317b7c6004c08442ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/a28e125b2130c179e40023317b7c6004c08442ff", "html_url": "https://github.com/rust-lang/rust/commit/a28e125b2130c179e40023317b7c6004c08442ff"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "5939dedbd1db0db35a1b7e5aaace53903cae3dc1", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/88b08582b2781339f30deedffcfc84949d4190a0/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88b08582b2781339f30deedffcfc84949d4190a0/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=88b08582b2781339f30deedffcfc84949d4190a0", "patch": "@@ -348,7 +348,7 @@ macro_rules! nonzero_unsigned_operations {\n                 }\n \n                 /// Adds an unsigned integer to a non-zero value.\n-                #[doc = concat!(\"Return [`\", stringify!($Int), \"::MAX`] on overflow.\")]\n+                #[doc = concat!(\"Return [`\", stringify!($Ty), \"::MAX`] on overflow.\")]\n                 ///\n                 /// # Examples\n                 ///\n@@ -579,7 +579,7 @@ macro_rules! nonzero_signed_operations {\n \n                 /// Checked absolute value.\n                 /// Checks for overflow and returns [`None`] if\n-                #[doc = concat!(\"`self == \", stringify!($Int), \"::MIN`.\")]\n+                #[doc = concat!(\"`self == \", stringify!($Ty), \"::MIN`.\")]\n                 /// The result cannot be zero.\n                 ///\n                 /// # Example\n@@ -800,7 +800,8 @@ macro_rules! nonzero_signed_operations {\n                     self.get().is_negative()\n                 }\n \n-                /// Checked negation. Computes `-self`, returning `None` if `self == i32::MIN`.\n+                /// Checked negation. Computes `-self`,\n+                #[doc = concat!(\"returning `None` if `self == \", stringify!($Ty), \"::MIN`.\")]\n                 ///\n                 /// # Example\n                 ///\n@@ -859,8 +860,10 @@ macro_rules! nonzero_signed_operations {\n                     ((unsafe { $Ty::new_unchecked(result) }), overflow)\n                 }\n \n-                /// Saturating negation. Computes `-self`, returning `MAX` if\n-                /// `self == i32::MIN` instead of overflowing.\n+                /// Saturating negation. Computes `-self`,\n+                #[doc = concat!(\"returning [`\", stringify!($Ty), \"::MAX`]\")]\n+                #[doc = concat!(\"if `self == \", stringify!($Ty), \"::MIN`\")]\n+                /// instead of overflowing.\n                 ///\n                 /// # Example\n                 ///\n@@ -993,7 +996,7 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 }\n \n                 /// Multiplies two non-zero integers together.\n-                #[doc = concat!(\"Return [`\", stringify!($Int), \"::MAX`] on overflow.\")]\n+                #[doc = concat!(\"Return [`\", stringify!($Ty), \"::MAX`] on overflow.\")]\n                 ///\n                 /// # Examples\n                 ///\n@@ -1102,11 +1105,11 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 #[doc = sign_dependent_expr!{\n                     $signedness ?\n                     if signed {\n-                        concat!(\"Return [`\", stringify!($Int), \"::MIN`] \",\n-                                    \"or [`\", stringify!($Int), \"::MAX`] on overflow.\")\n+                        concat!(\"Return [`\", stringify!($Ty), \"::MIN`] \",\n+                                    \"or [`\", stringify!($Ty), \"::MAX`] on overflow.\")\n                     }\n                     if unsigned {\n-                        concat!(\"Return [`\", stringify!($Int), \"::MAX`] on overflow.\")\n+                        concat!(\"Return [`\", stringify!($Ty), \"::MAX`] on overflow.\")\n                     }\n                 }]\n                 ///"}]}