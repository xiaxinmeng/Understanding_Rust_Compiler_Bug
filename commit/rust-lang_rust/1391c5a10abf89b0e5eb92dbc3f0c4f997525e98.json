{"sha": "1391c5a10abf89b0e5eb92dbc3f0c4f997525e98", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzOTFjNWExMGFiZjg5YjBlNWViOTJkYmMzZjBjNGY5OTc1MjVlOTg=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-23T14:17:02Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-23T14:17:02Z"}, "message": "Reintroduce fn ptr transmute check", "tree": {"sha": "e6f5f9ad9a298ddf4b6b85b2cf52eb8aae9b72a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6f5f9ad9a298ddf4b6b85b2cf52eb8aae9b72a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1391c5a10abf89b0e5eb92dbc3f0c4f997525e98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1391c5a10abf89b0e5eb92dbc3f0c4f997525e98", "html_url": "https://github.com/rust-lang/rust/commit/1391c5a10abf89b0e5eb92dbc3f0c4f997525e98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1391c5a10abf89b0e5eb92dbc3f0c4f997525e98/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e83659b1de9dad88a034fdc07e30921701761af", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e83659b1de9dad88a034fdc07e30921701761af", "html_url": "https://github.com/rust-lang/rust/commit/4e83659b1de9dad88a034fdc07e30921701761af"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "4ea2c4d9587815e92df7e860c1c181d9f10cbd2c", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1391c5a10abf89b0e5eb92dbc3f0c4f997525e98/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1391c5a10abf89b0e5eb92dbc3f0c4f997525e98/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=1391c5a10abf89b0e5eb92dbc3f0c4f997525e98", "patch": "@@ -65,7 +65,20 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 let (fn_def, sig) = match func_ty.sty {\n                     ty::TyFnPtr(sig) => {\n                         let fn_ptr = self.eval_operand_to_primval(func)?.to_ptr()?;\n-                        (self.memory.get_fn(fn_ptr.alloc_id)?, sig)\n+                        let instance = self.memory.get_fn(fn_ptr.alloc_id)?;\n+                        match instance.def.def_ty(self.tcx).sty {\n+                            ty::TyFnDef(_, _, real_sig) => {\n+                                let sig = self.erase_lifetimes(&sig);\n+                                let real_sig = self.erase_lifetimes(&real_sig);\n+                                if sig.abi != real_sig.abi ||\n+                                    sig.variadic != real_sig.variadic ||\n+                                    sig.inputs_and_output != real_sig.inputs_and_output {\n+                                    return Err(EvalError::FunctionPointerTyMismatch(real_sig, sig));\n+                                }\n+                            },\n+                            ref other => bug!(\"instance def ty: {:?}\", other),\n+                        }\n+                        (instance, sig)\n                     },\n                     ty::TyFnDef(def_id, substs, sig) => (::eval_context::resolve(self.tcx, def_id, substs), sig),\n                     _ => {"}]}