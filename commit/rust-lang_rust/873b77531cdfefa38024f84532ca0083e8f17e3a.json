{"sha": "873b77531cdfefa38024f84532ca0083e8f17e3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3M2I3NzUzMWNkZmVmYTM4MDI0Zjg0NTMyY2EwMDgzZThmMTdlM2E=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-10-14T22:55:18Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-01-27T19:37:30Z"}, "message": "syntax: Lower priority of `+` in `impl Trait`/`dyn Trait`", "tree": {"sha": "7c2ded9f5f2fdab9878dfaaae68dd175d9fd0e2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c2ded9f5f2fdab9878dfaaae68dd175d9fd0e2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/873b77531cdfefa38024f84532ca0083e8f17e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/873b77531cdfefa38024f84532ca0083e8f17e3a", "html_url": "https://github.com/rust-lang/rust/commit/873b77531cdfefa38024f84532ca0083e8f17e3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/873b77531cdfefa38024f84532ca0083e8f17e3a/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b99adeb11313197f409b4f7c4083c2ceca8a4fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b99adeb11313197f409b4f7c4083c2ceca8a4fe", "html_url": "https://github.com/rust-lang/rust/commit/6b99adeb11313197f409b4f7c4083c2ceca8a4fe"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "8fffe0a8697f7cea3c8c2c238aa1cec852d14339", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/873b77531cdfefa38024f84532ca0083e8f17e3a/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/873b77531cdfefa38024f84532ca0083e8f17e3a/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=873b77531cdfefa38024f84532ca0083e8f17e3a", "patch": "@@ -1614,13 +1614,12 @@ impl<'a> Parser<'a> {\n                 self.parse_remaining_bounds(lifetime_defs, path, lo, parse_plus)?\n             }\n         } else if self.eat_keyword(keywords::Impl) {\n-            // FIXME: figure out priority of `+` in `impl Trait1 + Trait2` (#34511).\n-            TyKind::ImplTrait(self.parse_ty_param_bounds()?)\n+            TyKind::ImplTrait(self.parse_ty_param_bounds_common(allow_plus)?)\n         } else if self.check_keyword(keywords::Dyn) &&\n                   self.look_ahead(1, |t| t.can_begin_bound() && !can_continue_type_after_ident(t)) {\n-            // FIXME: figure out priority of `+` in `dyn Trait1 + Trait2` (#34511).\n             self.bump(); // `dyn`\n-            TyKind::TraitObject(self.parse_ty_param_bounds()?, TraitObjectSyntax::Dyn)\n+            TyKind::TraitObject(self.parse_ty_param_bounds_common(allow_plus)?,\n+                                TraitObjectSyntax::Dyn)\n         } else if self.check(&token::Question) ||\n                   self.check_lifetime() && self.look_ahead(1, |t| t == &token::BinOp(token::Plus)) {\n             // Bound list (trait object type)"}, {"sha": "227995bef452e443affa02ae3a8cda6d8ab6272b", "filename": "src/test/compile-fail/private-inferred-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/873b77531cdfefa38024f84532ca0083e8f17e3a/src%2Ftest%2Fcompile-fail%2Fprivate-inferred-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/873b77531cdfefa38024f84532ca0083e8f17e3a/src%2Ftest%2Fcompile-fail%2Fprivate-inferred-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-inferred-type.rs?ref=873b77531cdfefa38024f84532ca0083e8f17e3a", "patch": "@@ -72,7 +72,7 @@ mod m {\n     impl TraitWithAssocTy for u8 { type AssocTy = Priv; }\n     //~^ ERROR private type `m::Priv` in public interface\n \n-    pub fn leak_anon1() -> impl Trait + 'static { 0 }\n+    pub fn leak_anon1() -> (impl Trait + 'static) { 0 }\n     pub fn leak_anon2() -> impl TraitWithTyParam<Alias> { 0 }\n     pub fn leak_anon3() -> impl TraitWithAssocTy<AssocTy = Alias> { 0 }\n "}]}