{"sha": "2c0ab517bcd5e734e41e000289b67b5155361647", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMGFiNTE3YmNkNWU3MzRlNDFlMDAwMjg5YjY3YjUxNTUzNjE2NDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-24T10:15:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-24T10:15:05Z"}, "message": "Auto merge of #1430 - RalfJung:unsize, r=RalfJung\n\nadd interesting unsizing test\n\n@bors r+", "tree": {"sha": "38a2f7cc82e1d6d0a6e3374c888206cabedd757b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38a2f7cc82e1d6d0a6e3374c888206cabedd757b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c0ab517bcd5e734e41e000289b67b5155361647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c0ab517bcd5e734e41e000289b67b5155361647", "html_url": "https://github.com/rust-lang/rust/commit/2c0ab517bcd5e734e41e000289b67b5155361647", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c0ab517bcd5e734e41e000289b67b5155361647/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70d5caf17ea2514d1a5e2a2d3a59c7ccff6b27c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/70d5caf17ea2514d1a5e2a2d3a59c7ccff6b27c9", "html_url": "https://github.com/rust-lang/rust/commit/70d5caf17ea2514d1a5e2a2d3a59c7ccff6b27c9"}, {"sha": "e6ced2f9c45ee73f092d36035e4ba70300ca5516", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6ced2f9c45ee73f092d36035e4ba70300ca5516", "html_url": "https://github.com/rust-lang/rust/commit/e6ced2f9c45ee73f092d36035e4ba70300ca5516"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "fa11e9a2a318ed7b70e53cd0504a41048470da3a", "filename": "tests/run-pass/dyn-lcsit.rs", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/2c0ab517bcd5e734e41e000289b67b5155361647/tests%2Frun-pass%2Fdyn-lcsit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c0ab517bcd5e734e41e000289b67b5155361647/tests%2Frun-pass%2Fdyn-lcsit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fdyn-lcsit.rs?ref=2c0ab517bcd5e734e41e000289b67b5155361647", "patch": "@@ -0,0 +1,68 @@\n+// Taken from the rustc test suite; this triggers an interesting case in unsizing.\n+\n+#![allow(non_upper_case_globals, incomplete_features)]\n+#![feature(associated_type_bounds)]\n+#![feature(impl_trait_in_bindings)]\n+\n+use std::ops::Add;\n+\n+trait Tr1 { type As1; fn mk(&self) -> Self::As1; }\n+trait Tr2<'a> { fn tr2(self) -> &'a Self; }\n+\n+fn assert_copy<T: Copy>(x: T) { let _x = x; let _x = x; }\n+fn assert_static<T: 'static>(_: T) {}\n+fn assert_forall_tr2<T: for<'a> Tr2<'a>>(_: T) {}\n+\n+#[derive(Copy, Clone)]\n+struct S1;\n+#[derive(Copy, Clone)]\n+struct S2;\n+impl Tr1 for S1 { type As1 = S2; fn mk(&self) -> Self::As1 { S2 } }\n+\n+const cdef_et1: &dyn Tr1<As1: Copy> = &S1;\n+const sdef_et1: &dyn Tr1<As1: Copy> = &S1;\n+pub fn use_et1() { assert_copy(cdef_et1.mk()); assert_copy(sdef_et1.mk()); }\n+\n+const cdef_et2: &(dyn Tr1<As1: 'static> + Sync) = &S1;\n+static sdef_et2: &(dyn Tr1<As1: 'static> + Sync) = &S1;\n+pub fn use_et2() { assert_static(cdef_et2.mk()); assert_static(sdef_et2.mk()); }\n+\n+const cdef_et3: &dyn Tr1<As1: Clone + Iterator<Item: Add<u8, Output: Into<u8>>>> = {\n+    struct A;\n+    impl Tr1 for A {\n+        type As1 = core::ops::Range<u8>;\n+        fn mk(&self) -> Self::As1 { 0..10 }\n+    };\n+    &A\n+};\n+pub fn use_et3() {\n+    let _0 = cdef_et3.mk().clone();\n+    let mut s = 0u8;\n+    for _1 in _0 {\n+        let _2 = _1 + 1u8;\n+        s += _2.into();\n+    }\n+    assert_eq!(s, (0..10).map(|x| x + 1).sum());\n+}\n+\n+const cdef_et4: &(dyn Tr1<As1: for<'a> Tr2<'a>> + Sync) = {\n+    #[derive(Copy, Clone)]\n+    struct A;\n+    impl Tr1 for A {\n+        type As1 = A;\n+        fn mk(&self) -> A { A }\n+    }\n+    impl<'a> Tr2<'a> for A {\n+        fn tr2(self) -> &'a Self { &A }\n+    }\n+    &A\n+};\n+static sdef_et4: &(dyn Tr1<As1: for<'a> Tr2<'a>> + Sync) = cdef_et4;\n+pub fn use_et4() { assert_forall_tr2(cdef_et4.mk()); assert_forall_tr2(sdef_et4.mk()); }\n+\n+fn main() {\n+    let _ = use_et1();\n+    let _ = use_et2();\n+    let _ = use_et3();\n+    let _ = use_et4();\n+}"}]}