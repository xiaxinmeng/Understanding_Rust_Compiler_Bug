{"sha": "fa1f547f82d66f986af2c33220199b042fcb5f99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMWY1NDdmODJkNjZmOTg2YWYyYzMzMjIwMTk5YjA0MmZjYjVmOTk=", "commit": {"author": {"name": "David Ross", "email": "daboross@daboross.net", "date": "2020-02-22T19:36:09Z"}, "committer": {"name": "David Ross", "email": "daboross@daboross.net", "date": "2020-02-22T19:36:09Z"}, "message": "Add more double cast + method call tests", "tree": {"sha": "3562bccb8b0565677473b613a7ed4168dd4a91dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3562bccb8b0565677473b613a7ed4168dd4a91dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa1f547f82d66f986af2c33220199b042fcb5f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa1f547f82d66f986af2c33220199b042fcb5f99", "html_url": "https://github.com/rust-lang/rust/commit/fa1f547f82d66f986af2c33220199b042fcb5f99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa1f547f82d66f986af2c33220199b042fcb5f99/comments", "author": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ef3da0858c5a76fd1756b9efcf82eeb9491fb64", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ef3da0858c5a76fd1756b9efcf82eeb9491fb64", "html_url": "https://github.com/rust-lang/rust/commit/8ef3da0858c5a76fd1756b9efcf82eeb9491fb64"}], "stats": {"total": 127, "additions": 105, "deletions": 22}, "files": [{"sha": "5c6e0ce5024d955f335c7f4ec6b6afaf7391fce7", "filename": "src/test/ui/parser/issue-35813-postfix-after-cast.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fa1f547f82d66f986af2c33220199b042fcb5f99/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa1f547f82d66f986af2c33220199b042fcb5f99/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.rs?ref=fa1f547f82d66f986af2c33220199b042fcb5f99", "patch": "@@ -35,6 +35,29 @@ pub fn cast_after_cast() {\n     let _ = 0i32: i32: i32 as u32 as i32;\n }\n \n+pub fn cast_cast_method_call() {\n+    let _ = 0i32: i32: i32.count_ones();\n+    //~^ ERROR: casts cannot be followed by a method call\n+    let _ = 0 as i32: i32.count_ones();\n+    //~^ ERROR: casts cannot be followed by a method call\n+    let _ = 0i32: i32 as i32.count_ones();\n+    //~^ ERROR: casts cannot be followed by a method call\n+    let _ = 0 as i32 as i32.count_ones();\n+    //~^ ERROR: casts cannot be followed by a method call\n+    let _ = 0i32: i32: i32 as u32 as i32.count_ones();\n+    //~^ ERROR: casts cannot be followed by a method call\n+    let _ = 0i32: i32.count_ones(): u32;\n+    //~^ ERROR: casts cannot be followed by a method call\n+    let _ = 0 as i32.count_ones(): u32;\n+    //~^ ERROR: casts cannot be followed by a method call\n+    let _ = 0i32: i32.count_ones() as u32;\n+    //~^ ERROR: casts cannot be followed by a method call\n+    let _ = 0 as i32.count_ones() as u32;\n+    //~^ ERROR: casts cannot be followed by a method call\n+    let _ = 0i32: i32: i32.count_ones() as u32 as i32;\n+    //~^ ERROR: casts cannot be followed by a method call\n+}\n+\n // this tests that the precedence for `!x as Y.Z` is still what we expect\n pub fn precedence() {\n     let x: i32 = &vec![1, 2, 3] as &Vec<i32>[0];"}, {"sha": "42b614edf7638f068d540626bf8fe282c941a8f5", "filename": "src/test/ui/parser/issue-35813-postfix-after-cast.stderr", "status": "modified", "additions": 82, "deletions": 22, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/fa1f547f82d66f986af2c33220199b042fcb5f99/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa1f547f82d66f986af2c33220199b042fcb5f99/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.stderr?ref=fa1f547f82d66f986af2c33220199b042fcb5f99", "patch": "@@ -22,68 +22,128 @@ error: casts cannot be followed by indexing\n LL |     (&[0i32]): &[i32; 1][0];\n    |     ^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `((&[0i32]): &[i32; 1])`\n \n+error: casts cannot be followed by a method call\n+  --> $DIR/issue-35813-postfix-after-cast.rs:39:13\n+   |\n+LL |     let _ = 0i32: i32: i32.count_ones();\n+   |             ^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32: i32)`\n+\n+error: casts cannot be followed by a method call\n+  --> $DIR/issue-35813-postfix-after-cast.rs:41:13\n+   |\n+LL |     let _ = 0 as i32: i32.count_ones();\n+   |             ^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0 as i32: i32)`\n+\n+error: casts cannot be followed by a method call\n+  --> $DIR/issue-35813-postfix-after-cast.rs:43:13\n+   |\n+LL |     let _ = 0i32: i32 as i32.count_ones();\n+   |             ^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32 as i32)`\n+\n+error: casts cannot be followed by a method call\n+  --> $DIR/issue-35813-postfix-after-cast.rs:45:13\n+   |\n+LL |     let _ = 0 as i32 as i32.count_ones();\n+   |             ^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0 as i32 as i32)`\n+\n+error: casts cannot be followed by a method call\n+  --> $DIR/issue-35813-postfix-after-cast.rs:47:13\n+   |\n+LL |     let _ = 0i32: i32: i32 as u32 as i32.count_ones();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32: i32 as u32 as i32)`\n+\n+error: casts cannot be followed by a method call\n+  --> $DIR/issue-35813-postfix-after-cast.rs:49:13\n+   |\n+LL |     let _ = 0i32: i32.count_ones(): u32;\n+   |             ^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32)`\n+\n+error: casts cannot be followed by a method call\n+  --> $DIR/issue-35813-postfix-after-cast.rs:51:13\n+   |\n+LL |     let _ = 0 as i32.count_ones(): u32;\n+   |             ^^^^^^^^ help: try surrounding the expression in parentheses: `(0 as i32)`\n+\n+error: casts cannot be followed by a method call\n+  --> $DIR/issue-35813-postfix-after-cast.rs:53:13\n+   |\n+LL |     let _ = 0i32: i32.count_ones() as u32;\n+   |             ^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32)`\n+\n+error: casts cannot be followed by a method call\n+  --> $DIR/issue-35813-postfix-after-cast.rs:55:13\n+   |\n+LL |     let _ = 0 as i32.count_ones() as u32;\n+   |             ^^^^^^^^ help: try surrounding the expression in parentheses: `(0 as i32)`\n+\n+error: casts cannot be followed by a method call\n+  --> $DIR/issue-35813-postfix-after-cast.rs:57:13\n+   |\n+LL |     let _ = 0i32: i32: i32.count_ones() as u32 as i32;\n+   |             ^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32: i32)`\n+\n error: casts cannot be followed by indexing\n-  --> $DIR/issue-35813-postfix-after-cast.rs:40:18\n+  --> $DIR/issue-35813-postfix-after-cast.rs:63:18\n    |\n LL |     let x: i32 = &vec![1, 2, 3] as &Vec<i32>[0];\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(&vec![1, 2, 3] as &Vec<i32>)`\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:45:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:68:5\n    |\n LL |     0 as i32.max(0);\n    |     ^^^^^^^^ help: try surrounding the expression in parentheses: `(0 as i32)`\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:47:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:70:5\n    |\n LL |     0: i32.max(0);\n    |     ^^^^^^ help: try surrounding the expression in parentheses: `(0: i32)`\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:62:8\n+  --> $DIR/issue-35813-postfix-after-cast.rs:85:8\n    |\n LL |     if 5u64 as i32.max(0) == 0 {\n    |        ^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(5u64 as i32)`\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:65:8\n+  --> $DIR/issue-35813-postfix-after-cast.rs:88:8\n    |\n LL |     if 5u64: u64.max(0) == 0 {\n    |        ^^^^^^^^^ help: try surrounding the expression in parentheses: `(5u64: u64)`\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:72:9\n+  --> $DIR/issue-35813-postfix-after-cast.rs:95:9\n    |\n LL |         5u64 as u32.max(0) == 0\n    |         ^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(5u64 as u32)`\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:76:9\n+  --> $DIR/issue-35813-postfix-after-cast.rs:99:9\n    |\n LL |         5u64: u64.max(0) == 0\n    |         ^^^^^^^^^ help: try surrounding the expression in parentheses: `(5u64: u64)`\n \n error: casts cannot be followed by indexing\n-  --> $DIR/issue-35813-postfix-after-cast.rs:81:24\n+  --> $DIR/issue-35813-postfix-after-cast.rs:104:24\n    |\n LL | static bar: &[i32] = &(&[1,2,3] as &[i32][0..1]);\n    |                        ^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(&[1,2,3] as &[i32])`\n \n error: casts cannot be followed by indexing\n-  --> $DIR/issue-35813-postfix-after-cast.rs:84:25\n+  --> $DIR/issue-35813-postfix-after-cast.rs:107:25\n    |\n LL | static bar2: &[i32] = &(&[1i32,2,3]: &[i32; 3][0..1]);\n    |                         ^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(&[1i32,2,3]: &[i32; 3])`\n \n error: casts cannot be followed by ?\n-  --> $DIR/issue-35813-postfix-after-cast.rs:89:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:112:5\n    |\n LL |     Err(0u64) as Result<u64,u64>?;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(Err(0u64) as Result<u64,u64>)`\n \n error: casts cannot be followed by ?\n-  --> $DIR/issue-35813-postfix-after-cast.rs:91:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:114:5\n    |\n LL |     Err(0u64): Result<u64,u64>?;\n    |     ^^^^^^^^^-^^^^^^^^^^^^^^^^\n@@ -94,25 +154,25 @@ LL |     Err(0u64): Result<u64,u64>?;\n    = note: see issue #23416 <https://github.com/rust-lang/rust/issues/23416> for more information\n \n error: casts cannot be followed by a function call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:115:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:138:5\n    |\n LL |     drop as fn(u8)(0);\n    |     ^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(drop as fn(u8))`\n \n error: casts cannot be followed by a function call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:117:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:140:5\n    |\n LL |     drop_ptr: fn(u8)(0);\n    |     ^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(drop_ptr: fn(u8))`\n \n error: casts cannot be followed by `.await`\n-  --> $DIR/issue-35813-postfix-after-cast.rs:122:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:145:5\n    |\n LL |     Box::pin(noop()) as Pin<Box<dyn Future<Output = ()>>>.await;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(Box::pin(noop()) as Pin<Box<dyn Future<Output = ()>>>)`\n \n error: casts cannot be followed by `.await`\n-  --> $DIR/issue-35813-postfix-after-cast.rs:125:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:148:5\n    |\n LL |     Box::pin(noop()): Pin<Box<_>>.await;\n    |     ^^^^^^^^^^^^^^^^-^^^^^^^^^^^^\n@@ -123,41 +183,41 @@ LL |     Box::pin(noop()): Pin<Box<_>>.await;\n    = note: see issue #23416 <https://github.com/rust-lang/rust/issues/23416> for more information\n \n error: casts cannot be followed by a field access\n-  --> $DIR/issue-35813-postfix-after-cast.rs:137:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:160:5\n    |\n LL |     Foo::default() as Foo.bar;\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(Foo::default() as Foo)`\n \n error: casts cannot be followed by a field access\n-  --> $DIR/issue-35813-postfix-after-cast.rs:139:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:162:5\n    |\n LL |     Foo::default(): Foo.bar;\n    |     ^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(Foo::default(): Foo)`\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:54:9\n+  --> $DIR/issue-35813-postfix-after-cast.rs:77:9\n    |\n LL |         if true { 33 } else { 44 } as i32.max(0),\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(if true { 33 } else { 44 } as i32)`\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:56:9\n+  --> $DIR/issue-35813-postfix-after-cast.rs:79:9\n    |\n LL |         if true { 33 } else { 44 }: i32.max(0)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(if true { 33 } else { 44 }: i32)`\n \n error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n-  --> $DIR/issue-35813-postfix-after-cast.rs:101:13\n+  --> $DIR/issue-35813-postfix-after-cast.rs:124:13\n    |\n LL |     drop as F();\n    |             ^^^ only `Fn` traits may use parentheses\n \n error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n-  --> $DIR/issue-35813-postfix-after-cast.rs:103:15\n+  --> $DIR/issue-35813-postfix-after-cast.rs:126:15\n    |\n LL |     drop_ptr: F();\n    |               ^^^ only `Fn` traits may use parentheses\n \n-error: aborting due to 25 previous errors\n+error: aborting due to 35 previous errors\n \n For more information about this error, try `rustc --explain E0214`."}]}