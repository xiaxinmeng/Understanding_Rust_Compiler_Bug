{"sha": "9386f05e6d079a7b2a653ae2cf0697f5e9927ef9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzODZmMDVlNmQwNzlhN2IyYTY1M2FlMmNmMDY5N2Y1ZTk5MjdlZjk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-09-04T11:21:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-04T11:21:53Z"}, "message": "Merge pull request #325 from RalfJung/test\n\nUpdate compiletest", "tree": {"sha": "e5b6bd9ee1ce32deec08077bcdb4bb5cbd85689a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5b6bd9ee1ce32deec08077bcdb4bb5cbd85689a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9386f05e6d079a7b2a653ae2cf0697f5e9927ef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9386f05e6d079a7b2a653ae2cf0697f5e9927ef9", "html_url": "https://github.com/rust-lang/rust/commit/9386f05e6d079a7b2a653ae2cf0697f5e9927ef9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9386f05e6d079a7b2a653ae2cf0697f5e9927ef9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff75da278432b48719d9b1c414d4fc48ffed695d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff75da278432b48719d9b1c414d4fc48ffed695d", "html_url": "https://github.com/rust-lang/rust/commit/ff75da278432b48719d9b1c414d4fc48ffed695d"}, {"sha": "8dff161bcb0fa6b65fc7f14524fcbc2b86b179ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dff161bcb0fa6b65fc7f14524fcbc2b86b179ac", "html_url": "https://github.com/rust-lang/rust/commit/8dff161bcb0fa6b65fc7f14524fcbc2b86b179ac"}], "stats": {"total": 28, "additions": 8, "deletions": 20}, "files": [{"sha": "2e0f1e3562ba967f24cad228bdd071f21e285fde", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9386f05e6d079a7b2a653ae2cf0697f5e9927ef9/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9386f05e6d079a7b2a653ae2cf0697f5e9927ef9/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9386f05e6d079a7b2a653ae2cf0697f5e9927ef9", "patch": "@@ -68,11 +68,12 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"compiletest_rs\"\n-version = \"0.2.9\"\n+version = \"0.2.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"tempdir 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -184,12 +185,11 @@ version = \"0.1.0\"\n dependencies = [\n  \"byteorder 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cargo_metadata 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiletest_rs 0.2.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiletest_rs 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"env_logger 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log_settings 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_miri 0.1.0\",\n- \"tempdir 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -349,7 +349,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum byteorder 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ff81738b726f5d099632ceaffe7fb65b90212e8dce59d518729e7e8634032d3d\"\n \"checksum cargo_metadata 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"be1057b8462184f634c3a208ee35b0f935cfd94b694b26deadccd98732088d7b\"\n \"checksum cfg-if 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d4c819a1287eb618df47cc647173c5c4c66ba19d888a6e50d605672aed3140de\"\n-\"checksum compiletest_rs 0.2.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3dc4720203de7b490e2808cad3e9090e8850eed4ecd4176b246551a952f4ead7\"\n+\"checksum compiletest_rs 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2741d378feb7a434dba54228c89a70b4e427fee521de67cdda3750b8a0265f5a\"\n \"checksum conv 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"78ff10625fd0ac447827aa30ea8b861fead473bb60aeb73af6c1c58caf0d1299\"\n \"checksum custom_derive 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ef8ae57c4978a2acd8b869ce6b9ca1dfe817bff704c220209fdef2c0b75a01b9\"\n \"checksum dbghelp-sys 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"97590ba53bcb8ac28279161ca943a924d1fd4a8fb3fa63302591647c4fc5b850\""}, {"sha": "5dbf4521c9885a9fe8f36827c7ad97da407305b6", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9386f05e6d079a7b2a653ae2cf0697f5e9927ef9/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9386f05e6d079a7b2a653ae2cf0697f5e9927ef9/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=9386f05e6d079a7b2a653ae2cf0697f5e9927ef9", "patch": "@@ -10,18 +10,15 @@ build = \"build.rs\"\n [[bin]]\n doc = false\n name = \"miri\"\n-test = false\n path = \"miri/bin/miri.rs\"\n \n [[bin]]\n doc = false\n name = \"cargo-miri\"\n-test = false\n path = \"miri/bin/cargo-miri.rs\"\n required-features = [\"cargo_miri\"]\n \n [lib]\n-test = false\n path = \"miri/lib.rs\"\n \n [dependencies]\n@@ -36,8 +33,7 @@ rustc_miri = { path = \"src/librustc_mir\" }\n cargo_miri = [\"cargo_metadata\"]\n \n [dev-dependencies]\n-compiletest_rs = \"0.2.6\"\n-tempdir = \"0.3\"\n+compiletest_rs = { version = \"0.2.10\", features = [\"tmp\"] }\n \n [workspace]\n exclude = [\"xargo\", \"cargo-miri-test\", \"rustc_tests\"]"}, {"sha": "f9d99206e27816e067f8dd7f07d5cb4f26b52ad9", "filename": "tests/compiletest.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9386f05e6d079a7b2a653ae2cf0697f5e9927ef9/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9386f05e6d079a7b2a653ae2cf0697f5e9927ef9/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=9386f05e6d079a7b2a653ae2cf0697f5e9927ef9", "patch": "@@ -1,12 +1,10 @@\n #![feature(slice_concat_ext)]\n \n extern crate compiletest_rs as compiletest;\n-extern crate tempdir;\n \n use std::slice::SliceConcatExt;\n use std::path::{PathBuf, Path};\n use std::io::Write;\n-use tempdir::TempDir;\n \n macro_rules! eprintln {\n     ($($arg:tt)*) => {\n@@ -37,10 +35,8 @@ fn compile_fail(sysroot: &Path, path: &str, target: &str, host: &str, fullmir: b\n         path,\n         target\n     );\n-    let build_dir = TempDir::new(\"miri-tests\").unwrap();\n-    let mut config = compiletest::Config::default();\n+    let mut config = compiletest::Config::default().tempdir();\n     config.mode = \"compile-fail\".parse().expect(\"Invalid mode\");\n-    config.build_base = build_dir.path().to_owned();\n     config.rustc_path = miri_path();\n     let mut flags = Vec::new();\n     if rustc_test_suite().is_some() {\n@@ -70,10 +66,8 @@ fn compile_fail(sysroot: &Path, path: &str, target: &str, host: &str, fullmir: b\n \n fn run_pass(path: &str) {\n     eprintln!(\"## Running run-pass tests in {} against rustc\", path);\n-    let build_dir = TempDir::new(\"miri-tests\").unwrap();\n-    let mut config = compiletest::Config::default();\n+    let mut config = compiletest::Config::default().tempdir();\n     config.mode = \"run-pass\".parse().expect(\"Invalid mode\");\n-    config.build_base = build_dir.path().to_owned();\n     config.src_base = PathBuf::from(path);\n     if let Some(rustc_path) = rustc_test_suite() {\n         config.rustc_path = rustc_path;\n@@ -95,10 +89,8 @@ fn miri_pass(path: &str, target: &str, host: &str, fullmir: bool, opt: bool) {\n         target,\n         opt_str\n     );\n-    let build_dir = TempDir::new(\"miri-tests\").unwrap();\n-    let mut config = compiletest::Config::default();\n+    let mut config = compiletest::Config::default().tempdir();\n     config.mode = \"mir-opt\".parse().expect(\"Invalid mode\");\n-    config.build_base = build_dir.path().to_owned();\n     config.src_base = PathBuf::from(path);\n     config.target = target.to_owned();\n     config.host = host.to_owned();"}]}