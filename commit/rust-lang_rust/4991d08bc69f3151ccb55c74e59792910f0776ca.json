{"sha": "4991d08bc69f3151ccb55c74e59792910f0776ca", "node_id": "C_kwDOAAsO6NoAKDQ5OTFkMDhiYzY5ZjMxNTFjY2I1NWM3NGU1OTc5MjkxMGYwNzc2Y2E", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-18T15:40:21Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-18T15:40:21Z"}, "message": "Remove incorrect check in lib_call", "tree": {"sha": "057af6b113c396c44b0f1776256ba4661f2bb2da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/057af6b113c396c44b0f1776256ba4661f2bb2da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4991d08bc69f3151ccb55c74e59792910f0776ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4991d08bc69f3151ccb55c74e59792910f0776ca", "html_url": "https://github.com/rust-lang/rust/commit/4991d08bc69f3151ccb55c74e59792910f0776ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4991d08bc69f3151ccb55c74e59792910f0776ca/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90a7ee6c70a3d553ed5fab12a64678b5ca263e94", "url": "https://api.github.com/repos/rust-lang/rust/commits/90a7ee6c70a3d553ed5fab12a64678b5ca263e94", "html_url": "https://github.com/rust-lang/rust/commit/90a7ee6c70a3d553ed5fab12a64678b5ca263e94"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "a713fd6814fbfa96ec26fd8ae59e3c257ebd5594", "filename": "src/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4991d08bc69f3151ccb55c74e59792910f0776ca/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4991d08bc69f3151ccb55c74e59792910f0776ca/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=4991d08bc69f3151ccb55c74e59792910f0776ca", "patch": "@@ -119,9 +119,7 @@ impl<'tcx> FunctionCx<'_, '_, 'tcx> {\n         returns: Vec<AbiParam>,\n         args: &[Value],\n     ) -> Cow<'_, [Value]> {\n-        if self.tcx.sess.target.is_like_windows\n-            && params.iter().any(|param| param.value_type == types::I128)\n-        {\n+        if self.tcx.sess.target.is_like_windows {\n             let (mut params, mut args): (Vec<_>, Vec<_>) =\n                 params\n                     .into_iter()"}]}