{"sha": "5d555bf239b10d375484a41e965d39d27ff61365", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNTU1YmYyMzliMTBkMzc1NDg0YTQxZTk2NWQzOWQyN2ZmNjEzNjU=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-07-04T22:13:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-04T22:13:22Z"}, "message": "Rollup merge of #86477 - tlyu:e0716-clarification, r=JohnTitor\n\nE0716: clarify that equivalent code example is erroneous\n\nIn E0716, there is a code block that is equivalent to the erroneous\ncode example. Especially when viewed with `rustc --explain`, it's\nnot obvious that it is also erroneous, and some users have been\nconfused when they try to change their code to match the erroneous\nequivalent.\n\n`@rustbot` label +A-diagnostics +D-newcomer-roadblock +T-compiler", "tree": {"sha": "c2dc0193402b38352fed4db4e9c77f3fb2b8cab0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2dc0193402b38352fed4db4e9c77f3fb2b8cab0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d555bf239b10d375484a41e965d39d27ff61365", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg4jKDCRBK7hj4Ov3rIwAAltwIAKvumqb37QpTlcWPTR2v16+N\nPHNonyN8hfESe4m/Al4kQiBU1+LSy9A9EzUFc7yt8gl583CEwXIJ6yD5mAlr1bfr\n6XuExwAqJz4JmH7LOKQ2uPibrX8xkDGyXJtsu3dut2GOaew6rgTYM9ON0vW4qd81\nREEDE44bt1l1QFBt2gEc5/5cjkHQuKZf3mO3iDzVxSPixRp0GtV9x2cl7Q0F2ZVq\n8cCF91QlQB99sfNaJfkR354heI881kETFfzoHEDtiTzy+zmsswigG+Vn7pvecIA4\nK0CuLqSQ23DdNhc9ROFMx6g081qEn6qnQ7ux4J0zN1wbGKVFFJWX6Vk8lWHoMLo=\n=FXew\n-----END PGP SIGNATURE-----\n", "payload": "tree c2dc0193402b38352fed4db4e9c77f3fb2b8cab0\nparent 23c652dfe3043369e6f23a79f8efb77f391c0e64\nparent 92197a551f8210d9f7d8658f60d738e4ea3c7dd6\nauthor Yuki Okushi <jtitor@2k36.org> 1625436802 +0900\ncommitter GitHub <noreply@github.com> 1625436802 +0900\n\nRollup merge of #86477 - tlyu:e0716-clarification, r=JohnTitor\n\nE0716: clarify that equivalent code example is erroneous\n\nIn E0716, there is a code block that is equivalent to the erroneous\ncode example. Especially when viewed with `rustc --explain`, it's\nnot obvious that it is also erroneous, and some users have been\nconfused when they try to change their code to match the erroneous\nequivalent.\n\n`@rustbot` label +A-diagnostics +D-newcomer-roadblock +T-compiler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d555bf239b10d375484a41e965d39d27ff61365", "html_url": "https://github.com/rust-lang/rust/commit/5d555bf239b10d375484a41e965d39d27ff61365", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d555bf239b10d375484a41e965d39d27ff61365/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23c652dfe3043369e6f23a79f8efb77f391c0e64", "url": "https://api.github.com/repos/rust-lang/rust/commits/23c652dfe3043369e6f23a79f8efb77f391c0e64", "html_url": "https://github.com/rust-lang/rust/commit/23c652dfe3043369e6f23a79f8efb77f391c0e64"}, {"sha": "92197a551f8210d9f7d8658f60d738e4ea3c7dd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/92197a551f8210d9f7d8658f60d738e4ea3c7dd6", "html_url": "https://github.com/rust-lang/rust/commit/92197a551f8210d9f7d8658f60d738e4ea3c7dd6"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "c3546cd744f7b6be9527aa18cfc3eb1d0805aa74", "filename": "compiler/rustc_error_codes/src/error_codes/E0716.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5d555bf239b10d375484a41e965d39d27ff61365/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0716.md", "raw_url": "https://github.com/rust-lang/rust/raw/5d555bf239b10d375484a41e965d39d27ff61365/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0716.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0716.md?ref=5d555bf239b10d375484a41e965d39d27ff61365", "patch": "@@ -14,14 +14,16 @@ Here, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\n a call to a function, and not the name of a variable, this creates a\n **temporary** -- that temporary stores the return value from `foo()` so that it\n can be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\n-this:\n+the following, which uses an explicit temporary variable.\n+\n+Erroneous code example:\n \n ```compile_fail,E0597\n # fn foo() -> i32 { 22 }\n # fn bar(x: &i32) -> &i32 { x }\n let p = {\n   let tmp = foo(); // the temporary\n-  bar(&tmp)\n+  bar(&tmp) // error: `tmp` does not live long enough\n }; // <-- tmp is freed as we exit this block\n let q = p;\n ```"}]}