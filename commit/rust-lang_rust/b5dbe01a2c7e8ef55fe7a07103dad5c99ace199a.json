{"sha": "b5dbe01a2c7e8ef55fe7a07103dad5c99ace199a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ZGJlMDFhMmM3ZThlZjU1ZmU3YTA3MTAzZGFkNWM5OWFjZTE5OWE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-17T02:27:16Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-17T05:04:40Z"}, "message": "Refactor away `ast::Decl` and refactor `ast::Stmt`", "tree": {"sha": "575a7798c96648639aff8c1a3eab1bc84db08ce3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/575a7798c96648639aff8c1a3eab1bc84db08ce3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5dbe01a2c7e8ef55fe7a07103dad5c99ace199a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5dbe01a2c7e8ef55fe7a07103dad5c99ace199a", "html_url": "https://github.com/rust-lang/rust/commit/b5dbe01a2c7e8ef55fe7a07103dad5c99ace199a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5dbe01a2c7e8ef55fe7a07103dad5c99ace199a/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "114be1e9f0db2c84e38b5ed96d4e4450771e8a44", "url": "https://api.github.com/repos/rust-lang/rust/commits/114be1e9f0db2c84e38b5ed96d4e4450771e8a44", "html_url": "https://github.com/rust-lang/rust/commit/114be1e9f0db2c84e38b5ed96d4e4450771e8a44"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "afda1a7eb9202efe059c487c43b9a1c85375d8c6", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b5dbe01a2c7e8ef55fe7a07103dad5c99ace199a/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5dbe01a2c7e8ef55fe7a07103dad5c99ace199a/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=b5dbe01a2c7e8ef55fe7a07103dad5c99ace199a", "patch": "@@ -786,7 +786,12 @@ impl UnOp {\n }\n \n /// A statement\n-pub type Stmt = Spanned<StmtKind>;\n+#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]\n+pub struct Stmt {\n+    pub id: NodeId,\n+    pub node: StmtKind,\n+    pub span: Span,\n+}\n \n impl fmt::Debug for Stmt {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -800,16 +805,19 @@ impl fmt::Debug for Stmt {\n \n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]\n pub enum StmtKind {\n-    /// Could be an item or a local (let) binding:\n-    Decl(P<Decl>, NodeId),\n+    /// A local (let) binding:\n+    Local(P<Local>),\n+\n+    /// An item binding\n+    Item(P<Item>),\n \n     /// Expr without trailing semi-colon (must have unit type):\n-    Expr(P<Expr>, NodeId),\n+    Expr(P<Expr>),\n \n     /// Expr with trailing semi-colon (may have any type):\n-    Semi(P<Expr>, NodeId),\n+    Semi(P<Expr>),\n \n-    Mac(P<Mac>, MacStmtStyle, ThinAttributes),\n+    Mac(P<(Mac, MacStmtStyle, ThinAttributes)>),\n }\n \n impl StmtKind {\n@@ -860,16 +868,6 @@ impl Local {\n     }\n }\n \n-pub type Decl = Spanned<DeclKind>;\n-\n-#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\n-pub enum DeclKind {\n-    /// A local (let) binding:\n-    Local(P<Local>),\n-    /// An item binding:\n-    Item(P<Item>),\n-}\n-\n impl Decl {\n     pub fn attrs(&self) -> &[Attribute] {\n         HasAttrs::attrs(self)"}]}