{"sha": "bb77336c0a6708bdebcbf3a1df19b258919b582e", "node_id": "C_kwDOAAsO6NoAKGJiNzczMzZjMGE2NzA4YmRlYmNiZjNhMWRmMTliMjU4OTE5YjU4MmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-17T10:32:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-17T10:32:48Z"}, "message": "Rollup merge of #99972 - RalfJung:1zst, r=lcnr\n\ninterpret: only consider 1-ZST when searching for receiver\n\n`repr(transparent)` currently entirely rejects ZST with alignment larger than 1 (which is odd, arguably [this](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=02870f29396fa948c3123cb53d869ad1) should be accepted), so this should be safe. And if it ever isn't safe then that is very likely a bug elsewhere in the compiler.", "tree": {"sha": "dc1dae203452c6d167b38fbde200457fbe50129e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc1dae203452c6d167b38fbde200457fbe50129e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb77336c0a6708bdebcbf3a1df19b258919b582e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi/MPQCRBK7hj4Ov3rIwAAiAcIADxubFmGN8sCBEpAMobGgZrw\njf23u8SgyICaSqwROrUnuEKwaTOiz1G/+stpLa3rR+z5REeBp9pdwApQrQYhQTgG\nmjooUgWqg33PgJL+4jWEP8/PYPQkiPghAcKoK1/hQhQ5iJskYAmmHkSvMJJjSpvn\nSh1HPNuhkYXgta69xrEp08WLZmzQ3xaOj4gL9oPrMZO3dW+iOs7TVsESD5OT2tQZ\nUCVX8+tSfmdBumQNzv7P+ROI8CdJXNtZL9yozR1zHfQRsEghmrai/r565aEvtbrM\nyO+LqPwYYv/L/1J2DrFG0BOd8i8ZWY0iyxGPWvxRcCMCUPmT26uZrl+DFMwcnOY=\n=ICi7\n-----END PGP SIGNATURE-----\n", "payload": "tree dc1dae203452c6d167b38fbde200457fbe50129e\nparent 0491fdad6f0c039dcfbf6543be6397df763cb8ab\nparent 5798555812228600a27fa3d3b2c20b422c6d97c7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1660732368 +0200\ncommitter GitHub <noreply@github.com> 1660732368 +0200\n\nRollup merge of #99972 - RalfJung:1zst, r=lcnr\n\ninterpret: only consider 1-ZST when searching for receiver\n\n`repr(transparent)` currently entirely rejects ZST with alignment larger than 1 (which is odd, arguably [this](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=02870f29396fa948c3123cb53d869ad1) should be accepted), so this should be safe. And if it ever isn't safe then that is very likely a bug elsewhere in the compiler.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb77336c0a6708bdebcbf3a1df19b258919b582e", "html_url": "https://github.com/rust-lang/rust/commit/bb77336c0a6708bdebcbf3a1df19b258919b582e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb77336c0a6708bdebcbf3a1df19b258919b582e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0491fdad6f0c039dcfbf6543be6397df763cb8ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/0491fdad6f0c039dcfbf6543be6397df763cb8ab", "html_url": "https://github.com/rust-lang/rust/commit/0491fdad6f0c039dcfbf6543be6397df763cb8ab"}, {"sha": "5798555812228600a27fa3d3b2c20b422c6d97c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5798555812228600a27fa3d3b2c20b422c6d97c7", "html_url": "https://github.com/rust-lang/rust/commit/5798555812228600a27fa3d3b2c20b422c6d97c7"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "c8557d172ed4370cc0aaeb843b1e6ee15dcaa402", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb77336c0a6708bdebcbf3a1df19b258919b582e/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb77336c0a6708bdebcbf3a1df19b258919b582e/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=bb77336c0a6708bdebcbf3a1df19b258919b582e", "patch": "@@ -534,7 +534,9 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                             let mut non_zst_field = None;\n                             for i in 0..receiver.layout.fields.count() {\n                                 let field = self.operand_field(&receiver, i)?;\n-                                if !field.layout.is_zst() {\n+                                let zst =\n+                                    field.layout.is_zst() && field.layout.align.abi.bytes() == 1;\n+                                if !zst {\n                                     assert!(\n                                         non_zst_field.is_none(),\n                                         \"multiple non-ZST fields in dyn receiver type {}\","}]}