{"sha": "427c5487493fbd5e96e81b7d3ba54784e0805df7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyN2M1NDg3NDkzZmJkNWU5NmU4MWI3ZDNiYTU0Nzg0ZTA4MDVkZjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-03T05:38:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-03T05:38:11Z"}, "message": "Auto merge of #50378 - varkor:repr-align-max-29, r=eddyb\n\nReduce maximum repr(align(N)) to 2^29\n\nThe current maximum `repr(align(N))` alignment is larger than the maximum alignment accepted by LLVM, which can cause issues for huge values of `N`, as seen in #49492. Fixes #49492.\n\nr? @rkruppe", "tree": {"sha": "6183280d82aae03bb9f5129ff3c4774ce3b7de60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6183280d82aae03bb9f5129ff3c4774ce3b7de60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/427c5487493fbd5e96e81b7d3ba54784e0805df7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/427c5487493fbd5e96e81b7d3ba54784e0805df7", "html_url": "https://github.com/rust-lang/rust/commit/427c5487493fbd5e96e81b7d3ba54784e0805df7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/427c5487493fbd5e96e81b7d3ba54784e0805df7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e3cbbb60a2a00a5fcce8c150c3e8fe5f3209e26", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e3cbbb60a2a00a5fcce8c150c3e8fe5f3209e26", "html_url": "https://github.com/rust-lang/rust/commit/9e3cbbb60a2a00a5fcce8c150c3e8fe5f3209e26"}, {"sha": "cd2f5f7d977936c409f4bec28075c8918e239f4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd2f5f7d977936c409f4bec28075c8918e239f4c", "html_url": "https://github.com/rust-lang/rust/commit/cd2f5f7d977936c409f4bec28075c8918e239f4c"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "fd1f779f9ecc06168ee635e11907d2b576ed2dda", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/427c5487493fbd5e96e81b7d3ba54784e0805df7/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/427c5487493fbd5e96e81b7d3ba54784e0805df7/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=427c5487493fbd5e96e81b7d3ba54784e0805df7", "patch": "@@ -326,9 +326,9 @@ impl AddAssign for Size {\n }\n \n /// Alignment of a type in bytes, both ABI-mandated and preferred.\n-/// Each field is a power of two, giving the alignment a maximum value of\n-/// 2<sup>(2<sup>8</sup> - 1)</sup>, which is limited by LLVM to a i32,\n-/// with a maximum capacity of 2<sup>31</sup> - 1 or 2147483647.\n+/// Each field is a power of two, giving the alignment a maximum value\n+/// of 2<sup>(2<sup>8</sup> - 1)</sup>, which is limited by LLVM to a\n+/// maximum capacity of 2<sup>29</sup> or 536870912.\n #[derive(Copy, Clone, PartialEq, Eq, Hash, Debug, RustcEncodable, RustcDecodable)]\n pub struct Align {\n     abi_pow2: u8,\n@@ -356,7 +356,7 @@ impl Align {\n             }\n             if bytes != 1 {\n                 Err(format!(\"`{}` is not a power of 2\", align))\n-            } else if pow > 30 {\n+            } else if pow > 29 {\n                 Err(format!(\"`{}` is too large\", align))\n             } else {\n                 Ok(pow)"}, {"sha": "13f8bb9a31831afbd3c31e9459dd318247b1bfb9", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/427c5487493fbd5e96e81b7d3ba54784e0805df7/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/427c5487493fbd5e96e81b7d3ba54784e0805df7/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=427c5487493fbd5e96e81b7d3ba54784e0805df7", "patch": "@@ -1012,11 +1012,11 @@ pub fn find_repr_attrs(diagnostic: &Handler, attr: &Attribute) -> Vec<ReprAttr>\n                     let parse_alignment = |node: &ast::LitKind| -> Result<u32, &'static str> {\n                         if let ast::LitKind::Int(literal, ast::LitIntType::Unsuffixed) = node {\n                             if literal.is_power_of_two() {\n-                                // rustc::ty::layout::Align restricts align to <= 2147483647\n-                                if *literal <= 2147483647 {\n+                                // rustc::ty::layout::Align restricts align to <= 2^29\n+                                if *literal <= 1 << 29 {\n                                     Ok(*literal as u32)\n                                 } else {\n-                                    Err(\"larger than 2147483647\")\n+                                    Err(\"larger than 2^29\")\n                                 }\n                             } else {\n                                 Err(\"not a power of two\")"}, {"sha": "d1f123f6f6c77720cad3104c2f038800ca77e1d3", "filename": "src/libsyntax/diagnostic_list.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/427c5487493fbd5e96e81b7d3ba54784e0805df7/src%2Flibsyntax%2Fdiagnostic_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/427c5487493fbd5e96e81b7d3ba54784e0805df7/src%2Flibsyntax%2Fdiagnostic_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic_list.rs?ref=427c5487493fbd5e96e81b7d3ba54784e0805df7", "patch": "@@ -244,6 +244,18 @@ fn main() {\n ```\n \"##,\n \n+E0589: r##\"\n+The value of `N` that was specified for `repr(align(N))` was not a power\n+of two, or was greater than 2^29.\n+\n+```compile_fail,E0589\n+#[repr(align(15))] // error: invalid `repr(align)` attribute: not a power of two\n+enum Foo {\n+    Bar(u64),\n+}\n+```\n+\"##,\n+\n E0658: r##\"\n An unstable feature was used.\n \n@@ -321,7 +333,6 @@ register_diagnostics! {\n     E0555, // malformed feature attribute, expected #![feature(...)]\n     E0556, // malformed feature, expected just one word\n     E0584, // file for module `..` found at both .. and ..\n-    E0589, // invalid `repr(align)` attribute\n     E0629, // missing 'feature' (rustc_const_unstable)\n     E0630, // rustc_const_unstable attribute must be paired with stable/unstable attribute\n     E0693, // incorrect `repr(align)` attribute format"}, {"sha": "9b0408de2a4fc8628fc4e9e8e78691debeedf08a", "filename": "src/test/compile-fail/repr-align.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/427c5487493fbd5e96e81b7d3ba54784e0805df7/src%2Ftest%2Fcompile-fail%2Frepr-align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/427c5487493fbd5e96e81b7d3ba54784e0805df7/src%2Ftest%2Fcompile-fail%2Frepr-align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frepr-align.rs?ref=427c5487493fbd5e96e81b7d3ba54784e0805df7", "patch": "@@ -15,7 +15,10 @@ struct A(i32);\n #[repr(align(15))] //~ ERROR: invalid `repr(align)` attribute: not a power of two\n struct B(i32);\n \n-#[repr(align(4294967296))] //~ ERROR: invalid `repr(align)` attribute: larger than 2147483647\n+#[repr(align(4294967296))] //~ ERROR: invalid `repr(align)` attribute: larger than 2^29\n struct C(i32);\n \n+#[repr(align(536870912))] // ok: this is the largest accepted alignment\n+struct D(i32);\n+\n fn main() {}"}]}