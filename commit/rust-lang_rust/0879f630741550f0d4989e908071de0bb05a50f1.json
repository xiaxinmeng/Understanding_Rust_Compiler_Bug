{"sha": "0879f630741550f0d4989e908071de0bb05a50f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NzlmNjMwNzQxNTUwZjBkNDk4OWU5MDgwNzFkZTBiYjA1YTUwZjE=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-18T05:05:14Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-18T05:05:14Z"}, "message": "Remove `Copy` and `Clone` impls for `LocalInternedString`.\n\nThey aren't used.", "tree": {"sha": "bb5b81f90771bbd69bd00bab1edd9a3300f93205", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb5b81f90771bbd69bd00bab1edd9a3300f93205"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0879f630741550f0d4989e908071de0bb05a50f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0879f630741550f0d4989e908071de0bb05a50f1", "html_url": "https://github.com/rust-lang/rust/commit/0879f630741550f0d4989e908071de0bb05a50f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0879f630741550f0d4989e908071de0bb05a50f1/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3532863a96499df049589aa5120db149498ab544", "url": "https://api.github.com/repos/rust-lang/rust/commits/3532863a96499df049589aa5120db149498ab544", "html_url": "https://github.com/rust-lang/rust/commit/3532863a96499df049589aa5120db149498ab544"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "fa9567fb62c0f8487f426e5a1a693eb41706f317", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0879f630741550f0d4989e908071de0bb05a50f1/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0879f630741550f0d4989e908071de0bb05a50f1/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=0879f630741550f0d4989e908071de0bb05a50f1", "patch": "@@ -1106,8 +1106,8 @@ fn with_interner<T, F: FnOnce(&mut Interner) -> T>(f: F) -> T {\n }\n \n /// An alternative to `Symbol` and `InternedString`, useful when the chars\n-/// within the symbol need to be accessed. It is best used for temporary\n-/// values.\n+/// within the symbol need to be accessed. It deliberately has limited\n+/// functionality and should only be used for temporary values.\n ///\n /// Because the interner outlives any thread which uses this type, we can\n /// safely treat `string` which points to interner data, as an immortal string,\n@@ -1116,7 +1116,7 @@ fn with_interner<T, F: FnOnce(&mut Interner) -> T>(f: F) -> T {\n // FIXME: ensure that the interner outlives any thread which uses\n // `LocalInternedString`, by creating a new thread right after constructing the\n // interner.\n-#[derive(Clone, Copy, Eq, PartialOrd, Ord)]\n+#[derive(Eq, PartialOrd, Ord)]\n pub struct LocalInternedString {\n     string: &'static str,\n }"}]}