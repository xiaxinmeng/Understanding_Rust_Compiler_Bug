{"sha": "c0263fb07a78e83a76edbf578447d20994c38f8d", "node_id": "C_kwDOAAsO6NoAKGMwMjYzZmIwN2E3OGU4M2E3NmVkYmY1Nzg0NDdkMjA5OTRjMzhmOGQ", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-10-12T12:24:42Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-10-12T15:05:58Z"}, "message": "impl PartialOrd codegen for struct records", "tree": {"sha": "89fe04d05c28b0014ec7d0c561ac56d045270b17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89fe04d05c28b0014ec7d0c561ac56d045270b17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0263fb07a78e83a76edbf578447d20994c38f8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0263fb07a78e83a76edbf578447d20994c38f8d", "html_url": "https://github.com/rust-lang/rust/commit/c0263fb07a78e83a76edbf578447d20994c38f8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0263fb07a78e83a76edbf578447d20994c38f8d/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6941fdc49f0cc68955c07c80f0817b991f4dc495", "url": "https://api.github.com/repos/rust-lang/rust/commits/6941fdc49f0cc68955c07c80f0817b991f4dc495", "html_url": "https://github.com/rust-lang/rust/commit/6941fdc49f0cc68955c07c80f0817b991f4dc495"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "27bba8732ffdfe9453a8b1a34485ee963a00e6d4", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c0263fb07a78e83a76edbf578447d20994c38f8d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0263fb07a78e83a76edbf578447d20994c38f8d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=c0263fb07a78e83a76edbf578447d20994c38f8d", "patch": "@@ -712,6 +712,35 @@ impl PartialOrd for Foo {\n         )\n     }\n \n+    #[test]\n+    fn add_custom_impl_partial_ord_tuple_struct() {\n+        check_assist(\n+            replace_derive_with_manual_impl,\n+            r#\"\n+//- minicore: ord\n+#[derive(Partial$0Ord)]\n+struct Foo(usize, usize, usize);\n+\"#,\n+            r#\"\n+struct Foo(usize, usize, usize);\n+\n+impl PartialOrd for Foo {\n+    $0fn partial_cmp(&self, other: &Self) -> Option<core::cmp::Ordering> {\n+        match self.0.partial_cmp(other.0) {\n+            Some(core::cmp::Ordering::Eq) => {}\n+            ord => return ord,\n+        }\n+        match self.1.partial_cmp(other.1) {\n+            Some(core::cmp::Ordering::Eq) => {}\n+            ord => return ord,\n+        }\n+        self.2.partial_cmp(other.2)\n+    }\n+}\n+\"#,\n+        )\n+    }\n+\n     #[test]\n     fn add_custom_impl_partial_eq_record_struct() {\n         check_assist("}, {"sha": "d9a3d23eb5c536688c37800d497cf02c7f42c4aa", "filename": "crates/ide_assists/src/utils/gen_trait_fn_body.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c0263fb07a78e83a76edbf578447d20994c38f8d/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0263fb07a78e83a76edbf578447d20994c38f8d/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs?ref=c0263fb07a78e83a76edbf578447d20994c38f8d", "patch": "@@ -594,7 +594,6 @@ fn gen_partial_ord(adt: &ast::Adt, func: &ast::Fn) -> Option<()> {\n             None,\n             make::expr_return(Some(make::expr_path(make::ext::ident_path(\"ord\")))),\n         ));\n-        // let rhs = make::expr_path(make::ext::ident_path(\"other\"));\n         let list = make::match_arm_list(arms).indent(ast::edit::IndentLevel(1));\n         Some(make::expr_stmt(make::expr_match(match_target, list)).into())\n     }\n@@ -742,17 +741,22 @@ fn gen_partial_ord(adt: &ast::Adt, func: &ast::Fn) -> Option<()> {\n             }\n \n             Some(ast::FieldList::TupleFieldList(field_list)) => {\n-                let mut expr = None;\n+                let mut exprs = vec![];\n                 for (i, _) in field_list.fields().enumerate() {\n                     let idx = format!(\"{}\", i);\n                     let lhs = make::expr_path(make::ext::ident_path(\"self\"));\n                     let lhs = make::expr_field(lhs, &idx);\n                     let rhs = make::expr_path(make::ext::ident_path(\"other\"));\n                     let rhs = make::expr_field(rhs, &idx);\n-                    let cmp = make::expr_op(ast::BinOp::EqualityTest, lhs, rhs);\n-                    expr = gen_eq_chain(expr, cmp);\n+                    let ord = gen_partial_cmp_call(lhs, rhs);\n+                    exprs.push(ord);\n                 }\n-                make::block_expr(None, expr).indent(ast::edit::IndentLevel(1))\n+                let tail = exprs.pop();\n+                let stmts = exprs\n+                    .into_iter()\n+                    .map(gen_partial_eq_match)\n+                    .collect::<Option<Vec<ast::Stmt>>>()?;\n+                make::block_expr(stmts.into_iter(), tail).indent(ast::edit::IndentLevel(1))\n             }\n \n             // No fields in the body means there's nothing to hash."}]}