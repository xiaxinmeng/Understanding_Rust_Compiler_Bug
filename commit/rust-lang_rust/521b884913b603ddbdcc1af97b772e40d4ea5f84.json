{"sha": "521b884913b603ddbdcc1af97b772e40d4ea5f84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMWI4ODQ5MTNiNjAzZGRiZGNjMWFmOTdiNzcyZTQwZDRlYTVmODQ=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-11-27T16:43:03Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-12-23T18:35:22Z"}, "message": "bootstrap: convert clippy to use Tarball", "tree": {"sha": "94ec3603f28e554919b4ea5189cc226094aeccdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94ec3603f28e554919b4ea5189cc226094aeccdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/521b884913b603ddbdcc1af97b772e40d4ea5f84", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl/jjfcACgkQPgar6Auq\n8ZwPvg/+OmxeokK4Cr7E4OMBXOmWpg8otAn0ifUnSqX8ZXyfXb6JVSaYgiUYGkSd\nxeWXpNlOcvtQ5J1WWPzZFvMecRUWysxei8uE/djAGTyIaTZe5CIBjr+OJ3YSsnGX\nnmyvaXnTUt05YgadnNmkqCigPA8O92HGxZLWe0UlB+6fADO7cBZB/JDv5mCvq8cq\nXg7jzjMf1kBBAOp2QLLzS3o+MY6o0i0/oeFBJz6B4xmLX0iZAKpcJrD2z7pU8PMN\nLnSTSOVRyTTFoKgNXXhAaTeUQR/r0siFCkmYPNJEdURZcFHnDvTlUm6MftvWYF+4\nzAt75gbRBRLTeKYmzrgoyIiLBO0LjhvWQTd1m9TmYn1NMtjZOGRpCo5lZWBe7FEn\nt1qsUlRDvjnbRnZWz+vHhyBU3OHSpvkxdXp/ZYtVjvUzMB+gfPFa51qKSw/RvXHM\n1At4LxLbtUJW5ySw6nLnYHuxTEcqzQO1csLM+5OskLHqL8kWA30c9YkrwVVYmyqV\nEYlGBhcjfOXKmQE6l7d7UoyaOQ37ASLJz+ZR0Lv1n3dELgMyK/O52e9X1YmqDVIx\nRoUYpm8nr8nlY4zXPREWRVMEJgm3TvPN7ZpERO1ydpYGmbzzWvtIIv/ns+eFrwXA\nUTxyDGcUI91cZCS9WEtA/aX4AZaFans1JbLrS8vqIc0KdY7618E=\n=Y1lB\n-----END PGP SIGNATURE-----", "payload": "tree 94ec3603f28e554919b4ea5189cc226094aeccdc\nparent 8a711a00a7f0cd5470255a65a711d47e46d46c14\nauthor Pietro Albini <pietro@pietroalbini.org> 1606495383 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1608748522 +0100\n\nbootstrap: convert clippy to use Tarball\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/521b884913b603ddbdcc1af97b772e40d4ea5f84", "html_url": "https://github.com/rust-lang/rust/commit/521b884913b603ddbdcc1af97b772e40d4ea5f84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/521b884913b603ddbdcc1af97b772e40d4ea5f84/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a711a00a7f0cd5470255a65a711d47e46d46c14", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a711a00a7f0cd5470255a65a711d47e46d46c14", "html_url": "https://github.com/rust-lang/rust/commit/8a711a00a7f0cd5470255a65a711d47e46d46c14"}], "stats": {"total": 67, "additions": 19, "deletions": 48}, "files": [{"sha": "47ad8fae26b1d59b33fd682c34182123049fe136", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 10, "deletions": 48, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/521b884913b603ddbdcc1af97b772e40d4ea5f84/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/521b884913b603ddbdcc1af97b772e40d4ea5f84/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=521b884913b603ddbdcc1af97b772e40d4ea5f84", "patch": "@@ -1256,16 +1256,6 @@ impl Step for Clippy {\n         let target = self.target;\n         assert!(builder.config.extended);\n \n-        let src = builder.src.join(\"src/tools/clippy\");\n-        let release_num = builder.release_num(\"clippy\");\n-        let name = pkgname(builder, \"clippy\");\n-        let version = builder.clippy_info.version(builder, &release_num);\n-\n-        let tmp = tmpdir(builder);\n-        let image = tmp.join(\"clippy-image\");\n-        drop(fs::remove_dir_all(&image));\n-        builder.create_dir(&image);\n-\n         // Prepare the image directory\n         // We expect clippy to build, because we've exited this step above if tool\n         // state for clippy isn't testing.\n@@ -1275,45 +1265,17 @@ impl Step for Clippy {\n         let cargoclippy = builder\n             .ensure(tool::CargoClippy { compiler, target, extra_features: Vec::new() })\n             .expect(\"clippy expected to build - essential tool\");\n+        let src = builder.src.join(\"src/tools/clippy\");\n \n-        builder.install(&clippy, &image.join(\"bin\"), 0o755);\n-        builder.install(&cargoclippy, &image.join(\"bin\"), 0o755);\n-        let doc = image.join(\"share/doc/clippy\");\n-        builder.install(&src.join(\"README.md\"), &doc, 0o644);\n-        builder.install(&src.join(\"LICENSE-APACHE\"), &doc, 0o644);\n-        builder.install(&src.join(\"LICENSE-MIT\"), &doc, 0o644);\n-\n-        // Prepare the overlay\n-        let overlay = tmp.join(\"clippy-overlay\");\n-        drop(fs::remove_dir_all(&overlay));\n-        t!(fs::create_dir_all(&overlay));\n-        builder.install(&src.join(\"README.md\"), &overlay, 0o644);\n-        builder.install(&src.join(\"LICENSE-APACHE\"), &doc, 0o644);\n-        builder.install(&src.join(\"LICENSE-MIT\"), &doc, 0o644);\n-        builder.create(&overlay.join(\"version\"), &version);\n-\n-        // Generate the installer tarball\n-        let mut cmd = rust_installer(builder);\n-        cmd.arg(\"generate\")\n-            .arg(\"--product-name=Rust\")\n-            .arg(\"--rel-manifest-dir=rustlib\")\n-            .arg(\"--success-message=clippy-ready-to-serve.\")\n-            .arg(\"--image-dir\")\n-            .arg(&image)\n-            .arg(\"--work-dir\")\n-            .arg(&tmpdir(builder))\n-            .arg(\"--output-dir\")\n-            .arg(&distdir(builder))\n-            .arg(\"--non-installed-overlay\")\n-            .arg(&overlay)\n-            .arg(format!(\"--package-name={}-{}\", name, target.triple))\n-            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n-            .arg(\"--component-name=clippy-preview\");\n-\n-        builder.info(&format!(\"Dist clippy stage{} ({})\", compiler.stage, target));\n-        let _time = timeit(builder);\n-        builder.run(&mut cmd);\n-        distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target.triple))\n+        let mut tarball = Tarball::new(builder, \"clippy\", &target.triple);\n+        tarball.set_overlay(OverlayKind::Clippy);\n+        tarball.is_preview(true);\n+        tarball.add_file(clippy, \"bin\", 0o755);\n+        tarball.add_file(cargoclippy, \"bin\", 0o755);\n+        tarball.add_file(src.join(\"README.md\"), \"share/doc/clippy\", 0o644);\n+        tarball.add_file(src.join(\"LICENSE-APACHE\"), \"share/doc/clippy\", 0o644);\n+        tarball.add_file(src.join(\"LICENSE-MIT\"), \"share/doc/clippy\", 0o644);\n+        tarball.generate()\n     }\n }\n "}, {"sha": "c0c84222e7dd8347e30daf2b9cb24ef21d3a4528", "filename": "src/bootstrap/tarball.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/521b884913b603ddbdcc1af97b772e40d4ea5f84/src%2Fbootstrap%2Ftarball.rs", "raw_url": "https://github.com/rust-lang/rust/raw/521b884913b603ddbdcc1af97b772e40d4ea5f84/src%2Fbootstrap%2Ftarball.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftarball.rs?ref=521b884913b603ddbdcc1af97b772e40d4ea5f84", "patch": "@@ -9,6 +9,7 @@ pub(crate) enum OverlayKind {\n     Rust,\n     LLVM,\n     Cargo,\n+    Clippy,\n }\n \n impl OverlayKind {\n@@ -24,6 +25,11 @@ impl OverlayKind {\n                 \"src/tools/cargo/LICENSE-APACHE\",\n                 \"src/tools/cargo/LICENSE-THIRD-PARTY\",\n             ],\n+            OverlayKind::Clippy => &[\n+                \"src/tools/clippy/README.md\",\n+                \"src/tools/clippy/LICENSE-APACHE\",\n+                \"src/tools/clippy/LICENSE-MIT\",\n+            ],\n         }\n     }\n \n@@ -34,6 +40,9 @@ impl OverlayKind {\n             OverlayKind::Cargo => {\n                 builder.cargo_info.version(builder, &builder.release_num(\"cargo\"))\n             }\n+            OverlayKind::Clippy => {\n+                builder.clippy_info.version(builder, &builder.release_num(\"clippy\"))\n+            }\n         }\n     }\n }"}]}