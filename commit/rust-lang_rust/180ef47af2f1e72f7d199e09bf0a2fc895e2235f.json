{"sha": "180ef47af2f1e72f7d199e09bf0a2fc895e2235f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MGVmNDdhZjJmMWU3MmY3ZDE5OWUwOWJmMGEyZmM4OTVlMjIzNWY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-24T17:34:39Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-01T10:16:11Z"}, "message": "Add regression tests for issue 22443.\n\nFix #22443.", "tree": {"sha": "66df24ef8fbf694a1f39e28eb8ebcf2d990dd415", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66df24ef8fbf694a1f39e28eb8ebcf2d990dd415"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/180ef47af2f1e72f7d199e09bf0a2fc895e2235f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/180ef47af2f1e72f7d199e09bf0a2fc895e2235f", "html_url": "https://github.com/rust-lang/rust/commit/180ef47af2f1e72f7d199e09bf0a2fc895e2235f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/180ef47af2f1e72f7d199e09bf0a2fc895e2235f/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ef618210232397474a5cf2c7d863e11b07511f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ef618210232397474a5cf2c7d863e11b07511f5", "html_url": "https://github.com/rust-lang/rust/commit/5ef618210232397474a5cf2c7d863e11b07511f5"}], "stats": {"total": 174, "additions": 174, "deletions": 0}, "files": [{"sha": "f09688538198905d2ba88ccfb823c1d76941ca26", "filename": "src/test/compile-fail/dropck_no_diverge_on_nonregular_1.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/180ef47af2f1e72f7d199e09bf0a2fc895e2235f/src%2Ftest%2Fcompile-fail%2Fdropck_no_diverge_on_nonregular_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/180ef47af2f1e72f7d199e09bf0a2fc895e2235f/src%2Ftest%2Fcompile-fail%2Fdropck_no_diverge_on_nonregular_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdropck_no_diverge_on_nonregular_1.rs?ref=180ef47af2f1e72f7d199e09bf0a2fc895e2235f", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Issue 22443: Reject code using non-regular types that would\n+// otherwise cause dropck to loop infinitely.\n+\n+use std::marker::PhantomData;\n+\n+struct Digit<T> {\n+    elem: T\n+}\n+\n+struct Node<T:'static> { m: PhantomData<&'static T> }\n+\n+\n+enum FingerTree<T:'static> {\n+    Single(T),\n+    // Bug report said Digit after Box would stack overflow (versus\n+    // Digit before Box; see dropck_no_diverge_on_nonregular_2).\n+    Deep(\n+        Box<FingerTree<Node<T>>>,\n+        Digit<T>,\n+        )\n+}\n+\n+fn main() {\n+    let ft = //~ ERROR overflow while adding drop-check rules for FingerTree\n+        FingerTree::Single(1);\n+    //~^ ERROR overflow while adding drop-check rules for FingerTree\n+}"}, {"sha": "886bd6bea20d785f4e1a2c90e95058c3b7aa288c", "filename": "src/test/compile-fail/dropck_no_diverge_on_nonregular_2.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/180ef47af2f1e72f7d199e09bf0a2fc895e2235f/src%2Ftest%2Fcompile-fail%2Fdropck_no_diverge_on_nonregular_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/180ef47af2f1e72f7d199e09bf0a2fc895e2235f/src%2Ftest%2Fcompile-fail%2Fdropck_no_diverge_on_nonregular_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdropck_no_diverge_on_nonregular_2.rs?ref=180ef47af2f1e72f7d199e09bf0a2fc895e2235f", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Issue 22443: Reject code using non-regular types that would\n+// otherwise cause dropck to loop infinitely.\n+\n+use std::marker::PhantomData;\n+\n+struct Digit<T> {\n+    elem: T\n+}\n+\n+struct Node<T:'static> { m: PhantomData<&'static T> }\n+\n+enum FingerTree<T:'static> {\n+    Single(T),\n+    // Bug report said Digit before Box would infinite loop (versus\n+    // Digit after Box; see dropck_no_diverge_on_nonregular_1).\n+    Deep(\n+        Digit<T>,\n+        Box<FingerTree<Node<T>>>,\n+        )\n+}\n+\n+fn main() {\n+    let ft = //~ ERROR overflow while adding drop-check rules for FingerTree\n+        FingerTree::Single(1);\n+    //~^ ERROR overflow while adding drop-check rules for FingerTree\n+}"}, {"sha": "f7eb6e10ca78827cc9f7a09ed263ebab99e56cdc", "filename": "src/test/compile-fail/dropck_no_diverge_on_nonregular_3.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/180ef47af2f1e72f7d199e09bf0a2fc895e2235f/src%2Ftest%2Fcompile-fail%2Fdropck_no_diverge_on_nonregular_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/180ef47af2f1e72f7d199e09bf0a2fc895e2235f/src%2Ftest%2Fcompile-fail%2Fdropck_no_diverge_on_nonregular_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdropck_no_diverge_on_nonregular_3.rs?ref=180ef47af2f1e72f7d199e09bf0a2fc895e2235f", "patch": "@@ -0,0 +1,46 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Issue 22443: Reject code using non-regular types that would\n+// otherwise cause dropck to loop infinitely.\n+//\n+// This version is just checking that we still sanely handle a trivial\n+// wrapper around the non-regular type. (It also demonstrates how the\n+// error messages will report different types depending on which type\n+// dropck is analyzing.)\n+\n+use std::marker::PhantomData;\n+\n+struct Digit<T> {\n+    elem: T\n+}\n+\n+struct Node<T:'static> { m: PhantomData<&'static T> }\n+\n+enum FingerTree<T:'static> {\n+    Single(T),\n+    // According to the bug report, Digit before Box would infinite loop.\n+    Deep(\n+        Digit<T>,\n+        Box<FingerTree<Node<T>>>,\n+        )\n+}\n+\n+enum Wrapper<T:'static> {\n+    Simple,\n+    Other(FingerTree<T>),\n+}\n+\n+fn main() {\n+    let w = //~ ERROR overflow while adding drop-check rules for core::option\n+        Some(Wrapper::Simple::<u32>);\n+    //~^ ERROR overflow while adding drop-check rules for core::option::Option\n+    //~| ERROR overflow while adding drop-check rules for Wrapper\n+}"}, {"sha": "cab33beda405f619afc786f6b5c94c64e99a2475", "filename": "src/test/run-pass/issue-22777.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/180ef47af2f1e72f7d199e09bf0a2fc895e2235f/src%2Ftest%2Frun-pass%2Fissue-22777.rs", "raw_url": "https://github.com/rust-lang/rust/raw/180ef47af2f1e72f7d199e09bf0a2fc895e2235f/src%2Ftest%2Frun-pass%2Fissue-22777.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-22777.rs?ref=180ef47af2f1e72f7d199e09bf0a2fc895e2235f", "patch": "@@ -0,0 +1,55 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This test is reduced from libsyntax.  It is just checking that we\n+// can successfully deal with a \"deep\" structure, which the drop-check\n+// was hitting a recursion limit on at one point.\n+\n+#![allow(non_camel_case_types)]\n+\n+pub fn noop_fold_impl_item() -> SmallVector<ImplItem> {\n+    loop  { }\n+}\n+\n+pub struct SmallVector<T>(P<T>);\n+pub struct ImplItem(P<S01_Method>);\n+\n+struct P<T>(Box<T>);\n+\n+struct S01_Method(P<S02_Generics>);\n+struct S02_Generics(P<S03_TyParam>);\n+struct S03_TyParam(P<S04_TyParamBound>);\n+struct S04_TyParamBound(S05_PolyTraitRef);\n+struct S05_PolyTraitRef(S06_TraitRef);\n+struct S06_TraitRef(S07_Path);\n+struct S07_Path(Vec<S08_PathSegment>);\n+struct S08_PathSegment(S09_PathParameters);\n+struct S09_PathParameters(P<S10_ParenthesizedParameterData>);\n+struct S10_ParenthesizedParameterData(Option<P<S11_Ty>>);\n+struct S11_Ty(P<S12_Expr>);\n+struct S12_Expr(P<S13_Block>);\n+struct S13_Block(Vec<P<S14_Stmt>>);\n+struct S14_Stmt(P<S15_Decl>);\n+struct S15_Decl(P<S16_Local>);\n+struct S16_Local(P<S17_Pat>);\n+struct S17_Pat(P<S18_Mac>);\n+struct S18_Mac(Vec<P<S19_TokenTree>>);\n+struct S19_TokenTree(P<S20_Token>);\n+struct S20_Token(P<S21_Nonterminal>);\n+struct S21_Nonterminal(P<S22_Item>);\n+struct S22_Item(P<S23_EnumDef>);\n+struct S23_EnumDef(Vec<P<S24_Variant>>);\n+struct S24_Variant(P<S25_VariantKind>);\n+struct S25_VariantKind(P<S26_StructDef>);\n+struct S26_StructDef(Vec<P<S27_StructField>>);\n+struct S27_StructField(P<S28_StructFieldKind>);\n+struct S28_StructFieldKind;\n+\n+pub fn main() {}"}]}