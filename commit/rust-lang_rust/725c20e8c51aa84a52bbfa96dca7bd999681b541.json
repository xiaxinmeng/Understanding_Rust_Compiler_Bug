{"sha": "725c20e8c51aa84a52bbfa96dca7bd999681b541", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNWMyMGU4YzUxYWE4NGE1MmJiZmE5NmRjYTdiZDk5OTY4MWI1NDE=", "commit": {"author": {"name": "Kevaundray Wedderburn", "email": "kevtheappdev@gmail.com", "date": "2021-01-18T16:54:07Z"}, "committer": {"name": "Kevaundray Wedderburn", "email": "kevtheappdev@gmail.com", "date": "2021-01-18T16:54:07Z"}, "message": "use `is_ident` method", "tree": {"sha": "70a72a946a41c78b57df2a1c557183f5ac58aaad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70a72a946a41c78b57df2a1c557183f5ac58aaad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/725c20e8c51aa84a52bbfa96dca7bd999681b541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/725c20e8c51aa84a52bbfa96dca7bd999681b541", "html_url": "https://github.com/rust-lang/rust/commit/725c20e8c51aa84a52bbfa96dca7bd999681b541", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/725c20e8c51aa84a52bbfa96dca7bd999681b541/comments", "author": {"login": "kevaundray", "id": 37423678, "node_id": "MDQ6VXNlcjM3NDIzNjc4", "avatar_url": "https://avatars.githubusercontent.com/u/37423678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevaundray", "html_url": "https://github.com/kevaundray", "followers_url": "https://api.github.com/users/kevaundray/followers", "following_url": "https://api.github.com/users/kevaundray/following{/other_user}", "gists_url": "https://api.github.com/users/kevaundray/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevaundray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevaundray/subscriptions", "organizations_url": "https://api.github.com/users/kevaundray/orgs", "repos_url": "https://api.github.com/users/kevaundray/repos", "events_url": "https://api.github.com/users/kevaundray/events{/privacy}", "received_events_url": "https://api.github.com/users/kevaundray/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kevaundray", "id": 37423678, "node_id": "MDQ6VXNlcjM3NDIzNjc4", "avatar_url": "https://avatars.githubusercontent.com/u/37423678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevaundray", "html_url": "https://github.com/kevaundray", "followers_url": "https://api.github.com/users/kevaundray/followers", "following_url": "https://api.github.com/users/kevaundray/following{/other_user}", "gists_url": "https://api.github.com/users/kevaundray/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevaundray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevaundray/subscriptions", "organizations_url": "https://api.github.com/users/kevaundray/orgs", "repos_url": "https://api.github.com/users/kevaundray/repos", "events_url": "https://api.github.com/users/kevaundray/events{/privacy}", "received_events_url": "https://api.github.com/users/kevaundray/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "171c3c08fe245938fb25321394233de5fe2abc7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/171c3c08fe245938fb25321394233de5fe2abc7c", "html_url": "https://github.com/rust-lang/rust/commit/171c3c08fe245938fb25321394233de5fe2abc7c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "61b64f70e07487d10a89bc2231e494db5f2fc491", "filename": "crates/hir_def/src/path.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/725c20e8c51aa84a52bbfa96dca7bd999681b541/crates%2Fhir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/725c20e8c51aa84a52bbfa96dca7bd999681b541/crates%2Fhir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fpath.rs?ref=725c20e8c51aa84a52bbfa96dca7bd999681b541", "patch": "@@ -87,8 +87,8 @@ impl ModPath {\n \n     /// If this path is a single identifier, like `foo`, return its name.\n     pub fn as_ident(&self) -> Option<&Name> {\n-        if self.kind != PathKind::Plain || self.segments.len() > 1 {\n-            return None;\n+        if !self.is_ident() {\n+            return None\n         }\n         self.segments.first()\n     }"}]}