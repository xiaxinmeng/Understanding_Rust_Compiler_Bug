{"sha": "770a49520c2e5b7e369d35174c702bf23e96acb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MGE0OTUyMGMyZTViN2UzNjlkMzUxNzRjNzAyYmYyM2U5NmFjYjg=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-21T15:11:22Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-21T15:11:22Z"}, "message": "Move calls to PtrToInt out of trans_upcall2.", "tree": {"sha": "88951100bb56601ea970bd97521a730e3ea2fe76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88951100bb56601ea970bd97521a730e3ea2fe76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/770a49520c2e5b7e369d35174c702bf23e96acb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/770a49520c2e5b7e369d35174c702bf23e96acb8", "html_url": "https://github.com/rust-lang/rust/commit/770a49520c2e5b7e369d35174c702bf23e96acb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/770a49520c2e5b7e369d35174c702bf23e96acb8/comments", "author": null, "committer": null, "parents": [{"sha": "26ec8831dc19080744161713553797f7edc1363a", "url": "https://api.github.com/repos/rust-lang/rust/commits/26ec8831dc19080744161713553797f7edc1363a", "html_url": "https://github.com/rust-lang/rust/commit/26ec8831dc19080744161713553797f7edc1363a"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "0158a5ed6e52fc2489c0631bdddafeacdb40f877", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/770a49520c2e5b7e369d35174c702bf23e96acb8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/770a49520c2e5b7e369d35174c702bf23e96acb8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=770a49520c2e5b7e369d35174c702bf23e96acb8", "patch": "@@ -856,7 +856,8 @@ fn get_upcall(&hashmap[str, ValueRef] upcalls,\n \n fn trans_upcall(@block_ctxt cx, str name, vec[ValueRef] args) -> result {\n     auto cxx = cx.fcx.ccx;\n-    auto t = trans_upcall2(cx.build, cxx.glues, cx.fcx.lltaskptr,\n+    auto lltaskptr = cx.build.PtrToInt(cx.fcx.lltaskptr, T_int());\n+    auto t = trans_upcall2(cx.build, cxx.glues, lltaskptr,\n                            cxx.upcalls, cxx.tn, cxx.llmod, name, args);\n     ret res(cx, t);\n }\n@@ -871,7 +872,7 @@ fn trans_upcall2(builder b, @glue_fns glues, ValueRef lltaskptr,\n \n     let ValueRef llglue = glues.upcall_glues.(n);\n     let vec[ValueRef] call_args = vec(llupcall);\n-    call_args += vec( b.PtrToInt(lltaskptr, T_int()));\n+    call_args += vec( b.ZExtOrBitCast(lltaskptr, T_int()));\n \n     for (ValueRef a in args) {\n         call_args += vec(b.ZExtOrBitCast(a, T_int()));\n@@ -5692,8 +5693,9 @@ fn trans_exit_task_glue(@glue_fns glues,\n \n     auto entrybb = llvm.LLVMAppendBasicBlock(llfn, _str.buf(\"entry\"));\n     auto build = new_builder(entrybb);\n+    auto tptr = build.PtrToInt(lltaskptr, T_int());\n \n-    trans_upcall2(build, glues, lltaskptr,\n+    trans_upcall2(build, glues, tptr,\n                   upcalls, tn, llmod, \"upcall_exit\", V_args);\n     build.RetVoid();\n }"}]}