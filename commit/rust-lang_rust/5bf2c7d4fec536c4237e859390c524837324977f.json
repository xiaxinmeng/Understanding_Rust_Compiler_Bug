{"sha": "5bf2c7d4fec536c4237e859390c524837324977f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZjJjN2Q0ZmVjNTM2YzQyMzdlODU5MzkwYzUyNDgzNzMyNDk3N2Y=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-22T12:33:17Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-07-20T10:23:29Z"}, "message": "debuginfo: no type metadata if substs reqd\n\nThis commit skips generating debuginfo type metadata if substitutions\nare required by the type. This avoids ICEs that result from layouts\nof types with substitutions being computed.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "ac63193af6523748760d9cec54fd8928985ba967", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac63193af6523748760d9cec54fd8928985ba967"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bf2c7d4fec536c4237e859390c524837324977f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl8VcKEACgkQJZLnbIc4\nH9k1jg//Sju6HzLZNt2ypp1Yyi0g706mQ/d/jOfG0o+2r3GRZUmy8lULaFpXr4oq\n71fHdRVaMdjzxMCxM2CTm7xNLjxgq089f85vQ5023GQrIA0Tk9jc9UuCGRDBmBk9\nSVerFA4t42zX8nCjQpRcwHMZaIwY1cqPbZzCGfGC7iUyeHcIR3Mxw8JmAbywNpi4\njlOkFC9X5KcewT7APk3Tn8YP/EOFON0vfJRrfFCn1ohY57SX9QH71ecpTAoALlHd\ns/auFcPidhdzB7AHvEU+65lRtem3NUrG9qwhQ1t1M85VulIl+Wfod6H8QmTPJcDg\n4+ZESfIFoyChjFX2YT7tveeSu1C0CqLz3617UOSyDrBUMY2BUlcD9zD/DEp7CyzK\nfUCPUv6QYThbmK0pFUjr6IudWrkdPjh8KIzBBWdHURzHSrd61YpkINAjZyRcnWO+\n5w9spSNzZzhNAbfCs1dszuJJWioTpIO+yjIdyyvnYefWJYPOvhA45MDLcZC6QHeQ\n5d7Y1VSL31E8EmR8ggcQAfhr2Wc+r9S4x53tCtGVi/FYRnbYsPGBVY2ijnIuwJ94\nUAuIfLqCXUCS0urp8uhhgDpd6Hj6APDOJCRTn/Xt9pgwf4/ceaPnc02S1kbtdFo6\nSE+qn+77UFXsfHHU8ncjGAP7VnFnRlC2U0pGhumf346FLj4ZoQw=\n=FJTg\n-----END PGP SIGNATURE-----", "payload": "tree ac63193af6523748760d9cec54fd8928985ba967\nparent 842fa0ce3e93918fb574dfebc26abdfbed6138ec\nauthor David Wood <david@davidtw.co> 1592829197 +0100\ncommitter David Wood <david@davidtw.co> 1595240609 +0100\n\ndebuginfo: no type metadata if substs reqd\n\nThis commit skips generating debuginfo type metadata if substitutions\nare required by the type. This avoids ICEs that result from layouts\nof types with substitutions being computed.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bf2c7d4fec536c4237e859390c524837324977f", "html_url": "https://github.com/rust-lang/rust/commit/5bf2c7d4fec536c4237e859390c524837324977f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bf2c7d4fec536c4237e859390c524837324977f/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "842fa0ce3e93918fb574dfebc26abdfbed6138ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/842fa0ce3e93918fb574dfebc26abdfbed6138ec", "html_url": "https://github.com/rust-lang/rust/commit/842fa0ce3e93918fb574dfebc26abdfbed6138ec"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "a01b8553721290697e789f760c95cc084718a72a", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5bf2c7d4fec536c4237e859390c524837324977f/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bf2c7d4fec536c4237e859390c524837324977f/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=5bf2c7d4fec536c4237e859390c524837324977f", "patch": "@@ -26,7 +26,7 @@ use rustc_index::vec::IndexVec;\n use rustc_middle::mir;\n use rustc_middle::ty::layout::HasTyCtxt;\n use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc_middle::ty::{self, Instance, ParamEnv, Ty};\n+use rustc_middle::ty::{self, Instance, ParamEnv, Ty, TypeFoldable};\n use rustc_session::config::{self, DebugInfo};\n use rustc_span::symbol::Symbol;\n use rustc_span::{self, BytePos, Span};\n@@ -470,7 +470,9 @@ impl DebugInfoMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n                     match impl_self_ty.kind {\n                         ty::Adt(def, ..) if !def.is_box() => {\n                             // Again, only create type information if full debuginfo is enabled\n-                            if cx.sess().opts.debuginfo == DebugInfo::Full {\n+                            if cx.sess().opts.debuginfo == DebugInfo::Full\n+                                && !impl_self_ty.needs_subst()\n+                            {\n                                 Some(type_metadata(cx, impl_self_ty, rustc_span::DUMMY_SP))\n                             } else {\n                                 Some(namespace::item_namespace(cx, def.did))"}]}