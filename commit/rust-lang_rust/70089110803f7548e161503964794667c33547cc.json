{"sha": "70089110803f7548e161503964794667c33547cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMDg5MTEwODAzZjc1NDhlMTYxNTAzOTY0Nzk0NjY3YzMzNTQ3Y2M=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-12-31T02:25:53Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-12-31T02:25:53Z"}, "message": "FIx ICE on wf check for foreign fns", "tree": {"sha": "6c530f807ca4f4790f4e7537d7135b5c7ee30350", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c530f807ca4f4790f4e7537d7135b5c7ee30350"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70089110803f7548e161503964794667c33547cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70089110803f7548e161503964794667c33547cc", "html_url": "https://github.com/rust-lang/rust/commit/70089110803f7548e161503964794667c33547cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70089110803f7548e161503964794667c33547cc/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "507bff92fadf1f25a830da5065a5a87113345163", "url": "https://api.github.com/repos/rust-lang/rust/commits/507bff92fadf1f25a830da5065a5a87113345163", "html_url": "https://github.com/rust-lang/rust/commit/507bff92fadf1f25a830da5065a5a87113345163"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "777107ed863109854043de0ba6bd3dcf133b53ad", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/70089110803f7548e161503964794667c33547cc/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70089110803f7548e161503964794667c33547cc/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=70089110803f7548e161503964794667c33547cc", "patch": "@@ -153,6 +153,7 @@ fn msg_span_from_early_bound_and_free_regions(\n         Some(Node::Item(it)) => item_scope_tag(&it),\n         Some(Node::TraitItem(it)) => trait_item_scope_tag(&it),\n         Some(Node::ImplItem(it)) => impl_item_scope_tag(&it),\n+        Some(Node::ForeignItem(it)) => foreign_item_scope_tag(&it),\n         _ => unreachable!(),\n     };\n     let (prefix, span) = match *region {\n@@ -233,6 +234,13 @@ fn impl_item_scope_tag(item: &hir::ImplItem<'_>) -> &'static str {\n     }\n }\n \n+fn foreign_item_scope_tag(item: &hir::ForeignItem<'_>) -> &'static str {\n+    match item.kind {\n+        hir::ForeignItemKind::Fn(..) => \"method body\",\n+        hir::ForeignItemKind::Static(..) | hir::ForeignItemKind::Type => \"associated item\",\n+    }\n+}\n+\n fn explain_span(tcx: TyCtxt<'tcx>, heading: &str, span: Span) -> (String, Option<Span>) {\n     let lo = tcx.sess.source_map().lookup_char_pos(span.lo());\n     (format!(\"the {} at {}:{}\", heading, lo.line, lo.col.to_usize() + 1), Some(span))"}, {"sha": "2ae9ded3fa0cf47e9fbec66693f88ab9c157dbc7", "filename": "compiler/rustc_typeck/src/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70089110803f7548e161503964794667c33547cc/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70089110803f7548e161503964794667c33547cc/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=70089110803f7548e161503964794667c33547cc", "patch": "@@ -51,7 +51,7 @@ impl<'tcx> CheckWfFcxBuilder<'tcx> {\n             let fcx = FnCtxt::new(&inh, param_env, id);\n             if !inh.tcx.features().trivial_bounds {\n                 // As predicates are cached rather than obligations, this\n-                // needsto be called first so that they are checked with an\n+                // needs to be called first so that they are checked with an\n                 // empty `param_env`.\n                 check_false_global_bounds(&fcx, span, id);\n             }"}, {"sha": "8386959cfb3a83327850c86e6386ffb8ed97c185", "filename": "src/test/ui/wf/wf-in-foreign-fn-decls-issue-80468.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/70089110803f7548e161503964794667c33547cc/src%2Ftest%2Fui%2Fwf%2Fwf-in-foreign-fn-decls-issue-80468.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70089110803f7548e161503964794667c33547cc/src%2Ftest%2Fui%2Fwf%2Fwf-in-foreign-fn-decls-issue-80468.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-in-foreign-fn-decls-issue-80468.rs?ref=70089110803f7548e161503964794667c33547cc", "patch": "@@ -0,0 +1,17 @@\n+// Regression test for #80468.\n+\n+#![crate_type = \"lib\"]\n+\n+pub trait Trait {}\n+\n+#[repr(transparent)]\n+pub struct Wrapper<T: Trait>(T);\n+\n+#[repr(transparent)]\n+pub struct Ref<'a>(&'a u8);\n+\n+impl Trait for Ref {} //~ ERROR:  implicit elided lifetime not allowed here\n+\n+extern \"C\" {\n+    pub fn repro(_: Wrapper<Ref>); //~ ERROR: mismatched types\n+}"}, {"sha": "bb839d0a5eca685438a24a35def594c617ddc182", "filename": "src/test/ui/wf/wf-in-foreign-fn-decls-issue-80468.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/70089110803f7548e161503964794667c33547cc/src%2Ftest%2Fui%2Fwf%2Fwf-in-foreign-fn-decls-issue-80468.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70089110803f7548e161503964794667c33547cc/src%2Ftest%2Fui%2Fwf%2Fwf-in-foreign-fn-decls-issue-80468.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-in-foreign-fn-decls-issue-80468.stderr?ref=70089110803f7548e161503964794667c33547cc", "patch": "@@ -0,0 +1,24 @@\n+error[E0726]: implicit elided lifetime not allowed here\n+  --> $DIR/wf-in-foreign-fn-decls-issue-80468.rs:13:16\n+   |\n+LL | impl Trait for Ref {}\n+   |                ^^^- help: indicate the anonymous lifetime: `<'_>`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/wf-in-foreign-fn-decls-issue-80468.rs:16:21\n+   |\n+LL |     pub fn repro(_: Wrapper<Ref>);\n+   |                     ^^^^^^^^^^^^ lifetime mismatch\n+   |\n+   = note: expected trait `Trait`\n+              found trait `Trait`\n+note: the anonymous lifetime #1 defined on the method body at 16:5...\n+  --> $DIR/wf-in-foreign-fn-decls-issue-80468.rs:16:5\n+   |\n+LL |     pub fn repro(_: Wrapper<Ref>);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: ...does not necessarily outlive the static lifetime\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}