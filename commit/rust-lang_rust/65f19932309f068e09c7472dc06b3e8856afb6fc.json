{"sha": "65f19932309f068e09c7472dc06b3e8856afb6fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZjE5OTMyMzA5ZjA2OGUwOWM3NDcyZGMwNmIzZTg4NTZhZmI2ZmM=", "commit": {"author": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-25T05:23:53Z"}, "committer": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-27T12:35:47Z"}, "message": "Refactored list::tail() to be based on List<T>", "tree": {"sha": "b41c864f18148901e9193023199a10f77da38548", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b41c864f18148901e9193023199a10f77da38548"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65f19932309f068e09c7472dc06b3e8856afb6fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65f19932309f068e09c7472dc06b3e8856afb6fc", "html_url": "https://github.com/rust-lang/rust/commit/65f19932309f068e09c7472dc06b3e8856afb6fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65f19932309f068e09c7472dc06b3e8856afb6fc/comments", "author": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fed034c402eb22b60fb9d7581e720bb0010dae65", "url": "https://api.github.com/repos/rust-lang/rust/commits/fed034c402eb22b60fb9d7581e720bb0010dae65", "html_url": "https://github.com/rust-lang/rust/commit/fed034c402eb22b60fb9d7581e720bb0010dae65"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "4cadc27eea3b13de92e73aafb5b48481b8e5549f", "filename": "src/libcollections/list.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/65f19932309f068e09c7472dc06b3e8856afb6fc/src%2Flibcollections%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65f19932309f068e09c7472dc06b3e8856afb6fc/src%2Flibcollections%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flist.rs?ref=65f19932309f068e09c7472dc06b3e8856afb6fc", "patch": "@@ -61,6 +61,14 @@ impl<T> List<T> {\n           Cons(ref head, _) => Some(head)\n         }\n     }\n+\n+    /// Returns all but the first element of a list\n+    pub fn tail(&self) -> Option<@List<T>> {\n+        match *self {\n+            Nil => None,\n+            Cons(_, tail) => Some(tail)\n+        }\n+    }\n }\n \n impl<T> Container for List<T> {\n@@ -78,14 +86,6 @@ impl<T:Eq> List<T> {\n     }\n }\n \n-/// Returns all but the first element of a list\n-pub fn tail<T>(list: @List<T>) -> @List<T> {\n-    match *list {\n-        Cons(_, tail) => return tail,\n-        Nil => fail!(\"list empty\")\n-    }\n-}\n-\n /// Appends one list to another\n pub fn append<T:Clone + 'static>(list: @List<T>, other: @List<T>) -> @List<T> {\n     match *list {\n@@ -117,7 +117,7 @@ fn push<T:Clone>(ll: &mut @list<T>, vv: T) {\n \n #[cfg(test)]\n mod tests {\n-    use list::{List, Nil, tail};\n+    use list::{List, Nil};\n     use list;\n \n     #[test]\n@@ -143,13 +143,13 @@ mod tests {\n \n     #[test]\n     fn test_from_vec() {\n-        let list = @List::from_vec([0, 1, 2]);\n+        let list = List::from_vec([0, 1, 2]);\n         assert_eq!(list.head().unwrap(), &0);\n \n-        let mut tail = tail(list);\n+        let mut tail = list.tail().unwrap();\n         assert_eq!(tail.head().unwrap(), &1);\n \n-        tail = tail(tail);\n+        tail = tail.tail().unwrap();\n         assert_eq!(tail.head().unwrap(), &2);\n     }\n "}]}