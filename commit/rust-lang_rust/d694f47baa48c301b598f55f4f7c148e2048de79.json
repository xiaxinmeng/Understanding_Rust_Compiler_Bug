{"sha": "d694f47baa48c301b598f55f4f7c148e2048de79", "node_id": "C_kwDOAAsO6NoAKGQ2OTRmNDdiYWE0OGMzMDFiNTk4ZjU1ZjRmN2MxNDhlMjA0OGRlNzk", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-03-22T18:30:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-22T18:30:30Z"}, "message": "Rollup merge of #100311 - xfix:lines-fix-handling-of-bare-cr, r=ChrisDenton\n\nFix handling of trailing bare CR in str::lines\n\nContinuing from #91191.\n\nFixes #94435.", "tree": {"sha": "aa956ed3733ed31662f15b4065bd7238b6b64435", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa956ed3733ed31662f15b4065bd7238b6b64435"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d694f47baa48c301b598f55f4f7c148e2048de79", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkG0lGCRBK7hj4Ov3rIwAARH0IAFwaEytLNKWTREmqNA+6Kgbk\naR3ijTIjJ6gc7NstU7fvaG5gcsMUejbdxw5qTiogV+gNWLG17pnbQHQVF3kBaodp\nclBcj402vnKBugPFxwZ6N8f8vrKeC9XgboZVA0BJvfiutcmFscjh+jm3FZXyZbAG\ns0THMi7dNBYv442KdbahnL4kYl7oAiiBN8jqcEORrh++Kwc40IICb93xn5QmzkE7\n+AJSkuEtJbCv5GBihr8gaCq/zEuYQUeBjxPml8enrBeDMj26C7Y4Ks46Fpg57ZCt\nQnw4/MMoLJgmYyGIhLl4D4gCyBi7Dw2SA91lHvlcSoOHJMMpFDtPAppNon3mS8w=\n=6uYr\n-----END PGP SIGNATURE-----\n", "payload": "tree aa956ed3733ed31662f15b4065bd7238b6b64435\nparent 439292bc7913399e406d9bb7e8da0f70c6317c6e\nparent cef81dcd0a9503ff8a8f915c43688a78c1c11d83\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1679509830 +0530\ncommitter GitHub <noreply@github.com> 1679509830 +0530\n\nRollup merge of #100311 - xfix:lines-fix-handling-of-bare-cr, r=ChrisDenton\n\nFix handling of trailing bare CR in str::lines\n\nContinuing from #91191.\n\nFixes #94435.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d694f47baa48c301b598f55f4f7c148e2048de79", "html_url": "https://github.com/rust-lang/rust/commit/d694f47baa48c301b598f55f4f7c148e2048de79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d694f47baa48c301b598f55f4f7c148e2048de79/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "439292bc7913399e406d9bb7e8da0f70c6317c6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/439292bc7913399e406d9bb7e8da0f70c6317c6e", "html_url": "https://github.com/rust-lang/rust/commit/439292bc7913399e406d9bb7e8da0f70c6317c6e"}, {"sha": "cef81dcd0a9503ff8a8f915c43688a78c1c11d83", "url": "https://api.github.com/repos/rust-lang/rust/commits/cef81dcd0a9503ff8a8f915c43688a78c1c11d83", "html_url": "https://github.com/rust-lang/rust/commit/cef81dcd0a9503ff8a8f915c43688a78c1c11d83"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "c1dbbde08b6b9ad390590630f246656616fe3670", "filename": "library/alloc/tests/str.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d694f47baa48c301b598f55f4f7c148e2048de79/library%2Falloc%2Ftests%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d694f47baa48c301b598f55f4f7c148e2048de79/library%2Falloc%2Ftests%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fstr.rs?ref=d694f47baa48c301b598f55f4f7c148e2048de79", "patch": "@@ -1499,13 +1499,25 @@ fn test_split_whitespace() {\n \n #[test]\n fn test_lines() {\n-    let data = \"\\nM\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\\n\\r\\nLittle l\u00e4mb\\n\";\n-    let lines: Vec<&str> = data.lines().collect();\n-    assert_eq!(lines, [\"\", \"M\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\", \"\", \"Little l\u00e4mb\"]);\n-\n-    let data = \"\\r\\nM\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\\n\\nLittle l\u00e4mb\"; // no trailing \\n\n-    let lines: Vec<&str> = data.lines().collect();\n-    assert_eq!(lines, [\"\", \"M\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\", \"\", \"Little l\u00e4mb\"]);\n+    fn t(data: &str, expected: &[&str]) {\n+        let lines: Vec<&str> = data.lines().collect();\n+        assert_eq!(lines, expected);\n+    }\n+    t(\"\", &[]);\n+    t(\"\\n\", &[\"\"]);\n+    t(\"\\n2nd\", &[\"\", \"2nd\"]);\n+    t(\"\\r\\n\", &[\"\"]);\n+    t(\"bare\\r\", &[\"bare\\r\"]);\n+    t(\"bare\\rcr\", &[\"bare\\rcr\"]);\n+    t(\"Text\\n\\r\", &[\"Text\", \"\\r\"]);\n+    t(\n+        \"\\nM\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\\n\\r\\nLittle l\u00e4mb\\n\",\n+        &[\"\", \"M\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\", \"\", \"Little l\u00e4mb\"],\n+    );\n+    t(\n+        \"\\r\\nM\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\\n\\nLittle l\u00e4mb\",\n+        &[\"\", \"M\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\", \"\", \"Little l\u00e4mb\"],\n+    );\n }\n \n #[test]"}, {"sha": "772c3605562cfa1ab006f5a7d45fc1c0814ee3bf", "filename": "library/core/src/str/iter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d694f47baa48c301b598f55f4f7c148e2048de79/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d694f47baa48c301b598f55f4f7c148e2048de79/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs?ref=d694f47baa48c301b598f55f4f7c148e2048de79", "patch": "@@ -13,7 +13,7 @@ use super::from_utf8_unchecked;\n use super::pattern::Pattern;\n use super::pattern::{DoubleEndedSearcher, ReverseSearcher, Searcher};\n use super::validations::{next_code_point, next_code_point_reverse};\n-use super::LinesAnyMap;\n+use super::LinesMap;\n use super::{BytesIsNotEmpty, UnsafeBytesToStr};\n use super::{CharEscapeDebugContinue, CharEscapeDefault, CharEscapeUnicode};\n use super::{IsAsciiWhitespace, IsNotEmpty, IsWhitespace};\n@@ -1104,7 +1104,7 @@ generate_pattern_iterators! {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n #[derive(Clone, Debug)]\n-pub struct Lines<'a>(pub(super) Map<SplitTerminator<'a, char>, LinesAnyMap>);\n+pub struct Lines<'a>(pub(super) Map<SplitInclusive<'a, char>, LinesMap>);\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> Iterator for Lines<'a> {"}, {"sha": "2b23f64732b03b9680cb793300ec0984f3c8d0ec", "filename": "library/core/src/str/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d694f47baa48c301b598f55f4f7c148e2048de79/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d694f47baa48c301b598f55f4f7c148e2048de79/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs?ref=d694f47baa48c301b598f55f4f7c148e2048de79", "patch": "@@ -1011,7 +1011,7 @@ impl str {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn lines(&self) -> Lines<'_> {\n-        Lines(self.split_terminator('\\n').map(LinesAnyMap))\n+        Lines(self.split_inclusive('\\n').map(LinesMap))\n     }\n \n     /// An iterator over the lines of a string.\n@@ -2604,10 +2604,10 @@ impl Default for &mut str {\n impl_fn_for_zst! {\n     /// A nameable, cloneable fn type\n     #[derive(Clone)]\n-    struct LinesAnyMap impl<'a> Fn = |line: &'a str| -> &'a str {\n-        let l = line.len();\n-        if l > 0 && line.as_bytes()[l - 1] == b'\\r' { &line[0 .. l - 1] }\n-        else { line }\n+    struct LinesMap impl<'a> Fn = |line: &'a str| -> &'a str {\n+        let Some(line) = line.strip_suffix('\\n') else { return line };\n+        let Some(line) = line.strip_suffix('\\r') else { return line };\n+        line\n     };\n \n     #[derive(Clone)]"}]}