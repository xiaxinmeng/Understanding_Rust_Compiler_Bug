{"sha": "d49f86901cf1128cdc00b7a1b276f6bf266bf937", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0OWY4NjkwMWNmMTEyOGNkYzAwYjdhMWIyNzZmNmJmMjY2YmY5Mzc=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-20T00:51:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-20T00:51:13Z"}, "message": "Rollup merge of #40587 - GuillaumeGomez:rustdoc-const-display, r=frewsxcv\n\nFix invalid debug display for associated consts\n\nFixes #40568.\n\nr? @rust-lang/docs\n\ncc @SergioBenitez", "tree": {"sha": "ef03d7fdd32204abf7e236da22fb99f85fe7922e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef03d7fdd32204abf7e236da22fb99f85fe7922e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d49f86901cf1128cdc00b7a1b276f6bf266bf937", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d49f86901cf1128cdc00b7a1b276f6bf266bf937", "html_url": "https://github.com/rust-lang/rust/commit/d49f86901cf1128cdc00b7a1b276f6bf266bf937", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d49f86901cf1128cdc00b7a1b276f6bf266bf937/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de724ba9a6cb1aa07d4725c536d949735d0cf12b", "url": "https://api.github.com/repos/rust-lang/rust/commits/de724ba9a6cb1aa07d4725c536d949735d0cf12b", "html_url": "https://github.com/rust-lang/rust/commit/de724ba9a6cb1aa07d4725c536d949735d0cf12b"}, {"sha": "5364acb41870eca5b7b41c7980851e6a524c4ca3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5364acb41870eca5b7b41c7980851e6a524c4ca3", "html_url": "https://github.com/rust-lang/rust/commit/5364acb41870eca5b7b41c7980851e6a524c4ca3"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "f3ea6c4467c401c396bccf1733a2494ea1040efa", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d49f86901cf1128cdc00b7a1b276f6bf266bf937/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d49f86901cf1128cdc00b7a1b276f6bf266bf937/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=d49f86901cf1128cdc00b7a1b276f6bf266bf937", "patch": "@@ -2241,11 +2241,11 @@ pub enum PathParameters {\n     AngleBracketed {\n         lifetimes: Vec<Lifetime>,\n         types: Vec<Type>,\n-        bindings: Vec<TypeBinding>\n+        bindings: Vec<TypeBinding>,\n     },\n     Parenthesized {\n         inputs: Vec<Type>,\n-        output: Option<Type>\n+        output: Option<Type>,\n     }\n }\n \n@@ -2260,14 +2260,14 @@ impl Clean<PathParameters> for hir::PathParameters {\n                         data.lifetimes.clean(cx)\n                     },\n                     types: data.types.clean(cx),\n-                    bindings: data.bindings.clean(cx)\n+                    bindings: data.bindings.clean(cx),\n                 }\n             }\n \n             hir::ParenthesizedParameters(ref data) => {\n                 PathParameters::Parenthesized {\n                     inputs: data.inputs.clean(cx),\n-                    output: data.output.clean(cx)\n+                    output: data.output.clean(cx),\n                 }\n             }\n         }"}, {"sha": "a255ba0ad4edf0b5067f0e368f399dcf82e6c83d", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d49f86901cf1128cdc00b7a1b276f6bf266bf937/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d49f86901cf1128cdc00b7a1b276f6bf266bf937/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=d49f86901cf1128cdc00b7a1b276f6bf266bf937", "patch": "@@ -481,7 +481,7 @@ fn resolved_path(w: &mut fmt::Formatter, did: DefId, path: &clean::Path,\n         if is_not_debug {\n             write!(w, \"{:#}{:#}\", HRef::new(did, &last.name), last.params)?;\n         } else {\n-            write!(w, \"{:?}{:?}\", HRef::new(did, &last.name), last.params)?;\n+            write!(w, \"{:?}{}\", HRef::new(did, &last.name), last.params)?;\n         }\n     } else {\n         if is_not_debug {\n@@ -507,7 +507,7 @@ fn resolved_path(w: &mut fmt::Formatter, did: DefId, path: &clean::Path,\n             } else {\n                 format!(\"{:?}\", HRef::new(did, &last.name))\n             };\n-            write!(w, \"{}{:?}\", path, last.params)?;\n+            write!(w, \"{}{}\", path, last.params)?;\n         }\n     }\n     Ok(())"}, {"sha": "9f70fe43175b9a68d555cab7efbbeccf9c327c9c", "filename": "src/test/rustdoc/const-doc.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d49f86901cf1128cdc00b7a1b276f6bf266bf937/src%2Ftest%2Frustdoc%2Fconst-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d49f86901cf1128cdc00b7a1b276f6bf266bf937/src%2Ftest%2Frustdoc%2Fconst-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-doc.rs?ref=d49f86901cf1128cdc00b7a1b276f6bf266bf937", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(associated_consts)]\n+\n+use std::marker::PhantomData;\n+\n+pub struct Foo<'a> {\n+    f: PhantomData<&'a u32>,\n+}\n+\n+pub struct ContentType {\n+    pub ttype: Foo<'static>,\n+    pub subtype: Foo<'static>,\n+    pub params: Option<Foo<'static>>,\n+}\n+\n+impl ContentType {\n+    // @has const_doc/struct.ContentType.html\n+    // @has  - '//*[@class=\"docblock\"]' 'Any: ContentType = ContentType{ttype: Foo{f: '\n+    pub const Any: ContentType = ContentType { ttype: Foo { f: PhantomData, },\n+                                               subtype: Foo { f: PhantomData, },\n+                                               params: None, };\n+}"}]}