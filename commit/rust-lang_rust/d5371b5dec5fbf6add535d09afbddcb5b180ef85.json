{"sha": "d5371b5dec5fbf6add535d09afbddcb5b180ef85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MzcxYjVkZWM1ZmJmNmFkZDUzNWQwOWFmYmRkY2I1YjE4MGVmODU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T16:14:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T16:18:45Z"}, "message": "Inline help", "tree": {"sha": "7b5c06a5ab17109344d07af5c59e92089b09c2ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b5c06a5ab17109344d07af5c59e92089b09c2ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5371b5dec5fbf6add535d09afbddcb5b180ef85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5371b5dec5fbf6add535d09afbddcb5b180ef85", "html_url": "https://github.com/rust-lang/rust/commit/d5371b5dec5fbf6add535d09afbddcb5b180ef85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5371b5dec5fbf6add535d09afbddcb5b180ef85/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b", "html_url": "https://github.com/rust-lang/rust/commit/0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b"}], "stats": {"total": 178, "additions": 96, "deletions": 82}, "files": [{"sha": "d3c4c7d0bb907b52c3ac20cd34894c6296b301a7", "filename": "crates/ra_cli/src/help.rs", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b/crates%2Fra_cli%2Fsrc%2Fhelp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b/crates%2Fra_cli%2Fsrc%2Fhelp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fhelp.rs?ref=0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b", "patch": "@@ -1,75 +0,0 @@\n-//! FIXME: write short doc here\n-\n-pub const GLOBAL_HELP: &str = \"ra-cli\n-\n-USAGE:\n-    ra_cli <SUBCOMMAND>\n-\n-FLAGS:\n-    -h, --help        Prints help information\n-\n-SUBCOMMANDS:\n-    analysis-bench\n-    analysis-stats\n-    highlight\n-    parse\n-    symbols\";\n-\n-pub const ANALYSIS_BENCH_HELP: &str = \"ra_cli-analysis-bench\n-\n-USAGE:\n-    ra_cli analysis-bench [FLAGS] [OPTIONS] [PATH]\n-\n-FLAGS:\n-    -h, --help        Prints help information\n-    -v, --verbose\n-\n-OPTIONS:\n-    --complete <PATH:LINE:COLUMN>    Compute completions at this location\n-    --highlight <PATH>               Hightlight this file\n-\n-ARGS:\n-    <PATH>    Project to analyse\";\n-\n-pub const ANALYSIS_STATS_HELP: &str = \"ra-cli-analysis-stats\n-\n-USAGE:\n-    ra_cli analysis-stats [FLAGS] [OPTIONS] [PATH]\n-\n-FLAGS:\n-    -h, --help            Prints help information\n-        --memory-usage\n-    -v, --verbose\n-    -q, --quiet\n-\n-OPTIONS:\n-    -o <ONLY>\n-\n-ARGS:\n-    <PATH>\";\n-\n-pub const HIGHLIGHT_HELP: &str = \"ra-cli-highlight\n-\n-USAGE:\n-    ra_cli highlight [FLAGS]\n-\n-FLAGS:\n-    -h, --help       Prints help information\n-    -r, --rainbow\";\n-\n-pub const SYMBOLS_HELP: &str = \"ra-cli-symbols\n-\n-USAGE:\n-    ra_cli highlight [FLAGS]\n-\n-FLAGS:\n-    -h, --help    Prints help inforamtion\";\n-\n-pub const PARSE_HELP: &str = \"ra-cli-parse\n-\n-USAGE:\n-    ra_cli parse [FLAGS]\n-\n-FLAGS:\n-    -h, --help       Prints help inforamtion\n-        --no-dump\";"}, {"sha": "9a7f9724eb976ad0658d2e7d647bba4c6c778cf1", "filename": "crates/ra_cli/src/main.rs", "status": "modified", "additions": 96, "deletions": 7, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/d5371b5dec5fbf6add535d09afbddcb5b180ef85/crates%2Fra_cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5371b5dec5fbf6add535d09afbddcb5b180ef85/crates%2Fra_cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fmain.rs?ref=d5371b5dec5fbf6add535d09afbddcb5b180ef85", "patch": "@@ -2,7 +2,6 @@\n \n mod analysis_stats;\n mod analysis_bench;\n-mod help;\n mod progress_report;\n \n use std::{error::Error, fmt::Write, io::Read};\n@@ -46,9 +45,20 @@ fn main() -> Result<()> {\n     match subcommand.as_str() {\n         \"parse\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n-                eprintln!(\"{}\", help::PARSE_HELP);\n+                eprintln!(\n+                    \"\\\n+ra-cli-parse\n+\n+USAGE:\n+    ra_cli parse [FLAGS]\n+\n+FLAGS:\n+    -h, --help       Prints help inforamtion\n+        --no-dump\"\n+                );\n                 return Ok(());\n             }\n+\n             let no_dump = matches.contains(\"--no-dump\");\n             matches.finish().or_else(handle_extra_flags)?;\n \n@@ -61,31 +71,73 @@ fn main() -> Result<()> {\n         }\n         \"symbols\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n-                eprintln!(\"{}\", help::SYMBOLS_HELP);\n+                eprintln!(\n+                    \"\\\n+ra-cli-symbols\n+\n+USAGE:\n+    ra_cli highlight [FLAGS]\n+\n+FLAGS:\n+    -h, --help    Prints help inforamtion\"\n+                );\n                 return Ok(());\n             }\n+\n             matches.finish().or_else(handle_extra_flags)?;\n+\n             let file = file()?;\n             for s in file_structure(&file) {\n                 println!(\"{:?}\", s);\n             }\n         }\n         \"highlight\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n-                eprintln!(\"{}\", help::HIGHLIGHT_HELP);\n+                eprintln!(\n+                    \"\\\n+ra-cli-highlight\n+\n+USAGE:\n+    ra_cli highlight [FLAGS]\n+\n+FLAGS:\n+    -h, --help       Prints help information\n+    -r, --rainbow\"\n+                );\n                 return Ok(());\n             }\n+\n             let rainbow_opt = matches.contains([\"-r\", \"--rainbow\"]);\n             matches.finish().or_else(handle_extra_flags)?;\n+\n             let (analysis, file_id) = Analysis::from_single_file(read_stdin()?);\n             let html = analysis.highlight_as_html(file_id, rainbow_opt).unwrap();\n             println!(\"{}\", html);\n         }\n         \"analysis-stats\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n-                eprintln!(\"{}\", help::ANALYSIS_STATS_HELP);\n+                eprintln!(\n+                    \"\\\n+ra-cli-analysis-stats\n+\n+USAGE:\n+    ra_cli analysis-stats [FLAGS] [OPTIONS] [PATH]\n+\n+FLAGS:\n+    -h, --help            Prints help information\n+        --memory-usage\n+    -v, --verbose\n+    -q, --quiet\n+\n+OPTIONS:\n+    -o <ONLY>\n+\n+ARGS:\n+    <PATH>\"\n+                );\n                 return Ok(());\n             }\n+\n             let verbosity = match (\n                 matches.contains([\"-vv\", \"--spammy\"]),\n                 matches.contains([\"-v\", \"--verbose\"]),\n@@ -110,6 +162,8 @@ fn main() -> Result<()> {\n                 }\n                 trailing.pop().unwrap()\n             };\n+            matches.finish().or_else(handle_extra_flags)?;\n+\n             analysis_stats::run(\n                 verbosity,\n                 memory_usage,\n@@ -121,9 +175,27 @@ fn main() -> Result<()> {\n         }\n         \"analysis-bench\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n-                eprintln!(\"{}\", help::ANALYSIS_BENCH_HELP);\n+                eprintln!(\n+                    \"\\\n+ra_cli-analysis-bench\n+\n+USAGE:\n+    ra_cli analysis-bench [FLAGS] [OPTIONS] [PATH]\n+\n+FLAGS:\n+    -h, --help        Prints help information\n+    -v, --verbose\n+\n+OPTIONS:\n+    --complete <PATH:LINE:COLUMN>    Compute completions at this location\n+    --highlight <PATH>               Hightlight this file\n+\n+ARGS:\n+    <PATH>    Project to analyse\"\n+                );\n                 return Ok(());\n             }\n+\n             let verbose = matches.contains([\"-v\", \"--verbose\"]);\n             let path: String = matches.opt_value_from_str(\"--path\")?.unwrap_or_default();\n             let highlight_path: Option<String> = matches.opt_value_from_str(\"--highlight\")?;\n@@ -138,9 +210,26 @@ fn main() -> Result<()> {\n                 ),\n             };\n             matches.finish().or_else(handle_extra_flags)?;\n+\n             analysis_bench::run(verbose, path.as_ref(), op)?;\n         }\n-        _ => eprintln!(\"{}\", help::GLOBAL_HELP),\n+        _ => eprintln!(\n+            \"\\\n+ra-cli\n+\n+USAGE:\n+    ra_cli <SUBCOMMAND>\n+\n+FLAGS:\n+    -h, --help        Prints help information\n+\n+SUBCOMMANDS:\n+    analysis-bench\n+    analysis-stats\n+    highlight\n+    parse\n+    symbols\"\n+        ),\n     }\n     Ok(())\n }"}]}