{"sha": "542e35e39789d45756c4483f07c831ebbb352ebe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MmUzNWUzOTc4OWQ0NTc1NmM0NDgzZjA3YzgzMWViYmIzNTJlYmU=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2021-02-07T04:49:02Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2021-02-07T04:51:30Z"}, "message": "More information for mbe", "tree": {"sha": "f9e2f343b08a7e90a3e0306bd0b9fda487a68cca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9e2f343b08a7e90a3e0306bd0b9fda487a68cca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/542e35e39789d45756c4483f07c831ebbb352ebe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/542e35e39789d45756c4483f07c831ebbb352ebe", "html_url": "https://github.com/rust-lang/rust/commit/542e35e39789d45756c4483f07c831ebbb352ebe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/542e35e39789d45756c4483f07c831ebbb352ebe/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "504a54b222553a096c8eaa0cd9efca33d916c275", "url": "https://api.github.com/repos/rust-lang/rust/commits/504a54b222553a096c8eaa0cd9efca33d916c275", "html_url": "https://github.com/rust-lang/rust/commit/504a54b222553a096c8eaa0cd9efca33d916c275"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "c5e4acea31e3659b7b3bb4b5f66d573932bf6a3a", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/542e35e39789d45756c4483f07c831ebbb352ebe/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/542e35e39789d45756c4483f07c831ebbb352ebe/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=542e35e39789d45756c4483f07c831ebbb352ebe", "patch": "@@ -258,8 +258,13 @@ They are independent from the rest of the code.\n `mbe` crate contains tools for transforming between syntax trees and token tree.\n And it also handles the actual parsing and expansion of declarative macro (a-la \"Macros By Example\" or mbe).\n \n-For proc macros, we pass the token trees by loading the corresponding dynamic library (which built by `cargo`).\n-That's why the client (`proc_macro_api`) and server (`proc_macro_srv`) model are used to run proc-macro in separate process in background.\n+For proc macros, the client-server model are used to run proc-macro.\n+We pass an argument `--proc-macro` to `rust-analyzer` binary to start a separate process  (`proc_macro_srv`).\n+And the client (`proc_macro_api`) provides an interface to talk to that server separately.\n+\n+And then token trees are passed from client, and the server will load the corresponding dynamic library (which built by `cargo`).\n+And due to the fact the api for getting result from proc macro are always unstable in `rustc`,\n+we maintain our own copy (and paste) of that part of code to allow us to build the whole thing in stable rust.\n  \n  **Architecture Invariant:**\n Bad proc macros may panic or segfault accidentally. So we run it in another process and recover it from fatal error."}]}