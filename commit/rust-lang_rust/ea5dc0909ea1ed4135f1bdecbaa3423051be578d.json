{"sha": "ea5dc0909ea1ed4135f1bdecbaa3423051be578d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNWRjMDkwOWVhMWVkNDEzNWYxYmRlY2JhYTM0MjMwNTFiZTU3OGQ=", "commit": {"author": {"name": "CDirkx", "email": "christiaan@dirkx.com", "date": "2020-09-01T13:44:00Z"}, "committer": {"name": "CDirkx", "email": "christiaan@dirkx.com", "date": "2020-09-01T13:44:00Z"}, "message": "Make some Ordering methods const\n\nConstify the following methods of `core::cmp::Ordering`:\n - `reverse`\n - `then`\n\nStabilizes these methods as const under the `const_ordering` feature.\nAlso adds a test for these methods in a const context.\n\nPossible because of #49146 (Allow `if` and `match` in constants).", "tree": {"sha": "059783a04d988497d84311ef72eaa213b033085e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/059783a04d988497d84311ef72eaa213b033085e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea5dc0909ea1ed4135f1bdecbaa3423051be578d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea5dc0909ea1ed4135f1bdecbaa3423051be578d", "html_url": "https://github.com/rust-lang/rust/commit/ea5dc0909ea1ed4135f1bdecbaa3423051be578d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea5dc0909ea1ed4135f1bdecbaa3423051be578d/comments", "author": null, "committer": null, "parents": [{"sha": "e88e908e66cd1e6e30d789b37bcd774951d01856", "url": "https://api.github.com/repos/rust-lang/rust/commits/e88e908e66cd1e6e30d789b37bcd774951d01856", "html_url": "https://github.com/rust-lang/rust/commit/e88e908e66cd1e6e30d789b37bcd774951d01856"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "dde442aa7b52de84c2a3810c6627c70fb99f6295", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea5dc0909ea1ed4135f1bdecbaa3423051be578d/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea5dc0909ea1ed4135f1bdecbaa3423051be578d/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=ea5dc0909ea1ed4135f1bdecbaa3423051be578d", "patch": "@@ -356,8 +356,9 @@ impl Ordering {\n     /// ```\n     #[inline]\n     #[must_use]\n+    #[rustc_const_stable(feature = \"const_ordering\", since = \"1.48.0\")]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn reverse(self) -> Ordering {\n+    pub const fn reverse(self) -> Ordering {\n         match self {\n             Less => Greater,\n             Equal => Equal,\n@@ -394,8 +395,9 @@ impl Ordering {\n     /// ```\n     #[inline]\n     #[must_use]\n+    #[rustc_const_stable(feature = \"const_ordering\", since = \"1.48.0\")]\n     #[stable(feature = \"ordering_chaining\", since = \"1.17.0\")]\n-    pub fn then(self, other: Ordering) -> Ordering {\n+    pub const fn then(self, other: Ordering) -> Ordering {\n         match self {\n             Equal => other,\n             _ => self,"}, {"sha": "454f2da00df9e28ce2c6b40806730281fd88e071", "filename": "src/test/ui/consts/const-ordering.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ea5dc0909ea1ed4135f1bdecbaa3423051be578d/src%2Ftest%2Fui%2Fconsts%2Fconst-ordering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea5dc0909ea1ed4135f1bdecbaa3423051be578d/src%2Ftest%2Fui%2Fconsts%2Fconst-ordering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-ordering.rs?ref=ea5dc0909ea1ed4135f1bdecbaa3423051be578d", "patch": "@@ -0,0 +1,15 @@\n+// run-pass\n+\n+use std::cmp::Ordering;\n+\n+// the following methods of core::cmp::Ordering are const:\n+//  - reverse\n+//  - then\n+\n+fn main() {\n+    const REVERSE : Ordering = Ordering::Greater.reverse();\n+    assert_eq!(REVERSE, Ordering::Less);\n+\n+    const THEN : Ordering = Ordering::Equal.then(REVERSE);\n+    assert_eq!(THEN, Ordering::Less);\n+}"}]}