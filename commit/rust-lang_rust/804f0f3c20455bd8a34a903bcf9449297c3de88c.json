{"sha": "804f0f3c20455bd8a34a903bcf9449297c3de88c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNGYwZjNjMjA0NTViZDhhMzRhOTAzYmNmOTQ0OTI5N2MzZGU4OGM=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-30T17:32:57Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-31T12:55:36Z"}, "message": "Unify spanned and non-spanned Attribute ctors\n\nThere is no difference in the code/arguments, so go with the shorter\nname throughout the code.", "tree": {"sha": "ff964ba81f25d7fe62e43909a485e6e1203096ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff964ba81f25d7fe62e43909a485e6e1203096ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/804f0f3c20455bd8a34a903bcf9449297c3de88c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/804f0f3c20455bd8a34a903bcf9449297c3de88c", "html_url": "https://github.com/rust-lang/rust/commit/804f0f3c20455bd8a34a903bcf9449297c3de88c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/804f0f3c20455bd8a34a903bcf9449297c3de88c/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9152fe4ea053a29469691349f4b63aa94c9aac56", "url": "https://api.github.com/repos/rust-lang/rust/commits/9152fe4ea053a29469691349f4b63aa94c9aac56", "html_url": "https://github.com/rust-lang/rust/commit/9152fe4ea053a29469691349f4b63aa94c9aac56"}], "stats": {"total": 26, "additions": 8, "deletions": 18}, "files": [{"sha": "c403fb99a97676b53ae217a90254eba43aa5f92a", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/804f0f3c20455bd8a34a903bcf9449297c3de88c/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/804f0f3c20455bd8a34a903bcf9449297c3de88c/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=804f0f3c20455bd8a34a903bcf9449297c3de88c", "patch": "@@ -5168,7 +5168,7 @@ impl<'a> LoweringContext<'a> {\n                         let uc_nested = attr::mk_nested_word_item(uc_ident);\n                         attr::mk_list_item(e.span, allow_ident, vec![uc_nested])\n                     };\n-                    attr::mk_spanned_attr_outer(e.span, attr::mk_attr_id(), allow)\n+                    attr::mk_attr_outer(e.span, attr::mk_attr_id(), allow)\n                 };\n                 let attrs = vec![attr];\n "}, {"sha": "ec26ea8d543d36f3c7680774018333a397612599", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/804f0f3c20455bd8a34a903bcf9449297c3de88c/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/804f0f3c20455bd8a34a903bcf9449297c3de88c/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=804f0f3c20455bd8a34a903bcf9449297c3de88c", "patch": "@@ -376,37 +376,27 @@ pub fn mk_attr_id() -> AttrId {\n     AttrId(id)\n }\n \n-/// Returns an inner attribute with the given value.\n-pub fn mk_attr_inner(span: Span, id: AttrId, item: MetaItem) -> Attribute {\n-    mk_spanned_attr_inner(span, id, item)\n-}\n-\n /// Returns an inner attribute with the given value and span.\n-pub fn mk_spanned_attr_inner(sp: Span, id: AttrId, item: MetaItem) -> Attribute {\n+pub fn mk_attr_inner(span: Span, id: AttrId, item: MetaItem) -> Attribute {\n     Attribute {\n         id,\n         style: ast::AttrStyle::Inner,\n         path: item.path,\n         tokens: item.node.tokens(item.span),\n         is_sugared_doc: false,\n-        span: sp,\n+        span,\n     }\n }\n \n-/// Returns an outer attribute with the given value.\n-pub fn mk_attr_outer(span: Span, id: AttrId, item: MetaItem) -> Attribute {\n-    mk_spanned_attr_outer(span, id, item)\n-}\n-\n /// Returns an outer attribute with the given value and span.\n-pub fn mk_spanned_attr_outer(sp: Span, id: AttrId, item: MetaItem) -> Attribute {\n+pub fn mk_attr_outer(span: Span, id: AttrId, item: MetaItem) -> Attribute {\n     Attribute {\n         id,\n         style: ast::AttrStyle::Outer,\n         path: item.path,\n         tokens: item.node.tokens(item.span),\n         is_sugared_doc: false,\n-        span: sp,\n+        span,\n     }\n }\n "}, {"sha": "2b0feb7f4b36754628bcb58dedab19a9e91f2bc8", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/804f0f3c20455bd8a34a903bcf9449297c3de88c/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/804f0f3c20455bd8a34a903bcf9449297c3de88c/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=804f0f3c20455bd8a34a903bcf9449297c3de88c", "patch": "@@ -1135,7 +1135,7 @@ impl<'a> AstBuilder for ExtCtxt<'a> {\n     }\n \n     fn attribute(&self, sp: Span, mi: ast::MetaItem) -> ast::Attribute {\n-        attr::mk_spanned_attr_outer(sp, attr::mk_attr_id(), mi)\n+        attr::mk_attr_outer(sp, attr::mk_attr_id(), mi)\n     }\n \n     fn meta_word(&self, sp: Span, w: ast::Name) -> ast::MetaItem {"}, {"sha": "10d5da81ceef3ccb0ba5d073f827ea5cf088a77c", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/804f0f3c20455bd8a34a903bcf9449297c3de88c/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/804f0f3c20455bd8a34a903bcf9449297c3de88c/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=804f0f3c20455bd8a34a903bcf9449297c3de88c", "patch": "@@ -1341,8 +1341,8 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n \n             let meta = attr::mk_list_item(DUMMY_SP, Ident::with_empty_ctxt(sym::doc), items);\n             match at.style {\n-                ast::AttrStyle::Inner => *at = attr::mk_spanned_attr_inner(at.span, at.id, meta),\n-                ast::AttrStyle::Outer => *at = attr::mk_spanned_attr_outer(at.span, at.id, meta),\n+                ast::AttrStyle::Inner => *at = attr::mk_attr_inner(at.span, at.id, meta),\n+                ast::AttrStyle::Outer => *at = attr::mk_attr_outer(at.span, at.id, meta),\n             }\n         } else {\n             noop_visit_attribute(at, self)"}]}