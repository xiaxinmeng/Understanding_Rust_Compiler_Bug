{"sha": "446686f59b9f9d63ede5e8a07a7298c43209e651", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NjY4NmY1OWI5ZjlkNjNlZGU1ZThhMDdhNzI5OGM0MzIwOWU2NTE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-10-17T01:27:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-17T01:27:17Z"}, "message": "Rollup merge of #77785 - GuillaumeGomez:remove-compiler-reexports, r=ollie27\n\nRemove compiler-synthesized reexports when documenting\n\nFixes #77567\n\nr? @ollie27", "tree": {"sha": "c1524cd3f47655e853d5374f7923b17ae1fca4db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1524cd3f47655e853d5374f7923b17ae1fca4db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/446686f59b9f9d63ede5e8a07a7298c43209e651", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfikh1CRBK7hj4Ov3rIwAAdHIIADd7+VUjTnSQVUotyuRs4BdN\nbd8dUAmOddsfMmP0iG0ub+lfy7ZnY+8/59F4xGOimqPwXOgWViMbmeD/MBgmuMSd\nf0Q28SBxb44yw5J6yhNymYjpH18Uvq8jtLugC+df1j3AVAn7YJcw7MVZ998of39b\nY33zDz9OAiOm92w+HOJ+93+NrFN87GVSl1svg1wl5GUvGFlq8iCsvkLkByJZpEZX\nOt1++6IleCky7ULchmxGJGO2c0DG0shVTqXin+Tx4k33e9ptj8M2fjFPTFZxD26Y\n3lNFc5PrN62E0SV72ADisZCWaL+kFNKsuQY6gA8VXCZ9CpCOFqlXbcUs4aUo8+w=\n=tVm9\n-----END PGP SIGNATURE-----\n", "payload": "tree c1524cd3f47655e853d5374f7923b17ae1fca4db\nparent f40ecff9644e723752732d9d1f6723260ee7bb23\nparent 0faaa499ccc9fb4835251845cf457bae385f07f5\nauthor Dylan DPC <dylan.dpc@gmail.com> 1602898037 +0200\ncommitter GitHub <noreply@github.com> 1602898037 +0200\n\nRollup merge of #77785 - GuillaumeGomez:remove-compiler-reexports, r=ollie27\n\nRemove compiler-synthesized reexports when documenting\n\nFixes #77567\n\nr? @ollie27\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/446686f59b9f9d63ede5e8a07a7298c43209e651", "html_url": "https://github.com/rust-lang/rust/commit/446686f59b9f9d63ede5e8a07a7298c43209e651", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/446686f59b9f9d63ede5e8a07a7298c43209e651/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f40ecff9644e723752732d9d1f6723260ee7bb23", "url": "https://api.github.com/repos/rust-lang/rust/commits/f40ecff9644e723752732d9d1f6723260ee7bb23", "html_url": "https://github.com/rust-lang/rust/commit/f40ecff9644e723752732d9d1f6723260ee7bb23"}, {"sha": "0faaa499ccc9fb4835251845cf457bae385f07f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0faaa499ccc9fb4835251845cf457bae385f07f5", "html_url": "https://github.com/rust-lang/rust/commit/0faaa499ccc9fb4835251845cf457bae385f07f5"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "0365a8b48db3779b545a120073c6373b85f01648", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/446686f59b9f9d63ede5e8a07a7298c43209e651/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446686f59b9f9d63ede5e8a07a7298c43209e651/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=446686f59b9f9d63ede5e8a07a7298c43209e651", "patch": "@@ -23,9 +23,9 @@ use rustc_middle::ty::fold::TypeFolder;\n use rustc_middle::ty::subst::{InternalSubsts, Subst};\n use rustc_middle::ty::{self, AdtKind, Lift, Ty, TyCtxt};\n use rustc_mir::const_eval::{is_const_fn, is_min_const_fn, is_unstable_const_fn};\n-use rustc_span::hygiene::MacroKind;\n+use rustc_span::hygiene::{AstPass, MacroKind};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n-use rustc_span::{self, Pos};\n+use rustc_span::{self, ExpnKind, Pos};\n use rustc_typeck::hir_ty_to_ty;\n \n use std::collections::hash_map::Entry;\n@@ -2231,6 +2231,13 @@ impl Clean<Vec<Item>> for doctree::ExternCrate<'_> {\n \n impl Clean<Vec<Item>> for doctree::Import<'_> {\n     fn clean(&self, cx: &DocContext<'_>) -> Vec<Item> {\n+        // We need this comparison because some imports (for std types for example)\n+        // are \"inserted\" as well but directly by the compiler and they should not be\n+        // taken into account.\n+        if self.span.ctxt().outer_expn_data().kind == ExpnKind::AstPass(AstPass::StdImports) {\n+            return Vec::new();\n+        }\n+\n         // We consider inlining the documentation of `pub use` statements, but we\n         // forcefully don't inline if this is not public or if the\n         // #[doc(no_inline)] attribute is present."}, {"sha": "6d50325fed550a5b1b42bd9a3f917f2c7f8d3c8c", "filename": "src/test/rustdoc/no-compiler-reexport.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/446686f59b9f9d63ede5e8a07a7298c43209e651/src%2Ftest%2Frustdoc%2Fno-compiler-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446686f59b9f9d63ede5e8a07a7298c43209e651/src%2Ftest%2Frustdoc%2Fno-compiler-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fno-compiler-reexport.rs?ref=446686f59b9f9d63ede5e8a07a7298c43209e651", "patch": "@@ -0,0 +1,7 @@\n+// compile-flags: --no-defaults\n+\n+#![crate_name = \"foo\"]\n+\n+// @has 'foo/index.html' '//code' 'extern crate std;'\n+// @!has 'foo/index.html' '//code' 'use std::prelude::v1::*;'\n+pub struct Foo;"}]}