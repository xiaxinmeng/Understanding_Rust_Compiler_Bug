{"sha": "a3b9405ae7bb6ab4e8103b414e75c44598a10fd2", "node_id": "C_kwDOAAsO6NoAKGEzYjk0MDVhZTdiYjZhYjRlODEwM2I0MTRlNzVjNDQ1OThhMTBmZDI", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2021-11-01T21:32:55Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2021-11-10T16:35:42Z"}, "message": "Use more robust checks in rustc for wasm", "tree": {"sha": "d0c338f661b579936731abf6e2236039344e0d8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0c338f661b579936731abf6e2236039344e0d8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3b9405ae7bb6ab4e8103b414e75c44598a10fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3b9405ae7bb6ab4e8103b414e75c44598a10fd2", "html_url": "https://github.com/rust-lang/rust/commit/a3b9405ae7bb6ab4e8103b414e75c44598a10fd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3b9405ae7bb6ab4e8103b414e75c44598a10fd2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2a3c24a9582492d98652a7d88140c34e03c717e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2a3c24a9582492d98652a7d88140c34e03c717e", "html_url": "https://github.com/rust-lang/rust/commit/d2a3c24a9582492d98652a7d88140c34e03c717e"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "ff88302bf7aafab999a3718857ecb667e4f7c4da", "filename": "compiler/rustc_codegen_llvm/src/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a3b9405ae7bb6ab4e8103b414e75c44598a10fd2/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3b9405ae7bb6ab4e8103b414e75c44598a10fd2/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs?ref=a3b9405ae7bb6ab4e8103b414e75c44598a10fd2", "patch": "@@ -769,7 +769,7 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         // we like. To ensure that LLVM picks the right instruction we choose\n         // the raw wasm intrinsic functions which avoid LLVM inserting all the\n         // other control flow automatically.\n-        if self.sess().target.arch.starts_with(\"wasm32\") {\n+        if self.sess().target.is_like_wasm {\n             let src_ty = self.cx.val_ty(val);\n             if self.cx.type_kind(src_ty) != TypeKind::Vector {\n                 let float_width = self.cx.float_width(src_ty);\n@@ -791,7 +791,7 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n \n     fn fptosi(&mut self, val: &'ll Value, dest_ty: &'ll Type) -> &'ll Value {\n         // see `fptoui` above for why wasm is different here\n-        if self.sess().target.arch.starts_with(\"wasm\") {\n+        if self.sess().target.is_like_wasm {\n             let src_ty = self.cx.val_ty(val);\n             if self.cx.type_kind(src_ty) != TypeKind::Vector {\n                 let float_width = self.cx.float_width(src_ty);"}, {"sha": "b154ced42f0d6ca7808407179df28cdbe72dc007", "filename": "compiler/rustc_codegen_llvm/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3b9405ae7bb6ab4e8103b414e75c44598a10fd2/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3b9405ae7bb6ab4e8103b414e75c44598a10fd2/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs?ref=a3b9405ae7bb6ab4e8103b414e75c44598a10fd2", "patch": "@@ -490,7 +490,7 @@ impl StaticMethods for CodegenCx<'ll, 'tcx> {\n \n             // Wasm statics with custom link sections get special treatment as they\n             // go into custom sections of the wasm executable.\n-            if self.tcx.sess.opts.target_triple.triple().starts_with(\"wasm\") {\n+            if self.tcx.sess.target.is_like_wasm {\n                 if let Some(section) = attrs.link_section {\n                     let section = llvm::LLVMMDStringInContext(\n                         self.llcx,"}, {"sha": "e7fba3a70ff42d986aa05c28240426c3f8731ff3", "filename": "compiler/rustc_typeck/src/check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a3b9405ae7bb6ab4e8103b414e75c44598a10fd2/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3b9405ae7bb6ab4e8103b414e75c44598a10fd2/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs?ref=a3b9405ae7bb6ab4e8103b414e75c44598a10fd2", "patch": "@@ -536,8 +536,8 @@ fn fn_maybe_err(tcx: TyCtxt<'_>, sp: Span, abi: Abi) {\n }\n \n fn maybe_check_static_with_link_section(tcx: TyCtxt<'_>, id: LocalDefId, span: Span) {\n-    // Only restricted on wasm32 target for now\n-    if !tcx.sess.opts.target_triple.triple().starts_with(\"wasm\") {\n+    // Only restricted on wasm target for now\n+    if !tcx.sess.target.is_like_wasm {\n         return;\n     }\n "}]}