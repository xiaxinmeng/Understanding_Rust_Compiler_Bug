{"sha": "69500e8c6bad63feec7dc94af844dc30f454a592", "node_id": "C_kwDOAAsO6NoAKDY5NTAwZThjNmJhZDYzZmVlYzdkYzk0YWY4NDRkYzMwZjQ1NGE1OTI", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-13T16:17:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-13T16:17:14Z"}, "message": "Merge #11002\n\n11002: fix: Add support for v6 macro metadata format r=lnicola a=lnicola\n\nCC https://github.com/rust-analyzer/rust-analyzer/issues/10894#issuecomment-991993824\r\n\r\nbors r+\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "e1f6695dba7ea137e5f581db4d8d2b34e937e300", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1f6695dba7ea137e5f581db4d8d2b34e937e300"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69500e8c6bad63feec7dc94af844dc30f454a592", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJht3IKCRBK7hj4Ov3rIwAA9qwIAEGm/NHzJDy0vRwwp6BstL5E\nwcUxltZii2j+hkzrB1UJmRP11RK1DZlLgyzu4FAu31M1lA+snqbSxiEr1EPq/FNO\nK11aszK8CTzTU/4K/ujNElk83trxFubQkblrcBtDWf6Pbo1EDVayNupYic3/dIya\nuYqV/t27lKxSpu24qjZJVY1rQ+InzXtj9MIW29J1Hrh4MkpdIpdQHq9gRdOHuZgp\n+zen3WWHvCSviiVG9aA9C5FBjzdtoqBs8Fv02rHCSYl5xsppdKZukDqur1j1fYqQ\nq8I3nWoMW3n1cM4Rf06Owak+Wc0D+utNoeSLmjnYFarclSQ01s5kRpTN24llR44=\n=97UE\n-----END PGP SIGNATURE-----\n", "payload": "tree e1f6695dba7ea137e5f581db4d8d2b34e937e300\nparent e1f3982a5ff75744f16bf76d49f94749b81370e1\nparent e6af1ca7189132423d33ecb9e5664223daae6a9f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1639412234 +0000\ncommitter GitHub <noreply@github.com> 1639412234 +0000\n\nMerge #11002\n\n11002: fix: Add support for v6 macro metadata format r=lnicola a=lnicola\n\nCC https://github.com/rust-analyzer/rust-analyzer/issues/10894#issuecomment-991993824\r\n\r\nbors r+\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69500e8c6bad63feec7dc94af844dc30f454a592", "html_url": "https://github.com/rust-lang/rust/commit/69500e8c6bad63feec7dc94af844dc30f454a592", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69500e8c6bad63feec7dc94af844dc30f454a592/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1f3982a5ff75744f16bf76d49f94749b81370e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1f3982a5ff75744f16bf76d49f94749b81370e1", "html_url": "https://github.com/rust-lang/rust/commit/e1f3982a5ff75744f16bf76d49f94749b81370e1"}, {"sha": "e6af1ca7189132423d33ecb9e5664223daae6a9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6af1ca7189132423d33ecb9e5664223daae6a9f", "html_url": "https://github.com/rust-lang/rust/commit/e6af1ca7189132423d33ecb9e5664223daae6a9f"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "f29970d477cd5dab30089554bb6c4583da3a4d94", "filename": "crates/proc_macro_api/src/version.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/69500e8c6bad63feec7dc94af844dc30f454a592/crates%2Fproc_macro_api%2Fsrc%2Fversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69500e8c6bad63feec7dc94af844dc30f454a592/crates%2Fproc_macro_api%2Fsrc%2Fversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Fversion.rs?ref=69500e8c6bad63feec7dc94af844dc30f454a592", "patch": "@@ -99,7 +99,7 @@ fn read_section<'a>(dylib_binary: &'a [u8], section_name: &str) -> io::Result<&'\n /// * [length byte] next 1 byte tells us how many bytes we should read next\n ///   for the version string's utf8 bytes\n /// * [version string bytes encoded in utf8] <- GET THIS BOI\n-/// * [some more bytes that we don really care but still there] :-)\n+/// * [some more bytes that we don't really care but about still there] :-)\n /// Check this issue for more about the bytes layout:\n /// <https://github.com/rust-analyzer/rust-analyzer/issues/6174>\n fn read_version(dylib_path: &AbsPath) -> io::Result<String> {\n@@ -108,15 +108,25 @@ fn read_version(dylib_path: &AbsPath) -> io::Result<String> {\n \n     let dot_rustc = read_section(&dylib_mmaped, \".rustc\")?;\n \n-    let header = &dot_rustc[..8];\n-    const EXPECTED_HEADER: [u8; 8] = [b'r', b'u', b's', b't', 0, 0, 0, 5];\n-    // check if header is valid\n-    if header != EXPECTED_HEADER {\n+    // check if magic is valid\n+    if &dot_rustc[0..4] != b\"rust\" {\n         return Err(io::Error::new(\n             io::ErrorKind::InvalidData,\n-            format!(\"only metadata version 5 is supported, section header was: {:?}\", header),\n+            format!(\"unknown metadata magic, expected `rust`, found `{:?}`\", &dot_rustc[0..4]),\n         ));\n     }\n+    let version = u32::from_be_bytes([dot_rustc[4], dot_rustc[5], dot_rustc[6], dot_rustc[7]]);\n+    // Last supported version is:\n+    // https://github.com/rust-lang/rust/commit/0696e79f2740ad89309269b460579e548a5cd632\n+    match version {\n+        5 | 6 => {}\n+        _ => {\n+            return Err(io::Error::new(\n+                io::ErrorKind::InvalidData,\n+                format!(\"unsupported metadata version {}\", version),\n+            ));\n+        }\n+    }\n \n     let snappy_portion = &dot_rustc[8..];\n \n@@ -130,7 +140,7 @@ fn read_version(dylib_path: &AbsPath) -> io::Result<String> {\n     // to know the length\n     let mut bytes_before_version = [0u8; 13];\n     snappy_decoder.read_exact(&mut bytes_before_version)?;\n-    let length = bytes_before_version[12]; // what? can't use -1 indexing?\n+    let length = bytes_before_version[12];\n \n     let mut version_string_utf8 = vec![0u8; length as usize];\n     snappy_decoder.read_exact(&mut version_string_utf8)?;"}]}