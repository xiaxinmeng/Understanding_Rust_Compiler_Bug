{"sha": "4c6a6bc3f9466c35a749ccc25c54bb87a5951769", "node_id": "C_kwDOAAsO6NoAKDRjNmE2YmMzZjk0NjZjMzVhNzQ5Y2NjMjVjNTRiYjg3YTU5NTE3Njk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-04T02:17:12Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-04T02:17:12Z"}, "message": "Tighten spans for bad fields in Copy struct", "tree": {"sha": "61e034cd7553321766bd939f8c6718b6a166e303", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61e034cd7553321766bd939f8c6718b6a166e303"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c6a6bc3f9466c35a749ccc25c54bb87a5951769", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c6a6bc3f9466c35a749ccc25c54bb87a5951769", "html_url": "https://github.com/rust-lang/rust/commit/4c6a6bc3f9466c35a749ccc25c54bb87a5951769", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c6a6bc3f9466c35a749ccc25c54bb87a5951769/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6b8c6954829669a5c4fa320c3e6132edf04fcfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6b8c6954829669a5c4fa320c3e6132edf04fcfc", "html_url": "https://github.com/rust-lang/rust/commit/a6b8c6954829669a5c4fa320c3e6132edf04fcfc"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "f04f527ccb7af8f3062ab4a2f4361c8876afea16", "filename": "compiler/rustc_trait_selection/src/traits/misc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c6a6bc3f9466c35a749ccc25c54bb87a5951769/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c6a6bc3f9466c35a749ccc25c54bb87a5951769/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs?ref=4c6a6bc3f9466c35a749ccc25c54bb87a5951769", "patch": "@@ -20,7 +20,7 @@ pub fn can_type_implement_copy<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     self_type: Ty<'tcx>,\n-    cause: ObligationCause<'tcx>,\n+    parent_cause: ObligationCause<'tcx>,\n ) -> Result<(), CopyImplementationError<'tcx>> {\n     // FIXME: (@jroesch) float this code up\n     tcx.infer_ctxt().enter(|infcx| {\n@@ -59,7 +59,7 @@ pub fn can_type_implement_copy<'tcx>(\n                     .ty(tcx, traits::InternalSubsts::identity_for_item(tcx, adt.did()))\n                     .has_param_types_or_consts()\n                 {\n-                    cause.clone()\n+                    parent_cause.clone()\n                 } else {\n                     ObligationCause::dummy_with_span(span)\n                 };"}, {"sha": "9f4e6a46d73220596ce13b2108f80868a101805b", "filename": "compiler/rustc_typeck/src/coherence/builtin.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c6a6bc3f9466c35a749ccc25c54bb87a5951769/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c6a6bc3f9466c35a749ccc25c54bb87a5951769/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs?ref=4c6a6bc3f9466c35a749ccc25c54bb87a5951769", "patch": "@@ -107,6 +107,10 @@ fn visit_implementation_of_copy(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n \n             for (field, ty) in fields {\n                 let field_span = tcx.def_span(field.did);\n+                let field_ty_span = match tcx.hir().get_if_local(field.did) {\n+                    Some(hir::Node::Field(field_def)) => field_def.ty.span,\n+                    _ => field_span,\n+                };\n                 err.span_label(field_span, \"this field does not implement `Copy`\");\n                 // Spin up a new FulfillmentContext, so we can get the _precise_ reason\n                 // why this field does not implement Copy. This is useful because sometimes\n@@ -119,7 +123,7 @@ fn visit_implementation_of_copy(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n                         param_env,\n                         ty,\n                         tcx.lang_items().copy_trait().unwrap(),\n-                        traits::ObligationCause::dummy_with_span(field_span),\n+                        traits::ObligationCause::dummy_with_span(field_ty_span),\n                     );\n                     for error in fulfill_cx.select_all_or_error(&infcx) {\n                         let error_predicate = error.obligation.predicate;"}, {"sha": "faf730a5ce321bc9d3f338110bb5b2189a9deb3e", "filename": "src/test/ui/suggestions/missing-bound-in-derive-copy-impl-3.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c6a6bc3f9466c35a749ccc25c54bb87a5951769/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c6a6bc3f9466c35a749ccc25c54bb87a5951769/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr?ref=4c6a6bc3f9466c35a749ccc25c54bb87a5951769", "patch": "@@ -10,12 +10,12 @@ LL |     pub size: Vector2<K>\n    |     -------------------- this field does not implement `Copy`\n    |\n note: the `Copy` impl for `Vector2<K>` requires that `K: Debug`\n-  --> $DIR/missing-bound-in-derive-copy-impl-3.rs:12:5\n+  --> $DIR/missing-bound-in-derive-copy-impl-3.rs:12:14\n    |\n LL |     pub loc: Vector2<K>,\n-   |     ^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^\n LL |     pub size: Vector2<K>\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^^^\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting this bound\n    |"}, {"sha": "11bc540991775491632e98c875937dbdc4ff1f74", "filename": "src/test/ui/suggestions/missing-bound-in-derive-copy-impl.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c6a6bc3f9466c35a749ccc25c54bb87a5951769/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c6a6bc3f9466c35a749ccc25c54bb87a5951769/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr?ref=4c6a6bc3f9466c35a749ccc25c54bb87a5951769", "patch": "@@ -10,12 +10,12 @@ LL |     pub size: Vector2<K>\n    |     -------------------- this field does not implement `Copy`\n    |\n note: the `Copy` impl for `Vector2<K>` requires that `K: Debug`\n-  --> $DIR/missing-bound-in-derive-copy-impl.rs:11:5\n+  --> $DIR/missing-bound-in-derive-copy-impl.rs:11:14\n    |\n LL |     pub loc: Vector2<K>,\n-   |     ^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^\n LL |     pub size: Vector2<K>\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^^^\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider restricting type parameter `K`\n    |"}, {"sha": "8ecdafdde204553234cd9748e9d4e3a361aefa05", "filename": "src/test/ui/union/union-copy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c6a6bc3f9466c35a749ccc25c54bb87a5951769/src%2Ftest%2Fui%2Funion%2Funion-copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c6a6bc3f9466c35a749ccc25c54bb87a5951769/src%2Ftest%2Fui%2Funion%2Funion-copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-copy.stderr?ref=4c6a6bc3f9466c35a749ccc25c54bb87a5951769", "patch": "@@ -8,10 +8,10 @@ LL | impl Copy for W {}\n    |      ^^^^\n    |\n note: the `Copy` impl for `ManuallyDrop<String>` requires that `String: Copy`\n-  --> $DIR/union-copy.rs:8:5\n+  --> $DIR/union-copy.rs:8:8\n    |\n LL |     a: std::mem::ManuallyDrop<String>\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}]}