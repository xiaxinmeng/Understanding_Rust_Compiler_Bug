{"sha": "a1cd79ff4e407ccaa1e3f7ac794812251600970c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExY2Q3OWZmNGU0MDdjY2FhMWUzZjdhYzc5NDgxMjI1MTYwMDk3MGM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-03T23:48:03Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-04T04:41:09Z"}, "message": "Remove `Encodable`/`Decodable` impls for `LocalInternedString`.", "tree": {"sha": "187b81881f9e37bfadff65e5d5f5d3351955ae4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/187b81881f9e37bfadff65e5d5f5d3351955ae4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1cd79ff4e407ccaa1e3f7ac794812251600970c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1cd79ff4e407ccaa1e3f7ac794812251600970c", "html_url": "https://github.com/rust-lang/rust/commit/a1cd79ff4e407ccaa1e3f7ac794812251600970c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1cd79ff4e407ccaa1e3f7ac794812251600970c/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6025fc843a216a0bff9f25014dc61018266e0aa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6025fc843a216a0bff9f25014dc61018266e0aa1", "html_url": "https://github.com/rust-lang/rust/commit/6025fc843a216a0bff9f25014dc61018266e0aa1"}], "stats": {"total": 12, "additions": 0, "deletions": 12}, "files": [{"sha": "32ca1fdff93931236d51dd2e953b8802d3ade924", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a1cd79ff4e407ccaa1e3f7ac794812251600970c/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1cd79ff4e407ccaa1e3f7ac794812251600970c/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=a1cd79ff4e407ccaa1e3f7ac794812251600970c", "patch": "@@ -1231,18 +1231,6 @@ impl fmt::Display for LocalInternedString {\n     }\n }\n \n-impl Decodable for LocalInternedString {\n-    fn decode<D: Decoder>(d: &mut D) -> Result<LocalInternedString, D::Error> {\n-        Ok(LocalInternedString::intern(&d.read_str()?))\n-    }\n-}\n-\n-impl Encodable for LocalInternedString {\n-    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n-        s.emit_str(self.string)\n-    }\n-}\n-\n /// An alternative to `Symbol` that is focused on string contents. It has two\n /// main differences to `Symbol`.\n ///"}]}