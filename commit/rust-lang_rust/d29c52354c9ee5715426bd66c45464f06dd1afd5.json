{"sha": "d29c52354c9ee5715426bd66c45464f06dd1afd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyOWM1MjM1NGM5ZWU1NzE1NDI2YmQ2NmM0NTQ2NGYwNmRkMWFmZDU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-16T11:27:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-16T11:28:04Z"}, "message": "minor: remove dead code", "tree": {"sha": "003088c02be3a9e3a3afb974c6316f4312486d43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/003088c02be3a9e3a3afb974c6316f4312486d43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d29c52354c9ee5715426bd66c45464f06dd1afd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d29c52354c9ee5715426bd66c45464f06dd1afd5", "html_url": "https://github.com/rust-lang/rust/commit/d29c52354c9ee5715426bd66c45464f06dd1afd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d29c52354c9ee5715426bd66c45464f06dd1afd5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b641a66078ce2f2363e9a3b050ba448b93fb7cb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b641a66078ce2f2363e9a3b050ba448b93fb7cb6", "html_url": "https://github.com/rust-lang/rust/commit/b641a66078ce2f2363e9a3b050ba448b93fb7cb6"}], "stats": {"total": 34, "additions": 10, "deletions": 24}, "files": [{"sha": "d619d6a46274c7739e37948d689713f1e8139b05", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 10, "deletions": 24, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d29c52354c9ee5715426bd66c45464f06dd1afd5/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d29c52354c9ee5715426bd66c45464f06dd1afd5/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=d29c52354c9ee5715426bd66c45464f06dd1afd5", "patch": "@@ -336,35 +336,17 @@ fn macro_def(db: &dyn AstDatabase, id: MacroDefId) -> Option<Arc<TokenExpander>>\n }\n \n fn macro_expand(db: &dyn AstDatabase, id: MacroCallId) -> ExpandResult<Option<Arc<tt::Subtree>>> {\n-    macro_expand_with_arg(db, id, None)\n-}\n-\n-fn macro_expand_error(db: &dyn AstDatabase, macro_call: MacroCallId) -> Option<ExpandError> {\n-    db.macro_expand(macro_call).err\n-}\n-\n-fn macro_expand_with_arg(\n-    db: &dyn AstDatabase,\n-    id: MacroCallId,\n-    arg: Option<Arc<(tt::Subtree, mbe::TokenMap)>>,\n-) -> ExpandResult<Option<Arc<tt::Subtree>>> {\n     let _p = profile::span(\"macro_expand\");\n     let loc: MacroCallLoc = db.lookup_intern_macro(id);\n     if let Some(eager) = &loc.eager {\n-        if arg.is_some() {\n-            return ExpandResult::str_err(\n-                \"speculative macro expansion not implemented for eager macro\".to_owned(),\n-            );\n-        } else {\n-            return ExpandResult {\n-                value: Some(eager.arg_or_expansion.clone()),\n-                // FIXME: There could be errors here!\n-                err: None,\n-            };\n-        }\n+        return ExpandResult {\n+            value: Some(eager.arg_or_expansion.clone()),\n+            // FIXME: There could be errors here!\n+            err: None,\n+        };\n     }\n \n-    let macro_arg = match arg.or_else(|| db.macro_arg(id)) {\n+    let macro_arg = match db.macro_arg(id) {\n         Some(it) => it,\n         None => return ExpandResult::str_err(\"Fail to args in to tt::TokenTree\".into()),\n     };\n@@ -388,6 +370,10 @@ fn macro_expand_with_arg(\n     ExpandResult { value: Some(Arc::new(tt)), err }\n }\n \n+fn macro_expand_error(db: &dyn AstDatabase, macro_call: MacroCallId) -> Option<ExpandError> {\n+    db.macro_expand(macro_call).err\n+}\n+\n fn expand_proc_macro(\n     db: &dyn AstDatabase,\n     id: MacroCallId,"}]}