{"sha": "e44467a47f2a85078a8af3cbc3765fec9261a850", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NDQ2N2E0N2YyYTg1MDc4YThhZjNjYmMzNzY1ZmVjOTI2MWE4NTA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-27T02:13:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-27T04:34:16Z"}, "message": "rustdoc: Add resources to the doc fold", "tree": {"sha": "67c01e5197c060ade9803a517b672eaf1606c742", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67c01e5197c060ade9803a517b672eaf1606c742"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e44467a47f2a85078a8af3cbc3765fec9261a850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e44467a47f2a85078a8af3cbc3765fec9261a850", "html_url": "https://github.com/rust-lang/rust/commit/e44467a47f2a85078a8af3cbc3765fec9261a850", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e44467a47f2a85078a8af3cbc3765fec9261a850/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23e9f7a1b6a0f2056ad6981e198513aee08e999d", "url": "https://api.github.com/repos/rust-lang/rust/commits/23e9f7a1b6a0f2056ad6981e198513aee08e999d", "html_url": "https://github.com/rust-lang/rust/commit/23e9f7a1b6a0f2056ad6981e198513aee08e999d"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "130ce69eda5e5999b048f73ee49844642773ccdb", "filename": "src/rustdoc/fold.rs", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/e44467a47f2a85078a8af3cbc3765fec9261a850/src%2Frustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e44467a47f2a85078a8af3cbc3765fec9261a850/src%2Frustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ffold.rs?ref=e44467a47f2a85078a8af3cbc3765fec9261a850", "patch": "@@ -18,12 +18,15 @@ type fold_mod<T> = fn~(fold: fold<T>, doc: doc::moddoc) -> doc::moddoc;\n type fold_fn<T> = fn~(fold: fold<T>, doc: doc::fndoc) -> doc::fndoc;\n type fold_const<T> = fn~(fold: fold<T>, doc: doc::constdoc) -> doc::constdoc;\n type fold_enum<T> = fn~(fold: fold<T>, doc: doc::enumdoc) -> doc::enumdoc;\n+type fold_res<T> = fn~(fold: fold<T>, doc: doc::resdoc) -> doc::resdoc;\n type fold_modlist<T> = fn~(fold: fold<T>, list: doc::modlist) -> doc::modlist;\n type fold_fnlist<T> = fn~(fold: fold<T>, list: doc::fnlist) -> doc::fnlist;\n type fold_constlist<T> = fn~(\n     fold: fold<T>, list: doc::constlist) -> doc::constlist;\n type fold_enumlist<T> = fn~(\n     fold: fold<T>, list: doc::enumlist) -> doc::enumlist;\n+type fold_reslist<T> = fn~(\n+    fold: fold<T>, list: doc::reslist) -> doc::reslist;\n \n type t<T> = {\n     ctxt: T,\n@@ -32,10 +35,12 @@ type t<T> = {\n     fold_fn: fold_fn<T>,\n     fold_const: fold_const<T>,\n     fold_enum: fold_enum<T>,\n+    fold_res: fold_res<T>,\n     fold_modlist: fold_modlist<T>,\n     fold_fnlist: fold_fnlist<T>,\n     fold_constlist: fold_constlist<T>,\n-    fold_enumlist: fold_enumlist<T>\n+    fold_enumlist: fold_enumlist<T>,\n+    fold_reslist: fold_reslist<T>\n };\n \n \n@@ -48,10 +53,12 @@ fn mk_fold<T:copy>(\n     fold_fn: fold_fn<T>,\n     fold_const: fold_const<T>,\n     fold_enum: fold_enum<T>,\n+    fold_res: fold_res<T>,\n     fold_modlist: fold_modlist<T>,\n     fold_fnlist: fold_fnlist<T>,\n     fold_constlist: fold_constlist<T>,\n-    fold_enumlist: fold_enumlist<T>\n+    fold_enumlist: fold_enumlist<T>,\n+    fold_reslist: fold_reslist<T>\n ) -> fold<T> {\n     fold({\n         ctxt: ctxt,\n@@ -60,10 +67,12 @@ fn mk_fold<T:copy>(\n         fold_fn: fold_fn,\n         fold_const: fold_const,\n         fold_enum: fold_enum,\n+        fold_res: fold_res,\n         fold_modlist: fold_modlist,\n         fold_fnlist: fold_fnlist,\n         fold_constlist: fold_constlist,\n-        fold_enumlist: fold_enumlist\n+        fold_enumlist: fold_enumlist,\n+        fold_reslist: fold_reslist\n     })\n }\n \n@@ -75,10 +84,12 @@ fn default_seq_fold<T:copy>(ctxt: T) -> fold<T> {\n         {|f, d| default_seq_fold_fn(f, d)},\n         {|f, d| default_seq_fold_const(f, d)},\n         {|f, d| default_seq_fold_enum(f, d)},\n+        {|f, d| default_seq_fold_res(f, d)},\n         {|f, d| default_seq_fold_modlist(f, d)},\n         {|f, d| default_seq_fold_fnlist(f, d)},\n         {|f, d| default_seq_fold_constlist(f, d)},\n-        {|f, d| default_seq_fold_enumlist(f, d)}\n+        {|f, d| default_seq_fold_enumlist(f, d)},\n+        {|f, d| default_seq_fold_reslist(f, d)}\n     )\n }\n \n@@ -125,6 +136,13 @@ fn default_seq_fold_enum<T>(\n     doc\n }\n \n+fn default_seq_fold_res<T>(\n+    _fold: fold<T>,\n+    doc: doc::resdoc\n+) -> doc::resdoc {\n+    doc\n+}\n+\n fn default_seq_fold_modlist<T>(\n     fold: fold<T>,\n     list: doc::modlist\n@@ -161,6 +179,15 @@ fn default_seq_fold_enumlist<T>(\n     })\n }\n \n+fn default_seq_fold_reslist<T>(\n+    fold: fold<T>,\n+    list: doc::reslist\n+) -> doc::reslist {\n+    doc::reslist(vec::map(*list) {|doc|\n+        fold.fold_res(fold, doc)\n+    })\n+}\n+\n #[test]\n fn default_fold_should_produce_same_doc() {\n     let source = \"mod a { fn b() { } mod c { fn d() { } } }\";"}]}