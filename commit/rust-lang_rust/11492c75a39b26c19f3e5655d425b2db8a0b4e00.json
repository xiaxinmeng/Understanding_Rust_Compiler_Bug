{"sha": "11492c75a39b26c19f3e5655d425b2db8a0b4e00", "node_id": "C_kwDOAAsO6NoAKDExNDkyYzc1YTM5YjI2YzE5ZjNlNTY1NWQ0MjViMmRiOGEwYjRlMDA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-06T19:16:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-06T19:16:22Z"}, "message": "Auto merge of #7772 - Manishearth:doc-markdown-intra, r=camsteffen\n\nHandle intra-doc links in doc_markdown\n\nFixes #7758\n\nchangelog: Handle intra-doc links in [`doc_markdown`]", "tree": {"sha": "c9d0463f86ad7e47d46f474bbcc1a756a533db33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9d0463f86ad7e47d46f474bbcc1a756a533db33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11492c75a39b26c19f3e5655d425b2db8a0b4e00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11492c75a39b26c19f3e5655d425b2db8a0b4e00", "html_url": "https://github.com/rust-lang/rust/commit/11492c75a39b26c19f3e5655d425b2db8a0b4e00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11492c75a39b26c19f3e5655d425b2db8a0b4e00/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9d753e4f5eb921a4185d5bbaef15a5af2c43e2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9d753e4f5eb921a4185d5bbaef15a5af2c43e2f", "html_url": "https://github.com/rust-lang/rust/commit/b9d753e4f5eb921a4185d5bbaef15a5af2c43e2f"}, {"sha": "2a8d7bd0dd69ab1fe2a2af0f2984959f62b5631c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a8d7bd0dd69ab1fe2a2af0f2984959f62b5631c", "html_url": "https://github.com/rust-lang/rust/commit/2a8d7bd0dd69ab1fe2a2af0f2984959f62b5631c"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "75873fd7c1c96c4f7036a354c6986dc25e3c0387", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/11492c75a39b26c19f3e5655d425b2db8a0b4e00/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11492c75a39b26c19f3e5655d425b2db8a0b4e00/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=11492c75a39b26c19f3e5655d425b2db8a0b4e00", "patch": "@@ -406,6 +406,15 @@ struct DocHeaders {\n }\n \n fn check_attrs<'a>(cx: &LateContext<'_>, valid_idents: &FxHashSet<String>, attrs: &'a [Attribute]) -> DocHeaders {\n+    use pulldown_cmark::{BrokenLink, CowStr, Options};\n+    /// We don't want the parser to choke on intra doc links. Since we don't\n+    /// actually care about rendering them, just pretend that all broken links are\n+    /// point to a fake address.\n+    #[allow(clippy::unnecessary_wraps)] // we're following a type signature\n+    fn fake_broken_link_callback<'a>(_: BrokenLink<'_>) -> Option<(CowStr<'a>, CowStr<'a>)> {\n+        Some((\"fake\".into(), \"fake\".into()))\n+    }\n+\n     let mut doc = String::new();\n     let mut spans = vec![];\n \n@@ -440,7 +449,10 @@ fn check_attrs<'a>(cx: &LateContext<'_>, valid_idents: &FxHashSet<String>, attrs\n         };\n     }\n \n-    let parser = pulldown_cmark::Parser::new(&doc).into_offset_iter();\n+    let mut cb = fake_broken_link_callback;\n+\n+    let parser =\n+        pulldown_cmark::Parser::new_with_broken_link_callback(&doc, Options::empty(), Some(&mut cb)).into_offset_iter();\n     // Iterate over all `Events` and combine consecutive events into one\n     let events = parser.coalesce(|previous, current| {\n         use pulldown_cmark::Event::Text;"}, {"sha": "342208e52b8e945ea68881260f7186a35d9cfb4a", "filename": "tests/ui/doc/doc.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11492c75a39b26c19f3e5655d425b2db8a0b4e00/tests%2Fui%2Fdoc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11492c75a39b26c19f3e5655d425b2db8a0b4e00/tests%2Fui%2Fdoc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc%2Fdoc.rs?ref=11492c75a39b26c19f3e5655d425b2db8a0b4e00", "patch": "@@ -203,6 +203,11 @@ fn issue_2343() {}\n /// __|_ _|__||_|\n fn pulldown_cmark_crash() {}\n \n+/// This should not lint\n+/// (regression test for #7758)\n+/// [plain text][path::to::item]\n+fn intra_doc_link() {}\n+\n // issue #7033 - generic_const_exprs ICE\n struct S<T, const N: usize>\n where [(); N.checked_next_power_of_two().unwrap()]: {"}]}