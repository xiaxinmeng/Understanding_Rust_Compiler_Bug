{"sha": "247ac265f1e7f2d812e6f9174d48ceef45465b91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0N2FjMjY1ZjFlN2YyZDgxMmU2ZjkxNzRkNDhjZWVmNDU0NjViOTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-14T22:03:11Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-14T22:17:26Z"}, "message": "fix test", "tree": {"sha": "7323905a2e0efe7fefb029c8d049987df6a6462f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7323905a2e0efe7fefb029c8d049987df6a6462f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/247ac265f1e7f2d812e6f9174d48ceef45465b91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/247ac265f1e7f2d812e6f9174d48ceef45465b91", "html_url": "https://github.com/rust-lang/rust/commit/247ac265f1e7f2d812e6f9174d48ceef45465b91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/247ac265f1e7f2d812e6f9174d48ceef45465b91/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4a5aa45dc480792b24535ee6739a4e9a15e8aa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4a5aa45dc480792b24535ee6739a4e9a15e8aa8", "html_url": "https://github.com/rust-lang/rust/commit/c4a5aa45dc480792b24535ee6739a4e9a15e8aa8"}], "stats": {"total": 23, "additions": 6, "deletions": 17}, "files": [{"sha": "402c719b153462d1d4ec48e0c3c998fffba11ddb", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/247ac265f1e7f2d812e6f9174d48ceef45465b91/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/247ac265f1e7f2d812e6f9174d48ceef45465b91/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=247ac265f1e7f2d812e6f9174d48ceef45465b91", "patch": "@@ -15,14 +15,10 @@ use lazy_static::lazy_static;\n ///\n /// #Example\n /// ```\n-/// use ra_prof::set_filter;\n-/// use ra_prof::Filter;\n-/// let max_depth = 2;\n-/// let allowed = vec![\"profile1\".to_string(), \"profile2\".to_string()];\n-/// let f = Filter::new( max_depth, allowed );\n+/// use ra_prof::{set_filter, Filter};\n+/// let f = Filter::from_spec(\"profile1|profile2@2\");\n /// set_filter(f);\n /// ```\n-///\n pub fn set_filter(f: Filter) {\n     PROFILING_ENABLED.store(f.depth > 0, Ordering::SeqCst);\n     let set = HashSet::from_iter(f.allowed.iter().cloned());\n@@ -43,12 +39,9 @@ pub fn set_filter(f: Filter) {\n ///\n /// #Example\n /// ```\n-/// use ra_prof::profile;\n-/// use ra_prof::set_filter;\n-/// use ra_prof::Filter;\n+/// use ra_prof::{profile, set_filter, Filter};\n ///\n-/// let allowed = vec![\"profile1\".to_string(), \"profile2\".to_string()];\n-/// let f = Filter::new(2, allowed);\n+/// let f = Filter::from_spec(\"profile1|profile2@2\");\n /// set_filter(f);\n /// profiling_function1();\n ///\n@@ -66,7 +59,6 @@ pub fn set_filter(f: Filter) {\n ///  0ms - profile\n ///      0ms - profile2\n /// ```\n-///\n pub fn profile(desc: &str) -> Profiler {\n     assert!(!desc.is_empty());\n     if !PROFILING_ENABLED.load(Ordering::Relaxed) {\n@@ -220,15 +212,12 @@ fn print(lvl: usize, msgs: &[Message], out: &mut impl Write) {\n \n #[cfg(test)]\n mod tests {\n-\n-    use super::profile;\n-    use super::set_filter;\n-    use super::Filter;\n+    use super::*;\n \n     #[test]\n     fn test_basic_profile() {\n         let s = vec![\"profile1\".to_string(), \"profile2\".to_string()];\n-        let f = Filter::new(2, s);\n+        let f = Filter::new(2, s, Duration::new(0, 0));\n         set_filter(f);\n         profiling_function1();\n     }"}]}