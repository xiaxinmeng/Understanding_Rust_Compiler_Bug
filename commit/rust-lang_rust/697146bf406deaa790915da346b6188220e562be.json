{"sha": "697146bf406deaa790915da346b6188220e562be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NzE0NmJmNDA2ZGVhYTc5MDkxNWRhMzQ2YjYxODgyMjBlNTYyYmU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-15T21:58:58Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-22T19:54:16Z"}, "message": "use `ParamEnv` from `ty` rather than importing", "tree": {"sha": "d0903b471702e2016b9da1c045aac478dbefa7f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0903b471702e2016b9da1c045aac478dbefa7f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/697146bf406deaa790915da346b6188220e562be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/697146bf406deaa790915da346b6188220e562be", "html_url": "https://github.com/rust-lang/rust/commit/697146bf406deaa790915da346b6188220e562be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/697146bf406deaa790915da346b6188220e562be/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "226358e2fb2541678c21bdddc603311863a5ab93", "url": "https://api.github.com/repos/rust-lang/rust/commits/226358e2fb2541678c21bdddc603311863a5ab93", "html_url": "https://github.com/rust-lang/rust/commit/226358e2fb2541678c21bdddc603311863a5ab93"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "88606f977ba095be9e94db32dd6ad9d5b73fc5cb", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/697146bf406deaa790915da346b6188220e562be/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/697146bf406deaa790915da346b6188220e562be/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=697146bf406deaa790915da346b6188220e562be", "patch": "@@ -28,7 +28,7 @@ use middle::lang_items;\n use mir::tcx::LvalueTy;\n use ty::subst::{Kind, Subst, Substs};\n use ty::{TyVid, IntVid, FloatVid};\n-use ty::{self, ParamEnv, Ty, TyCtxt};\n+use ty::{self, Ty, TyCtxt};\n use ty::error::{ExpectedFound, TypeError, UnconstrainedNumeric};\n use ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n use ty::relate::{Relate, RelateResult, TypeRelation};\n@@ -526,7 +526,7 @@ impl<'a, 'gcx, 'tcx> InferCtxtBuilder<'a, 'gcx, 'tcx> {\n         let tables = tables.map(InferTables::Interned).unwrap_or_else(|| {\n             fresh_tables.as_ref().map_or(InferTables::Missing, InferTables::InProgress)\n         });\n-        let param_env = param_env.take().unwrap_or_else(|| ParamEnv::empty());\n+        let param_env = param_env.take().unwrap_or_else(|| ty::ParamEnv::empty());\n         global_tcx.enter_local(arena, |tcx| f(InferCtxt {\n             tcx: tcx,\n             tables: tables,"}, {"sha": "931cdf4f6861208d048fad342af8256c502ae442", "filename": "src/librustc_borrowck/borrowck/mir/gather_moves.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/697146bf406deaa790915da346b6188220e562be/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/697146bf406deaa790915da346b6188220e562be/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs?ref=697146bf406deaa790915da346b6188220e562be", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n \n-use rustc::ty::{self, TyCtxt, ParamEnv};\n+use rustc::ty::{self, TyCtxt};\n use rustc::mir::*;\n use rustc::util::nodemap::FxHashMap;\n use rustc_data_structures::indexed_vec::{IndexVec};\n@@ -191,7 +191,7 @@ pub struct MovePathLookup<'tcx> {\n struct MoveDataBuilder<'a, 'tcx: 'a> {\n     mir: &'a Mir<'tcx>,\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-    param_env: ParamEnv<'tcx>,\n+    param_env: ty::ParamEnv<'tcx>,\n     data: MoveData<'tcx>,\n }\n \n@@ -203,7 +203,7 @@ pub enum MovePathError {\n impl<'a, 'tcx> MoveDataBuilder<'a, 'tcx> {\n     fn new(mir: &'a Mir<'tcx>,\n            tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-           param_env: ParamEnv<'tcx>)\n+           param_env: ty::ParamEnv<'tcx>)\n            -> Self {\n         let mut move_paths = IndexVec::new();\n         let mut path_map = IndexVec::new();\n@@ -370,15 +370,15 @@ impl<'tcx> MovePathLookup<'tcx> {\n impl<'a, 'tcx> MoveData<'tcx> {\n     pub fn gather_moves(mir: &Mir<'tcx>,\n                         tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                        param_env: ParamEnv<'tcx>)\n+                        param_env: ty::ParamEnv<'tcx>)\n                         -> Self {\n         gather_moves(mir, tcx, param_env)\n     }\n }\n \n fn gather_moves<'a, 'tcx>(mir: &Mir<'tcx>,\n                           tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                          param_env: ParamEnv<'tcx>)\n+                          param_env: ty::ParamEnv<'tcx>)\n                           -> MoveData<'tcx> {\n     let mut builder = MoveDataBuilder::new(mir, tcx, param_env);\n "}, {"sha": "6f966be857a1e3e5d1aec64fb83e48e34ffd7c45", "filename": "src/librustc_passes/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/697146bf406deaa790915da346b6188220e562be/src%2Flibrustc_passes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/697146bf406deaa790915da346b6188220e562be/src%2Flibrustc_passes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fconsts.rs?ref=697146bf406deaa790915da346b6188220e562be", "patch": "@@ -38,7 +38,7 @@ use rustc::middle::expr_use_visitor as euv;\n use rustc::middle::mem_categorization as mc;\n use rustc::middle::mem_categorization::Categorization;\n use rustc::mir::transform::MirSource;\n-use rustc::ty::{self, ParamEnv, Ty, TyCtxt};\n+use rustc::ty::{self, Ty, TyCtxt};\n use rustc::traits::Reveal;\n use rustc::util::common::ErrorReported;\n use rustc::util::nodemap::NodeSet;\n@@ -466,7 +466,7 @@ pub fn check_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n         in_fn: false,\n         promotable: false,\n         mut_rvalue_borrows: NodeSet(),\n-        param_env: ParamEnv::empty(),\n+        param_env: ty::ParamEnv::empty(),\n     }.as_deep_visitor());\n     tcx.sess.abort_if_errors();\n }"}, {"sha": "0dece586c930dabfd39226e4ec8e817161049536", "filename": "src/librustc_trans/context.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/697146bf406deaa790915da346b6188220e562be/src%2Flibrustc_trans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/697146bf406deaa790915da346b6188220e562be/src%2Flibrustc_trans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontext.rs?ref=697146bf406deaa790915da346b6188220e562be", "patch": "@@ -24,7 +24,7 @@ use partitioning::CodegenUnit;\n use type_::Type;\n use rustc_data_structures::base_n;\n use rustc::ty::subst::Substs;\n-use rustc::ty::{self, ParamEnv, Ty, TyCtxt};\n+use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::layout::{LayoutTyper, TyLayout};\n use session::config::NoDebugInfo;\n use session::Session;\n@@ -321,15 +321,15 @@ impl<'b, 'tcx> SharedCrateContext<'b, 'tcx> {\n     }\n \n     pub fn type_needs_drop(&self, ty: Ty<'tcx>) -> bool {\n-        ty.needs_drop(self.tcx, ParamEnv::empty())\n+        ty.needs_drop(self.tcx, ty::ParamEnv::empty())\n     }\n \n     pub fn type_is_sized(&self, ty: Ty<'tcx>) -> bool {\n-        ty.is_sized(self.tcx, ParamEnv::empty(), DUMMY_SP)\n+        ty.is_sized(self.tcx, ty::ParamEnv::empty(), DUMMY_SP)\n     }\n \n     pub fn type_is_freeze(&self, ty: Ty<'tcx>) -> bool {\n-        ty.is_freeze(self.tcx, ParamEnv::empty(), DUMMY_SP)\n+        ty.is_freeze(self.tcx, ty::ParamEnv::empty(), DUMMY_SP)\n     }\n \n     pub fn exported_symbols<'a>(&'a self) -> &'a NodeSet {"}]}