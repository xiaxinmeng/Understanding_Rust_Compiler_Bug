{"sha": "959fc6116a9cc4835e798a6355e43a845b9f173b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OWZjNjExNmE5Y2M0ODM1ZTc5OGE2MzU1ZTQzYTg0NWI5ZjE3M2I=", "commit": {"author": {"name": "Vitaly _Vi Shukela", "email": "vi0oss@gmail.com", "date": "2018-09-15T11:58:25Z"}, "committer": {"name": "Vitaly _Vi Shukela", "email": "vi0oss@gmail.com", "date": "2018-09-16T18:43:06Z"}, "message": "Deprecate *_suggestion* that are without explicit applicability", "tree": {"sha": "d5bd92ebc72b5c2d7f19fba77390b8cda5d4c432", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5bd92ebc72b5c2d7f19fba77390b8cda5d4c432"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/959fc6116a9cc4835e798a6355e43a845b9f173b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABEIAB0WIQQzEHnM5f9ubG8rMBnAlyIdbgPfaAUCW56kOwAKCRDAlyIdbgPf\naBYFAP9Mw8PeeYA7C2DkCr5Kaq7qrbseEtsKa0gvVQOIHqcDUQD/TMRMauQLvWnL\n+kDhVlREgKy0cjkr8ppfq+GGwCs/5LA=\n=fLJ8\n-----END PGP SIGNATURE-----", "payload": "tree d5bd92ebc72b5c2d7f19fba77390b8cda5d4c432\nparent 4b05128114a45fafb459fc6538f1255c84ec52cf\nauthor Vitaly _Vi Shukela <vi0oss@gmail.com> 1537012705 +0300\ncommitter Vitaly _Vi Shukela <vi0oss@gmail.com> 1537123386 +0300\n\nDeprecate *_suggestion* that are without explicit applicability\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/959fc6116a9cc4835e798a6355e43a845b9f173b", "html_url": "https://github.com/rust-lang/rust/commit/959fc6116a9cc4835e798a6355e43a845b9f173b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/959fc6116a9cc4835e798a6355e43a845b9f173b/comments", "author": {"login": "vi", "id": 173219, "node_id": "MDQ6VXNlcjE3MzIxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/173219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vi", "html_url": "https://github.com/vi", "followers_url": "https://api.github.com/users/vi/followers", "following_url": "https://api.github.com/users/vi/following{/other_user}", "gists_url": "https://api.github.com/users/vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vi/subscriptions", "organizations_url": "https://api.github.com/users/vi/orgs", "repos_url": "https://api.github.com/users/vi/repos", "events_url": "https://api.github.com/users/vi/events{/privacy}", "received_events_url": "https://api.github.com/users/vi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vi", "id": 173219, "node_id": "MDQ6VXNlcjE3MzIxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/173219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vi", "html_url": "https://github.com/vi", "followers_url": "https://api.github.com/users/vi/followers", "following_url": "https://api.github.com/users/vi/following{/other_user}", "gists_url": "https://api.github.com/users/vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vi/subscriptions", "organizations_url": "https://api.github.com/users/vi/orgs", "repos_url": "https://api.github.com/users/vi/repos", "events_url": "https://api.github.com/users/vi/events{/privacy}", "received_events_url": "https://api.github.com/users/vi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b05128114a45fafb459fc6538f1255c84ec52cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b05128114a45fafb459fc6538f1255c84ec52cf", "html_url": "https://github.com/rust-lang/rust/commit/4b05128114a45fafb459fc6538f1255c84ec52cf"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "6102d18ba62f17d6c33322d56658be3bc9e338da", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/959fc6116a9cc4835e798a6355e43a845b9f173b/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/959fc6116a9cc4835e798a6355e43a845b9f173b/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=959fc6116a9cc4835e798a6355e43a845b9f173b", "patch": "@@ -232,6 +232,7 @@ impl Diagnostic {\n     /// inline it will only show the text message and not the text.\n     ///\n     /// See `CodeSuggestion` for more information.\n+    #[deprecated(note = \"Use `span_suggestion_short_with_applicability`\")]\n     pub fn span_suggestion_short(&mut self, sp: Span, msg: &str, suggestion: String) -> &mut Self {\n         self.suggestions.push(CodeSuggestion {\n             substitutions: vec![Substitution {\n@@ -263,6 +264,7 @@ impl Diagnostic {\n     /// * may contain a name of a function, variable or type, but not whole expressions\n     ///\n     /// See `CodeSuggestion` for more information.\n+    #[deprecated(note = \"Use `span_suggestion_with_applicability`\")]\n     pub fn span_suggestion(&mut self, sp: Span, msg: &str, suggestion: String) -> &mut Self {\n         self.suggestions.push(CodeSuggestion {\n             substitutions: vec![Substitution {\n@@ -298,6 +300,7 @@ impl Diagnostic {\n         self\n     }\n \n+    #[deprecated(note = \"Use `multipart_suggestion_with_applicability`\")]\n     pub fn multipart_suggestion(\n         &mut self,\n         msg: &str,\n@@ -311,6 +314,7 @@ impl Diagnostic {\n     }\n \n     /// Prints out a message with multiple suggested edits of the code.\n+    #[deprecated(note = \"Use `span_suggestions_with_applicability`\")]\n     pub fn span_suggestions(&mut self, sp: Span, msg: &str, suggestions: Vec<String>) -> &mut Self {\n         self.suggestions.push(CodeSuggestion {\n             substitutions: suggestions.into_iter().map(|snippet| Substitution {"}, {"sha": "4287b37ac540454aabcfb126d4141a83709630c1", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/959fc6116a9cc4835e798a6355e43a845b9f173b/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/959fc6116a9cc4835e798a6355e43a845b9f173b/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=959fc6116a9cc4835e798a6355e43a845b9f173b", "patch": "@@ -41,6 +41,7 @@ macro_rules! forward {\n     // Forward pattern for &self -> &Self\n     (pub fn $n:ident(&self, $($name:ident: $ty:ty),*) -> &Self) => {\n         pub fn $n(&self, $($name: $ty),*) -> &Self {\n+            #[allow(deprecated)]\n             self.diagnostic.$n($($name),*);\n             self\n         }\n@@ -49,6 +50,7 @@ macro_rules! forward {\n     // Forward pattern for &mut self -> &mut Self\n     (pub fn $n:ident(&mut self, $($name:ident: $ty:ty),*) -> &mut Self) => {\n         pub fn $n(&mut self, $($name: $ty),*) -> &mut Self {\n+            #[allow(deprecated)]\n             self.diagnostic.$n($($name),*);\n             self\n         }\n@@ -58,6 +60,7 @@ macro_rules! forward {\n     // type parameter. No obvious way to make this more generic.\n     (pub fn $n:ident<S: Into<MultiSpan>>(&mut self, $($name:ident: $ty:ty),*) -> &mut Self) => {\n         pub fn $n<S: Into<MultiSpan>>(&mut self, $($name: $ty),*) -> &mut Self {\n+            #[allow(deprecated)]\n             self.diagnostic.$n($($name),*);\n             self\n         }\n@@ -167,21 +170,29 @@ impl<'a> DiagnosticBuilder<'a> {\n                                                   sp: S,\n                                                   msg: &str)\n                                                   -> &mut Self);\n+\n+    #[deprecated(note = \"Use `span_suggestion_short_with_applicability`\")]\n     forward!(pub fn span_suggestion_short(&mut self,\n                                           sp: Span,\n                                           msg: &str,\n                                           suggestion: String)\n                                           -> &mut Self);\n+\n+    #[deprecated(note = \"Use `multipart_suggestion_with_applicability`\")]\n     forward!(pub fn multipart_suggestion(\n         &mut self,\n         msg: &str,\n         suggestion: Vec<(Span, String)>\n     ) -> &mut Self);\n+\n+    #[deprecated(note = \"Use `span_suggestion_with_applicability`\")]\n     forward!(pub fn span_suggestion(&mut self,\n                                     sp: Span,\n                                     msg: &str,\n                                     suggestion: String)\n                                     -> &mut Self);\n+\n+    #[deprecated(note = \"Use `span_suggestions_with_applicability`\")]\n     forward!(pub fn span_suggestions(&mut self,\n                                      sp: Span,\n                                      msg: &str,"}]}