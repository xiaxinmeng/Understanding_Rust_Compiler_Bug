{"sha": "c60ec02d75a7cfa57a5a2b1e2256b70224deb531", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MGVjMDJkNzVhN2NmYTU3YTVhMmIxZTIyNTZiNzAyMjRkZWI1MzE=", "commit": {"author": {"name": "pcpthm", "email": "pcpthm@gmail.com", "date": "2019-03-21T19:11:21Z"}, "committer": {"name": "pcpthm", "email": "pcpthm@gmail.com", "date": "2019-03-21T23:09:11Z"}, "message": "Use template text to improve reparse fuzzing", "tree": {"sha": "c30df14c3452087d036fa6d6f3a913732f3701dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c30df14c3452087d036fa6d6f3a913732f3701dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c60ec02d75a7cfa57a5a2b1e2256b70224deb531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c60ec02d75a7cfa57a5a2b1e2256b70224deb531", "html_url": "https://github.com/rust-lang/rust/commit/c60ec02d75a7cfa57a5a2b1e2256b70224deb531", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c60ec02d75a7cfa57a5a2b1e2256b70224deb531/comments", "author": {"login": "pcpthm", "id": 43881370, "node_id": "MDQ6VXNlcjQzODgxMzcw", "avatar_url": "https://avatars.githubusercontent.com/u/43881370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcpthm", "html_url": "https://github.com/pcpthm", "followers_url": "https://api.github.com/users/pcpthm/followers", "following_url": "https://api.github.com/users/pcpthm/following{/other_user}", "gists_url": "https://api.github.com/users/pcpthm/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcpthm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcpthm/subscriptions", "organizations_url": "https://api.github.com/users/pcpthm/orgs", "repos_url": "https://api.github.com/users/pcpthm/repos", "events_url": "https://api.github.com/users/pcpthm/events{/privacy}", "received_events_url": "https://api.github.com/users/pcpthm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcpthm", "id": 43881370, "node_id": "MDQ6VXNlcjQzODgxMzcw", "avatar_url": "https://avatars.githubusercontent.com/u/43881370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcpthm", "html_url": "https://github.com/pcpthm", "followers_url": "https://api.github.com/users/pcpthm/followers", "following_url": "https://api.github.com/users/pcpthm/following{/other_user}", "gists_url": "https://api.github.com/users/pcpthm/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcpthm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcpthm/subscriptions", "organizations_url": "https://api.github.com/users/pcpthm/orgs", "repos_url": "https://api.github.com/users/pcpthm/repos", "events_url": "https://api.github.com/users/pcpthm/events{/privacy}", "received_events_url": "https://api.github.com/users/pcpthm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec59d9bda569057727a9b04314c63e3b3adaaa95", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec59d9bda569057727a9b04314c63e3b3adaaa95", "html_url": "https://github.com/rust-lang/rust/commit/ec59d9bda569057727a9b04314c63e3b3adaaa95"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "1153f0fb935a369a58420cbef296620c2231f19e", "filename": "crates/ra_syntax/src/fuzz.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c60ec02d75a7cfa57a5a2b1e2256b70224deb531/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c60ec02d75a7cfa57a5a2b1e2256b70224deb531/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs?ref=c60ec02d75a7cfa57a5a2b1e2256b70224deb531", "patch": "@@ -22,12 +22,16 @@ pub struct CheckReparse {\n \n impl CheckReparse {\n     pub fn from_data(data: &[u8]) -> Option<Self> {\n+        const PREFIX: &'static str = \"fn main(){\\n\\t\";\n+        const SUFFIX: &'static str = \"\\n}\";\n+\n         let data = str::from_utf8(data).ok()?;\n         let mut lines = data.lines();\n-        let delete_start = usize::from_str(lines.next()?).ok()?;\n+        let delete_start = usize::from_str(lines.next()?).ok()? + PREFIX.len();\n         let delete_len = usize::from_str(lines.next()?).ok()?;\n         let insert = lines.next()?.to_string();\n         let text = lines.collect::<Vec<_>>().join(\"\\n\");\n+        let text = format!(\"{}{}{}\", PREFIX, text, SUFFIX);\n         text.get(delete_start..delete_start.checked_add(delete_len)?)?; // make sure delete is a valid range\n         let delete = TextRange::offset_len(\n             TextUnit::from_usize(delete_start),"}]}