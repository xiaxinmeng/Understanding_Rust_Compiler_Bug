{"sha": "d67314d5fcfeb75da8281794f8e6af3583705c2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NzMxNGQ1ZmNmZWI3NWRhODI4MTc5NGY4ZTZhZjM1ODM3MDVjMmY=", "commit": {"author": {"name": "alexrp", "email": "alex@lycus.org", "date": "2012-08-08T23:19:48Z"}, "committer": {"name": "alexrp", "email": "alex@lycus.org", "date": "2012-08-08T23:19:48Z"}, "message": "Operator-assignment expressions -> Compound assignment expressions.\n\nAlso add note about type.", "tree": {"sha": "f3adee267b69e56a808f36cceac4a17055013e06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3adee267b69e56a808f36cceac4a17055013e06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d67314d5fcfeb75da8281794f8e6af3583705c2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d67314d5fcfeb75da8281794f8e6af3583705c2f", "html_url": "https://github.com/rust-lang/rust/commit/d67314d5fcfeb75da8281794f8e6af3583705c2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d67314d5fcfeb75da8281794f8e6af3583705c2f/comments", "author": null, "committer": null, "parents": [{"sha": "febd7ee239c1182147317a0e31057a0e69e260ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/febd7ee239c1182147317a0e31057a0e69e260ff", "html_url": "https://github.com/rust-lang/rust/commit/febd7ee239c1182147317a0e31057a0e69e260ff"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "43c7d5dfc368f2ed4387d0055271ea84094b15ca", "filename": "doc/rust.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d67314d5fcfeb75da8281794f8e6af3583705c2f/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/d67314d5fcfeb75da8281794f8e6af3583705c2f/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=d67314d5fcfeb75da8281794f8e6af3583705c2f", "patch": "@@ -1927,13 +1927,15 @@ x <- copy y;\n \n The former is just more terse and familiar.\n \n-#### Operator-assignment expressions\n+#### Compound assignment expressions\n \n The `+`, `-`, `*`, `/`, `%`, `&`, `|`, `^`, `<<`, `>>`, and `>>>`\n operators may be composed with the `=` operator. The expression `lval\n OP= val` is equivalent to `lval = lval OP val`. For example, `x = x +\n 1` may be written as `x += 1`.\n \n+Any such expression always has the [`nil`](#primitive-types) type.\n+\n #### Operator precedence\n \n The precedence of Rust binary operators is ordered as follows, going"}]}