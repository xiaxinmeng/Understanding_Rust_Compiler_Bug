{"sha": "eb9cafb4400430d40bef0096623641587a350c9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViOWNhZmI0NDAwNDMwZDQwYmVmMDA5NjYyMzY0MTU4N2EzNTBjOWM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-17T16:11:43Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-02-17T16:38:31Z"}, "message": "Move rewrite_mod to the items module", "tree": {"sha": "5ef000404d8a9d76ac01fe81a69e6b1ac3b1e4f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ef000404d8a9d76ac01fe81a69e6b1ac3b1e4f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb9cafb4400430d40bef0096623641587a350c9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb9cafb4400430d40bef0096623641587a350c9c", "html_url": "https://github.com/rust-lang/rust/commit/eb9cafb4400430d40bef0096623641587a350c9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb9cafb4400430d40bef0096623641587a350c9c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8636afab2f53d12da806f9e2a1670ad8e9e8323", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8636afab2f53d12da806f9e2a1670ad8e9e8323", "html_url": "https://github.com/rust-lang/rust/commit/e8636afab2f53d12da806f9e2a1670ad8e9e8323"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "f4a7a19ebe45440aac7c9eccbad49542b0612928", "filename": "rustfmt-core/src/imports.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb9cafb4400430d40bef0096623641587a350c9c/rustfmt-core%2Fsrc%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb9cafb4400430d40bef0096623641587a350c9c/rustfmt-core%2Fsrc%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Fimports.rs?ref=eb9cafb4400430d40bef0096623641587a350c9c", "patch": "@@ -124,16 +124,6 @@ pub fn rewrite_import(\n     }\n }\n \n-/// Rewrite an inline mod.\n-pub fn rewrite_mod(item: &ast::Item) -> String {\n-    let mut result = String::with_capacity(32);\n-    result.push_str(&*format_visibility(&item.vis));\n-    result.push_str(\"mod \");\n-    result.push_str(&item.ident.to_string());\n-    result.push(';');\n-    result\n-}\n-\n impl<'a> FmtVisitor<'a> {\n     pub fn format_imports(&mut self, use_items: &[&ast::Item]) {\n         if use_items.is_empty() {"}, {"sha": "07b6c1d79bff163aa7a9fb4eaba06b50314c45bf", "filename": "rustfmt-core/src/items.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb9cafb4400430d40bef0096623641587a350c9c/rustfmt-core%2Fsrc%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb9cafb4400430d40bef0096623641587a350c9c/rustfmt-core%2Fsrc%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Fitems.rs?ref=eb9cafb4400430d40bef0096623641587a350c9c", "patch": "@@ -2845,3 +2845,13 @@ impl Rewrite for ast::GenericParam {\n         }\n     }\n }\n+\n+/// Rewrite an inline mod.\n+pub fn rewrite_mod(item: &ast::Item) -> String {\n+    let mut result = String::with_capacity(32);\n+    result.push_str(&*format_visibility(&item.vis));\n+    result.push_str(\"mod \");\n+    result.push_str(&item.ident.to_string());\n+    result.push(';');\n+    result\n+}"}, {"sha": "eff8aec06a9d78f87b9475a8dde7cb28ff3c068f", "filename": "rustfmt-core/src/reorder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb9cafb4400430d40bef0096623641587a350c9c/rustfmt-core%2Fsrc%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb9cafb4400430d40bef0096623641587a350c9c/rustfmt-core%2Fsrc%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Freorder.rs?ref=eb9cafb4400430d40bef0096623641587a350c9c", "patch": "@@ -18,7 +18,8 @@ use config::lists::*;\n use syntax::{ast, codemap::Span};\n \n use comment::combine_strs_with_missing_comments;\n-use imports::{path_to_imported_ident, rewrite_import, rewrite_mod};\n+use imports::{path_to_imported_ident, rewrite_import};\n+use items::rewrite_mod;\n use lists::{itemize_list, write_list, ListFormatting};\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;"}]}