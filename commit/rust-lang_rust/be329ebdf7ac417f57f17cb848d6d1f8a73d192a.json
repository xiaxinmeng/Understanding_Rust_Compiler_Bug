{"sha": "be329ebdf7ac417f57f17cb848d6d1f8a73d192a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMzI5ZWJkZjdhYzQxN2Y1N2YxN2NiODQ4ZDZkMWY4YTczZDE5MmE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-08-23T17:51:12Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-08-23T17:51:42Z"}, "message": "Typo\n\nTIL what `wether` means.", "tree": {"sha": "c696d57bed4b844b0be789f0beeed23b2f659db1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c696d57bed4b844b0be789f0beeed23b2f659db1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be329ebdf7ac417f57f17cb848d6d1f8a73d192a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJXvI0wAAoJEF5CfHlMukXoDMUP/j2wRxDWuosNohioujvx+CNq\nLIywyF61sw7klpwhX25wnntKaX4B5ft52IMn6peExlxqSjYB9BcO7leuu765RaQw\nFI0HHi+X9XhFwjxbH5uT61GXZIwW6mYLt9/fu3Bjs7PiDTj4GJGrpcm/Kx53mmUl\n2ZpLCsugnmXqnq/MSflmNSfq/5iteTikxJ7NwzsIOjzAml5wiIdkZIRMcagOqSAj\nqpzwQgHbmFd7VhaXUQmv6ewRSetcJk446bfZR52moy3rTyzRaRrrnNANeG6+D0AZ\nXnFj34rzpbSASWmkyVploZ3KoEY1FdSoWKN2THW8sFzYaUCXmaxxzhP0dYzFANKN\nSmN0CFqcsrQD6zLnCwaWplNowi1+VwdDJaclo5MhBVqemJFJv8fcjo5JmJOgTqTi\nlk7ZwgxaZmqcUDFAxiEpfaXKKdUv7aROViJpqSrDNrDZPsN78lg5VXP4hDbE1FR3\ney8xaOpEiSxg5306kIYocKmBuoCqJLrt6N+zizoz5OWLvXCWHckbcAMxn4y3JXx5\nIJ94KxMT7NkmR8N1W5/R8ztMeFytuew8qF/mtg31wxE0citJMyg29AeiqpiFJ3YL\nNb2NZ5Qm6J+K4AcDYdZFCTo/xaWghP/jDfHYv214v085k+UsyIgsFsu6Y3WCYWFZ\nzaPXAMKx2h88IZaTGDUM\n=ZryQ\n-----END PGP SIGNATURE-----", "payload": "tree c696d57bed4b844b0be789f0beeed23b2f659db1\nparent 8bab4ed1c5288c87f35b6e49ef773796af4dcd2f\nauthor mcarton <cartonmartin+git@gmail.com> 1471974672 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1471974702 +0200\n\nTypo\n\nTIL what `wether` means.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be329ebdf7ac417f57f17cb848d6d1f8a73d192a", "html_url": "https://github.com/rust-lang/rust/commit/be329ebdf7ac417f57f17cb848d6d1f8a73d192a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be329ebdf7ac417f57f17cb848d6d1f8a73d192a/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bab4ed1c5288c87f35b6e49ef773796af4dcd2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bab4ed1c5288c87f35b6e49ef773796af4dcd2f", "html_url": "https://github.com/rust-lang/rust/commit/8bab4ed1c5288c87f35b6e49ef773796af4dcd2f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "560ec491b455365d4f00569a91d88d07ddd33989", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/be329ebdf7ac417f57f17cb848d6d1f8a73d192a/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be329ebdf7ac417f57f17cb848d6d1f8a73d192a/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=be329ebdf7ac417f57f17cb848d6d1f8a73d192a", "patch": "@@ -201,7 +201,7 @@ impl<'a> std::ops::Not for Sugg<'a> {\n \n /// Helper type to display either `foo` or `(foo)`.\n struct ParenHelper<T> {\n-    /// Wether parenthesis are needed.\n+    /// Whether parenthesis are needed.\n     paren: bool,\n     /// The main thing to display.\n     wrapped: T,\n@@ -240,17 +240,17 @@ pub fn make_unop(op: &str, expr: Sugg) -> Sugg<'static> {\n /// Precedence of shift operator relative to other arithmetic operation is often confusing so\n /// parenthesis will always be added for a mix of these.\n pub fn make_assoc(op: AssocOp, lhs: &Sugg, rhs: &Sugg) -> Sugg<'static> {\n-    /// Wether the operator is a shift operator `<<` or `>>`.\n+    /// Whether the operator is a shift operator `<<` or `>>`.\n     fn is_shift(op: &AssocOp) -> bool {\n         matches!(*op, AssocOp::ShiftLeft | AssocOp::ShiftRight)\n     }\n \n-    /// Wether the operator is a arithmetic operator (`+`, `-`, `*`, `/`, `%`).\n+    /// Whether the operator is a arithmetic operator (`+`, `-`, `*`, `/`, `%`).\n     fn is_arith(op: &AssocOp) -> bool {\n         matches!(*op, AssocOp::Add | AssocOp::Subtract | AssocOp::Multiply | AssocOp::Divide | AssocOp::Modulus)\n     }\n \n-    /// Wether the operator `op` needs parenthesis with the operator `other` in the direction\n+    /// Whether the operator `op` needs parenthesis with the operator `other` in the direction\n     /// `dir`.\n     fn needs_paren(op: &AssocOp, other: &AssocOp, dir: Associativity) -> bool {\n         other.precedence() < op.precedence() ||"}]}