{"sha": "3c1b1a31b08cf53f2f05cd56994e87e55e230f44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMWIxYTMxYjA4Y2Y1M2YyZjA1Y2Q1Njk5NGU4N2U1NWUyMzBmNDQ=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-04-15T20:47:37Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-04-23T16:19:26Z"}, "message": "rustc: Remove root_map usage from _match", "tree": {"sha": "56a7fefb3d7bc0c419879a69299e779eb8caffaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56a7fefb3d7bc0c419879a69299e779eb8caffaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c1b1a31b08cf53f2f05cd56994e87e55e230f44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c1b1a31b08cf53f2f05cd56994e87e55e230f44", "html_url": "https://github.com/rust-lang/rust/commit/3c1b1a31b08cf53f2f05cd56994e87e55e230f44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c1b1a31b08cf53f2f05cd56994e87e55e230f44/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13c8edfa2ea8f3083dfadda4234c2b48d57a1c6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/13c8edfa2ea8f3083dfadda4234c2b48d57a1c6e", "html_url": "https://github.com/rust-lang/rust/commit/13c8edfa2ea8f3083dfadda4234c2b48d57a1c6e"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "ddda95c06cb252db96cea6b019399cfd481f8d33", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3c1b1a31b08cf53f2f05cd56994e87e55e230f44/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c1b1a31b08cf53f2f05cd56994e87e55e230f44/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=3c1b1a31b08cf53f2f05cd56994e87e55e230f44", "patch": "@@ -198,7 +198,6 @@ use back::abi;\n use driver::session::FullDebugInfo;\n use lib::llvm::{llvm, ValueRef, BasicBlockRef};\n use middle::const_eval;\n-use middle::borrowck::root_map_key;\n use middle::lang_items::{UniqStrEqFnLangItem, StrEqFnLangItem};\n use middle::pat_util::*;\n use middle::resolve::DefMap;\n@@ -1156,14 +1155,6 @@ fn collect_record_or_struct_fields<'a>(\n     }\n }\n \n-fn pats_require_rooting(bcx: &Block, m: &[Match], col: uint) -> bool {\n-    m.iter().any(|br| {\n-        let pat_id = br.pats.get(col).id;\n-        let key = root_map_key {id: pat_id, derefs: 0u };\n-        bcx.ccx().maps.root_map.contains_key(&key)\n-    })\n-}\n-\n // Macro for deciding whether any of the remaining matches fit a given kind of\n // pattern.  Note that, because the macro is well-typed, either ALL of the\n // matches should fit that sort of pattern or NONE (however, some of the\n@@ -1551,10 +1542,6 @@ fn compile_submatch_continue<'a, 'b>(\n         }\n     }\n \n-    // If we are not matching against an `@T`, we should not be\n-    // required to root any values.\n-    assert!(!pats_require_rooting(bcx, m, col));\n-\n     match collect_record_or_struct_fields(bcx, m, col) {\n         Some(ref rec_fields) => {\n             let pat_ty = node_id_type(bcx, pat_id);"}]}