{"sha": "00ec0c10669307bc752812f535f96e121338d688", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZWMwYzEwNjY5MzA3YmM3NTI4MTJmNTM1Zjk2ZTEyMTMzOGQ2ODg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-09T21:19:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-09T21:19:51Z"}, "message": "use uniform accessor", "tree": {"sha": "95d2fbfea2f8c12938d2d5337adc85df10ff78c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95d2fbfea2f8c12938d2d5337adc85df10ff78c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00ec0c10669307bc752812f535f96e121338d688", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00ec0c10669307bc752812f535f96e121338d688", "html_url": "https://github.com/rust-lang/rust/commit/00ec0c10669307bc752812f535f96e121338d688", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00ec0c10669307bc752812f535f96e121338d688/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "046a02101355bb58cf66218f7dd6dc4fa78fc53f", "url": "https://api.github.com/repos/rust-lang/rust/commits/046a02101355bb58cf66218f7dd6dc4fa78fc53f", "html_url": "https://github.com/rust-lang/rust/commit/046a02101355bb58cf66218f7dd6dc4fa78fc53f"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "4f23cb5c8548c75b4ab0d5159669a2dba76d38c2", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00ec0c10669307bc752812f535f96e121338d688/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00ec0c10669307bc752812f535f96e121338d688/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=00ec0c10669307bc752812f535f96e121338d688", "patch": "@@ -372,7 +372,7 @@ impl ExprCollector<'_> {\n             }\n             ast::Expr::RefExpr(e) => {\n                 let expr = self.collect_expr_opt(e.expr());\n-                let mutability = Mutability::from_mutable(e.is_mut());\n+                let mutability = Mutability::from_mutable(e.mut_kw_token().is_some());\n                 self.alloc_expr(Expr::Ref { expr, mutability }, syntax_ptr)\n             }\n             ast::Expr::PrefixExpr(e) => {"}, {"sha": "5c5f196224ba29bd2891fda54f6ca7027021af25", "filename": "crates/ra_syntax/src/ast/expr_extensions.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00ec0c10669307bc752812f535f96e121338d688/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00ec0c10669307bc752812f535f96e121338d688/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs?ref=00ec0c10669307bc752812f535f96e121338d688", "patch": "@@ -49,10 +49,6 @@ impl ast::IfExpr {\n }\n \n impl ast::RefExpr {\n-    pub fn is_mut(&self) -> bool {\n-        self.syntax().children_with_tokens().any(|n| n.kind() == T![mut])\n-    }\n-\n     pub fn raw_token(&self) -> Option<SyntaxToken> {\n         None // FIXME: implement &raw\n     }"}]}