{"sha": "b2d6ff4b6eed1091e38186767523f19fbaa00a72", "node_id": "C_kwDOAAsO6NoAKGIyZDZmZjRiNmVlZDEwOTFlMzgxODY3Njc1MjNmMTlmYmFhMDBhNzI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-04T15:34:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-04T15:34:19Z"}, "message": "Rollup merge of #92525 - zohnannor:patch-1, r=camelid\n\nintra-doc: Make `Receiver::into_iter` into a clickable link\n\nThe documentation on `std::sync::mpsc::Iter` and `std::sync::mpsc::TryIter` provides links to the corresponding `Receiver` methods, unlike `std::sync::mpsc::IntoIter` does.\n\nThis was left out in c59b188aaeadea32625534250d1f5120420be000\nRelated to #29377", "tree": {"sha": "9188a8af81683a1e2f9c1a75c0f50cbbbf98abc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9188a8af81683a1e2f9c1a75c0f50cbbbf98abc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2d6ff4b6eed1091e38186767523f19fbaa00a72", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh1Gj7CRBK7hj4Ov3rIwAAkHsIAIQkVXRWgVSzNzKcAlZ1H4z8\nsnLpz1TNqbs+FaVy7m8wgkL+ytncD/kDqprB7MYqo0KAvO1SKdwxSly6QrxCWw+9\n2brEfADp0Yn+HXvhnLf1MYOUNqDS8Frg5S5ts98MW2skJEDZSUthC/28hk/NQT9Q\n0kJWGvVx58waf1Q8UTzkoN5kes8JXha++4kcr6OMomcj2MkoSOO5yv5tUvo27nE4\nPUE4vO4pypxc4wrfYJ6eSfDEEBpdU1VO5+XNWalnYX6Yy1FBx8Rp/VtMl2EZo/tx\nbn2p+ATvwoNwgYmZUB3MdFamgm2EjQOWag0wBeWzdEYb/Rs39ItV0znSWBgvWus=\n=fHV1\n-----END PGP SIGNATURE-----\n", "payload": "tree 9188a8af81683a1e2f9c1a75c0f50cbbbf98abc6\nparent 25fcc0ef8c4a3b7a8dbfefdb3b198c09cee9f1c4\nparent ca3f9048a16fd817d1252f7f33a92b3a52252975\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641310459 +0100\ncommitter GitHub <noreply@github.com> 1641310459 +0100\n\nRollup merge of #92525 - zohnannor:patch-1, r=camelid\n\nintra-doc: Make `Receiver::into_iter` into a clickable link\n\nThe documentation on `std::sync::mpsc::Iter` and `std::sync::mpsc::TryIter` provides links to the corresponding `Receiver` methods, unlike `std::sync::mpsc::IntoIter` does.\n\nThis was left out in c59b188aaeadea32625534250d1f5120420be000\nRelated to #29377\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2d6ff4b6eed1091e38186767523f19fbaa00a72", "html_url": "https://github.com/rust-lang/rust/commit/b2d6ff4b6eed1091e38186767523f19fbaa00a72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2d6ff4b6eed1091e38186767523f19fbaa00a72/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25fcc0ef8c4a3b7a8dbfefdb3b198c09cee9f1c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/25fcc0ef8c4a3b7a8dbfefdb3b198c09cee9f1c4", "html_url": "https://github.com/rust-lang/rust/commit/25fcc0ef8c4a3b7a8dbfefdb3b198c09cee9f1c4"}, {"sha": "ca3f9048a16fd817d1252f7f33a92b3a52252975", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca3f9048a16fd817d1252f7f33a92b3a52252975", "html_url": "https://github.com/rust-lang/rust/commit/ca3f9048a16fd817d1252f7f33a92b3a52252975"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "2e54321e127c0e3e882e048d3689c82774d08cbd", "filename": "library/std/src/sync/mpsc/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b2d6ff4b6eed1091e38186767523f19fbaa00a72/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2d6ff4b6eed1091e38186767523f19fbaa00a72/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs?ref=b2d6ff4b6eed1091e38186767523f19fbaa00a72", "patch": "@@ -429,12 +429,13 @@ pub struct TryIter<'a, T: 'a> {\n }\n \n /// An owning iterator over messages on a [`Receiver`],\n-/// created by **Receiver::into_iter**.\n+/// created by [`into_iter`].\n ///\n /// This iterator will block whenever [`next`]\n /// is called, waiting for a new message, and [`None`] will be\n /// returned if the corresponding channel has hung up.\n ///\n+/// [`into_iter`]: Receiver::into_iter\n /// [`next`]: Iterator::next\n ///\n /// # Examples"}]}