{"sha": "d760f994de00f4e700a03a650e5065c8391b7f73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NjBmOTk0ZGUwMGY0ZTcwMGEwM2E2NTBlNTA2NWM4MzkxYjdmNzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-19T15:51:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-19T15:51:36Z"}, "message": "auto merge of #11041 : cmr/rust/pkgid_changes, r=cmr,metajack", "tree": {"sha": "f44ef0214f28cdc830782210837805898b76c398", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f44ef0214f28cdc830782210837805898b76c398"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d760f994de00f4e700a03a650e5065c8391b7f73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d760f994de00f4e700a03a650e5065c8391b7f73", "html_url": "https://github.com/rust-lang/rust/commit/d760f994de00f4e700a03a650e5065c8391b7f73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d760f994de00f4e700a03a650e5065c8391b7f73/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e86cdaf23ded0d25582a33fea761963cf0eb4f41", "url": "https://api.github.com/repos/rust-lang/rust/commits/e86cdaf23ded0d25582a33fea761963cf0eb4f41", "html_url": "https://github.com/rust-lang/rust/commit/e86cdaf23ded0d25582a33fea761963cf0eb4f41"}, {"sha": "b25a0524dcb1e46b9c55266ebc0ab36cce5d2099", "url": "https://api.github.com/repos/rust-lang/rust/commits/b25a0524dcb1e46b9c55266ebc0ab36cce5d2099", "html_url": "https://github.com/rust-lang/rust/commit/b25a0524dcb1e46b9c55266ebc0ab36cce5d2099"}], "stats": {"total": 207, "additions": 138, "deletions": 69}, "files": [{"sha": "ce788f06c38dae9eb623a695754286035962faf0", "filename": "src/etc/combine-tests.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Fetc%2Fcombine-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Fetc%2Fcombine-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcombine-tests.py?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -44,6 +44,7 @@ def scrub(b):\n c.write(\n \"\"\"\n // AUTO-GENERATED FILE: DO NOT EDIT\n+#[crate_id=\\\"run_pass_stage2#0.1\\\"];\n #[pkgid=\\\"run_pass_stage2#0.1\\\"];\n #[link(name=\\\"run_pass_stage2\\\", vers=\\\"0.1\\\")];\n #[feature(globs, macro_rules, struct_variant, managed_boxes)];"}, {"sha": "82ca4d65b233ec41738b9522e9e328031c157137", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -20,7 +20,9 @@ Rust extras are part of the standard Rust distribution.\n \n */\n \n+// NOTE: remove after snapshot\n #[pkgid = \"extra#0.9-pre\"];\n+#[crate_id = \"extra#0.9-pre\"];\n #[comment = \"Rust extras\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"rlib\"];"}, {"sha": "ccd6c66603f04f42a64b4d4a6f44d8bf72f5cd44", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -751,14 +751,10 @@ fn is_writeable(p: &Path) -> bool {\n     }\n }\n \n-fn link_binary_output(sess: Session,\n-                      trans: &CrateTranslation,\n-                      output: session::OutputStyle,\n-                      obj_filename: &Path,\n-                      out_filename: &Path,\n-                      lm: &LinkMeta) -> Path {\n+pub fn filename_for_input(sess: &Session, output: session::OutputStyle, lm: &LinkMeta,\n+                      out_filename: &Path) -> Path {\n     let libname = output_lib_filename(lm);\n-    let out_filename = match output {\n+    match output {\n         session::OutputRlib => {\n             out_filename.with_filename(format!(\"lib{}.rlib\", libname))\n         }\n@@ -776,7 +772,17 @@ fn link_binary_output(sess: Session,\n             out_filename.with_filename(format!(\"lib{}.a\", libname))\n         }\n         session::OutputExecutable => out_filename.clone(),\n-    };\n+    }\n+\n+}\n+\n+fn link_binary_output(sess: Session,\n+                      trans: &CrateTranslation,\n+                      output: session::OutputStyle,\n+                      obj_filename: &Path,\n+                      out_filename: &Path,\n+                      lm: &LinkMeta) -> Path {\n+    let out_filename = filename_for_input(&sess, output, lm, out_filename);\n \n     // Make sure the output and obj_filename are both writeable.\n     // Mac, FreeBSD, and Windows system linkers check this already --"}, {"sha": "070aed3aa79b1e2e0fe6b73d3801ca4944b770b8", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -446,13 +446,49 @@ pub fn compile_input(sess: Session, cfg: ast::CrateConfig, input: &input,\n     let (outputs, trans) = {\n         let expanded_crate = {\n             let crate = phase_1_parse_input(sess, cfg.clone(), input);\n+            let (crate_id, crate_name, crate_file_name) = sess.opts.print_metas;\n+            // these nasty nested conditions are to avoid doing extra work\n+            if crate_id || crate_name || crate_file_name {\n+                let t_outputs = build_output_filenames(input, outdir, output, crate.attrs, sess);\n+                if crate_id || crate_name {\n+                    let pkgid = match attr::find_pkgid(crate.attrs) {\n+                        Some(pkgid) => pkgid,\n+                        None => fail!(\"No crate_id and --crate-id or --crate-name requested\")\n+                    };\n+                    if crate_id {\n+                        println(pkgid.to_str());\n+                    }\n+                    if crate_name {\n+                        println(pkgid.name);\n+                    }\n+                }\n+\n+                if crate_file_name {\n+                    let lm = link::build_link_meta(sess, &crate, &t_outputs.obj_filename,\n+                                                   &mut ::util::sha2::Sha256::new());\n+                    // if the vector is empty we default to OutputExecutable.\n+                    let style = sess.opts.outputs.get_opt(0).unwrap_or(&OutputExecutable);\n+                    let fname = link::filename_for_input(&sess, *style, &lm,\n+                                                         &t_outputs.out_filename);\n+                    println!(\"{}\", fname.display());\n+\n+                    // we already maybe printed the first one, so skip it\n+                    for style in sess.opts.outputs.iter().skip(1) {\n+                        let fname = link::filename_for_input(&sess, *style, &lm,\n+                                                             &t_outputs.out_filename);\n+                        println!(\"{}\", fname.display());\n+                    }\n+                }\n+\n+                return;\n+            }\n             if stop_after_phase_1(sess) { return; }\n             phase_2_configure_and_expand(sess, cfg, crate)\n         };\n-        let analysis = phase_3_run_analysis_passes(sess, &expanded_crate);\n-        if stop_after_phase_3(sess) { return; }\n         let outputs = build_output_filenames(input, outdir, output,\n                                              expanded_crate.attrs, sess);\n+        let analysis = phase_3_run_analysis_passes(sess, &expanded_crate);\n+        if stop_after_phase_3(sess) { return; }\n         let trans = phase_4_translate_to_llvm(sess, expanded_crate,\n                                               &analysis, outputs);\n         (outputs, trans)\n@@ -789,6 +825,9 @@ pub fn build_session_options(binary: @str,\n             }).collect()\n         }\n     };\n+    let print_metas = (matches.opt_present(\"crate-id\"),\n+                       matches.opt_present(\"crate-name\"),\n+                       matches.opt_present(\"crate-file-name\"));\n \n     let sopts = @session::options {\n         outputs: outputs,\n@@ -817,6 +856,7 @@ pub fn build_session_options(binary: @str,\n         debugging_opts: debugging_opts,\n         android_cross_path: android_cross_path,\n         write_dependency_info: write_dependency_info,\n+        print_metas: print_metas,\n     };\n     return sopts;\n }\n@@ -897,6 +937,10 @@ pub fn optgroups() -> ~[getopts::groups::OptGroup] {\n   optflag(\"\",  \"dylib\", \"Compile a dynamic library crate\"),\n   optopt(\"\", \"linker\", \"Program to use for linking instead of the default.\", \"LINKER\"),\n   optopt(\"\", \"ar\", \"Program to use for managing archives instead of the default.\", \"AR\"),\n+  optflag(\"\", \"crate-id\", \"Output the crate id and exit\"),\n+  optflag(\"\", \"crate-name\", \"Output the crate name and exit\"),\n+  optflag(\"\", \"crate-file-name\", \"Output the file(s) that would be written if compilation \\\n+          continued and exit\"),\n   optmulti(\"\",  \"link-args\", \"FLAGS is a space-separated list of flags\n                             passed to the linker\", \"FLAGS\"),\n   optflag(\"\",  \"ls\",  \"List the symbols defined by a library crate\"),"}, {"sha": "58f09a52f2342912d3625d38bc7aae20dbbb57d0", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -168,8 +168,10 @@ pub struct options {\n     no_trans: bool,\n     debugging_opts: uint,\n     android_cross_path: Option<~str>,\n-    // Whether to write .d dependency files\n+    /// Whether to write .d dependency files\n     write_dependency_info: bool,\n+    /// Crate id-related things to maybe print. It's (crate_id, crate_name, crate_file_name).\n+    print_metas: (bool, bool, bool),\n }\n \n pub struct crate_metadata {\n@@ -396,6 +398,7 @@ pub fn basic_options() -> @options {\n         debugging_opts: 0u,\n         android_cross_path: None,\n         write_dependency_info: false,\n+        print_metas: (false, false, false),\n     }\n }\n "}, {"sha": "f0bff76685fe6e4652307bda905c22ae4173f550", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// NOTE: remove after snapshot\n #[pkgid = \"rustc#0.9-pre\"];\n+#[crate_id = \"rustc#0.9-pre\"];\n #[comment = \"The Rust compiler\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"dylib\"];"}, {"sha": "8d8c246f2cad00a9b2da5d19d86a549f41224595", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -1499,13 +1499,13 @@ fn synthesize_crate_attrs(ecx: &EncodeContext,\n \n         attr::mk_attr(\n             attr::mk_name_value_item_str(\n-                @\"pkgid\",\n+                @\"crate_id\",\n                 ecx.link_meta.pkgid.to_str().to_managed()))\n     }\n \n     let mut attrs = ~[];\n     for attr in crate.attrs.iter() {\n-        if \"pkgid\" != attr.name()  {\n+        if \"crate_id\" != attr.name()  {\n             attrs.push(*attr);\n         }\n     }"}, {"sha": "bdf4c550378feed04692b3484f5ce744f6beba70", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -832,7 +832,8 @@ fn check_heap_item(cx: &Context, it: &ast::item) {\n }\n \n static crate_attrs: &'static [&'static str] = &[\n-    \"crate_type\", \"feature\", \"no_uv\", \"no_main\", \"no_std\", \"pkgid\",\n+// NOTE: remove pkgid after snapshot\n+    \"crate_type\", \"feature\", \"no_uv\", \"no_main\", \"no_std\", \"pkgid\", \"crate_id\",\n     \"desc\", \"comment\", \"license\", \"copyright\", // not used in rustc now\n ];\n "}, {"sha": "028e622c0576d934e784cd6455969c2730a73227", "filename": "src/librustdoc/clean.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustdoc%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustdoc%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -84,7 +84,7 @@ impl Clean<Crate> for visit_ast::RustdocVisitor {\n         Crate {\n             name: match find_pkgid(self.attrs) {\n                 Some(n) => n.name,\n-                None => fail!(\"rustdoc requires a `pkgid` crate attribute\"),\n+                None => fail!(\"rustdoc requires a `crate_id` crate attribute\"),\n             },\n             module: Some(self.module.clean()),\n             externs: externs,"}, {"sha": "3645161ee1cea871b0abd6595ebe586fb89802e5", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// NOTE: remove after snapshot\n #[pkgid = \"rustdoc#0.9-pre\"];\n+#[crate_id = \"rustdoc#0.9-pre\"];\n #[desc = \"rustdoc, the Rust documentation extractor\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"dylib\"];"}, {"sha": "9dbddf7881872d650c485bec6735b99ee9492e73", "filename": "src/librustpkg/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustpkg%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustpkg%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Flib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -10,7 +10,9 @@\n \n // rustpkg - a package manager and build system for Rust\n \n+// NOTE: remove after snapshot\n #[pkgid = \"rustpkg#0.9-pre\"];\n+#[crate_id = \"rustpkg#0.9-pre\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"dylib\"];\n "}, {"sha": "ecf08df5f185a9732992dde8f9287bd9a395550e", "filename": "src/librustpkg/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustpkg%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustpkg%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Ftests.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -1892,9 +1892,9 @@ fn pkgid_pointing_to_subdir() {\n     fs::mkdir_recursive(&foo_dir, io::UserRWX);\n     fs::mkdir_recursive(&bar_dir, io::UserRWX);\n     writeFile(&foo_dir.join(\"lib.rs\"),\n-              \"#[pkgid=\\\"mockgithub.com/mozilla/some_repo/extras/foo\\\"]; pub fn f() {}\");\n+              \"#[crate_id=\\\"mockgithub.com/mozilla/some_repo/extras/foo\\\"]; pub fn f() {}\");\n     writeFile(&bar_dir.join(\"lib.rs\"),\n-              \"#[pkgid=\\\"mockgithub.com/mozilla/some_repo/extras/bar\\\"]; pub fn g() {}\");\n+              \"#[crate_id=\\\"mockgithub.com/mozilla/some_repo/extras/bar\\\"]; pub fn g() {}\");\n \n     debug!(\"Creating a file in {}\", workspace.display());\n     let testpkg_dir = workspace.join_many([\"src\", \"testpkg-0.0\"]);\n@@ -2316,7 +2316,7 @@ fn find_sources_in_cwd() {\n     let source_dir = temp_dir.join(\"foo\");\n     fs::mkdir_recursive(&source_dir, io::UserRWX);\n     writeFile(&source_dir.join(\"main.rs\"),\n-              \"fn main() { let _x = (); }\");\n+              r#\"#[crate_id=\"foo\"]; fn main() { let _x = (); }\"#);\n     command_line_test([~\"install\", ~\"foo\"], &source_dir);\n     assert_executable_exists(&source_dir.join(\".rust\"), \"foo\");\n }"}, {"sha": "7a68ae8b15ca4caba70056fb2bca13c356575cbb", "filename": "src/librustpkg/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustpkg%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustpkg%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Futil.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -291,10 +291,10 @@ pub fn compile_input(context: &BuildContext,\n                                   });\n \n     // Inject the pkgid attribute so we get the right package name and version\n-    if !attr::contains_name(crate.attrs, \"pkgid\") {\n+    if !attr::contains_name(crate.attrs, \"crate_id\") {\n         // FIXME (#9639): This needs to handle non-utf8 paths\n         let pkgid_attr =\n-            attr::mk_name_value_item_str(@\"pkgid\",\n+            attr::mk_name_value_item_str(@\"crate_id\",\n                                          format!(\"{}\\\\#{}\",\n                                                  pkg_id.path.as_str().unwrap(),\n                                                  pkg_id.version.to_str()).to_managed());"}, {"sha": "2e5b7254769f136afdae9a6f7117feaa39d2ef95", "filename": "src/librustuv/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustuv%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibrustuv%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Flib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -34,7 +34,9 @@ via `close` and `delete` methods.\n \n */\n \n+// NOTE: remove after snapshot\n #[pkgid = \"rustuv#0.9-pre\"];\n+#[crate_id = \"rustuv#0.9-pre\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"rlib\"];\n #[crate_type = \"dylib\"];"}, {"sha": "b2b856c5c83c8c6c6ceb63808c74ae594357c803", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -43,7 +43,9 @@\n //!\n //!     use std::prelude::*;\n \n+// NOTE: remove after snapshot\n #[pkgid = \"std#0.9-pre\"];\n+#[crate_id = \"std#0.9-pre\"];\n #[comment = \"The Rust standard library\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"rlib\"];"}, {"sha": "5e16213190cadf962f1ef5a909f2422f3a70f0f5", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -237,7 +237,7 @@ pub fn find_linkage_metas(attrs: &[Attribute]) -> ~[@MetaItem] {\n }\n \n pub fn find_pkgid(attrs: &[Attribute]) -> Option<PkgId> {\n-    match first_attr_value_str_by_name(attrs, \"pkgid\") {\n+    match first_attr_value_str_by_name(attrs, \"crate_id\") {\n         None => None,\n         Some(id) => from_str::<PkgId>(id),\n     }"}, {"sha": "25986f67c6908bc97bcf5f234f5860aa892d2704", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -13,7 +13,9 @@\n  *  macros.\n  */\n \n+// NOTE: remove pkgid after snapshot\n #[pkgid = \"syntax#0.9-pre\"];\n+#[crate_id = \"syntax#0.9-pre\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"dylib\"];\n #[crate_type = \"rlib\"];"}, {"sha": "aa6ee35a077925027e494cabdfb9c3364adf67d0", "filename": "src/test/auxiliary/anon-extern-mod-cross-crate-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"anonexternmod#0.1\"];\n+#[crate_id=\"anonexternmod#0.1\"];\n \n use std::libc;\n "}, {"sha": "1f5c98cd7e1c78295421d40dfc7a41977c52df13", "filename": "src/test/auxiliary/cci_impl_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcci_impl_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcci_impl_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_impl_lib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"cci_impl_lib\"];\n+#[crate_id=\"cci_impl_lib\"];\n // NOTE: remove after the next snapshot\n #[link(name=\"cci_impl_lib\", vers=\"0.0\")];\n "}, {"sha": "672d06f1ccba3cfe5eb7c54c63ddef444fcd2840", "filename": "src/test/auxiliary/cci_iter_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcci_iter_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcci_iter_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_iter_lib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"cci_iter_lib\"];\n+#[crate_id=\"cci_iter_lib\"];\n // NOTE: remove after the next snapshot\n #[link(name=\"cci_iter_lib\", vers=\"0.0\")];\n "}, {"sha": "ef832d8e443f5c2dc3e26b052a5a7f2a463be535", "filename": "src/test/auxiliary/cci_no_inline_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcci_no_inline_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcci_no_inline_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_no_inline_lib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"cci_no_inline_lib\"];\n+#[crate_id=\"cci_no_inline_lib\"];\n // NOTE: remove after the next snapshot\n #[link(name=\"cci_no_inline_lib\", vers=\"0.0\")];\n "}, {"sha": "a5e10eaaf6872664ee0f13cb6c10ddb423bb9d44", "filename": "src/test/auxiliary/crate-method-reexport-grrrrrrr2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrate-method-reexport-grrrrrrr2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrate-method-reexport-grrrrrrr2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrate-method-reexport-grrrrrrr2.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #[feature(managed_boxes)];\n-#[pkgid=\"crate_method_reexport_grrrrrrr2\"];\n+#[crate_id=\"crate_method_reexport_grrrrrrr2\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crate_method_reexport_grrrrrrr2\")];\n "}, {"sha": "1188626242b64b1bc2c7b5290bff6a6c5d6ae99f", "filename": "src/test/auxiliary/crateresolve1-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve1-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve1-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve1-1.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve1#0.1\"];\n+#[crate_id=\"crateresolve1#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve1\",\n        vers = \"0.1\")];"}, {"sha": "f0d69b3eaafa143800c5f9ec8c2bda635e4a5f81", "filename": "src/test/auxiliary/crateresolve1-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve1-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve1-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve1-2.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve1#0.2\"];\n+#[crate_id=\"crateresolve1#0.2\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve1\",\n        vers = \"0.2\")];"}, {"sha": "fe62de2d409a33007dbfaa93571e579e6a065740", "filename": "src/test/auxiliary/crateresolve1-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve1-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve1-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve1-3.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve1#0.3\"];\n+#[crate_id=\"crateresolve1#0.3\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve1\",\n        vers = \"0.3\")];"}, {"sha": "7d64c24798bdd8c9b4dfc07d0c50c0655134bca9", "filename": "src/test/auxiliary/crateresolve2-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve2-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve2-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve2-1.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve2#0.1\"];\n+#[crate_id=\"crateresolve2#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve2\",\n        vers = \"0.1\")];"}, {"sha": "bd7fb7cfa815271649f731bf945f21e3434a9102", "filename": "src/test/auxiliary/crateresolve2-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve2-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve2-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve2-2.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve2#0.2\"];\n+#[crate_id=\"crateresolve2#0.2\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve2\",\n        vers = \"0.2\")];"}, {"sha": "64aeca48608b64fb621ced5f265b75fd7650e079", "filename": "src/test/auxiliary/crateresolve2-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve2-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve2-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve2-3.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve2#0.3\"];\n+#[crate_id=\"crateresolve2#0.3\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve2\",\n        vers = \"0.3\")];"}, {"sha": "ae6fe53ab479372e3c00eee163d92c983e8895b4", "filename": "src/test/auxiliary/crateresolve3-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve3-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve3-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve3-1.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve3#0.1\"];\n+#[crate_id=\"crateresolve3#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve3\",\n        vers = \"0.1\")];"}, {"sha": "b77e147c6355685a3e15db9b797f8f0133042b92", "filename": "src/test/auxiliary/crateresolve3-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve3-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve3-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve3-2.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve3#0.2\"];\n+#[crate_id=\"crateresolve3#0.2\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve3\",\n        vers = \"0.2\")];"}, {"sha": "683a46ceecd7b9f3b8e14509107c73dba3313a86", "filename": "src/test/auxiliary/crateresolve4a-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-1.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve4a#0.1\"];\n+#[crate_id=\"crateresolve4a#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve4a\", vers = \"0.1\")];\n #[crate_type = \"lib\"];"}, {"sha": "6facf02d923b0a5e82bf057fada99db78a97651a", "filename": "src/test/auxiliary/crateresolve4a-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-2.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve4a#0.2\"];\n+#[crate_id=\"crateresolve4a#0.2\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve4a\", vers= \"0.2\")];\n #[crate_type = \"lib\"];"}, {"sha": "e19cd6c73d2011442d1dbe2ffd15c9081facd80b", "filename": "src/test/auxiliary/crateresolve4b-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-1.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:crateresolve4a-1.rs\n // aux-build:crateresolve4a-2.rs\n-#[pkgid=\"crateresolve4b#0.1\"];\n+#[crate_id=\"crateresolve4b#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve4b\", vers = \"0.1\")];\n #[crate_type = \"lib\"];"}, {"sha": "2c00d9aab8d991effb1388a054852d9fdee29555", "filename": "src/test/auxiliary/crateresolve4b-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-2.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:crateresolve4a-1.rs\n // aux-build:crateresolve4a-2.rs\n-#[pkgid=\"crateresolve4b#0.2\"];\n+#[crate_id=\"crateresolve4b#0.2\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve4b\", vers = \"0.2\")];\n #[crate_type = \"lib\"];"}, {"sha": "f619499f4f44284f9c72f6a5fb80fd4503408128", "filename": "src/test/auxiliary/crateresolve5-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve5-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve5-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve5-1.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve5#0.1\"];\n+#[crate_id=\"crateresolve5#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve5\",\n        vers = \"0.1\")];"}, {"sha": "d0164d77e6652bd218100d1f011e863cab346b18", "filename": "src/test/auxiliary/crateresolve5-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve5-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve5-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve5-2.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve5#0.2\"];\n+#[crate_id=\"crateresolve5#0.2\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve5\",\n        vers = \"0.2\")];"}, {"sha": "aa3babea58f269ca187f083d64685e56fa952b22", "filename": "src/test/auxiliary/crateresolve8-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve8-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve8-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve8-1.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // default link meta for 'package_id' will be equal to filestem\n-#[pkgid=\"crateresolve8#0.1\"];\n+#[crate_id=\"crateresolve8#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve8\",\n        vers = \"0.1\")];"}, {"sha": "39328f28beace641cb5708c6ef7db8c8f14a5951", "filename": "src/test/auxiliary/crateresolve_calories-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-1.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve_calories#0.1\"];\n+#[crate_id=\"crateresolve_calories#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve_calories\",\n        vers = \"0.1\","}, {"sha": "edf90589db799b29af612050e8ce30a5b925dc7b", "filename": "src/test/auxiliary/crateresolve_calories-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-2.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"crateresolve_calories#0.1\"];\n+#[crate_id=\"crateresolve_calories#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"crateresolve_calories\",\n        vers = \"0.1\","}, {"sha": "7a7d0c453a71e9c60f1d28fd1bc7376781aadfeb", "filename": "src/test/auxiliary/extern-crosscrate-source.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"externcallback#0.1\"];\n+#[crate_id=\"externcallback#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"externcallback\",\n        vers = \"0.1\")];"}, {"sha": "bc2ef7262a6fa7d78dcd3e5814a778c30ff6bb64", "filename": "src/test/auxiliary/foreign_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"foreign_lib\"];\n+#[crate_id=\"foreign_lib\"];\n // NOTE: remove after the next snapshot\n #[link(name=\"foreign_lib\", vers=\"0.0\")];\n "}, {"sha": "83f2cee0a5435a362cc0df6767fc2455524d1005", "filename": "src/test/auxiliary/inline_dtor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Finline_dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Finline_dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Finline_dtor.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"inline_dtor#0.1\"];\n+#[crate_id=\"inline_dtor#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name=\"inline_dtor\", vers=\"0.1\")];\n "}, {"sha": "b7cffa4c37828d35dd4a37382c9e5a70fc6e8598", "filename": "src/test/auxiliary/iss.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fiss.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fiss.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fiss.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"issue6919_3#0.1\"];\n+#[crate_id=\"issue6919_3#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name=\"iss6919_3\", vers=\"0.1\")];\n "}, {"sha": "24c8edbc80078c18d157a78e4e194607bc4235fe", "filename": "src/test/auxiliary/issue-2380.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-2380.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-2380.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2380.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #[feature(managed_boxes)];\n-#[pkgid=\"a\"];\n+#[crate_id=\"a\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"a\", vers = \"0.0\")];\n #[crate_type = \"lib\"];"}, {"sha": "c9779a0040d78842216b43d45fa093435b887027", "filename": "src/test/auxiliary/issue-2414-a.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-2414-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-2414-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2414-a.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"a#0.1\"];\n+#[crate_id=\"a#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"a\", vers = \"0.1\")];\n #[crate_type = \"lib\"];"}, {"sha": "33cb5d5fb6c4b630437700100b42c347d1b77639", "filename": "src/test/auxiliary/issue-2414-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -10,7 +10,7 @@\n \n // xfail-fast\n \n-#[pkgid=\"b#0.1\"];\n+#[crate_id=\"b#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"b\", vers = \"0.1\")];\n #[crate_type = \"lib\"];"}, {"sha": "5948a4923053bfb1798667d92d04f42e2e4f448a", "filename": "src/test/auxiliary/issue-2526.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2526.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"issue_2526#0.2\"];\n+#[crate_id=\"issue_2526#0.2\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"issue_2526\",\n        vers = \"0.2\","}, {"sha": "e5457e46d33dcce8804046daf72f08aac3b16ac2", "filename": "src/test/auxiliary/issue-2631-a.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #[feature(managed_boxes)];\n-#[pkgid=\"req\"];\n+#[crate_id=\"req\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"req\")];\n #[crate_type = \"lib\"];"}, {"sha": "40ae334ef72272e18a03c945cbd0f4fa9ac8b3b4", "filename": "src/test/auxiliary/issue-3012-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-3012-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-3012-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-3012-1.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"socketlib\"];\n+#[crate_id=\"socketlib\"];\n // NOTE: remove after the next snapshot\n #[link(name=\"socketlib\", vers=\"0.0\")];\n #[crate_type = \"lib\"];"}, {"sha": "71db81459b0dcfb2fd28e23980750a965028d09d", "filename": "src/test/auxiliary/issue-4208-cc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-4208-cc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue-4208-cc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-4208-cc.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"numeric#0.1\"];\n+#[crate_id=\"numeric#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"numeric\",\n        vers = \"0.1\")];"}, {"sha": "4d21abe64efe1b918583728321c94bdd705a55a8", "filename": "src/test/auxiliary/issue_2242_a.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue_2242_a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue_2242_a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2242_a.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"a#0.1\"];\n+#[crate_id=\"a#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"a\", vers = \"0.1\")];\n #[crate_type = \"lib\"];"}, {"sha": "60054cd22189ac7b7ef582284aa0c6a77c796810", "filename": "src/test/auxiliary/issue_2242_c.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue_2242_c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue_2242_c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2242_c.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"c#0.1\"];\n+#[crate_id=\"c#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"c\", vers = \"0.1\")];\n #[crate_type = \"lib\"];"}, {"sha": "08f83d9d2062408262db948e65631b36081fac0c", "filename": "src/test/auxiliary/issue_3979_traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue_3979_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fissue_3979_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_3979_traits.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"issue_3979_traits#0.1\"];\n+#[crate_id=\"issue_3979_traits#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"issue_3979_traits\",\n        vers = \"0.1\")];"}, {"sha": "8b821c656228a145adf9484f5b4f590100aae9b0", "filename": "src/test/auxiliary/lint_stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_stability.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -7,7 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#[pkgid=\"lint_stability#0.1\"];\n+#[crate_id=\"lint_stability#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"lint_stability\",\n        vers = \"0.1\")];"}, {"sha": "b257f4578a5ff20e0bfc6a5dd7546ae67cfb8b0c", "filename": "src/test/auxiliary/static-function-pointer-aux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fstatic-function-pointer-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fstatic-function-pointer-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fstatic-function-pointer-aux.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"static-function-pointer-aux\"];\n+#[crate_id=\"static-function-pointer-aux\"];\n \n pub fn f(x: int) -> int { -x }\n "}, {"sha": "648c9ca7320fe828a1dd413dcdc75db70fa592ca", "filename": "src/test/auxiliary/static-methods-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fstatic-methods-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fstatic-methods-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fstatic-methods-crate.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"static_methods_crate#0.1\"];\n+#[crate_id=\"static_methods_crate#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"static_methods_crate\",\n        vers = \"0.1\")];"}, {"sha": "fc258a8a52794c57cdd292ddd2ddd0c14f59e1a8", "filename": "src/test/auxiliary/struct_variant_xc_aux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fstruct_variant_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Fstruct_variant_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fstruct_variant_xc_aux.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"struct_variant_xc_aux#0.1\"];\n+#[crate_id=\"struct_variant_xc_aux#0.1\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"struct_variant_xc_aux\",\n        vers = \"0.1\")];"}, {"sha": "9ed45da9e17abe89ccd4035d768ce56d25e1ca5d", "filename": "src/test/auxiliary/trait_default_method_xc_aux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -1,4 +1,4 @@\n-#[pkgid=\"trait_default_method_xc_aux\"];\n+#[crate_id=\"trait_default_method_xc_aux\"];\n \n pub struct Something { x: int }\n "}, {"sha": "06a06c967f4fb0044f233612494aa6d713a3a262", "filename": "src/test/run-make/bootstrap-from-c-with-uvio/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-uvio%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-uvio%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-uvio%2Flib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"boot#0.1\"];\n+#[crate_id=\"boot#0.1\"];\n #[crate_type=\"lib\"];\n \n extern mod rustuv; // pull in uvio"}, {"sha": "937118269a7473e7edd5bf16dbc27367e323bb69", "filename": "src/test/run-make/dep-info/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-make%2Fdep-info%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-make%2Fdep-info%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info%2Flib.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -1,4 +1,4 @@\n-#[pkgid=\"foo#0.1\"];\n+#[crate_id=\"foo#0.1\"];\n \n pub mod foo;\n pub mod bar;"}, {"sha": "ef407ed298798aba9c344ba80ecd0150f175385f", "filename": "src/test/run-make/rustdoc-smoke/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-make%2Frustdoc-smoke%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-make%2Frustdoc-smoke%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-smoke%2Ffoo.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -1,4 +1,4 @@\n-#[pkgid = \"foo#0.1\"];\n+#[crate_id = \"foo#0.1\"];\n \n //! Very docs\n "}, {"sha": "1dd1b9c098b62813441aa9fd6e3590dee9549654", "filename": "src/test/run-pass/crateresolve8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -11,7 +11,7 @@\n // xfail-fast\n // aux-build:crateresolve8-1.rs\n \n-#[pkgid=\"crateresolve8#0.1\"];\n+#[crate_id=\"crateresolve8#0.1\"];\n \n extern mod crateresolve8(vers = \"0.1\", package_id=\"crateresolve8#0.1\");\n //extern mod crateresolve8(vers = \"0.1\");"}, {"sha": "27ea0d394b883b08c0c8bc5b3d7cf6a8740b8f08", "filename": "src/test/run-pass/issue-1251.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-pass%2Fissue-1251.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-pass%2Fissue-1251.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-1251.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[pkgid=\"rust_get_test_int\"];\n+#[crate_id=\"rust_get_test_int\"];\n // NOTE: remove after the next snapshot\n #[link(name = \"rust_get_test_int\")];\n "}, {"sha": "8482af9e7c4a84baf863be255871bc86e1add2df", "filename": "src/test/run-pass/issue-6919.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-pass%2Fissue-6919.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-pass%2Fissue-6919.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-6919.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -11,7 +11,7 @@\n // aux-build:iss.rs\n // xfail-fast\n \n-#[pkgid=\"issue-6919\"];\n+#[crate_id=\"issue-6919\"];\n \n extern mod issue6919_3;\n "}, {"sha": "b453dca1800c621e500dbf81963d16a94d8f5b70", "filename": "src/test/run-pass/item-attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d760f994de00f4e700a03a650e5065c8391b7f73/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fitem-attributes.rs?ref=d760f994de00f4e700a03a650e5065c8391b7f73", "patch": "@@ -16,7 +16,7 @@\n #[attr3];\n #[attr4(attr5)];\n \n-#[pkgid=\"extra#0.1\"];\n+#[crate_id=\"extra#0.1\"];\n // NOTE: remove after the next snapshot\n // Special linkage attributes for the crate\n #[link(name = \"extra\","}]}