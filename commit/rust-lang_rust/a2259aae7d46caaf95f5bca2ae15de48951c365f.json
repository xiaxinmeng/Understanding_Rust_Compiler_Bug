{"sha": "a2259aae7d46caaf95f5bca2ae15de48951c365f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMjU5YWFlN2Q0NmNhYWY5NWY1YmNhMmFlMTVkZTQ4OTUxYzM2NWY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-17T18:55:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-17T18:55:55Z"}, "message": "Rollup merge of #61702 - RalfJung:const-enum-cast, r=oli-obk\n\ntest more variants of enum-int-casting\n\nAs I learned in https://github.com/rust-lang/rust/pull/61673#issuecomment-500213506, there is a code path we are not testing yet. Looks like enum-int-casting with and without an intermediate let-binding is totally different.\n\nEDIT: The reason for this is to get rid of the cycle in definitions such as:\n```rust\nenum Foo {\n    A = 0,\n    B = Foo::A as isize + 2,\n}\n```\nThis has historically been supported, so a hack adding special treatment to `Enum::Variant as _` was added to keep supporting it.", "tree": {"sha": "f5fb46ba5bd636797153e82f3707205e1b36c647", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5fb46ba5bd636797153e82f3707205e1b36c647"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2259aae7d46caaf95f5bca2ae15de48951c365f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdB+I7CRBK7hj4Ov3rIwAAdHIIAKKzeGWbFw++/4Q60nNbToFG\nkgpcZjpGSNHdhpCklecuLQh5WoLjfgyn03lDn4CSlUYR7Wvewe7ZiD/lx6ZlIVxP\n6nCwKjh6iaYXcVB8Uv7pFa7fruOCib7B4yVMiEnMJf6usFDnGcNt+Wz7wThKJRGM\nOEAr3HLZtK1QTdtV5m6nncsS7GK4/NKNxITao4Aum+1C4duKsnTAXC6BMokSpwTU\nkvPusW7fM2I+u/w/rhIZfnQTNCkaPRZhHDtFmnBBrW18TLrzdt/PwXRszp8hyw4x\nRwMZd0vRQvU9Nle/W+6jKE1G6cMdWLtqQ29w5E6lwvymbLgRHerRTW13lyzI670=\n=2npZ\n-----END PGP SIGNATURE-----\n", "payload": "tree f5fb46ba5bd636797153e82f3707205e1b36c647\nparent b01a257da1fbb3f5661029dd390fdccc49dff287\nparent 2e9931f9333d74cbe10545978e58e38ee915998a\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1560797755 +0200\ncommitter GitHub <noreply@github.com> 1560797755 +0200\n\nRollup merge of #61702 - RalfJung:const-enum-cast, r=oli-obk\n\ntest more variants of enum-int-casting\n\nAs I learned in https://github.com/rust-lang/rust/pull/61673#issuecomment-500213506, there is a code path we are not testing yet. Looks like enum-int-casting with and without an intermediate let-binding is totally different.\n\nEDIT: The reason for this is to get rid of the cycle in definitions such as:\n```rust\nenum Foo {\n    A = 0,\n    B = Foo::A as isize + 2,\n}\n```\nThis has historically been supported, so a hack adding special treatment to `Enum::Variant as _` was added to keep supporting it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2259aae7d46caaf95f5bca2ae15de48951c365f", "html_url": "https://github.com/rust-lang/rust/commit/a2259aae7d46caaf95f5bca2ae15de48951c365f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2259aae7d46caaf95f5bca2ae15de48951c365f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b01a257da1fbb3f5661029dd390fdccc49dff287", "url": "https://api.github.com/repos/rust-lang/rust/commits/b01a257da1fbb3f5661029dd390fdccc49dff287", "html_url": "https://github.com/rust-lang/rust/commit/b01a257da1fbb3f5661029dd390fdccc49dff287"}, {"sha": "2e9931f9333d74cbe10545978e58e38ee915998a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e9931f9333d74cbe10545978e58e38ee915998a", "html_url": "https://github.com/rust-lang/rust/commit/2e9931f9333d74cbe10545978e58e38ee915998a"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "a3255c2f601b367efb3117485fb0f475b9b6db0a", "filename": "src/test/run-pass/consts/const-enum-cast.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a2259aae7d46caaf95f5bca2ae15de48951c365f/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-enum-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2259aae7d46caaf95f5bca2ae15de48951c365f/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-enum-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-enum-cast.rs?ref=a2259aae7d46caaf95f5bca2ae15de48951c365f", "patch": "@@ -1,9 +1,8 @@\n // run-pass\n-#![allow(dead_code)]\n #![allow(non_upper_case_globals)]\n \n enum A { A1, A2 }\n-enum B { B1=0, B2=2 }\n+enum B { B1=4, B2=2 }\n \n pub fn main () {\n     static c1: isize = A::A2 as isize;\n@@ -14,4 +13,14 @@ pub fn main () {\n     assert_eq!(c2, 2);\n     assert_eq!(a1, 1);\n     assert_eq!(a2, 2);\n+\n+    // Turns out that adding a let-binding generates totally different MIR.\n+    static c1_2: isize = { let v = A::A1; v as isize };\n+    static c2_2: isize = { let v = B::B1; v as isize };\n+    let a1_2 = { let v = A::A1; v as isize };\n+    let a2_2 = { let v = B::B1; v as isize };\n+    assert_eq!(c1_2, 0);\n+    assert_eq!(c2_2, 4);\n+    assert_eq!(a1_2, 0);\n+    assert_eq!(a2_2, 4);\n }"}]}