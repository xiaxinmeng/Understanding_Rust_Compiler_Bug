{"sha": "c82183de19ad3c77c16bbf34bebf1f73b297e526", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MjE4M2RlMTlhZDNjNzdjMTZiYmYzNGJlYmYxZjczYjI5N2U1MjY=", "commit": {"author": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2013-01-23T03:29:47Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-02-16T02:04:10Z"}, "message": "rustpkg: More fixes", "tree": {"sha": "1e0132a2c1772bd270e6c995a9b3cc90f71e8ccd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e0132a2c1772bd270e6c995a9b3cc90f71e8ccd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c82183de19ad3c77c16bbf34bebf1f73b297e526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c82183de19ad3c77c16bbf34bebf1f73b297e526", "html_url": "https://github.com/rust-lang/rust/commit/c82183de19ad3c77c16bbf34bebf1f73b297e526", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c82183de19ad3c77c16bbf34bebf1f73b297e526/comments", "author": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e34e072d1777ad2064ed9b70ccdbe29b4f100f9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e34e072d1777ad2064ed9b70ccdbe29b4f100f9b", "html_url": "https://github.com/rust-lang/rust/commit/e34e072d1777ad2064ed9b70ccdbe29b4f100f9b"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "c69e6921e06cc470217fa504a9ce5e5155c298b3", "filename": "src/librustpkg/util.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c82183de19ad3c77c16bbf34bebf1f73b297e526/src%2Flibrustpkg%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c82183de19ad3c77c16bbf34bebf1f73b297e526/src%2Flibrustpkg%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Futil.rs?ref=c82183de19ad3c77c16bbf34bebf1f73b297e526", "patch": "@@ -16,7 +16,8 @@ use syntax::ast_util::*;\n use syntax::{ast, attr, codemap, diagnostic, fold, parse, visit};\n use codemap::span;\n use semver::Version;\n-use std::{json, term, sort};\n+use std::{json, term, sort, getopts};\n+use getopts::groups::getopts;\n use api::Listener;\n \n pub struct Package {\n@@ -866,14 +867,15 @@ pub fn compile_input(sysroot: Option<Path>, input: driver::input, dir: &Path,\n     let bin_dir = dir.push(~\"bin\");\n     let test_dir = dir.push(~\"test\");\n     let binary = os::args()[0];\n-    let options: @session::options = @{\n-        binary: binary,\n-        crate_type: session::unknown_crate,\n-        optimize: if opt { session::Aggressive } else { session::No },\n-        test: test,\n-        maybe_sysroot: sysroot,\n-        .. *session::basic_options()\n-    };\n+    let matches = getopts(flags, driver::optgroups()).get();\n+    let mut options = driver::build_session_options(binary, matches,\n+                                                    diagnostic::emit);\n+\n+    options.crate_type = session::unknown_crate;\n+    options.optimize = if opt { session::Aggressive } else { session::No };\n+    options.test = test;\n+    options.maybe_sysroot = sysroot;\n+\n     let sess = driver::build_session(options, diagnostic::emit);\n     let cfg = driver::build_configuration(sess, binary, input);\n     let mut outputs = driver::build_output_filenames(input, &None, &None,"}]}