{"sha": "19e3c860037a8bb01157aa9da291003c8b69e18c", "node_id": "C_kwDOAAsO6NoAKDE5ZTNjODYwMDM3YThiYjAxMTU3YWE5ZGEyOTEwMDNjOGI2OWUxOGM", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-01-21T18:26:05Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-01-21T21:23:22Z"}, "message": "Make strict_disjoint use explicit_disjoint", "tree": {"sha": "41472f8e3ce1e37d2b3444ffccb2344a1196651c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41472f8e3ce1e37d2b3444ffccb2344a1196651c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19e3c860037a8bb01157aa9da291003c8b69e18c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmHrJE0ACgkQgTGiTgx5\n769nOw/8CaNfr+jsdT0cBap9U08Ad5yu2T/9qZshNTcDE/K+atfcav5fX8d//eW4\nzxI950nl1x25kw5iRGN7FZloCkh7Q8SPv3yDJWLAzRo8tbdaETOc2r0WlcLCsfn1\nFuvjaZDSzDWViOiH34/jLok/clGt0EzAGCGxJuuTSxpMT1EjXm1Me+Ph+7U50A56\nOwlBnwzc49Im8k8YFlCuNX+KbgeneitTHlPl7MYQvV4ytyt3V6eoSHaPgM3Imjme\nzXjqG+8yd84kO/6tmPvI4XUtMyCCMMPNb/grpP0uLN3W4X9VEWXU1kAxN2tGMqZ8\niUXy2Uil8QynWIgpdl29s9/F5gBksoWiVJUV34+GNuCbF5mN/ssjU//gamjTku7v\n9Nt7i2ROdu+ptpp5G5dY6QwAB2MfJuudg87+uu07OMzKFhUoLG9mrSvANag3kFPu\ntv7e3zCwMZbZI12BCdgLIl2Id75+jBw2bRMZhdyvYGT+AGD4HaQxfmRoY91AABRb\nAJXkZTMfCzCMQQ7CsnQEIYWidb0lqWLctgH6EEVb73hsb1v6GkPIy2NNlCEL4e3V\nT/n9LlhBbBEgrk3zbnOXB2BdJQ+l4y64YjvMmgmXEMqlGdFgl14bbqYWIQ1PEYJw\ndnt9fvrKMQCqhghNqHWC9PvkbB1CrIGZ6lVV4SsQlS0v29NBMjg=\n=JrFW\n-----END PGP SIGNATURE-----", "payload": "tree 41472f8e3ce1e37d2b3444ffccb2344a1196651c\nparent 1ec962fb349f0d4a010af81e7ae0d53fec4e2bb2\nauthor Santiago Pastorino <spastorino@gmail.com> 1642789565 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1642800202 -0300\n\nMake strict_disjoint use explicit_disjoint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19e3c860037a8bb01157aa9da291003c8b69e18c", "html_url": "https://github.com/rust-lang/rust/commit/19e3c860037a8bb01157aa9da291003c8b69e18c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19e3c860037a8bb01157aa9da291003c8b69e18c/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ec962fb349f0d4a010af81e7ae0d53fec4e2bb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ec962fb349f0d4a010af81e7ae0d53fec4e2bb2", "html_url": "https://github.com/rust-lang/rust/commit/1ec962fb349f0d4a010af81e7ae0d53fec4e2bb2"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "178cff9501d739f85d246a83502cd14d71e166e0", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/19e3c860037a8bb01157aa9da291003c8b69e18c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19e3c860037a8bb01157aa9da291003c8b69e18c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=19e3c860037a8bb01157aa9da291003c8b69e18c", "patch": "@@ -206,14 +206,19 @@ fn overlap_within_probe<'cx, 'tcx>(\n             }\n         }\n         OverlapMode::Strict => {\n-            if strict_disjoint(selcx, param_env, &impl1_header, impl2_header) {\n+            if strict_disjoint(selcx, impl1_def_id, impl2_def_id) {\n                 return None;\n             }\n+\n+            // Equate for error reporting\n+            let _ = selcx\n+                .infcx()\n+                .at(&ObligationCause::dummy(), param_env)\n+                .eq_impl_headers(&impl1_header, &impl2_header);\n         }\n         OverlapMode::WithNegative => {\n             if stable_disjoint(selcx, param_env, &impl1_header, impl2_header)\n-                || explicit_disjoint(selcx, impl1_def_id, impl2_def_id)\n-                || explicit_disjoint(selcx, impl2_def_id, impl1_def_id)\n+                || strict_disjoint(selcx, impl1_def_id, impl2_def_id)\n             {\n                 return None;\n             }\n@@ -255,13 +260,11 @@ fn stable_disjoint<'cx, 'tcx>(\n \n fn strict_disjoint<'cx, 'tcx>(\n     selcx: &mut SelectionContext<'cx, 'tcx>,\n-    param_env: ty::ParamEnv<'tcx>,\n-    impl1_header: &ty::ImplHeader<'tcx>,\n-    impl2_header: ty::ImplHeader<'tcx>,\n+    impl1_def_id: DefId,\n+    impl2_def_id: DefId,\n ) -> bool {\n-    disjoint_with_filter(selcx, param_env, impl1_header, impl2_header, |selcx, o| {\n-        strict_check(selcx, o)\n-    })\n+    explicit_disjoint(selcx, impl1_def_id, impl2_def_id)\n+        || explicit_disjoint(selcx, impl2_def_id, impl1_def_id)\n }\n \n fn disjoint_with_filter<'cx, 'tcx>("}]}