{"sha": "af298deff7141c3b8b95acb94ef2145d2ef9adc0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMjk4ZGVmZjcxNDFjM2I4Yjk1YWNiOTRlZjIxNDVkMmVmOWFkYzA=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T19:47:06Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T22:22:01Z"}, "message": "fmt: simplify parse_parameter", "tree": {"sha": "a62a17deb2f921ff847b07da62fc85e253180249", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a62a17deb2f921ff847b07da62fc85e253180249"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af298deff7141c3b8b95acb94ef2145d2ef9adc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af298deff7141c3b8b95acb94ef2145d2ef9adc0", "html_url": "https://github.com/rust-lang/rust/commit/af298deff7141c3b8b95acb94ef2145d2ef9adc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af298deff7141c3b8b95acb94ef2145d2ef9adc0/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4550cb05626a1b982560710d6757145049cca247", "url": "https://api.github.com/repos/rust-lang/rust/commits/4550cb05626a1b982560710d6757145049cca247", "html_url": "https://github.com/rust-lang/rust/commit/4550cb05626a1b982560710d6757145049cca247"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "e2b290405333e9d577b39141df50d6ef1c5fde4d", "filename": "src/libcore/extfmt.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/af298deff7141c3b8b95acb94ef2145d2ef9adc0/src%2Flibcore%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af298deff7141c3b8b95acb94ef2145d2ef9adc0/src%2Flibcore%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fextfmt.rs?ref=af298deff7141c3b8b95acb94ef2145d2ef9adc0", "patch": "@@ -229,17 +229,11 @@ pub mod ct {\n     pub fn parse_parameter(s: &str, i: uint, lim: uint) ->\n        Parsed<Option<uint>> {\n         if i >= lim { return Parsed::new(None, i); }\n-        let num = peek_num(s, i, lim);\n-        return match num {\n-              None => Parsed::new(None, i),\n-              Some(t) => {\n-                let n = t.val;\n-                let j = t.next;\n-                if j < lim && s[j] == '$' as u8 {\n-                    Parsed::new(Some(n), j + 1)\n-                } else { Parsed::new(None, i) }\n-              }\n-            };\n+        match peek_num(s, i, lim) {\n+            Some(num) if num.next < lim && s[num.next] == '$' as u8 =>\n+                Parsed::new(Some(num.val), num.next + 1),\n+            _ => Parsed::new(None, i)\n+        }\n     }\n     pub fn parse_flags(s: &str, i: uint, lim: uint) ->\n        Parsed<~[Flag]> {"}]}