{"sha": "4e5333cb2ba70b49a17c3c124bc47feba7fd761c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNTMzM2NiMmJhNzBiNDlhMTdjM2MxMjRiYzQ3ZmViYTdmZDc2MWM=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-25T22:54:33Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-27T11:51:22Z"}, "message": "Don't needlessly build rustdoc for compiletest.\n\nFor most tests, rustdoc isn't needed, so avoid building it.", "tree": {"sha": "451794948a5a5c9e26236266590028a7f5133af6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/451794948a5a5c9e26236266590028a7f5133af6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e5333cb2ba70b49a17c3c124bc47feba7fd761c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e5333cb2ba70b49a17c3c124bc47feba7fd761c", "html_url": "https://github.com/rust-lang/rust/commit/4e5333cb2ba70b49a17c3c124bc47feba7fd761c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e5333cb2ba70b49a17c3c124bc47feba7fd761c/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2e9b40e9aff842928c65606e47d9203a848a4e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2e9b40e9aff842928c65606e47d9203a848a4e9", "html_url": "https://github.com/rust-lang/rust/commit/e2e9b40e9aff842928c65606e47d9203a848a4e9"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "df15cbc931462a218b397ef70715f3d1d1a24e5c", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4e5333cb2ba70b49a17c3c124bc47feba7fd761c/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5333cb2ba70b49a17c3c124bc47feba7fd761c/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=4e5333cb2ba70b49a17c3c124bc47feba7fd761c", "patch": "@@ -562,7 +562,12 @@ impl Step for Compiletest {\n         cmd.arg(\"--compile-lib-path\").arg(builder.rustc_libdir(compiler));\n         cmd.arg(\"--run-lib-path\").arg(builder.sysroot_libdir(compiler, target));\n         cmd.arg(\"--rustc-path\").arg(builder.rustc(compiler));\n-        cmd.arg(\"--rustdoc-path\").arg(builder.rustdoc(compiler));\n+\n+        // Avoid depending on rustdoc when we don't need it.\n+        if mode == \"rustdoc\" || mode == \"run-make\" {\n+            cmd.arg(\"--rustdoc-path\").arg(builder.rustdoc(compiler));\n+        }\n+\n         cmd.arg(\"--src-base\").arg(build.src.join(\"src/test\").join(suite));\n         cmd.arg(\"--build-base\").arg(testdir(build, compiler.host).join(suite));\n         cmd.arg(\"--stage-id\").arg(format!(\"stage{}-{}\", compiler.stage, target));"}, {"sha": "0d6b350a1d431b1b5ff2eb2c6c1ea9b58db72f25", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e5333cb2ba70b49a17c3c124bc47feba7fd761c/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5333cb2ba70b49a17c3c124bc47feba7fd761c/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=4e5333cb2ba70b49a17c3c124bc47feba7fd761c", "patch": "@@ -93,7 +93,7 @@ pub struct Config {\n     pub rustc_path: PathBuf,\n \n     // The rustdoc executable\n-    pub rustdoc_path: PathBuf,\n+    pub rustdoc_path: Option<PathBuf>,\n \n     // The python executable to use for LLDB\n     pub lldb_python: String,"}, {"sha": "6fa758aeabe4d4b853e7604f7269a7f6f37a6dd8", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e5333cb2ba70b49a17c3c124bc47feba7fd761c/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5333cb2ba70b49a17c3c124bc47feba7fd761c/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=4e5333cb2ba70b49a17c3c124bc47feba7fd761c", "patch": "@@ -67,7 +67,7 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n     opts.reqopt(\"\", \"compile-lib-path\", \"path to host shared libraries\", \"PATH\")\n         .reqopt(\"\", \"run-lib-path\", \"path to target shared libraries\", \"PATH\")\n         .reqopt(\"\", \"rustc-path\", \"path to rustc to use for compiling\", \"PATH\")\n-        .reqopt(\"\", \"rustdoc-path\", \"path to rustdoc to use for compiling\", \"PATH\")\n+        .optopt(\"\", \"rustdoc-path\", \"path to rustdoc to use for compiling\", \"PATH\")\n         .reqopt(\"\", \"lldb-python\", \"path to python to use for doc tests\", \"PATH\")\n         .reqopt(\"\", \"docck-python\", \"path to python to use for doc tests\", \"PATH\")\n         .optopt(\"\", \"valgrind-path\", \"path to Valgrind executable for Valgrind tests\", \"PROGRAM\")\n@@ -157,7 +157,7 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n         compile_lib_path: make_absolute(opt_path(matches, \"compile-lib-path\")),\n         run_lib_path: make_absolute(opt_path(matches, \"run-lib-path\")),\n         rustc_path: opt_path(matches, \"rustc-path\"),\n-        rustdoc_path: opt_path(matches, \"rustdoc-path\"),\n+        rustdoc_path: matches.opt_str(\"rustdoc-path\").map(PathBuf::from),\n         lldb_python: matches.opt_str(\"lldb-python\").unwrap(),\n         docck_python: matches.opt_str(\"docck-python\").unwrap(),\n         valgrind_path: matches.opt_str(\"valgrind-path\"),\n@@ -210,7 +210,7 @@ pub fn log_config(config: &Config) {\n     logv(c, format!(\"compile_lib_path: {:?}\", config.compile_lib_path));\n     logv(c, format!(\"run_lib_path: {:?}\", config.run_lib_path));\n     logv(c, format!(\"rustc_path: {:?}\", config.rustc_path.display()));\n-    logv(c, format!(\"rustdoc_path: {:?}\", config.rustdoc_path.display()));\n+    logv(c, format!(\"rustdoc_path: {:?}\", config.rustdoc_path));\n     logv(c, format!(\"src_base: {:?}\", config.src_base.display()));\n     logv(c, format!(\"build_base: {:?}\", config.build_base.display()));\n     logv(c, format!(\"stage_id: {}\", config.stage_id));"}, {"sha": "93696561708738905beefecf607c591e14866ec6", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e5333cb2ba70b49a17c3c124bc47feba7fd761c/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5333cb2ba70b49a17c3c124bc47feba7fd761c/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=4e5333cb2ba70b49a17c3c124bc47feba7fd761c", "patch": "@@ -1192,7 +1192,8 @@ actual:\\n\\\n                             self.testpaths.file.to_str().unwrap().to_owned()];\n         args.extend(self.props.compile_flags.iter().cloned());\n         let args = ProcArgs {\n-            prog: self.config.rustdoc_path.to_str().unwrap().to_owned(),\n+            prog: self.config.rustdoc_path\n+                .as_ref().expect(\"--rustdoc-path passed\").to_str().unwrap().to_owned(),\n             args: args,\n         };\n         self.compose_and_run_compiler(args, None)\n@@ -2163,7 +2164,8 @@ actual:\\n\\\n            .env(\"S\", src_root)\n            .env(\"RUST_BUILD_STAGE\", &self.config.stage_id)\n            .env(\"RUSTC\", cwd.join(&self.config.rustc_path))\n-           .env(\"RUSTDOC\", cwd.join(&self.config.rustdoc_path))\n+           .env(\"RUSTDOC\",\n+               cwd.join(&self.config.rustdoc_path.as_ref().expect(\"--rustdoc-path passed\")))\n            .env(\"TMPDIR\", &tmpdir)\n            .env(\"LD_LIB_PATH_ENVVAR\", procsrv::dylib_env_var())\n            .env(\"HOST_RPATH_DIR\", cwd.join(&self.config.compile_lib_path))"}]}