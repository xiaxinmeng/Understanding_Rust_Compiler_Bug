{"sha": "19a50e4f2a899ad2b4a7b05709dcfd8450a7bbdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YTUwZTRmMmE4OTlhZDJiNGE3YjA1NzA5ZGNmZDg0NTBhN2JiZGM=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-01-02T03:01:17Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-01-04T22:11:33Z"}, "message": "Pretty-print static lvalues in MIR as just their path.", "tree": {"sha": "e7f633223c7a9e8bb9f3f591bd6ee605c012df4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7f633223c7a9e8bb9f3f591bd6ee605c012df4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19a50e4f2a899ad2b4a7b05709dcfd8450a7bbdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19a50e4f2a899ad2b4a7b05709dcfd8450a7bbdc", "html_url": "https://github.com/rust-lang/rust/commit/19a50e4f2a899ad2b4a7b05709dcfd8450a7bbdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19a50e4f2a899ad2b4a7b05709dcfd8450a7bbdc/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a33221ea54ad4a496c06f5d93fb1e32c8076454", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a33221ea54ad4a496c06f5d93fb1e32c8076454", "html_url": "https://github.com/rust-lang/rust/commit/6a33221ea54ad4a496c06f5d93fb1e32c8076454"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "74cd698dd5ac48b2b36be6a6174d52b4f3fc7a7b", "filename": "src/librustc/mir/repr.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/19a50e4f2a899ad2b4a7b05709dcfd8450a7bbdc/src%2Flibrustc%2Fmir%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19a50e4f2a899ad2b4a7b05709dcfd8450a7bbdc/src%2Flibrustc%2Fmir%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Frepr.rs?ref=19a50e4f2a899ad2b4a7b05709dcfd8450a7bbdc", "patch": "@@ -551,24 +551,24 @@ impl<'tcx> Debug for Lvalue<'tcx> {\n                 write!(fmt,\"arg{:?}\", id),\n             Temp(id) =>\n                 write!(fmt,\"tmp{:?}\", id),\n-            Static(id) =>\n-                write!(fmt,\"Static({:?})\", id),\n+            Static(def_id) =>\n+                write!(fmt, \"{}\", ty::tls::with(|tcx| tcx.item_path_str(def_id))),\n             ReturnPointer =>\n-                write!(fmt,\"ReturnPointer\"),\n+                write!(fmt, \"ReturnPointer\"),\n             Projection(ref data) =>\n                 match data.elem {\n                     ProjectionElem::Downcast(ref adt_def, index) =>\n-                        write!(fmt,\"({:?} as {})\", data.base, adt_def.variants[index].name),\n+                        write!(fmt, \"({:?} as {})\", data.base, adt_def.variants[index].name),\n                     ProjectionElem::Deref =>\n-                        write!(fmt,\"(*{:?})\", data.base),\n+                        write!(fmt, \"(*{:?})\", data.base),\n                     ProjectionElem::Field(field) =>\n-                        write!(fmt,\"{:?}.{:?}\", data.base, field.index()),\n+                        write!(fmt, \"{:?}.{:?}\", data.base, field.index()),\n                     ProjectionElem::Index(ref index) =>\n-                        write!(fmt,\"{:?}[{:?}]\", data.base, index),\n+                        write!(fmt, \"{:?}[{:?}]\", data.base, index),\n                     ProjectionElem::ConstantIndex { offset, min_length, from_end: false } =>\n-                        write!(fmt,\"{:?}[{:?} of {:?}]\", data.base, offset, min_length),\n+                        write!(fmt, \"{:?}[{:?} of {:?}]\", data.base, offset, min_length),\n                     ProjectionElem::ConstantIndex { offset, min_length, from_end: true } =>\n-                        write!(fmt,\"{:?}[-{:?} of {:?}]\", data.base, offset, min_length),\n+                        write!(fmt, \"{:?}[-{:?} of {:?}]\", data.base, offset, min_length),\n                 },\n         }\n     }"}]}