{"sha": "a1d55be3e1014095880d17e2b9a13baca33351bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZDU1YmUzZTEwMTQwOTU4ODBkMTdlMmI5YTEzYmFjYTMzMzUxYmY=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2017-11-17T19:58:11Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2017-11-17T19:58:11Z"}, "message": "Fixed bug with the implementation that was suppressing expected errors from the same line in other tests.", "tree": {"sha": "03fdc437ac72269d8b71deba085ef3ec7adf8493", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03fdc437ac72269d8b71deba085ef3ec7adf8493"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1d55be3e1014095880d17e2b9a13baca33351bf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJaDz9TAAoJEAF2C0+fU/FUIMgP/0ED+BY94XkMlsv9bxVny/Y7\nkBsx5oNULiyVsW9CzamZLHDp5/D/MiAW0C7oaMBAjFp3RYogtYdxOOXV6ryrddRl\nKglLamfxEj0QFu60UislLrv9G4kp632Sh+PGnQo8TAGYu4RysmMxp1G1YukcKyw5\n7SdGLItNncgM68JRwHJ55HYkQ9kHMLBYWYmwoXbhXvAZF1wemyrMOVMzvysIgTFT\nIepW9gvCHuolM6UlAY2XDyHr9p6T/Hl4EzzkHbL8POYBugPQWZVEGxv0rDgnYLMY\nyZSZ28ueYkQBBSPbavXbDFlXzrfN/YUQBqt27Nt058LUrlQCWWbyJpAmejIiwqtC\nw/GYGo4FL6WhbIcUFPTrBHc2c73XedxE1BVE2j0lWSqGFDNWILf8yKTJ/ju4fUd9\nPBskPpetRoEITmFbgWjytgM5EO8+XIxyV6Qlr0zp12vn7D1lAxwC4kGpwNKUVvS/\npaleUP15u2SOykVk5qJQ6MX7QnceUaYSk8PhsW/B8vuCgAyFvIAjLKTv3m03Nzai\n41jReuOdbxUrin7Z6UY+rwB1pBDx0SHUtC0e56wTUZu0/90EG/7OGg1z9xSMqT2x\nvg5VS5ObtnbEBktNSjVeZKCYYQLKmu+ybuBI6tYJemMuURnhN/Ycug7zf66FNMK+\nV/GGUpIYszpTSm1HyEL/\n=jQhP\n-----END PGP SIGNATURE-----", "payload": "tree 03fdc437ac72269d8b71deba085ef3ec7adf8493\nparent bf76ffe4e3b985128d69adbacf21573887282ad5\nauthor David Wood <david@davidtw.co> 1510948691 +0000\ncommitter David Wood <david@davidtw.co> 1510948691 +0000\n\nFixed bug with the implementation that was suppressing expected errors from the same line in other tests.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1d55be3e1014095880d17e2b9a13baca33351bf", "html_url": "https://github.com/rust-lang/rust/commit/a1d55be3e1014095880d17e2b9a13baca33351bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1d55be3e1014095880d17e2b9a13baca33351bf/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf76ffe4e3b985128d69adbacf21573887282ad5", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf76ffe4e3b985128d69adbacf21573887282ad5", "html_url": "https://github.com/rust-lang/rust/commit/bf76ffe4e3b985128d69adbacf21573887282ad5"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "0ff6c8622a58501ce32287fba74ddf1ee7a8b1e2", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a1d55be3e1014095880d17e2b9a13baca33351bf/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d55be3e1014095880d17e2b9a13baca33351bf/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=a1d55be3e1014095880d17e2b9a13baca33351bf", "patch": "@@ -643,16 +643,16 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n             _ => false,\n         };\n \n-        // If the error has been reported already, then we don't need the access_lvalue call and we\n-        // can set error_reported to false.\n-        if !has_storage_drop_or_dead_error_reported {\n+        // If the error has been reported already, then we don't need the access_lvalue call.\n+        if !has_storage_drop_or_dead_error_reported || consume_via_drop != ConsumeKind::Drop {\n             let error_reported;\n \n             if moves_by_default {\n                 let kind = match consume_via_drop {\n                     ConsumeKind::Drop => WriteKind::StorageDeadOrDrop,\n                     _ => WriteKind::Move,\n                 };\n+\n                 // move of lvalue: check if this is move of already borrowed path\n                 error_reported = self.access_lvalue(context, lvalue_span,\n                                                     (Deep, Write(kind)), flow_state);\n@@ -663,7 +663,9 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                                                     (Deep, Read(ReadKind::Copy)), flow_state);\n             }\n \n-            if error_reported {\n+            // If there was an error, then we keep track of it so as to deduplicate it.\n+            // We only do this on ConsumeKind::Drop.\n+            if error_reported && consume_via_drop == ConsumeKind::Drop {\n                 if let Lvalue::Local(local) = *lvalue {\n                     self.storage_drop_or_dead_error_reported.insert(local);\n                 }"}]}