{"sha": "9158e17997db0a21a27774a66b944539f4ef441a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNThlMTc5OTdkYjBhMjFhMjc3NzRhNjZiOTQ0NTM5ZjRlZjQ0MWE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-15T08:42:09Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-15T08:42:09Z"}, "message": "Document more use cases of dataflow", "tree": {"sha": "086ae2249e1ee55b36fdafbb796108482bf8f64f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/086ae2249e1ee55b36fdafbb796108482bf8f64f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9158e17997db0a21a27774a66b944539f4ef441a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9158e17997db0a21a27774a66b944539f4ef441a", "html_url": "https://github.com/rust-lang/rust/commit/9158e17997db0a21a27774a66b944539f4ef441a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9158e17997db0a21a27774a66b944539f4ef441a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc6b5d6efe163060bde31cc1c801086ed7ebc8f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc6b5d6efe163060bde31cc1c801086ed7ebc8f1", "html_url": "https://github.com/rust-lang/rust/commit/fc6b5d6efe163060bde31cc1c801086ed7ebc8f1"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "af16adf9eb32fc13cdbd184562b169f82d321213", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9158e17997db0a21a27774a66b944539f4ef441a/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9158e17997db0a21a27774a66b944539f4ef441a/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=9158e17997db0a21a27774a66b944539f4ef441a", "patch": "@@ -650,6 +650,20 @@ pub trait BottomValue {\n     const BOTTOM_VALUE: bool;\n \n     /// Merges `in_set` into `inout_set`, returning `true` if `inout_set` changed.\n+    ///\n+    /// You usually don't need to override this, since it automatically applies\n+    /// * `inout_set & in_set` if `BOTTOM_VALUE == true`\n+    /// * `inout_set | in_set` if `BOTTOM_VALUE == false`\n+    ///\n+    /// This means that if a bit is not `BOTTOM_VALUE`, it is propagated into all target blocks.\n+    /// For clarity, the above statement again from a different perspective:\n+    /// A block's initial bit value is `!BOTTOM_VALUE` if *any* predecessor block's bit value is\n+    /// `!BOTTOM_VALUE`.\n+    /// There are situations where you want the opposite behaviour: propagate only if *all*\n+    /// predecessor blocks's value is `!BOTTOM_VALUE`. In that case you need to\n+    /// 1. Invert `BOTTOM_VALUE`\n+    /// 2. Reset the `entry_set` in `start_block_effect` to `!BOTTOM_VALUE`\n+    /// 3. Override `join` to do the opposite from what it's doing now.\n     #[inline]\n     fn join<T: Idx>(&self, inout_set: &mut BitSet<T>, in_set: &BitSet<T>) -> bool {\n         if Self::BOTTOM_VALUE == false {\n@@ -667,7 +681,9 @@ pub trait BottomValue {\n /// for each block individually. The entry set for all other basic blocks is\n /// initialized to `Self::BOTTOM_VALUE`. The dataflow analysis then\n /// iteratively modifies the various entry sets (but leaves the the transfer\n-/// function unchanged).\n+/// function unchanged). `BottomValue::join` is used to merge the bitsets from\n+/// two blocks (e.g. when two blocks' terminator jumps to a single block, that\n+/// target block's state is the merged state of both incoming blocks).\n pub trait BitDenotation<'tcx>: BottomValue {\n     /// Specifies what index type is used to access the bitvector.\n     type Idx: Idx;"}]}