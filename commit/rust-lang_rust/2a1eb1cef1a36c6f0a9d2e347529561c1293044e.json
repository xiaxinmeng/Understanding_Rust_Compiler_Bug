{"sha": "2a1eb1cef1a36c6f0a9d2e347529561c1293044e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMWViMWNlZjFhMzZjNmYwYTlkMmUzNDc1Mjk1NjFjMTI5MzA0NGU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-03-12T14:00:12Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-03-12T14:00:12Z"}, "message": "Document the precomputation algorithm's purpose", "tree": {"sha": "fc770113358f24efc985421d177a1b20bf1bff1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc770113358f24efc985421d177a1b20bf1bff1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a1eb1cef1a36c6f0a9d2e347529561c1293044e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a1eb1cef1a36c6f0a9d2e347529561c1293044e", "html_url": "https://github.com/rust-lang/rust/commit/2a1eb1cef1a36c6f0a9d2e347529561c1293044e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a1eb1cef1a36c6f0a9d2e347529561c1293044e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ae131211be24a337877e6dbcd9b6c52a86b9511", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ae131211be24a337877e6dbcd9b6c52a86b9511", "html_url": "https://github.com/rust-lang/rust/commit/1ae131211be24a337877e6dbcd9b6c52a86b9511"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "6ea200d4e4fad3519335096d9b912e41c95e31a6", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2a1eb1cef1a36c6f0a9d2e347529561c1293044e/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a1eb1cef1a36c6f0a9d2e347529561c1293044e/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=2a1eb1cef1a36c6f0a9d2e347529561c1293044e", "patch": "@@ -791,6 +791,13 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n \n         let undef_mask = &self.get(src.alloc_id)?.undef_mask;\n \n+        // Since we are copying `size` bytes from `src` to `dest + i * size` (`for i in 0..repeat`),\n+        // a naive undef mask copying algorithm would repeatedly have to read the undef mask from\n+        // the source and write it to the destination. Even if we optimized the memory accesses,\n+        // we'd be doing all of this `repeat` times.\n+        // Therefor we precompute a compressed version of the undef mask of the source value and\n+        // then write it back `repeat` times without computing any more information from the source.\n+\n         // a precomputed cache for ranges of defined/undefined bits\n         // 0000010010001110 will become\n         // [5, 1, 2, 1, 3, 3, 1]"}]}