{"sha": "4e4e1ec93104f8c5816d8ad92fbb007911e87610", "node_id": "C_kwDOAAsO6NoAKDRlNGUxZWM5MzEwNGY4YzU4MTZkOGFkOTJmYmIwMDc5MTFlODc2MTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-04T15:34:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-04T15:34:16Z"}, "message": "Rollup merge of #92456 - danielhenrymantilla:patch-1, r=petrochenkov\n\nMake the documentation of builtin macro attributes accessible\n\n`use ::std::prelude::v1::derive;` compiles on stable, so, AFAIK, there is no reason to have it be `#[doc(hidden)]`.\n\n  - What it currently looks like for things such as `#[test]`, `#[derive]`, `#[global_allocator]`: https://doc.rust-lang.org/1.57.0/core/prelude/v1/index.html#:~:text=Experimental-,pub,-use%20crate%3A%3Amacros%3A%3Abuiltin%3A%3Aglobal_allocator\n\n    <img width=\"767\" alt=\"Screen Shot 2021-12-31 at 17 49 46\" src=\"https://user-images.githubusercontent.com/9920355/147832999-cbd747a6-4607-4df6-8e57-c1675dcbc1c3.png\">\n\n    and in `::std` they're just straight `hidden`.\n\n    <img width=\"452\" alt=\"Screen Shot 2021-12-31 at 17 53 18\" src=\"https://user-images.githubusercontent.com/9920355/147833105-c5ff8cd1-9e4d-4d2b-9621-b36aa3cfcb28.png\">\n\n  - Here is how it looks like with this PR (assuming the `Rustc{De,En}codable` ones are not reverted):\n\n    <img width=\"778\" alt=\"Screen Shot 2021-12-31 at 17 50 55\" src=\"https://user-images.githubusercontent.com/9920355/147833034-84286342-dbf7-4e6e-9062-f39cd6c286a4.png\">\n\n    <img width=\"291\" alt=\"Screen Shot 2021-12-31 at 17 52 54\" src=\"https://user-images.githubusercontent.com/9920355/147833109-c92ed55c-51c6-40a2-9205-f834d1e349c0.png\">\n\n Since this involves doc people to chime in, and since `jyn` is on vacation, I'll cc `@GuillaumeGomez` and tag the `rustdoc` team as well", "tree": {"sha": "a742eea696d24af9cc605bdc250a6107dfede5da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a742eea696d24af9cc605bdc250a6107dfede5da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e4e1ec93104f8c5816d8ad92fbb007911e87610", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh1Gj5CRBK7hj4Ov3rIwAAXLUIAGBapywa40XC7k1f/+uZLBF4\n9MOggsLBSwDOyP9Tgor4odIuPPfj3XesHVJ3D4XwBKqXyv3YveBbNuhUsTgbhsVu\nqxJwtYeVGoUBqvLfDo/CIF73e0bygt/Ga5EKbnVqfkXNe8FzjlUlq4QJnVuy7bVy\nxjQQFwRLZUux+CCjHlqc36KbgF/0M9cbJ8rMw0H5dVCHLG5DwXFe8Cw9WbQLdWnz\nn5XZKJ8C6Ln76x0mVmBag8rJKZnHnoupF4Qio1vz0Fm6hu5IXV6gOWXjJF5brHPh\ncAVhjMXQYYVx7QeV65seitiDgD01H13ainApHTeVziIkoabdwaw1pUV06ZUUllQ=\n=T18/\n-----END PGP SIGNATURE-----\n", "payload": "tree a742eea696d24af9cc605bdc250a6107dfede5da\nparent 855f6300fbf0801ca9e7c9411e52b6322d68a7c6\nparent f20ccc07489bff158b41a6bafd822366ac249cab\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641310456 +0100\ncommitter GitHub <noreply@github.com> 1641310456 +0100\n\nRollup merge of #92456 - danielhenrymantilla:patch-1, r=petrochenkov\n\nMake the documentation of builtin macro attributes accessible\n\n`use ::std::prelude::v1::derive;` compiles on stable, so, AFAIK, there is no reason to have it be `#[doc(hidden)]`.\n\n  - What it currently looks like for things such as `#[test]`, `#[derive]`, `#[global_allocator]`: https://doc.rust-lang.org/1.57.0/core/prelude/v1/index.html#:~:text=Experimental-,pub,-use%20crate%3A%3Amacros%3A%3Abuiltin%3A%3Aglobal_allocator\n\n    <img width=\"767\" alt=\"Screen Shot 2021-12-31 at 17 49 46\" src=\"https://user-images.githubusercontent.com/9920355/147832999-cbd747a6-4607-4df6-8e57-c1675dcbc1c3.png\">\n\n    and in `::std` they're just straight `hidden`.\n\n    <img width=\"452\" alt=\"Screen Shot 2021-12-31 at 17 53 18\" src=\"https://user-images.githubusercontent.com/9920355/147833105-c5ff8cd1-9e4d-4d2b-9621-b36aa3cfcb28.png\">\n\n  - Here is how it looks like with this PR (assuming the `Rustc{De,En}codable` ones are not reverted):\n\n    <img width=\"778\" alt=\"Screen Shot 2021-12-31 at 17 50 55\" src=\"https://user-images.githubusercontent.com/9920355/147833034-84286342-dbf7-4e6e-9062-f39cd6c286a4.png\">\n\n    <img width=\"291\" alt=\"Screen Shot 2021-12-31 at 17 52 54\" src=\"https://user-images.githubusercontent.com/9920355/147833109-c92ed55c-51c6-40a2-9205-f834d1e349c0.png\">\n\n Since this involves doc people to chime in, and since `jyn` is on vacation, I'll cc `@GuillaumeGomez` and tag the `rustdoc` team as well\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4e1ec93104f8c5816d8ad92fbb007911e87610", "html_url": "https://github.com/rust-lang/rust/commit/4e4e1ec93104f8c5816d8ad92fbb007911e87610", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e4e1ec93104f8c5816d8ad92fbb007911e87610/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "855f6300fbf0801ca9e7c9411e52b6322d68a7c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/855f6300fbf0801ca9e7c9411e52b6322d68a7c6", "html_url": "https://github.com/rust-lang/rust/commit/855f6300fbf0801ca9e7c9411e52b6322d68a7c6"}, {"sha": "f20ccc07489bff158b41a6bafd822366ac249cab", "url": "https://api.github.com/repos/rust-lang/rust/commits/f20ccc07489bff158b41a6bafd822366ac249cab", "html_url": "https://github.com/rust-lang/rust/commit/f20ccc07489bff158b41a6bafd822366ac249cab"}], "stats": {"total": 47, "additions": 25, "deletions": 22}, "files": [{"sha": "d8f6c85e428cdf054e78afcdfa0f6cd1c7d66630", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4e4e1ec93104f8c5816d8ad92fbb007911e87610/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4e1ec93104f8c5816d8ad92fbb007911e87610/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=4e4e1ec93104f8c5816d8ad92fbb007911e87610", "patch": "@@ -866,7 +866,6 @@ pub(crate) mod builtin {\n                   language use and is subject to change\"\n     )]\n     #[allow_internal_unstable(fmt_internals)]\n-    #[doc(hidden)]\n     #[rustc_builtin_macro]\n     #[macro_export]\n     macro_rules! format_args_nl {\n@@ -1428,13 +1427,21 @@ pub(crate) mod builtin {\n     }\n \n     /// Attribute macro used to apply derive macros.\n+    ///\n+    /// See [the reference] for more info.\n+    ///\n+    /// [the reference]: ../../../reference/attributes/derive.html\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_builtin_macro]\n     pub macro derive($item:item) {\n         /* compiler built-in */\n     }\n \n     /// Attribute macro applied to a function to turn it into a unit test.\n+    ///\n+    /// See [the reference] for more info.\n+    ///\n+    /// [the reference]: ../../../reference/attributes/testing.html#the-test-attribute\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[allow_internal_unstable(test, rustc_attrs)]\n     #[rustc_builtin_macro]\n@@ -1469,7 +1476,7 @@ pub(crate) mod builtin {\n \n     /// Attribute macro applied to a static to register it as a global allocator.\n     ///\n-    /// See also [`std::alloc::GlobalAlloc`](../std/alloc/trait.GlobalAlloc.html).\n+    /// See also [`std::alloc::GlobalAlloc`](../../../std/alloc/trait.GlobalAlloc.html).\n     #[stable(feature = \"global_allocator\", since = \"1.28.0\")]\n     #[allow_internal_unstable(rustc_attrs)]\n     #[rustc_builtin_macro]\n@@ -1507,6 +1514,7 @@ pub(crate) mod builtin {\n         since = \"1.52.0\",\n         reason = \"rustc-serialize is deprecated and no longer supported\"\n     )]\n+    #[doc(hidden)] // While technically stable, using it is unstable, and deprecated. Hide it.\n     pub macro RustcDecodable($item:item) {\n         /* compiler built-in */\n     }\n@@ -1519,6 +1527,7 @@ pub(crate) mod builtin {\n         since = \"1.52.0\",\n         reason = \"rustc-serialize is deprecated and no longer supported\"\n     )]\n+    #[doc(hidden)] // While technically stable, using it is unstable, and deprecated. Hide it.\n     pub macro RustcEncodable($item:item) {\n         /* compiler built-in */\n     }"}, {"sha": "0fb8846288bee7835f415a159ff0c369dbd017a8", "filename": "library/core/src/prelude/v1.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4e4e1ec93104f8c5816d8ad92fbb007911e87610/library%2Fcore%2Fsrc%2Fprelude%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4e1ec93104f8c5816d8ad92fbb007911e87610/library%2Fcore%2Fsrc%2Fprelude%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fprelude%2Fv1.rs?ref=4e4e1ec93104f8c5816d8ad92fbb007911e87610", "patch": "@@ -69,29 +69,26 @@ pub use crate::{\n #[doc(no_inline)]\n pub use crate::concat_bytes;\n \n+// Do not `doc(inline)` these `doc(hidden)` items.\n #[stable(feature = \"builtin_macro_prelude\", since = \"1.38.0\")]\n-#[allow(deprecated, deprecated_in_future)]\n-#[doc(no_inline)]\n-pub use crate::macros::builtin::{\n-    bench, global_allocator, test, test_case, RustcDecodable, RustcEncodable,\n-};\n+#[allow(deprecated)]\n+pub use crate::macros::builtin::{RustcDecodable, RustcEncodable};\n \n+// Do not `doc(no_inline)` so that they become doc items on their own\n+// (no public module for them to be re-exported from).\n #[stable(feature = \"builtin_macro_prelude\", since = \"1.38.0\")]\n-#[doc(no_inline)]\n-pub use crate::macros::builtin::derive;\n+pub use crate::macros::builtin::{bench, derive, global_allocator, test, test_case};\n \n #[unstable(\n     feature = \"cfg_accessible\",\n     issue = \"64797\",\n     reason = \"`cfg_accessible` is not fully implemented\"\n )]\n-#[doc(no_inline)]\n pub use crate::macros::builtin::cfg_accessible;\n \n #[unstable(\n     feature = \"cfg_eval\",\n     issue = \"82679\",\n     reason = \"`cfg_eval` is a recently implemented feature\"\n )]\n-#[doc(no_inline)]\n pub use crate::macros::builtin::cfg_eval;"}, {"sha": "b52bcdfca9e07152062fe44b3db98f7f6293c546", "filename": "library/std/src/prelude/v1.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4e4e1ec93104f8c5816d8ad92fbb007911e87610/library%2Fstd%2Fsrc%2Fprelude%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4e1ec93104f8c5816d8ad92fbb007911e87610/library%2Fstd%2Fsrc%2Fprelude%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprelude%2Fv1.rs?ref=4e4e1ec93104f8c5816d8ad92fbb007911e87610", "patch": "@@ -54,33 +54,30 @@ pub use core::prelude::v1::{\n #[doc(no_inline)]\n pub use core::prelude::v1::concat_bytes;\n \n-// FIXME: Attribute and internal derive macros are not documented because for them rustdoc generates\n-// dead links which fail link checker testing.\n+// Do not `doc(inline)` these `doc(hidden)` items.\n #[stable(feature = \"builtin_macro_prelude\", since = \"1.38.0\")]\n-#[allow(deprecated, deprecated_in_future)]\n-#[doc(hidden)]\n-pub use core::prelude::v1::{\n-    bench, global_allocator, test, test_case, RustcDecodable, RustcEncodable,\n-};\n+#[allow(deprecated)]\n+pub use core::prelude::v1::{RustcDecodable, RustcEncodable};\n \n+// Do not `doc(no_inline)` so that they become doc items on their own\n+// (no public module for them to be re-exported from).\n #[stable(feature = \"builtin_macro_prelude\", since = \"1.38.0\")]\n-#[doc(hidden)]\n-pub use core::prelude::v1::derive;\n+pub use core::prelude::v1::{bench, derive, global_allocator, test, test_case};\n \n+// Do not `doc(no_inline)` either.\n #[unstable(\n     feature = \"cfg_accessible\",\n     issue = \"64797\",\n     reason = \"`cfg_accessible` is not fully implemented\"\n )]\n-#[doc(hidden)]\n pub use core::prelude::v1::cfg_accessible;\n \n+// Do not `doc(no_inline)` either.\n #[unstable(\n     feature = \"cfg_eval\",\n     issue = \"82679\",\n     reason = \"`cfg_eval` is a recently implemented feature\"\n )]\n-#[doc(hidden)]\n pub use core::prelude::v1::cfg_eval;\n \n // The file so far is equivalent to src/libcore/prelude/v1.rs,"}]}