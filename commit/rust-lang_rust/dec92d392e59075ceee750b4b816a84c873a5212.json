{"sha": "dec92d392e59075ceee750b4b816a84c873a5212", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYzkyZDM5MmU1OTA3NWNlZWU3NTBiNGI4MTZhODRjODczYTUyMTI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-31T18:54:52Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-31T18:54:52Z"}, "message": "stdlib: Add a write_be_uint() function to writers", "tree": {"sha": "61bc06e910d5d0c85d3a0c74e6fa720618349666", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61bc06e910d5d0c85d3a0c74e6fa720618349666"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dec92d392e59075ceee750b4b816a84c873a5212", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dec92d392e59075ceee750b4b816a84c873a5212", "html_url": "https://github.com/rust-lang/rust/commit/dec92d392e59075ceee750b4b816a84c873a5212", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dec92d392e59075ceee750b4b816a84c873a5212/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f3f66df7b791ea16a64f5939a5607e8f50f23dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f3f66df7b791ea16a64f5939a5607e8f50f23dc", "html_url": "https://github.com/rust-lang/rust/commit/7f3f66df7b791ea16a64f5939a5607e8f50f23dc"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "11e6408c62665394de72a870530be778a4a61294", "filename": "src/lib/io.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dec92d392e59075ceee750b4b816a84c873a5212/src%2Flib%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dec92d392e59075ceee750b4b816a84c873a5212/src%2Flib%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fio.rs?ref=dec92d392e59075ceee750b4b816a84c873a5212", "patch": "@@ -345,6 +345,7 @@ type writer =\n           impure fn write_bytes(vec[u8] bytes);\n           impure fn write_le_uint(uint n, uint size);\n           impure fn write_le_int(int n, uint size);\n+          impure fn write_be_uint(uint n, uint size);\n     };\n \n fn uint_to_le_bytes(uint n, uint size) -> vec[u8] {\n@@ -357,6 +358,16 @@ fn uint_to_le_bytes(uint n, uint size) -> vec[u8] {\n     ret bytes;\n }\n \n+fn uint_to_be_bytes(uint n, uint size) -> vec[u8] {\n+    let vec[u8] bytes = vec();\n+    auto i = (size - 1u) as int;\n+    while (i >= 0) {\n+        bytes += vec(((n >> ((i * 8) as uint)) & 255u) as u8);\n+        i -= 1;\n+    }\n+    ret bytes;\n+}\n+\n state obj new_writer(buf_writer out) {\n     fn get_buf_writer() -> buf_writer {\n         ret out;\n@@ -383,6 +394,9 @@ state obj new_writer(buf_writer out) {\n     impure fn write_le_int(int n, uint size) {\n         out.write(uint_to_le_bytes(n as uint, size));\n     }\n+    impure fn write_be_uint(uint n, uint size) {\n+        out.write(uint_to_be_bytes(n, size));\n+    }\n }\n \n // FIXME: Remove me once objects are exported."}]}