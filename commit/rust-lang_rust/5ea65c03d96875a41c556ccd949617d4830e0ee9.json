{"sha": "5ea65c03d96875a41c556ccd949617d4830e0ee9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYTY1YzAzZDk2ODc1YTQxYzU1NmNjZDk0OTYxN2Q0ODMwZTBlZTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-28T16:22:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-28T16:22:27Z"}, "message": "Auto merge of #30074 - jonas-schievink:macro-doc, r=sanxiyn\n\nFixes #17616\n\nNew docs for `panic!`:\n```rust\nmacro_rules! panic {\n    () => { ... };\n    ($msg:expr) => { ... };\n    ($fmt:expr, $($arg:tt)+) => { ... };\n}\n```\n\nNew docs for `assert!`:\n```rust\nmacro_rules! assert {\n    ( $ cond : expr ) => { ... };\n    (\n$ cond : expr , $ ( $ arg : tt ) + ) => { ... };\n}\n```\n<sup>not pretty, but at least it's not worse :joy:", "tree": {"sha": "4dd1789bb93905906f41445599b20f620a57dd7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dd1789bb93905906f41445599b20f620a57dd7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ea65c03d96875a41c556ccd949617d4830e0ee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ea65c03d96875a41c556ccd949617d4830e0ee9", "html_url": "https://github.com/rust-lang/rust/commit/5ea65c03d96875a41c556ccd949617d4830e0ee9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ea65c03d96875a41c556ccd949617d4830e0ee9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e05951f1f9493a3a397ae93cd5be51ec4659cde", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e05951f1f9493a3a397ae93cd5be51ec4659cde", "html_url": "https://github.com/rust-lang/rust/commit/9e05951f1f9493a3a397ae93cd5be51ec4659cde"}, {"sha": "ff339bd6f906754bbb6e2e249322a5bc79433329", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff339bd6f906754bbb6e2e249322a5bc79433329", "html_url": "https://github.com/rust-lang/rust/commit/ff339bd6f906754bbb6e2e249322a5bc79433329"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "f151e66340721c73a046e4d058d8a16f00e88084", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5ea65c03d96875a41c556ccd949617d4830e0ee9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea65c03d96875a41c556ccd949617d4830e0ee9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=5ea65c03d96875a41c556ccd949617d4830e0ee9", "patch": "@@ -2663,15 +2663,18 @@ pub struct Macro {\n \n impl Clean<Item> for doctree::Macro {\n     fn clean(&self, cx: &DocContext) -> Item {\n+        let name = format!(\"{}!\", self.name.clean(cx));\n         Item {\n-            name: Some(format!(\"{}!\", self.name.clean(cx))),\n+            name: Some(name.clone()),\n             attrs: self.attrs.clean(cx),\n             source: self.whence.clean(cx),\n             visibility: hir::Public.clean(cx),\n             stability: self.stab.clean(cx),\n             def_id: cx.map.local_def_id(self.id),\n             inner: MacroItem(Macro {\n-                source: self.whence.to_src(cx),\n+                source: format!(\"macro_rules! {} {{\\n{}}}\",\n+                    name.trim_right_matches('!'), self.matchers.iter().map(|span|\n+                        format!(\"    {} => {{ ... }};\\n\", span.to_src(cx))).collect::<String>()),\n                 imported_from: self.imported_from.clean(cx),\n             }),\n         }"}, {"sha": "91da906f56df92519ca6ad35a4123b89e396ed11", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ea65c03d96875a41c556ccd949617d4830e0ee9/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea65c03d96875a41c556ccd949617d4830e0ee9/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=5ea65c03d96875a41c556ccd949617d4830e0ee9", "patch": "@@ -213,6 +213,7 @@ pub struct Macro {\n     pub id: ast::NodeId,\n     pub attrs: Vec<ast::Attribute>,\n     pub whence: Span,\n+    pub matchers: Vec<Span>,\n     pub stab: Option<attr::Stability>,\n     pub imported_from: Option<Name>,\n }"}, {"sha": "17291233e114aa3ceedb60551fdc80b5cc27e3af", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ea65c03d96875a41c556ccd949617d4830e0ee9/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea65c03d96875a41c556ccd949617d4830e0ee9/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=5ea65c03d96875a41c556ccd949617d4830e0ee9", "patch": "@@ -400,11 +400,15 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n \n     // convert each exported_macro into a doc item\n     fn visit_macro(&self, def: &hir::MacroDef) -> Macro {\n+        // Extract the spans of all matchers. They represent the \"interface\" of the macro.\n+        let matchers = def.body.chunks(4).map(|arm| arm[0].get_span()).collect();\n+\n         Macro {\n             id: def.id,\n             attrs: def.attrs.clone(),\n             name: def.name,\n             whence: def.span,\n+            matchers: matchers,\n             stab: self.stability(def.id),\n             imported_from: def.imported_from,\n         }"}, {"sha": "b052ad2da2fa9b496dbdc2f8f2dc25771728462f", "filename": "src/test/rustdoc/macros.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5ea65c03d96875a41c556ccd949617d4830e0ee9/src%2Ftest%2Frustdoc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea65c03d96875a41c556ccd949617d4830e0ee9/src%2Ftest%2Frustdoc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmacros.rs?ref=5ea65c03d96875a41c556ccd949617d4830e0ee9", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// @has macros/macro.my_macro!.html //pre 'macro_rules! my_macro {'\n+// @has - //pre '() => { ... };'\n+// @has - //pre '($a:tt) => { ... };'\n+// @has - //pre '($e:expr) => { ... };'\n+#[macro_export]\n+macro_rules! my_macro {\n+    () => [];\n+    ($a:tt) => ();\n+    ($e:expr) => {};\n+}"}]}