{"sha": "5e91ac10b65a4c20915868d3af3c06f1d3d3cada", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlOTFhYzEwYjY1YTRjMjA5MTU4NjhkM2FmM2MwNmYxZDNkM2NhZGE=", "commit": {"author": {"name": "Jason Toffaletti", "email": "jason@topsy.com", "date": "2013-10-08T15:09:13Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-10-26T01:27:46Z"}, "message": "minor", "tree": {"sha": "2e0dde81c2dd3f81307e4f501dfcdc1ee8fdb27b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e0dde81c2dd3f81307e4f501dfcdc1ee8fdb27b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e91ac10b65a4c20915868d3af3c06f1d3d3cada", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e91ac10b65a4c20915868d3af3c06f1d3d3cada", "html_url": "https://github.com/rust-lang/rust/commit/5e91ac10b65a4c20915868d3af3c06f1d3d3cada", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e91ac10b65a4c20915868d3af3c06f1d3d3cada/comments", "author": {"login": "toffaletti", "id": 145012, "node_id": "MDQ6VXNlcjE0NTAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/145012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toffaletti", "html_url": "https://github.com/toffaletti", "followers_url": "https://api.github.com/users/toffaletti/followers", "following_url": "https://api.github.com/users/toffaletti/following{/other_user}", "gists_url": "https://api.github.com/users/toffaletti/gists{/gist_id}", "starred_url": "https://api.github.com/users/toffaletti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toffaletti/subscriptions", "organizations_url": "https://api.github.com/users/toffaletti/orgs", "repos_url": "https://api.github.com/users/toffaletti/repos", "events_url": "https://api.github.com/users/toffaletti/events{/privacy}", "received_events_url": "https://api.github.com/users/toffaletti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c95f558d0f3acb5ea301acb631d0d616d61c7b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c95f558d0f3acb5ea301acb631d0d616d61c7b6", "html_url": "https://github.com/rust-lang/rust/commit/8c95f558d0f3acb5ea301acb631d0d616d61c7b6"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "ea5d1050c18809a3abea8167a2b03698e0f68f1f", "filename": "src/libstd/rt/mpmc_bounded_queue.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5e91ac10b65a4c20915868d3af3c06f1d3d3cada/src%2Flibstd%2Frt%2Fmpmc_bounded_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e91ac10b65a4c20915868d3af3c06f1d3d3cada/src%2Flibstd%2Frt%2Fmpmc_bounded_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmpmc_bounded_queue.rs?ref=5e91ac10b65a4c20915868d3af3c06f1d3d3cada", "patch": "@@ -57,8 +57,12 @@ struct Queue<T> {\n impl<T: Send> State<T> {\n     fn with_capacity(capacity: uint) -> State<T> {\n         let capacity = if capacity < 2 || (capacity & (capacity - 1)) != 0 {\n-            // use next power of 2 as capacity\n-            2f64.pow(&((capacity as f64).log2().floor()+1f64)) as uint\n+            if capacity < 2 {\n+                2u\n+            } else {\n+                // use next power of 2 as capacity\n+                2f64.pow(&((capacity as f64).log2().ceil())) as uint\n+            }\n         } else {\n             capacity\n         };"}]}