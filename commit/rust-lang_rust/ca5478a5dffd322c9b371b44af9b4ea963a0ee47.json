{"sha": "ca5478a5dffd322c9b371b44af9b4ea963a0ee47", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNTQ3OGE1ZGZmZDMyMmM5YjM3MWI0NGFmOWI0ZWE5NjNhMGVlNDc=", "commit": {"author": {"name": "George Burgess IV", "email": "gbiv@google.com", "date": "2020-10-11T19:05:31Z"}, "committer": {"name": "George Burgess IV", "email": "gbiv@google.com", "date": "2020-10-11T19:36:13Z"}, "message": "bootstrap: only use compiler-builtins-c if they exist\n\nThe assignment of `features` above was added in rust-lang#60981, but\nnever used. Presumably the intent was to replace the string literal here\nwith it.\n\nWhile I'm in the area, `compiler_builtins_c_feature` doesn't need to be\na `String`.", "tree": {"sha": "099425044cc1348f8f911e464f0bd35b3e08f9b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/099425044cc1348f8f911e464f0bd35b3e08f9b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca5478a5dffd322c9b371b44af9b4ea963a0ee47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca5478a5dffd322c9b371b44af9b4ea963a0ee47", "html_url": "https://github.com/rust-lang/rust/commit/ca5478a5dffd322c9b371b44af9b4ea963a0ee47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca5478a5dffd322c9b371b44af9b4ea963a0ee47/comments", "author": {"login": "gburgessiv", "id": 2282330, "node_id": "MDQ6VXNlcjIyODIzMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2282330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gburgessiv", "html_url": "https://github.com/gburgessiv", "followers_url": "https://api.github.com/users/gburgessiv/followers", "following_url": "https://api.github.com/users/gburgessiv/following{/other_user}", "gists_url": "https://api.github.com/users/gburgessiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/gburgessiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gburgessiv/subscriptions", "organizations_url": "https://api.github.com/users/gburgessiv/orgs", "repos_url": "https://api.github.com/users/gburgessiv/repos", "events_url": "https://api.github.com/users/gburgessiv/events{/privacy}", "received_events_url": "https://api.github.com/users/gburgessiv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gburgessiv", "id": 2282330, "node_id": "MDQ6VXNlcjIyODIzMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2282330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gburgessiv", "html_url": "https://github.com/gburgessiv", "followers_url": "https://api.github.com/users/gburgessiv/followers", "following_url": "https://api.github.com/users/gburgessiv/following{/other_user}", "gists_url": "https://api.github.com/users/gburgessiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/gburgessiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gburgessiv/subscriptions", "organizations_url": "https://api.github.com/users/gburgessiv/orgs", "repos_url": "https://api.github.com/users/gburgessiv/repos", "events_url": "https://api.github.com/users/gburgessiv/events{/privacy}", "received_events_url": "https://api.github.com/users/gburgessiv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cc82ee340ed96099680ec1165cf5e192d658d0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cc82ee340ed96099680ec1165cf5e192d658d0f", "html_url": "https://github.com/rust-lang/rust/commit/8cc82ee340ed96099680ec1165cf5e192d658d0f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "5215ab3dd4f9bbe077f9013ddb8e7967aa31a25e", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ca5478a5dffd322c9b371b44af9b4ea963a0ee47/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca5478a5dffd322c9b371b44af9b4ea963a0ee47/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=ca5478a5dffd322c9b371b44af9b4ea963a0ee47", "patch": "@@ -234,25 +234,25 @@ pub fn std_cargo(builder: &Builder<'_>, target: TargetSelection, stage: u32, car\n         // Note that `libprofiler_builtins/build.rs` also computes this so if\n         // you're changing something here please also change that.\n         cargo.env(\"RUST_COMPILER_RT_ROOT\", &compiler_builtins_root);\n-        \" compiler-builtins-c\".to_string()\n+        \" compiler-builtins-c\"\n     } else {\n-        String::new()\n+        \"\"\n     };\n \n     if builder.no_std(target) == Some(true) {\n         let mut features = \"compiler-builtins-mem\".to_string();\n-        features.push_str(&compiler_builtins_c_feature);\n+        features.push_str(compiler_builtins_c_feature);\n \n         // for no-std targets we only compile a few no_std crates\n         cargo\n             .args(&[\"-p\", \"alloc\"])\n             .arg(\"--manifest-path\")\n             .arg(builder.src.join(\"library/alloc/Cargo.toml\"))\n             .arg(\"--features\")\n-            .arg(\"compiler-builtins-mem compiler-builtins-c\");\n+            .arg(features);\n     } else {\n         let mut features = builder.std_features();\n-        features.push_str(&compiler_builtins_c_feature);\n+        features.push_str(compiler_builtins_c_feature);\n \n         cargo\n             .arg(\"--features\")"}]}