{"sha": "8ed935e92dfb09ae388344b12284bf5110cf9265", "node_id": "C_kwDOAAsO6NoAKDhlZDkzNWU5MmRmYjA5YWUzODgzNDRiMTIyODRiZjUxMTBjZjkyNjU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-31T12:46:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-31T12:46:38Z"}, "message": "Auto merge of #92252 - GuillaumeGomez:update-pulldown, r=camelid,xFrednet\n\nUpdate pulldown-cmark version to 0.9\n\nFixes https://github.com/rust-lang/rust/issues/92206.\n\nr? `@camelid`", "tree": {"sha": "24ffc188a8eea5e6cbf63e5fae480d82631d5dd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24ffc188a8eea5e6cbf63e5fae480d82631d5dd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ed935e92dfb09ae388344b12284bf5110cf9265", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed935e92dfb09ae388344b12284bf5110cf9265", "html_url": "https://github.com/rust-lang/rust/commit/8ed935e92dfb09ae388344b12284bf5110cf9265", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ed935e92dfb09ae388344b12284bf5110cf9265/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e670844012c2e26442d7a70f2f4236e390d91647", "url": "https://api.github.com/repos/rust-lang/rust/commits/e670844012c2e26442d7a70f2f4236e390d91647", "html_url": "https://github.com/rust-lang/rust/commit/e670844012c2e26442d7a70f2f4236e390d91647"}, {"sha": "4e2024c55d059453d42fa20fec99db0ef85ad9c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e2024c55d059453d42fa20fec99db0ef85ad9c7", "html_url": "https://github.com/rust-lang/rust/commit/4e2024c55d059453d42fa20fec99db0ef85ad9c7"}], "stats": {"total": 46, "additions": 29, "deletions": 17}, "files": [{"sha": "7bf9527f47d1225a0b68948a4d4337697123849f", "filename": "Cargo.lock", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8ed935e92dfb09ae388344b12284bf5110cf9265/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8ed935e92dfb09ae388344b12284bf5110cf9265/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8ed935e92dfb09ae388344b12284bf5110cf9265", "patch": "@@ -619,7 +619,7 @@ dependencies = [\n  \"clippy_utils\",\n  \"if_chain\",\n  \"itertools 0.10.1\",\n- \"pulldown-cmark\",\n+ \"pulldown-cmark 0.9.0\",\n  \"quine-mc_cluskey\",\n  \"regex-syntax\",\n  \"rustc-semver\",\n@@ -2154,7 +2154,7 @@ dependencies = [\n  \"log\",\n  \"memchr\",\n  \"opener\",\n- \"pulldown-cmark\",\n+ \"pulldown-cmark 0.8.0\",\n  \"regex\",\n  \"serde\",\n  \"serde_derive\",\n@@ -2813,6 +2813,17 @@ dependencies = [\n  \"unicase\",\n ]\n \n+[[package]]\n+name = \"pulldown-cmark\"\n+version = \"0.9.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"acd16514d1af5f7a71f909a44ef253cdb712a376d7ebc8ae4a471a9be9743548\"\n+dependencies = [\n+ \"bitflags\",\n+ \"memchr\",\n+ \"unicase\",\n+]\n+\n [[package]]\n name = \"punycode\"\n version = \"0.4.1\"\n@@ -4615,7 +4626,7 @@ dependencies = [\n  \"expect-test\",\n  \"itertools 0.9.0\",\n  \"minifier\",\n- \"pulldown-cmark\",\n+ \"pulldown-cmark 0.9.0\",\n  \"rayon\",\n  \"regex\",\n  \"rustdoc-json-types\","}, {"sha": "a3cb982f277a08860d4d4c8dc08dcd5b117510b7", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ed935e92dfb09ae388344b12284bf5110cf9265/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8ed935e92dfb09ae388344b12284bf5110cf9265/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=8ed935e92dfb09ae388344b12284bf5110cf9265", "patch": "@@ -8,7 +8,7 @@ path = \"lib.rs\"\n \n [dependencies]\n arrayvec = { version = \"0.7\", default-features = false }\n-pulldown-cmark = { version = \"0.8\", default-features = false }\n+pulldown-cmark = { version = \"0.9\", default-features = false }\n minifier = \"0.0.41\"\n rayon = \"1.3.1\"\n serde = { version = \"1.0\", features = [\"derive\"] }"}, {"sha": "3fd9c0a1944859b56528f9dad0bf35f2e0c43787", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8ed935e92dfb09ae388344b12284bf5110cf9265/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ed935e92dfb09ae388344b12284bf5110cf9265/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=8ed935e92dfb09ae388344b12284bf5110cf9265", "patch": "@@ -538,7 +538,7 @@ impl<'a, 'b, 'ids, I: Iterator<Item = SpannedEvent<'a>>> Iterator\n         }\n \n         let event = self.inner.next();\n-        if let Some((Event::Start(Tag::Heading(level)), _)) = event {\n+        if let Some((Event::Start(Tag::Heading(level, _, _)), _)) = event {\n             let mut id = String::new();\n             for event in &mut self.inner {\n                 match &event.0 {\n@@ -560,7 +560,8 @@ impl<'a, 'b, 'ids, I: Iterator<Item = SpannedEvent<'a>>> Iterator\n                 self.buf.push_front((Event::Html(format!(\"{} \", sec).into()), 0..0));\n             }\n \n-            let level = std::cmp::min(level + (self.heading_offset as u32), MAX_HEADER_LEVEL);\n+            let level =\n+                std::cmp::min(level as u32 + (self.heading_offset as u32), MAX_HEADER_LEVEL);\n             self.buf.push_back((Event::Html(format!(\"</a></h{}>\", level).into()), 0..0));\n \n             let start_tags = format!(\n@@ -773,7 +774,7 @@ crate fn find_testable_code<T: doctest::Tester>(\n                 tests.add_test(text, block_info, line);\n                 prev_offset = offset.start;\n             }\n-            Event::Start(Tag::Heading(level)) => {\n+            Event::Start(Tag::Heading(level, _, _)) => {\n                 register_header = Some(level as u32);\n             }\n             Event::Text(ref s) if register_header.is_some() => {\n@@ -1053,7 +1054,7 @@ impl Markdown<'_> {\n         let mut replacer = |broken_link: BrokenLink<'_>| {\n             links\n                 .iter()\n-                .find(|link| &*link.original_text == broken_link.reference)\n+                .find(|link| link.original_text.as_str() == &*broken_link.reference)\n                 .map(|link| (link.href.as_str().into(), link.new_text.as_str().into()))\n         };\n \n@@ -1134,7 +1135,7 @@ impl MarkdownSummaryLine<'_> {\n         let mut replacer = |broken_link: BrokenLink<'_>| {\n             links\n                 .iter()\n-                .find(|link| &*link.original_text == broken_link.reference)\n+                .find(|link| link.original_text.as_str() == &*broken_link.reference)\n                 .map(|link| (link.href.as_str().into(), link.new_text.as_str().into()))\n         };\n \n@@ -1168,7 +1169,7 @@ fn markdown_summary_with_limit(\n     let mut replacer = |broken_link: BrokenLink<'_>| {\n         link_names\n             .iter()\n-            .find(|link| &*link.original_text == broken_link.reference)\n+            .find(|link| link.original_text.as_str() == &*broken_link.reference)\n             .map(|link| (link.href.as_str().into(), link.new_text.as_str().into()))\n     };\n \n@@ -1311,10 +1312,10 @@ crate fn markdown_links(md: &str) -> Vec<MarkdownLink> {\n     };\n \n     let mut push = |link: BrokenLink<'_>| {\n-        let span = span_for_link(&CowStr::Borrowed(link.reference), link.span);\n+        let span = span_for_link(&link.reference, link.span);\n         links.borrow_mut().push(MarkdownLink {\n             kind: LinkType::ShortcutUnknown,\n-            link: link.reference.to_owned(),\n+            link: link.reference.to_string(),\n             range: span,\n         });\n         None"}, {"sha": "7d2a3e4f639c3a2182c338de4301c9a62775693a", "filename": "src/tools/clippy/clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ed935e92dfb09ae388344b12284bf5110cf9265/src%2Ftools%2Fclippy%2Fclippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8ed935e92dfb09ae388344b12284bf5110cf9265/src%2Ftools%2Fclippy%2Fclippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2FCargo.toml?ref=8ed935e92dfb09ae388344b12284bf5110cf9265", "patch": "@@ -13,7 +13,7 @@ cargo_metadata = \"0.14\"\n clippy_utils = { path = \"../clippy_utils\" }\n if_chain = \"1.0\"\n itertools = \"0.10\"\n-pulldown-cmark = { version = \"0.8\", default-features = false }\n+pulldown-cmark = { version = \"0.9\", default-features = false }\n quine-mc_cluskey = \"0.2\"\n regex-syntax = \"0.6\"\n serde = { version = \"1.0\", features = [\"derive\"] }"}, {"sha": "7c2717733578b65de8045664eef9ba6482b93a75", "filename": "src/tools/clippy/clippy_lints/src/doc.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8ed935e92dfb09ae388344b12284bf5110cf9265/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ed935e92dfb09ae388344b12284bf5110cf9265/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdoc.rs?ref=8ed935e92dfb09ae388344b12284bf5110cf9265", "patch": "@@ -542,16 +542,16 @@ fn check_doc<'a, Events: Iterator<Item = (pulldown_cmark::Event<'a>, Range<usize\n             },\n             Start(Link(_, url, _)) => in_link = Some(url),\n             End(Link(..)) => in_link = None,\n-            Start(Heading(_) | Paragraph | Item) => {\n-                if let Start(Heading(_)) = event {\n+            Start(Heading(_, _, _) | Paragraph | Item) => {\n+                if let Start(Heading(_, _, _)) = event {\n                     in_heading = true;\n                 }\n                 ticks_unbalanced = false;\n                 let (_, span) = get_current_span(spans, range.start);\n                 paragraph_span = first_line_of_span(cx, span);\n             },\n-            End(Heading(_) | Paragraph | Item) => {\n-                if let End(Heading(_)) = event {\n+            End(Heading(_, _, _) | Paragraph | Item) => {\n+                if let End(Heading(_, _, _)) = event {\n                     in_heading = false;\n                 }\n                 if ticks_unbalanced {"}]}