{"sha": "7c61be615a10cc4dd3ed1b9b1692511a9221c8f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNjFiZTYxNWExMGNjNGRkM2VkMWI5YjE2OTI1MTFhOTIyMWM4Zjg=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2020-06-23T12:39:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-23T12:39:40Z"}, "message": "Rollup merge of #5178 - matthiaskrgr:rustc_arg_pass, r=flip1995\n\nclippy-driver: pass all args to rustc if --rustc is present\n\nchangelog: clippy-driver: pass all args to rustc if --rustc is present", "tree": {"sha": "fa66eb072d90bec01a89b5cdb4a40e8ee51448c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa66eb072d90bec01a89b5cdb4a40e8ee51448c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c61be615a10cc4dd3ed1b9b1692511a9221c8f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe8fgMCRBK7hj4Ov3rIwAAdHIIAF3lWY1hvIq/PNO6nN4Lxq1c\nWYwZKI791FNxHPq48/p+IowfkwjvImiM5D/lmSrceWakOFQyzA1yEl9ZBzNR+0Fe\ncSSlf/LQ06acMf34/5kDVCSJyeA35+UPjEjZKkhpQiKrVz6xyZnQsmMPsbbMuLB+\ntvVT/ccf7RLwRGlt5kku0O6D/Kuzhsiglsg9J0ERBoBo0HtZNbzn6mEFodm0ArLO\nVQjQ9IX/K95yLOxKtvP3LuzoQOUJkhOlO4fEOnNGZ5Kd/rfz4a/l6j7PYde/xpvk\nySK8HqAU08obPriUXGu59+EwiqyALwlyf7XkgcXv9+vqTtUW+KSyFngoPEuzJTg=\n=pclY\n-----END PGP SIGNATURE-----\n", "payload": "tree fa66eb072d90bec01a89b5cdb4a40e8ee51448c1\nparent 4cc2fa933b9c57793523879ff7eac634ea55c64f\nparent 7a62380fc8f8ca39bc49b8f67a4d4929911cb036\nauthor Philipp Krones <hello@philkrones.com> 1592915980 +0200\ncommitter GitHub <noreply@github.com> 1592915980 +0200\n\nRollup merge of #5178 - matthiaskrgr:rustc_arg_pass, r=flip1995\n\nclippy-driver: pass all args to rustc if --rustc is present\n\nchangelog: clippy-driver: pass all args to rustc if --rustc is present\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c61be615a10cc4dd3ed1b9b1692511a9221c8f8", "html_url": "https://github.com/rust-lang/rust/commit/7c61be615a10cc4dd3ed1b9b1692511a9221c8f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c61be615a10cc4dd3ed1b9b1692511a9221c8f8/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cc2fa933b9c57793523879ff7eac634ea55c64f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cc2fa933b9c57793523879ff7eac634ea55c64f", "html_url": "https://github.com/rust-lang/rust/commit/4cc2fa933b9c57793523879ff7eac634ea55c64f"}, {"sha": "7a62380fc8f8ca39bc49b8f67a4d4929911cb036", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a62380fc8f8ca39bc49b8f67a4d4929911cb036", "html_url": "https://github.com/rust-lang/rust/commit/7a62380fc8f8ca39bc49b8f67a4d4929911cb036"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "2c17c4203ae5c737e8005ae3454656e99619bd99", "filename": ".github/driver.sh", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7c61be615a10cc4dd3ed1b9b1692511a9221c8f8/.github%2Fdriver.sh", "raw_url": "https://github.com/rust-lang/rust/raw/7c61be615a10cc4dd3ed1b9b1692511a9221c8f8/.github%2Fdriver.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fdriver.sh?ref=7c61be615a10cc4dd3ed1b9b1692511a9221c8f8", "patch": "@@ -26,4 +26,16 @@ unset CARGO_MANIFEST_DIR\n sed -e \"s,tests/ui,\\$DIR,\" -e \"/= help/d\" cstring.stderr > normalized.stderr\n diff normalized.stderr tests/ui/cstring.stderr\n \n+\n+# make sure \"clippy-driver --rustc --arg\" and \"rustc --arg\" behave the same\n+SYSROOT=`rustc --print sysroot`\n+diff <(LD_LIBRARY_PATH=${SYSROOT}/lib ./target/debug/clippy-driver --rustc --version --verbose) <(rustc --version --verbose)\n+\n+\n+echo \"fn main() {}\" > target/driver_test.rs\n+# we can't run 2 rustcs on the same file at the same time\n+CLIPPY=`LD_LIBRARY_PATH=${SYSROOT}/lib ./target/debug/clippy-driver ./target/driver_test.rs --rustc`\n+RUSTC=`rustc ./target/driver_test.rs`\n+diff <($CLIPPY) <($RUSTC)\n+\n # TODO: CLIPPY_CONF_DIR / CARGO_MANIFEST_DIR"}, {"sha": "6faa5e9fe661fc16cb913feaf968833faf05a186", "filename": "src/driver.rs", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7c61be615a10cc4dd3ed1b9b1692511a9221c8f8/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c61be615a10cc4dd3ed1b9b1692511a9221c8f8/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=7c61be615a10cc4dd3ed1b9b1692511a9221c8f8", "patch": "@@ -207,6 +207,7 @@ Usage:\n \n Common options:\n     -h, --help               Print this message\n+        --rustc              Pass all args to rustc\n     -V, --version            Print version info and exit\n \n Other options are the same as `cargo check`.\n@@ -297,12 +298,6 @@ pub fn main() {\n     exit(rustc_driver::catch_with_exit_code(move || {\n         let mut orig_args: Vec<String> = env::args().collect();\n \n-        if orig_args.iter().any(|a| a == \"--version\" || a == \"-V\") {\n-            let version_info = rustc_tools_util::get_version_info!();\n-            println!(\"{}\", version_info);\n-            exit(0);\n-        }\n-\n         // Get the sysroot, looking from most specific to this invocation to the least:\n         // - command line\n         // - runtime environment\n@@ -348,6 +343,28 @@ pub fn main() {\n             .map(|pb| pb.to_string_lossy().to_string())\n             .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\");\n \n+        // make \"clippy-driver --rustc\" work like a subcommand that passes further args to \"rustc\"\n+        // for example `clippy-driver --rustc --version` will print the rustc version that clippy-driver\n+        // uses\n+        if let Some(pos) = orig_args.iter().position(|arg| arg == \"--rustc\") {\n+            orig_args.remove(pos);\n+            orig_args[0] = \"rustc\".to_string();\n+\n+            // if we call \"rustc\", we need to pass --sysroot here as well\n+            let mut args: Vec<String> = orig_args.clone();\n+            if !have_sys_root_arg {\n+                args.extend(vec![\"--sysroot\".into(), sys_root]);\n+            };\n+\n+            return rustc_driver::run_compiler(&args, &mut DefaultCallbacks, None, None);\n+        }\n+\n+        if orig_args.iter().any(|a| a == \"--version\" || a == \"-V\") {\n+            let version_info = rustc_tools_util::get_version_info!();\n+            println!(\"{}\", version_info);\n+            exit(0);\n+        }\n+\n         // Setting RUSTC_WRAPPER causes Cargo to pass 'rustc' as the first argument.\n         // We're invoking the compiler programmatically, so we ignore this/\n         let wrapper_mode = orig_args.get(1).map(Path::new).and_then(Path::file_stem) == Some(\"rustc\".as_ref());"}]}