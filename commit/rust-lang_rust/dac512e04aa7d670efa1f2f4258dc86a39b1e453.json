{"sha": "dac512e04aa7d670efa1f2f4258dc86a39b1e453", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYzUxMmUwNGFhN2Q2NzBlZmExZjJmNDI1OGRjODZhMzliMWU0NTM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-20T02:42:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-20T02:42:51Z"}, "message": "Rollup merge of #72934 - christianpoveda:mut-borrows-in-consts, r=oli-obk\n\nforbid mutable references in all constant contexts except for const-fns\n\nPR to address #71212\n\ncc: @ecstatic-morse", "tree": {"sha": "33bdc3cc4dbe7f6e6796706ccb5178497de67d5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33bdc3cc4dbe7f6e6796706ccb5178497de67d5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dac512e04aa7d670efa1f2f4258dc86a39b1e453", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe7XerCRBK7hj4Ov3rIwAAdHIIAGn9EVEdWbdJFLkCRJz25xh8\ngItMCjAQx4I+9GD1HW+BqL7qmVyi0xDxUotXa7xLzWD5d4MG+p6vbcZAe1nKsNug\n71AkFhG0zbHeG/5Btgzc0aqc/P4eW3eeMNaKr5yeIoOVz9Gy9fLO7rL35IHfdLFn\nq/BxvE7rISRpgxrFAcr/NlL+m98veNEi+fBtiAv1Umb7//HGRYBD6LFdD+SP7dtT\nEJVgMYqGhahIxm7rtgmWpPkQKiBge00lAIaEzycUVGHLJURKGmNqCLUeMHuNFCPi\nnM1OyhEqF4yHaahzXqNCFJWl3Lht2Qnk5aF8FdSYGEdblmlGHhrn0HpQSeX6xK8=\n=HojQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 33bdc3cc4dbe7f6e6796706ccb5178497de67d5a\nparent c0a25bec9680471a4f1f26d06d5efa11547b6afc\nparent 96031e22d22fd3b98e6caa3851b99272e2b4618d\nauthor Manish Goregaokar <manishsmail@gmail.com> 1592620971 -0700\ncommitter GitHub <noreply@github.com> 1592620971 -0700\n\nRollup merge of #72934 - christianpoveda:mut-borrows-in-consts, r=oli-obk\n\nforbid mutable references in all constant contexts except for const-fns\n\nPR to address #71212\n\ncc: @ecstatic-morse\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dac512e04aa7d670efa1f2f4258dc86a39b1e453", "html_url": "https://github.com/rust-lang/rust/commit/dac512e04aa7d670efa1f2f4258dc86a39b1e453", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dac512e04aa7d670efa1f2f4258dc86a39b1e453/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0a25bec9680471a4f1f26d06d5efa11547b6afc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a25bec9680471a4f1f26d06d5efa11547b6afc", "html_url": "https://github.com/rust-lang/rust/commit/c0a25bec9680471a4f1f26d06d5efa11547b6afc"}, {"sha": "96031e22d22fd3b98e6caa3851b99272e2b4618d", "url": "https://api.github.com/repos/rust-lang/rust/commits/96031e22d22fd3b98e6caa3851b99272e2b4618d", "html_url": "https://github.com/rust-lang/rust/commit/96031e22d22fd3b98e6caa3851b99272e2b4618d"}], "stats": {"total": 334, "additions": 193, "deletions": 141}, "files": [{"sha": "738b3bc7539a6f4aad28fdfa1e3dd9671d797136", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -444,6 +444,7 @@ E0760: include_str!(\"./error_codes/E0760.md\"),\n E0761: include_str!(\"./error_codes/E0761.md\"),\n E0762: include_str!(\"./error_codes/E0762.md\"),\n E0763: include_str!(\"./error_codes/E0763.md\"),\n+E0764: include_str!(\"./error_codes/E0764.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard"}, {"sha": "e9061f988ac5906203c29abc5f0b0f77c8721a3a", "filename": "src/librustc_error_codes/error_codes/E0764.md", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Flibrustc_error_codes%2Ferror_codes%2FE0764.md", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Flibrustc_error_codes%2Ferror_codes%2FE0764.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0764.md?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -0,0 +1,39 @@\n+Mutable references (`&mut`) can only be used in constant functions, not statics\n+or constants. This limitation exists to prevent the creation of constants that\n+have a mutable reference in their final value. If you had a constant of `&mut\n+i32` type, you could modify the value through that reference, making the\n+constant essentially mutable. While there could be a more fine-grained scheme\n+in the future that allows mutable references if they are not \"leaked\" to the\n+final value, a more conservative approach was chosen for now. `const fn` do not\n+have this problem, as the borrow checker will prevent the `const fn` from\n+returning new mutable references.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0764\n+#![feature(const_fn)]\n+#![feature(const_mut_refs)]\n+\n+fn main() {\n+    const OH_NO: &'static mut usize = &mut 1; // error!\n+}\n+```\n+\n+Remember: you cannot use a function call inside a constant or static. However,\n+you can totally use it in constant functions:\n+\n+```\n+#![feature(const_fn)]\n+#![feature(const_mut_refs)]\n+\n+const fn foo(x: usize) -> usize {\n+    let mut y = 1;\n+    let z = &mut y;\n+    *z += x;\n+    y\n+}\n+\n+fn main() {\n+    const FOO: usize = foo(10); // ok!\n+}\n+```"}, {"sha": "733ae9084511cc139564abb1c05900ef554b2373", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -205,22 +205,34 @@ impl NonConstOp for CellBorrow {\n #[derive(Debug)]\n pub struct MutBorrow;\n impl NonConstOp for MutBorrow {\n+    fn is_allowed_in_item(&self, ccx: &ConstCx<'_, '_>) -> bool {\n+        // Forbid everywhere except in const fn\n+        ccx.const_kind() == hir::ConstContext::ConstFn\n+            && ccx.tcx.features().enabled(Self::feature_gate().unwrap())\n+    }\n+\n     fn feature_gate() -> Option<Symbol> {\n         Some(sym::const_mut_refs)\n     }\n \n     fn emit_error(&self, ccx: &ConstCx<'_, '_>, span: Span) {\n-        let mut err = feature_err(\n-            &ccx.tcx.sess.parse_sess,\n-            sym::const_mut_refs,\n-            span,\n-            &format!(\n-                \"references in {}s may only refer \\\n-                      to immutable values\",\n-                ccx.const_kind()\n-            ),\n-        );\n-        err.span_label(span, format!(\"{}s require immutable values\", ccx.const_kind()));\n+        let mut err = if ccx.const_kind() == hir::ConstContext::ConstFn {\n+            feature_err(\n+                &ccx.tcx.sess.parse_sess,\n+                sym::const_mut_refs,\n+                span,\n+                &format!(\"mutable references are not allowed in {}s\", ccx.const_kind()),\n+            )\n+        } else {\n+            struct_span_err!(\n+                ccx.tcx.sess,\n+                span,\n+                E0764,\n+                \"mutable references are not allowed in {}s\",\n+                ccx.const_kind(),\n+            )\n+        };\n+        err.span_label(span, \"`&mut` is only allowed in `const fn`\".to_string());\n         if ccx.tcx.sess.teach(&err.get_code().unwrap()) {\n             err.note(\n                 \"References in statics and constants may only refer \\"}, {"sha": "00aca1d14baa7ec4e3e3454f549c2ba90dc7dec8", "filename": "src/test/compile-fail/issue-52443.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -9,7 +9,7 @@ fn main() {\n     [(); { for _ in 0usize.. {}; 0}];\n     //~^ ERROR `for` is not allowed in a `const`\n     //~| ERROR calls in constants are limited to constant functions\n-    //~| ERROR references in constants may only refer to immutable values\n+    //~| ERROR mutable references are not allowed in constants\n     //~| ERROR calls in constants are limited to constant functions\n     //~| ERROR evaluation of constant value failed\n }"}, {"sha": "3be02f6a0f674cedc3fcca37b8a18647ec439230", "filename": "src/test/ui/check-static-immutable-mut-slices.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fcheck-static-immutable-mut-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fcheck-static-immutable-mut-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-static-immutable-mut-slices.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,6 +1,6 @@\n // Checks that immutable static items can't have mutable slices\n \n static TEST: &'static mut [isize] = &mut [];\n-//~^ ERROR references in statics may only refer to immutable values\n+//~^ ERROR mutable references are not allowed in statics\n \n pub fn main() { }"}, {"sha": "9ffbb483d139d2e9bd7845e576b76bc105f013ae", "filename": "src/test/ui/check-static-immutable-mut-slices.stderr", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fcheck-static-immutable-mut-slices.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fcheck-static-immutable-mut-slices.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-static-immutable-mut-slices.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,12 +1,9 @@\n-error[E0658]: references in statics may only refer to immutable values\n+error[E0764]: mutable references are not allowed in statics\n   --> $DIR/check-static-immutable-mut-slices.rs:3:37\n    |\n LL | static TEST: &'static mut [isize] = &mut [];\n-   |                                     ^^^^^^^ statics require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                                     ^^^^^^^ `&mut` is only allowed in `const fn`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0658`.\n+For more information about this error, try `rustc --explain E0764`."}, {"sha": "2518e4ed40b30bf161644840f9e77736f8a6d857", "filename": "src/test/ui/consts/const-eval/issue-65394.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-65394.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-65394.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-65394.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -5,7 +5,7 @@\n \n const _: Vec<i32> = {\n     let mut x = Vec::<i32>::new(); //~ ERROR destructors cannot be evaluated at compile-time\n-    let r = &mut x; //~ ERROR references in constants may only refer to immutable values\n+    let r = &mut x; //~ ERROR mutable references are not allowed in constants\n     let y = x;\n     y\n };"}, {"sha": "f843a94fabd8de157e63b6fa57943b90d823f5e6", "filename": "src/test/ui/consts/const-eval/issue-65394.stderr", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-65394.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-65394.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-65394.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,11 +1,8 @@\n-error[E0658]: references in constants may only refer to immutable values\n+error[E0764]: mutable references are not allowed in constants\n   --> $DIR/issue-65394.rs:8:13\n    |\n LL |     let r = &mut x;\n-   |             ^^^^^^ constants require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |             ^^^^^^ `&mut` is only allowed in `const fn`\n \n error[E0493]: destructors cannot be evaluated at compile-time\n   --> $DIR/issue-65394.rs:7:9\n@@ -15,5 +12,5 @@ LL |     let mut x = Vec::<i32>::new();\n \n error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0493, E0658.\n+Some errors have detailed explanations: E0493, E0764.\n For more information about an error, try `rustc --explain E0493`."}, {"sha": "18645efc8871505c7292ec1b4ad8ecab8dd1ac9a", "filename": "src/test/ui/consts/const-multi-ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-multi-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-multi-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-multi-ref.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -3,7 +3,7 @@\n \n const _: i32 = {\n     let mut a = 5;\n-    let p = &mut a; //~ ERROR references in constants may only refer to immutable values\n+    let p = &mut a; //~ ERROR mutable references are not allowed in constants\n \n     let reborrow = {p};\n     let pp = &reborrow;"}, {"sha": "9a7914b458874a748167ebb0528fe2e14525539a", "filename": "src/test/ui/consts/const-multi-ref.stderr", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-multi-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-multi-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-multi-ref.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,11 +1,8 @@\n-error[E0658]: references in constants may only refer to immutable values\n+error[E0764]: mutable references are not allowed in constants\n   --> $DIR/const-multi-ref.rs:6:13\n    |\n LL |     let p = &mut a;\n-   |             ^^^^^^ constants require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |             ^^^^^^ `&mut` is only allowed in `const fn`\n \n error[E0492]: cannot borrow a constant which may contain interior mutability, create a static instead\n   --> $DIR/const-multi-ref.rs:16:13\n@@ -15,5 +12,5 @@ LL |     let p = &a;\n \n error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0492, E0658.\n+Some errors have detailed explanations: E0492, E0764.\n For more information about an error, try `rustc --explain E0492`."}, {"sha": "5819daa817af04cce4c45d3f3991fb868072031d", "filename": "src/test/ui/consts/const-mut-refs/const_mut_address_of.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,5 +1,3 @@\n-// check-pass\n-\n #![feature(const_mut_refs)]\n #![feature(const_fn)]\n #![feature(raw_ref_op)]\n@@ -24,7 +22,9 @@ const fn baz(foo: &mut Foo)-> *mut usize {\n \n const _: () = {\n     foo().bar();\n+    //~^ ERROR mutable references are not allowed in constants\n     baz(&mut foo());\n+    //~^ ERROR mutable references are not allowed in constants\n };\n \n fn main() {}"}, {"sha": "2214ce6ee1c8768fafd979f9f2f1bbe6fb483a35", "filename": "src/test/ui/consts/const-mut-refs/const_mut_address_of.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -0,0 +1,15 @@\n+error[E0764]: mutable references are not allowed in constants\n+  --> $DIR/const_mut_address_of.rs:24:5\n+   |\n+LL |     foo().bar();\n+   |     ^^^^^ `&mut` is only allowed in `const fn`\n+\n+error[E0764]: mutable references are not allowed in constants\n+  --> $DIR/const_mut_address_of.rs:26:9\n+   |\n+LL |     baz(&mut foo());\n+   |         ^^^^^^^^^^ `&mut` is only allowed in `const fn`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0764`."}, {"sha": "9099d5a1b8ea642367d3f713984c5013268ed8ab", "filename": "src/test/ui/consts/const-mut-refs/const_mut_refs.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,5 +1,3 @@\n-// run-pass\n-\n #![feature(const_mut_refs)]\n \n struct Foo {\n@@ -31,6 +29,9 @@ const fn bazz(foo: &mut Foo) -> usize {\n \n fn main() {\n     let _: [(); foo().bar()] = [(); 1];\n+    //~^ ERROR mutable references are not allowed in constants\n     let _: [(); baz(&mut foo())] = [(); 2];\n+    //~^ ERROR mutable references are not allowed in constants\n     let _: [(); bazz(&mut foo())] = [(); 3];\n+    //~^ ERROR mutable references are not allowed in constants\n }"}, {"sha": "4ca7b128b7c4b8253ad5e8fa7a650229c0a6c2a6", "filename": "src/test/ui/consts/const-mut-refs/const_mut_refs.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -0,0 +1,21 @@\n+error[E0764]: mutable references are not allowed in constants\n+  --> $DIR/const_mut_refs.rs:31:17\n+   |\n+LL |     let _: [(); foo().bar()] = [(); 1];\n+   |                 ^^^^^ `&mut` is only allowed in `const fn`\n+\n+error[E0764]: mutable references are not allowed in constants\n+  --> $DIR/const_mut_refs.rs:33:21\n+   |\n+LL |     let _: [(); baz(&mut foo())] = [(); 2];\n+   |                     ^^^^^^^^^^ `&mut` is only allowed in `const fn`\n+\n+error[E0764]: mutable references are not allowed in constants\n+  --> $DIR/const_mut_refs.rs:35:22\n+   |\n+LL |     let _: [(); bazz(&mut foo())] = [(); 3];\n+   |                      ^^^^^^^^^^ `&mut` is only allowed in `const fn`\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0764`."}, {"sha": "f993a427b4899dbf591ac718ace8bd7553f3ae79", "filename": "src/test/ui/consts/const_let_assign3.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -13,14 +13,14 @@ impl S {\n \n const FOO: S = {\n     let mut s = S { state: 42 };\n-    s.foo(3); //~ ERROR references in constants may only refer to immutable values\n+    s.foo(3); //~ ERROR mutable references are not allowed in constants\n     s\n };\n \n type Array = [u32; {\n     let mut x = 2;\n     let y = &mut x;\n-//~^ ERROR references in constants may only refer to immutable values\n+//~^ ERROR mutable references are not allowed in constants\n     *y = 42;\n //~^ ERROR constant contains unimplemented expression type\n     *y"}, {"sha": "dd05a4c0bb069c9ff3184829fb0aea8990fb3954", "filename": "src/test/ui/consts/const_let_assign3.stderr", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -6,23 +6,17 @@ LL |         self.state = x;\n    |\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0658]: references in constants may only refer to immutable values\n+error[E0764]: mutable references are not allowed in constants\n   --> $DIR/const_let_assign3.rs:16:5\n    |\n LL |     s.foo(3);\n-   |     ^ constants require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |     ^ `&mut` is only allowed in `const fn`\n \n-error[E0658]: references in constants may only refer to immutable values\n+error[E0764]: mutable references are not allowed in constants\n   --> $DIR/const_let_assign3.rs:22:13\n    |\n LL |     let y = &mut x;\n-   |             ^^^^^^ constants require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |             ^^^^^^ `&mut` is only allowed in `const fn`\n \n error[E0019]: constant contains unimplemented expression type\n   --> $DIR/const_let_assign3.rs:24:5\n@@ -34,5 +28,5 @@ LL |     *y = 42;\n \n error: aborting due to 4 previous errors\n \n-Some errors have detailed explanations: E0019, E0658.\n+Some errors have detailed explanations: E0019, E0764.\n For more information about an error, try `rustc --explain E0019`."}, {"sha": "fad8f011f75f55ba17f3926d9408a4641f05f4fb", "filename": "src/test/ui/consts/projection_qualif.mut_refs.stderr", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.mut_refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.mut_refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.mut_refs.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,3 +1,9 @@\n+error[E0764]: mutable references are not allowed in constants\n+  --> $DIR/projection_qualif.rs:10:27\n+   |\n+LL |         let b: *mut u32 = &mut a;\n+   |                           ^^^^^^ `&mut` is only allowed in `const fn`\n+\n error[E0658]: dereferencing raw pointers in constants is unstable\n   --> $DIR/projection_qualif.rs:11:18\n    |\n@@ -7,6 +13,7 @@ LL |         unsafe { *b = 5; }\n    = note: see issue #51911 <https://github.com/rust-lang/rust/issues/51911> for more information\n    = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0658`.\n+Some errors have detailed explanations: E0658, E0764.\n+For more information about an error, try `rustc --explain E0658`."}, {"sha": "7db970cf1379f4aebc0e9ea9e6cd43fc27feb05d", "filename": "src/test/ui/consts/projection_qualif.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -7,7 +7,7 @@ use std::cell::Cell;\n const FOO: &u32 = {\n     let mut a = 42;\n     {\n-        let b: *mut u32 = &mut a; //[stock]~ ERROR may only refer to immutable values\n+        let b: *mut u32 = &mut a; //~ ERROR mutable references are not allowed in constants\n         unsafe { *b = 5; } //~ ERROR dereferencing raw pointers in constants\n         //[stock]~^ contains unimplemented expression\n     }"}, {"sha": "212f12286455f44a53a48f23df2aa48e419a9a99", "filename": "src/test/ui/consts/projection_qualif.stock.stderr", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stock.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,11 +1,8 @@\n-error[E0658]: references in constants may only refer to immutable values\n+error[E0764]: mutable references are not allowed in constants\n   --> $DIR/projection_qualif.rs:10:27\n    |\n LL |         let b: *mut u32 = &mut a;\n-   |                           ^^^^^^ constants require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                           ^^^^^^ `&mut` is only allowed in `const fn`\n \n error[E0658]: dereferencing raw pointers in constants is unstable\n   --> $DIR/projection_qualif.rs:11:18\n@@ -26,5 +23,5 @@ LL |         unsafe { *b = 5; }\n \n error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0019, E0658.\n+Some errors have detailed explanations: E0019, E0658, E0764.\n For more information about an error, try `rustc --explain E0019`."}, {"sha": "5faa983ab09f71cc0e9ebabcea6f6d0df7daf80f", "filename": "src/test/ui/consts/read_from_static_mut_ref.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,10 +1,9 @@\n-// run-pass\n+// We are keeping this test in case we decide to allow mutable references in statics again\n #![feature(const_mut_refs)]\n #![allow(const_err)]\n \n-static OH_YES: &mut i32 = &mut 42;\n-\n+static OH_NO: &mut i32 = &mut 42;\n+//~^ ERROR mutable references are not allowed in statics\n fn main() {\n-    // Make sure `OH_YES` can be read.\n-    assert_eq!(*OH_YES, 42);\n+    assert_eq!(*OH_NO, 42);\n }"}, {"sha": "c936ac0b7d585208c1bfa044535ffe4732e0bc91", "filename": "src/test/ui/consts/read_from_static_mut_ref.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -0,0 +1,9 @@\n+error[E0764]: mutable references are not allowed in statics\n+  --> $DIR/read_from_static_mut_ref.rs:5:26\n+   |\n+LL | static OH_NO: &mut i32 = &mut 42;\n+   |                          ^^^^^^^ `&mut` is only allowed in `const fn`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0764`."}, {"sha": "36c280ca5c607bc33c5f1dbb9f00c67b9900ec10", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.mut_refs.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.mut_refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.mut_refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.mut_refs.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,9 +1,9 @@\n-error[E0080]: could not evaluate static initializer\n-  --> $DIR/static_mut_containing_mut_ref2.rs:7:45\n+error[E0764]: mutable references are not allowed in statics\n+  --> $DIR/static_mut_containing_mut_ref2.rs:7:46\n    |\n LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n-   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ modifying a static's initial value from another static's initializer\n+   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ `&mut` is only allowed in `const fn`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0764`."}, {"sha": "a6bbe8d6ec24c1b15c1312f30a51f433aedd2b6d", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -5,8 +5,7 @@\n static mut STDERR_BUFFER_SPACE: u8 = 0;\n \n pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n-//[mut_refs]~^ ERROR could not evaluate static initializer\n-//[stock]~^^ ERROR references in statics may only refer to immutable values\n+//~^ ERROR  mutable references are not allowed in statics\n //[stock]~| ERROR static contains unimplemented expression type\n \n fn main() {}"}, {"sha": "57fb27e642e6f00aa30cd95a338f1825814deed7", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.stock.stderr", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stock.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,11 +1,8 @@\n-error[E0658]: references in statics may only refer to immutable values\n+error[E0764]: mutable references are not allowed in statics\n   --> $DIR/static_mut_containing_mut_ref2.rs:7:46\n    |\n LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n-   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ statics require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ `&mut` is only allowed in `const fn`\n \n error[E0019]: static contains unimplemented expression type\n   --> $DIR/static_mut_containing_mut_ref2.rs:7:45\n@@ -17,5 +14,5 @@ LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 4\n \n error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0019, E0658.\n+Some errors have detailed explanations: E0019, E0764.\n For more information about an error, try `rustc --explain E0019`."}, {"sha": "818dec1207b961c621d459b2c72104e001f2d1ef", "filename": "src/test/ui/error-codes/E0017.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Ferror-codes%2FE0017.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Ferror-codes%2FE0017.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0017.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -2,10 +2,10 @@ static X: i32 = 1;\n const C: i32 = 2;\n static mut M: i32 = 3;\n \n-const CR: &'static mut i32 = &mut C; //~ ERROR E0658\n-static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0658\n+const CR: &'static mut i32 = &mut C; //~ ERROR E0764\n+static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0764\n                                               //~| ERROR E0019\n                                               //~| ERROR cannot borrow\n-static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0658\n-static STATIC_MUT_REF: &'static mut i32 = unsafe { &mut M }; //~ ERROR E0658\n+static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0764\n+static STATIC_MUT_REF: &'static mut i32 = unsafe { &mut M }; //~ ERROR E0764\n fn main() {}"}, {"sha": "c1d96de1dca7c94346e98e3d4f85804fc3fe6c18", "filename": "src/test/ui/error-codes/E0017.stderr", "status": "modified", "additions": 9, "deletions": 21, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,11 +1,8 @@\n-error[E0658]: references in constants may only refer to immutable values\n+error[E0764]: mutable references are not allowed in constants\n   --> $DIR/E0017.rs:5:30\n    |\n LL | const CR: &'static mut i32 = &mut C;\n-   |                              ^^^^^^ constants require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                              ^^^^^^ `&mut` is only allowed in `const fn`\n \n error[E0019]: static contains unimplemented expression type\n   --> $DIR/E0017.rs:6:39\n@@ -15,40 +12,31 @@ LL | static STATIC_REF: &'static mut i32 = &mut X;\n    |\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0658]: references in statics may only refer to immutable values\n+error[E0764]: mutable references are not allowed in statics\n   --> $DIR/E0017.rs:6:39\n    |\n LL | static STATIC_REF: &'static mut i32 = &mut X;\n-   |                                       ^^^^^^ statics require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                                       ^^^^^^ `&mut` is only allowed in `const fn`\n \n error[E0596]: cannot borrow immutable static item `X` as mutable\n   --> $DIR/E0017.rs:6:39\n    |\n LL | static STATIC_REF: &'static mut i32 = &mut X;\n    |                                       ^^^^^^ cannot borrow as mutable\n \n-error[E0658]: references in statics may only refer to immutable values\n+error[E0764]: mutable references are not allowed in statics\n   --> $DIR/E0017.rs:9:38\n    |\n LL | static CONST_REF: &'static mut i32 = &mut C;\n-   |                                      ^^^^^^ statics require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                                      ^^^^^^ `&mut` is only allowed in `const fn`\n \n-error[E0658]: references in statics may only refer to immutable values\n+error[E0764]: mutable references are not allowed in statics\n   --> $DIR/E0017.rs:10:52\n    |\n LL | static STATIC_MUT_REF: &'static mut i32 = unsafe { &mut M };\n-   |                                                    ^^^^^^ statics require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                                                    ^^^^^^ `&mut` is only allowed in `const fn`\n \n error: aborting due to 6 previous errors\n \n-Some errors have detailed explanations: E0019, E0596, E0658.\n+Some errors have detailed explanations: E0019, E0596, E0764.\n For more information about an error, try `rustc --explain E0019`."}, {"sha": "13131017c2e07df2e87dd9da1cebd72dea8fd39b", "filename": "src/test/ui/error-codes/E0388.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Ferror-codes%2FE0388.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Ferror-codes%2FE0388.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0388.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,10 +1,10 @@\n static X: i32 = 1;\n const C: i32 = 2;\n \n-const CR: &'static mut i32 = &mut C; //~ ERROR E0658\n-static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0658\n+const CR: &'static mut i32 = &mut C; //~ ERROR E0764\n+static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0019\n                                               //~| ERROR cannot borrow\n-                                              //~| ERROR E0019\n-static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0658\n+                                              //~| ERROR E0764\n+static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0764\n \n fn main() {}"}, {"sha": "f09100bac43ce2c9c29a795dbb5d07f15161daa2", "filename": "src/test/ui/error-codes/E0388.stderr", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,11 +1,8 @@\n-error[E0658]: references in constants may only refer to immutable values\n+error[E0764]: mutable references are not allowed in constants\n   --> $DIR/E0388.rs:4:30\n    |\n LL | const CR: &'static mut i32 = &mut C;\n-   |                              ^^^^^^ constants require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                              ^^^^^^ `&mut` is only allowed in `const fn`\n \n error[E0019]: static contains unimplemented expression type\n   --> $DIR/E0388.rs:5:39\n@@ -15,31 +12,25 @@ LL | static STATIC_REF: &'static mut i32 = &mut X;\n    |\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0658]: references in statics may only refer to immutable values\n+error[E0764]: mutable references are not allowed in statics\n   --> $DIR/E0388.rs:5:39\n    |\n LL | static STATIC_REF: &'static mut i32 = &mut X;\n-   |                                       ^^^^^^ statics require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                                       ^^^^^^ `&mut` is only allowed in `const fn`\n \n error[E0596]: cannot borrow immutable static item `X` as mutable\n   --> $DIR/E0388.rs:5:39\n    |\n LL | static STATIC_REF: &'static mut i32 = &mut X;\n    |                                       ^^^^^^ cannot borrow as mutable\n \n-error[E0658]: references in statics may only refer to immutable values\n+error[E0764]: mutable references are not allowed in statics\n   --> $DIR/E0388.rs:8:38\n    |\n LL | static CONST_REF: &'static mut i32 = &mut C;\n-   |                                      ^^^^^^ statics require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                                      ^^^^^^ `&mut` is only allowed in `const fn`\n \n error: aborting due to 5 previous errors\n \n-Some errors have detailed explanations: E0019, E0596, E0658.\n+Some errors have detailed explanations: E0019, E0596, E0764.\n For more information about an error, try `rustc --explain E0019`."}, {"sha": "49023f18ddbfbfb35c1f75e90228604001b2c219", "filename": "src/test/ui/issues/issue-17718-const-bad-values.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-bad-values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-bad-values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-bad-values.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,10 +1,10 @@\n const C1: &'static mut [usize] = &mut [];\n-//~^ ERROR: references in constants may only refer to immutable values\n+//~^ ERROR: mutable references are not allowed in constants\n \n static mut S: usize = 3;\n const C2: &'static mut usize = unsafe { &mut S };\n //~^ ERROR: constants cannot refer to statics\n //~| ERROR: constants cannot refer to statics\n-//~| ERROR: references in constants may only refer to immutable values\n+//~| ERROR: mutable references are not allowed in constants\n \n fn main() {}"}, {"sha": "7c50978d4ebb83932e167818a6cf94cd9194b5cf", "filename": "src/test/ui/issues/issue-17718-const-bad-values.stderr", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-bad-values.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-bad-values.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-bad-values.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,11 +1,8 @@\n-error[E0658]: references in constants may only refer to immutable values\n+error[E0764]: mutable references are not allowed in constants\n   --> $DIR/issue-17718-const-bad-values.rs:1:34\n    |\n LL | const C1: &'static mut [usize] = &mut [];\n-   |                                  ^^^^^^^ constants require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                                  ^^^^^^^ `&mut` is only allowed in `const fn`\n \n error[E0013]: constants cannot refer to statics\n   --> $DIR/issue-17718-const-bad-values.rs:5:46\n@@ -23,16 +20,13 @@ LL | const C2: &'static mut usize = unsafe { &mut S };\n    |\n    = help: consider extracting the value of the `static` to a `const`, and referring to that\n \n-error[E0658]: references in constants may only refer to immutable values\n+error[E0764]: mutable references are not allowed in constants\n   --> $DIR/issue-17718-const-bad-values.rs:5:41\n    |\n LL | const C2: &'static mut usize = unsafe { &mut S };\n-   |                                         ^^^^^^ constants require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                                         ^^^^^^ `&mut` is only allowed in `const fn`\n \n error: aborting due to 4 previous errors\n \n-Some errors have detailed explanations: E0013, E0658.\n+Some errors have detailed explanations: E0013, E0764.\n For more information about an error, try `rustc --explain E0013`."}, {"sha": "273187a5a13beb44b38cdfd24b3c891614288d08", "filename": "src/test/ui/issues/issue-46604.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fissues%2Fissue-46604.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fissues%2Fissue-46604.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-46604.rs?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,4 +1,4 @@\n-static buf: &mut [u8] = &mut [1u8,2,3,4,5,7];   //~ ERROR E0658\n+static buf: &mut [u8] = &mut [1u8,2,3,4,5,7];   //~ ERROR E0764\n fn write<T: AsRef<[u8]>>(buffer: T) { }\n \n fn main() {"}, {"sha": "5421721dec2e315c72272de197f4628b70c92f23", "filename": "src/test/ui/issues/issue-46604.stderr", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fissues%2Fissue-46604.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac512e04aa7d670efa1f2f4258dc86a39b1e453/src%2Ftest%2Fui%2Fissues%2Fissue-46604.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-46604.stderr?ref=dac512e04aa7d670efa1f2f4258dc86a39b1e453", "patch": "@@ -1,11 +1,8 @@\n-error[E0658]: references in statics may only refer to immutable values\n+error[E0764]: mutable references are not allowed in statics\n   --> $DIR/issue-46604.rs:1:25\n    |\n LL | static buf: &mut [u8] = &mut [1u8,2,3,4,5,7];\n-   |                         ^^^^^^^^^^^^^^^^^^^^ statics require immutable values\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+   |                         ^^^^^^^^^^^^^^^^^^^^ `&mut` is only allowed in `const fn`\n \n error[E0594]: cannot assign to `buf[_]`, as `buf` is an immutable static item\n   --> $DIR/issue-46604.rs:6:5\n@@ -15,5 +12,5 @@ LL |     buf[0]=2;\n \n error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0594, E0658.\n+Some errors have detailed explanations: E0594, E0764.\n For more information about an error, try `rustc --explain E0594`."}]}