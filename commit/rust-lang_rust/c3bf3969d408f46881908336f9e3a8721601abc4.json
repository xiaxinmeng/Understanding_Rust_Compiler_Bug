{"sha": "c3bf3969d408f46881908336f9e3a8721601abc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzYmYzOTY5ZDQwOGY0Njg4MTkwODMzNmY5ZTNhODcyMTYwMWFiYzQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-02T22:09:03Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-08-22T18:23:29Z"}, "message": "Move assertion inwards.\n\n`with_taks_impl` is only called from `with_eval_always_task` and\n`with_task` . The former is only used in query invocation, while the\nlatter is also used to start the `tcx` and to trigger codegen.\n\nThis move should not change significantly the number of calls to this\nassertion.", "tree": {"sha": "a8a4157db967e1c1950be784c42de482cb04dae2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8a4157db967e1c1950be784c42de482cb04dae2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3bf3969d408f46881908336f9e3a8721601abc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3bf3969d408f46881908336f9e3a8721601abc4", "html_url": "https://github.com/rust-lang/rust/commit/c3bf3969d408f46881908336f9e3a8721601abc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3bf3969d408f46881908336f9e3a8721601abc4/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd1cb3449e3c92f6fbcd907d58b3009b1067d7f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd1cb3449e3c92f6fbcd907d58b3009b1067d7f0", "html_url": "https://github.com/rust-lang/rust/commit/cd1cb3449e3c92f6fbcd907d58b3009b1067d7f0"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "21f9d51e7af309ed249867d19aa30d17bfd7ff49", "filename": "compiler/rustc_query_system/src/dep_graph/graph.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c3bf3969d408f46881908336f9e3a8721601abc4/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3bf3969d408f46881908336f9e3a8721601abc4/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs?ref=c3bf3969d408f46881908336f9e3a8721601abc4", "patch": "@@ -11,6 +11,7 @@ use rustc_serialize::opaque::{FileEncodeResult, FileEncoder};\n use parking_lot::Mutex;\n use smallvec::{smallvec, SmallVec};\n use std::collections::hash_map::Entry;\n+use std::fmt::Debug;\n use std::hash::Hash;\n use std::marker::PhantomData;\n use std::sync::atomic::Ordering::Relaxed;\n@@ -208,7 +209,7 @@ impl<K: DepKind> DepGraph<K> {\n     ///   `arg` parameter.\n     ///\n     /// [rustc dev guide]: https://rustc-dev-guide.rust-lang.org/incremental-compilation.html\n-    pub fn with_task<Ctxt: HasDepContext<DepKind = K>, A, R>(\n+    pub fn with_task<Ctxt: HasDepContext<DepKind = K>, A: Debug, R>(\n         &self,\n         key: DepNode<K>,\n         cx: Ctxt,\n@@ -234,7 +235,7 @@ impl<K: DepKind> DepGraph<K> {\n         )\n     }\n \n-    fn with_task_impl<Ctxt: HasDepContext<DepKind = K>, A, R>(\n+    fn with_task_impl<Ctxt: HasDepContext<DepKind = K>, A: Debug, R>(\n         &self,\n         key: DepNode<K>,\n         cx: Ctxt,\n@@ -244,6 +245,20 @@ impl<K: DepKind> DepGraph<K> {\n         hash_result: impl FnOnce(&mut Ctxt::StableHashingContext, &R) -> Option<Fingerprint>,\n     ) -> (R, DepNodeIndex) {\n         if let Some(ref data) = self.data {\n+            // If the following assertion triggers, it can have two reasons:\n+            // 1. Something is wrong with DepNode creation, either here or\n+            //    in `DepGraph::try_mark_green()`.\n+            // 2. Two distinct query keys get mapped to the same `DepNode`\n+            //    (see for example #48923).\n+            assert!(\n+                !self.dep_node_exists(&key),\n+                \"forcing query with already existing `DepNode`\\n\\\n+                 - query-key: {:?}\\n\\\n+                 - dep-node: {:?}\",\n+                arg,\n+                key\n+            );\n+\n             let dcx = cx.dep_context();\n             let task_deps = create_task(key).map(Lock::new);\n             let result = K::with_deps(task_deps.as_ref(), || task(cx, arg));\n@@ -359,7 +374,7 @@ impl<K: DepKind> DepGraph<K> {\n \n     /// Executes something within an \"eval-always\" task which is a task\n     /// that runs whenever anything changes.\n-    pub fn with_eval_always_task<Ctxt: HasDepContext<DepKind = K>, A, R>(\n+    pub fn with_eval_always_task<Ctxt: HasDepContext<DepKind = K>, A: Debug, R>(\n         &self,\n         key: DepNode<K>,\n         cx: Ctxt,"}, {"sha": "86097042da016ff28c7d2f25ddf0ab01f1466f40", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c3bf3969d408f46881908336f9e3a8721601abc4/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3bf3969d408f46881908336f9e3a8721601abc4/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=c3bf3969d408f46881908336f9e3a8721601abc4", "patch": "@@ -646,20 +646,6 @@ where\n     C: QueryCache,\n     CTX: QueryContext,\n {\n-    // If the following assertion triggers, it can have two reasons:\n-    // 1. Something is wrong with DepNode creation, either here or\n-    //    in `DepGraph::try_mark_green()`.\n-    // 2. Two distinct query keys get mapped to the same `DepNode`\n-    //    (see for example #48923).\n-    assert!(\n-        !tcx.dep_context().dep_graph().dep_node_exists(&dep_node),\n-        \"forcing query with already existing `DepNode`\\n\\\n-                 - query-key: {:?}\\n\\\n-                 - dep-node: {:?}\",\n-        key,\n-        dep_node\n-    );\n-\n     let prof_timer = tcx.dep_context().profiler().query_provider();\n \n     let ((result, dep_node_index), diagnostics) = with_diagnostics(|diagnostics| {"}]}