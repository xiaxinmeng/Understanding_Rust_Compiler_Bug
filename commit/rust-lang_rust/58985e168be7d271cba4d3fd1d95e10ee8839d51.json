{"sha": "58985e168be7d271cba4d3fd1d95e10ee8839d51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4OTg1ZTE2OGJlN2QyNzFjYmE0ZDNmZDFkOTVlMTBlZTg4MzlkNTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-09T05:16:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-09T05:16:28Z"}, "message": "auto merge of #12106 : qpliu/rust/memreader-fill-eof, r=sfackler\n\nI don't know if anything depends on MemReader::fill returning an empty slice instead of EndOfFile, but I'm pretty sure that MemReader::read_until should not go into an infinite loop.", "tree": {"sha": "9f4142e1f32c9e6f4984d6ac13304af3869b745e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f4142e1f32c9e6f4984d6ac13304af3869b745e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58985e168be7d271cba4d3fd1d95e10ee8839d51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58985e168be7d271cba4d3fd1d95e10ee8839d51", "html_url": "https://github.com/rust-lang/rust/commit/58985e168be7d271cba4d3fd1d95e10ee8839d51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58985e168be7d271cba4d3fd1d95e10ee8839d51/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b66ec3483bd5081bcc829efb88ceb841189b754d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b66ec3483bd5081bcc829efb88ceb841189b754d", "html_url": "https://github.com/rust-lang/rust/commit/b66ec3483bd5081bcc829efb88ceb841189b754d"}, {"sha": "71c88e7f47ff2c250f26f2e4a2742de0028526e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/71c88e7f47ff2c250f26f2e4a2742de0028526e5", "html_url": "https://github.com/rust-lang/rust/commit/71c88e7f47ff2c250f26f2e4a2742de0028526e5"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "363dbd88fb75f79fd5cf0aac4616c4635a578e46", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/58985e168be7d271cba4d3fd1d95e10ee8839d51/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58985e168be7d271cba4d3fd1d95e10ee8839d51/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=58985e168be7d271cba4d3fd1d95e10ee8839d51", "patch": "@@ -177,7 +177,11 @@ impl Seek for MemReader {\n \n impl Buffer for MemReader {\n     fn fill<'a>(&'a mut self) -> IoResult<&'a [u8]> {\n-        Ok(self.buf.slice_from(self.pos))\n+        if self.pos < self.buf.len() {\n+            Ok(self.buf.slice_from(self.pos))\n+        } else {\n+            Err(io::standard_error(io::EndOfFile))\n+        }\n     }\n     fn consume(&mut self, amt: uint) { self.pos += amt; }\n }\n@@ -308,7 +312,11 @@ impl<'a> Seek for BufReader<'a> {\n \n impl<'a> Buffer for BufReader<'a> {\n     fn fill<'a>(&'a mut self) -> IoResult<&'a [u8]> {\n-        Ok(self.buf.slice_from(self.pos))\n+        if self.pos < self.buf.len() {\n+            Ok(self.buf.slice_from(self.pos))\n+        } else {\n+            Err(io::standard_error(io::EndOfFile))\n+        }\n     }\n     fn consume(&mut self, amt: uint) { self.pos += amt; }\n }\n@@ -421,6 +429,10 @@ mod test {\n         assert_eq!(reader.read(buf), Ok(3));\n         assert_eq!(buf.slice(0, 3), [5, 6, 7]);\n         assert!(reader.read(buf).is_err());\n+        let mut reader = MemReader::new(~[0, 1, 2, 3, 4, 5, 6, 7]);\n+        assert_eq!(reader.read_until(3).unwrap(), ~[0, 1, 2, 3]);\n+        assert_eq!(reader.read_until(3).unwrap(), ~[4, 5, 6, 7]);\n+        assert!(reader.read(buf).is_err());\n     }\n \n     #[test]\n@@ -441,6 +453,10 @@ mod test {\n         assert_eq!(reader.read(buf), Ok(3));\n         assert_eq!(buf.slice(0, 3), [5, 6, 7]);\n         assert!(reader.read(buf).is_err());\n+        let mut reader = BufReader::new(in_buf);\n+        assert_eq!(reader.read_until(3).unwrap(), ~[0, 1, 2, 3]);\n+        assert_eq!(reader.read_until(3).unwrap(), ~[4, 5, 6, 7]);\n+        assert!(reader.read(buf).is_err());\n     }\n \n     #[test]"}]}