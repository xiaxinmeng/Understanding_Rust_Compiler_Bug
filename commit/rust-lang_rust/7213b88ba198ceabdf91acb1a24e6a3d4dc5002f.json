{"sha": "7213b88ba198ceabdf91acb1a24e6a3d4dc5002f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMTNiODhiYTE5OGNlYWJkZjkxYWNiMWEyNGU2YTNkNGRjNTAwMmY=", "commit": {"author": {"name": "Chris Emerson", "email": "github@mail.nosreme.org", "date": "2018-01-20T20:45:06Z"}, "committer": {"name": "Chris Emerson", "email": "github@mail.nosreme.org", "date": "2018-01-20T20:45:06Z"}, "message": "Return a struct instead of a 4-tuple from get_modified_lines().", "tree": {"sha": "de8e0d210e98f6d6ae2e234575b1651586b59d5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de8e0d210e98f6d6ae2e234575b1651586b59d5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7213b88ba198ceabdf91acb1a24e6a3d4dc5002f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7213b88ba198ceabdf91acb1a24e6a3d4dc5002f", "html_url": "https://github.com/rust-lang/rust/commit/7213b88ba198ceabdf91acb1a24e6a3d4dc5002f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7213b88ba198ceabdf91acb1a24e6a3d4dc5002f/comments", "author": {"login": "jugglerchris", "id": 1644842, "node_id": "MDQ6VXNlcjE2NDQ4NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1644842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jugglerchris", "html_url": "https://github.com/jugglerchris", "followers_url": "https://api.github.com/users/jugglerchris/followers", "following_url": "https://api.github.com/users/jugglerchris/following{/other_user}", "gists_url": "https://api.github.com/users/jugglerchris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jugglerchris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jugglerchris/subscriptions", "organizations_url": "https://api.github.com/users/jugglerchris/orgs", "repos_url": "https://api.github.com/users/jugglerchris/repos", "events_url": "https://api.github.com/users/jugglerchris/events{/privacy}", "received_events_url": "https://api.github.com/users/jugglerchris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jugglerchris", "id": 1644842, "node_id": "MDQ6VXNlcjE2NDQ4NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1644842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jugglerchris", "html_url": "https://github.com/jugglerchris", "followers_url": "https://api.github.com/users/jugglerchris/followers", "following_url": "https://api.github.com/users/jugglerchris/following{/other_user}", "gists_url": "https://api.github.com/users/jugglerchris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jugglerchris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jugglerchris/subscriptions", "organizations_url": "https://api.github.com/users/jugglerchris/orgs", "repos_url": "https://api.github.com/users/jugglerchris/repos", "events_url": "https://api.github.com/users/jugglerchris/events{/privacy}", "received_events_url": "https://api.github.com/users/jugglerchris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc377f3fb0ea33fc669dd4b99de412c74db06725", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc377f3fb0ea33fc669dd4b99de412c74db06725", "html_url": "https://github.com/rust-lang/rust/commit/fc377f3fb0ea33fc669dd4b99de412c74db06725"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "fdec104ab930da3b37b2bf63e46a11f7549025a5", "filename": "src/lib.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7213b88ba198ceabdf91acb1a24e6a3d4dc5002f/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7213b88ba198ceabdf91acb1a24e6a3d4dc5002f/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=7213b88ba198ceabdf91acb1a24e6a3d4dc5002f", "patch": "@@ -712,12 +712,24 @@ pub struct ModifiedLines {\n     pub chunks: Vec<ModifiedChunk>,\n }\n \n+/// The successful result of formatting via get_modified_lines().\n+pub struct ModifiedLinesResult {\n+    /// The high level summary details\n+    pub summary: Summary,\n+    /// The result Filemap\n+    pub filemap: FileMap,\n+    /// Map of formatting errors\n+    pub report: FormatReport,\n+    /// The sets of updated lines.\n+    pub modified_lines: ModifiedLines,\n+}\n+\n /// Format a file and return a `ModifiedLines` data structure describing\n /// the changed ranges of lines.\n pub fn get_modified_lines(\n     input: Input,\n     config: &Config,\n-) -> Result<(Summary, FileMap, FormatReport, ModifiedLines), (io::Error, Summary)> {\n+) -> Result<ModifiedLinesResult, (io::Error, Summary)> {\n     let mut data = Vec::new();\n \n     let mut config = config.clone();\n@@ -746,12 +758,12 @@ pub fn get_modified_lines(\n             lines: added_lines,\n         });\n     }\n-    Ok((\n-        summary,\n-        filemap,\n-        formatreport,\n-        ModifiedLines { chunks: chunks },\n-    ))\n+    Ok(ModifiedLinesResult {\n+        summary: summary,\n+        filemap: filemap,\n+        report: formatreport,\n+        modified_lines: ModifiedLines { chunks: chunks },\n+    })\n }\n \n #[derive(Debug)]"}, {"sha": "432d58e5fe15070562ae7244cfa66f8b85ce077b", "filename": "tests/system.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7213b88ba198ceabdf91acb1a24e6a3d4dc5002f/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7213b88ba198ceabdf91acb1a24e6a3d4dc5002f/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=7213b88ba198ceabdf91acb1a24e6a3d4dc5002f", "patch": "@@ -147,10 +147,9 @@ fn checkstyle_test() {\n fn modified_test() {\n     // Test \"modified\" output\n     let filename = \"tests/writemode/source/modified.rs\";\n-    let (_summary, _filemap, _report, modified) =\n-        get_modified_lines(Input::File(filename.into()), &Config::default()).unwrap();\n+    let result = get_modified_lines(Input::File(filename.into()), &Config::default()).unwrap();\n     assert_eq!(\n-        modified,\n+        result.modified_lines,\n         ModifiedLines {\n             chunks: vec![\n                 ModifiedChunk {"}]}