{"sha": "22efd959109b9a231edbc81a8bc818eaa5763e78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyZWZkOTU5MTA5YjlhMjMxZWRiYzgxYThiYzgxOGVhYTU3NjNlNzg=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-04-22T21:40:27Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-04-22T21:40:27Z"}, "message": "Bless From<Cow> UI changes", "tree": {"sha": "524164340b6e2c5fc88c480280b5843de16186cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/524164340b6e2c5fc88c480280b5843de16186cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22efd959109b9a231edbc81a8bc818eaa5763e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22efd959109b9a231edbc81a8bc818eaa5763e78", "html_url": "https://github.com/rust-lang/rust/commit/22efd959109b9a231edbc81a8bc818eaa5763e78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22efd959109b9a231edbc81a8bc818eaa5763e78/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23f71fe5b518c6136990f79733155b4fa1314d2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/23f71fe5b518c6136990f79733155b4fa1314d2b", "html_url": "https://github.com/rust-lang/rust/commit/23f71fe5b518c6136990f79733155b4fa1314d2b"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "3a3f6e3d4208c4d7f57bc68d877f97715d1a2568", "filename": "src/test/ui/const-generics/array-impls/alloc-types-no-impls-length-33.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/22efd959109b9a231edbc81a8bc818eaa5763e78/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-types-no-impls-length-33.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/22efd959109b9a231edbc81a8bc818eaa5763e78/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-types-no-impls-length-33.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-types-no-impls-length-33.stderr?ref=22efd959109b9a231edbc81a8bc818eaa5763e78", "patch": "@@ -18,7 +18,7 @@ LL |     let boxed_array = <Box<[i32; 33]>>::try_from(boxed_slice);\n              <std::boxed::Box<(dyn std::error::Error + 'static)> as std::convert::From<&str>>\n              <std::boxed::Box<(dyn std::error::Error + 'static)> as std::convert::From<std::borrow::Cow<'a, str>>>\n              <std::boxed::Box<(dyn std::error::Error + 'static)> as std::convert::From<std::string::String>>\n-           and 16 others\n+           and 21 others\n    = note: required because of the requirements on the impl of `std::convert::Into<std::boxed::Box<[i32; 33]>>` for `std::boxed::Box<[i32]>`\n    = note: required because of the requirements on the impl of `std::convert::TryFrom<std::boxed::Box<[i32]>>` for `std::boxed::Box<[i32; 33]>`\n \n@@ -38,11 +38,11 @@ LL |     let boxed_array = <Rc<[i32; 33]>>::try_from(boxed_slice);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<std::rc::Rc<[i32]>>` is not implemented for `std::rc::Rc<[i32; 33]>`\n    |\n    = help: the following implementations were found:\n+             <std::rc::Rc<B> as std::convert::From<std::borrow::Cow<'a, B>>>\n              <std::rc::Rc<T> as std::convert::From<T>>\n              <std::rc::Rc<T> as std::convert::From<std::boxed::Box<T>>>\n              <std::rc::Rc<[T]> as std::convert::From<&[T]>>\n-             <std::rc::Rc<[T]> as std::convert::From<std::vec::Vec<T>>>\n-           and 8 others\n+           and 9 others\n    = note: required because of the requirements on the impl of `std::convert::Into<std::rc::Rc<[i32; 33]>>` for `std::rc::Rc<[i32]>`\n    = note: required because of the requirements on the impl of `std::convert::TryFrom<std::rc::Rc<[i32]>>` for `std::rc::Rc<[i32; 33]>`\n \n@@ -62,11 +62,11 @@ LL |     let boxed_array = <Arc<[i32; 33]>>::try_from(boxed_slice);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<std::sync::Arc<[i32]>>` is not implemented for `std::sync::Arc<[i32; 33]>`\n    |\n    = help: the following implementations were found:\n+             <std::sync::Arc<B> as std::convert::From<std::borrow::Cow<'a, B>>>\n              <std::sync::Arc<T> as std::convert::From<T>>\n              <std::sync::Arc<T> as std::convert::From<std::boxed::Box<T>>>\n              <std::sync::Arc<[T]> as std::convert::From<&[T]>>\n-             <std::sync::Arc<[T]> as std::convert::From<std::vec::Vec<T>>>\n-           and 8 others\n+           and 9 others\n    = note: required because of the requirements on the impl of `std::convert::Into<std::sync::Arc<[i32; 33]>>` for `std::sync::Arc<[i32]>`\n    = note: required because of the requirements on the impl of `std::convert::TryFrom<std::sync::Arc<[i32]>>` for `std::sync::Arc<[i32; 33]>`\n "}]}