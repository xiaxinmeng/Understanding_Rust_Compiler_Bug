{"sha": "71777465cc71b365ca08db8afd5c25eb99bd3f08", "node_id": "C_kwDOAAsO6NoAKDcxNzc3NDY1Y2M3MWIzNjVjYTA4ZGI4YWZkNWMyNWViOTliZDNmMDg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-03T10:33:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-03T10:33:45Z"}, "message": "Auto merge of #9284 - lengyijun:typo, r=dswij\n\nfix typo in tests/ui/redundant_allocation.rs\n\nchangelog: none", "tree": {"sha": "242636111eed6be40b34ead0d773cade4783ae32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/242636111eed6be40b34ead0d773cade4783ae32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71777465cc71b365ca08db8afd5c25eb99bd3f08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71777465cc71b365ca08db8afd5c25eb99bd3f08", "html_url": "https://github.com/rust-lang/rust/commit/71777465cc71b365ca08db8afd5c25eb99bd3f08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71777465cc71b365ca08db8afd5c25eb99bd3f08/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dc90a1b6d4c52ad19b2812e5a144f13fc2cdbba", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dc90a1b6d4c52ad19b2812e5a144f13fc2cdbba", "html_url": "https://github.com/rust-lang/rust/commit/5dc90a1b6d4c52ad19b2812e5a144f13fc2cdbba"}, {"sha": "b50ba06a83981633b9c1e192fd8a3fc46c3a2226", "url": "https://api.github.com/repos/rust-lang/rust/commits/b50ba06a83981633b9c1e192fd8a3fc46c3a2226", "html_url": "https://github.com/rust-lang/rust/commit/b50ba06a83981633b9c1e192fd8a3fc46c3a2226"}], "stats": {"total": 52, "additions": 21, "deletions": 31}, "files": [{"sha": "574d34aed2d87d1260b8b8558c7d36e28785c346", "filename": "tests/ui/redundant_allocation.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/71777465cc71b365ca08db8afd5c25eb99bd3f08/tests%2Fui%2Fredundant_allocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71777465cc71b365ca08db8afd5c25eb99bd3f08/tests%2Fui%2Fredundant_allocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_allocation.rs?ref=71777465cc71b365ca08db8afd5c25eb99bd3f08", "patch": "@@ -1,21 +1,13 @@\n #![warn(clippy::all)]\n-#![allow(clippy::boxed_local, clippy::needless_pass_by_value)]\n-#![allow(clippy::disallowed_names, unused_variables, dead_code)]\n-#![allow(unused_imports)]\n+#![allow(clippy::boxed_local, clippy::disallowed_names)]\n \n pub struct MyStruct;\n \n pub struct SubT<T> {\n     foo: T,\n }\n \n-pub enum MyEnum {\n-    One,\n-    Two,\n-}\n-\n mod outer_box {\n-    use crate::MyEnum;\n     use crate::MyStruct;\n     use crate::SubT;\n     use std::boxed::Box;\n@@ -36,7 +28,6 @@ mod outer_box {\n }\n \n mod outer_rc {\n-    use crate::MyEnum;\n     use crate::MyStruct;\n     use crate::SubT;\n     use std::boxed::Box;\n@@ -57,7 +48,6 @@ mod outer_rc {\n }\n \n mod outer_arc {\n-    use crate::MyEnum;\n     use crate::MyStruct;\n     use crate::SubT;\n     use std::boxed::Box;"}, {"sha": "54d4d88dba81933ae1962c267a88ffa35cfae47b", "filename": "tests/ui/redundant_allocation.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/71777465cc71b365ca08db8afd5c25eb99bd3f08/tests%2Fui%2Fredundant_allocation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/71777465cc71b365ca08db8afd5c25eb99bd3f08/tests%2Fui%2Fredundant_allocation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_allocation.stderr?ref=71777465cc71b365ca08db8afd5c25eb99bd3f08", "patch": "@@ -1,5 +1,5 @@\n error: usage of `Box<Rc<T>>`\n-  --> $DIR/redundant_allocation.rs:25:30\n+  --> $DIR/redundant_allocation.rs:17:30\n    |\n LL |     pub fn box_test6<T>(foo: Box<Rc<T>>) {}\n    |                              ^^^^^^^^^^\n@@ -9,7 +9,7 @@ LL |     pub fn box_test6<T>(foo: Box<Rc<T>>) {}\n    = help: consider using just `Box<T>` or `Rc<T>`\n \n error: usage of `Box<Arc<T>>`\n-  --> $DIR/redundant_allocation.rs:27:30\n+  --> $DIR/redundant_allocation.rs:19:30\n    |\n LL |     pub fn box_test7<T>(foo: Box<Arc<T>>) {}\n    |                              ^^^^^^^^^^^\n@@ -18,7 +18,7 @@ LL |     pub fn box_test7<T>(foo: Box<Arc<T>>) {}\n    = help: consider using just `Box<T>` or `Arc<T>`\n \n error: usage of `Box<Rc<SubT<usize>>>`\n-  --> $DIR/redundant_allocation.rs:29:27\n+  --> $DIR/redundant_allocation.rs:21:27\n    |\n LL |     pub fn box_test8() -> Box<Rc<SubT<usize>>> {\n    |                           ^^^^^^^^^^^^^^^^^^^^\n@@ -27,7 +27,7 @@ LL |     pub fn box_test8() -> Box<Rc<SubT<usize>>> {\n    = help: consider using just `Box<SubT<usize>>` or `Rc<SubT<usize>>`\n \n error: usage of `Box<Arc<T>>`\n-  --> $DIR/redundant_allocation.rs:33:30\n+  --> $DIR/redundant_allocation.rs:25:30\n    |\n LL |     pub fn box_test9<T>(foo: Box<Arc<T>>) -> Box<Arc<SubT<T>>> {\n    |                              ^^^^^^^^^^^\n@@ -36,7 +36,7 @@ LL |     pub fn box_test9<T>(foo: Box<Arc<T>>) -> Box<Arc<SubT<T>>> {\n    = help: consider using just `Box<T>` or `Arc<T>`\n \n error: usage of `Box<Arc<SubT<T>>>`\n-  --> $DIR/redundant_allocation.rs:33:46\n+  --> $DIR/redundant_allocation.rs:25:46\n    |\n LL |     pub fn box_test9<T>(foo: Box<Arc<T>>) -> Box<Arc<SubT<T>>> {\n    |                                              ^^^^^^^^^^^^^^^^^\n@@ -45,7 +45,7 @@ LL |     pub fn box_test9<T>(foo: Box<Arc<T>>) -> Box<Arc<SubT<T>>> {\n    = help: consider using just `Box<SubT<T>>` or `Arc<SubT<T>>`\n \n error: usage of `Rc<Box<bool>>`\n-  --> $DIR/redundant_allocation.rs:46:24\n+  --> $DIR/redundant_allocation.rs:37:24\n    |\n LL |     pub fn rc_test5(a: Rc<Box<bool>>) {}\n    |                        ^^^^^^^^^^^^^\n@@ -54,7 +54,7 @@ LL |     pub fn rc_test5(a: Rc<Box<bool>>) {}\n    = help: consider using just `Rc<bool>` or `Box<bool>`\n \n error: usage of `Rc<Arc<bool>>`\n-  --> $DIR/redundant_allocation.rs:48:24\n+  --> $DIR/redundant_allocation.rs:39:24\n    |\n LL |     pub fn rc_test7(a: Rc<Arc<bool>>) {}\n    |                        ^^^^^^^^^^^^^\n@@ -63,7 +63,7 @@ LL |     pub fn rc_test7(a: Rc<Arc<bool>>) {}\n    = help: consider using just `Rc<bool>` or `Arc<bool>`\n \n error: usage of `Rc<Box<SubT<usize>>>`\n-  --> $DIR/redundant_allocation.rs:50:26\n+  --> $DIR/redundant_allocation.rs:41:26\n    |\n LL |     pub fn rc_test8() -> Rc<Box<SubT<usize>>> {\n    |                          ^^^^^^^^^^^^^^^^^^^^\n@@ -72,7 +72,7 @@ LL |     pub fn rc_test8() -> Rc<Box<SubT<usize>>> {\n    = help: consider using just `Rc<SubT<usize>>` or `Box<SubT<usize>>`\n \n error: usage of `Rc<Arc<T>>`\n-  --> $DIR/redundant_allocation.rs:54:29\n+  --> $DIR/redundant_allocation.rs:45:29\n    |\n LL |     pub fn rc_test9<T>(foo: Rc<Arc<T>>) -> Rc<Arc<SubT<T>>> {\n    |                             ^^^^^^^^^^\n@@ -81,7 +81,7 @@ LL |     pub fn rc_test9<T>(foo: Rc<Arc<T>>) -> Rc<Arc<SubT<T>>> {\n    = help: consider using just `Rc<T>` or `Arc<T>`\n \n error: usage of `Rc<Arc<SubT<T>>>`\n-  --> $DIR/redundant_allocation.rs:54:44\n+  --> $DIR/redundant_allocation.rs:45:44\n    |\n LL |     pub fn rc_test9<T>(foo: Rc<Arc<T>>) -> Rc<Arc<SubT<T>>> {\n    |                                            ^^^^^^^^^^^^^^^^\n@@ -90,7 +90,7 @@ LL |     pub fn rc_test9<T>(foo: Rc<Arc<T>>) -> Rc<Arc<SubT<T>>> {\n    = help: consider using just `Rc<SubT<T>>` or `Arc<SubT<T>>`\n \n error: usage of `Arc<Box<bool>>`\n-  --> $DIR/redundant_allocation.rs:67:25\n+  --> $DIR/redundant_allocation.rs:57:25\n    |\n LL |     pub fn arc_test5(a: Arc<Box<bool>>) {}\n    |                         ^^^^^^^^^^^^^^\n@@ -99,7 +99,7 @@ LL |     pub fn arc_test5(a: Arc<Box<bool>>) {}\n    = help: consider using just `Arc<bool>` or `Box<bool>`\n \n error: usage of `Arc<Rc<bool>>`\n-  --> $DIR/redundant_allocation.rs:69:25\n+  --> $DIR/redundant_allocation.rs:59:25\n    |\n LL |     pub fn arc_test6(a: Arc<Rc<bool>>) {}\n    |                         ^^^^^^^^^^^^^\n@@ -108,7 +108,7 @@ LL |     pub fn arc_test6(a: Arc<Rc<bool>>) {}\n    = help: consider using just `Arc<bool>` or `Rc<bool>`\n \n error: usage of `Arc<Box<SubT<usize>>>`\n-  --> $DIR/redundant_allocation.rs:71:27\n+  --> $DIR/redundant_allocation.rs:61:27\n    |\n LL |     pub fn arc_test8() -> Arc<Box<SubT<usize>>> {\n    |                           ^^^^^^^^^^^^^^^^^^^^^\n@@ -117,7 +117,7 @@ LL |     pub fn arc_test8() -> Arc<Box<SubT<usize>>> {\n    = help: consider using just `Arc<SubT<usize>>` or `Box<SubT<usize>>`\n \n error: usage of `Arc<Rc<T>>`\n-  --> $DIR/redundant_allocation.rs:75:30\n+  --> $DIR/redundant_allocation.rs:65:30\n    |\n LL |     pub fn arc_test9<T>(foo: Arc<Rc<T>>) -> Arc<Rc<SubT<T>>> {\n    |                              ^^^^^^^^^^\n@@ -126,7 +126,7 @@ LL |     pub fn arc_test9<T>(foo: Arc<Rc<T>>) -> Arc<Rc<SubT<T>>> {\n    = help: consider using just `Arc<T>` or `Rc<T>`\n \n error: usage of `Arc<Rc<SubT<T>>>`\n-  --> $DIR/redundant_allocation.rs:75:45\n+  --> $DIR/redundant_allocation.rs:65:45\n    |\n LL |     pub fn arc_test9<T>(foo: Arc<Rc<T>>) -> Arc<Rc<SubT<T>>> {\n    |                                             ^^^^^^^^^^^^^^^^\n@@ -135,7 +135,7 @@ LL |     pub fn arc_test9<T>(foo: Arc<Rc<T>>) -> Arc<Rc<SubT<T>>> {\n    = help: consider using just `Arc<SubT<T>>` or `Rc<SubT<T>>`\n \n error: usage of `Rc<Box<Box<dyn T>>>`\n-  --> $DIR/redundant_allocation.rs:97:27\n+  --> $DIR/redundant_allocation.rs:87:27\n    |\n LL |     pub fn test_rc_box(_: Rc<Box<Box<dyn T>>>) {}\n    |                           ^^^^^^^^^^^^^^^^^^^\n@@ -144,7 +144,7 @@ LL |     pub fn test_rc_box(_: Rc<Box<Box<dyn T>>>) {}\n    = help: consider using just `Rc<Box<dyn T>>` or `Box<Box<dyn T>>`\n \n error: usage of `Rc<Box<Box<str>>>`\n-  --> $DIR/redundant_allocation.rs:129:31\n+  --> $DIR/redundant_allocation.rs:119:31\n    |\n LL |     pub fn test_rc_box_str(_: Rc<Box<Box<str>>>) {}\n    |                               ^^^^^^^^^^^^^^^^^\n@@ -153,7 +153,7 @@ LL |     pub fn test_rc_box_str(_: Rc<Box<Box<str>>>) {}\n    = help: consider using just `Rc<Box<str>>` or `Box<Box<str>>`\n \n error: usage of `Rc<Box<Box<[usize]>>>`\n-  --> $DIR/redundant_allocation.rs:130:33\n+  --> $DIR/redundant_allocation.rs:120:33\n    |\n LL |     pub fn test_rc_box_slice(_: Rc<Box<Box<[usize]>>>) {}\n    |                                 ^^^^^^^^^^^^^^^^^^^^^\n@@ -162,7 +162,7 @@ LL |     pub fn test_rc_box_slice(_: Rc<Box<Box<[usize]>>>) {}\n    = help: consider using just `Rc<Box<[usize]>>` or `Box<Box<[usize]>>`\n \n error: usage of `Rc<Box<Box<Path>>>`\n-  --> $DIR/redundant_allocation.rs:131:32\n+  --> $DIR/redundant_allocation.rs:121:32\n    |\n LL |     pub fn test_rc_box_path(_: Rc<Box<Box<Path>>>) {}\n    |                                ^^^^^^^^^^^^^^^^^^\n@@ -171,7 +171,7 @@ LL |     pub fn test_rc_box_path(_: Rc<Box<Box<Path>>>) {}\n    = help: consider using just `Rc<Box<Path>>` or `Box<Box<Path>>`\n \n error: usage of `Rc<Box<Box<DynSized>>>`\n-  --> $DIR/redundant_allocation.rs:132:34\n+  --> $DIR/redundant_allocation.rs:122:34\n    |\n LL |     pub fn test_rc_box_custom(_: Rc<Box<Box<DynSized>>>) {}\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^"}]}