{"sha": "a8646be1a8e2025e0bfd18dfcebf968cfcb4645e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NjQ2YmUxYThlMjAyNWUwYmZkMThkZmNlYmY5NjhjZmNiNDY0NWU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-04-25T16:33:07Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-05-18T20:56:26Z"}, "message": "Output debug info on how `#[phase] extern crate foo;` gets resolved.", "tree": {"sha": "1114a78a30a3f0fa7ca58e97d88bb7abe08cb4d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1114a78a30a3f0fa7ca58e97d88bb7abe08cb4d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8646be1a8e2025e0bfd18dfcebf968cfcb4645e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8646be1a8e2025e0bfd18dfcebf968cfcb4645e", "html_url": "https://github.com/rust-lang/rust/commit/a8646be1a8e2025e0bfd18dfcebf968cfcb4645e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8646be1a8e2025e0bfd18dfcebf968cfcb4645e/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acfc99dddd26a318867d9e1602738619d097ac6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/acfc99dddd26a318867d9e1602738619d097ac6f", "html_url": "https://github.com/rust-lang/rust/commit/acfc99dddd26a318867d9e1602738619d097ac6f"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "e3b1037ccc06e4e6ac4700fb84d5912e17d5c951", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a8646be1a8e2025e0bfd18dfcebf968cfcb4645e/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8646be1a8e2025e0bfd18dfcebf968cfcb4645e/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=a8646be1a8e2025e0bfd18dfcebf968cfcb4645e", "patch": "@@ -524,6 +524,9 @@ fn load_extern_macros(krate: &ast::ViewItem, fld: &mut MacroExpander) {\n         None => return\n     };\n \n+    debug!(\"load_extern_macros: mapped crate {} to path {} and registrar {:s}\",\n+           crate_name, path.display(), registrar);\n+\n     let lib = match DynamicLibrary::open(Some(&path)) {\n         Ok(lib) => lib,\n         // this is fatal: there are almost certainly macros we need"}]}