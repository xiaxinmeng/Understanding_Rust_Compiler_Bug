{"sha": "f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZTc1YTIxMjRjY2Q4ZTBhNjU1MjIwZjcwZmQxZWJhNzY1Y2Y1ZDI=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-03-11T01:53:35Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-03-11T01:53:35Z"}, "message": "Update to rustc-rayon 0.3.1\n\nThis pulls in rust-lang/rustc-rayon#8 to fix #81425. (h/t @ammaraskar)\n\nThat revealed weak constraints on `rustc_arena::DropArena`, because its\n`DropType` was holding type-erased raw pointers to generic `T`. We can\nimplement `Send` for `DropType` (under `cfg(parallel_compiler)`) by\nrequiring all `T: Send` before they're type-erased.", "tree": {"sha": "51b50a7b51cba1ab58bcadd2558bd86088fb730b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51b50a7b51cba1ab58bcadd2558bd86088fb730b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "html_url": "https://github.com/rust-lang/rust/commit/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f98721f886ab52d32d622ad0a46216ad03f3e525", "url": "https://api.github.com/repos/rust-lang/rust/commits/f98721f886ab52d32d622ad0a46216ad03f3e525", "html_url": "https://github.com/rust-lang/rust/commit/f98721f886ab52d32d622ad0a46216ad03f3e525"}], "stats": {"total": 83, "additions": 41, "deletions": 42}, "files": [{"sha": "3294b5e6a28d6fddc63b3e5b55671171bdb209a1", "filename": "Cargo.lock", "status": "modified", "additions": 8, "deletions": 26, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "patch": "@@ -844,15 +844,6 @@ dependencies = [\n  \"scopeguard\",\n ]\n \n-[[package]]\n-name = \"crossbeam-queue\"\n-version = \"0.1.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7c979cd6cfe72335896575c6b5688da489e420d36a27a0b9eb0c73db574b4a4b\"\n-dependencies = [\n- \"crossbeam-utils 0.6.6\",\n-]\n-\n [[package]]\n name = \"crossbeam-queue\"\n version = \"0.2.3\"\n@@ -864,16 +855,6 @@ dependencies = [\n  \"maybe-uninit\",\n ]\n \n-[[package]]\n-name = \"crossbeam-utils\"\n-version = \"0.6.6\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"04973fa96e96579258a5091af6003abde64af786b860f18622b82e026cca60e6\"\n-dependencies = [\n- \"cfg-if 0.1.10\",\n- \"lazy_static\",\n-]\n-\n [[package]]\n name = \"crossbeam-utils\"\n version = \"0.7.2\"\n@@ -3013,7 +2994,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"e92e15d89083484e11353891f1af602cc661426deb9564c298b270c726973280\"\n dependencies = [\n  \"crossbeam-deque\",\n- \"crossbeam-queue 0.2.3\",\n+ \"crossbeam-queue\",\n  \"crossbeam-utils 0.7.2\",\n  \"lazy_static\",\n  \"num_cpus\",\n@@ -3581,9 +3562,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-rayon\"\n-version = \"0.3.0\"\n+version = \"0.3.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f32767f90d938f1b7199a174ef249ae1924f6e5bbdb9d112fea141e016f25b3a\"\n+checksum = \"ed7d6a39f8bfd4421ce720918234d1e672b83824c91345b47c93746839cf1629\"\n dependencies = [\n  \"crossbeam-deque\",\n  \"either\",\n@@ -3592,13 +3573,13 @@ dependencies = [\n \n [[package]]\n name = \"rustc-rayon-core\"\n-version = \"0.3.0\"\n+version = \"0.3.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ea2427831f0053ea3ea73559c8eabd893133a51b251d142bacee53c62a288cb3\"\n+checksum = \"e94187d9ea3e8c38fafdbc38acb94eafa7ce155867f6ccb13830466a0d0db8c6\"\n dependencies = [\n  \"crossbeam-deque\",\n- \"crossbeam-queue 0.1.2\",\n- \"crossbeam-utils 0.6.6\",\n+ \"crossbeam-queue\",\n+ \"crossbeam-utils 0.7.2\",\n  \"lazy_static\",\n  \"num_cpus\",\n ]\n@@ -3661,6 +3642,7 @@ dependencies = [\n name = \"rustc_arena\"\n version = \"0.0.0\"\n dependencies = [\n+ \"rustc_data_structures\",\n  \"smallvec 1.6.1\",\n ]\n "}, {"sha": "5d4d47527d3da7ce2e2acd59a727e4549f041ba5", "filename": "compiler/rustc_arena/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_arena%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_arena%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2FCargo.toml?ref=f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "patch": "@@ -5,4 +5,5 @@ version = \"0.0.0\"\n edition = \"2018\"\n \n [dependencies]\n+rustc_data_structures = { path = \"../rustc_data_structures\" }\n smallvec = { version = \"1.6.1\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "a9917f50cc2021caa6b75c873f0cde837c68164f", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "patch": "@@ -17,6 +17,7 @@\n #![feature(min_specialization)]\n #![cfg_attr(test, feature(test))]\n \n+use rustc_data_structures::sync;\n use smallvec::SmallVec;\n \n use std::alloc::Layout;\n@@ -556,8 +557,19 @@ struct DropType {\n     obj: *mut u8,\n }\n \n-unsafe fn drop_for_type<T>(to_drop: *mut u8) {\n-    std::ptr::drop_in_place(to_drop as *mut T)\n+// SAFETY: we require `T: Send` before type-erasing into `DropType`.\n+#[cfg(parallel_compiler)]\n+unsafe impl sync::Send for DropType {}\n+\n+impl DropType {\n+    #[inline]\n+    unsafe fn new<T: sync::Send>(obj: *mut T) -> Self {\n+        unsafe fn drop_for_type<T>(to_drop: *mut u8) {\n+            std::ptr::drop_in_place(to_drop as *mut T)\n+        }\n+\n+        DropType { drop_fn: drop_for_type::<T>, obj: obj as *mut u8 }\n+    }\n }\n \n impl Drop for DropType {\n@@ -585,21 +597,26 @@ pub struct DropArena {\n \n impl DropArena {\n     #[inline]\n-    pub unsafe fn alloc<T>(&self, object: T) -> &mut T {\n+    pub unsafe fn alloc<T>(&self, object: T) -> &mut T\n+    where\n+        T: sync::Send,\n+    {\n         let mem = self.arena.alloc_raw(Layout::new::<T>()) as *mut T;\n         // Write into uninitialized memory.\n         ptr::write(mem, object);\n         let result = &mut *mem;\n         // Record the destructor after doing the allocation as that may panic\n         // and would cause `object`'s destructor to run twice if it was recorded before.\n-        self.destructors\n-            .borrow_mut()\n-            .push(DropType { drop_fn: drop_for_type::<T>, obj: result as *mut T as *mut u8 });\n+        self.destructors.borrow_mut().push(DropType::new(result));\n         result\n     }\n \n     #[inline]\n-    pub unsafe fn alloc_from_iter<T, I: IntoIterator<Item = T>>(&self, iter: I) -> &mut [T] {\n+    pub unsafe fn alloc_from_iter<T, I>(&self, iter: I) -> &mut [T]\n+    where\n+        T: sync::Send,\n+        I: IntoIterator<Item = T>,\n+    {\n         let mut vec: SmallVec<[_; 8]> = iter.into_iter().collect();\n         if vec.is_empty() {\n             return &mut [];\n@@ -620,8 +637,7 @@ impl DropArena {\n         // Record the destructors after doing the allocation as that may panic\n         // and would cause `object`'s destructor to run twice if it was recorded before.\n         for i in 0..len {\n-            destructors\n-                .push(DropType { drop_fn: drop_for_type::<T>, obj: start_ptr.add(i) as *mut u8 });\n+            destructors.push(DropType::new(start_ptr.add(i)));\n         }\n \n         slice::from_raw_parts_mut(start_ptr, len)"}, {"sha": "2e5a86b14c932640a1ebf61c849193144b951f46", "filename": "compiler/rustc_data_structures/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_data_structures%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_data_structures%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2FCargo.toml?ref=f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "patch": "@@ -19,8 +19,8 @@ rustc_graphviz = { path = \"../rustc_graphviz\" }\n cfg-if = \"0.1.2\"\n crossbeam-utils = { version = \"0.7\", features = [\"nightly\"] }\n stable_deref_trait = \"1.0.0\"\n-rayon = { version = \"0.3.0\", package = \"rustc-rayon\" }\n-rayon-core = { version = \"0.3.0\", package = \"rustc-rayon-core\" }\n+rayon = { version = \"0.3.1\", package = \"rustc-rayon\" }\n+rayon-core = { version = \"0.3.1\", package = \"rustc-rayon-core\" }\n rustc-hash = \"1.1.0\"\n smallvec = { version = \"1.6.1\", features = [\"union\", \"may_dangle\"] }\n rustc_index = { path = \"../rustc_index\", package = \"rustc_index\" }"}, {"sha": "3bfe8da505f1c61dac8f06bcb648be1a4a4d8b32", "filename": "compiler/rustc_interface/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2FCargo.toml?ref=f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "patch": "@@ -10,8 +10,8 @@ doctest = false\n [dependencies]\n libc = \"0.2\"\n tracing = \"0.1\"\n-rustc-rayon-core = \"0.3.0\"\n-rayon = { version = \"0.3.0\", package = \"rustc-rayon\" }\n+rustc-rayon-core = \"0.3.1\"\n+rayon = { version = \"0.3.1\", package = \"rustc-rayon\" }\n smallvec = { version = \"1.6.1\", features = [\"union\", \"may_dangle\"] }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_attr = { path = \"../rustc_attr\" }"}, {"sha": "8cb30e72f79210bcfc396ef3d60d4759bb3e0006", "filename": "compiler/rustc_middle/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2FCargo.toml?ref=f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "patch": "@@ -11,7 +11,7 @@ doctest = false\n rustc_arena = { path = \"../rustc_arena\" }\n bitflags = \"1.2.1\"\n tracing = \"0.1\"\n-rustc-rayon-core = \"0.3.0\"\n+rustc-rayon-core = \"0.3.1\"\n polonius-engine = \"0.12.0\"\n rustc_apfloat = { path = \"../rustc_apfloat\" }\n rustc_attr = { path = \"../rustc_attr\" }"}, {"sha": "383e30ca29fad713364fb41b13d34873e0d48171", "filename": "compiler/rustc_query_impl/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_query_impl%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_query_impl%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2FCargo.toml?ref=f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "patch": "@@ -9,7 +9,7 @@ doctest = false\n \n [dependencies]\n measureme = \"9.0.0\"\n-rustc-rayon-core = \"0.3.0\"\n+rustc-rayon-core = \"0.3.1\"\n tracing = \"0.1\"\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_attr = { path = \"../rustc_attr\" }"}, {"sha": "19512dc1f646dfd87e4c5f3c52945a47be597074", "filename": "compiler/rustc_query_system/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_query_system%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f7e75a2124ccd8e0a655220f70fd1eba765cf5d2/compiler%2Frustc_query_system%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2FCargo.toml?ref=f7e75a2124ccd8e0a655220f70fd1eba765cf5d2", "patch": "@@ -10,7 +10,7 @@ doctest = false\n [dependencies]\n rustc_arena = { path = \"../rustc_arena\" }\n tracing = \"0.1\"\n-rustc-rayon-core = \"0.3.0\"\n+rustc-rayon-core = \"0.3.1\"\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_macros = { path = \"../rustc_macros\" }"}]}