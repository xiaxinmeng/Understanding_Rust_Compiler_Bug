{"sha": "fcd3a6b037dc39a458d52d7e22b033b01720ff1b", "node_id": "C_kwDOAAsO6NoAKGZjZDNhNmIwMzdkYzM5YTQ1OGQ1MmQ3ZTIyYjAzM2IwMTcyMGZmMWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-25T16:09:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-25T16:09:39Z"}, "message": "Auto merge of #14891 - HKalbasi:dev, r=HKalbasi\n\nEvaluate `UnevaluatedConst` in unify\n\nfix #14844", "tree": {"sha": "5cddf702253015b6af603e5546efa96ac4a0f93a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cddf702253015b6af603e5546efa96ac4a0f93a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcd3a6b037dc39a458d52d7e22b033b01720ff1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcd3a6b037dc39a458d52d7e22b033b01720ff1b", "html_url": "https://github.com/rust-lang/rust/commit/fcd3a6b037dc39a458d52d7e22b033b01720ff1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcd3a6b037dc39a458d52d7e22b033b01720ff1b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efd3094aba281de248f48e67b5b93bf2c557e16c", "url": "https://api.github.com/repos/rust-lang/rust/commits/efd3094aba281de248f48e67b5b93bf2c557e16c", "html_url": "https://github.com/rust-lang/rust/commit/efd3094aba281de248f48e67b5b93bf2c557e16c"}, {"sha": "7ef185d65ea8da681f0f89ab4785c45f25cfaf91", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef185d65ea8da681f0f89ab4785c45f25cfaf91", "html_url": "https://github.com/rust-lang/rust/commit/7ef185d65ea8da681f0f89ab4785c45f25cfaf91"}], "stats": {"total": 90, "additions": 89, "deletions": 1}, "files": [{"sha": "7772fab796cc29ecb2aae396e57ff830f187f8a7", "filename": "crates/hir-ty/src/infer/expr.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fcd3a6b037dc39a458d52d7e22b033b01720ff1b/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd3a6b037dc39a458d52d7e22b033b01720ff1b/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs?ref=fcd3a6b037dc39a458d52d7e22b033b01720ff1b", "patch": "@@ -575,6 +575,9 @@ impl<'a> InferenceContext<'a> {\n                     let field_ty = field_def.map_or(self.err_ty(), |it| {\n                         field_types[it.local_id].clone().substitute(Interner, &substs)\n                     });\n+                    // Field type might have some unknown types\n+                    // FIXME: we may want to emit a single type variable for all instance of type fields?\n+                    let field_ty = self.insert_type_vars(field_ty);\n                     self.infer_expr_coerce(field.expr, &Expectation::has_type(field_ty));\n                 }\n                 if let Some(expr) = spread {"}, {"sha": "38eae475b556fd95671d99299e512f0332dc52c3", "filename": "crates/hir-ty/src/infer/unify.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fcd3a6b037dc39a458d52d7e22b033b01720ff1b/crates%2Fhir-ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd3a6b037dc39a458d52d7e22b033b01720ff1b/crates%2Fhir-ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Funify.rs?ref=fcd3a6b037dc39a458d52d7e22b033b01720ff1b", "patch": "@@ -781,8 +781,16 @@ impl<'a> InferenceTable<'a> {\n     pub(super) fn insert_const_vars_shallow(&mut self, c: Const) -> Const {\n         let data = c.data(Interner);\n         match &data.value {\n-            ConstValue::Concrete(cc) => match cc.interned {\n+            ConstValue::Concrete(cc) => match &cc.interned {\n                 crate::ConstScalar::Unknown => self.new_const_var(data.ty.clone()),\n+                // try to evaluate unevaluated const. Replace with new var if const eval failed.\n+                crate::ConstScalar::UnevaluatedConst(id, subst) => {\n+                    if let Ok(eval) = self.db.const_eval(*id, subst.clone()) {\n+                        eval\n+                    } else {\n+                        self.new_const_var(data.ty.clone())\n+                    }\n+                }\n                 _ => c,\n             },\n             _ => c,"}, {"sha": "259f43e7e201ea7234996507ab5c2b5824ba8346", "filename": "crates/hir-ty/src/tests/regression.rs", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/fcd3a6b037dc39a458d52d7e22b033b01720ff1b/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd3a6b037dc39a458d52d7e22b033b01720ff1b/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs?ref=fcd3a6b037dc39a458d52d7e22b033b01720ff1b", "patch": "@@ -1837,3 +1837,58 @@ fn foo() {\n }\",\n     );\n }\n+\n+#[test]\n+fn regression_14844() {\n+    check_no_mismatches(\n+        r#\"\n+pub type Ty = Unknown;\n+\n+pub struct Inner<T>();\n+\n+pub struct Outer {\n+    pub inner: Inner<Ty>,\n+}\n+\n+fn main() {\n+    _ = Outer {\n+        inner: Inner::<i32>(),\n+    };\n+}\n+        \"#,\n+    );\n+    check_no_mismatches(\n+        r#\"\n+pub const ONE: usize = 1;\n+\n+pub struct Inner<const P: usize>();\n+\n+pub struct Outer {\n+    pub inner: Inner<ONE>,\n+}\n+\n+fn main() {\n+    _ = Outer {\n+        inner: Inner::<1>(),\n+    };\n+}\n+        \"#,\n+    );\n+    check_no_mismatches(\n+        r#\"\n+pub const ONE: usize = unknown();\n+\n+pub struct Inner<const P: usize>();\n+\n+pub struct Outer {\n+    pub inner: Inner<ONE>,\n+}\n+\n+fn main() {\n+    _ = Outer {\n+        inner: Inner::<1>(),\n+    };\n+}\n+        \"#,\n+    );\n+}"}, {"sha": "cc282bf9348127b7a5383ae4d2137056beb538e4", "filename": "crates/ide-diagnostics/src/handlers/type_mismatch.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fcd3a6b037dc39a458d52d7e22b033b01720ff1b/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd3a6b037dc39a458d52d7e22b033b01720ff1b/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs?ref=fcd3a6b037dc39a458d52d7e22b033b01720ff1b", "patch": "@@ -644,6 +644,28 @@ fn h() {\n         );\n     }\n \n+    #[test]\n+    fn evaluate_const_generics_in_types() {\n+        check_diagnostics(\n+            r#\"\n+pub const ONE: usize = 1;\n+\n+pub struct Inner<const P: usize>();\n+\n+pub struct Outer {\n+    pub inner: Inner<ONE>,\n+}\n+\n+fn main() {\n+    _ = Outer {\n+        inner: Inner::<2>(),\n+             //^^^^^^^^^^^^ error: expected Inner<1>, found Inner<2>\n+    };\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn type_mismatch_pat_smoke_test() {\n         check_diagnostics("}]}