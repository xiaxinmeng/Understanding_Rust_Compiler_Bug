{"sha": "4310bbdfa6bdd2fa5ebbd9cd32c850ee12bcd0a2", "node_id": "C_kwDOAAsO6NoAKDQzMTBiYmRmYTZiZGQyZmE1ZWJiZDljZDMyYzg1MGVlMTJiY2QwYTI", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-10-01T18:22:46Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-03-01T00:18:41Z"}, "message": "Remove type argument of array_alloca and rename to byte_array_alloca", "tree": {"sha": "704c3bb6e0e4114cc9a389b3d9942c841f7356f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/704c3bb6e0e4114cc9a389b3d9942c841f7356f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4310bbdfa6bdd2fa5ebbd9cd32c850ee12bcd0a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4310bbdfa6bdd2fa5ebbd9cd32c850ee12bcd0a2", "html_url": "https://github.com/rust-lang/rust/commit/4310bbdfa6bdd2fa5ebbd9cd32c850ee12bcd0a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4310bbdfa6bdd2fa5ebbd9cd32c850ee12bcd0a2/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b909493151dbe517c9c897eb81de3346e0d451f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b909493151dbe517c9c897eb81de3346e0d451f9", "html_url": "https://github.com/rust-lang/rust/commit/b909493151dbe517c9c897eb81de3346e0d451f9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c43895ee565064623e4f0b8c0adbe88fe55c8b43", "filename": "src/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4310bbdfa6bdd2fa5ebbd9cd32c850ee12bcd0a2/src%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4310bbdfa6bdd2fa5ebbd9cd32c850ee12bcd0a2/src%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuilder.rs?ref=4310bbdfa6bdd2fa5ebbd9cd32c850ee12bcd0a2", "patch": "@@ -714,7 +714,7 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         self.current_func().new_local(None, aligned_type, &format!(\"stack_var_{}\", self.stack_var_count.get())).get_address(None)\n     }\n \n-    fn array_alloca(&mut self, _ty: Type<'gcc>, _len: RValue<'gcc>, _align: Align) -> RValue<'gcc> {\n+    fn byte_array_alloca(&mut self, _len: RValue<'gcc>, _align: Align) -> RValue<'gcc> {\n         unimplemented!();\n     }\n "}]}