{"sha": "f1ac7b5a65e7e647ec452c40c97d90d7039ff397", "node_id": "C_kwDOAAsO6NoAKGYxYWM3YjVhNjVlN2U2NDdlYzQ1MmM0MGM5N2Q5MGQ3MDM5ZmYzOTc", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-12T09:28:11Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-12T09:28:11Z"}, "message": "Improve docs for `struct_lint_level` function.", "tree": {"sha": "14cef30dd1f5e9ef05a14b954eb6e7b9146bcf3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14cef30dd1f5e9ef05a14b954eb6e7b9146bcf3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1ac7b5a65e7e647ec452c40c97d90d7039ff397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ac7b5a65e7e647ec452c40c97d90d7039ff397", "html_url": "https://github.com/rust-lang/rust/commit/f1ac7b5a65e7e647ec452c40c97d90d7039ff397", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1ac7b5a65e7e647ec452c40c97d90d7039ff397/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0784109daa00f2e43c1b55becc2169bc5b3bf6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0784109daa00f2e43c1b55becc2169bc5b3bf6f", "html_url": "https://github.com/rust-lang/rust/commit/c0784109daa00f2e43c1b55becc2169bc5b3bf6f"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "ec9130f5e0c78274fec2779f24d07350b145ee15", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f1ac7b5a65e7e647ec452c40c97d90d7039ff397/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ac7b5a65e7e647ec452c40c97d90d7039ff397/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=f1ac7b5a65e7e647ec452c40c97d90d7039ff397", "patch": "@@ -274,6 +274,44 @@ pub fn explain_lint_level_source(\n     }\n }\n \n+/// The innermost function for emitting lints.\n+///\n+/// If you are loocking to implement a lint, look for higher level functions,\n+/// for example:\n+/// - [`TyCtxt::emit_spanned_lint`]\n+/// - [`TyCtxt::struct_span_lint_hir`]\n+/// - [`TyCtxt::emit_lint`]\n+/// - [`TyCtxt::struct_lint_node`]\n+/// - `LintContext::lookup`\n+///\n+/// ## `decorate` signature\n+///\n+/// Signature of `decorate` may be confusing at first, for instance what's the\n+/// point of returning `&'b mut DiagnosticBuilder<'a, ()>` if the original can\n+/// be used instead?\n+/// ```ignore pseudo-code\n+/// _ = decorate(&mut diag);\n+/// /* use `diag` here again */\n+/// ```\n+///\n+/// There 2 reasons for such choice signature.\n+///\n+/// First off all, it prevents accidental use `.emit()` -- it's clear that the\n+/// builder will be later used and shouldn't be emitted right away (this is\n+/// especially important because the old API expected you to call `.emit()` in\n+/// the closure).\n+///\n+/// Second of all, it makes the most common case of adding just a single label\n+/// /suggestion much nicer, since [`DiagnosticBuilder`] methods return\n+/// `&mut DiagnosticBuilder`, you can just chain methods, without needed\n+/// awkward `{ ...; }`:\n+/// ```ignore pseudo-code\n+/// struct_lint_level(\n+///     ...,\n+///     |lint| lint.span_label(sp, \"lbl\")\n+///     //          ^^^^^^^^^^^^^^^^^^^^^ returns `&mut DiagnosticBuilder` by default\n+/// )\n+/// ```\n pub fn struct_lint_level(\n     sess: &Session,\n     lint: &'static Lint,"}]}