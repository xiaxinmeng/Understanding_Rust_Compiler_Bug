{"sha": "a852fb74131af7473bafb03d0f3994a0e9f597d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NTJmYjc0MTMxYWY3NDczYmFmYjAzZDBmMzk5NGEwZTlmNTk3ZDU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-02-12T01:35:04Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-02-12T23:13:04Z"}, "message": "Remove std lib `Span` from expected boxed future test", "tree": {"sha": "9f41a3e027dc493e578805a08400c29235e9c7a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f41a3e027dc493e578805a08400c29235e9c7a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a852fb74131af7473bafb03d0f3994a0e9f597d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a852fb74131af7473bafb03d0f3994a0e9f597d5", "html_url": "https://github.com/rust-lang/rust/commit/a852fb74131af7473bafb03d0f3994a0e9f597d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a852fb74131af7473bafb03d0f3994a0e9f597d5/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c39b04ea851b821359534b540c0babb97de24122", "url": "https://api.github.com/repos/rust-lang/rust/commits/c39b04ea851b821359534b540c0babb97de24122", "html_url": "https://github.com/rust-lang/rust/commit/c39b04ea851b821359534b540c0babb97de24122"}], "stats": {"total": 47, "additions": 19, "deletions": 28}, "files": [{"sha": "9c68de7bacec6d52e26b8825572e0d1a0b99b68e", "filename": "src/test/ui/suggestions/expected-boxed-future-isnt-pinned.fixed", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a852fb74131af7473bafb03d0f3994a0e9f597d5/src%2Ftest%2Fui%2Fsuggestions%2Fexpected-boxed-future-isnt-pinned.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a852fb74131af7473bafb03d0f3994a0e9f597d5/src%2Ftest%2Fui%2Fsuggestions%2Fexpected-boxed-future-isnt-pinned.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fexpected-boxed-future-isnt-pinned.fixed?ref=a852fb74131af7473bafb03d0f3994a0e9f597d5", "patch": "@@ -7,10 +7,9 @@ use std::pin::Pin;\n type BoxFuture<'a, T> = Pin<Box<dyn Future<Output = T> + Send + 'a>>;\n //   ^^^^^^^^^ This would come from the `futures` crate in real code.\n \n-fn foo() -> BoxFuture<'static, i32> {\n-    Box::pin(async { //~ ERROR mismatched types\n-        42\n-    })\n+fn foo<F: Future<Output=i32> + Send + 'static>(x: F) -> BoxFuture<'static, i32> {\n+    // We could instead use an `async` block, but this way we have no std spans.\n+    Box::pin(x) //~ ERROR mismatched types\n }\n \n fn main() {}"}, {"sha": "0b5200fc25ca0938fde760fda1fd0f491dbbce7e", "filename": "src/test/ui/suggestions/expected-boxed-future-isnt-pinned.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a852fb74131af7473bafb03d0f3994a0e9f597d5/src%2Ftest%2Fui%2Fsuggestions%2Fexpected-boxed-future-isnt-pinned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a852fb74131af7473bafb03d0f3994a0e9f597d5/src%2Ftest%2Fui%2Fsuggestions%2Fexpected-boxed-future-isnt-pinned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fexpected-boxed-future-isnt-pinned.rs?ref=a852fb74131af7473bafb03d0f3994a0e9f597d5", "patch": "@@ -7,10 +7,9 @@ use std::pin::Pin;\n type BoxFuture<'a, T> = Pin<Box<dyn Future<Output = T> + Send + 'a>>;\n //   ^^^^^^^^^ This would come from the `futures` crate in real code.\n \n-fn foo() -> BoxFuture<'static, i32> {\n-    async { //~ ERROR mismatched types\n-        42\n-    }\n+fn foo<F: Future<Output=i32> + Send + 'static>(x: F) -> BoxFuture<'static, i32> {\n+    // We could instead use an `async` block, but this way we have no std spans.\n+    x //~ ERROR mismatched types\n }\n \n fn main() {}"}, {"sha": "5e54fc246a20f5f315913444d80e03ea696c710f", "filename": "src/test/ui/suggestions/expected-boxed-future-isnt-pinned.stderr", "status": "modified", "additions": 13, "deletions": 20, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a852fb74131af7473bafb03d0f3994a0e9f597d5/src%2Ftest%2Fui%2Fsuggestions%2Fexpected-boxed-future-isnt-pinned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a852fb74131af7473bafb03d0f3994a0e9f597d5/src%2Ftest%2Fui%2Fsuggestions%2Fexpected-boxed-future-isnt-pinned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fexpected-boxed-future-isnt-pinned.stderr?ref=a852fb74131af7473bafb03d0f3994a0e9f597d5", "patch": "@@ -1,26 +1,19 @@\n error[E0308]: mismatched types\n-  --> $DIR/expected-boxed-future-isnt-pinned.rs:11:5\n+  --> $DIR/expected-boxed-future-isnt-pinned.rs:12:5\n    |\n-LL |   fn foo() -> BoxFuture<'static, i32> {\n-   |               ----------------------- expected `std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = i32> + std::marker::Send + 'static)>>` because of return type\n-LL | /     async {\n-LL | |         42\n-LL | |     }\n-   | |_____^ expected struct `std::pin::Pin`, found opaque type\n-   | \n-  ::: $SRC_DIR/libstd/future.rs:LL:COL\n-   |\n-LL |   pub fn from_generator<T: Generator<Yield = ()>>(x: T) -> impl Future<Output = T::Return> {\n-   |                                                            ------------------------------- the found opaque type\n-   |\n-   = note:   expected struct `std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = i32> + std::marker::Send + 'static)>>`\n-           found opaque type `impl std::future::Future`\n-help: you need to pin and box this expression\n-   |\n-LL |     Box::pin(async {\n-LL |         42\n-LL |     })\n+LL | fn foo<F: Future<Output=i32> + Send + 'static>(x: F) -> BoxFuture<'static, i32> {\n+   |        - this type parameter                            ----------------------- expected `std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = i32> + std::marker::Send + 'static)>>` because of return type\n+LL |     // We could instead use an `async` block, but this way we have no std spans.\n+LL |     x\n+   |     ^\n+   |     |\n+   |     expected struct `std::pin::Pin`, found type parameter `F`\n+   |     help: you need to pin and box this expression: `Box::pin(x)`\n    |\n+   = note:      expected struct `std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = i32> + std::marker::Send + 'static)>>`\n+           found type parameter `F`\n+   = help: type parameters must be constrained to match other types\n+   = note: for more information, visit https://doc.rust-lang.org/book/ch10-02-traits.html#traits-as-parameters\n \n error: aborting due to previous error\n "}]}