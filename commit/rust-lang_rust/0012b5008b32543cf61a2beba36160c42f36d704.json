{"sha": "0012b5008b32543cf61a2beba36160c42f36d704", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMTJiNTAwOGIzMjU0M2NmNjFhMmJlYmEzNjE2MGM0MmYzNmQ3MDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-25T20:49:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-25T20:49:43Z"}, "message": "auto merge of #8030 : thestinger/rust/iterator, r=huonw", "tree": {"sha": "9fb28ad7cd38f3130844d738321d779b67f73909", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fb28ad7cd38f3130844d738321d779b67f73909"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0012b5008b32543cf61a2beba36160c42f36d704", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0012b5008b32543cf61a2beba36160c42f36d704", "html_url": "https://github.com/rust-lang/rust/commit/0012b5008b32543cf61a2beba36160c42f36d704", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0012b5008b32543cf61a2beba36160c42f36d704/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1f5b1ba5fd12a058d153e9da8f11cd1bc597bf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1f5b1ba5fd12a058d153e9da8f11cd1bc597bf0", "html_url": "https://github.com/rust-lang/rust/commit/b1f5b1ba5fd12a058d153e9da8f11cd1bc597bf0"}, {"sha": "ba41755069998bcaa5fbb3817cc98e97e83240d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba41755069998bcaa5fbb3817cc98e97e83240d4", "html_url": "https://github.com/rust-lang/rust/commit/ba41755069998bcaa5fbb3817cc98e97e83240d4"}], "stats": {"total": 54, "additions": 8, "deletions": 46}, "files": [{"sha": "148afb4bda9529a8fda34f292f300cd73d175c8b", "filename": "doc/tutorial-container.md", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0012b5008b32543cf61a2beba36160c42f36d704/doc%2Ftutorial-container.md", "raw_url": "https://github.com/rust-lang/rust/raw/0012b5008b32543cf61a2beba36160c42f36d704/doc%2Ftutorial-container.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-container.md?ref=0012b5008b32543cf61a2beba36160c42f36d704", "patch": "@@ -108,12 +108,14 @@ impl Iterator<int> for ZeroStream {\n ## Container iterators\n \n Containers implement iteration over the contained elements by returning an\n-iterator object. For example, vector slices have four iterators available:\n+iterator object. For example, vector slices several iterators available:\n \n-* `vector.iter()`, for immutable references to the elements\n-* `vector.mut_iter()`, for mutable references to the elements\n-* `vector.rev_iter()`, for immutable references to the elements in reverse order\n-* `vector.mut_rev_iter()`, for mutable references to the elements in reverse order\n+* `iter()` and `rev_iter()`, for immutable references to the elements\n+* `mut_iter()` and `mut_rev_iter()`, for mutable references to the elements\n+* `consume_iter()` and `consume_rev_iter`, to move the elements out by-value\n+\n+A typical mutable container will implement at least `iter()`, `mut_iter()` and\n+`consume_iter()` along with the reverse variants if it maintains an order.\n \n ### Freezing\n "}, {"sha": "d6e6db8354a0f35ce55665bc8f1d42a6731ed968", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0012b5008b32543cf61a2beba36160c42f36d704/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0012b5008b32543cf61a2beba36160c42f36d704/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=0012b5008b32543cf61a2beba36160c42f36d704", "patch": "@@ -79,7 +79,6 @@ pub enum lint {\n     non_camel_case_types,\n     non_uppercase_statics,\n     type_limits,\n-    default_methods,\n     unused_unsafe,\n \n     managed_heap_memory,\n@@ -222,13 +221,6 @@ static lint_table: &'static [(&'static str, LintSpec)] = &[\n         default: warn\n      }),\n \n-    (\"default_methods\",\n-     LintSpec {\n-        lint: default_methods,\n-        desc: \"allow default methods\",\n-        default: allow\n-     }),\n-\n     (\"unused_unsafe\",\n      LintSpec {\n         lint: unused_unsafe,\n@@ -690,23 +682,6 @@ fn lint_type_limits() -> visit::vt<@mut Context> {\n     })\n }\n \n-fn check_item_default_methods(cx: &Context, item: &ast::item) {\n-    match item.node {\n-        ast::item_trait(_, _, ref methods) => {\n-            for methods.iter().advance |method| {\n-                match *method {\n-                    ast::required(*) => {}\n-                    ast::provided(*) => {\n-                        cx.span_lint(default_methods, item.span,\n-                                     \"default methods are experimental\");\n-                    }\n-                }\n-            }\n-        }\n-        _ => {}\n-    }\n-}\n-\n fn check_item_ctypes(cx: &Context, it: &ast::item) {\n     fn check_ty(cx: &Context, ty: &ast::Ty) {\n         match ty.node {\n@@ -1143,7 +1118,6 @@ pub fn check_crate(tcx: ty::ctxt, crate: @ast::Crate) {\n                     check_item_ctypes(cx, it);\n                     check_item_non_camel_case_types(cx, it);\n                     check_item_non_uppercase_statics(cx, it);\n-                    check_item_default_methods(cx, it);\n                     check_item_heap(cx, it);\n \n                     cx.process(Item(it));"}, {"sha": "7991e1cb56e9b0e91583bd62c9d6f3e291755e62", "filename": "src/libstd/cmp.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0012b5008b32543cf61a2beba36160c42f36d704/src%2Flibstd%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0012b5008b32543cf61a2beba36160c42f36d704/src%2Flibstd%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcmp.rs?ref=0012b5008b32543cf61a2beba36160c42f36d704", "patch": "@@ -21,7 +21,6 @@ and `Eq` to overload the `==` and `!=` operators.\n */\n \n #[allow(missing_doc)];\n-#[allow(default_methods)]; // NOTE: Remove when allowed in stage0\n \n /**\n * Trait for values that can be compared for equality and inequality."}, {"sha": "36645a555bbae0081ca9ecd9fd2d130f4b07c1e9", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0012b5008b32543cf61a2beba36160c42f36d704/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0012b5008b32543cf61a2beba36160c42f36d704/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=0012b5008b32543cf61a2beba36160c42f36d704", "patch": "@@ -17,8 +17,6 @@ implementing the `Iterator` trait.\n \n */\n \n-#[allow(default_methods)]; // still off by default in stage0\n-\n use cmp;\n use iter::Times;\n use num::{Zero, One};"}, {"sha": "72979d67eefc86ff7612ef7b6e33d5eacffccb78", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0012b5008b32543cf61a2beba36160c42f36d704/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0012b5008b32543cf61a2beba36160c42f36d704/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=0012b5008b32543cf61a2beba36160c42f36d704", "patch": "@@ -152,8 +152,6 @@ cleanup_task(cleanup_args *args) {\n #endif\n }\n \n-extern \"C\" CDECL void upcall_exchange_free(void *ptr);\n-\n // This runs on the Rust stack\n void task_start_wrapper(spawn_args *a)\n {"}, {"sha": "23befde7559c726dd17637d83df031c0d90645b5", "filename": "src/test/compile-fail/lint-default-methods.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b1f5b1ba5fd12a058d153e9da8f11cd1bc597bf0/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1f5b1ba5fd12a058d153e9da8f11cd1bc597bf0/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs?ref=b1f5b1ba5fd12a058d153e9da8f11cd1bc597bf0", "patch": "@@ -1,7 +0,0 @@\n-#[forbid(default_methods)];\n-\n-trait Foo { //~ ERROR default methods are experimental\n-    fn bar(&self) { println(\"hi\"); }\n-}\n-\n-fn main() {}"}, {"sha": "41c4af86bac95bdc8234a53f74b0ea2eeae74d35", "filename": "src/test/run-pass/issue-7712.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0012b5008b32543cf61a2beba36160c42f36d704/src%2Ftest%2Frun-pass%2Fissue-7712.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0012b5008b32543cf61a2beba36160c42f36d704/src%2Ftest%2Frun-pass%2Fissue-7712.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7712.rs?ref=0012b5008b32543cf61a2beba36160c42f36d704", "patch": "@@ -10,8 +10,6 @@\n \n // compile-flags:-Z debug-info\n \n-#[allow(default_methods)];\n-\n pub trait TraitWithDefaultMethod {\n     pub fn method(self) {\n         ()\n@@ -24,4 +22,4 @@ impl TraitWithDefaultMethod for MyStruct { }\n \n fn main() {\n     MyStruct.method();\n-}\n\\ No newline at end of file\n+}"}]}