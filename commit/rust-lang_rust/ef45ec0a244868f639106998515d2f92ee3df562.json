{"sha": "ef45ec0a244868f639106998515d2f92ee3df562", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNDVlYzBhMjQ0ODY4ZjYzOTEwNjk5ODUxNWQyZjkyZWUzZGY1NjI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-12-07T18:42:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-12-07T18:42:52Z"}, "message": "Rollup merge of #38225 - Cobrand:patch-1, r=GuillaumeGomez\n\nUpdate book/ffi to use catch_unwind\n\nr? @GuillaumeGomez\n\nThe doc mentioned to spawn a new thread instead of using catch_unwind, which has been the recommended way to catch panics for foreign function interfaces for a few releases now.\n\nThis commit fixes that.", "tree": {"sha": "01aec93b3c27f4bac985123bf7b51fc498bb3b8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01aec93b3c27f4bac985123bf7b51fc498bb3b8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef45ec0a244868f639106998515d2f92ee3df562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef45ec0a244868f639106998515d2f92ee3df562", "html_url": "https://github.com/rust-lang/rust/commit/ef45ec0a244868f639106998515d2f92ee3df562", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef45ec0a244868f639106998515d2f92ee3df562/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fb89b1d9eef6380e5f187645a3a3752dfd9b754", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb89b1d9eef6380e5f187645a3a3752dfd9b754", "html_url": "https://github.com/rust-lang/rust/commit/4fb89b1d9eef6380e5f187645a3a3752dfd9b754"}, {"sha": "614b74c24bb80e17230e58a74ef5a4725972f84a", "url": "https://api.github.com/repos/rust-lang/rust/commits/614b74c24bb80e17230e58a74ef5a4725972f84a", "html_url": "https://github.com/rust-lang/rust/commit/614b74c24bb80e17230e58a74ef5a4725972f84a"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "b53af694428da2648c9d4c8be9aeaf3a2ff08b7b", "filename": "src/doc/book/ffi.md", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ef45ec0a244868f639106998515d2f92ee3df562/src%2Fdoc%2Fbook%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/ef45ec0a244868f639106998515d2f92ee3df562/src%2Fdoc%2Fbook%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fffi.md?ref=ef45ec0a244868f639106998515d2f92ee3df562", "patch": "@@ -662,26 +662,31 @@ attribute turns off Rust's name mangling, so that it is easier to link to.\n \n It\u2019s important to be mindful of `panic!`s when working with FFI. A `panic!`\n across an FFI boundary is undefined behavior. If you\u2019re writing code that may\n-panic, you should run it in another thread, so that the panic doesn\u2019t bubble up\n-to C:\n+panic, you should run it in a closure with [`catch_unwind()`]:\n \n ```rust\n-use std::thread;\n+use std::panic::catch_unwind;\n \n #[no_mangle]\n pub extern fn oh_no() -> i32 {\n-    let h = thread::spawn(|| {\n+    let result = catch_unwind(|| {\n         panic!(\"Oops!\");\n     });\n-\n-    match h.join() {\n-        Ok(_) => 1,\n-        Err(_) => 0,\n+    match result {\n+        Ok(_) => 0,\n+        Err(_) => 1,\n     }\n }\n-# fn main() {}\n+\n+fn main() {}\n ```\n \n+Please note that [`catch_unwind()`] will only catch unwinding panics, not\n+those who abort the process. See the documentation of [`catch_unwind()`]\n+for more information.\n+\n+[`catch_unwind()`]: https://doc.rust-lang.org/std/panic/fn.catch_unwind.html\n+\n # Representing opaque structs\n \n Sometimes, a C library wants to provide a pointer to something, but not let you"}]}