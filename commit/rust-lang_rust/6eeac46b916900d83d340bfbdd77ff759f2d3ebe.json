{"sha": "6eeac46b916900d83d340bfbdd77ff759f2d3ebe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlZWFjNDZiOTE2OTAwZDgzZDM0MGJmYmRkNzdmZjc1OWYyZDNlYmU=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-25T14:20:10Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-25T14:20:10Z"}, "message": "Run rustfmt", "tree": {"sha": "a41697ee061183c1530a44599fb96a3754d77da4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a41697ee061183c1530a44599fb96a3754d77da4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6eeac46b916900d83d340bfbdd77ff759f2d3ebe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl3b4xoACgkQaTCGhp1Q\nZjdOxA//SeMZAlTFMD+MrNG/Ez3Ic22cvE1fRg3kahIc14iZoK76GHS4sgc2YUxF\n6P4WWXW1ZmfXe9vgfC4V12hJaVSitzvof9sse7vihE8zmg3a8h93Jt6ZWRIbTs/O\nFbyqRI4f/8Ot/buwK5VWLbV7ujB85Ugu4UqCcW9IsN/fwxsWeuVMYhOE8fieyq4C\nZ0ZrGXbGvbdtPufT9xxEhSB7ZlPeQxKY5KCxMOIvFfFSLk7XR09+B2fY0zVrw4jx\ncmCx+UrxczZ4DV8ArvY+fyCX3YC3EI+llxyGELYKD/Ht/gTymRFqQPdrwXxsN3qM\nLn0CN4CPY/oPLapGT2KM8XN6GgEzaG4EWXqNpKmuXMosCmBBuDjjY81ALPxRt7NB\nBaoTBanCv5pqTs8p/hGl5HRBMODskjl+sA2YodxYPad65XVRcWjUz3Ulv1tSGzcA\ntp1VT2OeIQvmMdTkFL44rI/AeLajQrc6+1eVHSi5YPheqCEr0CQtkG455Vw7Cds6\nDrHrAXWEv7oPJVJNsribPLWrq4BYRUhmHrkcSgo6XkiMN/OZzw7z7VgT86kcqOjp\n5VHC3YAtKlhywbVTs6G35EQ6wWvhbhzmGRRGblJlNs/jIYCUvnIhaYvxZbKXeW82\n3zmZ8OvdREBLmLUJ+yb4q9IFtAu69jlqX+M7tBn1ETCaFHzlfek=\n=LFYF\n-----END PGP SIGNATURE-----", "payload": "tree a41697ee061183c1530a44599fb96a3754d77da4\nparent d2d62de841404e598c77dd46bdff79a0545e619f\nauthor flip1995 <hello@philkrones.com> 1574691610 +0100\ncommitter flip1995 <hello@philkrones.com> 1574691610 +0100\n\nRun rustfmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6eeac46b916900d83d340bfbdd77ff759f2d3ebe", "html_url": "https://github.com/rust-lang/rust/commit/6eeac46b916900d83d340bfbdd77ff759f2d3ebe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6eeac46b916900d83d340bfbdd77ff759f2d3ebe/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2d62de841404e598c77dd46bdff79a0545e619f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2d62de841404e598c77dd46bdff79a0545e619f", "html_url": "https://github.com/rust-lang/rust/commit/d2d62de841404e598c77dd46bdff79a0545e619f"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "3061deeea26adfed25c27fe803767a8caf6b23cf", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6eeac46b916900d83d340bfbdd77ff759f2d3ebe/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eeac46b916900d83d340bfbdd77ff759f2d3ebe/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=6eeac46b916900d83d340bfbdd77ff759f2d3ebe", "patch": "@@ -101,7 +101,9 @@ fn check_arg(name: Name, arg: Name, needle: &Expr) -> bool {\n \n fn get_path_name(expr: &Expr) -> Option<Name> {\n     match expr.kind {\n-        ExprKind::Box(ref e) | ExprKind::AddrOf(_, _, ref e) | ExprKind::Unary(UnOp::UnDeref, ref e) => get_path_name(e),\n+        ExprKind::Box(ref e) | ExprKind::AddrOf(_, _, ref e) | ExprKind::Unary(UnOp::UnDeref, ref e) => {\n+            get_path_name(e)\n+        },\n         ExprKind::Block(ref b, _) => {\n             if b.stmts.is_empty() {\n                 b.expr.as_ref().and_then(|p| get_path_name(p))"}, {"sha": "59f54e59e3b1da49ce12bfe39edd31e3cdbff5fe", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6eeac46b916900d83d340bfbdd77ff759f2d3ebe/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eeac46b916900d83d340bfbdd77ff759f2d3ebe/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=6eeac46b916900d83d340bfbdd77ff759f2d3ebe", "patch": "@@ -1504,7 +1504,9 @@ fn make_iterator_snippet(cx: &LateContext<'_, '_>, arg: &Expr, applic_ref: &mut\n         // (&x).into_iter() ==> x.iter()\n         // (&mut x).into_iter() ==> x.iter_mut()\n         match &arg.kind {\n-            ExprKind::AddrOf(_, mutability, arg_inner) if has_iter_method(cx, cx.tables.expr_ty(&arg_inner)).is_some() => {\n+            ExprKind::AddrOf(_, mutability, arg_inner)\n+                if has_iter_method(cx, cx.tables.expr_ty(&arg_inner)).is_some() =>\n+            {\n                 let meth_name = match mutability {\n                     Mutability::Mutable => \"iter_mut\",\n                     Mutability::Immutable => \"iter\",\n@@ -1514,7 +1516,7 @@ fn make_iterator_snippet(cx: &LateContext<'_, '_>, arg: &Expr, applic_ref: &mut\n                     sugg::Sugg::hir_with_applicability(cx, &arg_inner, \"_\", applic_ref).maybe_par(),\n                     meth_name,\n                 )\n-            },\n+            }\n             _ => format!(\n                 \"{}.into_iter()\",\n                 sugg::Sugg::hir_with_applicability(cx, arg, \"_\", applic_ref).maybe_par()\n@@ -2090,7 +2092,9 @@ impl<'a, 'tcx> Visitor<'tcx> for IncrementVisitor<'a, 'tcx> {\n                         }\n                     },\n                     ExprKind::Assign(ref lhs, _) if lhs.hir_id == expr.hir_id => *state = VarState::DontWarn,\n-                    ExprKind::AddrOf(_, mutability, _) if mutability == Mutability::Mutable => *state = VarState::DontWarn,\n+                    ExprKind::AddrOf(_, mutability, _) if mutability == Mutability::Mutable => {\n+                        *state = VarState::DontWarn\n+                    },\n                     _ => (),\n                 }\n             }"}, {"sha": "f6749a31419edc7ff9e061a026562d27a72d91a1", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6eeac46b916900d83d340bfbdd77ff759f2d3ebe/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eeac46b916900d83d340bfbdd77ff759f2d3ebe/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=6eeac46b916900d83d340bfbdd77ff759f2d3ebe", "patch": "@@ -313,9 +313,10 @@ fn check_expr<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr, bindings:\n         return;\n     }\n     match expr.kind {\n-        ExprKind::Unary(_, ref e) | ExprKind::Field(ref e, _) | ExprKind::AddrOf(_, _, ref e) | ExprKind::Box(ref e) => {\n-            check_expr(cx, e, bindings)\n-        },\n+        ExprKind::Unary(_, ref e)\n+        | ExprKind::Field(ref e, _)\n+        | ExprKind::AddrOf(_, _, ref e)\n+        | ExprKind::Box(ref e) => check_expr(cx, e, bindings),\n         ExprKind::Block(ref block, _) | ExprKind::Loop(ref block, _, _) => check_block(cx, block, bindings),\n         // ExprKind::Call\n         // ExprKind::MethodCall"}, {"sha": "27da2c520b011c46d443fa63b361c39a36b2ed0a", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6eeac46b916900d83d340bfbdd77ff759f2d3ebe/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eeac46b916900d83d340bfbdd77ff759f2d3ebe/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=6eeac46b916900d83d340bfbdd77ff759f2d3ebe", "patch": "@@ -427,7 +427,10 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n             },\n             ExprKind::AddrOf(_, mutability, ref inner) => {\n                 let inner_pat = self.next(\"inner\");\n-                println!(\"AddrOf(_, Mutability::{:?}, ref {}) = {};\", mutability, inner_pat, current);\n+                println!(\n+                    \"AddrOf(_, Mutability::{:?}, ref {}) = {};\",\n+                    mutability, inner_pat, current\n+                );\n                 self.current = inner_pat;\n                 self.visit_expr(inner);\n             },"}]}