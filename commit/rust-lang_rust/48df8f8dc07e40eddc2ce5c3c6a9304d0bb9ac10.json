{"sha": "48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZGY4ZjhkYzA3ZTQwZWRkYzJjZTVjM2M2YTkzMDRkMGJiOWFjMTA=", "commit": {"author": {"name": "Trevor Spiteri", "email": "trevor.spiteri@um.edu.mt", "date": "2018-05-02T09:38:23Z"}, "committer": {"name": "Trevor Spiteri", "email": "trevor.spiteri@um.edu.mt", "date": "2018-05-02T09:38:23Z"}, "message": "Add test for width heuristics", "tree": {"sha": "7bf2eca9ed6fa7e889ad2cfb35d6248b71bdb698", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bf2eca9ed6fa7e889ad2cfb35d6248b71bdb698"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10", "html_url": "https://github.com/rust-lang/rust/commit/48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10/comments", "author": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31ce8ee1856f7e1eed172ae8d623117175663a85", "url": "https://api.github.com/repos/rust-lang/rust/commits/31ce8ee1856f7e1eed172ae8d623117175663a85", "html_url": "https://github.com/rust-lang/rust/commit/31ce8ee1856f7e1eed172ae8d623117175663a85"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "06c05bb9355dd52549f86489f68dbcad6ddee6da", "filename": "src/config/config_type.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10/src%2Fconfig%2Fconfig_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10/src%2Fconfig%2Fconfig_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fconfig_type.rs?ref=48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10", "patch": "@@ -130,7 +130,7 @@ macro_rules! create_config {\n             pub fn $i(&mut self, value: $ty) {\n                 (self.0).$i.2 = value;\n                 match stringify!($i) {\n-                    \"use_small_heuristics\" => self.0.set_heuristics(),\n+                    \"max_width\" | \"use_small_heuristics\" => self.0.set_heuristics(),\n                     \"license_template_path\" => self.0.set_license_template(),\n                     &_ => (),\n                 }\n@@ -292,7 +292,7 @@ macro_rules! create_config {\n                 }\n \n                 match key {\n-                    \"use_small_heuristics\" => self.set_heuristics(),\n+                    \"max_width\" | \"use_small_heuristics\" => self.set_heuristics(),\n                     \"license_template_path\" => self.set_license_template(),\n                     &_ => (),\n                 }"}, {"sha": "a591218b4ccc751663a93059fdc7ccc354c12596", "filename": "tests/source/width-heuristics.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10/tests%2Fsource%2Fwidth-heuristics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10/tests%2Fsource%2Fwidth-heuristics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fwidth-heuristics.rs?ref=48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10", "patch": "@@ -0,0 +1,28 @@\n+// rustfmt-max_width: 120\n+\n+// elems on multiple lines for max_width 100, but same line for max_width 120\n+fn foo(e: Enum) {\n+    match e {\n+        Enum::Var {\n+            elem1,\n+            elem2,\n+            elem3,\n+        } => {\n+            return;\n+        }\n+    }\n+}\n+\n+// elems not on same line for either max_width 100 or 120\n+fn bar(e: Enum) {\n+    match e {\n+        Enum::Var {\n+            elem1,\n+            elem2,\n+            elem3,\n+            elem4,\n+        } => {\n+            return;\n+        }\n+    }\n+}"}, {"sha": "e177a2152e815dd98f409d9fcd7dfbe50e813052", "filename": "tests/target/width-heuristics.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10/tests%2Ftarget%2Fwidth-heuristics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10/tests%2Ftarget%2Fwidth-heuristics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fwidth-heuristics.rs?ref=48df8f8dc07e40eddc2ce5c3c6a9304d0bb9ac10", "patch": "@@ -0,0 +1,24 @@\n+// rustfmt-max_width: 120\n+\n+// elems on multiple lines for max_width 100, but same line for max_width 120\n+fn foo(e: Enum) {\n+    match e {\n+        Enum::Var { elem1, elem2, elem3 } => {\n+            return;\n+        }\n+    }\n+}\n+\n+// elems not on same line for either max_width 100 or 120\n+fn bar(e: Enum) {\n+    match e {\n+        Enum::Var {\n+            elem1,\n+            elem2,\n+            elem3,\n+            elem4,\n+        } => {\n+            return;\n+        }\n+    }\n+}"}]}