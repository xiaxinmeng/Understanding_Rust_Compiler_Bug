{"sha": "74c8d984dbd73c070f9c9a5ac991cc271ff05164", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0YzhkOTg0ZGJkNzNjMDcwZjljOWE1YWM5OTFjYzI3MWZmMDUxNjQ=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-07-12T20:07:53Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-07-12T20:07:53Z"}, "message": "Add tracking issue 62633", "tree": {"sha": "a311c818907a24df41a78eddc27d51bf15c7dfe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a311c818907a24df41a78eddc27d51bf15c7dfe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74c8d984dbd73c070f9c9a5ac991cc271ff05164", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74c8d984dbd73c070f9c9a5ac991cc271ff05164", "html_url": "https://github.com/rust-lang/rust/commit/74c8d984dbd73c070f9c9a5ac991cc271ff05164", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74c8d984dbd73c070f9c9a5ac991cc271ff05164/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "955979ab287037f8c1972dfc53c54f0677db04c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/955979ab287037f8c1972dfc53c54f0677db04c6", "html_url": "https://github.com/rust-lang/rust/commit/955979ab287037f8c1972dfc53c54f0677db04c6"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f5581ecbba310eaef612c51a4f69a770e8b60d87", "filename": "src/libcore/option.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74c8d984dbd73c070f9c9a5ac991cc271ff05164/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74c8d984dbd73c070f9c9a5ac991cc271ff05164/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=74c8d984dbd73c070f9c9a5ac991cc271ff05164", "patch": "@@ -1008,7 +1008,7 @@ impl<T: fmt::Debug> Option<T> {\n     /// }\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"option_expect_none\", reason = \"newly added\", issue = \"0\")]\n+    #[unstable(feature = \"option_expect_none\", reason = \"newly added\", issue = \"62633\")]\n     pub fn expect_none(self, msg: &str) {\n         if let Some(val) = self {\n             expect_none_failed(msg, &val);\n@@ -1050,7 +1050,7 @@ impl<T: fmt::Debug> Option<T> {\n     /// }\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"option_unwrap_none\", reason = \"newly added\", issue = \"0\")]\n+    #[unstable(feature = \"option_unwrap_none\", reason = \"newly added\", issue = \"62633\")]\n     pub fn unwrap_none(self) {\n         if let Some(val) = self {\n             expect_none_failed(\"called `Option::unwrap_none()` on a `Some` value\", &val);"}]}