{"sha": "1bcf41e53f1361a7b09503b6c3a081a3b6907cb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiY2Y0MWU1M2YxMzYxYTdiMDk1MDNiNmMzYTA4MWEzYjY5MDdjYjY=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2016-05-03T11:31:12Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2016-05-03T11:31:29Z"}, "message": "rustdoc: HTML-escape Rust code (from constants)\n\nEspecially in cases like the one in the test file, this can blow\nup the docs big time if string constants in the code contain HTML.\n\nBut also other constants can contain special chars (e.g. `&` as an\noperator in constant expressions).", "tree": {"sha": "b71204181ff8a5cb6602f93b69dc359fe727c3f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b71204181ff8a5cb6602f93b69dc359fe727c3f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6", "html_url": "https://github.com/rust-lang/rust/commit/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d8100a068151512774caf15a6a88766ca9cf434", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d8100a068151512774caf15a6a88766ca9cf434", "html_url": "https://github.com/rust-lang/rust/commit/7d8100a068151512774caf15a6a88766ca9cf434"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "7af5322e7bdf16ea73449e4e5b94e775a1602db5", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=1bcf41e53f1361a7b09503b6c3a081a3b6907cb6", "patch": "@@ -26,6 +26,7 @@ use rustc::hir;\n use clean;\n use core::DocAccessLevels;\n use html::item_type::ItemType;\n+use html::escape::Escape;\n use html::render;\n use html::render::{cache, CURRENT_LOCATION_KEY};\n \n@@ -496,7 +497,7 @@ impl fmt::Display for clean::Type {\n                 primitive_link(f, clean::PrimitiveType::Array, \"[\")?;\n                 write!(f, \"{}\", t)?;\n                 primitive_link(f, clean::PrimitiveType::Array,\n-                               &format!(\"; {}]\", *s))\n+                               &format!(\"; {}]\", Escape(s)))\n             }\n             clean::Bottom => f.write_str(\"!\"),\n             clean::RawPointer(m, ref t) => {"}, {"sha": "36da95279fb24f7190666dd683ddb210eab207bd", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=1bcf41e53f1361a7b09503b6c3a081a3b6907cb6", "patch": "@@ -1866,7 +1866,7 @@ impl<'a> fmt::Display for Initializer<'a> {\n         let Initializer(s) = *self;\n         if s.is_empty() { return Ok(()); }\n         write!(f, \"<code> = </code>\")?;\n-        write!(f, \"<code>{}</code>\", s)\n+        write!(f, \"<code>{}</code>\", Escape(s))\n     }\n }\n \n@@ -2106,7 +2106,7 @@ fn assoc_const(w: &mut fmt::Formatter,\n \n     write!(w, \": {}\", ty)?;\n     if let Some(default) = default {\n-        write!(w, \" = {}\", default)?;\n+        write!(w, \" = {}\", Escape(default))?;\n     }\n     Ok(())\n }"}, {"sha": "7f9a2bf175a5f96c7a23daf497665244f16b055e", "filename": "src/test/rustdoc/escape-rust-expr.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6/src%2Ftest%2Frustdoc%2Fescape-rust-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6/src%2Ftest%2Frustdoc%2Fescape-rust-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fescape-rust-expr.rs?ref=1bcf41e53f1361a7b09503b6c3a081a3b6907cb6", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that we HTML-escape Rust expressions, where HTML special chars\n+// can occur, and we know it's definitely not markup.\n+\n+// @has escape_rust_expr/constant.CONST_S.html '//pre[@class=\"rust const\"]' '\"<script>\"'\n+pub const CONST_S: &'static str = \"<script>\";"}]}