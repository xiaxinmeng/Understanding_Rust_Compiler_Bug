{"sha": "c97a06d9aff1316ed7f44e84179f39c7972d33f9", "node_id": "C_kwDOAAsO6NoAKGM5N2EwNmQ5YWZmMTMxNmVkN2Y0NGU4NDE3OWYzOWM3OTcyZDMzZjk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-21T18:01:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-21T18:01:39Z"}, "message": "Auto merge of #7850 - ThibsG:PossibleCastTruncation5395, r=camsteffen\n\nFix FP: no lint when cast is coming from `signum` method call for `cast_possible_truncation` lint\n\nFixes a FP when cast is coming from `signum` method call\n\nfixes: #5395\n\nchangelog: [`cast_possible_truncation`] Fix FP when cast is coming from `signum` method call", "tree": {"sha": "28427061ff9599cfeedf1bdf05320b5b86837e5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28427061ff9599cfeedf1bdf05320b5b86837e5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c97a06d9aff1316ed7f44e84179f39c7972d33f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c97a06d9aff1316ed7f44e84179f39c7972d33f9", "html_url": "https://github.com/rust-lang/rust/commit/c97a06d9aff1316ed7f44e84179f39c7972d33f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c97a06d9aff1316ed7f44e84179f39c7972d33f9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91496c2ac6abf6454c413bb23e8becf6b6dc20ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/91496c2ac6abf6454c413bb23e8becf6b6dc20ea", "html_url": "https://github.com/rust-lang/rust/commit/91496c2ac6abf6454c413bb23e8becf6b6dc20ea"}, {"sha": "566244a8bcd4f94a0c8c2491c2abde552ee46558", "url": "https://api.github.com/repos/rust-lang/rust/commits/566244a8bcd4f94a0c8c2491c2abde552ee46558", "html_url": "https://github.com/rust-lang/rust/commit/566244a8bcd4f94a0c8c2491c2abde552ee46558"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "2ae7d16e00bb27758b42dd3615597192ac9a8816", "filename": "clippy_lints/src/casts/cast_possible_truncation.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c97a06d9aff1316ed7f44e84179f39c7972d33f9/clippy_lints%2Fsrc%2Fcasts%2Fcast_possible_truncation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97a06d9aff1316ed7f44e84179f39c7972d33f9/clippy_lints%2Fsrc%2Fcasts%2Fcast_possible_truncation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fcast_possible_truncation.rs?ref=c97a06d9aff1316ed7f44e84179f39c7972d33f9", "patch": "@@ -1,12 +1,20 @@\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::expr_or_init;\n use clippy_utils::ty::is_isize_or_usize;\n-use rustc_hir::Expr;\n+use rustc_hir::{Expr, ExprKind};\n use rustc_lint::LateContext;\n use rustc_middle::ty::{self, FloatTy, Ty};\n \n use super::{utils, CAST_POSSIBLE_TRUNCATION};\n \n-pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, cast_from: Ty<'_>, cast_to: Ty<'_>) {\n+pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, cast_expr: &Expr<'_>, cast_from: Ty<'_>, cast_to: Ty<'_>) {\n+    // do not lint if cast comes from a `signum` function\n+    if let ExprKind::MethodCall(path, ..) = expr_or_init(cx, cast_expr).kind {\n+        if path.ident.name.as_str() == \"signum\" {\n+            return;\n+        }\n+    }\n+\n     let msg = match (cast_from.is_integral(), cast_to.is_integral()) {\n         (true, true) => {\n             let from_nbits = utils::int_ty_to_nbits(cast_from, cx.tcx);"}, {"sha": "233abd178943e9bc20b2685c68fd55f03d46a9c3", "filename": "clippy_lints/src/casts/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c97a06d9aff1316ed7f44e84179f39c7972d33f9/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97a06d9aff1316ed7f44e84179f39c7972d33f9/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs?ref=c97a06d9aff1316ed7f44e84179f39c7972d33f9", "patch": "@@ -427,7 +427,7 @@ impl<'tcx> LateLintPass<'tcx> for Casts {\n             fn_to_numeric_cast::check(cx, expr, cast_expr, cast_from, cast_to);\n             fn_to_numeric_cast_with_truncation::check(cx, expr, cast_expr, cast_from, cast_to);\n             if cast_from.is_numeric() && cast_to.is_numeric() && !in_external_macro(cx.sess(), expr.span) {\n-                cast_possible_truncation::check(cx, expr, cast_from, cast_to);\n+                cast_possible_truncation::check(cx, expr, cast_expr, cast_from, cast_to);\n                 cast_possible_wrap::check(cx, expr, cast_from, cast_to);\n                 cast_precision_loss::check(cx, expr, cast_from, cast_to);\n                 cast_lossless::check(cx, expr, cast_expr, cast_from, cast_to);"}, {"sha": "adc95e63ae565e392118abc0aa62bb10e4b9ede5", "filename": "tests/ui/cast.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c97a06d9aff1316ed7f44e84179f39c7972d33f9/tests%2Fui%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97a06d9aff1316ed7f44e84179f39c7972d33f9/tests%2Fui%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.rs?ref=c97a06d9aff1316ed7f44e84179f39c7972d33f9", "patch": "@@ -92,4 +92,12 @@ fn main() {\n     (1i64).checked_rem_euclid(-1i64).unwrap() as u64;\n     (1i64).checked_rem_euclid(-1i64).unwrap() as u128;\n     (1isize).checked_rem_euclid(-1isize).unwrap() as usize;\n+\n+    // no lint for `cast_possible_truncation`\n+    // with `signum` method call (see issue #5395)\n+    let x: i64 = 5;\n+    let _ = x.signum() as i32;\n+\n+    let s = x.signum();\n+    let _ = s as i32;\n }"}]}