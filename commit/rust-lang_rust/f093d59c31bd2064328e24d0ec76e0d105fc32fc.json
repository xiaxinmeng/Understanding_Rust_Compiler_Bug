{"sha": "f093d59c31bd2064328e24d0ec76e0d105fc32fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwOTNkNTljMzFiZDIwNjQzMjhlMjRkMGVjNzZlMGQxMDVmYzMyZmM=", "commit": {"author": {"name": "Jon Gjengset", "email": "jon@thesquareplanet.com", "date": "2017-04-08T18:03:17Z"}, "committer": {"name": "Jon Gjengset", "email": "jon@thesquareplanet.com", "date": "2017-04-08T18:03:17Z"}, "message": "Address @parched's comments", "tree": {"sha": "5d2f9c1fcaef4a49cd973dc7c18e2f153cb11bf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d2f9c1fcaef4a49cd973dc7c18e2f153cb11bf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f093d59c31bd2064328e24d0ec76e0d105fc32fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEDrgUCxKUwmVd3b8M1krJ1nF23HEFAljpJeUACgkQ1krJ1nF2\n3HGc0g//a28h5t1CBUHWbNSOGLVMSO1O/01caBqLmjEv3SuS6PFkuyC+TvFsUvdV\nrGGnrHKquZ07KZZkAFPqURgeqD70IkIqxZfF5og1fSiLncYSO7lRilck7u70lNJc\nCBqWEJuOV3V4nu8raW7oHcjHXFCqEGBrwcuacLM4XY5z9YWunI9HZ79fSv9uuof7\nEgGtL1pgRkAwqocfQmt0ysvhkSOxHQ9RzCi5ArX6RpzDg/1O/cKsvyI58ccnYHei\n8mk+o0H16//MgVHoecc2y62AOSR6IrZpNrUw4qpQXpNG/lq3Pn4FCOIylQO/9O3E\nNnmiPE48T1AvwrRWIvOjvpX6qpLXeSK+U6Vbz7rRB5yNqo7+FsUywrBwh42E3rop\nSFWYPf8j2bjwLcL0WT1MW/AWkKY9stXz67K5q2T/OB5ZahKNnWVFfqS2P7SVOc0y\ncyayGrlQw1SL6C+zJQtrFwOJo9epOkE04K1JvbtSr6a4pTzsJwuhkNLfmxJJdR5T\nZWb+a3IW4spB8J/WmmKUUkshQ3Db7bJTNPV+4hWVEogU58kqG37h/2+0opRZo95z\ndQidQOT3gJMxqLrH09xHfbUqJ32QPef41u+s8DI58N6RMFXrvBK355bKoPKIloj8\nhKzwRnFad0mHqC++7kyl8O6re1ugBym48m0RzwnbP2ITfg1B5Wk=\n=SO6E\n-----END PGP SIGNATURE-----", "payload": "tree 5d2f9c1fcaef4a49cd973dc7c18e2f153cb11bf3\nparent e6597e12bc40a28ed4c682e71f7159b9cb2403e7\nauthor Jon Gjengset <jon@thesquareplanet.com> 1491674597 -0400\ncommitter Jon Gjengset <jon@thesquareplanet.com> 1491674597 -0400\n\nAddress @parched's comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f093d59c31bd2064328e24d0ec76e0d105fc32fc", "html_url": "https://github.com/rust-lang/rust/commit/f093d59c31bd2064328e24d0ec76e0d105fc32fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f093d59c31bd2064328e24d0ec76e0d105fc32fc/comments", "author": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6597e12bc40a28ed4c682e71f7159b9cb2403e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6597e12bc40a28ed4c682e71f7159b9cb2403e7", "html_url": "https://github.com/rust-lang/rust/commit/e6597e12bc40a28ed4c682e71f7159b9cb2403e7"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "827447f0bd5107a02a1cf240b0c4f6d403d381d3", "filename": "src/doc/unstable-book/src/compiler-barriers.md", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f093d59c31bd2064328e24d0ec76e0d105fc32fc/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-barriers.md", "raw_url": "https://github.com/rust-lang/rust/raw/f093d59c31bd2064328e24d0ec76e0d105fc32fc/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-barriers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-barriers.md?ref=f093d59c31bd2064328e24d0ec76e0d105fc32fc", "patch": "@@ -22,8 +22,9 @@ compiler is allowed to do. Specifically, depending on the given ordering\n semantics, the compiler may be disallowed from moving reads or writes\n from before or after the call to the other side of the call to\n `compiler_barrier`. Note that it does **not** prevent the *hardware*\n-from doing such re-orderings -- for that, the `volatile_*` class of\n-functions, or full memory fences, need to be used.\n+from doing such re-ordering. This is not a problem in a single-threaded,\n+execution context, but when other threads may modify memory at the same\n+time, stronger synchronization primitives are required.\n \n ## Examples\n \n@@ -92,12 +93,6 @@ fn signal_handler() {\n }\n ```\n \n-In more advanced cases (for example, if `IMPORTANT_VARIABLE` was an\n-`AtomicPtr` that starts as `NULL`), it may also be unsafe for the\n-compiler to hoist code using `IMPORTANT_VARIABLE` above the\n-`IS_READY.load`. In that case, a `compiler_barrier(Ordering::Acquire)`\n-should be placed at the top of the `if` to prevent this optimizations.\n-\n A deeper discussion of compiler barriers with various re-ordering\n semantics (such as `Ordering::SeqCst`) is beyond the scope of this text.\n Curious readers are encouraged to read the Linux kernel's discussion of"}]}