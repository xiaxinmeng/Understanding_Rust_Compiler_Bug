{"sha": "042a5222d1f324a60b61bbc58f3938770d3e0cd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MmE1MjIyZDFmMzI0YTYwYjYxYmJjNThmMzkzODc3MGQzZTBjZDA=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-02-16T02:26:10Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-02-17T02:35:45Z"}, "message": "core: rewrite str::byte_index to use vec functions", "tree": {"sha": "2e3ab04c32b278bed873fd6b31d8dcedc0c0fedb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e3ab04c32b278bed873fd6b31d8dcedc0c0fedb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/042a5222d1f324a60b61bbc58f3938770d3e0cd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/042a5222d1f324a60b61bbc58f3938770d3e0cd0", "html_url": "https://github.com/rust-lang/rust/commit/042a5222d1f324a60b61bbc58f3938770d3e0cd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/042a5222d1f324a60b61bbc58f3938770d3e0cd0/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1c9b160adf5f13bca690e114f254b5353fe798d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1c9b160adf5f13bca690e114f254b5353fe798d", "html_url": "https://github.com/rust-lang/rust/commit/d1c9b160adf5f13bca690e114f254b5353fe798d"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "744ea97441d0fdf491bc4f44e42fd72c1b3bd090", "filename": "src/comp/syntax/codemap.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/042a5222d1f324a60b61bbc58f3938770d3e0cd0/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/042a5222d1f324a60b61bbc58f3938770d3e0cd0/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fcodemap.rs?ref=042a5222d1f324a60b61bbc58f3938770d3e0cd0", "patch": "@@ -157,7 +157,8 @@ fn span_to_lines(sp: span, cm: codemap::codemap) -> @file_lines {\n \n fn get_line(fm: filemap, line: int) -> str unsafe {\n     let begin: uint = fm.lines[line].byte - fm.start_pos.byte;\n-    let end = alt str::byte_index(*fm.src, '\\n' as u8, begin) {\n+    let end = alt str::byte_index_from(*fm.src, '\\n' as u8, begin,\n+                                  str::len(*fm.src)) {\n       some(e) { e }\n       none { str::len(*fm.src) }\n     };"}, {"sha": "70277ff0ddb00cef56a9dcf5455622241aca708e", "filename": "src/libcore/str.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/042a5222d1f324a60b61bbc58f3938770d3e0cd0/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/042a5222d1f324a60b61bbc58f3938770d3e0cd0/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=042a5222d1f324a60b61bbc58f3938770d3e0cd0", "patch": "@@ -71,6 +71,7 @@ export\n    // Searching\n    index,\n    byte_index,\n+   byte_index_from,\n    rindex,\n    find,\n    find_bytes,\n@@ -859,13 +860,19 @@ fn index(ss: str, cc: char) -> option<uint> {\n //\n // Returns the index of the first matching byte\n // (as option some/none)\n-fn byte_index(s: str, b: u8, start: uint) -> option<uint> {\n-    let i = start, l = len_bytes(s);\n-    while i < l {\n-        if s[i] == b { ret some(i); }\n-        i += 1u;\n-    }\n-    ret none;\n+fn byte_index(s: str, b: u8) -> option<uint> {\n+    byte_index_from(s, b, 0u, len_bytes(s))\n+}\n+\n+// Function: byte_index_from\n+//\n+// Returns the index of the first matching byte within the range [`start`,\n+// `end`).\n+// (as option some/none)\n+fn byte_index_from(s: str, b: u8, start: uint, end: uint) -> option<uint> {\n+    assert end <= len_bytes(s);\n+\n+    str::as_bytes(s) { |v| vec::position_from(v, start, end) { |x| x == b } }\n }\n \n // Function: rindex"}]}