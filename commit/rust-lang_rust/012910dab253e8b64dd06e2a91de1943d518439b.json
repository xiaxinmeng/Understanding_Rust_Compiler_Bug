{"sha": "012910dab253e8b64dd06e2a91de1943d518439b", "node_id": "C_kwDOAAsO6NoAKDAxMjkxMGRhYjI1M2U4YjY0ZGQwNmUyYTkxZGUxOTQzZDUxODQzOWI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-07T17:13:00Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-12T16:27:41Z"}, "message": "Canonicalize const variables correctly", "tree": {"sha": "bbf4496a42e07be06ff0162b596ae567020b78b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbf4496a42e07be06ff0162b596ae567020b78b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/012910dab253e8b64dd06e2a91de1943d518439b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/012910dab253e8b64dd06e2a91de1943d518439b", "html_url": "https://github.com/rust-lang/rust/commit/012910dab253e8b64dd06e2a91de1943d518439b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/012910dab253e8b64dd06e2a91de1943d518439b/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72e74d7b9cf1a7901650227e74650f1fcc797600", "url": "https://api.github.com/repos/rust-lang/rust/commits/72e74d7b9cf1a7901650227e74650f1fcc797600", "html_url": "https://github.com/rust-lang/rust/commit/72e74d7b9cf1a7901650227e74650f1fcc797600"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "f29aaf56150ceaa11bf59eff05d46c7a69aa0767", "filename": "compiler/rustc_infer/src/infer/canonical/canonicalizer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/012910dab253e8b64dd06e2a91de1943d518439b/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012910dab253e8b64dd06e2a91de1943d518439b/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs?ref=012910dab253e8b64dd06e2a91de1943d518439b", "patch": "@@ -425,7 +425,7 @@ impl<'cx, 'tcx> TypeFolder<'tcx> for Canonicalizer<'cx, 'tcx> {\n                         // FIXME: perf problem described in #55921.\n                         ui = ty::UniverseIndex::ROOT;\n                         return self.canonicalize_const_var(\n-                            CanonicalVarInfo { kind: CanonicalVarKind::Const(ui) },\n+                            CanonicalVarInfo { kind: CanonicalVarKind::Const(ui, ct.ty) },\n                             ct,\n                         );\n                     }"}, {"sha": "2d2edb07d9eda871bce69855d3ba3cf8b7446c0a", "filename": "compiler/rustc_infer/src/infer/canonical/mod.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/012910dab253e8b64dd06e2a91de1943d518439b/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012910dab253e8b64dd06e2a91de1943d518439b/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fmod.rs?ref=012910dab253e8b64dd06e2a91de1943d518439b", "patch": "@@ -137,12 +137,9 @@ impl<'cx, 'tcx> InferCtxt<'cx, 'tcx> {\n                 self.tcx.mk_region(ty::RePlaceholder(placeholder_mapped)).into()\n             }\n \n-            CanonicalVarKind::Const(ui) => self\n+            CanonicalVarKind::Const(ui, ty) => self\n                 .next_const_var_in_universe(\n-                    self.next_ty_var_in_universe(\n-                        TypeVariableOrigin { kind: TypeVariableOriginKind::MiscVariable, span },\n-                        universe_map(ui),\n-                    ),\n+                    ty,\n                     ConstVariableOrigin { kind: ConstVariableOriginKind::MiscVariable, span },\n                     universe_map(ui),\n                 )"}, {"sha": "28217aeab13ee51d91d752fcfc5802b5d167cc49", "filename": "compiler/rustc_middle/src/infer/canonical.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/012910dab253e8b64dd06e2a91de1943d518439b/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012910dab253e8b64dd06e2a91de1943d518439b/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs?ref=012910dab253e8b64dd06e2a91de1943d518439b", "patch": "@@ -23,7 +23,7 @@\n \n use crate::infer::MemberConstraint;\n use crate::ty::subst::GenericArg;\n-use crate::ty::{self, BoundVar, List, Region, TyCtxt};\n+use crate::ty::{self, BoundVar, List, Region, Ty, TyCtxt};\n use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable;\n use smallvec::SmallVec;\n@@ -104,7 +104,7 @@ impl<'tcx> CanonicalVarInfo<'tcx> {\n             CanonicalVarKind::PlaceholderTy(_) => false,\n             CanonicalVarKind::Region(_) => true,\n             CanonicalVarKind::PlaceholderRegion(..) => false,\n-            CanonicalVarKind::Const(_) => true,\n+            CanonicalVarKind::Const(..) => true,\n             CanonicalVarKind::PlaceholderConst(_) => false,\n         }\n     }\n@@ -130,7 +130,7 @@ pub enum CanonicalVarKind<'tcx> {\n     PlaceholderRegion(ty::PlaceholderRegion),\n \n     /// Some kind of const inference variable.\n-    Const(ty::UniverseIndex),\n+    Const(ty::UniverseIndex, Ty<'tcx>),\n \n     /// A \"placeholder\" that represents \"any const\".\n     PlaceholderConst(ty::PlaceholderConst<'tcx>),\n@@ -147,7 +147,7 @@ impl<'tcx> CanonicalVarKind<'tcx> {\n             CanonicalVarKind::PlaceholderTy(placeholder) => placeholder.universe,\n             CanonicalVarKind::Region(ui) => ui,\n             CanonicalVarKind::PlaceholderRegion(placeholder) => placeholder.universe,\n-            CanonicalVarKind::Const(ui) => ui,\n+            CanonicalVarKind::Const(ui, _) => ui,\n             CanonicalVarKind::PlaceholderConst(placeholder) => placeholder.universe,\n         }\n     }"}, {"sha": "09bfdabf4737357871a7fad22d2bfdd7f6f8577b", "filename": "compiler/rustc_traits/src/chalk/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/012910dab253e8b64dd06e2a91de1943d518439b/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012910dab253e8b64dd06e2a91de1943d518439b/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fmod.rs?ref=012910dab253e8b64dd06e2a91de1943d518439b", "patch": "@@ -85,7 +85,7 @@ crate fn evaluate_goal<'tcx>(\n                         chalk_ir::VariableKind::Lifetime,\n                         chalk_ir::UniverseIndex { counter: ui.index() },\n                     ),\n-                    CanonicalVarKind::Const(_ui) => unimplemented!(),\n+                    CanonicalVarKind::Const(_ui, _ty) => unimplemented!(),\n                     CanonicalVarKind::PlaceholderConst(_pc) => unimplemented!(),\n                 }),\n             ),\n@@ -127,9 +127,9 @@ crate fn evaluate_goal<'tcx>(\n                     chalk_ir::VariableKind::Lifetime => CanonicalVarKind::Region(\n                         ty::UniverseIndex::from_usize(var.skip_kind().counter),\n                     ),\n-                    chalk_ir::VariableKind::Const(_) => CanonicalVarKind::Const(\n-                        ty::UniverseIndex::from_usize(var.skip_kind().counter),\n-                    ),\n+                    // FIXME(compiler-errors): We don't currently have a way of turning\n+                    // a Chalk ty back into a rustc ty, right?\n+                    chalk_ir::VariableKind::Const(_) => todo!(),\n                 };\n                 CanonicalVarInfo { kind }\n             })"}]}