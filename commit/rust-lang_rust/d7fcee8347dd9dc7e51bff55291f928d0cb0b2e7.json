{"sha": "d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZmNlZTgzNDdkZDlkYzdlNTFiZmY1NTI5MWY5MjhkMGNiMGIyZTc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-07T18:50:14Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-08T00:54:34Z"}, "message": "rustdoc: Detect provided methods on inlined traits\n\nCloses #23864", "tree": {"sha": "5a3eb57841bdf923f62dc805dd637a8fe0947d5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a3eb57841bdf923f62dc805dd637a8fe0947d5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7", "html_url": "https://github.com/rust-lang/rust/commit/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "947f1b66cb1d061bf91410abd5d9ccd9d9b38f7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/947f1b66cb1d061bf91410abd5d9ccd9d9b38f7b", "html_url": "https://github.com/rust-lang/rust/commit/947f1b66cb1d061bf91410abd5d9ccd9d9b38f7b"}], "stats": {"total": 73, "additions": 64, "deletions": 9}, "files": [{"sha": "6dd07695b33f1998ca5907b2323b2ea3ed385833", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7", "patch": "@@ -1296,20 +1296,43 @@ impl<'tcx> Clean<Item> for ty::Method<'tcx> {\n             }\n         };\n \n+        let generics = (&self.generics, &self.predicates,\n+                        subst::FnSpace).clean(cx);\n+        let decl = (self.def_id, &sig).clean(cx);\n+        let provided = match self.container {\n+            ty::ImplContainer(..) => false,\n+            ty::TraitContainer(did) => {\n+                ty::provided_trait_methods(cx.tcx(), did).iter().any(|m| {\n+                    m.def_id == self.def_id\n+                })\n+            }\n+        };\n+        let inner = if provided {\n+            MethodItem(Method {\n+                unsafety: self.fty.unsafety,\n+                generics: generics,\n+                self_: self_,\n+                decl: decl,\n+                abi: self.fty.abi\n+            })\n+        } else {\n+            TyMethodItem(TyMethod {\n+                unsafety: self.fty.unsafety,\n+                generics: generics,\n+                self_: self_,\n+                decl: decl,\n+                abi: self.fty.abi\n+            })\n+        };\n+\n         Item {\n             name: Some(self.name.clean(cx)),\n             visibility: Some(ast::Inherited),\n             stability: get_stability(cx, self.def_id),\n             def_id: self.def_id,\n             attrs: inline::load_attrs(cx, cx.tcx(), self.def_id),\n             source: Span::empty(),\n-            inner: TyMethodItem(TyMethod {\n-                unsafety: self.fty.unsafety,\n-                generics: (&self.generics, &self.predicates, subst::FnSpace).clean(cx),\n-                self_: self_,\n-                decl: (self.def_id, &sig).clean(cx),\n-                abi: self.fty.abi\n-            })\n+            inner: inner,\n         }\n     }\n }"}, {"sha": "5f1bd7ab52235bc3bc9c2110c12d5a6afffd2a7d", "filename": "src/test/auxiliary/inline-default-methods.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7/src%2Ftest%2Fauxiliary%2Finline-default-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7/src%2Ftest%2Fauxiliary%2Finline-default-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Finline-default-methods.rs?ref=d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Foo {\n+    fn bar(&self);\n+    fn foo(&mut self) {}\n+}"}, {"sha": "2943bd8507bfb5373c3b64a6fd8aef2051d50e62", "filename": "src/test/rustdoc/extern-method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7/src%2Ftest%2Frustdoc%2Fextern-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7/src%2Ftest%2Frustdoc%2Fextern-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fextern-method.rs?ref=d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7", "patch": "@@ -16,7 +16,7 @@ extern crate rustdoc_extern_method as foo;\n \n // @has extern_method/trait.Foo.html //pre \"pub trait Foo\"\n // @has - '//*[@id=\"tymethod.foo\"]//code' 'extern \"rust-call\" fn foo'\n-// @has - '//*[@id=\"tymethod.foo_\"]//code' 'extern \"rust-call\" fn foo_'\n+// @has - '//*[@id=\"method.foo_\"]//code' 'extern \"rust-call\" fn foo_'\n pub use foo::Foo;\n \n // @has extern_method/trait.Bar.html //pre \"pub trait Bar\""}, {"sha": "5e958e333bbabec398594274962e49901f1e9999", "filename": "src/test/rustdoc/inline-default-methods.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7/src%2Ftest%2Frustdoc%2Finline-default-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7/src%2Ftest%2Frustdoc%2Finline-default-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline-default-methods.rs?ref=d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:inline-default-methods.rs\n+\n+extern crate inline_default_methods;\n+\n+// @has inline_default_methods/trait.Foo.html\n+// @has - '//*[@class=\"rust trait\"]' 'fn bar(&self);'\n+// @has - '//*[@class=\"rust trait\"]' 'fn foo(&mut self) { ... }'\n+pub use inline_default_methods::Foo;"}, {"sha": "069422171bd00d7b9ebe895b54b61b769e9dec50", "filename": "src/test/rustdoc/issue-17476.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7/src%2Ftest%2Frustdoc%2Fissue-17476.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7/src%2Ftest%2Frustdoc%2Fissue-17476.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-17476.rs?ref=d7fcee8347dd9dc7e51bff55291f928d0cb0b2e7", "patch": "@@ -15,6 +15,6 @@ extern crate issue_17476;\n pub struct Foo;\n \n // @has issue_17476/struct.Foo.html \\\n-//      '//*[@href=\"http://example.com/issue_17476/trait.Foo.html#tymethod.foo\"]' \\\n+//      '//*[@href=\"http://example.com/issue_17476/trait.Foo.html#method.foo\"]' \\\n //      'foo'\n impl issue_17476::Foo for Foo {}"}]}