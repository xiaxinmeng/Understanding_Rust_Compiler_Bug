{"sha": "bd62c4c83d4b149353acb19b0cb501b682e04fdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkNjJjNGM4M2Q0YjE0OTM1M2FjYjE5YjBjYjUwMWI2ODJlMDRmZGY=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-09-25T21:59:40Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-09-25T21:59:40Z"}, "message": "Move pass contants/types into the new `pass` module.", "tree": {"sha": "85754c9cd98ecabcac54ae09644f6125c3a8e4fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85754c9cd98ecabcac54ae09644f6125c3a8e4fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd62c4c83d4b149353acb19b0cb501b682e04fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd62c4c83d4b149353acb19b0cb501b682e04fdf", "html_url": "https://github.com/rust-lang/rust/commit/bd62c4c83d4b149353acb19b0cb501b682e04fdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd62c4c83d4b149353acb19b0cb501b682e04fdf/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1a3eb633dc6e5cafea2e67c121b8920defad28e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1a3eb633dc6e5cafea2e67c121b8920defad28e", "html_url": "https://github.com/rust-lang/rust/commit/f1a3eb633dc6e5cafea2e67c121b8920defad28e"}], "stats": {"total": 68, "additions": 35, "deletions": 33}, "files": [{"sha": "be2a458296423b6bc054028a0e8546a7d37fb3ba", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 8, "deletions": 33, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/bd62c4c83d4b149353acb19b0cb501b682e04fdf/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd62c4c83d4b149353acb19b0cb501b682e04fdf/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=bd62c4c83d4b149353acb19b0cb501b682e04fdf", "patch": "@@ -91,31 +91,6 @@ pub mod test;\n \n use clean::Attributes;\n \n-type Pass = (&'static str,                                      // name\n-             fn(clean::Crate) -> plugins::PluginResult,         // fn\n-             &'static str);                                     // description\n-\n-const PASSES: &'static [Pass] = &[\n-    (\"strip-hidden\", passes::strip_hidden,\n-     \"strips all doc(hidden) items from the output\"),\n-    (\"unindent-comments\", passes::unindent_comments,\n-     \"removes excess indentation on comments in order for markdown to like it\"),\n-    (\"collapse-docs\", passes::collapse_docs,\n-     \"concatenates all document attributes into one document attribute\"),\n-    (\"strip-private\", passes::strip_private,\n-     \"strips all private items from a crate which cannot be seen externally, \\\n-      implies strip-priv-imports\"),\n-    (\"strip-priv-imports\", passes::strip_priv_imports,\n-     \"strips all private import statements (`use`, `extern crate`) from a crate\"),\n-];\n-\n-const DEFAULT_PASSES: &'static [&'static str] = &[\n-    \"strip-hidden\",\n-    \"strip-private\",\n-    \"collapse-docs\",\n-    \"unindent-comments\",\n-];\n-\n struct Output {\n     krate: clean::Crate,\n     renderinfo: html::render::RenderInfo,\n@@ -222,11 +197,11 @@ pub fn main_args(args: &[String]) -> isize {\n \n     if matches.opt_strs(\"passes\") == [\"list\"] {\n         println!(\"Available passes for running rustdoc:\");\n-        for &(name, _, description) in PASSES {\n+        for &(name, _, description) in passes::PASSES {\n             println!(\"{:>20} - {}\", name, description);\n         }\n         println!(\"\\nDefault passes for rustdoc:\");\n-        for &name in DEFAULT_PASSES {\n+        for &name in passes::DEFAULT_PASSES {\n             println!(\"{:>20}\", name);\n         }\n         return 0;\n@@ -411,7 +386,7 @@ fn rust_input(cratefile: &str, externs: Externs, matches: &getopts::Matches) ->\n     }\n \n     if default_passes {\n-        for name in DEFAULT_PASSES.iter().rev() {\n+        for name in passes::DEFAULT_PASSES.iter().rev() {\n             passes.insert(0, name.to_string());\n         }\n     }\n@@ -421,11 +396,11 @@ fn rust_input(cratefile: &str, externs: Externs, matches: &getopts::Matches) ->\n                       .unwrap_or(\"/tmp/rustdoc/plugins\".to_string());\n     let mut pm = plugins::PluginManager::new(PathBuf::from(path));\n     for pass in &passes {\n-        let plugin = match PASSES.iter()\n-                                 .position(|&(p, ..)| {\n-                                     p == *pass\n-                                 }) {\n-            Some(i) => PASSES[i].1,\n+        let plugin = match passes::PASSES.iter()\n+                                         .position(|&(p, ..)| {\n+                                             p == *pass\n+                                         }) {\n+            Some(i) => passes::PASSES[i].1,\n             None => {\n                 error!(\"unknown pass {}, skipping\", *pass);\n                 continue"}, {"sha": "a1b330e9b842349e72f68f3d37b7846a2723e5e0", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bd62c4c83d4b149353acb19b0cb501b682e04fdf/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd62c4c83d4b149353acb19b0cb501b682e04fdf/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=bd62c4c83d4b149353acb19b0cb501b682e04fdf", "patch": "@@ -16,6 +16,7 @@ use std::mem;\n use clean::{self, GetDefId, Item};\n use fold;\n use fold::FoldItem::Strip;\n+use plugins;\n \n mod collapse_docs;\n pub use self::collapse_docs::collapse_docs;\n@@ -32,6 +33,32 @@ pub use self::strip_priv_imports::strip_priv_imports;\n mod unindent_comments;\n pub use self::unindent_comments::unindent_comments;\n \n+type Pass = (&'static str,                                      // name\n+             fn(clean::Crate) -> plugins::PluginResult,         // fn\n+             &'static str);                                     // description\n+\n+pub const PASSES: &'static [Pass] = &[\n+    (\"strip-hidden\", strip_hidden,\n+     \"strips all doc(hidden) items from the output\"),\n+    (\"unindent-comments\", unindent_comments,\n+     \"removes excess indentation on comments in order for markdown to like it\"),\n+    (\"collapse-docs\", collapse_docs,\n+     \"concatenates all document attributes into one document attribute\"),\n+    (\"strip-private\", strip_private,\n+     \"strips all private items from a crate which cannot be seen externally, \\\n+      implies strip-priv-imports\"),\n+    (\"strip-priv-imports\", strip_priv_imports,\n+     \"strips all private import statements (`use`, `extern crate`) from a crate\"),\n+];\n+\n+pub const DEFAULT_PASSES: &'static [&'static str] = &[\n+    \"strip-hidden\",\n+    \"strip-private\",\n+    \"collapse-docs\",\n+    \"unindent-comments\",\n+];\n+\n+\n struct Stripper<'a> {\n     retained: &'a mut DefIdSet,\n     access_levels: &'a AccessLevels<DefId>,"}]}