{"sha": "cad4fcd21b0e620830b818037101e523323746ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZDRmY2QyMWIwZTYyMDgzMGI4MTgwMzcxMDFlNTIzMzIzNzQ2ZWE=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-01-30T23:29:36Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-01T05:43:09Z"}, "message": "Test for null buffer in CString.len()/.iter() and fail\n\nAlso change .as_str() to fail on null buffer.", "tree": {"sha": "f79fe9466bcface9ff3f7d724c840cfb1a361a2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f79fe9466bcface9ff3f7d724c840cfb1a361a2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cad4fcd21b0e620830b818037101e523323746ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cad4fcd21b0e620830b818037101e523323746ea", "html_url": "https://github.com/rust-lang/rust/commit/cad4fcd21b0e620830b818037101e523323746ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cad4fcd21b0e620830b818037101e523323746ea/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9f73b5e3d947c3b8ef8c3a8fbd30823ba099886", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9f73b5e3d947c3b8ef8c3a8fbd30823ba099886", "html_url": "https://github.com/rust-lang/rust/commit/a9f73b5e3d947c3b8ef8c3a8fbd30823ba099886"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "b7374b6f15d08ecb61ef81e8cda41fa49987adec", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/cad4fcd21b0e620830b818037101e523323746ea/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad4fcd21b0e620830b818037101e523323746ea/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=cad4fcd21b0e620830b818037101e523323746ea", "patch": "@@ -162,17 +162,25 @@ impl CString {\n     }\n \n     /// Converts the CString into a `&str` without copying.\n-    /// Returns None if the CString is not UTF-8 or is null.\n+    /// Returns None if the CString is not UTF-8.\n+    ///\n+    /// # Failure\n+    ///\n+    /// Fails if the CString is null.\n     #[inline]\n     pub fn as_str<'a>(&'a self) -> Option<&'a str> {\n-        if self.buf.is_null() { return None; }\n         let buf = self.as_bytes();\n         let buf = buf.slice_to(buf.len()-1); // chop off the trailing NUL\n         str::from_utf8(buf)\n     }\n \n     /// Return a CString iterator.\n+    ///\n+    /// # Failure\n+    ///\n+    /// Fails if the CString is null.\n     pub fn iter<'a>(&'a self) -> CChars<'a> {\n+        if self.buf.is_null() { fail!(\"CString is null!\"); }\n         CChars {\n             ptr: self.buf,\n             marker: marker::ContravariantLifetime,\n@@ -191,8 +199,14 @@ impl Drop for CString {\n }\n \n impl Container for CString {\n+    /// Return the number of bytes in the CString (not including the NUL terminator).\n+    ///\n+    /// # Failure\n+    ///\n+    /// Fails if the CString is null.\n     #[inline]\n     fn len(&self) -> uint {\n+        if self.buf.is_null() { fail!(\"CString is null!\"); }\n         unsafe {\n             ptr::position(self.buf, |c| *c == 0)\n         }\n@@ -562,8 +576,27 @@ mod tests {\n         assert_eq!(c_str.as_str(), Some(\"\"));\n         let c_str = bytes!(\"foo\", 0xff).to_c_str();\n         assert_eq!(c_str.as_str(), None);\n+    }\n+\n+    #[test]\n+    #[should_fail]\n+    fn test_as_str_fail() {\n         let c_str = unsafe { CString::new(ptr::null(), false) };\n-        assert_eq!(c_str.as_str(), None);\n+        c_str.as_str();\n+    }\n+\n+    #[test]\n+    #[should_fail]\n+    fn test_len_fail() {\n+        let c_str = unsafe { CString::new(ptr::null(), false) };\n+        c_str.len();\n+    }\n+\n+    #[test]\n+    #[should_fail]\n+    fn test_iter_fail() {\n+        let c_str = unsafe { CString::new(ptr::null(), false) };\n+        c_str.iter();\n     }\n }\n "}]}