{"sha": "50902bb3025ed9e583bf029c78406cb5b9abf7c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwOTAyYmIzMDI1ZWQ5ZTU4M2JmMDI5Yzc4NDA2Y2I1YjlhYmY3Yzc=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-12-21T05:15:25Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-25T02:29:01Z"}, "message": "Fix Option::unwrap_err.", "tree": {"sha": "86c3609dbf6c5c055d0f3d65a5670e382f7f3598", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86c3609dbf6c5c055d0f3d65a5670e382f7f3598"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50902bb3025ed9e583bf029c78406cb5b9abf7c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50902bb3025ed9e583bf029c78406cb5b9abf7c7", "html_url": "https://github.com/rust-lang/rust/commit/50902bb3025ed9e583bf029c78406cb5b9abf7c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50902bb3025ed9e583bf029c78406cb5b9abf7c7/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baa4379e5aa0d810304577b41dbe2b59d3030c20", "url": "https://api.github.com/repos/rust-lang/rust/commits/baa4379e5aa0d810304577b41dbe2b59d3030c20", "html_url": "https://github.com/rust-lang/rust/commit/baa4379e5aa0d810304577b41dbe2b59d3030c20"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e93d186049ecc90e9a9b9cadd58930bc038b5436", "filename": "src/libcore/result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50902bb3025ed9e583bf029c78406cb5b9abf7c7/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50902bb3025ed9e583bf029c78406cb5b9abf7c7/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=50902bb3025ed9e583bf029c78406cb5b9abf7c7", "patch": "@@ -234,7 +234,7 @@ impl<T, E> Result<T, E> {\n     pure fn unwrap(self) -> T { unwrap(self) }\n \n     #[inline(always)]\n-    pure fn unwrap_err(self) -> T { unwrap(self) }\n+    pure fn unwrap_err(self) -> E { unwrap_err(self) }\n \n     #[inline(always)]\n     pure fn chain<U>(self, op: fn(T) -> Result<U,E>) -> Result<U,E> {"}]}