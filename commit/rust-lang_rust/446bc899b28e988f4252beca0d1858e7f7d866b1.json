{"sha": "446bc899b28e988f4252beca0d1858e7f7d866b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NmJjODk5YjI4ZTk4OGY0MjUyYmVjYTBkMTg1OGU3ZjdkODY2YjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-11T15:00:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-11T15:00:35Z"}, "message": "Auto merge of #22175 - pnkfelix:featuregate-boxpat-rfc469, r=nikomatsakis\n\nFeature gate `box` patterns.\r\n\r\nNote that this adds a new feature gate, `box_patterns` specific to e.g. `let box i = ...`, while leaving  `box` expressions (alone) still guarded via the preexisting `box_syntax`.", "tree": {"sha": "8f5c4e248e34374d8b863a6e97e13ca9d9e50b64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f5c4e248e34374d8b863a6e97e13ca9d9e50b64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/446bc899b28e988f4252beca0d1858e7f7d866b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/446bc899b28e988f4252beca0d1858e7f7d866b1", "html_url": "https://github.com/rust-lang/rust/commit/446bc899b28e988f4252beca0d1858e7f7d866b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/446bc899b28e988f4252beca0d1858e7f7d866b1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1500df8934431dd7842827209528211ae53ded12", "url": "https://api.github.com/repos/rust-lang/rust/commits/1500df8934431dd7842827209528211ae53ded12", "html_url": "https://github.com/rust-lang/rust/commit/1500df8934431dd7842827209528211ae53ded12"}, {"sha": "cdd8a5ad743338d246e3db31ab0b5b0d448a2146", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdd8a5ad743338d246e3db31ab0b5b0d448a2146", "html_url": "https://github.com/rust-lang/rust/commit/cdd8a5ad743338d246e3db31ab0b5b0d448a2146"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "9c51f6bad6feea3e1caefbf8bd2135a0ec629399", "filename": "src/doc/reference.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -3196,6 +3196,7 @@ stands for a *single* data field, whereas a wildcard `..` stands for *all* the\n fields of a particular variant. For example:\n \n ```\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n enum List<X> { Nil, Cons(X, Box<List<X>>) }\n \n@@ -3259,6 +3260,7 @@ the inside of the match.\n An example of a `match` expression:\n \n ```\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n # fn process_pair(a: i32, b: i32) { }\n # fn process_ten() { }\n@@ -3294,6 +3296,7 @@ Subpatterns can also be bound to variables by the use of the syntax `variable @\n subpattern`. For example:\n \n ```\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n enum List { Nil, Cons(uint, Box<List>) }"}, {"sha": "0dd48fcfab6e5ca89739b3ce0b89686b187febe7", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -24,6 +24,7 @@\n \n #![feature(alloc)]\n #![feature(box_syntax)]\n+#![feature(box_patterns)]\n #![feature(core)]\n #![feature(hash)]\n #![feature(staged_api)]"}, {"sha": "a4c4ea5438691b2d4ffa7b12818b0b58870326a9", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -23,6 +23,7 @@\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://doc.rust-lang.org/nightly/\")]\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(collections)]\n #![feature(core)]"}, {"sha": "c4d1416d975cce8345c262a03c2796a1efa15fc3", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -24,6 +24,7 @@\n       html_root_url = \"http://doc.rust-lang.org/nightly/\")]\n \n #![feature(alloc)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(collections)]\n #![feature(core)]"}, {"sha": "d490ea5408d779b170f4469e076c3d7d72a134bf", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -74,6 +74,7 @@ This API is completely unstable and subject to change.\n \n #![allow(non_camel_case_types)]\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(collections)]\n #![feature(core)]"}, {"sha": "0253aaa31ca3678b180006feb14df11ca202a0bd", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -18,6 +18,7 @@\n        html_root_url = \"http://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(collections)]\n #![feature(core)]"}, {"sha": "1a328f87c19681a0ab4f6cb809fbb1de2f77a1b5", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -126,6 +126,9 @@ static KNOWN_FEATURES: &'static [(&'static str, &'static str, Status)] = &[\n \n     // Allows using #![no_std]\n     (\"no_std\", \"1.0.0\", Active),\n+\n+    // Allows using `box` in patterns; RFC 469\n+    (\"box_patterns\", \"1.0.0\", Active),\n ];\n \n enum Status {\n@@ -427,7 +430,7 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n             ast::ExprBox(..) | ast::ExprUnary(ast::UnOp::UnUniq, _) => {\n                 self.gate_feature(\"box_syntax\",\n                                   e.span,\n-                                  \"box expression syntax is experimental in alpha release; \\\n+                                  \"box expression syntax is experimental; \\\n                                    you can call `Box::new` instead.\");\n             }\n             ast::ExprLit(ref lit) => {\n@@ -486,9 +489,9 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                                    `[0, ..xs, 0]` are experimental\")\n             }\n             ast::PatBox(..) => {\n-                self.gate_feature(\"box_syntax\",\n+                self.gate_feature(\"box_patterns\",\n                                   pattern.span,\n-                                  \"box pattern syntax is experimental in alpha release\");\n+                                  \"box pattern syntax is experimental\");\n             }\n             _ => {}\n         }"}, {"sha": "951e4dcf79254a3a1aa0b4101f264e4319368129", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -23,6 +23,7 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/nightly/\")]\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(collections)]\n #![feature(core)]"}, {"sha": "8fb527b3242fbd0d3037368fd83ecbd5c639909d", "filename": "src/test/compile-fail/borrowck-loan-in-overloaded-op.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-in-overloaded-op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-in-overloaded-op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-in-overloaded-op.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n use std::ops::Add;"}, {"sha": "b471439f751ffdb3e1d5938eedb8dbac38c753c9", "filename": "src/test/compile-fail/borrowck-vec-pattern-nesting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![feature(advanced_slice_patterns)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n fn a() {"}, {"sha": "f2e068cc4ff1b7d6856ceba972e3c1a92b1bab8d", "filename": "src/test/compile-fail/destructure-trait-ref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fdestructure-trait-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fdestructure-trait-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdestructure-trait-ref.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -11,6 +11,7 @@\n // The regression test for #15031 to make sure destructuring trait\n // reference work properly.\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n trait T {}"}, {"sha": "39f54be4561692b21185563ff02d1ea47c138124", "filename": "src/test/compile-fail/feature-gate-box-expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -11,13 +11,13 @@\n fn main() {\n     use std::boxed::HEAP;\n \n-    let x = box 'c'; //~ ERROR box expression syntax is experimental in alpha release\n+    let x = box 'c'; //~ ERROR box expression syntax is experimental\n     println!(\"x: {}\", x);\n \n-    let x = box () 'c'; //~ ERROR box expression syntax is experimental in alpha release\n+    let x = box () 'c'; //~ ERROR box expression syntax is experimental\n     println!(\"x: {}\", x);\n \n-    let x = box (HEAP) 'c'; //~ ERROR box expression syntax is experimental in alpha release\n+    let x = box (HEAP) 'c'; //~ ERROR box expression syntax is experimental\n     println!(\"x: {}\", x);\n }\n "}, {"sha": "e64081823e74c444ba225ee9fc5853e190e0ee2a", "filename": "src/test/compile-fail/feature-gate-box-pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-pat.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n fn main() {\n-    let box x = Box::new('c'); //~ ERROR box pattern syntax is experimental in alpha release\n+    let box x = Box::new('c'); //~ ERROR box pattern syntax is experimental\n     println!(\"x: {}\", x);\n }"}, {"sha": "1978068575b95340900a797d4dfa8176f7543f40", "filename": "src/test/compile-fail/issue-12116.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fissue-12116.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fissue-12116.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12116.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n enum IntList {"}, {"sha": "b25e683db09065f94ddf961c9dd9396414f0138f", "filename": "src/test/compile-fail/issue-3601.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fissue-3601.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fissue-3601.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3601.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n struct HTMLImageData {"}, {"sha": "9a398796d2abf5cfb7dd7b5be7898ebe98839ebe", "filename": "src/test/compile-fail/issue-4972.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fissue-4972.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fissue-4972.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4972.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n trait MyTrait { }"}, {"sha": "35096110e8f43a30fd1d76c0e1bc24b4ec15707b", "filename": "src/test/compile-fail/issue-5100.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n enum A { B, C }"}, {"sha": "a1e876594c25d84572ace18778a27945969fe123", "filename": "src/test/compile-fail/moves-based-on-type-block-bad.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -10,6 +10,7 @@\n \n // ignore-tidy-linelength\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n struct S {"}, {"sha": "bc8060e3915d393b85348aec863ce7b24fef804c", "filename": "src/test/compile-fail/regions-ref-in-fn-arg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fregions-ref-in-fn-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Fregions-ref-in-fn-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-ref-in-fn-arg.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n fn arg_item(box ref x: Box<isize>) -> &'static isize {"}, {"sha": "6434b0bde8d3fff95a61782933e28641bc57f855", "filename": "src/test/compile-fail/unreachable-arm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Funreachable-arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fcompile-fail%2Funreachable-arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funreachable-arm.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -10,6 +10,7 @@\n \n // error-pattern:unreachable pattern\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n enum foo { a(Box<foo>, isize), b(usize), }"}, {"sha": "77b29389338bbd35db66f9d687ce1499fa1b5956", "filename": "src/test/debuginfo/destructured-fn-argument.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -311,6 +311,7 @@\n // lldb-command:continue\n \n #![allow(unused_variables)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n #![omit_gdb_pretty_printer_section]\n "}, {"sha": "37e465e43c3bd2ee83e71b2e0dbc9f4be93bb42d", "filename": "src/test/debuginfo/destructured-for-loop-variable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -153,6 +153,7 @@\n // lldb-command:continue\n \n #![allow(unused_variables)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n #![omit_gdb_pretty_printer_section]\n "}, {"sha": "eaa2382501b7bd0320d13cd3eb024662f477d46d", "filename": "src/test/debuginfo/destructured-local.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -244,6 +244,7 @@\n \n \n #![allow(unused_variables)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n #![omit_gdb_pretty_printer_section]\n "}, {"sha": "ae5734a09b3cd6fe618680c883ece68cb567ab22", "filename": "src/test/run-pass/borrowck-macro-interaction-issue-6304.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fborrowck-macro-interaction-issue-6304.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fborrowck-macro-interaction-issue-6304.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-macro-interaction-issue-6304.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -11,6 +11,7 @@\n // Check that we do not ICE when compiling this\n // macro, which reuses the expression `$id`\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n struct Foo {"}, {"sha": "b5bf35a7006a33a95682a2ed112fcdb119b00797", "filename": "src/test/run-pass/cleanup-rvalue-scopes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -12,6 +12,7 @@\n // statement or end of block, as appropriate given the temporary\n // lifetime rules.\n \n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n use std::ops::Drop;"}, {"sha": "5d44a9461bebcbaf7d30511917e84ea04f3ed0c8", "filename": "src/test/run-pass/func-arg-ref-pattern.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Ffunc-arg-ref-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Ffunc-arg-ref-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffunc-arg-ref-pattern.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -15,6 +15,7 @@\n // pattern.\n \n #![allow(unknown_features)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n fn getaddr(box ref x: Box<uint>) -> *const uint {"}, {"sha": "b99a5b7ab37c51198f1a18e3f15f086a5de5f419", "filename": "src/test/run-pass/issue-11552.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fissue-11552.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fissue-11552.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11552.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![allow(unknown_features)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n #[derive(Clone)]"}, {"sha": "26661302242bc9c20622aa6ee684d56576aff153", "filename": "src/test/run-pass/issue-16774.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fissue-16774.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fissue-16774.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16774.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -10,6 +10,7 @@\n \n #![allow(unknown_features)]\n #![feature(box_syntax)]\n+#![feature(box_patterns)]\n #![feature(unboxed_closures)]\n \n use std::ops::{Deref, DerefMut};"}, {"sha": "30c166cc67b9f45eacc6f26abfd4546e8bd94cbf", "filename": "src/test/run-pass/issue-21033.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fissue-21033.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fissue-21033.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-21033.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -7,6 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n enum E {"}, {"sha": "b9f4f1cf3bd51fafb7134062bc07121bbbba0661", "filename": "src/test/run-pass/issue-6557.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fissue-6557.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fissue-6557.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-6557.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![allow(unknown_features)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n fn foo(box (_x, _y): Box<(int, int)>) {}"}, {"sha": "78b02d709e2929d15b84e4aaf4194a1d195d9732", "filename": "src/test/run-pass/match-unique-bind.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fmatch-unique-bind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fmatch-unique-bind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-unique-bind.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![allow(unknown_features)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n pub fn main() {"}, {"sha": "b51be0f0f79f7d0f0bde57e4ed6f90dd56ba30d2", "filename": "src/test/run-pass/regions-dependent-addr-of.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fregions-dependent-addr-of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Fregions-dependent-addr-of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-dependent-addr-of.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -12,6 +12,7 @@\n // Issue #3148.\n \n #![allow(unknown_features)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n struct A {"}, {"sha": "9e71e850b3d4f69eefeb73d562a79d6ecb73e543", "filename": "src/test/run-pass/unique-destructure.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Funique-destructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Funique-destructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-destructure.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![allow(unknown_features)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n struct Foo { a: int, b: int }"}, {"sha": "826ba8c8cdd13d3bf9bab27ba8f472d3797d9024", "filename": "src/test/run-pass/unique-pat-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Funique-pat-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Funique-pat-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-pat-2.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![allow(unknown_features)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n struct Foo {a: int, b: uint}"}, {"sha": "bff2d4e917faee1211040a869f3eb158bb84392d", "filename": "src/test/run-pass/unique-pat.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Funique-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446bc899b28e988f4252beca0d1858e7f7d866b1/src%2Ftest%2Frun-pass%2Funique-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-pat.rs?ref=446bc899b28e988f4252beca0d1858e7f7d866b1", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![allow(unknown_features)]\n+#![feature(box_patterns)]\n #![feature(box_syntax)]\n \n fn simple() {"}]}