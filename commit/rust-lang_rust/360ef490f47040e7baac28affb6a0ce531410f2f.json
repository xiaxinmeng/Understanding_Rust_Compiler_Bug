{"sha": "360ef490f47040e7baac28affb6a0ce531410f2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MGVmNDkwZjQ3MDQwZTdiYWFjMjhhZmZiNmEwY2U1MzE0MTBmMmY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-12-06T15:16:22Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-12-06T15:16:22Z"}, "message": "supply a real \"caller\" span to drop calls", "tree": {"sha": "b5bd77610f540445b7a49e66bba4abe12a4a16a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5bd77610f540445b7a49e66bba4abe12a4a16a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/360ef490f47040e7baac28affb6a0ce531410f2f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYRtZGAAoJEFbW7qD8Z6xGA5IQAJv3LWxMvzSNYOMpWoipYpvJ\nmwJdJbauA5PD74aPpOqzbyGsmTAOa28BVY5vxjnCK6UdhuHsl7JxgXo9Uycq5Q+E\n+23dAGbWMKhvY0bRl1mXzXDGY84im4hR0DGPyAHSEMR2T26tUVEHIBAQRJnW+3dW\nomBZ4POqkfPwhX3vLdKRSipy6qyTfq9JQLZ6b633UKjSd2hdRpPDfhgJVfUo9iZ6\nKmFpBq+6bCu/UVEBbr1g0WHGWcGYlnZLkvYLSvPr1bUvWRFzw65hLSbk8CSFgfzv\nkfi7vX+OJ10NW0UhqVZYmpoxH0r8zO5BbjGGxsKBsa6tAjrJWalZNQ70RG/Tn0dz\nIMOzDJtzJKRf/WoxRd8U1/i1BijAhs3J/2zVRcdTxhx02xqx1ul6OGgVaNp0GuPK\nP0Pljn3c4daOK2X4t1WNL1oDuIONbDTKZ4lva1W0OThilLQygvEBwgUXilFk3Ldb\n51aLQdGWxEWcoen/CSiHPxSM4En8F1qA/eDFOeggikANSdaPz72Du4oXzORY2tWE\nBeJ4Uzil9hSgIkyYq0wzK+OhqV4yn8Jxva4vnBNCRS09EmE8m4KkTnNUrtm69v5G\nTblTTu1QDFA6XSyJzURhbaq+B9nXjbXYc5OmQJxesTCS5ChSSqbaudl7yMV+4dgF\nLvZ1RxZIDk0wkIC+2gl6\n=hV61\n-----END PGP SIGNATURE-----", "payload": "tree b5bd77610f540445b7a49e66bba4abe12a4a16a8\nparent c303ac001d7c2a47c12a93918d9b73aab5906da6\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1481037382 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1481037382 +0100\n\nsupply a real \"caller\" span to drop calls"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/360ef490f47040e7baac28affb6a0ce531410f2f", "html_url": "https://github.com/rust-lang/rust/commit/360ef490f47040e7baac28affb6a0ce531410f2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/360ef490f47040e7baac28affb6a0ce531410f2f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c303ac001d7c2a47c12a93918d9b73aab5906da6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c303ac001d7c2a47c12a93918d9b73aab5906da6", "html_url": "https://github.com/rust-lang/rust/commit/c303ac001d7c2a47c12a93918d9b73aab5906da6"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "9c7b13adf76b6ba9a72f7fe07d41384c56b56ba7", "filename": "src/interpreter/terminator/intrinsics.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/360ef490f47040e7baac28affb6a0ce531410f2f/src%2Finterpreter%2Fterminator%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360ef490f47040e7baac28affb6a0ce531410f2f/src%2Finterpreter%2Fterminator%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fterminator%2Fintrinsics.rs?ref=360ef490f47040e7baac28affb6a0ce531410f2f", "patch": "@@ -190,11 +190,15 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 };\n                 let mut drops = Vec::new();\n                 self.drop(lvalue, ty, &mut drops)?;\n+                let span = {\n+                    let frame = self.frame();\n+                    frame.mir[frame.block].terminator().source_info.span\n+                };\n                 // need to change the block before pushing the drop impl stack frames\n                 // we could do this for all intrinsics before evaluating the intrinsics, but if\n                 // the evaluation fails, we should not have moved forward\n                 self.goto_block(target);\n-                return self.eval_drop_impls(drops);\n+                return self.eval_drop_impls(drops, span);\n             }\n \n             \"fabsf32\" => {"}, {"sha": "0b80b633829c5a1265769b65b950a5f6eb75f9df", "filename": "src/interpreter/terminator/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/360ef490f47040e7baac28affb6a0ce531410f2f/src%2Finterpreter%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360ef490f47040e7baac28affb6a0ce531410f2f/src%2Finterpreter%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fterminator%2Fmod.rs?ref=360ef490f47040e7baac28affb6a0ce531410f2f", "patch": "@@ -118,7 +118,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 let mut drops = Vec::new();\n                 self.drop(lval, ty, &mut drops)?;\n                 self.goto_block(target);\n-                self.eval_drop_impls(drops)?;\n+                self.eval_drop_impls(drops, terminator.source_info.span)?;\n             }\n \n             Assert { ref cond, expected, ref msg, target, .. } => {\n@@ -151,12 +151,10 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         Ok(())\n     }\n \n-    pub fn eval_drop_impls(&mut self, drops: Vec<(DefId, Value, &'tcx Substs<'tcx>)>) -> EvalResult<'tcx, ()> {\n-        let span = self.frame().span;\n+    pub fn eval_drop_impls(&mut self, drops: Vec<(DefId, Value, &'tcx Substs<'tcx>)>, span: Span) -> EvalResult<'tcx, ()> {\n         // add them to the stack in reverse order, because the impl that needs to run the last\n         // is the one that needs to be at the bottom of the stack\n         for (drop_def_id, self_arg, substs) in drops.into_iter().rev() {\n-            // FIXME: supply a real span\n             let mir = self.load_mir(drop_def_id)?;\n             trace!(\"substs for drop glue: {:?}\", substs);\n             self.push_stack_frame("}]}