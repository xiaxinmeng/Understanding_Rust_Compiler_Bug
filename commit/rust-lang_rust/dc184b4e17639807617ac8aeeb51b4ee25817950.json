{"sha": "dc184b4e17639807617ac8aeeb51b4ee25817950", "node_id": "C_kwDOAAsO6NoAKGRjMTg0YjRlMTc2Mzk4MDc2MTdhYzhhZWViNTFiNGVlMjU4MTc5NTA", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-04-29T13:55:54Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-05-05T08:53:00Z"}, "message": "remove unnecessary check", "tree": {"sha": "be139a3af542a404c194d8aaf411e56e1e01a0d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be139a3af542a404c194d8aaf411e56e1e01a0d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc184b4e17639807617ac8aeeb51b4ee25817950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc184b4e17639807617ac8aeeb51b4ee25817950", "html_url": "https://github.com/rust-lang/rust/commit/dc184b4e17639807617ac8aeeb51b4ee25817950", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc184b4e17639807617ac8aeeb51b4ee25817950/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "209dd2cb0a1cab685b9facdbbd8b62c796f58380", "url": "https://api.github.com/repos/rust-lang/rust/commits/209dd2cb0a1cab685b9facdbbd8b62c796f58380", "html_url": "https://github.com/rust-lang/rust/commit/209dd2cb0a1cab685b9facdbbd8b62c796f58380"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "8c2e91ab8f1e9ea5dfa1bdff284a8f60bb73c5f9", "filename": "compiler/rustc_typeck/src/coherence/inherent_impls.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc184b4e17639807617ac8aeeb51b4ee25817950/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc184b4e17639807617ac8aeeb51b4ee25817950/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls.rs?ref=dc184b4e17639807617ac8aeeb51b4ee25817950", "patch": "@@ -137,9 +137,7 @@ impl<'tcx> InherentCollect<'tcx> {\n             return;\n         }\n \n-        if self.tcx.features().rustc_attrs\n-            && self.tcx.has_attr(def_id, sym::rustc_has_incoherent_inherent_impls)\n-        {\n+        if self.tcx.has_attr(def_id, sym::rustc_has_incoherent_inherent_impls) {\n             let hir::ItemKind::Impl(hir::Impl { items, .. }) = item.kind else {\n                 bug!(\"expected `impl` item: {:?}\", item);\n             };"}]}