{"sha": "5276a7d3be01687e3ea7054ec103711587c9d36e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNzZhN2QzYmUwMTY4N2UzZWE3MDU0ZWMxMDM3MTE1ODdjOWQzNmU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2017-12-28T22:21:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2017-12-28T22:21:54Z"}, "message": "Grammar in ron", "tree": {"sha": "c8b4d79a49cc74c3dd1a588b636196e1bcfa311c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8b4d79a49cc74c3dd1a588b636196e1bcfa311c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5276a7d3be01687e3ea7054ec103711587c9d36e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5276a7d3be01687e3ea7054ec103711587c9d36e", "html_url": "https://github.com/rust-lang/rust/commit/5276a7d3be01687e3ea7054ec103711587c9d36e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5276a7d3be01687e3ea7054ec103711587c9d36e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e1e8ed34a46738dda507a4a0f4e73065be74e57", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e1e8ed34a46738dda507a4a0f4e73065be74e57", "html_url": "https://github.com/rust-lang/rust/commit/5e1e8ed34a46738dda507a4a0f4e73065be74e57"}], "stats": {"total": 111, "additions": 104, "deletions": 7}, "files": [{"sha": "0afd4d3277b47e61744b0598b2ab8c9ac69fcdb4", "filename": "Cargo.toml", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5276a7d3be01687e3ea7054ec103711587c9d36e/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5276a7d3be01687e3ea7054ec103711587c9d36e/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=5276a7d3be01687e3ea7054ec103711587c9d36e", "patch": "@@ -3,6 +3,11 @@ name = \"libsyntax2\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n \n-[dev-dependencies]\n+[dependencies]\n+serde = \"1.0.26\"\n+serde_derive = \"1.0.26\"\n file = \"1.1.1\"\n+ron = \"0.1.5\"\n+\n+[dev-dependencies]\n difference = \"1.0.0\""}, {"sha": "18c382536e18afc2f2671fb02733239db538c39e", "filename": "grammar.ron", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5276a7d3be01687e3ea7054ec103711587c9d36e/grammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/5276a7d3be01687e3ea7054ec103711587c9d36e/grammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/grammar.ron?ref=5276a7d3be01687e3ea7054ec103711587c9d36e", "patch": "@@ -0,0 +1,6 @@\n+Grammar(\n+    syntax_kinds: [\n+        \"IDENT\",\n+        \"WHITESPACE\",\n+    ]\n+)\n\\ No newline at end of file"}, {"sha": "d3539321e04f2ea9800b35a3ba2e26a3c98e04e0", "filename": "src/bin/gen.rs", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/5276a7d3be01687e3ea7054ec103711587c9d36e/src%2Fbin%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5276a7d3be01687e3ea7054ec103711587c9d36e/src%2Fbin%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fgen.rs?ref=5276a7d3be01687e3ea7054ec103711587c9d36e", "patch": "@@ -0,0 +1,82 @@\n+extern crate serde;\n+#[macro_use]\n+extern crate serde_derive;\n+\n+extern crate ron;\n+extern crate file;\n+\n+use std::path::PathBuf;\n+use std::ascii::AsciiExt;\n+use std::fmt::Write;\n+\n+fn main() {\n+    let grammar = Grammar::read();\n+    let text = grammar.to_syntax_kinds();\n+    file::put_text(&generated_file(), &text).unwrap();\n+}\n+\n+#[derive(Deserialize)]\n+struct Grammar {\n+    syntax_kinds: Vec<String>,\n+}\n+\n+impl Grammar {\n+    fn read() -> Grammar {\n+        let text = file::get_text(&grammar_file()).unwrap();\n+        ron::de::from_str(&text).unwrap()\n+    }\n+\n+    fn to_syntax_kinds(&self) -> String {\n+        let mut acc = String::new();\n+        acc.push_str(\"// Generated from grammar.ron\\n\");\n+        acc.push_str(\"use tree::{SyntaxKind, SyntaxInfo};\\n\");\n+        acc.push_str(\"\\n\");\n+        for (idx, kind) in self.syntax_kinds.iter().enumerate() {\n+            let sname = scream(kind);\n+            write!(\n+                acc,\n+                \"pub const {}: SyntaxKind = SyntaxKind({});\\n\",\n+                sname, idx\n+            ).unwrap();\n+        }\n+        acc.push_str(\"\\n\");\n+        for kind in self.syntax_kinds.iter() {\n+            let sname = scream(kind);\n+            write!(\n+                acc,\n+                \"static {sname}_INFO: SyntaxInfo = SyntaxInfo {{\\n   name: \\\"{sname}\\\",\\n}};\\n\",\n+                sname = sname\n+            ).unwrap();\n+        }\n+        acc.push_str(\"\\n\");\n+\n+        acc.push_str(\"pub(crate) fn syntax_info(kind: SyntaxKind) -> &'static SyntaxInfo {\\n\");\n+        acc.push_str(\"    match kind {\\n\");\n+        for kind in self.syntax_kinds.iter() {\n+            let sname = scream(kind);\n+            write!(\n+                acc,\n+                \"        {sname} => &{sname}_INFO,\\n\",\n+                sname = sname\n+            ).unwrap();\n+        }\n+        acc.push_str(\"        _ => unreachable!()\\n\");\n+        acc.push_str(\"    }\\n\");\n+        acc.push_str(\"}\\n\");\n+        acc\n+    }\n+}\n+\n+fn grammar_file() -> PathBuf {\n+    let dir = env!(\"CARGO_MANIFEST_DIR\");\n+    PathBuf::from(dir).join(\"grammar.ron\")\n+}\n+\n+fn generated_file() -> PathBuf {\n+    let dir = env!(\"CARGO_MANIFEST_DIR\");\n+    PathBuf::from(dir).join(\"src/syntax_kinds.rs\")\n+}\n+\n+fn scream(word: &str) -> String {\n+    word.chars().map(|c| c.to_ascii_uppercase()).collect()\n+}\n\\ No newline at end of file"}, {"sha": "a5485c4c17f5b645ab1aa67a05da85d79834d974", "filename": "src/syntax_kinds.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5276a7d3be01687e3ea7054ec103711587c9d36e/src%2Fsyntax_kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5276a7d3be01687e3ea7054ec103711587c9d36e/src%2Fsyntax_kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds.rs?ref=5276a7d3be01687e3ea7054ec103711587c9d36e", "patch": "@@ -1,16 +1,20 @@\n+// Generated from grammar.ron\n use tree::{SyntaxKind, SyntaxInfo};\n \n-pub const IDENT: SyntaxKind = SyntaxKind(1);\n-pub const WHITESPACE: SyntaxKind = SyntaxKind(2);\n-\n+pub const IDENT: SyntaxKind = SyntaxKind(0);\n+pub const WHITESPACE: SyntaxKind = SyntaxKind(1);\n \n static IDENT_INFO: SyntaxInfo = SyntaxInfo {\n-    name: \"IDENT\",\n+   name: \"IDENT\",\n+};\n+static WHITESPACE_INFO: SyntaxInfo = SyntaxInfo {\n+   name: \"WHITESPACE\",\n };\n \n pub(crate) fn syntax_info(kind: SyntaxKind) -> &'static SyntaxInfo {\n     match kind {\n         IDENT => &IDENT_INFO,\n-        _ => unreachable!(),\n+        WHITESPACE => &WHITESPACE_INFO,\n+        _ => unreachable!()\n     }\n-}\n\\ No newline at end of file\n+}"}]}