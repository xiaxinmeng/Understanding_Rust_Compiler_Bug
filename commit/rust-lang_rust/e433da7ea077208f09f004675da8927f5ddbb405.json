{"sha": "e433da7ea077208f09f004675da8927f5ddbb405", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0MzNkYTdlYTA3NzIwOGYwOWYwMDQ2NzVkYTg5MjdmNWRkYmI0MDU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-12-15T09:17:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-15T09:17:38Z"}, "message": "Rollup merge of #56760 - estebank:dedup-bounds, r=oli-obk\n\nDeduplicate unsatisfied trait bounds\n\nFix #35677.", "tree": {"sha": "9c13dcd3e8a956f6e2a6cb12dcc1708302af8762", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c13dcd3e8a956f6e2a6cb12dcc1708302af8762"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e433da7ea077208f09f004675da8927f5ddbb405", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcFMayCRBK7hj4Ov3rIwAAdHIIADSRXfgRsX6s+17THCoMs9h3\n3hcYKqCsqKjj6yyXairV5m1jLxqVukoc7R6skJS89Q2f51+9CSVnOC3F9cqEYAHO\n7qIZ0zQfiSbAg6jhdQdFy8bdgE5JuI+5zZYssqW052NQpCHkVe7pROm0KuRHTaKn\nvvsYq8JtWYySUgffxOAYPl8nx9oy1yfN1ChkKrj/84apYgR7ruoNfVFpteMZnijg\niEQfoEduGeB7xcX4HM0/aTApNpJGOBNoHC8suzotMxiDLxMH0PczxrkpTjjUvhIU\ncPXnv0UcPtHAQ3b87VNuv2xyX19RI69sInMq6qpDmenG8u4iCnaTaOn7xO//TNs=\n=6O3l\n-----END PGP SIGNATURE-----\n", "payload": "tree 9c13dcd3e8a956f6e2a6cb12dcc1708302af8762\nparent 050bb10dc3e1d1c6a0aee3c50955d401658dece5\nparent a39f184437243eaa3a37fd5fed2fb02dbd6c607d\nauthor Pietro Albini <pietro@pietroalbini.org> 1544865458 +0100\ncommitter GitHub <noreply@github.com> 1544865458 +0100\n\nRollup merge of #56760 - estebank:dedup-bounds, r=oli-obk\n\nDeduplicate unsatisfied trait bounds\n\nFix #35677.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e433da7ea077208f09f004675da8927f5ddbb405", "html_url": "https://github.com/rust-lang/rust/commit/e433da7ea077208f09f004675da8927f5ddbb405", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e433da7ea077208f09f004675da8927f5ddbb405/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "050bb10dc3e1d1c6a0aee3c50955d401658dece5", "url": "https://api.github.com/repos/rust-lang/rust/commits/050bb10dc3e1d1c6a0aee3c50955d401658dece5", "html_url": "https://github.com/rust-lang/rust/commit/050bb10dc3e1d1c6a0aee3c50955d401658dece5"}, {"sha": "a39f184437243eaa3a37fd5fed2fb02dbd6c607d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a39f184437243eaa3a37fd5fed2fb02dbd6c607d", "html_url": "https://github.com/rust-lang/rust/commit/a39f184437243eaa3a37fd5fed2fb02dbd6c607d"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "09063579c4214b73d0943616820efb3238be4457", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e433da7ea077208f09f004675da8927f5ddbb405/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e433da7ea077208f09f004675da8927f5ddbb405/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=e433da7ea077208f09f004675da8927f5ddbb405", "patch": "@@ -424,10 +424,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 }\n \n                 if !unsatisfied_predicates.is_empty() {\n-                    let bound_list = unsatisfied_predicates.iter()\n+                    let mut bound_list = unsatisfied_predicates.iter()\n                         .map(|p| format!(\"`{} : {}`\", p.self_ty(), p))\n-                        .collect::<Vec<_>>()\n-                        .join(\"\\n\");\n+                        .collect::<Vec<_>>();\n+                    bound_list.sort();\n+                    bound_list.dedup();  // #35677\n+                    let bound_list = bound_list.join(\"\\n\");\n                     err.note(&format!(\"the method `{}` exists but the following trait bounds \\\n                                        were not satisfied:\\n{}\",\n                                       item_name,"}, {"sha": "ed6b325a01d4d9872006924120008a38dc0b6962", "filename": "src/test/ui/issues/issue-31173.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e433da7ea077208f09f004675da8927f5ddbb405/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e433da7ea077208f09f004675da8927f5ddbb405/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr?ref=e433da7ea077208f09f004675da8927f5ddbb405", "patch": "@@ -14,8 +14,8 @@ LL |         .collect(); //~ ERROR no method named `collect`\n    |          ^^^^^^^\n    |\n    = note: the method `collect` exists but the following trait bounds were not satisfied:\n-           `std::iter::Cloned<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:16:39: 19:6 found_e:_]>> : std::iter::Iterator`\n            `&mut std::iter::Cloned<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:16:39: 19:6 found_e:_]>> : std::iter::Iterator`\n+           `std::iter::Cloned<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:16:39: 19:6 found_e:_]>> : std::iter::Iterator`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "46d3f7e4af00b0f0b7e2683bdfcd917243a34556", "filename": "src/test/ui/issues/issue-35677.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e433da7ea077208f09f004675da8927f5ddbb405/src%2Ftest%2Fui%2Fissues%2Fissue-35677.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e433da7ea077208f09f004675da8927f5ddbb405/src%2Ftest%2Fui%2Fissues%2Fissue-35677.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35677.rs?ref=e433da7ea077208f09f004675da8927f5ddbb405", "patch": "@@ -0,0 +1,5 @@\n+use std::collections::HashMap;\n+fn intersect_map<K, V>(this: &mut HashMap<K, V>, other: HashMap<K, V>) -> bool {\n+    this.drain()\n+    //~^ ERROR no method named\n+}"}, {"sha": "dca096b93f5f3f27a48783b4adce9d5257637d57", "filename": "src/test/ui/issues/issue-35677.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e433da7ea077208f09f004675da8927f5ddbb405/src%2Ftest%2Fui%2Fissues%2Fissue-35677.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e433da7ea077208f09f004675da8927f5ddbb405/src%2Ftest%2Fui%2Fissues%2Fissue-35677.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35677.stderr?ref=e433da7ea077208f09f004675da8927f5ddbb405", "patch": "@@ -0,0 +1,18 @@\n+error[E0601]: `main` function not found in crate `issue_35677`\n+   |\n+   = note: consider adding a `main` function to `$DIR/issue-35677.rs`\n+\n+error[E0599]: no method named `drain` found for type `&mut std::collections::HashMap<K, V>` in the current scope\n+  --> $DIR/issue-35677.rs:3:10\n+   |\n+LL |     this.drain()\n+   |          ^^^^^\n+   |\n+   = note: the method `drain` exists but the following trait bounds were not satisfied:\n+           `K : std::cmp::Eq`\n+           `K : std::hash::Hash`\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0599, E0601.\n+For more information about an error, try `rustc --explain E0599`."}, {"sha": "1fbac9d688140aff535cce2402488793b39691b3", "filename": "src/test/ui/mismatched_types/issue-36053-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e433da7ea077208f09f004675da8927f5ddbb405/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e433da7ea077208f09f004675da8927f5ddbb405/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr?ref=e433da7ea077208f09f004675da8927f5ddbb405", "patch": "@@ -5,8 +5,8 @@ LL |     once::<&str>(\"str\").fuse().filter(|a: &str| true).count();\n    |                                                       ^^^^^\n    |\n    = note: the method `count` exists but the following trait bounds were not satisfied:\n-           `std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:17:39: 17:53]> : std::iter::Iterator`\n            `&mut std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:17:39: 17:53]> : std::iter::Iterator`\n+           `std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:17:39: 17:53]> : std::iter::Iterator`\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/issue-36053-2.rs:17:32"}]}