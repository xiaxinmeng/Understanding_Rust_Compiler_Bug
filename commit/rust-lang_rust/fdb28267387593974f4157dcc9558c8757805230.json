{"sha": "fdb28267387593974f4157dcc9558c8757805230", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYjI4MjY3Mzg3NTkzOTc0ZjQxNTdkY2M5NTU4Yzg3NTc4MDUyMzA=", "commit": {"author": {"name": "Eric Findlay", "email": "e.findlay@protonmail.com", "date": "2015-10-28T01:39:22Z"}, "committer": {"name": "Eric Findlay", "email": "e.findlay@protonmail.com", "date": "2015-10-28T01:39:22Z"}, "message": "Added try! example to documentation.md", "tree": {"sha": "7f17d3fa0264125531a2df38552ee77a4fbcd495", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f17d3fa0264125531a2df38552ee77a4fbcd495"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdb28267387593974f4157dcc9558c8757805230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdb28267387593974f4157dcc9558c8757805230", "html_url": "https://github.com/rust-lang/rust/commit/fdb28267387593974f4157dcc9558c8757805230", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdb28267387593974f4157dcc9558c8757805230/comments", "author": null, "committer": null, "parents": [{"sha": "e0e262737478b695d115519f7856e475c17f84e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e262737478b695d115519f7856e475c17f84e1", "html_url": "https://github.com/rust-lang/rust/commit/e0e262737478b695d115519f7856e475c17f84e1"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "e130109e35492ddcc7eb68687d6a95aedcf79d72", "filename": "src/doc/trpl/documentation.md", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fdb28267387593974f4157dcc9558c8757805230/src%2Fdoc%2Ftrpl%2Fdocumentation.md", "raw_url": "https://github.com/rust-lang/rust/raw/fdb28267387593974f4157dcc9558c8757805230/src%2Fdoc%2Ftrpl%2Fdocumentation.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fdocumentation.md?ref=fdb28267387593974f4157dcc9558c8757805230", "patch": "@@ -373,6 +373,36 @@ we can add the `#[macro_use]` attribute. Second, we\u2019ll need to add our own\n `main()` as well. Finally, a judicious use of `#` to comment out those two\n things, so they don\u2019t show up in the output.\n \n+Another case where the use of `#` is handy is when you want to ignore\n+error handling. Lets say you want the following,\n+\n+```rust\n+/// use std::io;\n+/// let mut input = String::new(); \n+/// try!(io::stdin().read_line(&mut input));\n+```\n+\n+The problem is that `try!` returns a `Result<T, E>` and test functions\n+don't return anything so this will give a mismatched types error.\n+\n+```rust\n+/// A doc test using try!\n+///\n+/// ```\n+/// use std::io;\n+/// # fn f() -> io::Result<()> {\n+/// let mut input = String::new(); \n+/// try!(io::stdin().read_line(&mut input));\n+/// # Ok(())\n+/// # }\n+/// # f();\n+/// ```\n+```\n+\n+You can get around this by wrapping the code in a function. This catches\n+and swallows the `Result<T, E>` when running tests on the docs. This\n+pattern appears regularly in the standard library.\n+\n ### Running documentation tests\n \n To run the tests, either:"}]}