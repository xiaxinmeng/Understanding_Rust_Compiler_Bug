{"sha": "66b65043dfd2662c42e9d92d751b55e7b9bbff10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YjY1MDQzZGZkMjY2MmM0MmU5ZDkyZDc1MWI1NWU3YjliYmZmMTA=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-03-10T02:16:32Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-03-10T05:52:52Z"}, "message": "Simplify some of the rendering code in the index\n\nIt's kinda silly using serde seq for fixed-length stuff.", "tree": {"sha": "27f5c15108dbd3f30263e88603c4dd9adbae643c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27f5c15108dbd3f30263e88603c4dd9adbae643c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66b65043dfd2662c42e9d92d751b55e7b9bbff10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66b65043dfd2662c42e9d92d751b55e7b9bbff10", "html_url": "https://github.com/rust-lang/rust/commit/66b65043dfd2662c42e9d92d751b55e7b9bbff10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66b65043dfd2662c42e9d92d751b55e7b9bbff10/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e40b3d6a3875fced1e11d5cc952cd3081c5f2710", "url": "https://api.github.com/repos/rust-lang/rust/commits/e40b3d6a3875fced1e11d5cc952cd3081c5f2710", "html_url": "https://github.com/rust-lang/rust/commit/e40b3d6a3875fced1e11d5cc952cd3081c5f2710"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "a4621fb8ed5555b4dc4adadb8c8dc831b8d17dd2", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66b65043dfd2662c42e9d92d751b55e7b9bbff10/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66b65043dfd2662c42e9d92d751b55e7b9bbff10/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=66b65043dfd2662c42e9d92d751b55e7b9bbff10", "patch": "@@ -286,11 +286,7 @@ impl Serialize for TypeWithKind {\n     where\n         S: Serializer,\n     {\n-        let mut seq = serializer.serialize_seq(None)?;\n-        seq.serialize_element(&self.ty.name)?;\n-        let x: ItemType = self.kind.into();\n-        seq.serialize_element(&x)?;\n-        seq.end()\n+        (&self.ty.name, ItemType::from(self.kind)).serialize(serializer)\n     }\n }\n "}]}