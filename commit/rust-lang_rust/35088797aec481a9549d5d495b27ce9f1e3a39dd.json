{"sha": "35088797aec481a9549d5d495b27ce9f1e3a39dd", "node_id": "C_kwDOAAsO6NoAKDM1MDg4Nzk3YWVjNDgxYTk1NDlkNWQ0OTViMjdjZTlmMWUzYTM5ZGQ", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-03-18T02:29:23Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-03-18T02:55:49Z"}, "message": "Use `size_of_val` instead of manual calculation\n\nVery minor thing that I happened to notice in passing, but it's both shorter and means it gets `mul nuw`, so why not.", "tree": {"sha": "3149b05bf9937c72534e6c884a14e3a36def1be3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3149b05bf9937c72534e6c884a14e3a36def1be3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35088797aec481a9549d5d495b27ce9f1e3a39dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35088797aec481a9549d5d495b27ce9f1e3a39dd", "html_url": "https://github.com/rust-lang/rust/commit/35088797aec481a9549d5d495b27ce9f1e3a39dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35088797aec481a9549d5d495b27ce9f1e3a39dd/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4b9f86054c581d931f8bad0c87523c53e1e8e3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4b9f86054c581d931f8bad0c87523c53e1e8e3f", "html_url": "https://github.com/rust-lang/rust/commit/e4b9f86054c581d931f8bad0c87523c53e1e8e3f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c34f1dbf8569da79ebbfdb083e20f68f95745de2", "filename": "compiler/rustc_codegen_ssa/src/glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35088797aec481a9549d5d495b27ce9f1e3a39dd/compiler%2Frustc_codegen_ssa%2Fsrc%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35088797aec481a9549d5d495b27ce9f1e3a39dd/compiler%2Frustc_codegen_ssa%2Fsrc%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fglue.rs?ref=35088797aec481a9549d5d495b27ce9f1e3a39dd", "patch": "@@ -46,7 +46,7 @@ pub fn size_and_align_of_dst<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n                 // NOTE: ideally, we want the effects of both `unchecked_smul` and `unchecked_umul`\n                 // (resulting in `mul nsw nuw` in LLVM IR), since we know that the multiplication\n                 // cannot signed wrap, and that both operands are non-negative. But at the time of writing,\n-                // `BuilderMethods` can't do this, and it doesn't seem to enable any further optimizations.\n+                // the `LLVM-C` binding can't do this, and it doesn't seem to enable any further optimizations.\n                 bx.unchecked_smul(info.unwrap(), bx.const_usize(unit.size.bytes())),\n                 bx.const_usize(unit.align.abi.bytes()),\n             )"}, {"sha": "540831c8253358b03a227716d2dd0cff84aee259", "filename": "library/core/src/hash/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35088797aec481a9549d5d495b27ce9f1e3a39dd/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35088797aec481a9549d5d495b27ce9f1e3a39dd/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs?ref=35088797aec481a9549d5d495b27ce9f1e3a39dd", "patch": "@@ -834,7 +834,7 @@ mod impls {\n \n                 #[inline]\n                 fn hash_slice<H: ~const Hasher>(data: &[$ty], state: &mut H) {\n-                    let newlen = data.len() * mem::size_of::<$ty>();\n+                    let newlen = mem::size_of_val(data);\n                     let ptr = data.as_ptr() as *const u8;\n                     // SAFETY: `ptr` is valid and aligned, as this macro is only used\n                     // for numeric primitives which have no padding. The new slice only"}]}