{"sha": "39ed64399e842ec80eadb4eeb620154df6cc6130", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZWQ2NDM5OWU4NDJlYzgwZWFkYjRlZWI2MjAxNTRkZjZjYzYxMzA=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-03-18T21:50:58Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-03-21T19:10:54Z"}, "message": "Enable mutable noalias by default for LLVM 12\n\nWe don't have any known noalias bugs for LLVM 12 ... yet.", "tree": {"sha": "7409578d22fccd65360a653b450bd8e9ff0679b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7409578d22fccd65360a653b450bd8e9ff0679b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39ed64399e842ec80eadb4eeb620154df6cc6130", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39ed64399e842ec80eadb4eeb620154df6cc6130", "html_url": "https://github.com/rust-lang/rust/commit/39ed64399e842ec80eadb4eeb620154df6cc6130", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39ed64399e842ec80eadb4eeb620154df6cc6130/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3f9403f590ac8989bc50f933541a6234e391747", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3f9403f590ac8989bc50f933541a6234e391747", "html_url": "https://github.com/rust-lang/rust/commit/c3f9403f590ac8989bc50f933541a6234e391747"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "854e3ccc21b4fa75efe7bcd92e72fd105fa9d153", "filename": "compiler/rustc_codegen_llvm/src/abi.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/39ed64399e842ec80eadb4eeb620154df6cc6130/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39ed64399e842ec80eadb4eeb620154df6cc6130/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs?ref=39ed64399e842ec80eadb4eeb620154df6cc6130", "patch": "@@ -1,6 +1,7 @@\n use crate::builder::Builder;\n use crate::context::CodegenCx;\n use crate::llvm::{self, AttributePlace};\n+use crate::llvm_util;\n use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n@@ -51,18 +52,15 @@ pub trait ArgAttributesExt {\n }\n \n fn should_use_mutable_noalias(cx: &CodegenCx<'_, '_>) -> bool {\n-    // Previously we would only emit noalias annotations for LLVM >= 6 or in\n-    // panic=abort mode. That was deemed right, as prior versions had many bugs\n-    // in conjunction with unwinding, but later versions didn\u2019t seem to have\n-    // said issues. See issue #31681.\n-    //\n-    // Alas, later on we encountered a case where noalias would generate wrong\n-    // code altogether even with recent versions of LLVM in *safe* code with no\n-    // unwinding involved. See #54462.\n-    //\n-    // For now, do not enable mutable_noalias by default at all, while the\n-    // issue is being figured out.\n-    cx.tcx.sess.opts.debugging_opts.mutable_noalias.unwrap_or(false)\n+    // LLVM prior to version 12 has known miscompiles in the presence of\n+    // noalias attributes (see #54878). Only enable mutable noalias by\n+    // default for versions we believe to be safe.\n+    cx.tcx\n+        .sess\n+        .opts\n+        .debugging_opts\n+        .mutable_noalias\n+        .unwrap_or_else(|| llvm_util::get_version() >= (12, 0, 0))\n }\n \n impl ArgAttributesExt for ArgAttributes {"}, {"sha": "517051b200b51a1d43b3e18c96573932fd118776", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39ed64399e842ec80eadb4eeb620154df6cc6130/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39ed64399e842ec80eadb4eeb620154df6cc6130/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=39ed64399e842ec80eadb4eeb620154df6cc6130", "patch": "@@ -998,7 +998,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     mir_opt_level: Option<usize> = (None, parse_opt_uint, [TRACKED],\n         \"MIR optimization level (0-4; default: 1 in non optimized builds and 2 in optimized builds)\"),\n     mutable_noalias: Option<bool> = (None, parse_opt_bool, [TRACKED],\n-        \"emit noalias metadata for mutable references (default: no)\"),\n+        \"emit noalias metadata for mutable references (default: yes for LLVM >= 12, otherwise no)\"),\n     new_llvm_pass_manager: bool = (false, parse_bool, [TRACKED],\n         \"use new LLVM pass manager (default: no)\"),\n     nll_facts: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "215e36c5a7af3325735f652c2c3c8c5e0c31e466", "filename": "src/test/codegen/function-arguments.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/39ed64399e842ec80eadb4eeb620154df6cc6130/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39ed64399e842ec80eadb4eeb620154df6cc6130/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs?ref=39ed64399e842ec80eadb4eeb620154df6cc6130", "patch": "@@ -43,13 +43,13 @@ pub fn named_borrow<'r>(_: &'r i32) {\n pub fn unsafe_borrow(_: &UnsafeInner) {\n }\n \n-// CHECK: @mutable_unsafe_borrow(i16* align 2 dereferenceable(2) %_1)\n+// CHECK: @mutable_unsafe_borrow(i16* noalias align 2 dereferenceable(2) %_1)\n // ... unless this is a mutable borrow, those never alias\n #[no_mangle]\n pub fn mutable_unsafe_borrow(_: &mut UnsafeInner) {\n }\n \n-// CHECK: @mutable_borrow(i32* align 4 dereferenceable(4) %_1)\n+// CHECK: @mutable_borrow(i32* noalias align 4 dereferenceable(4) %_1)\n // FIXME #25759 This should also have `nocapture`\n #[no_mangle]\n pub fn mutable_borrow(_: &mut i32) {\n@@ -94,7 +94,7 @@ pub fn helper(_: usize) {\n pub fn slice(_: &[u8]) {\n }\n \n-// CHECK: @mutable_slice([0 x i8]* nonnull align 1 %_1.0, [[USIZE]] %_1.1)\n+// CHECK: @mutable_slice([0 x i8]* noalias nonnull align 1 %_1.0, [[USIZE]] %_1.1)\n // FIXME #25759 This should also have `nocapture`\n #[no_mangle]\n pub fn mutable_slice(_: &mut [u8]) {"}]}