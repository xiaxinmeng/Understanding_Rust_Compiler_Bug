{"sha": "e447b73f39312a7afc69ecf0bb02e09014e2f393", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NDdiNzNmMzkzMTJhN2FmYzY5ZWNmMGJiMDJlMDkwMTRlMmYzOTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-06T19:23:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-06T19:23:06Z"}, "message": "Auto merge of #38792 - jseyfried:improve_macros_11_diagnostics, r=nikomatsakis\n\nproc macros 1.1: improve diagnostics\n\nFixes #38586.\nr? @nrc", "tree": {"sha": "5ab37b91332113795cdd2e189c8e9f651c72fc83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ab37b91332113795cdd2e189c8e9f651c72fc83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e447b73f39312a7afc69ecf0bb02e09014e2f393", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e447b73f39312a7afc69ecf0bb02e09014e2f393", "html_url": "https://github.com/rust-lang/rust/commit/e447b73f39312a7afc69ecf0bb02e09014e2f393", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e447b73f39312a7afc69ecf0bb02e09014e2f393/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a28701a928f8d6ab0299b10708441f7234ba7133", "url": "https://api.github.com/repos/rust-lang/rust/commits/a28701a928f8d6ab0299b10708441f7234ba7133", "html_url": "https://github.com/rust-lang/rust/commit/a28701a928f8d6ab0299b10708441f7234ba7133"}, {"sha": "fd532a160822d58ae28d81c8396e2d1f0b691e09", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd532a160822d58ae28d81c8396e2d1f0b691e09", "html_url": "https://github.com/rust-lang/rust/commit/fd532a160822d58ae28d81c8396e2d1f0b691e09"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "7bce00ebcab9529ab2a5589251e50980e2a39109", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e447b73f39312a7afc69ecf0bb02e09014e2f393/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e447b73f39312a7afc69ecf0bb02e09014e2f393/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=e447b73f39312a7afc69ecf0bb02e09014e2f393", "patch": "@@ -542,19 +542,19 @@ pub fn noop_fold_arg<T: Folder>(Arg {id, pat, ty}: Arg, fld: &mut T) -> Arg {\n pub fn noop_fold_tt<T: Folder>(tt: &TokenTree, fld: &mut T) -> TokenTree {\n     match *tt {\n         TokenTree::Token(span, ref tok) =>\n-            TokenTree::Token(span, fld.fold_token(tok.clone())),\n+            TokenTree::Token(fld.new_span(span), fld.fold_token(tok.clone())),\n         TokenTree::Delimited(span, ref delimed) => {\n-            TokenTree::Delimited(span, Rc::new(\n+            TokenTree::Delimited(fld.new_span(span), Rc::new(\n                             Delimited {\n                                 delim: delimed.delim,\n-                                open_span: delimed.open_span,\n+                                open_span: fld.new_span(delimed.open_span),\n                                 tts: fld.fold_tts(&delimed.tts),\n-                                close_span: delimed.close_span,\n+                                close_span: fld.new_span(delimed.close_span),\n                             }\n                         ))\n         },\n         TokenTree::Sequence(span, ref seq) =>\n-            TokenTree::Sequence(span,\n+            TokenTree::Sequence(fld.new_span(span),\n                        Rc::new(SequenceRepetition {\n                            tts: fld.fold_tts(&seq.tts),\n                            separator: seq.separator.clone().map(|tok| fld.fold_token(tok)),\n@@ -647,7 +647,7 @@ pub fn noop_fold_fn_decl<T: Folder>(decl: P<FnDecl>, fld: &mut T) -> P<FnDecl> {\n         inputs: inputs.move_map(|x| fld.fold_arg(x)),\n         output: match output {\n             FunctionRetTy::Ty(ty) => FunctionRetTy::Ty(fld.fold_ty(ty)),\n-            FunctionRetTy::Default(span) => FunctionRetTy::Default(span),\n+            FunctionRetTy::Default(span) => FunctionRetTy::Default(fld.new_span(span)),\n         },\n         variadic: variadic\n     })\n@@ -674,7 +674,7 @@ pub fn noop_fold_ty_param<T: Folder>(tp: TyParam, fld: &mut T) -> TyParam {\n         ident: fld.fold_ident(ident),\n         bounds: fld.fold_bounds(bounds),\n         default: default.map(|x| fld.fold_ty(x)),\n-        span: span\n+        span: fld.new_span(span),\n     }\n }\n "}, {"sha": "10da846a86c5f1e593249e4249ab0bac35d9b8d6", "filename": "src/test/compile-fail-fulldeps/proc-macro/auxiliary/issue_38586.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e447b73f39312a7afc69ecf0bb02e09014e2f393/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue_38586.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e447b73f39312a7afc69ecf0bb02e09014e2f393/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue_38586.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue_38586.rs?ref=e447b73f39312a7afc69ecf0bb02e09014e2f393", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+// no-prefer-dynamic\n+\n+#![feature(proc_macro, proc_macro_lib)]\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+#[proc_macro_derive(A)]\n+pub fn derive_a(_: proc_macro::TokenStream) -> proc_macro::TokenStream {\n+    \"fn f() { println!(\\\"{}\\\", foo); }\".parse().unwrap()\n+}"}, {"sha": "42475e6de90c982178efac63a4c3cde5685f6edd", "filename": "src/test/compile-fail-fulldeps/proc-macro/issue-38586.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e447b73f39312a7afc69ecf0bb02e09014e2f393/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fissue-38586.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e447b73f39312a7afc69ecf0bb02e09014e2f393/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fissue-38586.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fissue-38586.rs?ref=e447b73f39312a7afc69ecf0bb02e09014e2f393", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue_38586.rs\n+\n+#![feature(proc_macro)]\n+\n+#[macro_use]\n+extern crate issue_38586;\n+\n+#[derive(A)] //~ ERROR `foo`\n+struct A;\n+\n+fn main() {}"}]}