{"sha": "72fe70f2f8aee9556166ba0f984a29d19a485e61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZmU3MGYyZjhhZWU5NTU2MTY2YmEwZjk4NGEyOWQxOWE0ODVlNjE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-26T14:25:08Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-26T14:30:50Z"}, "message": "Make VFS join methods fallible", "tree": {"sha": "dd41903d8f15ea095a46fa52c0f0b23eed73a802", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd41903d8f15ea095a46fa52c0f0b23eed73a802"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72fe70f2f8aee9556166ba0f984a29d19a485e61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72fe70f2f8aee9556166ba0f984a29d19a485e61", "html_url": "https://github.com/rust-lang/rust/commit/72fe70f2f8aee9556166ba0f984a29d19a485e61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72fe70f2f8aee9556166ba0f984a29d19a485e61/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38cd1b70e8d4b8f57ac2ae0702cf4728764094d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/38cd1b70e8d4b8f57ac2ae0702cf4728764094d9", "html_url": "https://github.com/rust-lang/rust/commit/38cd1b70e8d4b8f57ac2ae0702cf4728764094d9"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "7536842011ec23f22a7be98bd86950f21a338c0f", "filename": "crates/ra_hir_def/src/nameres/tests/mod_resolution.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/72fe70f2f8aee9556166ba0f984a29d19a485e61/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72fe70f2f8aee9556166ba0f984a29d19a485e61/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs?ref=72fe70f2f8aee9556166ba0f984a29d19a485e61", "patch": "@@ -334,6 +334,22 @@ fn module_resolution_relative_path_2() {\n     \"###);\n }\n \n+#[test]\n+fn module_resolution_relative_path_outside_root() {\n+    let map = def_map(\n+        r###\"\n+        //- /main.rs\n+\n+        #[path=\"../../../../../outside.rs\"]\n+        mod foo;\n+        \"###,\n+    );\n+\n+    assert_snapshot!(map, @r###\"\n+        \u22eecrate\n+    \"###);\n+}\n+\n #[test]\n fn module_resolution_explicit_path_mod_rs_2() {\n     let map = def_map("}, {"sha": "28daec5a3a826e4b2be15ccdfe049a09ccab02ee", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72fe70f2f8aee9556166ba0f984a29d19a485e61/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72fe70f2f8aee9556166ba0f984a29d19a485e61/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=72fe70f2f8aee9556166ba0f984a29d19a485e61", "patch": "@@ -213,7 +213,7 @@ impl GlobalStateSnapshot {\n     pub(crate) fn anchored_path(&self, file_id: FileId, path: &str) -> Url {\n         let mut base = self.vfs.read().0.file_path(file_id);\n         base.pop();\n-        let path = base.join(path);\n+        let path = base.join(path).unwrap();\n         let path = path.as_path().unwrap();\n         url_from_abs_path(&path)\n     }"}, {"sha": "d0ddeafe7c2de37537def443cd600e28ed1bae64", "filename": "crates/vfs/src/file_set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72fe70f2f8aee9556166ba0f984a29d19a485e61/crates%2Fvfs%2Fsrc%2Ffile_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72fe70f2f8aee9556166ba0f984a29d19a485e61/crates%2Fvfs%2Fsrc%2Ffile_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Ffile_set.rs?ref=72fe70f2f8aee9556166ba0f984a29d19a485e61", "patch": "@@ -18,7 +18,7 @@ impl FileSet {\n     pub fn resolve_path(&self, anchor: FileId, path: &str) -> Option<FileId> {\n         let mut base = self.paths[&anchor].clone();\n         base.pop();\n-        let path = base.join(path);\n+        let path = base.join(path)?;\n         let res = self.files.get(&path).copied();\n         res\n     }"}, {"sha": "dc3031ada4fa305e2b332fb6c1cef5650ea73bb8", "filename": "crates/vfs/src/vfs_path.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/72fe70f2f8aee9556166ba0f984a29d19a485e61/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72fe70f2f8aee9556166ba0f984a29d19a485e61/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Fvfs_path.rs?ref=72fe70f2f8aee9556166ba0f984a29d19a485e61", "patch": "@@ -22,15 +22,15 @@ impl VfsPath {\n             VfsPathRepr::VirtualPath(_) => None,\n         }\n     }\n-    pub fn join(&self, path: &str) -> VfsPath {\n+    pub fn join(&self, path: &str) -> Option<VfsPath> {\n         match &self.0 {\n             VfsPathRepr::PathBuf(it) => {\n                 let res = it.join(path).normalize();\n-                VfsPath(VfsPathRepr::PathBuf(res))\n+                Some(VfsPath(VfsPathRepr::PathBuf(res)))\n             }\n             VfsPathRepr::VirtualPath(it) => {\n-                let res = it.join(path);\n-                VfsPath(VfsPathRepr::VirtualPath(res))\n+                let res = it.join(path)?;\n+                Some(VfsPath(VfsPathRepr::VirtualPath(res)))\n             }\n         }\n     }\n@@ -101,13 +101,15 @@ impl VirtualPath {\n         self.0 = self.0[..pos].to_string();\n         true\n     }\n-    fn join(&self, mut path: &str) -> VirtualPath {\n+    fn join(&self, mut path: &str) -> Option<VirtualPath> {\n         let mut res = self.clone();\n         while path.starts_with(\"../\") {\n-            assert!(res.pop());\n+            if !res.pop() {\n+                return None;\n+            }\n             path = &path[\"../\".len()..]\n         }\n         res.0 = format!(\"{}/{}\", res.0, path);\n-        res\n+        Some(res)\n     }\n }"}]}