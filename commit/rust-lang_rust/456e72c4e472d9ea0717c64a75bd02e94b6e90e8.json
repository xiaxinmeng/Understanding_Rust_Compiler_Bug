{"sha": "456e72c4e472d9ea0717c64a75bd02e94b6e90e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NmU3MmM0ZTQ3MmQ5ZWEwNzE3YzY0YTc1YmQwMmU5NGI2ZTkwZTg=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2019-08-11T14:03:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-25T09:55:56Z"}, "message": "Change test to not rely on trait inference", "tree": {"sha": "c2448602a56091b97506bd0c27839e315d38f317", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2448602a56091b97506bd0c27839e315d38f317"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/456e72c4e472d9ea0717c64a75bd02e94b6e90e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/456e72c4e472d9ea0717c64a75bd02e94b6e90e8", "html_url": "https://github.com/rust-lang/rust/commit/456e72c4e472d9ea0717c64a75bd02e94b6e90e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/456e72c4e472d9ea0717c64a75bd02e94b6e90e8/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a40e390860987a23f9b899abc5947f1525d3709c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a40e390860987a23f9b899abc5947f1525d3709c", "html_url": "https://github.com/rust-lang/rust/commit/a40e390860987a23f9b899abc5947f1525d3709c"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "9841fbdf329eb2c3aa2c8f06d24a2520a9db2cf7", "filename": "crates/ra_ide_api/src/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/456e72c4e472d9ea0717c64a75bd02e94b6e90e8/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456e72c4e472d9ea0717c64a75bd02e94b6e90e8/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs?ref=456e72c4e472d9ea0717c64a75bd02e94b6e90e8", "patch": "@@ -285,34 +285,29 @@ fn div(x: i32, y: i32) -> Result<i32, String> {\n     fn test_wrap_return_type_handles_generic_functions() {\n         let before = r#\"\n             //- /main.rs\n-            use std::{default::Default, result::Result::{self, Ok, Err}};\n+            use std::result::Result::{self, Ok, Err};\n \n-            fn div<T: Default, i32>(x: i32) -> Result<T, i32> {\n+            fn div<T>(x: T) -> Result<T, i32> {\n                 if x == 0 {\n                     return Err(7);\n                 }\n-                T::default()\n+                x\n             }\n \n             //- /std/lib.rs\n             pub mod result {\n                 pub enum Result<T, E> { Ok(T), Err(E) }\n             }\n-            pub mod default {\n-                pub trait Default {\n-                    fn default() -> Self;\n-                }\n-            }\n         \"#;\n // The formatting here is a bit odd due to how the parse_fixture function works in test_utils -\n // it strips empty lines and leading whitespace. The important part of this test is that the final\n-// `x / y` expr is now wrapped in `Ok(..)`\n-        let after = r#\"use std::{default::Default, result::Result::{self, Ok, Err}};\n-fn div<T: Default>(x: i32) -> Result<T, i32> {\n+// expr is now wrapped in `Ok(..)`\n+        let after = r#\"use std::result::Result::{self, Ok, Err};\n+fn div<T>(x: T) -> Result<T, i32> {\n     if x == 0 {\n         return Err(7);\n     }\n-    Ok(T::default())\n+    Ok(x)\n }\n \"#;\n         check_apply_diagnostic_fix_for_target_file(\"/main.rs\", before, after);"}]}