{"sha": "d7ee04c5c4f18cf56ddbe3f1b1758f3657cd6830", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZWUwNGM1YzRmMThjZjU2ZGRiZTNmMWIxNzU4ZjM2NTdjZDY4MzA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-30T15:58:04Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-31T00:36:48Z"}, "message": "rollup merge of #18442 : Manishearth/rust_panic", "tree": {"sha": "3b1be65e4e213bffb5780cb76559ad91b8c9a7ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b1be65e4e213bffb5780cb76559ad91b8c9a7ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7ee04c5c4f18cf56ddbe3f1b1758f3657cd6830", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7ee04c5c4f18cf56ddbe3f1b1758f3657cd6830", "html_url": "https://github.com/rust-lang/rust/commit/d7ee04c5c4f18cf56ddbe3f1b1758f3657cd6830", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7ee04c5c4f18cf56ddbe3f1b1758f3657cd6830/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c03068b7ae38c16b1758b5a28967f8daf2ec456", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c03068b7ae38c16b1758b5a28967f8daf2ec456", "html_url": "https://github.com/rust-lang/rust/commit/8c03068b7ae38c16b1758b5a28967f8daf2ec456"}, {"sha": "13d19bbf10068e0c8c0f42079e9ce18ca86ba108", "url": "https://api.github.com/repos/rust-lang/rust/commits/13d19bbf10068e0c8c0f42079e9ce18ca86ba108", "html_url": "https://github.com/rust-lang/rust/commit/13d19bbf10068e0c8c0f42079e9ce18ca86ba108"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "940a4ca6db7b3e9b4709d80e36dd063a305b91b3", "filename": "src/doc/complement-bugreport.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7ee04c5c4f18cf56ddbe3f1b1758f3657cd6830/src%2Fdoc%2Fcomplement-bugreport.md", "raw_url": "https://github.com/rust-lang/rust/raw/d7ee04c5c4f18cf56ddbe3f1b1758f3657cd6830/src%2Fdoc%2Fcomplement-bugreport.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fcomplement-bugreport.md?ref=d7ee04c5c4f18cf56ddbe3f1b1758f3657cd6830", "patch": "@@ -47,7 +47,7 @@ release: 0.12.0\n ```\n \n Finally, if you can run the offending command under gdb, pasting a stack trace can be\n-useful; to do so, you will need to set a breakpoint on `rust_fail`.\n+useful; to do so, you will need to set a breakpoint on `rust_panic`.\n \n # I submitted a bug, but nobody has commented on it!\n "}, {"sha": "c5fc0084ed9327dc5d8389e45c31245ee6f2ae8a", "filename": "src/librustrt/unwind.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d7ee04c5c4f18cf56ddbe3f1b1758f3657cd6830/src%2Flibrustrt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7ee04c5c4f18cf56ddbe3f1b1758f3657cd6830/src%2Flibrustrt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Funwind.rs?ref=d7ee04c5c4f18cf56ddbe3f1b1758f3657cd6830", "patch": "@@ -177,7 +177,7 @@ pub unsafe fn try(f: ||) -> ::core::result::Result<(), Box<Any + Send>> {\n // An uninlined, unmangled function upon which to slap yer breakpoints\n #[inline(never)]\n #[no_mangle]\n-fn rust_fail(cause: Box<Any + Send>) -> ! {\n+fn rust_panic(cause: Box<Any + Send>) -> ! {\n     rtdebug!(\"begin_unwind()\");\n \n     unsafe {\n@@ -588,7 +588,7 @@ fn begin_unwind_inner(msg: Box<Any + Send>, file_line: &(&'static str, uint)) ->\n     // (hopefully someone printed something about this).\n     let mut task: Box<Task> = match Local::try_take() {\n         Some(task) => task,\n-        None => rust_fail(msg),\n+        None => rust_panic(msg),\n     };\n \n     if task.unwinder.unwinding {\n@@ -605,7 +605,7 @@ fn begin_unwind_inner(msg: Box<Any + Send>, file_line: &(&'static str, uint)) ->\n     // requires the task. We need a handle to its unwinder, however, so after\n     // this we unsafely extract it and continue along.\n     Local::put(task);\n-    rust_fail(msg);\n+    rust_panic(msg);\n }\n \n /// Register a callback to be invoked when a task unwinds."}]}