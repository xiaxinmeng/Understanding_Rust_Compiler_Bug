{"sha": "48019c5b0a1d61dbac957b50b9c208b963a723a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MDE5YzViMGExZDYxZGJhYzk1N2I1MGI5YzIwOGI5NjNhNzIzYTM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-08T01:04:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-08T01:04:30Z"}, "message": "doc: typo", "tree": {"sha": "5ab5c2650b03e5d3826491432f338fb7a1df8e81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ab5c2650b03e5d3826491432f338fb7a1df8e81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48019c5b0a1d61dbac957b50b9c208b963a723a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48019c5b0a1d61dbac957b50b9c208b963a723a3", "html_url": "https://github.com/rust-lang/rust/commit/48019c5b0a1d61dbac957b50b9c208b963a723a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48019c5b0a1d61dbac957b50b9c208b963a723a3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90c07f38c15215f11ee9dc60af9f91ce7bf76ea1", "url": "https://api.github.com/repos/rust-lang/rust/commits/90c07f38c15215f11ee9dc60af9f91ce7bf76ea1", "html_url": "https://github.com/rust-lang/rust/commit/90c07f38c15215f11ee9dc60af9f91ce7bf76ea1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5499ab37470d418f1de723ea98d4e6a597cc99d5", "filename": "doc/rust.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48019c5b0a1d61dbac957b50b9c208b963a723a3/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/48019c5b0a1d61dbac957b50b9c208b963a723a3/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=48019c5b0a1d61dbac957b50b9c208b963a723a3", "patch": "@@ -2784,7 +2784,7 @@ effects of the expression's evaluation.\n * Ref.Expr.Cont::               Expression for terminating a single loop iteration.\n * Ref.Expr.For::                Expression for looping over strings and vectors.\n * Ref.Expr.If::                 Expression for simple conditional branching.\n-* Ref.Expr.Alt::                Expression for branching on patterh matches.\n+* Ref.Expr.Alt::                Expression for branching on pattern matches.\n * Ref.Expr.Prove::              Expression for static assertion of typestate.\n * Ref.Expr.Check::              Expression for dynamic assertion of typestate.\n * Ref.Expr.Claim::              Expression for static (unsafe) or dynamic assertion of typestate."}]}