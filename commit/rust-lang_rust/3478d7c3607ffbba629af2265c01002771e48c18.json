{"sha": "3478d7c3607ffbba629af2265c01002771e48c18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NzhkN2MzNjA3ZmZiYmE2MjlhZjIyNjVjMDEwMDI3NzFlNDhjMTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-31T01:34:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-31T01:34:49Z"}, "message": "Auto merge of #76257 - JulianKnodt:i75777, r=Dylan-DPC\n\nAdd regression test\n\nThis adds a regression test for #75777, effectively closing it since it is solved on nightly and beta.\n\nCloses #75777", "tree": {"sha": "48620a4acb4e606b1753b40534cf0fdac2ba640b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48620a4acb4e606b1753b40534cf0fdac2ba640b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3478d7c3607ffbba629af2265c01002771e48c18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3478d7c3607ffbba629af2265c01002771e48c18", "html_url": "https://github.com/rust-lang/rust/commit/3478d7c3607ffbba629af2265c01002771e48c18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3478d7c3607ffbba629af2265c01002771e48c18/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d033dee3eff6e30c15c4c51958e219134dcc7bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d033dee3eff6e30c15c4c51958e219134dcc7bc", "html_url": "https://github.com/rust-lang/rust/commit/0d033dee3eff6e30c15c4c51958e219134dcc7bc"}, {"sha": "a7e8208074877d7056821c0548fc22bdde54350f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7e8208074877d7056821c0548fc22bdde54350f", "html_url": "https://github.com/rust-lang/rust/commit/a7e8208074877d7056821c0548fc22bdde54350f"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "98aacb1711906f1dec209235cce8d513ddbe8701", "filename": "src/test/ui/issues/issue-75777.nll.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3478d7c3607ffbba629af2265c01002771e48c18/src%2Ftest%2Fui%2Fissues%2Fissue-75777.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3478d7c3607ffbba629af2265c01002771e48c18/src%2Ftest%2Fui%2Fissues%2Fissue-75777.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-75777.nll.stderr?ref=3478d7c3607ffbba629af2265c01002771e48c18", "patch": "@@ -0,0 +1,13 @@\n+error: lifetime may not live long enough\n+  --> $DIR/issue-75777.rs:13:5\n+   |\n+LL | fn inject<'a, Env: 'a, A: 'a + Send>(v: A) -> Box<dyn FnOnce(&'a Env) -> BoxFuture<'a, A>> {\n+   |           -- lifetime `'a` defined here\n+LL |     let fut: BoxFuture<'a, A> = Box::pin(future::ready(v));\n+LL |     Box::new(move |_| fut)\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n+   |\n+   = help: consider replacing `'a` with `'static`\n+\n+error: aborting due to previous error\n+"}, {"sha": "291a3db093672c1632c47249fe6a64ccb8ea0539", "filename": "src/test/ui/issues/issue-75777.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3478d7c3607ffbba629af2265c01002771e48c18/src%2Ftest%2Fui%2Fissues%2Fissue-75777.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3478d7c3607ffbba629af2265c01002771e48c18/src%2Ftest%2Fui%2Fissues%2Fissue-75777.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-75777.rs?ref=3478d7c3607ffbba629af2265c01002771e48c18", "patch": "@@ -0,0 +1,17 @@\n+// Regression test for #75777.\n+// Checks that a boxed future can be properly constructed.\n+\n+#![feature(future_readiness_fns)]\n+\n+use std::future::{self, Future};\n+use std::pin::Pin;\n+\n+type BoxFuture<'a, T> = Pin<Box<dyn Future<Output = T> + 'a + Send>>;\n+\n+fn inject<'a, Env: 'a, A: 'a + Send>(v: A) -> Box<dyn FnOnce(&'a Env) -> BoxFuture<'a, A>> {\n+    let fut: BoxFuture<'a, A> = Box::pin(future::ready(v));\n+    Box::new(move |_| fut)\n+    //~^ ERROR: cannot infer an appropriate lifetime\n+}\n+\n+fn main() {}"}, {"sha": "16249a33c2fd07d78893fc8dfe3649b420925867", "filename": "src/test/ui/issues/issue-75777.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3478d7c3607ffbba629af2265c01002771e48c18/src%2Ftest%2Fui%2Fissues%2Fissue-75777.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3478d7c3607ffbba629af2265c01002771e48c18/src%2Ftest%2Fui%2Fissues%2Fissue-75777.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-75777.stderr?ref=3478d7c3607ffbba629af2265c01002771e48c18", "patch": "@@ -0,0 +1,30 @@\n+error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n+  --> $DIR/issue-75777.rs:13:14\n+   |\n+LL |     Box::new(move |_| fut)\n+   |              ^^^^^^^^^^^^\n+   |\n+note: first, the lifetime cannot outlive the lifetime `'a` as defined on the function body at 11:11...\n+  --> $DIR/issue-75777.rs:11:11\n+   |\n+LL | fn inject<'a, Env: 'a, A: 'a + Send>(v: A) -> Box<dyn FnOnce(&'a Env) -> BoxFuture<'a, A>> {\n+   |           ^^\n+note: ...so that the types are compatible\n+  --> $DIR/issue-75777.rs:13:14\n+   |\n+LL |     Box::new(move |_| fut)\n+   |              ^^^^^^^^^^^^\n+   = note: expected `(Pin<Box<dyn Future<Output = A> + Send>>,)`\n+              found `(Pin<Box<(dyn Future<Output = A> + Send + 'a)>>,)`\n+   = note: but, the lifetime must be valid for the static lifetime...\n+note: ...so that the expression is assignable\n+  --> $DIR/issue-75777.rs:13:5\n+   |\n+LL |     Box::new(move |_| fut)\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n+   = note: expected `Box<(dyn FnOnce(&'a Env) -> Pin<Box<(dyn Future<Output = A> + Send + 'a)>> + 'static)>`\n+              found `Box<dyn FnOnce(&'a Env) -> Pin<Box<(dyn Future<Output = A> + Send + 'a)>>>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0495`."}]}