{"sha": "19422fcbfe98ac1fa01175fedb4619db6774b129", "node_id": "C_kwDOAAsO6NoAKDE5NDIyZmNiZmU5OGFjMWZhMDExNzVmZWRiNDYxOWRiNjc3NGIxMjk", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-23T14:39:14Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-23T14:39:14Z"}, "message": "attempt to clarify what the backtrace belongs to when there could be ambiguity", "tree": {"sha": "bc73bcdbcba082aa41547b7e5eb578680ca1962a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc73bcdbcba082aa41547b7e5eb578680ca1962a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19422fcbfe98ac1fa01175fedb4619db6774b129", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19422fcbfe98ac1fa01175fedb4619db6774b129", "html_url": "https://github.com/rust-lang/rust/commit/19422fcbfe98ac1fa01175fedb4619db6774b129", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19422fcbfe98ac1fa01175fedb4619db6774b129/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4165be780904e52569c30b49fb6c5bcd0930261", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4165be780904e52569c30b49fb6c5bcd0930261", "html_url": "https://github.com/rust-lang/rust/commit/f4165be780904e52569c30b49fb6c5bcd0930261"}], "stats": {"total": 183, "additions": 93, "deletions": 90}, "files": [{"sha": "2087d0cb548fd4119aab10ea20a1896afc130a42", "filename": "src/tools/miri/src/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fdiagnostics.rs?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -362,23 +362,26 @@ fn report_msg<'tcx>(\n     }\n \n     // Show note and help messages.\n+    let mut extra_span = false;\n     for (span_data, note) in &notes {\n         if let Some(span_data) = span_data {\n             err.span_note(span_data.span(), note);\n+            extra_span = true;\n         } else {\n             err.note(note);\n         }\n     }\n     for (span_data, help) in &helps {\n         if let Some(span_data) = span_data {\n             err.span_help(span_data.span(), help);\n+            extra_span = true;\n         } else {\n             err.help(help);\n         }\n     }\n     if notes.len() + helps.len() > 0 {\n         // Add visual separator before backtrace.\n-        err.note(\"BACKTRACE:\");\n+        err.note(if extra_span { \"BACKTRACE (of the first span):\" } else { \"BACKTRACE:\" });\n     }\n     // Add backtrace\n     for (idx, frame_info) in stacktrace.iter().enumerate() {"}, {"sha": "fc946d6d39b3ef58a6823138c1bf8a180e328944", "filename": "src/tools/miri/tests/fail/box-cell-alias.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbox-cell-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbox-cell-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbox-cell-alias.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x1] by a Unique retag\n    |\n LL |     let res = helper(val, ptr);\n    |                      ^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `helper` at $DIR/box-cell-alias.rs:LL:CC\n note: inside `main`\n   --> $DIR/box-cell-alias.rs:LL:CC"}, {"sha": "59b3802416103a32e4a72bcc9b3f0c213eae0ed9", "filename": "src/tools/miri/tests/fail/data_race/alloc_read_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_read_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_read_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_read_race.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             pointer.store(Box::into_raw(Box::new_uninit()), Ordering::Relax\n    |                                         ^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/alloc_read_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "0564e4b5bf5080224dafcc1a8e2b67878d95f809", "filename": "src/tools/miri/tests/fail/data_race/alloc_write_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_write_race.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |                 .store(Box::into_raw(Box::<usize>::new_uninit()) as *mut us\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/alloc_write_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "ab7a6178102d5271f2f44a13c0511f897b3ebeb9", "filename": "src/tools/miri/tests/fail/data_race/atomic_read_na_write_race1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *(c.0 as *mut usize) = 32;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/atomic_read_na_write_race1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "cd8e095a6e2cd0fe8cff486bf714aff663331ef4", "filename": "src/tools/miri/tests/fail/data_race/atomic_read_na_write_race2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             atomic_ref.load(Ordering::SeqCst)\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/atomic_read_na_write_race2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "b339e5adf8f8a4d65d2221de9c03615fb832b141", "filename": "src/tools/miri/tests/fail/data_race/atomic_write_na_read_race1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             atomic_ref.store(32, Ordering::SeqCst)\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/atomic_write_na_read_race1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "39686203491c0d98549655efa2ed5be8dcc0985d", "filename": "src/tools/miri/tests/fail/data_race/atomic_write_na_read_race2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             let _val = *(c.0 as *mut usize);\n    |                        ^^^^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/atomic_write_na_read_race2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "fd360797d344cd265220b54d60fb00defd5d7a4c", "filename": "src/tools/miri/tests/fail/data_race/atomic_write_na_write_race1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *(c.0 as *mut usize) = 32;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/atomic_write_na_write_race1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "4e2494cf57b83fa442ebbe58279524586e1e476d", "filename": "src/tools/miri/tests/fail/data_race/atomic_write_na_write_race2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             atomic_ref.store(64, Ordering::SeqCst);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/atomic_write_na_write_race2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "aba051a2b63e26b482a3f98799b9a0104d21ce36", "filename": "src/tools/miri/tests/fail/data_race/dangling_thread_async_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *c.0 = 32;\n    |             ^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/dangling_thread_async_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "dc35ccf3545f3075c4affec2bae91392210abae8", "filename": "src/tools/miri/tests/fail/data_race/dangling_thread_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *c.0 = 32;\n    |             ^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/dangling_thread_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "fbeab37e17f66a1fa4a00e70a1db2b8a59ac597f", "filename": "src/tools/miri/tests/fail/data_race/dealloc_read_race1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ LL |             let _val = *ptr.0;\n    |                        ^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/dealloc_read_race1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "9ef9bf35ae756110d7bbd72151f0d19a1695da7f", "filename": "src/tools/miri/tests/fail/data_race/dealloc_read_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *pointer.load(Ordering::Acquire)\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/dealloc_read_race_stack.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "75a98cc5d7d9b6f0ddd8c6c56659c06bed37b911", "filename": "src/tools/miri/tests/fail/data_race/dealloc_write_race1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ LL |             *ptr.0 = 2;\n    |             ^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/dealloc_write_race1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "f2fc338b33f33bb42f56d2cefd28d82668a36879", "filename": "src/tools/miri/tests/fail/data_race/dealloc_write_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *pointer.load(Ordering::Acquire) = 3;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/dealloc_write_race_stack.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "620cb37859cdf59d6b778ea09db12e92bf1cd310", "filename": "src/tools/miri/tests/fail/data_race/enable_after_join_to_main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *c.0 = 32;\n    |             ^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/enable_after_join_to_main.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "0bd36067d95b98b65bc84bd971311c5a22bd9685", "filename": "src/tools/miri/tests/fail/data_race/fence_after_load.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Ffence_after_load.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Ffence_after_load.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Ffence_after_load.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |         unsafe { V = 1 }\n    |                  ^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/fence_after_load.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "0c0d2fa32c32fe800e23e2d7071a4648b6a8a541", "filename": "src/tools/miri/tests/fail/data_race/read_write_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             let _val = *c.0;\n    |                        ^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/read_write_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "e1d0a52d42acd923ce384e2ce28a1010cf592028", "filename": "src/tools/miri/tests/fail/data_race/read_write_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *pointer.load(Ordering::Acquire) = 3;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/read_write_race_stack.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "fdf0e4917df813da602b0e21149659de92337f3a", "filename": "src/tools/miri/tests/fail/data_race/relax_acquire_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *c.0 = 1;\n    |             ^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/relax_acquire_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "234ce48e76a5008f4f01892be8959e548ae00951", "filename": "src/tools/miri/tests/fail/data_race/release_seq_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *c.0 = 1;\n    |             ^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/release_seq_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "8e95d3593b09c5d3ccb18333f02453892aa3a0c3", "filename": "src/tools/miri/tests/fail/data_race/release_seq_race_same_thread.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *c.0 = 1;\n    |             ^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/release_seq_race_same_thread.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "6252cd5a71f9f0e9a953a4c38a5971cf9162f4e0", "filename": "src/tools/miri/tests/fail/data_race/rmw_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frmw_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frmw_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frmw_race.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *c.0 = 1;\n    |             ^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/rmw_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "6cb0270b3dac3914b98bc75fc04529b85e0416de", "filename": "src/tools/miri/tests/fail/data_race/stack_pop_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fstack_pop_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fstack_pop_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fstack_pop_race.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |         let _val = unsafe { *ptr.0 };\n    |                             ^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `race` at $DIR/stack_pop_race.rs:LL:CC\n note: inside `main`\n   --> $DIR/stack_pop_race.rs:LL:CC"}, {"sha": "e9055932c559128c657ef76636afa5db4ba11085", "filename": "src/tools/miri/tests/fail/data_race/write_write_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *c.0 = 32;\n    |             ^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/write_write_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "d156ece4a1e31037cd71a8237fb8125a0418fc37", "filename": "src/tools/miri/tests/fail/data_race/write_write_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |             *pointer.load(Ordering::Acquire) = 3;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside closure at $DIR/write_write_race_stack.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "09e4157b31f4fd7b2d74462076b8298195cd01e4", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_clashing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_clashing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_clashing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_clashing.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -14,7 +14,7 @@ help: then it's defined here again, in crate `exported_symbol_clashing`\n    |\n LL | fn bar() {}\n    | ^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/exported_symbol_clashing.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "0d0055bb85c8ced9b39e0087f35c6ca565011149", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_shim_clashing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_shim_clashing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_shim_clashing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_shim_clashing.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -12,7 +12,7 @@ LL | |\n LL | |     unreachable!()\n LL | | }\n    | |_^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/exported_symbol_shim_clashing.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "b22db3eb121ee0b09daaa136a768985692620808", "filename": "src/tools/miri/tests/fail/stacked_borrows/alias_through_mutation.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Falias_through_mutation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Falias_through_mutation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Falias_through_mutation.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |     *target = 13;\n    |     ^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/alias_through_mutation.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "3ce39968cbb139aaa5b9a737f57fa4e63c2eccb1", "filename": "src/tools/miri/tests/fail/stacked_borrows/aliasing_mut1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ help: <TAG> is this argument\n    |\n LL | pub fn safe(_x: &mut i32, _y: &mut i32) {}\n    |             ^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `safe` at $DIR/aliasing_mut1.rs:LL:CC\n note: inside `main`\n   --> $DIR/aliasing_mut1.rs:LL:CC"}, {"sha": "df4b6cf02561c3f5a33cbb48363f3bc529dc15f4", "filename": "src/tools/miri/tests/fail/stacked_borrows/aliasing_mut2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ help: <TAG> is this argument\n    |\n LL | pub fn safe(_x: &i32, _y: &mut i32) {}\n    |             ^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `safe` at $DIR/aliasing_mut2.rs:LL:CC\n note: inside `main`\n   --> $DIR/aliasing_mut2.rs:LL:CC"}, {"sha": "55aaed62f4f5f8d8c9939c335fcdf4efa8548f49", "filename": "src/tools/miri/tests/fail/stacked_borrows/aliasing_mut3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut3.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique FnEntry reta\n    |\n LL |     safe_raw(xraw, xshr);\n    |     ^^^^^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `safe` at $DIR/aliasing_mut3.rs:LL:CC\n note: inside `main`\n   --> $DIR/aliasing_mut3.rs:LL:CC"}, {"sha": "ddf197bc63955f8dd67c17416915323077fbaf18", "filename": "src/tools/miri/tests/fail/stacked_borrows/aliasing_mut4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut4.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ help: <TAG> is this argument\n    |\n LL | pub fn safe(_x: &i32, _y: &mut Cell<i32>) {}\n    |             ^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `safe` at $DIR/aliasing_mut4.rs:LL:CC\n note: inside `main`\n   --> $DIR/aliasing_mut4.rs:LL:CC"}, {"sha": "76f4e81f71ba2bdc7a96a9c703bdd874faa09677", "filename": "src/tools/miri/tests/fail/stacked_borrows/box_exclusive_violation1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbox_exclusive_violation1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbox_exclusive_violation1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbox_exclusive_violation1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |     *our = 5;\n    |     ^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `unknown_code_2` at $DIR/box_exclusive_violation1.rs:LL:CC\n note: inside `demo_box_advanced_unique`\n   --> $DIR/box_exclusive_violation1.rs:LL:CC"}, {"sha": "59377aeb971a83a42c530c4894a1dea5147e75ab", "filename": "src/tools/miri/tests/fail/stacked_borrows/box_noalias_violation.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbox_noalias_violation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbox_noalias_violation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbox_noalias_violation.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ help: <TAG> is this argument\n    |\n LL | unsafe fn test(mut x: Box<i32>, y: *const i32) -> i32 {\n    |                ^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `test` at $DIR/box_noalias_violation.rs:LL:CC\n note: inside `main`\n   --> $DIR/box_noalias_violation.rs:LL:CC"}, {"sha": "fa3d7ca367625514f3d6da82df12a7336a3dd38e", "filename": "src/tools/miri/tests/fail/stacked_borrows/buggy_as_mut_slice.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_as_mut_slice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_as_mut_slice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_as_mut_slice.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0xc] by a Unique retag\n    |\n LL |         unsafe { from_raw_parts_mut(self_.as_ptr() as *mut T, self_.len()) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/buggy_as_mut_slice.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "c75d8cab3fc85b947e417960c7deaea78afd6aa2", "filename": "src/tools/miri/tests/fail/stacked_borrows/buggy_split_at_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_split_at_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_split_at_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_split_at_mut.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x10] by a Unique retag\n    |\n LL |                 from_raw_parts_mut(ptr.offset(mid as isize), len - mid),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/buggy_split_at_mut.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "bd79b401f667f16f2593ab12e1ead2a210da3745", "filename": "src/tools/miri/tests/fail/stacked_borrows/disable_mut_does_not_merge_srw.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |         *base = 1;\n    |         ^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/disable_mut_does_not_merge_srw.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "e3bffde1f0176c337c1ca5fab767dcddb0291a18", "filename": "src/tools/miri/tests/fail/stacked_borrows/fnentry_invalidation.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique FnEntry reta\n    |\n LL |     x.do_bad();\n    |     ^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/fnentry_invalidation.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "b104de4b8d94d2b02e6ea1257bbfa2ee8ee4a817", "filename": "src/tools/miri/tests/fail/stacked_borrows/fnentry_invalidation2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0xc] by a Unique FnEntry reta\n    |\n LL |     let _ = t.sli.as_mut_ptr();\n    |             ^^^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/fnentry_invalidation2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "7fff60f25fbbe60315c4e409a263095ddf1cab92", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_dealloc1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_dealloc1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_dealloc1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_dealloc1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x1] by a write access\n    |\n LL |         ptr1.write(0);\n    |         ^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `std::alloc::dealloc` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n note: inside `main`\n   --> $DIR/illegal_deALLOC.rs:LL:CC"}, {"sha": "7a159c9d3fefce8ebfebb3641501c3137b161c17", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n    |\n LL |     let _val = unsafe { *xraw };\n    |                         ^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_read1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "e3e79f6f0f05ef7bf5aa92f57c77881dd202794e", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a SharedReadOnly reta\n    |\n LL |     let shr = unsafe { &*xraw };\n    |                        ^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_read2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "3a8687ad9aa19a98f9316e8487f22834fc90c73f", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read3.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n    |\n LL |     let _val = unsafe { *xref1.r };\n    |                         ^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_read3.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "dcf37b26901542c79604ae9fc280f6fd219bce1f", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read4.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n    |\n LL |     let _val = unsafe { *xraw }; // use the raw again, this invalidates xref2 *even* with the special read except for uniq refs\n    |                         ^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_read4.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "1793798d15f6af69f55f90f057444003d347f713", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read5.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read5.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [$HEX..$HEX] by a read access\n    |\n LL |     mem::forget(unsafe { ptr::read(xshr) }); // but after reading through the shared ref\n    |                          ^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_read5.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "17b28dee3c7caf3868267d87189a165e71479f11", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read6.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read6.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n    |\n LL |         let x = &mut *x; // kill `raw`\n    |                 ^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_read6.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "b76446d60f6d2bb2fe142b7969527f77ad6c5166", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read7.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read7.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n    |\n LL |         let _val = ptr::read(raw);\n    |                    ^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_read7.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "b43079c3b7f3b9a9ea91618c2f9ae57f51525ab2", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read8.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read8.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read8.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read8.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |         *y2 += 1;\n    |         ^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_read8.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "fbd5d8b956d9794d9df99c3d5387e7c2f172b423", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read_despite_exposed1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |         *exposed_ptr = 0;\n    |         ^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_read_despite_exposed1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "19e4cbdb9385521d0af0177929e9cacb05e35271", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read_despite_exposed2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n    |\n LL |         let _val = *exposed_ptr;\n    |                    ^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_read_despite_exposed2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "c1e4918146587c7b12f36830934bb8659bc81d6a", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -14,7 +14,7 @@ help: <TAG> was created by a SharedReadOnly retag at offsets [0x0..0x4]\n    |\n LL |         let x: *mut u32 = xref as *const _ as *mut _;\n    |                           ^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_write1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "3e11e86eb81b36f10837798621f2a87251401b58", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n    |\n LL |     drop(&mut *target); // reborrow\n    |          ^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_write2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "4053325821e75120ef533d18a60ef56c1d19a371", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write3.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -14,7 +14,7 @@ help: <TAG> was created by a SharedReadOnly retag at offsets [0x0..0x4]\n    |\n LL |     let ptr = r#ref as *const _ as *mut _; // raw ptr, with raw tag\n    |               ^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_write3.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "fceda8db4cef5a0962f1974f248c73b974fb1287", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write4.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n    |\n LL |     let _mut_ref: &mut i32 = unsafe { mem::transmute(raw) }; // &mut, with raw tag\n    |                                       ^^^^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_write4.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "c71780b7e03e0332067d998e1de1133572209a21", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write5.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write5.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |     unsafe { *xraw = 15 };\n    |              ^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_write5.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "3d3d2a24c2852954ff89c193517beb40dcb5112f", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write6.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write6.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ help: <TAG> is this argument\n    |\n LL | fn foo(a: &mut u32, y: *mut u32) -> u32 {\n    |        ^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `foo` at $DIR/illegal_write6.rs:LL:CC\n note: inside `main`\n   --> $DIR/illegal_write6.rs:LL:CC"}, {"sha": "1bb3afe483ebad8c8546275e0d693ecc0fad57f8", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write_despite_exposed1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write_despite_exposed1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write_despite_exposed1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write_despite_exposed1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |         *exposed_ptr = 0;\n    |         ^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/illegal_write_despite_exposed1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "da55e724fd81e77d19f561f28bce40fa5806811b", "filename": "src/tools/miri/tests/fail/stacked_borrows/interior_mut1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |         *c.get() = UnsafeCell::new(1); // invalidates inner_shr\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/interior_mut1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "8c8a96cbbbd639e7182cb8f868f6ca80f729eb25", "filename": "src/tools/miri/tests/fail/stacked_borrows/interior_mut2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |         *c.get() = UnsafeCell::new(0); // now inner_shr gets invalidated\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/interior_mut2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "95fa4c51d12fdad7f3d783ffc2caefa13ad23ce6", "filename": "src/tools/miri/tests/fail/stacked_borrows/invalidate_against_protector1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ help: <TAG> is this argument\n    |\n LL | fn inner(x: *mut i32, _y: &mut i32) {\n    |                       ^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `inner` at $DIR/invalidate_against_protector1.rs:LL:CC\n note: inside `main`\n   --> $DIR/invalidate_against_protector1.rs:LL:CC"}, {"sha": "8f677bd547ce356ea7c79a058ff7f0557a130749", "filename": "src/tools/miri/tests/fail/stacked_borrows/invalidate_against_protector2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ help: <TAG> is this argument\n    |\n LL | fn inner(x: *mut i32, _y: &i32) {\n    |                       ^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `inner` at $DIR/invalidate_against_protector2.rs:LL:CC\n note: inside `main`\n   --> $DIR/invalidate_against_protector2.rs:LL:CC"}, {"sha": "1648ca9e58bb11f2627dfa21ce4479876788d6dd", "filename": "src/tools/miri/tests/fail/stacked_borrows/invalidate_against_protector3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector3.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ help: <TAG> is this argument\n    |\n LL | fn inner(x: *mut i32, _y: &i32) {\n    |                       ^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `inner` at $DIR/invalidate_against_protector3.rs:LL:CC\n note: inside `main`\n   --> $DIR/invalidate_against_protector3.rs:LL:CC"}, {"sha": "7aca065ca0d701598803f6e46fe57ff056b23c38", "filename": "src/tools/miri/tests/fail/stacked_borrows/load_invalid_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_mut.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n    |\n LL |     let _val = unsafe { *xraw }; // invalidate xref\n    |                         ^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/load_invalid_mut.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "7eb973ae7f2af94732dd5a84749acc95ebd24a80", "filename": "src/tools/miri/tests/fail/stacked_borrows/load_invalid_shr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_shr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_shr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_shr.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |     unsafe { *xraw = 42 }; // unfreeze\n    |              ^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/load_invalid_shr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "3e7fe11b5202a9595ad5c8b087552fbab827209f", "filename": "src/tools/miri/tests/fail/stacked_borrows/mut_exclusive_violation1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |     *our = 5;\n    |     ^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `unknown_code_2` at $DIR/mut_exclusive_violation1.rs:LL:CC\n note: inside `demo_mut_advanced_unique`\n   --> $DIR/mut_exclusive_violation1.rs:LL:CC"}, {"sha": "30ce698761f3da570ae4d95e573a6d87f05eeec6", "filename": "src/tools/miri/tests/fail/stacked_borrows/mut_exclusive_violation2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n    |\n LL |         let _raw2 = ptr2.as_mut();\n    |                     ^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/mut_exclusive_violation2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "0cba380ea1a30db629bf4396115dae0ede3bf224", "filename": "src/tools/miri/tests/fail/stacked_borrows/newtype_pair_retagging.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_pair_retagging.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_pair_retagging.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_pair_retagging.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ help: <TAG> is this argument\n    |\n LL | fn dealloc_while_running(_n: Newtype<'_>, dealloc: impl FnOnce()) {\n    |                          ^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `std::boxed::Box::<i32>::from_raw_in` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n    = note: inside `std::boxed::Box::<i32>::from_raw` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n note: inside closure"}, {"sha": "f76b6a57eaca0662e81ac56ff6d55685f9f00a20", "filename": "src/tools/miri/tests/fail/stacked_borrows/newtype_retagging.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_retagging.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_retagging.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_retagging.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -16,7 +16,7 @@ help: <TAG> is this argument\n    |\n LL | fn dealloc_while_running(_n: Newtype<'_>, dealloc: impl FnOnce()) {\n    |                          ^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `std::boxed::Box::<i32>::from_raw_in` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n    = note: inside `std::boxed::Box::<i32>::from_raw` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n note: inside closure"}, {"sha": "ad366bdabcee668b98b8edb2517efe6838232439", "filename": "src/tools/miri/tests/fail/stacked_borrows/outdated_local.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Foutdated_local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Foutdated_local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Foutdated_local.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |     x = 1; // this invalidates y by reactivating the lowermost uniq borrow for this local\n    |     ^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/outdated_local.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "96cec327b9df53ddcf5dc461951bd58d53bafbfb", "filename": "src/tools/miri/tests/fail/stacked_borrows/pass_invalid_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_mut.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n    |\n LL |     let _val = unsafe { *xraw }; // invalidate xref\n    |                         ^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/pass_invalid_mut.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "5243858a91a7deb9444cabc29bd1579c72989a15", "filename": "src/tools/miri/tests/fail/stacked_borrows/pass_invalid_shr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_shr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_shr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_shr.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n    |\n LL |     unsafe { *xraw = 42 }; // unfreeze\n    |              ^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/pass_invalid_shr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "e20b5b89a2fca5e27fe17237a1408e91ce6b394a", "filename": "src/tools/miri/tests/fail/stacked_borrows/pointer_smuggling.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpointer_smuggling.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpointer_smuggling.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpointer_smuggling.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x1] by a write access\n    |\n LL |     *val = 2; // this invalidates any raw ptrs `fun1` might have created.\n    |     ^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `fun2` at $DIR/pointer_smuggling.rs:LL:CC\n note: inside `main`\n   --> $DIR/pointer_smuggling.rs:LL:CC"}, {"sha": "9f7e7a058dfcfac5c406722e63c812d18fb04210", "filename": "src/tools/miri/tests/fail/stacked_borrows/raw_tracking.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fraw_tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fraw_tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fraw_tracking.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n    |\n LL |     let raw2 = &mut l as *mut _; // invalidates raw1\n    |                ^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/raw_tracking.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "26607e1a690df85a8809c6b36fe6602e80fd7670", "filename": "src/tools/miri/tests/fail/stacked_borrows/retag_data_race_read.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fretag_data_race_read.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fretag_data_race_read.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fretag_data_race_read.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |         let _r = &*p;\n    |                  ^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `thread_2` at $DIR/retag_data_race_read.rs:LL:CC\n note: inside closure\n   --> $DIR/retag_data_race_read.rs:LL:CC"}, {"sha": "33839d2647d6f99aa41cdfa84ef0b65b1eb7b098", "filename": "src/tools/miri/tests/fail/stacked_borrows/retag_data_race_write.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fretag_data_race_write.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fretag_data_race_write.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fretag_data_race_write.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -11,7 +11,7 @@ LL |         let _r = &mut *p;\n    |                  ^^^^^^^\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `thread_2` at $DIR/retag_data_race_write.rs:LL:CC\n note: inside closure\n   --> $DIR/retag_data_race_write.rs:LL:CC"}, {"sha": "2bf91b676c4c0fe0e7245853bfa190346d03279b", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a read access\n    |\n LL |     let _val = unsafe { *xraw }; // invalidate xref\n    |                         ^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `foo` at $DIR/return_invalid_mut.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_mut.rs:LL:CC"}, {"sha": "ff00c54570cd30daea1f2140425ea2e04134d018", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_mut_option.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_option.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a read access\n    |\n LL |     let _val = unsafe { *xraw }; // invalidate xref\n    |                         ^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `foo` at $DIR/return_invalid_mut_option.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_mut_option.rs:LL:CC"}, {"sha": "61d041a8816d2d53879bf2bb2c8310054276aaa6", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_mut_tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_tuple.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a read access\n    |\n LL |     let _val = unsafe { *xraw }; // invalidate xref\n    |                         ^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `foo` at $DIR/return_invalid_mut_tuple.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_mut_tuple.rs:LL:CC"}, {"sha": "d3a73a00fa60549853483c9179a4dcc0f80c07ff", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_shr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a write access\n    |\n LL |     unsafe { *xraw = (42, 23) }; // unfreeze\n    |              ^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `foo` at $DIR/return_invalid_shr.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_shr.rs:LL:CC"}, {"sha": "f14e8b8532f55a713a7550cb03d6d786d9b9459d", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_shr_option.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_option.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a write access\n    |\n LL |     unsafe { *xraw = (42, 23) }; // unfreeze\n    |              ^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `foo` at $DIR/return_invalid_shr_option.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_shr_option.rs:LL:CC"}, {"sha": "9ddaad4d1be30647f6715217f0c092d5c11954f9", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_shr_tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_tuple.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a write access\n    |\n LL |     unsafe { *xraw = (42, 23) }; // unfreeze\n    |              ^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `foo` at $DIR/return_invalid_shr_tuple.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_shr_tuple.rs:LL:CC"}, {"sha": "589e1291ba731123f467dd0193ea7175bc81913c", "filename": "src/tools/miri/tests/fail/stacked_borrows/shared_rw_borrows_are_weak1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n    |\n LL |         shr_rw.set(1);\n    |         ^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/shared_rw_borrows_are_weak1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "0e37c4ffb394c7e4167c4d2100752af0cc8c99e3", "filename": "src/tools/miri/tests/fail/stacked_borrows/shared_rw_borrows_are_weak2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak2.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [$HEX..$HEX] by a Unique retag\n    |\n LL |         shr_rw.replace(1);\n    |         ^^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/shared_rw_borrows_are_weak2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "a69116f2afae73aeb3340edcd9f0412a5a7e8b3d", "filename": "src/tools/miri/tests/fail/stacked_borrows/shr_frozen_violation1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshr_frozen_violation1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshr_frozen_violation1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshr_frozen_violation1.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -14,7 +14,7 @@ help: <TAG> was created by a SharedReadOnly retag at offsets [0x0..0x4]\n    |\n LL |         *(x as *const i32 as *mut i32) = 7;\n    |           ^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `unknown_code` at $DIR/shr_frozen_violation1.rs:LL:CC\n note: inside `foo`\n   --> $DIR/shr_frozen_violation1.rs:LL:CC"}, {"sha": "05be0d3f1e98a4cfc1db53c830f835cde85471f2", "filename": "src/tools/miri/tests/fail/stacked_borrows/track_caller.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ftrack_caller.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ftrack_caller.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ftrack_caller.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -19,7 +19,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n    |\n LL |     callee(xraw);\n    |     ^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/track_caller.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "ac962311d42600f78f7def596ee8b75176fa51b9", "filename": "src/tools/miri/tests/fail/stacked_borrows/transmute-is-no-escape.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ftransmute-is-no-escape.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ftransmute-is-no-escape.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ftransmute-is-no-escape.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -14,7 +14,7 @@ help: <TAG> was created by a SharedReadWrite retag at offsets [0x4..0x8]\n    |\n LL |     let raw = (&mut x[1] as *mut i32).wrapping_offset(-1);\n    |                ^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/transmute-is-no-escape.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "7a40d1078b3b74768f04e3b9a4ab443f890dcbd8", "filename": "src/tools/miri/tests/fail/stacked_borrows/unescaped_static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Funescaped_static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Funescaped_static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Funescaped_static.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -14,7 +14,7 @@ help: <TAG> was created by a SharedReadOnly retag at offsets [0x0..0x1]\n    |\n LL |     let ptr_to_first = &ARRAY[0] as *const u8;\n    |                        ^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `main` at $DIR/unescaped_static.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "950abc4cbcf92fefae4579f24a72e57512a476e0", "filename": "src/tools/miri/tests/fail/stacked_borrows/zst_slice.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fzst_slice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19422fcbfe98ac1fa01175fedb4619db6774b129/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fzst_slice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fzst_slice.stderr?ref=19422fcbfe98ac1fa01175fedb4619db6774b129", "patch": "@@ -14,7 +14,7 @@ help: <TAG> would have been created here, but this is a zero-size retag ([0x0..0\n    |\n LL |         assert_eq!(*s.get_unchecked(1), 2);\n    |                     ^^^^^^^^^^^^^^^^^^\n-   = note: BACKTRACE:\n+   = note: BACKTRACE (of the first span):\n    = note: inside `core::slice::<impl [i32]>::get_unchecked::<usize>` at RUSTLIB/core/src/slice/mod.rs:LL:CC\n note: inside `main`\n   --> $DIR/zst_slice.rs:LL:CC"}]}