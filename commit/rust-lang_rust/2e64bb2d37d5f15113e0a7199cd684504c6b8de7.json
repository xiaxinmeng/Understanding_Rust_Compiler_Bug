{"sha": "2e64bb2d37d5f15113e0a7199cd684504c6b8de7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNjRiYjJkMzdkNWYxNTExM2UwYTcxOTljZDY4NDUwNGM2YjhkZTc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-21T15:18:08Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-23T22:31:11Z"}, "message": "syntax: reject `trait Foo: Bar = Baz;`.\n\nAdd test for rejecting `trait A: B1 = B2;`.\nAlso test rejection of `trait A: = B;`.", "tree": {"sha": "d4e4e183ee460068db8cfd11db2c2707c903b9b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4e4e183ee460068db8cfd11db2c2707c903b9b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e64bb2d37d5f15113e0a7199cd684504c6b8de7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e64bb2d37d5f15113e0a7199cd684504c6b8de7", "html_url": "https://github.com/rust-lang/rust/commit/2e64bb2d37d5f15113e0a7199cd684504c6b8de7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e64bb2d37d5f15113e0a7199cd684504c6b8de7/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a8c5b20c7772bc5342b83d4b0696ea216ef75a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a8c5b20c7772bc5342b83d4b0696ea216ef75a7", "html_url": "https://github.com/rust-lang/rust/commit/4a8c5b20c7772bc5342b83d4b0696ea216ef75a7"}], "stats": {"total": 53, "additions": 40, "deletions": 13}, "files": [{"sha": "01dc0c21d4d4ee3b344edf9705d6fc9aa61e83fe", "filename": "src/libsyntax/parse/parser/item.rs", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2e64bb2d37d5f15113e0a7199cd684504c6b8de7/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e64bb2d37d5f15113e0a7199cd684504c6b8de7/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs?ref=2e64bb2d37d5f15113e0a7199cd684504c6b8de7", "patch": "@@ -211,7 +211,7 @@ impl<'a> Parser<'a> {\n         {\n             // UNSAFE TRAIT ITEM\n             self.bump(); // `unsafe`\n-            let info = self.parse_item_trait(Unsafety::Unsafe)?;\n+            let info = self.parse_item_trait(lo, Unsafety::Unsafe)?;\n             return self.mk_item_with_info(attrs, lo, vis, info);\n         }\n \n@@ -289,7 +289,7 @@ impl<'a> Parser<'a> {\n                 && self.is_keyword_ahead(1, &[kw::Trait]))\n         {\n             // TRAIT ITEM\n-            let info = self.parse_item_trait(Unsafety::Normal)?;\n+            let info = self.parse_item_trait(lo, Unsafety::Normal)?;\n             return self.mk_item_with_info(attrs, lo, vis, info);\n         }\n \n@@ -780,7 +780,7 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parses `auto? trait Foo { ... }` or `trait Foo = Bar;`.\n-    fn parse_item_trait(&mut self, unsafety: Unsafety) -> PResult<'a, ItemInfo> {\n+    fn parse_item_trait(&mut self, lo: Span, unsafety: Unsafety) -> PResult<'a, ItemInfo> {\n         // Parse optional `auto` prefix.\n         let is_auto = if self.eat_keyword(kw::Auto) {\n             IsAuto::Yes\n@@ -793,29 +793,41 @@ impl<'a> Parser<'a> {\n         let mut tps = self.parse_generics()?;\n \n         // Parse optional colon and supertrait bounds.\n-        let bounds = if self.eat(&token::Colon) {\n+        let had_colon = self.eat(&token::Colon);\n+        let span_at_colon = self.prev_span;\n+        let bounds = if had_colon {\n             self.parse_generic_bounds(Some(self.prev_span))?\n         } else {\n             Vec::new()\n         };\n \n+        let span_before_eq = self.prev_span;\n         if self.eat(&token::Eq) {\n             // It's a trait alias.\n+            if had_colon {\n+                let span = span_at_colon.to(span_before_eq);\n+                self.struct_span_err(span, \"bounds are not allowed on trait aliases\")\n+                    .emit();\n+            }\n+\n             let bounds = self.parse_generic_bounds(None)?;\n             tps.where_clause = self.parse_where_clause()?;\n             self.expect(&token::Semi)?;\n+\n+            let whole_span = lo.to(self.prev_span);\n             if is_auto == IsAuto::Yes {\n                 let msg = \"trait aliases cannot be `auto`\";\n-                self.struct_span_err(self.prev_span, msg)\n-                    .span_label(self.prev_span, msg)\n+                self.struct_span_err(whole_span, msg)\n+                    .span_label(whole_span, msg)\n                     .emit();\n             }\n             if unsafety != Unsafety::Normal {\n                 let msg = \"trait aliases cannot be `unsafe`\";\n-                self.struct_span_err(self.prev_span, msg)\n-                    .span_label(self.prev_span, msg)\n+                self.struct_span_err(whole_span, msg)\n+                    .span_label(whole_span, msg)\n                     .emit();\n             }\n+\n             Ok((ident, ItemKind::TraitAlias(tps, bounds), None))\n         } else {\n             // It's a normal trait."}, {"sha": "039bbce8c1ed0f279237e20da56fe8ea0b72cf91", "filename": "src/test/ui/traits/trait-alias/trait-alias-syntax-fail.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2e64bb2d37d5f15113e0a7199cd684504c6b8de7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-syntax-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e64bb2d37d5f15113e0a7199cd684504c6b8de7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-syntax-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-syntax-fail.rs?ref=2e64bb2d37d5f15113e0a7199cd684504c6b8de7", "patch": "@@ -4,4 +4,7 @@ trait Foo {}\n auto trait A = Foo; //~ ERROR trait aliases cannot be `auto`\n unsafe trait B = Foo; //~ ERROR trait aliases cannot be `unsafe`\n \n+trait C: Ord = Eq; //~ ERROR bounds are not allowed on trait aliases\n+trait D: = Eq; //~ ERROR bounds are not allowed on trait aliases\n+\n fn main() {}"}, {"sha": "18c22133bc780ca3f40d8fc412c2c106f11b519d", "filename": "src/test/ui/traits/trait-alias/trait-alias-syntax-fail.stderr", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2e64bb2d37d5f15113e0a7199cd684504c6b8de7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-syntax-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2e64bb2d37d5f15113e0a7199cd684504c6b8de7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-syntax-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-syntax-fail.stderr?ref=2e64bb2d37d5f15113e0a7199cd684504c6b8de7", "patch": "@@ -1,14 +1,26 @@\n error: trait aliases cannot be `auto`\n-  --> $DIR/trait-alias-syntax-fail.rs:4:19\n+  --> $DIR/trait-alias-syntax-fail.rs:4:1\n    |\n LL | auto trait A = Foo;\n-   |                   ^ trait aliases cannot be `auto`\n+   | ^^^^^^^^^^^^^^^^^^^ trait aliases cannot be `auto`\n \n error: trait aliases cannot be `unsafe`\n-  --> $DIR/trait-alias-syntax-fail.rs:5:21\n+  --> $DIR/trait-alias-syntax-fail.rs:5:1\n    |\n LL | unsafe trait B = Foo;\n-   |                     ^ trait aliases cannot be `unsafe`\n+   | ^^^^^^^^^^^^^^^^^^^^^ trait aliases cannot be `unsafe`\n \n-error: aborting due to 2 previous errors\n+error: bounds are not allowed on trait aliases\n+  --> $DIR/trait-alias-syntax-fail.rs:7:8\n+   |\n+LL | trait C: Ord = Eq;\n+   |        ^^^^^\n+\n+error: bounds are not allowed on trait aliases\n+  --> $DIR/trait-alias-syntax-fail.rs:8:8\n+   |\n+LL | trait D: = Eq;\n+   |        ^\n+\n+error: aborting due to 4 previous errors\n "}]}