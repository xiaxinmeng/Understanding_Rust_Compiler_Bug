{"sha": "28b0d4029e3ae65505b19bf74379a8516b0e1fc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YjBkNDAyOWUzYWU2NTUwNWIxOWJmNzQzNzlhODUxNmIwZTFmYzk=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-15T01:03:17Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-15T01:03:17Z"}, "message": "use better span", "tree": {"sha": "5330189c35f02eb906d95219e6acecd6914ca47d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5330189c35f02eb906d95219e6acecd6914ca47d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28b0d4029e3ae65505b19bf74379a8516b0e1fc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28b0d4029e3ae65505b19bf74379a8516b0e1fc9", "html_url": "https://github.com/rust-lang/rust/commit/28b0d4029e3ae65505b19bf74379a8516b0e1fc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28b0d4029e3ae65505b19bf74379a8516b0e1fc9/comments", "author": null, "committer": null, "parents": [{"sha": "86948adfdedb35051e55f41e865ee0ead6f53471", "url": "https://api.github.com/repos/rust-lang/rust/commits/86948adfdedb35051e55f41e865ee0ead6f53471", "html_url": "https://github.com/rust-lang/rust/commit/86948adfdedb35051e55f41e865ee0ead6f53471"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "889a212a2872911931f1b40e965577e27e289527", "filename": "src/libsyntax/ext/deriving/hash.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/28b0d4029e3ae65505b19bf74379a8516b0e1fc9/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b0d4029e3ae65505b19bf74379a8516b0e1fc9/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs?ref=28b0d4029e3ae65505b19bf74379a8516b0e1fc9", "patch": "@@ -65,19 +65,19 @@ fn hash_substructure(cx: &mut ExtCtxt, trait_span: Span, substr: &Substructure)\n         [ref state_expr] => state_expr,\n         _ => cx.span_bug(trait_span, \"incorrect number of arguments in `deriving(Hash)`\")\n     };\n-    let hash_path = {\n-        let strs = vec![\n-            cx.ident_of(\"std\"),\n-            cx.ident_of(\"hash\"),\n-            cx.ident_of(\"Hash\"),\n-            cx.ident_of(\"hash\"),\n-        ];\n-\n-        cx.expr_path(cx.path_global(trait_span, strs))\n-    };\n     let call_hash = |&: span, thing_expr| {\n+        let hash_path = {\n+            let strs = vec![\n+                cx.ident_of(\"std\"),\n+                cx.ident_of(\"hash\"),\n+                cx.ident_of(\"Hash\"),\n+                cx.ident_of(\"hash\"),\n+            ];\n+\n+            cx.expr_path(cx.path_global(span, strs))\n+        };\n         let ref_thing = cx.expr_addr_of(span, thing_expr);\n-        let expr = cx.expr_call(span, hash_path.clone(), vec!(ref_thing, state_expr.clone()));\n+        let expr = cx.expr_call(span, hash_path, vec!(ref_thing, state_expr.clone()));\n         cx.stmt_expr(expr)\n     };\n     let mut stmts = Vec::new();"}, {"sha": "0ee381669351a6287a3bea5bddd1454b732945c0", "filename": "src/test/compile-fail/issue-21160.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28b0d4029e3ae65505b19bf74379a8516b0e1fc9/src%2Ftest%2Fcompile-fail%2Fissue-21160.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b0d4029e3ae65505b19bf74379a8516b0e1fc9/src%2Ftest%2Fcompile-fail%2Fissue-21160.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-21160.rs?ref=28b0d4029e3ae65505b19bf74379a8516b0e1fc9", "patch": "@@ -15,7 +15,7 @@ impl Bar {\n }\n \n #[derive(Hash)]\n-//~^ error: the trait `core::hash::Hash<__S>` is not implemented for the type `Bar`\n struct Foo(Bar);\n+//~^ error: the trait `core::hash::Hash<__S>` is not implemented for the type `Bar`\n \n fn main() {}"}]}