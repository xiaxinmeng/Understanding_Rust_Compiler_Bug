{"sha": "11c31bb1d390c2a32e7546ab303835bfa1d48b6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExYzMxYmIxZDM5MGMyYTMyZTc1NDZhYjMwMzgzNWJmYTFkNDhiNmE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-20T01:09:52Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-05T22:07:37Z"}, "message": "Add ParamConst\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "5609427e8ca12c22abb8c7095a502e7ec8bb715b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5609427e8ca12c22abb8c7095a502e7ec8bb715b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11c31bb1d390c2a32e7546ab303835bfa1d48b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11c31bb1d390c2a32e7546ab303835bfa1d48b6a", "html_url": "https://github.com/rust-lang/rust/commit/11c31bb1d390c2a32e7546ab303835bfa1d48b6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11c31bb1d390c2a32e7546ab303835bfa1d48b6a/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62f23c2b0b66fdda31ff03cc688d8baa5759cec0", "url": "https://api.github.com/repos/rust-lang/rust/commits/62f23c2b0b66fdda31ff03cc688d8baa5759cec0", "html_url": "https://github.com/rust-lang/rust/commit/62f23c2b0b66fdda31ff03cc688d8baa5759cec0"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "2f77ad2f180360004a79b356d75b9c32724f619b", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/11c31bb1d390c2a32e7546ab303835bfa1d48b6a/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11c31bb1d390c2a32e7546ab303835bfa1d48b6a/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=11c31bb1d390c2a32e7546ab303835bfa1d48b6a", "patch": "@@ -1061,6 +1061,26 @@ impl<'a, 'gcx, 'tcx> ParamTy {\n     }\n }\n \n+#[derive(Copy, Clone, Hash, RustcEncodable, RustcDecodable, Eq, PartialEq, Ord, PartialOrd)]\n+pub struct ParamConst {\n+    pub index: u32,\n+    pub name: InternedString,\n+}\n+\n+impl<'a, 'gcx, 'tcx> ParamConst {\n+    pub fn new(index: u32, name: InternedString) -> ParamConst {\n+        ParamConst { index, name }\n+    }\n+\n+    pub fn for_def(def: &ty::GenericParamDef) -> ParamConst {\n+        ParamConst::new(def.index, def.name)\n+    }\n+\n+    pub fn to_const(self, tcx: TyCtxt<'a, 'gcx, 'tcx>, ty: Ty<'tcx>) -> &'tcx LazyConst<'tcx> {\n+        tcx.mk_const_param(self.index, self.name, ty)\n+    }\n+}\n+\n /// A [De Bruijn index][dbi] is a standard means of representing\n /// regions (and perhaps later types) in a higher-ranked setting. In\n /// particular, imagine a type like this:"}]}