{"sha": "ade2a96ff1e2c3d434f57b8fa07da66969bceaae", "node_id": "C_kwDOAAsO6NoAKGFkZTJhOTZmZjFlMmMzZDQzNGY1N2I4ZmEwN2RhNjY5NjliY2VhYWU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-06-30T13:24:35Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-06-30T13:24:35Z"}, "message": "use a method instead of manually doing what its body does", "tree": {"sha": "4393b5b0349fa1654529c9d3074e83832338b457", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4393b5b0349fa1654529c9d3074e83832338b457"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ade2a96ff1e2c3d434f57b8fa07da66969bceaae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ade2a96ff1e2c3d434f57b8fa07da66969bceaae", "html_url": "https://github.com/rust-lang/rust/commit/ade2a96ff1e2c3d434f57b8fa07da66969bceaae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ade2a96ff1e2c3d434f57b8fa07da66969bceaae/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dbfcbcbb5d835c2a5784e2f4da4816b90c43ff5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dbfcbcbb5d835c2a5784e2f4da4816b90c43ff5", "html_url": "https://github.com/rust-lang/rust/commit/9dbfcbcbb5d835c2a5784e2f4da4816b90c43ff5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "18469208731c8ebe2c883ac9b045ee7f305dd195", "filename": "compiler/rustc_infer/src/traits/project.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ade2a96ff1e2c3d434f57b8fa07da66969bceaae/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ade2a96ff1e2c3d434f57b8fa07da66969bceaae/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fproject.rs?ref=ade2a96ff1e2c3d434f57b8fa07da66969bceaae", "patch": "@@ -203,7 +203,7 @@ impl<'tcx> ProjectionCache<'_, 'tcx> {\n             Some(&ProjectionCacheEntry::NormalizedTy { ref ty, complete: _ }) => {\n                 info!(\"ProjectionCacheEntry::complete({:?}) - completing {:?}\", key, ty);\n                 let mut ty = ty.clone();\n-                if result == EvaluationResult::EvaluatedToOk {\n+                if result.must_apply_considering_regions() {\n                     ty.obligations = vec![];\n                 }\n                 map.insert(key, ProjectionCacheEntry::NormalizedTy { ty, complete: Some(result) });"}]}