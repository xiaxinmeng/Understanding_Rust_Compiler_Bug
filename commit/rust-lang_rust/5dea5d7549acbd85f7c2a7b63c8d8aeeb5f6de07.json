{"sha": "5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZWE1ZDc1NDlhY2JkODVmN2MyYTdiNjNjOGQ4YWVlYjVmNmRlMDc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-22T15:16:24Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-23T14:57:58Z"}, "message": "Say what things are, instead of what they are not.", "tree": {"sha": "9985c8f8ddb82d57a4021c1c5bd29e989205aa5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9985c8f8ddb82d57a4021c1c5bd29e989205aa5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07", "html_url": "https://github.com/rust-lang/rust/commit/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d834d2a7422886890c861e120af5f6a9e9ca9985", "url": "https://api.github.com/repos/rust-lang/rust/commits/d834d2a7422886890c861e120af5f6a9e9ca9985", "html_url": "https://github.com/rust-lang/rust/commit/d834d2a7422886890c861e120af5f6a9e9ca9985"}], "stats": {"total": 101, "additions": 59, "deletions": 42}, "files": [{"sha": "088596b2cbc0644f25167650e77b7ecd2162d0a8", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07", "patch": "@@ -971,28 +971,27 @@ impl<'a> Resolver<'a> {\n                 false,\n                 ident.span,\n             ) {\n-                let it_is = match binding.macro_kind() {\n-                    Some(MacroKind::Bang) => \"it is a function-like macro\".to_string(),\n-                    Some(kind) => format!(\"it is {} {}\", kind.article(), kind.descr_expected()),\n-                    None => format!(\n-                        \"it is not {} {}\",\n-                        macro_kind.article(),\n-                        macro_kind.descr_expected()\n-                    ),\n+                let desc = match binding.macro_kind() {\n+                    Some(MacroKind::Bang) => \"a function-like macro\".to_string(),\n+                    Some(kind) => format!(\"{} {}\", kind.article(), kind.descr_expected()),\n+                    None => {\n+                        let res = binding.res();\n+                        format!(\"{} {}\", res.article(), res.descr())\n+                    }\n                 };\n                 if let crate::NameBindingKind::Import { import, .. } = binding.kind {\n                     if !import.span.is_dummy() {\n                         err.span_note(\n                             import.span,\n-                            &format!(\"`{}` is imported here, but {}\", ident, it_is),\n+                            &format!(\"`{}` is imported here, but it is {}\", ident, desc),\n                         );\n                         // Silence the 'unused import' warning we might get,\n                         // since this diagnostic already covers that import.\n                         self.record_use(ident, binding, false);\n                         return;\n                     }\n                 }\n-                err.note(&format!(\"`{}` is in scope, but {}\", ident, it_is));\n+                err.note(&format!(\"`{}` is in scope, but it is {}\", ident, desc));\n                 return;\n             }\n         }"}, {"sha": "9f1306349e90134320643ff8c92ae3cf9ab71755", "filename": "src/test/ui/macros/issue-88206.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.rs?ref=5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07", "patch": "@@ -3,18 +3,21 @@\n #![warn(unused_imports)]\n \n use std::str::*;\n-//~^ NOTE `from_utf8` is imported here, but it is not a macro\n-//~| NOTE `from_utf8_mut` is imported here, but it is not a derive macro\n-//~| NOTE `from_utf8_unchecked` is imported here, but it is not an attribute\n+//~^ NOTE `from_utf8` is imported here, but it is a function\n+//~| NOTE `from_utf8_mut` is imported here, but it is a function\n+//~| NOTE `from_utf8_unchecked` is imported here, but it is a function\n \n mod hey {\n     pub trait Serialize {}\n     pub trait Deserialize {}\n+\n+    pub struct X(i32);\n }\n \n-use hey::{Serialize, Deserialize};\n-//~^ NOTE `Serialize` is imported here, but it is not a derive macro\n-//~| NOTE `Deserialize` is imported here, but it is not an attribute\n+use hey::{Serialize, Deserialize, X};\n+//~^ NOTE `Serialize` is imported here, but it is a trait\n+//~| NOTE `Deserialize` is imported here, but it is a trait\n+//~| NOTE `X` is imported here, but it is a struct\n \n #[derive(Serialize)]\n //~^ ERROR cannot find derive macro `Serialize`\n@@ -48,7 +51,7 @@ fn main() {\n \n     Box!();\n     //~^ ERROR cannot find macro `Box`\n-    //~| NOTE `Box` is in scope, but it is not a macro\n+    //~| NOTE `Box` is in scope, but it is a struct\n \n     Copy!();\n     //~^ ERROR cannot find macro `Copy`\n@@ -57,4 +60,7 @@ fn main() {\n     test!();\n     //~^ ERROR cannot find macro `test`\n     //~| NOTE `test` is in scope, but it is an attribute\n+\n+    X!();\n+    //~^ ERROR cannot find macro `X`\n }"}, {"sha": "9220c16f6ae887908a8516ee4017bc30851962f5", "filename": "src/test/ui/macros/issue-88206.stderr", "status": "modified", "additions": 33, "deletions": 21, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.stderr?ref=5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07", "patch": "@@ -1,102 +1,114 @@\n+error: cannot find macro `X` in this scope\n+  --> $DIR/issue-88206.rs:64:5\n+   |\n+LL |     X!();\n+   |     ^\n+   |\n+note: `X` is imported here, but it is a struct\n+  --> $DIR/issue-88206.rs:17:35\n+   |\n+LL | use hey::{Serialize, Deserialize, X};\n+   |                                   ^\n+\n error: cannot find macro `test` in this scope\n-  --> $DIR/issue-88206.rs:57:5\n+  --> $DIR/issue-88206.rs:60:5\n    |\n LL |     test!();\n    |     ^^^^\n    |\n    = note: `test` is in scope, but it is an attribute\n \n error: cannot find macro `Copy` in this scope\n-  --> $DIR/issue-88206.rs:53:5\n+  --> $DIR/issue-88206.rs:56:5\n    |\n LL |     Copy!();\n    |     ^^^^\n    |\n    = note: `Copy` is in scope, but it is a derive macro\n \n error: cannot find macro `Box` in this scope\n-  --> $DIR/issue-88206.rs:49:5\n+  --> $DIR/issue-88206.rs:52:5\n    |\n LL |     Box!();\n    |     ^^^\n    |\n-   = note: `Box` is in scope, but it is not a macro\n+   = note: `Box` is in scope, but it is a struct\n \n error: cannot find macro `from_utf8` in this scope\n-  --> $DIR/issue-88206.rs:46:5\n+  --> $DIR/issue-88206.rs:49:5\n    |\n LL |     from_utf8!();\n    |     ^^^^^^^^^\n    |\n-note: `from_utf8` is imported here, but it is not a macro\n+note: `from_utf8` is imported here, but it is a function\n   --> $DIR/issue-88206.rs:5:5\n    |\n LL | use std::str::*;\n    |     ^^^^^^^^^^^\n \n error: cannot find attribute `println` in this scope\n-  --> $DIR/issue-88206.rs:40:3\n+  --> $DIR/issue-88206.rs:43:3\n    |\n LL | #[println]\n    |   ^^^^^^^\n    |\n    = note: `println` is in scope, but it is a function-like macro\n \n error: cannot find attribute `from_utf8_unchecked` in this scope\n-  --> $DIR/issue-88206.rs:36:3\n+  --> $DIR/issue-88206.rs:39:3\n    |\n LL | #[from_utf8_unchecked]\n    |   ^^^^^^^^^^^^^^^^^^^\n    |\n-note: `from_utf8_unchecked` is imported here, but it is not an attribute\n+note: `from_utf8_unchecked` is imported here, but it is a function\n   --> $DIR/issue-88206.rs:5:5\n    |\n LL | use std::str::*;\n    |     ^^^^^^^^^^^\n \n error: cannot find attribute `Deserialize` in this scope\n-  --> $DIR/issue-88206.rs:32:3\n+  --> $DIR/issue-88206.rs:35:3\n    |\n LL | #[Deserialize]\n    |   ^^^^^^^^^^^\n    |\n-note: `Deserialize` is imported here, but it is not an attribute\n-  --> $DIR/issue-88206.rs:15:22\n+note: `Deserialize` is imported here, but it is a trait\n+  --> $DIR/issue-88206.rs:17:22\n    |\n-LL | use hey::{Serialize, Deserialize};\n+LL | use hey::{Serialize, Deserialize, X};\n    |                      ^^^^^^^^^^^\n \n error: cannot find derive macro `println` in this scope\n-  --> $DIR/issue-88206.rs:27:10\n+  --> $DIR/issue-88206.rs:30:10\n    |\n LL | #[derive(println)]\n    |          ^^^^^^^\n    |\n    = note: `println` is in scope, but it is a function-like macro\n \n error: cannot find derive macro `from_utf8_mut` in this scope\n-  --> $DIR/issue-88206.rs:23:10\n+  --> $DIR/issue-88206.rs:26:10\n    |\n LL | #[derive(from_utf8_mut)]\n    |          ^^^^^^^^^^^^^\n    |\n-note: `from_utf8_mut` is imported here, but it is not a derive macro\n+note: `from_utf8_mut` is imported here, but it is a function\n   --> $DIR/issue-88206.rs:5:5\n    |\n LL | use std::str::*;\n    |     ^^^^^^^^^^^\n \n error: cannot find derive macro `Serialize` in this scope\n-  --> $DIR/issue-88206.rs:19:10\n+  --> $DIR/issue-88206.rs:22:10\n    |\n LL | #[derive(Serialize)]\n    |          ^^^^^^^^^\n    |\n-note: `Serialize` is imported here, but it is not a derive macro\n-  --> $DIR/issue-88206.rs:15:11\n+note: `Serialize` is imported here, but it is a trait\n+  --> $DIR/issue-88206.rs:17:11\n    |\n-LL | use hey::{Serialize, Deserialize};\n+LL | use hey::{Serialize, Deserialize, X};\n    |           ^^^^^^^^^\n \n-error: aborting due to 10 previous errors\n+error: aborting due to 11 previous errors\n "}, {"sha": "6e875eebb46753a89331a4912d35eca1b994d29f", "filename": "src/test/ui/tool-attributes/tool-attributes-misplaced-1.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-1.stderr?ref=5dea5d7549acbd85f7c2a7b63c8d8aeeb5f6de07", "patch": "@@ -4,31 +4,31 @@ error: cannot find derive macro `rustfmt` in this scope\n LL | #[derive(rustfmt)]\n    |          ^^^^^^^\n    |\n-   = note: `rustfmt` is in scope, but it is not a derive macro\n+   = note: `rustfmt` is in scope, but it is a tool module\n \n error: cannot find derive macro `rustfmt` in this scope\n   --> $DIR/tool-attributes-misplaced-1.rs:4:10\n    |\n LL | #[derive(rustfmt)]\n    |          ^^^^^^^\n    |\n-   = note: `rustfmt` is in scope, but it is not a derive macro\n+   = note: `rustfmt` is in scope, but it is a tool module\n \n error: cannot find attribute `rustfmt` in this scope\n   --> $DIR/tool-attributes-misplaced-1.rs:9:3\n    |\n LL | #[rustfmt]\n    |   ^^^^^^^\n    |\n-   = note: `rustfmt` is in scope, but it is not an attribute\n+   = note: `rustfmt` is in scope, but it is a tool module\n \n error: cannot find macro `rustfmt` in this scope\n   --> $DIR/tool-attributes-misplaced-1.rs:15:5\n    |\n LL |     rustfmt!();\n    |     ^^^^^^^\n    |\n-   = note: `rustfmt` is in scope, but it is not a macro\n+   = note: `rustfmt` is in scope, but it is a tool module\n \n error[E0573]: expected type, found tool module `rustfmt`\n   --> $DIR/tool-attributes-misplaced-1.rs:1:10"}]}