{"sha": "1c27c90119b7e55ce160f39543874b166db7eae6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMjdjOTAxMTliN2U1NWNlMTYwZjM5NTQzODc0YjE2NmRiN2VhZTY=", "commit": {"author": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-25T03:48:47Z"}, "committer": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-27T12:36:06Z"}, "message": "Refactored list::append() to be based on List<T>", "tree": {"sha": "f25d1be1d3dbd9929c90ecc8d905de3891505bb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f25d1be1d3dbd9929c90ecc8d905de3891505bb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c27c90119b7e55ce160f39543874b166db7eae6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c27c90119b7e55ce160f39543874b166db7eae6", "html_url": "https://github.com/rust-lang/rust/commit/1c27c90119b7e55ce160f39543874b166db7eae6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c27c90119b7e55ce160f39543874b166db7eae6/comments", "author": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65f19932309f068e09c7472dc06b3e8856afb6fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/65f19932309f068e09c7472dc06b3e8856afb6fc", "html_url": "https://github.com/rust-lang/rust/commit/65f19932309f068e09c7472dc06b3e8856afb6fc"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "030d7f34e9f66ff8bac7c762421d906143313fb7", "filename": "src/libcollections/list.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1c27c90119b7e55ce160f39543874b166db7eae6/src%2Flibcollections%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c27c90119b7e55ce160f39543874b166db7eae6/src%2Flibcollections%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flist.rs?ref=1c27c90119b7e55ce160f39543874b166db7eae6", "patch": "@@ -86,17 +86,6 @@ impl<T:Eq> List<T> {\n     }\n }\n \n-/// Appends one list to another\n-pub fn append<T:Clone + 'static>(list: @List<T>, other: @List<T>) -> @List<T> {\n-    match *list {\n-      Nil => return other,\n-      Cons(ref head, tail) => {\n-        let rest = append(tail, other);\n-        return @Cons((*head).clone(), rest);\n-      }\n-    }\n-}\n-\n impl<T:'static + Clone> List<T> {\n     /// Create a list from a vector\n     pub fn from_vec(v: &[T]) -> List<T> {\n@@ -105,6 +94,17 @@ impl<T:'static + Clone> List<T> {\n             _ => v.rev_iter().fold(Nil, |tail, value: &T| Cons(value.clone(), @tail))\n         }\n     }\n+\n+    /// Appends one list to another, returning a new list\n+    pub fn append(&self, other: List<T>) -> List<T> {\n+        match other {\n+            Nil => return self.clone(),\n+            _ => match *self {\n+                Nil => return other,\n+                Cons(ref value, tail) => Cons(value.clone(), @tail.append(other))\n+            }\n+        }\n+    }\n }\n \n /*\n@@ -225,7 +225,7 @@ mod tests {\n \n     #[test]\n     fn test_append() {\n-        assert!(@List::from_vec([1,2,3,4])\n-            == list::append(@List::from_vec([1,2]), @List::from_vec([3,4])));\n+        assert_eq!(List::from_vec([1, 2, 3, 4]),\n+                   List::from_vec([1, 2]).append(List::from_vec([3, 4])));\n     }\n }"}]}