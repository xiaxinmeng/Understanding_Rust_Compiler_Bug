{"sha": "f2ebe96c6347b9929756454d26dc9efff93c3925", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZWJlOTZjNjM0N2I5OTI5NzU2NDU0ZDI2ZGM5ZWZmZjkzYzM5MjU=", "commit": {"author": {"name": "Marco Concetto Rudilosso", "email": "marcoconcettorudilosso@gmail.com", "date": "2017-10-11T19:31:03Z"}, "committer": {"name": "Marco Concetto Rudilosso", "email": "marcoconcettorudilosso@gmail.com", "date": "2017-10-21T21:50:20Z"}, "message": "tidier", "tree": {"sha": "2a151fddee619289f72c603f8fa9ef14e8475f3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a151fddee619289f72c603f8fa9ef14e8475f3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2ebe96c6347b9929756454d26dc9efff93c3925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2ebe96c6347b9929756454d26dc9efff93c3925", "html_url": "https://github.com/rust-lang/rust/commit/f2ebe96c6347b9929756454d26dc9efff93c3925", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2ebe96c6347b9929756454d26dc9efff93c3925/comments", "author": {"login": "Maaarcocr", "id": 9624267, "node_id": "MDQ6VXNlcjk2MjQyNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/9624267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maaarcocr", "html_url": "https://github.com/Maaarcocr", "followers_url": "https://api.github.com/users/Maaarcocr/followers", "following_url": "https://api.github.com/users/Maaarcocr/following{/other_user}", "gists_url": "https://api.github.com/users/Maaarcocr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maaarcocr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maaarcocr/subscriptions", "organizations_url": "https://api.github.com/users/Maaarcocr/orgs", "repos_url": "https://api.github.com/users/Maaarcocr/repos", "events_url": "https://api.github.com/users/Maaarcocr/events{/privacy}", "received_events_url": "https://api.github.com/users/Maaarcocr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Maaarcocr", "id": 9624267, "node_id": "MDQ6VXNlcjk2MjQyNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/9624267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maaarcocr", "html_url": "https://github.com/Maaarcocr", "followers_url": "https://api.github.com/users/Maaarcocr/followers", "following_url": "https://api.github.com/users/Maaarcocr/following{/other_user}", "gists_url": "https://api.github.com/users/Maaarcocr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maaarcocr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maaarcocr/subscriptions", "organizations_url": "https://api.github.com/users/Maaarcocr/orgs", "repos_url": "https://api.github.com/users/Maaarcocr/repos", "events_url": "https://api.github.com/users/Maaarcocr/events{/privacy}", "received_events_url": "https://api.github.com/users/Maaarcocr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69f5f0d193bbffd880e6f23edad55ebdfd1474f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f5f0d193bbffd880e6f23edad55ebdfd1474f1", "html_url": "https://github.com/rust-lang/rust/commit/69f5f0d193bbffd880e6f23edad55ebdfd1474f1"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "d4d1a94d7cec918836b009f2dfcf51940b5190ea", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f2ebe96c6347b9929756454d26dc9efff93c3925/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ebe96c6347b9929756454d26dc9efff93c3925/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=f2ebe96c6347b9929756454d26dc9efff93c3925", "patch": "@@ -431,7 +431,9 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n                         // fields are actually safe.\n                         let mut all_phantom = true;\n                         for field in &def.struct_variant().fields {\n-                            let field_ty = cx.trans_normalize_associated_types_in(&field.ty(cx, substs));\n+                            let field_ty = cx.trans_normalize_associated_types_in(\n+                                &field.ty(cx, substs)\n+                            );\n                             let r = self.check_type_for_ffi(cache, field_ty);\n                             match r {\n                                 FfiSafe => {\n@@ -463,7 +465,9 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n \n                         let mut all_phantom = true;\n                         for field in &def.struct_variant().fields {\n-                            let field_ty = cx.trans_normalize_associated_types_in(&field.ty(cx, substs));\n+                            let field_ty = cx.trans_normalize_associated_types_in(\n+                                &field.ty(cx, substs)\n+                            );\n                             let r = self.check_type_for_ffi(cache, field_ty);\n                             match r {\n                                 FfiSafe => {\n@@ -516,7 +520,9 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n                         // Check the contained variants.\n                         for variant in &def.variants {\n                             for field in &variant.fields {\n-                                let arg = cx.trans_normalize_associated_types_in(&field.ty(cx, substs));\n+                                let arg = cx.trans_normalize_associated_types_in(\n+                                    &field.ty(cx, substs)\n+                                );\n                                 let r = self.check_type_for_ffi(cache, arg);\n                                 match r {\n                                     FfiSafe => {}"}]}