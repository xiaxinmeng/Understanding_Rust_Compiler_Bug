{"sha": "7099438e0c2f281629e11b63acfbcdefc22fef76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwOTk0MzhlMGMyZjI4MTYyOWUxMWI2M2FjZmJjZGVmYzIyZmVmNzY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-05T17:49:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-05T17:49:00Z"}, "message": "internal: prepare to store OpQueue results in the queue itself", "tree": {"sha": "3ef41a06b6874a57f26d04eb9e2533088af04147", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ef41a06b6874a57f26d04eb9e2533088af04147"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7099438e0c2f281629e11b63acfbcdefc22fef76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7099438e0c2f281629e11b63acfbcdefc22fef76", "html_url": "https://github.com/rust-lang/rust/commit/7099438e0c2f281629e11b63acfbcdefc22fef76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7099438e0c2f281629e11b63acfbcdefc22fef76/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fab1c066464022613729a6d714dc83b7d698ece5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fab1c066464022613729a6d714dc83b7d698ece5", "html_url": "https://github.com/rust-lang/rust/commit/fab1c066464022613729a6d714dc83b7d698ece5"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "8679c8599617f4c99a5c4cb5fdb638f44aae6f30", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7099438e0c2f281629e11b63acfbcdefc22fef76/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7099438e0c2f281629e11b63acfbcdefc22fef76/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=7099438e0c2f281629e11b63acfbcdefc22fef76", "patch": "@@ -81,10 +81,13 @@ pub(crate) struct GlobalState {\n     pub(crate) status: Status,\n     pub(crate) source_root_config: SourceRootConfig,\n     pub(crate) proc_macro_client: Option<ProcMacroClient>,\n+\n     pub(crate) workspaces: Arc<Vec<ProjectWorkspace>>,\n-    pub(crate) fetch_workspaces_queue: OpQueue<()>,\n+    pub(crate) fetch_workspaces_queue: OpQueue<(), ()>,\n+\n     pub(crate) workspace_build_data: Option<BuildDataResult>,\n-    pub(crate) fetch_build_data_queue: OpQueue<BuildDataCollector>,\n+    pub(crate) fetch_build_data_queue: OpQueue<BuildDataCollector, ()>,\n+\n     latest_requests: Arc<RwLock<LatestRequests>>,\n }\n "}, {"sha": "f71b718bc08751324ec60f6f447933cd78ed53ec", "filename": "crates/rust-analyzer/src/op_queue.rs", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7099438e0c2f281629e11b63acfbcdefc22fef76/crates%2Frust-analyzer%2Fsrc%2Fop_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7099438e0c2f281629e11b63acfbcdefc22fef76/crates%2Frust-analyzer%2Fsrc%2Fop_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fop_queue.rs?ref=7099438e0c2f281629e11b63acfbcdefc22fef76", "patch": "@@ -1,29 +1,37 @@\n-//! Bookkeeping to make sure only one long-running operation is executed.\n+//! Bookkeeping to make sure only one long-running operation is being executed\n+//! at a time.\n \n-pub(crate) struct OpQueue<D> {\n-    op_scheduled: Option<D>,\n+pub(crate) struct OpQueue<Args, Output> {\n+    op_scheduled: Option<Args>,\n     op_in_progress: bool,\n+    last_op_result: Output,\n }\n \n-impl<D> Default for OpQueue<D> {\n+impl<Args, Output: Default> Default for OpQueue<Args, Output> {\n     fn default() -> Self {\n-        Self { op_scheduled: None, op_in_progress: false }\n+        Self { op_scheduled: None, op_in_progress: false, last_op_result: Default::default() }\n     }\n }\n \n-impl<D> OpQueue<D> {\n-    pub(crate) fn request_op(&mut self, data: D) {\n+impl<Args, Output> OpQueue<Args, Output> {\n+    pub(crate) fn request_op(&mut self, data: Args) {\n         self.op_scheduled = Some(data);\n     }\n-    pub(crate) fn should_start_op(&mut self) -> Option<D> {\n+    pub(crate) fn should_start_op(&mut self) -> Option<Args> {\n         if self.op_in_progress {\n             return None;\n         }\n         self.op_in_progress = self.op_scheduled.is_some();\n         self.op_scheduled.take()\n     }\n-    pub(crate) fn op_completed(&mut self) {\n+    pub(crate) fn op_completed(&mut self, result: Output) {\n         assert!(self.op_in_progress);\n         self.op_in_progress = false;\n+        self.last_op_result = result;\n+    }\n+\n+    #[allow(unused)]\n+    pub(crate) fn last_op_result(&self) -> &Output {\n+        &self.last_op_result\n     }\n }"}, {"sha": "d12f891bbce60b2febcfca63141752f8911e4aca", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7099438e0c2f281629e11b63acfbcdefc22fef76/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7099438e0c2f281629e11b63acfbcdefc22fef76/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=7099438e0c2f281629e11b63acfbcdefc22fef76", "patch": "@@ -140,7 +140,7 @@ impl GlobalState {\n         });\n     }\n     pub(crate) fn fetch_build_data_completed(&mut self) {\n-        self.fetch_build_data_queue.op_completed()\n+        self.fetch_build_data_queue.op_completed(())\n     }\n \n     pub(crate) fn fetch_workspaces_request(&mut self) {\n@@ -195,7 +195,7 @@ impl GlobalState {\n         });\n     }\n     pub(crate) fn fetch_workspaces_completed(&mut self) {\n-        self.fetch_workspaces_queue.op_completed()\n+        self.fetch_workspaces_queue.op_completed(())\n     }\n \n     pub(crate) fn switch_workspaces("}]}