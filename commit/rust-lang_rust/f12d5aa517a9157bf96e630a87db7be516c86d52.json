{"sha": "f12d5aa517a9157bf96e630a87db7be516c86d52", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMmQ1YWE1MTdhOTE1N2JmOTZlNjMwYTg3ZGI3YmU1MTZjODZkNTI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-03-08T19:25:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-08T19:25:54Z"}, "message": "Rollup merge of #48292 - topecongiro:from_str-for-path-and-pathbuf, r=alexcrichton\n\nImplement FromStr for PathBuf\n\nCloses #44431.", "tree": {"sha": "84c35c78a4a7393c29cda6f4e9291aec8559437b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84c35c78a4a7393c29cda6f4e9291aec8559437b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f12d5aa517a9157bf96e630a87db7be516c86d52", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaoY5DCRBK7hj4Ov3rIwAAdHIIAJVP+9RpaVCSeydUUSbz/4Tv\nMdboLZhI+USUXdZGJ58C3LH9SCT5kqGSoMD6iz4W+XpChl+tHrUEGWKmMrLIe0m3\ngPZBzl3XITkYcUOMBJZCoGHf91E470R7GoetGYYrlPEqUsZ+cuOzLmJIVLKOSi2d\nUAZf7pJwRXnZQaVV7MZamPsXFiHxpD5geSfHRtWSxMzNmREHwdXAo1a3YM0xxMeG\nZ2ThCIbt8Mk4hqX2f7dHcvVelS8VBGe6x8c3zKFqbDVV/Nq6PjubnDUPNKbbAW7r\nrAWbjcE9xetuukgCMcSgfUSrlbqpJH2+dT4yyR9xhEC3GIU6fmBYUFWeOfMK8KY=\n=joLw\n-----END PGP SIGNATURE-----\n", "payload": "tree 84c35c78a4a7393c29cda6f4e9291aec8559437b\nparent c90f68224b069f5bb2a80e30e2737e4bb17c1466\nparent 05a9acc3b844ff284a3e3d85dde2d9798abfb215\nauthor Manish Goregaokar <manishsmail@gmail.com> 1520537154 -0800\ncommitter GitHub <noreply@github.com> 1520537154 -0800\n\nRollup merge of #48292 - topecongiro:from_str-for-path-and-pathbuf, r=alexcrichton\n\nImplement FromStr for PathBuf\n\nCloses #44431.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f12d5aa517a9157bf96e630a87db7be516c86d52", "html_url": "https://github.com/rust-lang/rust/commit/f12d5aa517a9157bf96e630a87db7be516c86d52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f12d5aa517a9157bf96e630a87db7be516c86d52/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c90f68224b069f5bb2a80e30e2737e4bb17c1466", "url": "https://api.github.com/repos/rust-lang/rust/commits/c90f68224b069f5bb2a80e30e2737e4bb17c1466", "html_url": "https://github.com/rust-lang/rust/commit/c90f68224b069f5bb2a80e30e2737e4bb17c1466"}, {"sha": "05a9acc3b844ff284a3e3d85dde2d9798abfb215", "url": "https://api.github.com/repos/rust-lang/rust/commits/05a9acc3b844ff284a3e3d85dde2d9798abfb215", "html_url": "https://github.com/rust-lang/rust/commit/05a9acc3b844ff284a3e3d85dde2d9798abfb215"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "ec96157547383daa4cbad54658beb78a602fd7bd", "filename": "src/libstd/path.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f12d5aa517a9157bf96e630a87db7be516c86d52/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f12d5aa517a9157bf96e630a87db7be516c86d52/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=f12d5aa517a9157bf96e630a87db7be516c86d52", "patch": "@@ -87,6 +87,7 @@ use io;\n use iter::{self, FusedIterator};\n use ops::{self, Deref};\n use rc::Rc;\n+use str::FromStr;\n use sync::Arc;\n \n use ffi::{OsStr, OsString};\n@@ -1441,6 +1442,32 @@ impl From<String> for PathBuf {\n     }\n }\n \n+/// Error returned from [`PathBuf::from_str`][`from_str`].\n+///\n+/// Note that parsing a path will never fail. This error is just a placeholder\n+/// for implementing `FromStr` for `PathBuf`.\n+///\n+/// [`from_str`]: struct.PathBuf.html#method.from_str\n+#[derive(Debug, Clone, PartialEq, Eq)]\n+#[stable(feature = \"path_from_str\", since = \"1.26.0\")]\n+pub enum ParsePathError {}\n+\n+#[stable(feature = \"path_from_str\", since = \"1.26.0\")]\n+impl fmt::Display for ParsePathError {\n+    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {\n+        match *self {}\n+    }\n+}\n+\n+#[stable(feature = \"path_from_str\", since = \"1.26.0\")]\n+impl FromStr for PathBuf {\n+    type Err = ParsePathError;\n+\n+    fn from_str(s: &str) -> Result<Self, Self::Err> {\n+        Ok(PathBuf::from(s))\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<P: AsRef<Path>> iter::FromIterator<P> for PathBuf {\n     fn from_iter<I: IntoIterator<Item = P>>(iter: I) -> PathBuf {"}]}