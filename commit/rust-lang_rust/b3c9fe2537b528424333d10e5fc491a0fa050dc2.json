{"sha": "b3c9fe2537b528424333d10e5fc491a0fa050dc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzYzlmZTI1MzdiNTI4NDI0MzMzZDEwZTVmYzQ5MWEwZmEwNTBkYzI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-24T01:49:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-24T01:49:58Z"}, "message": "Rollup merge of #52640 - Thomasdezeeuw:fix-localwaker-clone, r=cramertj\n\nForget Waker when cloning LocalWaker\n\nSince NonNull is Copy the inner field of the cloned Waker was copied for\nuse in the new LocalWaker, however this left Waker to be dropped. Which\nmeans that when cloning LocalWaker would also erroneously call drop_raw.\n\nThis change forgets the Waker, rather then dropping it, leaving the\ninner field to be used by the returned LocalWaker.\n\nCloses #52629.", "tree": {"sha": "c31cfe45abe4668f7e08482f046eecb49e023492", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c31cfe45abe4668f7e08482f046eecb49e023492"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3c9fe2537b528424333d10e5fc491a0fa050dc2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbVoXGCRBK7hj4Ov3rIwAAdHIIAEOwRBvTcnMLZ3GWgYG0C7KN\nDOMumXjXZYT/FXPUWyn0WIk0TMC06qnJCTAzUvwUS9E0D2Hy6wxnlrvdE3TugFT7\nByKYPvIV1gW7tQi95TPDsEDRT3ACxy8UzNEhkpE/3NX888qXVAzJLUAX5LXPrVzH\nFGnAzFFiEckmjnGvjbisW1JGkQzSywfpBRAed2KDhm1+K/x6ZpqQlcyWtAdB766V\n/lYmIygvHHy4N/gzWE6DE8jP80Z5MsYP8KW13DeWp7vY53cQxfiaQRZvzV3iP2tR\ne/HbzjaQr/U6CP15qBF3RB4yzMoRMKPeELmYRRimiUCHgDgKTs9vPnq+iRqJEzs=\n=WlSk\n-----END PGP SIGNATURE-----\n", "payload": "tree c31cfe45abe4668f7e08482f046eecb49e023492\nparent 3af372ad574bb952f728f18ac7262f1dc6503864\nparent 89495f3ca33b8a236ee8bc4f89a64a500fe2391f\nauthor kennytm <kennytm@gmail.com> 1532396998 +0800\ncommitter GitHub <noreply@github.com> 1532396998 +0800\n\nRollup merge of #52640 - Thomasdezeeuw:fix-localwaker-clone, r=cramertj\n\nForget Waker when cloning LocalWaker\n\nSince NonNull is Copy the inner field of the cloned Waker was copied for\nuse in the new LocalWaker, however this left Waker to be dropped. Which\nmeans that when cloning LocalWaker would also erroneously call drop_raw.\n\nThis change forgets the Waker, rather then dropping it, leaving the\ninner field to be used by the returned LocalWaker.\n\nCloses #52629.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3c9fe2537b528424333d10e5fc491a0fa050dc2", "html_url": "https://github.com/rust-lang/rust/commit/b3c9fe2537b528424333d10e5fc491a0fa050dc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3c9fe2537b528424333d10e5fc491a0fa050dc2/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3af372ad574bb952f728f18ac7262f1dc6503864", "url": "https://api.github.com/repos/rust-lang/rust/commits/3af372ad574bb952f728f18ac7262f1dc6503864", "html_url": "https://github.com/rust-lang/rust/commit/3af372ad574bb952f728f18ac7262f1dc6503864"}, {"sha": "89495f3ca33b8a236ee8bc4f89a64a500fe2391f", "url": "https://api.github.com/repos/rust-lang/rust/commits/89495f3ca33b8a236ee8bc4f89a64a500fe2391f", "html_url": "https://github.com/rust-lang/rust/commit/89495f3ca33b8a236ee8bc4f89a64a500fe2391f"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "3b901c9aef0ca95bb5c09a6479c813b993da8083", "filename": "src/libcore/task/wake.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3c9fe2537b528424333d10e5fc491a0fa050dc2/src%2Flibcore%2Ftask%2Fwake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c9fe2537b528424333d10e5fc491a0fa050dc2/src%2Flibcore%2Ftask%2Fwake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask%2Fwake.rs?ref=b3c9fe2537b528424333d10e5fc491a0fa050dc2", "patch": "@@ -12,7 +12,7 @@\n             reason = \"futures in libcore are unstable\",\n             issue = \"50547\")]\n \n-use fmt;\n+use {fmt, mem};\n use marker::Unpin;\n use ptr::NonNull;\n \n@@ -166,9 +166,10 @@ impl From<LocalWaker> for Waker {\n impl Clone for LocalWaker {\n     #[inline]\n     fn clone(&self) -> Self {\n-        unsafe {\n-            LocalWaker { inner: self.inner.as_ref().clone_raw().inner }\n-        }\n+        let waker = unsafe { self.inner.as_ref().clone_raw() };\n+        let inner = waker.inner;\n+        mem::forget(waker);\n+        LocalWaker { inner }\n     }\n }\n "}]}