{"sha": "a1066130c07b864a1612c49b4b84dc34d5f113a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExMDY2MTMwYzA3Yjg2NGExNjEyYzQ5YjRiODRkYzM0ZDVmMTEzYTE=", "commit": {"author": {"name": "Andreas Martens", "email": "andreasm@fastmail.fm", "date": "2013-08-18T18:21:23Z"}, "committer": {"name": "Andreas Martens", "email": "andreasm@fastmail.fm", "date": "2013-08-18T18:21:23Z"}, "message": "Fix ICE when calling static and static function pointers\n\nFixes #8588", "tree": {"sha": "636f2e86de5db8b3590bb590fafbe512221b329f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/636f2e86de5db8b3590bb590fafbe512221b329f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1066130c07b864a1612c49b4b84dc34d5f113a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1066130c07b864a1612c49b4b84dc34d5f113a1", "html_url": "https://github.com/rust-lang/rust/commit/a1066130c07b864a1612c49b4b84dc34d5f113a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1066130c07b864a1612c49b4b84dc34d5f113a1/comments", "author": {"login": "bytwise", "id": 4562291, "node_id": "MDQ6VXNlcjQ1NjIyOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4562291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bytwise", "html_url": "https://github.com/bytwise", "followers_url": "https://api.github.com/users/bytwise/followers", "following_url": "https://api.github.com/users/bytwise/following{/other_user}", "gists_url": "https://api.github.com/users/bytwise/gists{/gist_id}", "starred_url": "https://api.github.com/users/bytwise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bytwise/subscriptions", "organizations_url": "https://api.github.com/users/bytwise/orgs", "repos_url": "https://api.github.com/users/bytwise/repos", "events_url": "https://api.github.com/users/bytwise/events{/privacy}", "received_events_url": "https://api.github.com/users/bytwise/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bytwise", "id": 4562291, "node_id": "MDQ6VXNlcjQ1NjIyOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4562291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bytwise", "html_url": "https://github.com/bytwise", "followers_url": "https://api.github.com/users/bytwise/followers", "following_url": "https://api.github.com/users/bytwise/following{/other_user}", "gists_url": "https://api.github.com/users/bytwise/gists{/gist_id}", "starred_url": "https://api.github.com/users/bytwise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bytwise/subscriptions", "organizations_url": "https://api.github.com/users/bytwise/orgs", "repos_url": "https://api.github.com/users/bytwise/repos", "events_url": "https://api.github.com/users/bytwise/events{/privacy}", "received_events_url": "https://api.github.com/users/bytwise/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7503396070a8d69040e9998faf667c29c6a6f2cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7503396070a8d69040e9998faf667c29c6a6f2cb", "html_url": "https://github.com/rust-lang/rust/commit/7503396070a8d69040e9998faf667c29c6a6f2cb"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "5072c879e2bdd21c31c417cd6598ced6bf242ead", "filename": "src/librustc/middle/trans/callee.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a1066130c07b864a1612c49b4b84dc34d5f113a1/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1066130c07b864a1612c49b4b84dc34d5f113a1/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs?ref=a1066130c07b864a1612c49b4b84dc34d5f113a1", "patch": "@@ -132,6 +132,7 @@ pub fn trans(bcx: @mut Block, expr: @ast::expr) -> Callee {\n             ast::def_struct(def_id) => {\n                 fn_callee(bcx, trans_fn_ref(bcx, def_id, ref_expr.id))\n             }\n+            ast::def_static(*) |\n             ast::def_arg(*) |\n             ast::def_local(*) |\n             ast::def_binding(*) |\n@@ -140,7 +141,7 @@ pub fn trans(bcx: @mut Block, expr: @ast::expr) -> Callee {\n                 datum_callee(bcx, ref_expr)\n             }\n             ast::def_mod(*) | ast::def_foreign_mod(*) | ast::def_trait(*) |\n-            ast::def_static(*) | ast::def_ty(*) | ast::def_prim_ty(*) |\n+            ast::def_ty(*) | ast::def_prim_ty(*) |\n             ast::def_use(*) | ast::def_typaram_binder(*) |\n             ast::def_region(*) | ast::def_label(*) | ast::def_ty_param(*) |\n             ast::def_self_ty(*) | ast::def_method(*) => {"}, {"sha": "0bb8c4e2cc3989c71eac1bf2e59f7b4b75c57294", "filename": "src/test/run-pass/static-function-pointer.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a1066130c07b864a1612c49b4b84dc34d5f113a1/src%2Ftest%2Frun-pass%2Fstatic-function-pointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1066130c07b864a1612c49b4b84dc34d5f113a1/src%2Ftest%2Frun-pass%2Fstatic-function-pointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-function-pointer.rs?ref=a1066130c07b864a1612c49b4b84dc34d5f113a1", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn f(x: int) -> int { x }\n+\n+static F: extern fn(int) -> int = f;\n+static mut G: extern fn(int) -> int = f;\n+\n+fn main() {\n+    F(42);\n+    unsafe { G(7); }\n+}"}]}