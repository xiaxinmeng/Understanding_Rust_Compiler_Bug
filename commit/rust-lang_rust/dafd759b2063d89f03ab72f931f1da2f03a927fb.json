{"sha": "dafd759b2063d89f03ab72f931f1da2f03a927fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZmQ3NTliMjA2M2Q4OWYwM2FiNzJmOTMxZjFkYTJmMDNhOTI3ZmI=", "commit": {"author": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-01-30T04:23:35Z"}, "committer": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-01-31T04:21:16Z"}, "message": "Repair RIMOV damage to libstd", "tree": {"sha": "013e740c413cd0286121871a8a2f70cd69f8d614", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/013e740c413cd0286121871a8a2f70cd69f8d614"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dafd759b2063d89f03ab72f931f1da2f03a927fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dafd759b2063d89f03ab72f931f1da2f03a927fb", "html_url": "https://github.com/rust-lang/rust/commit/dafd759b2063d89f03ab72f931f1da2f03a927fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dafd759b2063d89f03ab72f931f1da2f03a927fb/comments", "author": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e55fe875855a39ed87584d155d26c8c54d3adff", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e55fe875855a39ed87584d155d26c8c54d3adff", "html_url": "https://github.com/rust-lang/rust/commit/5e55fe875855a39ed87584d155d26c8c54d3adff"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "271ee5923ac037d38b25b01abb55cc595517acec", "filename": "src/libstd/bitv.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dafd759b2063d89f03ab72f931f1da2f03a927fb/src%2Flibstd%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dafd759b2063d89f03ab72f931f1da2f03a927fb/src%2Flibstd%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbitv.rs?ref=dafd759b2063d89f03ab72f931f1da2f03a927fb", "patch": "@@ -233,7 +233,7 @@ pub fn Bitv (nbits: uint, init: bool) -> Bitv {\n         let nelems = nbits/uint_bits +\n                      if nbits % uint_bits == 0 {0} else {1};\n         let elem = if init {!0} else {0};\n-        let s = cast_to_mut(from_elem(nelems, elem));\n+        let s = from_elem(nelems, elem);\n         Big(~BigBitv(move s))\n     };\n     Bitv {rep: move rep, nbits: nbits}\n@@ -518,7 +518,7 @@ impl Bitv: Clone {\n             Bitv{nbits: self.nbits, rep: Small(~SmallBitv{bits: b.bits})}\n           }\n           Big(ref b) => {\n-            let st = cast_to_mut(from_elem(self.nbits / uint_bits + 1, 0));\n+            let mut st = from_elem(self.nbits / uint_bits + 1, 0);\n             let len = st.len();\n             for uint::range(0, len) |i| { st[i] = b.storage[i]; };\n             Bitv{nbits: self.nbits, rep: Big(~BigBitv{storage: move st})}"}, {"sha": "8087e7fcd7cc58539c5144df66538f7222ac1faa", "filename": "src/libstd/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dafd759b2063d89f03ab72f931f1da2f03a927fb/src%2Flibstd%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dafd759b2063d89f03ab72f931f1da2f03a927fb/src%2Flibstd%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmap.rs?ref=dafd759b2063d89f03ab72f931f1da2f03a927fb", "patch": "@@ -209,7 +209,7 @@ pub mod chained {\n         fn rehash() {\n             let n_old_chains = self.chains.len();\n             let n_new_chains: uint = uint::next_power_of_two(n_old_chains+1u);\n-            let new_chains = chains(n_new_chains);\n+            let mut new_chains = chains(n_new_chains);\n             for self.each_entry |entry| {\n                 let idx = entry.hash % n_new_chains;\n                 entry.next = new_chains[idx];\n@@ -459,7 +459,7 @@ pub mod chained {\n     }\n \n     fn chains<K,V>(nchains: uint) -> ~[Option<@Entry<K,V>>] {\n-        vec::cast_to_mut(vec::from_elem(nchains, None))\n+        vec::from_elem(nchains, None)\n     }\n \n     pub fn mk<K:Eq IterBytes Hash, V: Copy>() -> T<K,V> {"}, {"sha": "fae6ae4382f2853ca7967d73e17c37c62dbe9a08", "filename": "src/libstd/rope.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dafd759b2063d89f03ab72f931f1da2f03a927fb/src%2Flibstd%2Frope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dafd759b2063d89f03ab72f931f1da2f03a927fb/src%2Flibstd%2Frope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frope.rs?ref=dafd759b2063d89f03ab72f931f1da2f03a927fb", "patch": "@@ -1168,8 +1168,7 @@ pub mod node {\n         }\n \n         pub fn start(node: @Node) -> T {\n-            let stack = vec::cast_to_mut(\n-                vec::from_elem(height(node)+1u, node));\n+            let stack = vec::from_elem(height(node)+1u, node);\n             T {\n                 stack: stack,\n                 stackpos:  0,"}, {"sha": "c2599864c90c14ce630bc733621ab66b449d46c7", "filename": "src/libstd/sha1.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dafd759b2063d89f03ab72f931f1da2f03a927fb/src%2Flibstd%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dafd759b2063d89f03ab72f931f1da2f03a927fb/src%2Flibstd%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsha1.rs?ref=dafd759b2063d89f03ab72f931f1da2f03a927fb", "patch": "@@ -67,13 +67,13 @@ const k3: u32 = 0xCA62C1D6u32;\n /// Construct a `sha` object\n pub fn sha1() -> Sha1 {\n     type Sha1State =\n-        {h: ~[u32],\n+        {h: ~[mut u32],\n          mut len_low: u32,\n          mut len_high: u32,\n-         mut msg_block: ~[u8],\n+         msg_block: ~[mut u8],\n          mut msg_block_idx: uint,\n          mut computed: bool,\n-         work_buf: @~[u32]};\n+         work_buf: @~[mut u32]};\n \n     fn add_input(st: &Sha1State, msg: &[const u8]) {\n         assert (!st.computed);"}, {"sha": "c2eaef7a51caeb88605fd54e1137509d8dc62877", "filename": "src/libstd/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dafd759b2063d89f03ab72f931f1da2f03a927fb/src%2Flibstd%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dafd759b2063d89f03ab72f931f1da2f03a927fb/src%2Flibstd%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync.rs?ref=dafd759b2063d89f03ab72f931f1da2f03a927fb", "patch": "@@ -97,7 +97,7 @@ fn new_sem_and_signal(count: int, num_condvars: uint)\n     for num_condvars.times {\n         queues.push(new_waitqueue());\n     }\n-    new_sem(count, vec::cast_to_mut(move queues))\n+    new_sem(count, queues)\n }\n \n #[doc(hidden)]"}]}