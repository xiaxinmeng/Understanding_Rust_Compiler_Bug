{"sha": "5290c6c8f158004b19fa38aab36ac29511ec1a8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyOTBjNmM4ZjE1ODAwNGIxOWZhMzhhYWIzNmFjMjk1MTFlYzFhOGE=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-30T04:45:49Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-08-13T00:15:43Z"}, "message": "Allow overriding build triple via flag.\n\nWe first check the configuration, then passed parameters (--build), then\nfall back to the auto-detection that bootstrap.py does.\n\nFixes #39673.", "tree": {"sha": "1583729dccace13e96b448045e5689bb07d447d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1583729dccace13e96b448045e5689bb07d447d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5290c6c8f158004b19fa38aab36ac29511ec1a8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5290c6c8f158004b19fa38aab36ac29511ec1a8a", "html_url": "https://github.com/rust-lang/rust/commit/5290c6c8f158004b19fa38aab36ac29511ec1a8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5290c6c8f158004b19fa38aab36ac29511ec1a8a/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84d9a6ee8cb40ea3dc390b8f4e2862289cb14f7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/84d9a6ee8cb40ea3dc390b8f4e2862289cb14f7e", "html_url": "https://github.com/rust-lang/rust/commit/84d9a6ee8cb40ea3dc390b8f4e2862289cb14f7e"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "008dbbe891422edc240e39c8283826c892d65b5a", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5290c6c8f158004b19fa38aab36ac29511ec1a8a/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5290c6c8f158004b19fa38aab36ac29511ec1a8a/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=5290c6c8f158004b19fa38aab36ac29511ec1a8a", "patch": "@@ -290,7 +290,6 @@ impl Config {\n         config.docs = true;\n         config.rust_rpath = true;\n         config.rust_codegen_units = 1;\n-        config.build = flags.build;\n         config.channel = \"dev\".to_string();\n         config.codegen_tests = true;\n         config.rust_dist_src = true;\n@@ -319,6 +318,11 @@ impl Config {\n \n         let build = toml.build.clone().unwrap_or(Build::default());\n         set(&mut config.build, build.build.clone().map(|x| INTERNER.intern_string(x)));\n+        set(&mut config.build, flags.build);\n+        if config.build.is_empty() {\n+            // set by bootstrap.py\n+            config.build = INTERNER.intern_str(&env::var(\"BUILD\").unwrap());\n+        }\n         config.hosts.push(config.build.clone());\n         for host in build.host.iter() {\n             let host = INTERNER.intern_str(host);"}, {"sha": "a9cefb65f4963af4b6c4979ee7856e2ddd1fd5fd", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5290c6c8f158004b19fa38aab36ac29511ec1a8a/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5290c6c8f158004b19fa38aab36ac29511ec1a8a/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=5290c6c8f158004b19fa38aab36ac29511ec1a8a", "patch": "@@ -33,7 +33,7 @@ pub struct Flags {\n     pub on_fail: Option<String>,\n     pub stage: Option<u32>,\n     pub keep_stage: Option<u32>,\n-    pub build: Interned<String>,\n+    pub build: Option<Interned<String>>,\n \n     pub host: Vec<Interned<String>>,\n     pub target: Vec<Interned<String>>,\n@@ -327,9 +327,7 @@ Arguments:\n             stage: stage,\n             on_fail: matches.opt_str(\"on-fail\"),\n             keep_stage: matches.opt_str(\"keep-stage\").map(|j| j.parse().unwrap()),\n-            build: INTERNER.intern_string(matches.opt_str(\"build\").unwrap_or_else(|| {\n-                env::var(\"BUILD\").unwrap()\n-            })),\n+            build: matches.opt_str(\"build\").map(|s| INTERNER.intern_string(s)),\n             host: split(matches.opt_strs(\"host\"))\n                 .into_iter().map(|x| INTERNER.intern_string(x)).collect::<Vec<_>>(),\n             target: split(matches.opt_strs(\"target\"))"}]}