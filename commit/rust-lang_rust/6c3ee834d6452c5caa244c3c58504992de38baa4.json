{"sha": "6c3ee834d6452c5caa244c3c58504992de38baa4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjM2VlODM0ZDY0NTJjNWNhYTI0NGMzYzU4NTA0OTkyZGUzOGJhYTQ=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-01T14:37:52Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-04T16:18:30Z"}, "message": "Simplify solution_from_chalk", "tree": {"sha": "5e5e12fab0ab188ba1893291907fc5c5da66a5fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e5e12fab0ab188ba1893291907fc5c5da66a5fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c3ee834d6452c5caa244c3c58504992de38baa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c3ee834d6452c5caa244c3c58504992de38baa4", "html_url": "https://github.com/rust-lang/rust/commit/6c3ee834d6452c5caa244c3c58504992de38baa4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c3ee834d6452c5caa244c3c58504992de38baa4/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9c0c2abb79769852119dc9a595e63ee74eeba03", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9c0c2abb79769852119dc9a595e63ee74eeba03", "html_url": "https://github.com/rust-lang/rust/commit/b9c0c2abb79769852119dc9a595e63ee74eeba03"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "e1193c402a31295f91ecd19efa18c0ef77d86bdd", "filename": "crates/ra_hir/src/ty/traits.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6c3ee834d6452c5caa244c3c58504992de38baa4/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c3ee834d6452c5caa244c3c58504992de38baa4/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs?ref=6c3ee834d6452c5caa244c3c58504992de38baa4", "patch": "@@ -348,13 +348,13 @@ pub(crate) fn implements(\n     // relevant for our use cases?)\n     let u_canonical = chalk_ir::UCanonical { canonical, universes: 1 };\n     let solution = solve(db, krate, &u_canonical);\n-    solution_from_chalk(db, solution)\n+    solution.map(|solution| solution_from_chalk(db, solution))\n }\n \n fn solution_from_chalk(\n     db: &impl HirDatabase,\n-    solution: Option<chalk_solve::Solution>,\n-) -> Option<Solution> {\n+    solution: chalk_solve::Solution,\n+) -> Solution {\n     let convert_subst = |subst: chalk_ir::Canonical<chalk_ir::Substitution>| {\n         let value = subst\n             .value\n@@ -372,23 +372,22 @@ fn solution_from_chalk(\n         SolutionVariables(result)\n     };\n     match solution {\n-        Some(chalk_solve::Solution::Unique(constr_subst)) => {\n+        chalk_solve::Solution::Unique(constr_subst) => {\n             let subst = chalk_ir::Canonical {\n                 value: constr_subst.value.subst,\n                 binders: constr_subst.binders,\n             };\n-            Some(Solution::Unique(convert_subst(subst)))\n+            Solution::Unique(convert_subst(subst))\n         }\n-        Some(chalk_solve::Solution::Ambig(chalk_solve::Guidance::Definite(subst))) => {\n-            Some(Solution::Ambig(Guidance::Definite(convert_subst(subst))))\n+        chalk_solve::Solution::Ambig(chalk_solve::Guidance::Definite(subst)) => {\n+            Solution::Ambig(Guidance::Definite(convert_subst(subst)))\n         }\n-        Some(chalk_solve::Solution::Ambig(chalk_solve::Guidance::Suggested(subst))) => {\n-            Some(Solution::Ambig(Guidance::Suggested(convert_subst(subst))))\n+        chalk_solve::Solution::Ambig(chalk_solve::Guidance::Suggested(subst)) => {\n+            Solution::Ambig(Guidance::Suggested(convert_subst(subst)))\n         }\n-        Some(chalk_solve::Solution::Ambig(chalk_solve::Guidance::Unknown)) => {\n-            Some(Solution::Ambig(Guidance::Unknown))\n+        chalk_solve::Solution::Ambig(chalk_solve::Guidance::Unknown) => {\n+            Solution::Ambig(Guidance::Unknown)\n         }\n-        None => None,\n     }\n }\n "}]}